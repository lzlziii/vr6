using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using FIMSpace.FLook;
using FIMSpace.FTools;
using GE_Core;
using Gestrument.Timeline;
using Il2CppDummyDll;
using Microsoft.CodeAnalysis;
using Neat.Utilities.Collections;
using NeatAudio;
using NeatCorp;
using NeatCorp.Achievements;
using NeatCorp.Animation;
using NeatCorp.Animation.Potpots;
using NeatCorp.Attributes;
using NeatCorp.Core;
using NeatCorp.Creatures;
using NeatCorp.Creatures.Birds;
using NeatCorp.Creatures.Breeding;
using NeatCorp.Creatures.Breeding.ColorSet;
using NeatCorp.Creatures.Breeding.Expression;
using NeatCorp.Creatures.Breeding.Growth;
using NeatCorp.Creatures.Breeding.Pattern;
using NeatCorp.Creatures.Gifting;
using NeatCorp.Creatures.Serialization;
using NeatCorp.Creatures.Whale;
using NeatCorp.Environment.Islands;
using NeatCorp.Environment.Plants;
using NeatCorp.Environment.Teleportation;
using NeatCorp.Events;
using NeatCorp.Events.Animation;
using NeatCorp.Events.Collection;
using NeatCorp.Events.Crystals;
using NeatCorp.Events.Environment;
using NeatCorp.Events.Gardening.Compost;
using NeatCorp.Events.Glove;
using NeatCorp.Events.Glove.GemEvents;
using NeatCorp.Events.PolaroidEvents;
using NeatCorp.Events.Puzzles;
using NeatCorp.Events.Settings;
using NeatCorp.Fishing;
using NeatCorp.Gardening;
using NeatCorp.Gardening.Compost;
using NeatCorp.Home;
using NeatCorp.Interaction.Crystals;
using NeatCorp.Interaction.Instrument;
using NeatCorp.Interaction.Tools.WateringCan;
using NeatCorp.Interaction.Water;
using NeatCorp.Loading;
using NeatCorp.Merchant;
using NeatCorp.Merchant.Trading;
using NeatCorp.Player.Glove;
using NeatCorp.Player.Glove.Ability;
using NeatCorp.Player.Glove.Gems;
using NeatCorp.Player.MovingPlafrom;
using NeatCorp.Polaroid;
using NeatCorp.Puzzles.Coral.Events;
using NeatCorp.Puzzles.Resonation;
using NeatCorp.Quests.Boat;
using NeatCorp.Quests.Trading;
using NeatCorp.Settings;
using NeatCorp.Text.Credits;
using NeatCorp.UI;
using NeatCorp.UI.Collection;
using NeatCorp.Utility;
using NeatCorp.Utility.Phsyics;
using Newtonsoft.Json.Linq;
using Pico.Platform;
using Pico.Platform.Models;
using TMPro;
using Unity.Collections;
using Unity.Collections.LowLevel.Unsafe;
using Unity.Jobs;
using Unity.Mathematics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceLocations;
using UnityEngine.ResourceManagement.ResourceProviders;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA280", Offset = "0x9FA280")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000001")]
		[Address(RVA = "0xD08534", Offset = "0xD08534", VA = "0xD08534")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA2B8", Offset = "0x9FA2B8")]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class IsUnmanagedAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0xCA5840", Offset = "0xCA5840", VA = "0xCA5840")]
		public IsUnmanagedAttribute()
		{
		}
	}
}
[Token(Token = "0x2000004")]
public class AudioMusicalPitch : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int midiAudioPitch;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int midiAudioTarget;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audioSource;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1003D00", Offset = "0x1003D00", VA = "0x1003D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1003DB8", Offset = "0x1003DB8", VA = "0x1003DB8")]
	public void PitchAndPlay(float midiPitch, double offset = 0.0)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1003E84", Offset = "0x1003E84", VA = "0x1003E84")]
	public AudioMusicalPitch()
	{
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FA2F0", Offset = "0x9FA2F0")]
public class FastSSAO : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDC4C", Offset = "0x9FDC4C")]
	public float Intensity;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDC64", Offset = "0x9FDC64")]
	public float BlurAmount;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDC7C", Offset = "0x9FDC7C")]
	public float Radius;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDC94", Offset = "0x9FDC94")]
	public float Area;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FastMode;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DepthTextureMode previousDepthMode;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int blurTexString;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int instensityString;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int blurAmountString;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int radiusString;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int areaString;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly string fastKeyword;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x137A2C4", Offset = "0x137A2C4", VA = "0x137A2C4")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x137A3B8", Offset = "0x137A3B8", VA = "0x137A3B8")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x137A714", Offset = "0x137A714", VA = "0x137A714")]
	public FastSSAO()
	{
	}
}
[Token(Token = "0x2000006")]
public class AudioTester : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA354", Offset = "0x9FA354")]
	private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioTester <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000012")]
			[Address(RVA = "0x100424C", Offset = "0x100424C", VA = "0x100424C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000014")]
			[Address(RVA = "0x10042B4", Offset = "0x10042B4", VA = "0x10042B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x1003F68", Offset = "0x1003F68", VA = "0x1003F68")]
		[DebuggerHidden]
		public <Start>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x10040A8", Offset = "0x10040A8", VA = "0x10040A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000011")]
		[Address(RVA = "0x10040AC", Offset = "0x10040AC", VA = "0x10040AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x1004254", Offset = "0x1004254", VA = "0x1004254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA364", Offset = "0x9FA364")]
	private sealed class <playThing>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioTester <>4__this;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000018")]
			[Address(RVA = "0x1004564", Offset = "0x1004564", VA = "0x1004564", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600001A")]
			[Address(RVA = "0x10045CC", Offset = "0x10045CC", VA = "0x10045CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x1004010", Offset = "0x1004010", VA = "0x1004010")]
		[DebuggerHidden]
		public <playThing>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000016")]
		[Address(RVA = "0x10042BC", Offset = "0x10042BC", VA = "0x10042BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000017")]
		[Address(RVA = "0x10042C0", Offset = "0x10042C0", VA = "0x10042C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x100456C", Offset = "0x100456C", VA = "0x100456C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delay;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float offset;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue cue;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue cue2;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool flip;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool autoPlayOrParameter;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float number;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] clips;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform follower;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int PARAMETER;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NeatAudioPlayer nap;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1003E8C", Offset = "0x1003E8C", VA = "0x1003E8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1003EEC", Offset = "0x1003EEC", VA = "0x1003EEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0D9A0", Offset = "0xA0D9A0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1003F94", Offset = "0x1003F94", VA = "0x1003F94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DA04", Offset = "0xA0DA04")]
	private IEnumerator playThing()
	{
		return null;
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x100403C", Offset = "0x100403C", VA = "0x100403C")]
	public AudioTester()
	{
	}
}
[Token(Token = "0x2000009")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FA374", Offset = "0x9FA374")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0xC36F10", Offset = "0xC36F10", VA = "0xC36F10")]
	private void Start()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xC36F14", Offset = "0xC36F14", VA = "0xC36F14")]
	private void Set()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xC36FA0", Offset = "0xC36FA0", VA = "0xC36FA0")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FA3D8", Offset = "0x9FA3D8")]
public class SoftNormalsToVertexColor : MonoBehaviour
{
	[Token(Token = "0x200000B")]
	public enum Method
	{
		[Token(Token = "0x4000027")]
		Simple,
		[Token(Token = "0x4000028")]
		AngularDeviation
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Method method;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool generateOnAwake;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool generateNow;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xCE1A48", Offset = "0xCE1A48", VA = "0xCE1A48")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xCE1C34", Offset = "0xCE1C34", VA = "0xCE1C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xCE1A5C", Offset = "0xCE1A5C", VA = "0xCE1A5C")]
	private void TryGenerate()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xCE1C44", Offset = "0xCE1C44", VA = "0xCE1C44")]
	private void Generate(Mesh m)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xCE260C", Offset = "0xCE260C", VA = "0xCE260C")]
	public SoftNormalsToVertexColor()
	{
	}
}
[Token(Token = "0x200000C")]
public static class FEasing
{
	[Token(Token = "0x6000023")]
	[Address(RVA = "0x137EDA0", Offset = "0x137EDA0", VA = "0x137EDA0")]
	public static float EaseOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x137EDC8", Offset = "0x137EDC8", VA = "0x137EDC8")]
	public static float EaseInOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x137EE20", Offset = "0x137EE20", VA = "0x137EE20")]
	public static float EaseOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}
}
[Token(Token = "0x200000D")]
public interface IFHierarchyIcon
{
}
[Token(Token = "0x200000E")]
public class FPD_FixedCurveWindowAttribute : PropertyAttribute
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float StartTime;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float EndTime;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float StartValue;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float EndValue;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1379818", Offset = "0x1379818", VA = "0x1379818")]
	public FPD_FixedCurveWindowAttribute(float startTime, float startValue, float endTime, float endValue, float r = 0f, float g = 1f, float b = 1f, float a = 1f)
	{
	}
}
[Token(Token = "0x200000F")]
public class FPD_HeaderAttribute : PropertyAttribute
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string HeaderText;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float UpperPadding;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BottomPadding;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Height;

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x13798B4", Offset = "0x13798B4", VA = "0x13798B4")]
	public FPD_HeaderAttribute(string headerText, float upperPadding = 3f, float bottomPadding = 3f, int addHeight = 2)
	{
	}
}
[Token(Token = "0x2000010")]
public class FPD_LayersAttribute : PropertyAttribute
{
	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1379914", Offset = "0x1379914", VA = "0x1379914")]
	public FPD_LayersAttribute()
	{
	}
}
[Token(Token = "0x2000011")]
public class FPD_WidthAttribute : PropertyAttribute
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float LabelWidth;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1379A18", Offset = "0x1379A18", VA = "0x1379A18")]
	public FPD_WidthAttribute(int labelWidth)
	{
	}
}
[Token(Token = "0x2000012")]
public class FPD_PercentageAttribute : PropertyAttribute
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float Min;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float Max;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string Suffix;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool from0to100;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public readonly bool editableValue;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public readonly bool basic;

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x137991C", Offset = "0x137991C", VA = "0x137991C")]
	public FPD_PercentageAttribute(float min, float max, bool goOver100Perc = false, bool editable = true, string suffix = "%", bool basicFromTo = false)
	{
	}
}
[Token(Token = "0x2000013")]
public class FPD_SuffixAttribute : PropertyAttribute
{
	[Token(Token = "0x2000014")]
	public enum SuffixMode
	{
		[Token(Token = "0x4000040")]
		From0to100,
		[Token(Token = "0x4000041")]
		PercentageUnclamped,
		[Token(Token = "0x4000042")]
		FromMinToMax,
		[Token(Token = "0x4000043")]
		FromMinToMaxRounded
	}

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public readonly float Min;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly float Max;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public readonly SuffixMode Mode;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string Suffix;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public readonly bool editableValue;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public readonly int widerField;

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x13799A0", Offset = "0x13799A0", VA = "0x13799A0")]
	public FPD_SuffixAttribute(float min, float max, SuffixMode mode = SuffixMode.From0to100, string suffix = "%", bool editable = true, int wider = 0)
	{
	}
}
[Token(Token = "0x2000015")]
public class GestrumentCore : MonoBehaviour
{
	[Token(Token = "0x2000016")]
	public class AudioEvent
	{
		[Token(Token = "0x2000017")]
		public enum Type
		{
			[Token(Token = "0x4000054")]
			NoteOn,
			[Token(Token = "0x4000055")]
			NoteOff,
			[Token(Token = "0x4000056")]
			CC
		}

		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GestrumentCore core;

		[Token(Token = "0x400004A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int instrument;

		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double beat;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int voice;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float pitch;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float velocity;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int control;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int index;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public double newValue;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public double oldValue;

		[Token(Token = "0x6000032")]
		[Address(RVA = "0xDFCEE8", Offset = "0xDFCEE8", VA = "0xDFCEE8")]
		public AudioEvent(GestrumentCore core, int instrument, int voice, double beat, float pitch, float velocity)
		{
		}

		[Token(Token = "0x6000033")]
		[Address(RVA = "0xDFD024", Offset = "0xDFD024", VA = "0xDFD024")]
		public AudioEvent(GestrumentCore core, int instrument, int voice, double beat)
		{
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0xDFD158", Offset = "0xDFD158", VA = "0xDFD158")]
		public AudioEvent(GestrumentCore core, int instrument, int control, int index, double newValue, double oldValue)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000018")]
	public class ConfigEventUnity : UnityEvent<GestrumentCore>
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xDFD3A4", Offset = "0xDFD3A4", VA = "0xDFD3A4")]
		public ConfigEventUnity()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000019")]
	public class AudioEventUnity : UnityEvent<AudioEvent>
	{
		[Token(Token = "0x6000036")]
		[Address(RVA = "0xDFD354", Offset = "0xDFD354", VA = "0xDFD354")]
		public AudioEventUnity()
		{
		}
	}

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DebugOutput;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigEventUnity OnConfigEvent;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEventUnity OnAudioEvent;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GE_Engine engine;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xDFCE14", Offset = "0xDFCE14", VA = "0xDFCE14")]
	private void _OnNoteOn(GE_Engine engine, int instrument, int voice, double beat, float pitch, float velocity)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xDFCF60", Offset = "0xDFCF60", VA = "0xDFCF60")]
	private void _OnNoteOff(GE_Engine engine, int instrument, int voice, double beat)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xDFD08C", Offset = "0xDFD08C", VA = "0xDFD08C")]
	private void _OnControlChange(GE_Engine engine, int instrument, int control, int index, double newValue, double oldValue)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xDFD1D0", Offset = "0xDFD1D0", VA = "0xDFD1D0")]
	public void Render(double sampleRate, int numSamples)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xDFD1E4", Offset = "0xDFD1E4", VA = "0xDFD1E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xDFD344", Offset = "0xDFD344", VA = "0xDFD344")]
	public GestrumentCore()
	{
	}
}
[Serializable]
[Token(Token = "0x200001A")]
public class Cursors
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool gateOn;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDCAC", Offset = "0x9FDCAC")]
	public double Xpos;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDCC4", Offset = "0x9FDCC4")]
	public double Ypos;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDCDC", Offset = "0x9FDCDC")]
	public double Zpos;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xC340D8", Offset = "0xC340D8", VA = "0xC340D8")]
	public Cursors()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class InstrumentSettings
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int cursor;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int output;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool legato;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GE_Engine.PulsePlayMode pulsePlayMode;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GE_Engine.PulseGenType PulseGen;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GE_Engine.PitchGenType PitchGen;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string midiFileName;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool[] noteValues;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xE02F14", Offset = "0xE02F14", VA = "0xE02F14")]
	public InstrumentSettings()
	{
	}
}
[Token(Token = "0x200001C")]
public class GestrumentOrchestrator : MonoBehaviour
{
	[Token(Token = "0x200001D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA43C", Offset = "0x9FA43C")]
	private sealed class <WaitForStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentOrchestrator <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000049")]
			[Address(RVA = "0xE01C98", Offset = "0xE01C98", VA = "0xE01C98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600004B")]
			[Address(RVA = "0xE01D00", Offset = "0xE01D00", VA = "0xE01D00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0xDFFCEC", Offset = "0xDFFCEC", VA = "0xDFFCEC")]
		[DebuggerHidden]
		public <WaitForStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0xE01BD8", Offset = "0xE01BD8", VA = "0xE01BD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0xE01BDC", Offset = "0xE01BDC", VA = "0xE01BDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600004A")]
		[Address(RVA = "0xE01CA0", Offset = "0xE01CA0", VA = "0xE01CA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public GestrumentCore core;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestrumentSettings settings;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int cursorCount;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int instrumentCount;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int totalPolyphony;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] instruments;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] manualInstrumentRouting;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<InstrumentSettings> instrumentSettings;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FDD04", Offset = "0x9FDD04")]
	public bool autoPlayPreset;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEngine.Object preset;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string presetName;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool AutoLoadInstrumentsBasedOnName;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FDD3C", Offset = "0x9FDD3C")]
	public bool autoPlayMidiFiles;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.Object[] midiFile;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string[] midiFileName;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int[] manualMidiRouting;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDD74", Offset = "0x9FDD74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FDD74", Offset = "0x9FDD74")]
	public List<double> sliders;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Cursors> cursors;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string pathToPreset;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private double oldDspTime;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool waitforstart;

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xDFF9F8", Offset = "0xDFF9F8", VA = "0xDFF9F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xDFFC70", Offset = "0xDFFC70", VA = "0xDFFC70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DB08", Offset = "0xA0DB08")]
	private IEnumerator WaitForStart()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xDFFD18", Offset = "0xDFFD18", VA = "0xDFFD18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xDFFF6C", Offset = "0xDFFF6C", VA = "0xDFFF6C")]
	public void LoadSettingsFileVars()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xE00160", Offset = "0xE00160", VA = "0xE00160")]
	public void LoadSettingsFileSetup()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xE004C4", Offset = "0xE004C4", VA = "0xE004C4")]
	public void ProcessConfigEvent(GestrumentCore core)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xE00A20", Offset = "0xE00A20", VA = "0xE00A20")]
	public void ProcessAudioEvent(GestrumentCore.AudioEvent engineEvent)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xE00D34", Offset = "0xE00D34", VA = "0xE00D34")]
	public void SetupMidiFiles()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xE0068C", Offset = "0xE0068C", VA = "0xE0068C")]
	public void LoadDefaultPreset()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xE0105C", Offset = "0xE0105C", VA = "0xE0105C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xE00A6C", Offset = "0xE00A6C", VA = "0xE00A6C")]
	private bool StartVoice(int voice, float pitch, float velocity, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xE00BDC", Offset = "0xE00BDC", VA = "0xE00BDC")]
	private bool StopVoice(int voice, float pitch, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xE01B0C", Offset = "0xE01B0C", VA = "0xE01B0C")]
	public GestrumentOrchestrator()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class NoteData
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] notes;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clip;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] loopStart;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] loopEnd;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] transpose;

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xE29C78", Offset = "0xE29C78", VA = "0xE29C78")]
	public NoteData()
	{
	}
}
[Token(Token = "0x200001F")]
public class GestrumentSampler : MonoBehaviour
{
	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA44C", Offset = "0x9FA44C")]
	private sealed class <TestPlay>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentSampler <>4__this;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0xE02B20", Offset = "0xE02B20", VA = "0xE02B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600005C")]
			[Address(RVA = "0xE02B88", Offset = "0xE02B88", VA = "0xE02B88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000057")]
		[Address(RVA = "0xE026C4", Offset = "0xE026C4", VA = "0xE026C4")]
		[DebuggerHidden]
		public <TestPlay>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xE029F8", Offset = "0xE029F8", VA = "0xE029F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000059")]
		[Address(RVA = "0xE029FC", Offset = "0xE029FC", VA = "0xE029FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600005B")]
		[Address(RVA = "0xE02B28", Offset = "0xE02B28", VA = "0xE02B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA45C", Offset = "0x9FA45C")]
	private sealed class <StartFade>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float targetVolume;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentTime>5__2;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <start>5__3;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000060")]
			[Address(RVA = "0xE02988", Offset = "0xE02988", VA = "0xE02988", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000062")]
			[Address(RVA = "0xE029F0", Offset = "0xE029F0", VA = "0xE029F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0xE026F0", Offset = "0xE026F0", VA = "0xE026F0")]
		[DebuggerHidden]
		public <StartFade>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0xE02858", Offset = "0xE02858", VA = "0xE02858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0xE0285C", Offset = "0xE0285C", VA = "0xE0285C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0xE02990", Offset = "0xE02990", VA = "0xE02990", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float testOffset;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDDC8", Offset = "0x9FDDC8")]
	public int setPitch;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int globalTranspose;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDDE4", Offset = "0x9FDDE4")]
	public float setVelocity;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxVelocity;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minVelocity;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDDFC", Offset = "0x9FDDFC")]
	public float volumeOffset;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDE14", Offset = "0x9FDE14")]
	public float vibrato;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDE2C", Offset = "0x9FDE2C")]
	public int polyphony;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool oneShot;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool autoPanByPitch;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float autoPanMin;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float autoPanMax;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool spatialiseInstrument;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject spatialParent;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDE44", Offset = "0x9FDE44")]
	public float releaseTime;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int currentVoice;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int prevVoice;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource[] audioSource;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource[,] voices;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<NoteData> noteData;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool fakeRoundRobin;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDE5C", Offset = "0x9FDE5C")]
	public int rrRange;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool debugAutoPlay;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int roundRobin;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IEnumerator coroutine;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator[] fadeOut;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xE01D08", Offset = "0xE01D08", VA = "0xE01D08")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xE01134", Offset = "0xE01134", VA = "0xE01134")]
	public bool StartVoice(int voice, float pitch, float velocity, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xE01918", Offset = "0xE01918", VA = "0xE01918")]
	public bool StopVoice(int voice, float pitch, int instrument)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xE02128", Offset = "0xE02128", VA = "0xE02128")]
	private void UpdateADSR(AudioSource go)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xE026C0", Offset = "0xE026C0", VA = "0xE026C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xE020AC", Offset = "0xE020AC", VA = "0xE020AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DBBC", Offset = "0xA0DBBC")]
	private IEnumerator TestPlay()
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xE02630", Offset = "0xE02630", VA = "0xE02630")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DC20", Offset = "0xA0DC20")]
	public IEnumerator StartFade(AudioSource audioSource, float duration, float targetVolume)
	{
		return null;
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xE021EC", Offset = "0xE021EC", VA = "0xE021EC")]
	private void LoopVoice(AudioSource aS, int n, int p)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xE0271C", Offset = "0xE0271C", VA = "0xE0271C")]
	public void ProcessAudioEvent(GestrumentCore.AudioEvent engineEvent)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xE02764", Offset = "0xE02764", VA = "0xE02764")]
	public GestrumentSampler()
	{
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FA46C", Offset = "0x9FA46C")]
public class GestrumentSettings : ScriptableObject
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string presetFileName;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.Object presetFile;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numCursors;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numInstruments;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int totalPolyphony;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] instruments;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playMidiOnStart;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool autoPlayPreset;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEngine.Object[] midiFile;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string[] midiFileName;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[] manualMidiRouting;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int[] manualInstrumentRouting;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<InstrumentSettings> instrumentSettings;

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE02B90", Offset = "0xE02B90", VA = "0xE02B90")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xE02F88", Offset = "0xE02F88", VA = "0xE02F88")]
	public GestrumentSettings()
	{
	}
}
[Token(Token = "0x2000023")]
public class GestrumentMonophonic : MonoBehaviour
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GestrumentSampler sampler;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource samplerAudio;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float targetPitch;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float oldPitch;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GestrumentCore core;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_isInitialized;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDE74", Offset = "0x9FDE74")]
	private bool <IsActive>k__BackingField;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDE84", Offset = "0x9FDE84")]
	private float <MidiNote>k__BackingField;

	[Token(Token = "0x1700000B")]
	public GestrumentCore Core
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xDFF6B8", Offset = "0xDFF6B8", VA = "0xDFF6B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public bool IsActive
	{
		[Token(Token = "0x6000066")]
		[Address(RVA = "0xDFF6C0", Offset = "0xDFF6C0", VA = "0xDFF6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD24", Offset = "0xA0DD24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000067")]
		[Address(RVA = "0xDFF6C8", Offset = "0xDFF6C8", VA = "0xDFF6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD34", Offset = "0xA0DD34")]
		private set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public float MidiNote
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xDFF6D4", Offset = "0xDFF6D4", VA = "0xDFF6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD44", Offset = "0xA0DD44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000069")]
		[Address(RVA = "0xDFF6DC", Offset = "0xDFF6DC", VA = "0xDFF6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0DD54", Offset = "0xA0DD54")]
		private set
		{
		}
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xDFF6E4", Offset = "0xDFF6E4", VA = "0xDFF6E4")]
	private void Start()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xDFF704", Offset = "0xDFF704", VA = "0xDFF704")]
	public void InitializeCore()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xDFF708", Offset = "0xDFF708", VA = "0xDFF708")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xDFF76C", Offset = "0xDFF76C", VA = "0xDFF76C")]
	public void ProcessAudioEvent(GestrumentCore.AudioEvent engineEvent)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xDFF9BC", Offset = "0xDFF9BC", VA = "0xDFF9BC")]
	public void StopVoice(int voice, int instrument)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xDFF9F0", Offset = "0xDFF9F0", VA = "0xDFF9F0")]
	public GestrumentMonophonic()
	{
	}
}
[Token(Token = "0x2000024")]
public class GeysirMusicManager : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<InstrumentResonator> crystals;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xE02FA0", Offset = "0xE02FA0", VA = "0xE02FA0")]
	public GeysirMusicManager()
	{
	}
}
[Token(Token = "0x2000025")]
public class HighEndSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA4D8", Offset = "0x9FA4D8")]
	private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HighEndSwitcher <>4__this;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007B")]
			[Address(RVA = "0xE10600", Offset = "0xE10600", VA = "0xE10600", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007D")]
			[Address(RVA = "0xE10668", Offset = "0xE10668", VA = "0xE10668", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xE0FAF4", Offset = "0xE0FAF4", VA = "0xE0FAF4")]
		[DebuggerHidden]
		public <Start>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xE10578", Offset = "0xE10578", VA = "0xE10578", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600007A")]
		[Address(RVA = "0xE1057C", Offset = "0xE1057C", VA = "0xE1057C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007C")]
		[Address(RVA = "0xE10608", Offset = "0xE10608", VA = "0xE10608", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA4E8", Offset = "0x9FA4E8")]
	private sealed class <LoadMesh>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HighEndSwitcher <>4__this;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AsyncOperationHandle<Mesh> <handle>5__2;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000081")]
			[Address(RVA = "0xE10410", Offset = "0xE10410", VA = "0xE10410", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0xE10478", Offset = "0xE10478", VA = "0xE10478", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xE0FB9C", Offset = "0xE0FB9C", VA = "0xE0FB9C")]
		[DebuggerHidden]
		public <LoadMesh>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xE10134", Offset = "0xE10134", VA = "0xE10134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xE10138", Offset = "0xE10138", VA = "0xE10138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0xE10418", Offset = "0xE10418", VA = "0xE10418", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA4F8", Offset = "0x9FA4F8")]
	private sealed class <LoadMaterial>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetReference material;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material[] newMats;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int i;

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncOperationHandle<Material> <handle>5__2;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000087")]
			[Address(RVA = "0xE100C4", Offset = "0xE100C4", VA = "0xE100C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000089")]
			[Address(RVA = "0xE1012C", Offset = "0xE1012C", VA = "0xE1012C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xE0FC68", Offset = "0xE0FC68", VA = "0xE0FC68")]
		[DebuggerHidden]
		public <LoadMaterial>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xE0FDF4", Offset = "0xE0FDF4", VA = "0xE0FDF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0xE0FDF8", Offset = "0xE0FDF8", VA = "0xE0FDF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0xE100CC", Offset = "0xE100CC", VA = "0xE100CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA508", Offset = "0x9FA508")]
	private sealed class <SimplifiedLoad>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HighEndSwitcher <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600008D")]
			[Address(RVA = "0xE10508", Offset = "0xE10508", VA = "0xE10508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008F")]
			[Address(RVA = "0xE10570", Offset = "0xE10570", VA = "0xE10570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0xE0FD10", Offset = "0xE0FD10", VA = "0xE0FD10")]
		[DebuggerHidden]
		public <SimplifiedLoad>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0xE10480", Offset = "0xE10480", VA = "0xE10480", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0xE10484", Offset = "0xE10484", VA = "0xE10484", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008E")]
		[Address(RVA = "0xE10510", Offset = "0xE10510", VA = "0xE10510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<object, AsyncOperationHandle<Mesh>> meshHandleDict;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<object, AsyncOperationHandle<Material>> matHandleDict;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AssetReference> materials;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter myMeshFilter;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer myRenderer;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference mesh;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE0F978", Offset = "0xE0F978", VA = "0xE0F978")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE0FA78", Offset = "0xE0FA78", VA = "0xE0FA78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DD64", Offset = "0xA0DD64")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE0FB20", Offset = "0xE0FB20", VA = "0xE0FB20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DDC8", Offset = "0xA0DDC8")]
	private IEnumerator LoadMesh()
	{
		return null;
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE0FBC8", Offset = "0xE0FBC8", VA = "0xE0FBC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DE2C", Offset = "0xA0DE2C")]
	private IEnumerator LoadMaterial(AssetReference material, Material[] newMats, int i)
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE0FC94", Offset = "0xE0FC94", VA = "0xE0FC94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0DE90", Offset = "0xA0DE90")]
	private IEnumerator SimplifiedLoad()
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE0FD3C", Offset = "0xE0FD3C", VA = "0xE0FD3C")]
	public HighEndSwitcher()
	{
	}
}
[Token(Token = "0x200002A")]
public class PlaySoundOnCollision : MonoBehaviour
{
	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer soundPlayer;

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC553D8", Offset = "0xC553D8", VA = "0xC553D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC553DC", Offset = "0xC553DC", VA = "0xC553DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC553E0", Offset = "0xC553E0", VA = "0xC553E0")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC55470", Offset = "0xC55470", VA = "0xC55470")]
	public PlaySoundOnCollision()
	{
	}
}
[Token(Token = "0x200002B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FA518", Offset = "0x9FA518")]
public class ADSR : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly ASREnvelope _envelope;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDE94", Offset = "0x9FDE94")]
	public double attackTime;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDEAC", Offset = "0x9FDEAC")]
	public double sustainTime;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDEC4", Offset = "0x9FDEC4")]
	public double releaseTime;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xFF94AC", Offset = "0xFF94AC", VA = "0xFF94AC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xFF95E0", Offset = "0xFF95E0", VA = "0xFF95E0")]
	public void NoteOff()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xFF960C", Offset = "0xFF960C", VA = "0xFF960C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xFF9690", Offset = "0xFF9690", VA = "0xFF9690")]
	private void OnAudioFilterRead(float[] buffer, int numChannels)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xFF9850", Offset = "0xFF9850", VA = "0xFF9850")]
	public ADSR()
	{
	}
}
[Token(Token = "0x200002C")]
public class ASREnvelope
{
	[Token(Token = "0x200002D")]
	private enum State
	{
		[Token(Token = "0x40000DD")]
		Idle,
		[Token(Token = "0x40000DE")]
		Attack,
		[Token(Token = "0x40000DF")]
		Sustain,
		[Token(Token = "0x40000E0")]
		Release
	}

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private State _state;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _attackIncrement;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint _sustainSamples;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _releaseIncrement;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private double _outputLevel;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xFF9578", Offset = "0xFF9578", VA = "0xFF9578")]
	public void Reset(double attackTime_s, double sustainTime_s, double releaseTime_s, int sampleRate)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xFF9684", Offset = "0xFF9684", VA = "0xFF9684")]
	public void Init()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xFF9600", Offset = "0xFF9600", VA = "0xFF9600")]
	public void NoteOff()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xFF9754", Offset = "0xFF9754", VA = "0xFF9754")]
	public double GetLevel()
	{
		return default(double);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xFF98C4", Offset = "0xFF98C4", VA = "0xFF98C4")]
	public ASREnvelope()
	{
	}
}
[Token(Token = "0x200002E")]
public class ParamTester : MonoBehaviour
{
	[Token(Token = "0x600009E")]
	[Address(RVA = "0xDE8990", Offset = "0xDE8990", VA = "0xDE8990")]
	public ParamTester()
	{
	}
}
[Token(Token = "0x200002F")]
public class GestrumentGlobalSync : MonoBehaviour
{
	[Token(Token = "0x2000030")]
	public enum Music
	{
		[Token(Token = "0x40000F3")]
		SoftPiano,
		[Token(Token = "0x40000F4")]
		GoneFishing,
		[Token(Token = "0x40000F5")]
		Quiet,
		[Token(Token = "0x40000F6")]
		MainMenu
	}

	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA57C", Offset = "0x9FA57C")]
	private sealed class <ResetCursors>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sink;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int curs;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000C5")]
			[Address(RVA = "0xDFF648", Offset = "0xDFF648", VA = "0xDFF648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000C7")]
			[Address(RVA = "0xDFF6B0", Offset = "0xDFF6B0", VA = "0xDFF6B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xDFDFAC", Offset = "0xDFDFAC", VA = "0xDFDFAC")]
		[DebuggerHidden]
		public <ResetCursors>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xDFF560", Offset = "0xDFF560", VA = "0xDFF560", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xDFF564", Offset = "0xDFF564", VA = "0xDFF564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xDFF650", Offset = "0xDFF650", VA = "0xDFF650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA58C", Offset = "0x9FA58C")]
	private sealed class <CheckIfMusicFinsihed>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentGlobalSync <>4__this;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NeatAudioPlayer audioPlayer;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000CB")]
			[Address(RVA = "0xDFF350", Offset = "0xDFF350", VA = "0xDFF350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CD")]
			[Address(RVA = "0xDFF3B8", Offset = "0xDFF3B8", VA = "0xDFF3B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xDFE57C", Offset = "0xDFE57C", VA = "0xDFE57C")]
		[DebuggerHidden]
		public <CheckIfMusicFinsihed>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xDFF22C", Offset = "0xDFF22C", VA = "0xDFF22C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xDFF230", Offset = "0xDFF230", VA = "0xDFF230", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xDFF358", Offset = "0xDFF358", VA = "0xDFF358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA59C", Offset = "0x9FA59C")]
	private sealed class <FadeOut>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource aS;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVol>5__3;

		[Token(Token = "0x1700001F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000D1")]
			[Address(RVA = "0xDFF4F0", Offset = "0xDFF4F0", VA = "0xDFF4F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000020")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000D3")]
			[Address(RVA = "0xDFF558", Offset = "0xDFF558", VA = "0xDFF558", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xDFE91C", Offset = "0xDFE91C", VA = "0xDFE91C")]
		[DebuggerHidden]
		public <FadeOut>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xDFF3C0", Offset = "0xDFF3C0", VA = "0xDFF3C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xDFF3C4", Offset = "0xDFF3C4", VA = "0xDFF3C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xDFF4F8", Offset = "0xDFF4F8", VA = "0xDFF4F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000034")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA5AC", Offset = "0x9FA5AC")]
	private sealed class <>c__DisplayClass49_0
	{
		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 from;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GestrumentGlobalSync inst;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cursorNum;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 to;

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xDFEC54", Offset = "0xDFEC54", VA = "0xDFEC54")]
		public <>c__DisplayClass49_0()
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xDFF144", Offset = "0xDFF144", VA = "0xDFF144")]
		internal Vector3 <MoveCursor>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xDFF150", Offset = "0xDFF150", VA = "0xDFF150")]
		internal void <MoveCursor>b__1(Vector3 x)
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xDFF15C", Offset = "0xDFF15C", VA = "0xDFF15C")]
		internal void <MoveCursor>b__2()
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xDFF1C4", Offset = "0xDFF1C4", VA = "0xDFF1C4")]
		internal void <MoveCursor>b__3()
		{
		}
	}

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GestrumentGlobalSync instance;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool hasLookedForInstance;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool normalspecialmusicplaying;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Music currentMusic;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioMixer mixer;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tempo;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDEDC", Offset = "0x9FDEDC")]
	private static GestrumentCore <ResonanceCore>k__BackingField;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDEEC", Offset = "0x9FDEEC")]
	private static IBiomeMusic <BiomeMusicInterface>k__BackingField;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double baseMusic;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double currentMus;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip mechantMusicDay;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip mechantMusicNight;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource merchantMusic;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource menuMusic;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NeatAudioPlayer islandCompleteMusicPlayer;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public NeatAudioPlayer creditsMusicPlayer;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine fadeout;

	[Token(Token = "0x17000016")]
	public static GestrumentCore ResonanceCore
	{
		[Token(Token = "0x600009F")]
		[Address(RVA = "0xDFD3F4", Offset = "0xDFD3F4", VA = "0xDFD3F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E034", Offset = "0xA0E034")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xDFD45C", Offset = "0xDFD45C", VA = "0xDFD45C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E044", Offset = "0xA0E044")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public static IBiomeMusic BiomeMusicInterface
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xDFD4CC", Offset = "0xDFD4CC", VA = "0xDFD4CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E054", Offset = "0xA0E054")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xDFD534", Offset = "0xDFD534", VA = "0xDFD534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E064", Offset = "0xA0E064")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public static bool NormalSpecialMusicPlaying
	{
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xDFD968", Offset = "0xDFD968", VA = "0xDFD968")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xDFDA20", Offset = "0xDFDA20", VA = "0xDFDA20")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public static double BaseMusic
	{
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xDFDFD8", Offset = "0xDFDFD8", VA = "0xDFDFD8")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xDFE08C", Offset = "0xDFE08C", VA = "0xDFE08C")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public static double CurrentMusic
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xDFE140", Offset = "0xDFE140", VA = "0xDFE140")]
		get
		{
			return default(double);
		}
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xDFE1F4", Offset = "0xDFE1F4", VA = "0xDFE1F4")]
		set
		{
		}
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xDFD5A4", Offset = "0xDFD5A4", VA = "0xDFD5A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xDFD780", Offset = "0xDFD780", VA = "0xDFD780")]
	private static GestrumentGlobalSync TryFindInstance()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xDFD888", Offset = "0xDFD888", VA = "0xDFD888")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xDFDAD0", Offset = "0xDFDAD0", VA = "0xDFDAD0")]
	private void OnWorldZoneChanged(WorldZone worldZone)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xDFDB94", Offset = "0xDFDB94", VA = "0xDFDB94")]
	public static void SetLevel(float sliderValue)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xDFDCA8", Offset = "0xDFDCA8", VA = "0xDFDCA8")]
	public static void SetMusic(Music music, float quant, float startDelay)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xDFDE34", Offset = "0xDFDE34", VA = "0xDFDE34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E074", Offset = "0xA0E074")]
	private IEnumerator ResetCursors(int sink, int curs)
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xDFDEB0", Offset = "0xDFDEB0", VA = "0xDFDEB0")]
	public static void MenuMusic(bool play = false)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xDFE334", Offset = "0xDFE334", VA = "0xDFE334")]
	public static void PlayCreditsMusic()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xDFE4A4", Offset = "0xDFE4A4", VA = "0xDFE4A4")]
	public static void PlayIslandCompleteMusic()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xDFE40C", Offset = "0xDFE40C", VA = "0xDFE40C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E0D8", Offset = "0xA0E0D8")]
	private IEnumerator CheckIfMusicFinsihed(NeatAudioPlayer audioPlayer)
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xDFE5A8", Offset = "0xDFE5A8", VA = "0xDFE5A8")]
	public static bool IsVerySpecialMusicIsPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xDFE684", Offset = "0xDFE684", VA = "0xDFE684")]
	public static void SetSnapShot(string snapshot, float time)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xDFE794", Offset = "0xDFE794", VA = "0xDFE794")]
	public static void MerchantMusic(bool play = false)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xDFE2A8", Offset = "0xDFE2A8", VA = "0xDFE2A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E13C", Offset = "0xA0E13C")]
	private IEnumerator FadeOut(AudioSource aS, float time)
	{
		return null;
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xDFE948", Offset = "0xDFE948", VA = "0xDFE948")]
	public static void BoatTranspose(int transpose)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xDFE9CC", Offset = "0xDFE9CC", VA = "0xDFE9CC")]
	public static void MoveCursor(int cursorNum, Vector3 from, Vector3 to, float time)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xDFEC5C", Offset = "0xDFEC5C", VA = "0xDFEC5C")]
	private void UpdateCursorPlayer(int curs, float x, float y, float z, bool gate)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xDFECC0", Offset = "0xDFECC0", VA = "0xDFECC0")]
	public static void SliderControl(int sliderNumber, float value)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xDFED98", Offset = "0xDFED98", VA = "0xDFED98")]
	public static void SliderControlSmooth(int sliderNumber, float value, float smoothness)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xDFEE70", Offset = "0xDFEE70", VA = "0xDFEE70")]
	public static void SliderControlNextDivision(int sliderNumber, float value, float subdiv)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xDFEF48", Offset = "0xDFEF48", VA = "0xDFEF48")]
	public static void ForceTempo(float t)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xDFF038", Offset = "0xDFF038", VA = "0xDFF038")]
	public static void TempoControl(float tempoMin, float tempoMax, float value)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xDFF11C", Offset = "0xDFF11C", VA = "0xDFF11C")]
	public GestrumentGlobalSync()
	{
	}
}
[Token(Token = "0x2000035")]
public enum ModalTranspose
{
	[Token(Token = "0x400010A")]
	I = 0,
	[Token(Token = "0x400010B")]
	II = 1,
	[Token(Token = "0x400010C")]
	III = 2,
	[Token(Token = "0x400010D")]
	IV = 3,
	[Token(Token = "0x400010E")]
	V = 4,
	[Token(Token = "0x400010F")]
	VI = 5,
	[Token(Token = "0x4000110")]
	VII = 6,
	[Token(Token = "0x4000111")]
	I_up = 7,
	[Token(Token = "0x4000112")]
	VII_down = -1,
	[Token(Token = "0x4000113")]
	VI_down = -2,
	[Token(Token = "0x4000114")]
	V_down = -3,
	[Token(Token = "0x4000115")]
	IV_down = -4,
	[Token(Token = "0x4000116")]
	III_down = -5,
	[Token(Token = "0x4000117")]
	II_down = -6,
	[Token(Token = "0x4000118")]
	I_down = -7
}
[Token(Token = "0x2000036")]
public class MusicSwitcher : MonoBehaviour
{
	[Token(Token = "0x2000037")]
	public enum Music
	{
		[Token(Token = "0x400011A")]
		Silence = 0,
		[Token(Token = "0x400011B")]
		Pianothing = 1,
		[Token(Token = "0x400011C")]
		Boating = 10,
		[Token(Token = "0x400011D")]
		Fishing = -1,
		[Token(Token = "0x400011E")]
		Crystals = -2
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xD08A68", Offset = "0xD08A68", VA = "0xD08A68")]
	public static void SetMusic(Music music, float quant)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xD08CB0", Offset = "0xD08CB0", VA = "0xD08CB0")]
	public static void Silence()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xD08CBC", Offset = "0xD08CBC", VA = "0xD08CBC")]
	public static void PianoMusic(float quant = 4f)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xD08D44", Offset = "0xD08D44", VA = "0xD08D44")]
	public static void BoatingMusic()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xD08DC0", Offset = "0xD08DC0", VA = "0xD08DC0")]
	public static void MerchantMusic()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xD08DCC", Offset = "0xD08DCC", VA = "0xD08DCC")]
	public static void RestoreBaseMusic(float quant = 4f)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xD08E94", Offset = "0xD08E94", VA = "0xD08E94")]
	public static void FishingMusic()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xD08F10", Offset = "0xD08F10", VA = "0xD08F10")]
	public static void StopFishing()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xD08F88", Offset = "0xD08F88", VA = "0xD08F88")]
	public static void CrystalPuzzle()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xD08F94", Offset = "0xD08F94", VA = "0xD08F94")]
	public MusicSwitcher()
	{
	}
}
[Token(Token = "0x2000038")]
public static class TransposeMusic
{
	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1AE1A78", Offset = "0x1AE1A78", VA = "0x1AE1A78")]
	public static void SetupTransposeSlots(Context context, int sinkID)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x1AE1AD8", Offset = "0x1AE1AD8", VA = "0x1AE1AD8")]
	public static void SetValueForTransposeSlot(Context context, int sinkID, int slot, float value)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x1AE1C2C", Offset = "0x1AE1C2C", VA = "0x1AE1C2C")]
	public static void ScheduleTransposeSlot(Context context, int sinkID, double div, int slot)
	{
	}
}
[Token(Token = "0x2000039")]
public class WaitForDivision : CustomYieldInstruction
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Context context;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double div;

	[Token(Token = "0x17000021")]
	public override bool keepWaiting
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1AE50C4", Offset = "0x1AE50C4", VA = "0x1AE50C4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x1AE5134", Offset = "0x1AE5134", VA = "0x1AE5134")]
	public WaitForDivision(Context c, double d)
	{
	}
}
[Token(Token = "0x200003A")]
public class InstrumentManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003B")]
	public class OutputGroupList
	{
		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SamplerSetup> outputGroupList;

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xE11A5C", Offset = "0xE11A5C", VA = "0xE11A5C")]
		public OutputGroupList()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200003C")]
	public class SamplerSetup
	{
		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float volume;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float reverbSend;

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xE11AD8", Offset = "0xE11AD8", VA = "0xE11AD8")]
		public SamplerSetup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200003D")]
	public class GroupAssignments
	{
		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SinkList> groupAssignments;

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xE119E0", Offset = "0xE119E0", VA = "0xE119E0")]
		public GroupAssignments()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200003E")]
	public class SinkList
	{
		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sink;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] output;

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xE11AEC", Offset = "0xE11AEC", VA = "0xE11AEC")]
		public SinkList()
		{
		}
	}

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OutputGroupList OutputGroups;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GroupAssignments GroupDestinations;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextAsset jsonsettings;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioMixer mixer;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReactionalSampler> sinkSamplers;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ReactionalTimeline timeline;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xE111A8", Offset = "0xE111A8", VA = "0xE111A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xE11390", Offset = "0xE11390", VA = "0xE11390")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xE112E8", Offset = "0xE112E8", VA = "0xE112E8")]
	private void LoadFromJson()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xE1138C", Offset = "0xE1138C", VA = "0xE1138C")]
	private void SpawnSamplers()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xE114C8", Offset = "0xE114C8", VA = "0xE114C8")]
	private void SetupTrackForMixer(GameObject obj, int index)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xE11638", Offset = "0xE11638", VA = "0xE11638")]
	public void RouteNoteOn(ReactionalTimeline timeline, double beat, int sink, int lane, int instrument, int voice, float pitch, float velocity)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xE117DC", Offset = "0xE117DC", VA = "0xE117DC")]
	public void RouteNoteOff(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float velocity)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xE11964", Offset = "0xE11964", VA = "0xE11964")]
	public InstrumentManager()
	{
	}
}
[Token(Token = "0x200003F")]
public class ManualSinkOutputRouter : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalTimeline m_timeline;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_sinkIndex;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<ReactionalSampler> m_samplers;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool setEnginePlaying;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xCFC4A4", Offset = "0xCFC4A4", VA = "0xCFC4A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xCFC56C", Offset = "0xCFC56C", VA = "0xCFC56C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xCFC634", Offset = "0xCFC634", VA = "0xCFC634")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xCFC644", Offset = "0xCFC644", VA = "0xCFC644")]
	public void StartSinkEngine()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xCFC674", Offset = "0xCFC674", VA = "0xCFC674")]
	public void StopSinkEngine()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xCFC6A4", Offset = "0xCFC6A4", VA = "0xCFC6A4")]
	public void RouteNoteOn(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float pitch, float velocity)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xCFC7A4", Offset = "0xCFC7A4", VA = "0xCFC7A4")]
	public void RouteNoteOff(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float velocity)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xCFC888", Offset = "0xCFC888", VA = "0xCFC888")]
	public ManualSinkOutputRouter()
	{
	}
}
[Token(Token = "0x2000040")]
public class PlayableInstrument : MonoBehaviour
{
	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA5BC", Offset = "0x9FA5BC")]
	private sealed class <DelayStart>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableInstrument <>4__this;

		[Token(Token = "0x17000023")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000104")]
			[Address(RVA = "0xC55744", Offset = "0xC55744", VA = "0xC55744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000024")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000106")]
			[Address(RVA = "0xC557AC", Offset = "0xC557AC", VA = "0xC557AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0xC55520", Offset = "0xC55520", VA = "0xC55520")]
		[DebuggerHidden]
		public <DelayStart>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xC555BC", Offset = "0xC555BC", VA = "0xC555BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xC555C0", Offset = "0xC555C0", VA = "0xC555C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0xC5574C", Offset = "0xC5574C", VA = "0xC5574C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalTimeline m_timeline;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_sinkIndex;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int m_curInsNum;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int m_minnote;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int m_maxnote;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_curY;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool ready;

	[Token(Token = "0x17000022")]
	public float setY
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xC5554C", Offset = "0xC5554C", VA = "0xC5554C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xC55554", Offset = "0xC55554", VA = "0xC55554")]
		set
		{
		}
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xC55478", Offset = "0xC55478", VA = "0xC55478")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC554A4", Offset = "0xC554A4", VA = "0xC554A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E290", Offset = "0xA0E290")]
	private IEnumerator DelayStart()
	{
		return null;
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC555A0", Offset = "0xC555A0", VA = "0xC555A0")]
	public PlayableInstrument()
	{
	}
}
[Token(Token = "0x2000042")]
public class ReactionalSampler : MonoBehaviour
{
	[Token(Token = "0x2000043")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA5CC", Offset = "0x9FA5CC")]
	private sealed class <TestPlay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReactionalSampler <>4__this;

		[Token(Token = "0x17000025")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000112")]
			[Address(RVA = "0xC708D0", Offset = "0xC708D0", VA = "0xC708D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000026")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000114")]
			[Address(RVA = "0xC70938", Offset = "0xC70938", VA = "0xC70938", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xC6FD08", Offset = "0xC6FD08", VA = "0xC6FD08")]
		[DebuggerHidden]
		public <TestPlay>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xC70774", Offset = "0xC70774", VA = "0xC70774", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0xC70778", Offset = "0xC70778", VA = "0xC70778", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xC708D8", Offset = "0xC708D8", VA = "0xC708D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA5DC", Offset = "0x9FA5DC")]
	private sealed class <StartFade>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public double wait;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audioSource;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float targetVolume;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentTime>5__2;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <start>5__3;

		[Token(Token = "0x17000027")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000118")]
			[Address(RVA = "0xC70704", Offset = "0xC70704", VA = "0xC70704", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600011A")]
			[Address(RVA = "0xC7076C", Offset = "0xC7076C", VA = "0xC7076C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xC703BC", Offset = "0xC703BC", VA = "0xC703BC")]
		[DebuggerHidden]
		public <StartFade>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xC70580", Offset = "0xC70580", VA = "0xC70580", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0xC70584", Offset = "0xC70584", VA = "0xC70584", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xC7070C", Offset = "0xC7070C", VA = "0xC7070C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalSampleBank sampleBank;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private double globalOffset;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int globalTranspose;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDF7C", Offset = "0x9FDF7C")]
	public float setVelocity;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxVelocity;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minVelocity;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDF94", Offset = "0x9FDF94")]
	public float volumeOffset;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int polyphony;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool oneShot;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool autoPanByPitch;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float autoPanMin;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float autoPanMax;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float starttime;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool spatialiseInstrument;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject spatialParent;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDFAC", Offset = "0x9FDFAC")]
	public float releaseTime;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentVoice;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int prevVoice;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource[] audioSource;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource[,] voices;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool fakeRoundRobin;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FDFC4", Offset = "0x9FDFC4")]
	public int rrRange;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int roundRobin;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IEnumerator coroutine;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator[] fadeOut;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string samplerpath;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xC6F794", Offset = "0xC6F794", VA = "0xC6F794")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC6F86C", Offset = "0xC6F86C", VA = "0xC6F86C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC6FC8C", Offset = "0xC6FC8C", VA = "0xC6FC8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E344", Offset = "0xA0E344")]
	private IEnumerator TestPlay()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC6FD34", Offset = "0xC6FD34", VA = "0xC6FD34")]
	public bool StartVoice(int voice, float pitch, float velocity, int instrument, double beat, double tempo = 0.0, double currentBeat = 0.0)
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC70068", Offset = "0xC70068", VA = "0xC70068")]
	public bool StopVoice(int voice, int instrument, double beat, double tempo = 0.0, double currentBeat = 0.0)
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC7031C", Offset = "0xC7031C", VA = "0xC7031C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E3A8", Offset = "0xA0E3A8")]
	public IEnumerator StartFade(AudioSource audioSource, double wait, float duration, float targetVolume)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC703E8", Offset = "0xC703E8", VA = "0xC703E8")]
	public void StopAllVoices()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC704B0", Offset = "0xC704B0", VA = "0xC704B0")]
	public ReactionalSampler()
	{
	}
}
[Token(Token = "0x2000045")]
public class ReactionalTimeline : MonoBehaviour
{
	[Token(Token = "0x2000046")]
	public delegate void NoteOnEvent(ReactionalTimeline timeline, double offset, int sink, int lane, int instrument, int voice, float pitch, float velocity);

	[Token(Token = "0x2000047")]
	public delegate void NoteOffEvent(ReactionalTimeline timeline, double offset, int sink, int lane, int instrument, int voice, float velocity);

	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA5EC", Offset = "0x9FA5EC")]
	private sealed class <DelayedStart>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReactionalTimeline <>4__this;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000130")]
			[Address(RVA = "0xC71BA8", Offset = "0xC71BA8", VA = "0xC71BA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000132")]
			[Address(RVA = "0xC71C10", Offset = "0xC71C10", VA = "0xC71C10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0xC70AF4", Offset = "0xC70AF4", VA = "0xC70AF4")]
		[DebuggerHidden]
		public <DelayedStart>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xC71A2C", Offset = "0xC71A2C", VA = "0xC71A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0xC71A30", Offset = "0xC71A30", VA = "0xC71A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xC71BB0", Offset = "0xC71BB0", VA = "0xC71BB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextAsset timelineState;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double tempo;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double currentBeat;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool autoStart;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool debugOutput;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Context context;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InstrumentManager instrumentManager;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool allowPlay;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OSCMessage message;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NoteOnEvent onNoteOn;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NoteOffEvent onNoteOff;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private long progressedTime;

	[Token(Token = "0x17000029")]
	public Context TimelineContext
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xC70940", Offset = "0xC70940", VA = "0xC70940")]
		get
		{
			return null;
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xC70948", Offset = "0xC70948", VA = "0xC70948")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool IsRunning
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xC719A0", Offset = "0xC719A0", VA = "0xC719A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xC70950", Offset = "0xC70950", VA = "0xC70950")]
	private void Start()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xC70A78", Offset = "0xC70A78", VA = "0xC70A78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E4AC", Offset = "0xA0E4AC")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xC70B20", Offset = "0xC70B20", VA = "0xC70B20")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xC718E8", Offset = "0xC718E8", VA = "0xC718E8")]
	public void StartPlaying()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xC71914", Offset = "0xC71914", VA = "0xC71914")]
	public void StopPlaying()
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xC71938", Offset = "0xC71938", VA = "0xC71938")]
	private void PrintToLog(string message)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xC719A8", Offset = "0xC719A8", VA = "0xC719A8")]
	public ReactionalTimeline()
	{
	}
}
[Token(Token = "0x2000049")]
public class SinkSetup : MonoBehaviour
{
	[Token(Token = "0x200004A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA5FC", Offset = "0x9FA5FC")]
	private sealed class <DelayStart>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SinkSetup <>4__this;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000139")]
			[Address(RVA = "0xCDE474", Offset = "0xCDE474", VA = "0xCDE474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600013B")]
			[Address(RVA = "0xCDE4DC", Offset = "0xCDE4DC", VA = "0xCDE4DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0xCDE270", Offset = "0xCDE270", VA = "0xCDE270")]
		[DebuggerHidden]
		public <DelayStart>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0xCDE2B0", Offset = "0xCDE2B0", VA = "0xCDE2B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000138")]
		[Address(RVA = "0xCDE2B4", Offset = "0xCDE2B4", VA = "0xCDE2B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600013A")]
		[Address(RVA = "0xCDE47C", Offset = "0xCDE47C", VA = "0xCDE47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ReactionalTimeline m_timeline;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int m_sinkIndex;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int m_minnote;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int m_maxnote;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int m_instruments;

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xCDE1C8", Offset = "0xCDE1C8", VA = "0xCDE1C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xCDE1F4", Offset = "0xCDE1F4", VA = "0xCDE1F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E560", Offset = "0xA0E560")]
	private IEnumerator DelayStart()
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xCDE29C", Offset = "0xCDE29C", VA = "0xCDE29C")]
	public SinkSetup()
	{
	}
}
[Token(Token = "0x200004B")]
public static class OSCPackUtil
{
	[Token(Token = "0x600013C")]
	[Address(RVA = "0xE29D5C", Offset = "0xE29D5C", VA = "0xE29D5C")]
	public static void ForceTempo(Context context, float tempo)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xE29E34", Offset = "0xE29E34", VA = "0xE29E34")]
	public static void SetNoteRatesToInstant(Context context, int sinkID, int inst)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE2A180", Offset = "0xE2A180", VA = "0xE2A180")]
	public static void SetNoteRatesToDefault(Context context, int sinkID, int inst)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE2A514", Offset = "0xE2A514", VA = "0xE2A514")]
	public static void SetInstrumentRanges(Context context, int sinkID, int inst, int min, int max)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE2A794", Offset = "0xE2A794", VA = "0xE2A794")]
	public static void MapZtoVel(Context context, int sinkID, int inst)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE2A900", Offset = "0xE2A900", VA = "0xE2A900")]
	public static void ConnectCursorToInstrument(Context context, int sinkID, int cursorNum, int instrumentNum)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE2AA70", Offset = "0xE2AA70", VA = "0xE2AA70")]
	public static void SetCursor(Context context, int sinkID, int cursorID, bool gate, double x, double y, double z, int beat = 0)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE2AC7C", Offset = "0xE2AC7C", VA = "0xE2AC7C")]
	public static void SetCursorGate(Context context, int sinkID, int cursorID, bool gate, double beat = 0.0)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE2AE28", Offset = "0xE2AE28", VA = "0xE2AE28")]
	public static void SetSliderValue(Context context, int sinkID, int slider, float value, int beat = 0)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE2AFC0", Offset = "0xE2AFC0", VA = "0xE2AFC0")]
	public static void SetEnginePlaying(Context context, int sinkID, bool gate, int beat = 0)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE2B130", Offset = "0xE2B130", VA = "0xE2B130")]
	public static void ScrubLane(Context context, int laneID, double normPos, long quant, int phase, double fromPos)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE2A08C", Offset = "0xE2A08C", VA = "0xE2A08C")]
	public static void PushToSink(Context context, int sinkID, byte[] arr)
	{
	}
}
[Serializable]
[Token(Token = "0x200004C")]
public class Group
{
	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Region> region;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int seq_length;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int key;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lokey;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hikey;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int pitch_keycenter;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int vel_min;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vel_max;

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE0DA20", Offset = "0xE0DA20", VA = "0xE0DA20")]
	public Group()
	{
	}
}
[Serializable]
[Token(Token = "0x200004D")]
public class Region
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int lokey;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hikey;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int pitch_keycenter;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int key;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int vel_min;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int vel_max;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int tune;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int transpose;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip sample;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xC73E30", Offset = "0xC73E30", VA = "0xC73E30")]
	public Region()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FA60C", Offset = "0x9FA60C")]
public class ReactionalSampleBank : ScriptableObject
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Group> group;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int rr;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xC6E8E4", Offset = "0xC6E8E4", VA = "0xC6E8E4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xC6E8E8", Offset = "0xC6E8E8", VA = "0xC6E8E8")]
	public bool GetSample(float pitch, float velocity, AudioSource aS, int offset, [Optional] ReactionalSampler gS)
	{
		return default(bool);
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xC6ED88", Offset = "0xC6ED88", VA = "0xC6ED88")]
	public ReactionalSampleBank()
	{
	}
}
[Token(Token = "0x200004F")]
public class ReactionalSampleBankFunctions : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA678", Offset = "0x9FA678")]
	private sealed class <SetGetAudioClip>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioType type;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReactionalSampleBankFunctions <>4__this;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int group;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int region;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000155")]
			[Address(RVA = "0xC6F724", Offset = "0xC6F724", VA = "0xC6F724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000157")]
			[Address(RVA = "0xC6F78C", Offset = "0xC6F78C", VA = "0xC6F78C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0xC6F394", Offset = "0xC6F394", VA = "0xC6F394")]
		[DebuggerHidden]
		public <SetGetAudioClip>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xC6F3C8", Offset = "0xC6F3C8", VA = "0xC6F3C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0xC6F4A4", Offset = "0xC6F4A4", VA = "0xC6F4A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0xC6F3E4", Offset = "0xC6F3E4", VA = "0xC6F3E4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0xC6F72C", Offset = "0xC6F72C", VA = "0xC6F72C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReactionalSampleBank sb;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xC6EE04", Offset = "0xC6EE04", VA = "0xC6EE04")]
	public ReactionalSampleBank ReadSfz(string p, bool streamFromDisk = false)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xC6EE68", Offset = "0xC6EE68", VA = "0xC6EE68")]
	private int NoteNameToMidi(string n)
	{
		return default(int);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xC6F2E0", Offset = "0xC6F2E0", VA = "0xC6F2E0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E614", Offset = "0xA0E614")]
	private IEnumerator SetGetAudioClip(string path, AudioType type, int group, int region)
	{
		return null;
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xC6F3C0", Offset = "0xC6F3C0", VA = "0xC6F3C0")]
	public ReactionalSampleBankFunctions()
	{
	}
}
[Token(Token = "0x2000051")]
public class RotateObjectSlowly : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotationSpeed;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRotation;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bounceSpeed;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxHeight;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startRotY;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startTime;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xC798D4", Offset = "0xC798D4", VA = "0xC798D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xC7994C", Offset = "0xC7994C", VA = "0xC7994C")]
	private void Update()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xC79AF4", Offset = "0xC79AF4", VA = "0xC79AF4")]
	public RotateObjectSlowly()
	{
	}
}
[Token(Token = "0x2000052")]
public class EventTester : MonoBehaviour
{
	[Token(Token = "0x600015B")]
	[Address(RVA = "0x137EB5C", Offset = "0x137EB5C", VA = "0x137EB5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x137EC00", Offset = "0x137EC00", VA = "0x137EC00")]
	private void ShakeTest(SeedbagShakeEvent e)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x137ECBC", Offset = "0x137ECBC", VA = "0x137ECBC")]
	public EventTester()
	{
	}
}
[Token(Token = "0x2000053")]
public class GeneData : ScriptableObject
{
	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1094858", Offset = "0x1094858", VA = "0x1094858")]
	public GeneData()
	{
	}
}
[Token(Token = "0x2000054")]
public class HeightFactorGene : GeneData
{
	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE0F970", Offset = "0xE0F970", VA = "0xE0F970")]
	public HeightFactorGene()
	{
	}
}
[Token(Token = "0x2000055")]
public class MeshGrower : MeshModifier
{
	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float finalsize;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float targetY;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float targetX;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float targetZ;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal Vector3 targetScale;

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xD07E78", Offset = "0xD07E78", VA = "0xD07E78", Slot = "4")]
	internal override void Start()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xD07F38", Offset = "0xD07F38", VA = "0xD07F38", Slot = "5")]
	internal override void SetMesh()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xD0810C", Offset = "0xD0810C", VA = "0xD0810C")]
	public MeshGrower()
	{
	}
}
[Token(Token = "0x2000056")]
public class MeshLerper : MeshModifier
{
	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh targetMesh;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal Vector3[] targetVerts;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xD0811C", Offset = "0xD0811C", VA = "0xD0811C", Slot = "4")]
	internal override void Start()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xD0815C", Offset = "0xD0815C", VA = "0xD0815C", Slot = "5")]
	internal override void SetMesh()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xD082CC", Offset = "0xD082CC", VA = "0xD082CC")]
	public MeshLerper()
	{
	}
}
[Token(Token = "0x2000057")]
public class MeshModifier : MonoBehaviour
{
	[Token(Token = "0x2000058")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA688", Offset = "0x9FA688")]
	private sealed class <Growth>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshModifier <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0xD084C4", Offset = "0xD084C4", VA = "0xD084C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xD0852C", Offset = "0xD0852C", VA = "0xD0852C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xD083D8", Offset = "0xD083D8", VA = "0xD083D8")]
		[DebuggerHidden]
		public <Growth>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xD08408", Offset = "0xD08408", VA = "0xD08408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xD0840C", Offset = "0xD0840C", VA = "0xD0840C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xD084CC", Offset = "0xD084CC", VA = "0xD084CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshFilter meshFilter;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh startMesh;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float growthTime;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool useSize;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal float timer;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool started;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal Vector3[] startVerts;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	internal Vector3[] verts;

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xD07ECC", Offset = "0xD07ECC", VA = "0xD07ECC", Slot = "4")]
	internal virtual void Start()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xD082D4", Offset = "0xD082D4", VA = "0xD082D4")]
	internal void Update()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xD0835C", Offset = "0xD0835C", VA = "0xD0835C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E6C8", Offset = "0xA0E6C8")]
	internal IEnumerator Growth()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xD08404", Offset = "0xD08404", VA = "0xD08404", Slot = "5")]
	internal virtual void SetMesh()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xD08114", Offset = "0xD08114", VA = "0xD08114")]
	public MeshModifier()
	{
	}
}
[Token(Token = "0x2000059")]
public class PlantGene : ScriptableObject
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GeneData parent1;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GeneData parent2;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xDEC158", Offset = "0xDEC158", VA = "0xDEC158")]
	public PlantGene()
	{
	}
}
[Token(Token = "0x200005A")]
public class RootVegetable : MonoBehaviour
{
	[Token(Token = "0x6000172")]
	[Address(RVA = "0xC74A58", Offset = "0xC74A58", VA = "0xC74A58")]
	public RootVegetable()
	{
	}
}
[Token(Token = "0x200005B")]
public class PlantBreedingSystem : MonoBehaviour
{
	[Token(Token = "0x6000173")]
	[Address(RVA = "0xDEAB60", Offset = "0xDEAB60", VA = "0xDEAB60")]
	public PlantBreedingSystem()
	{
	}
}
[Token(Token = "0x200005C")]
public class PlantGeneExpression : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<GeneData> value;

	[Token(Token = "0x17000033")]
	public List<GeneData> Value
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xDEC160", Offset = "0xDEC160", VA = "0xDEC160")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xDEC168", Offset = "0xDEC168", VA = "0xDEC168")]
	public PlantGeneExpression()
	{
	}
}
[Token(Token = "0x200005D")]
public class PlantGenome : MonoBehaviour
{
	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlantGene> value;

	[Token(Token = "0x17000034")]
	public List<PlantGene> Value
	{
		[Token(Token = "0x6000176")]
		[Address(RVA = "0xDEC170", Offset = "0xDEC170", VA = "0xDEC170")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xDEC178", Offset = "0xDEC178", VA = "0xDEC178")]
	public PlantGenome()
	{
	}
}
[Token(Token = "0x200005E")]
public class PlantPhenotype : MonoBehaviour
{
	[Token(Token = "0x6000178")]
	[Address(RVA = "0xDEF6B0", Offset = "0xDEF6B0", VA = "0xDEF6B0")]
	public PlantPhenotype()
	{
	}
}
[Token(Token = "0x200005F")]
public class TestComponent : SaveableComponent, IInitializable
{
	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string myString;

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xCA681C", Offset = "0xCA681C", VA = "0xCA681C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xCA689C", Offset = "0xCA689C", VA = "0xCA689C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xCA68A0", Offset = "0xCA68A0", VA = "0xCA68A0")]
	public TestComponent()
	{
	}
}
[Token(Token = "0x2000060")]
public class TestState : ComponentState
{
	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string testString;

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xCA6894", Offset = "0xCA6894", VA = "0xCA6894")]
	public TestState()
	{
	}
}
[Token(Token = "0x2000061")]
public class TestScript : MonoBehaviour
{
	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference reference;

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xCA68A8", Offset = "0xCA68A8", VA = "0xCA68A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xCA68F4", Offset = "0xCA68F4", VA = "0xCA68F4")]
	public TestScript()
	{
	}
}
[Token(Token = "0x2000062")]
public class Unearthable : MonoBehaviour, ITillable
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numberOfTillsRequired;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int counter;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 surfacePos;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 originalPos;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float radius;

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x1AE4448", Offset = "0x1AE4448", VA = "0x1AE4448")]
	private void Start()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x1AE444C", Offset = "0x1AE444C", VA = "0x1AE444C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x1AE46A0", Offset = "0x1AE46A0", VA = "0x1AE46A0", Slot = "4")]
	public void Till()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x1AE4544", Offset = "0x1AE4544", VA = "0x1AE4544")]
	private void FindSurface()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x1AE48BC", Offset = "0x1AE48BC", VA = "0x1AE48BC")]
	public Unearthable()
	{
	}
}
[Token(Token = "0x2000063")]
public class BeatBouncer : MonoBehaviour
{
	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bpm;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FE07C", Offset = "0x9FE07C")]
	public float rotationDegrees;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotationAxis;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool randomPhaseOffsetRotation;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 scaleMin;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 scaleMax;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool randomPhaseOffsetScale;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion startRotation;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 startScale;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float randomPhaseRot;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float randomPhaseScale;

	[Token(Token = "0x17000035")]
	public float Bps
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x1004EB4", Offset = "0x1004EB4", VA = "0x1004EB4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000036")]
	public float Spb
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x1004EC8", Offset = "0x1004EC8", VA = "0x1004EC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x1004EE4", Offset = "0x1004EE4", VA = "0x1004EE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1004F58", Offset = "0x1004F58", VA = "0x1004F58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x1005128", Offset = "0x1005128", VA = "0x1005128")]
	private float GetCosine(bool randomOffset, float offsetValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x10051F0", Offset = "0x10051F0", VA = "0x10051F0")]
	public BeatBouncer()
	{
	}
}
[Token(Token = "0x2000064")]
public class ColorShiftTest : MonoBehaviour
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ColorTriplet colorsMin;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ColorTriplet colorsDefault;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ColorTriplet colorsMax;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BlendableList<ColorTriplet> colors;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FE098", Offset = "0x9FE098")]
	public float hueShift;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer rnd;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xC2220C", Offset = "0xC2220C", VA = "0xC2220C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xC223A4", Offset = "0xC223A4", VA = "0xC223A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xC2231C", Offset = "0xC2231C", VA = "0xC2231C")]
	private void ApplyColor()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xC223A8", Offset = "0xC223A8", VA = "0xC223A8")]
	public ColorShiftTest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9FA698", Offset = "0x9FA698")]
public class ColorTriplet : IBlendable<ColorTriplet>
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color0;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color color1;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color2;

	[Token(Token = "0x17000037")]
	public Color Item
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0xC223B8", Offset = "0xC223B8", VA = "0xC223B8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xC22414", Offset = "0xC22414", VA = "0xC22414")]
	public ColorTriplet(Color color0, Color color1, Color color2)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xC224A0", Offset = "0xC224A0", VA = "0xC224A0", Slot = "4")]
	private ColorTriplet IBlendable<ColorTriplet>.Lerp(ColorTriplet b, float t)
	{
		return null;
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xC225E0", Offset = "0xC225E0", VA = "0xC225E0", Slot = "5")]
	private ColorTriplet IBlendable<ColorTriplet>.Slerp(ColorTriplet b, float t)
	{
		return null;
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC22714", Offset = "0xC22714", VA = "0xC22714")]
	private Color LerpHSV(Color a, Color b, float t)
	{
		return default(Color);
	}
}
[Token(Token = "0x2000066")]
public class RotatorThing : MonoBehaviour
{
	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion startRotation;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotationRange;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC79B08", Offset = "0xC79B08", VA = "0xC79B08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xC79B44", Offset = "0xC79B44", VA = "0xC79B44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xC79C4C", Offset = "0xC79C4C", VA = "0xC79C4C")]
	public RotatorThing()
	{
	}
}
[Token(Token = "0x2000067")]
public class NormalsFixer : MonoBehaviour
{
	[Token(Token = "0x6000196")]
	[Address(RVA = "0xE2983C", Offset = "0xE2983C", VA = "0xE2983C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA0E77C", Offset = "0xA0E77C")]
	private void FixNormals()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE29A98", Offset = "0xE29A98", VA = "0xE29A98")]
	private void FixNormalOnMesh(MeshFilter mf)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE29C70", Offset = "0xE29C70", VA = "0xE29C70")]
	public NormalsFixer()
	{
	}
}
[Token(Token = "0x2000068")]
public class PuffinAI : MonoBehaviour
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isEnRoute;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float speed;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 direction;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WalkAnimation animator;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xC682C8", Offset = "0xC682C8", VA = "0xC682C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xC68328", Offset = "0xC68328", VA = "0xC68328")]
	private void Update()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xC686F4", Offset = "0xC686F4", VA = "0xC686F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xC68560", Offset = "0xC68560", VA = "0xC68560")]
	private Vector3 DirectionToPlayer()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xC68858", Offset = "0xC68858", VA = "0xC68858")]
	public PuffinAI()
	{
	}
}
[Token(Token = "0x2000069")]
public class TempVegetable : MonoBehaviour, IInteractableByTool
{
	[Token(Token = "0x600019E")]
	[Address(RVA = "0xCA66E8", Offset = "0xCA66E8", VA = "0xCA66E8", Slot = "4")]
	public void DoInteraction(ITool tool)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xCA6814", Offset = "0xCA6814", VA = "0xCA6814")]
	public TempVegetable()
	{
	}
}
[Token(Token = "0x200006A")]
public class WalkAnimation : MonoBehaviour
{
	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playOnStart;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sequence seq1;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Sequence seq2;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPlaying;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion startRotation;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 originalEulerRotation;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OrientedPoint originalPointLocal;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NeatAudioPlayer potStepSound;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool leftRight;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1AE517C", Offset = "0x1AE517C", VA = "0x1AE517C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1AE526C", Offset = "0x1AE526C", VA = "0x1AE526C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1AE534C", Offset = "0x1AE534C", VA = "0x1AE534C")]
	private void SetupAnimation()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1AE5204", Offset = "0x1AE5204", VA = "0x1AE5204")]
	public void StartAnimation()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1AE57D0", Offset = "0x1AE57D0", VA = "0x1AE57D0")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x1AE58D4", Offset = "0x1AE58D4", VA = "0x1AE58D4")]
	public WalkAnimation()
	{
	}
}
[Token(Token = "0x200006B")]
public class PicoAchievements : PlatformAchievements
{
	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xDEA0F0", Offset = "0xDEA0F0", VA = "0xDEA0F0")]
	public PicoAchievements()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xDEA234", Offset = "0xDEA234", VA = "0xDEA234", Slot = "4")]
	public override void LoadAllAchievementProgress()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xDEA2E4", Offset = "0xDEA2E4", VA = "0xDEA2E4")]
	private void SetAchievementProgress(int key, Pico.Platform.Models.AchievementProgress a)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDEA3D8", Offset = "0xDEA3D8", VA = "0xDEA3D8", Slot = "5")]
	public override void SetUnlockableAchievement(int key, bool shouldBeUnlocked)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDEA484", Offset = "0xDEA484", VA = "0xDEA484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E7B4", Offset = "0xA0E7B4")]
	private void <LoadAllAchievementProgress>b__4_0(Message<AchievementProgressList> achievementList)
	{
	}
}
[Token(Token = "0x200006C")]
public class AnimatorPlaybackData : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private int m_stateNameHash;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int m_layer;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private uint m_frame;

	[Token(Token = "0x17000038")]
	public int StateNameHash
	{
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x1001230", Offset = "0x1001230", VA = "0x1001230")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000039")]
	public int Layer
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x1001238", Offset = "0x1001238", VA = "0x1001238")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700003A")]
	public uint Frame
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x1001240", Offset = "0x1001240", VA = "0x1001240")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1001248", Offset = "0x1001248", VA = "0x1001248")]
	public AnimatorPlaybackData()
	{
	}
}
[Token(Token = "0x200006D")]
public class AnimationCycleOffset : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnimationLength;

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x100113C", Offset = "0x100113C", VA = "0x100113C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x10011C0", Offset = "0x10011C0", VA = "0x10011C0")]
	public AnimationCycleOffset()
	{
	}
}
[Token(Token = "0x200006E")]
public class AudioFindOcean : MonoBehaviour
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject debugObj;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform points;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform soundObj;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform wayPointHolder;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform[] waypoints;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform player;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] newwaypoints;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] neighbours;

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1002090", Offset = "0x1002090", VA = "0x1002090")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1002214", Offset = "0x1002214", VA = "0x1002214")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x1002288", Offset = "0x1002288", VA = "0x1002288")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x10025C8", Offset = "0x10025C8", VA = "0x10025C8")]
	private Vector3 ClosestPointOnLine(Vector3 vA, Vector3 vB, Vector3 vPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x10027B4", Offset = "0x10027B4", VA = "0x10027B4")]
	public AudioFindOcean()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x10027BC", Offset = "0x10027BC", VA = "0x10027BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E7C4", Offset = "0xA0E7C4")]
	private int <Update>b__10_0(Vector3 way1, Vector3 way2)
	{
		return default(int);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x10028E0", Offset = "0x10028E0", VA = "0x10028E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E7D4", Offset = "0xA0E7D4")]
	private int <Update>b__10_1(Vector3 way1, Vector3 way2)
	{
		return default(int);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1002A08", Offset = "0x1002A08", VA = "0x1002A08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E7E4", Offset = "0xA0E7E4")]
	private int <Update>b__10_2(Vector3 way1, Vector3 way2)
	{
		return default(int);
	}
}
[Token(Token = "0x200006F")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA6D0", Offset = "0x9FA6D0")]
	private sealed class <>c__DisplayClass17_0
	{
		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float cury;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioManager <>4__this;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float curx;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float z;

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0x100396C", Offset = "0x100396C", VA = "0x100396C")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0x1003BE0", Offset = "0x1003BE0", VA = "0x1003BE0")]
		internal float <PlayArpeggio>b__0()
		{
			return default(float);
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0x1003BE8", Offset = "0x1003BE8", VA = "0x1003BE8")]
		internal void <PlayArpeggio>b__1(float x)
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0x1003BF0", Offset = "0x1003BF0", VA = "0x1003BF0")]
		internal void <PlayArpeggio>b__2()
		{
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x1003C30", Offset = "0x1003C30", VA = "0x1003C30")]
		internal void <PlayArpeggio>b__3()
		{
		}

		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x1003C70", Offset = "0x1003C70", VA = "0x1003C70")]
		internal float <PlayArpeggio>b__4()
		{
			return default(float);
		}

		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x1003C78", Offset = "0x1003C78", VA = "0x1003C78")]
		internal void <PlayArpeggio>b__5(float x)
		{
		}

		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x1003C80", Offset = "0x1003C80", VA = "0x1003C80")]
		internal void <PlayArpeggio>b__6()
		{
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x1003CC0", Offset = "0x1003CC0", VA = "0x1003CC0")]
		internal void <PlayArpeggio>b__7()
		{
		}
	}

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GestrumentGlobalSync meta;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int soloCursorNumber;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double newTempo;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double scale;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] niceArp;

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1002B2C", Offset = "0x1002B2C", VA = "0x1002B2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1002F94", Offset = "0x1002F94", VA = "0x1002F94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x10033FC", Offset = "0x10033FC", VA = "0x10033FC")]
	private void MilestoneEvents(MilestoneEvent e)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1003484", Offset = "0x1003484", VA = "0x1003484")]
	private void UpdateCursorPlayer(int curs, float x, float y, float z, bool gate)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x10034AC", Offset = "0x10034AC", VA = "0x10034AC")]
	private void UpdateTempo()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x10034B0", Offset = "0x10034B0", VA = "0x10034B0")]
	private void OnCreatureHappy(CreatureHappyEvent e)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1003898", Offset = "0x1003898", VA = "0x1003898")]
	private void OnCreatureEatFromHand(CreatureFedEvent e)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x10038C4", Offset = "0x10038C4", VA = "0x10038C4")]
	private void OnChop(ChopEvent e)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x10038F4", Offset = "0x10038F4", VA = "0x10038F4")]
	private void OnTill(TillEvent e)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1003924", Offset = "0x1003924", VA = "0x1003924")]
	private void OnItemCrafted(ItemCraftedEvent e)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1003928", Offset = "0x1003928", VA = "0x1003928")]
	private void OnCraftingSuccessful(CraftingSuccessfulEvent e)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1003948", Offset = "0x1003948", VA = "0x1003948")]
	private void OnSeedReleased(SeedbagReleaseSeedEvent e)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x10034D8", Offset = "0x10034D8", VA = "0x10034D8")]
	private void PlayArpeggio(float min = 0f, float max = 1f, float xmin = 0.8f, float xmax = 1f, float z = 0.3f, bool random = true, bool directionUp = false)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1003974", Offset = "0x1003974", VA = "0x1003974")]
	private void IndoorOutdoor(IndoorOutdoorEvent e)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1003988", Offset = "0x1003988", VA = "0x1003988")]
	private void OnBoat(BoatingEvent e)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x100399C", Offset = "0x100399C", VA = "0x100399C")]
	private void TempoEvent(AliveTempoEvent e)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1003B20", Offset = "0x1003B20", VA = "0x1003B20")]
	public static float Remap(float from, float fromMin, float fromMax, float toMin, float toMax)
	{
		return default(float);
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1003B3C", Offset = "0x1003B3C", VA = "0x1003B3C")]
	public AudioManager()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1003BD0", Offset = "0x1003BD0", VA = "0x1003BD0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E7F4", Offset = "0xA0E7F4")]
	private double <TempoEvent>b__20_0()
	{
		return default(double);
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1003BD8", Offset = "0x1003BD8", VA = "0x1003BD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0E804", Offset = "0xA0E804")]
	private void <TempoEvent>b__20_1(double x)
	{
	}
}
[Token(Token = "0x2000071")]
public class BiomeMusic : MonoBehaviour, IBiomeMusic
{
	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA6E0", Offset = "0x9FA6E0")]
	private sealed class <FadeOut>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource aS;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVol>5__3;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001DE")]
			[Address(RVA = "0x100788C", Offset = "0x100788C", VA = "0x100788C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E0")]
			[Address(RVA = "0x10078F4", Offset = "0x10078F4", VA = "0x10078F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1007728", Offset = "0x1007728", VA = "0x1007728")]
		[DebuggerHidden]
		public <FadeOut>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x100775C", Offset = "0x100775C", VA = "0x100775C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1007760", Offset = "0x1007760", VA = "0x1007760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1007894", Offset = "0x1007894", VA = "0x1007894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected AudioSource merchantMusic;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip mechantMusicDay;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public AudioClip mechantMusicNight;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected AudioSource dawnMusic;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected AudioSource duskMusic;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine fadeout;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1007288", Offset = "0x1007288", VA = "0x1007288", Slot = "4")]
	public void MerchantMusic(bool play = false)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x10075CC", Offset = "0x10075CC", VA = "0x10075CC")]
	protected void UpdateMerchantMusic(int hour)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1007460", Offset = "0x1007460", VA = "0x1007460")]
	private void KillOtherMusic()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1007540", Offset = "0x1007540", VA = "0x1007540")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E814", Offset = "0xA0E814")]
	private IEnumerator FadeOut(AudioSource aS, float time)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x1007754", Offset = "0x1007754", VA = "0x1007754")]
	public BiomeMusic()
	{
	}
}
[Token(Token = "0x2000073")]
public class BiomeMusicBiome2 : BiomeMusic
{
	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA6F0", Offset = "0x9FA6F0")]
	private sealed class <DelayedStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicBiome2 <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001EC")]
			[Address(RVA = "0x1007F80", Offset = "0x1007F80", VA = "0x1007F80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001EE")]
			[Address(RVA = "0x1007FE8", Offset = "0x1007FE8", VA = "0x1007FE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1007A44", Offset = "0x1007A44", VA = "0x1007A44")]
		[DebuggerHidden]
		public <DelayedStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1007DD4", Offset = "0x1007DD4", VA = "0x1007DD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1007DD8", Offset = "0x1007DD8", VA = "0x1007DD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1007F88", Offset = "0x1007F88", VA = "0x1007F88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NeatAudioPlayer ghostMusicPlayer;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x10078FC", Offset = "0x10078FC", VA = "0x10078FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x10079C8", Offset = "0x10079C8", VA = "0x10079C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E8C8", Offset = "0xA0E8C8")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1007A70", Offset = "0x1007A70", VA = "0x1007A70")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x1007AD8", Offset = "0x1007AD8", VA = "0x1007AD8")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x1007BB8", Offset = "0x1007BB8", VA = "0x1007BB8")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x1007BD4", Offset = "0x1007BD4", VA = "0x1007BD4")]
	public void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x1007CD0", Offset = "0x1007CD0", VA = "0x1007CD0")]
	public void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x1007DCC", Offset = "0x1007DCC", VA = "0x1007DCC")]
	public BiomeMusicBiome2()
	{
	}
}
[Token(Token = "0x2000075")]
public class BiomeMusicGeneric : BiomeMusic
{
	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA700", Offset = "0x9FA700")]
	private sealed class <DelayedStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicGeneric <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001F7")]
			[Address(RVA = "0x100845C", Offset = "0x100845C", VA = "0x100845C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001F9")]
			[Address(RVA = "0x10084C4", Offset = "0x10084C4", VA = "0x10084C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x1008138", Offset = "0x1008138", VA = "0x1008138")]
		[DebuggerHidden]
		public <DelayedStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x10082B0", Offset = "0x10082B0", VA = "0x10082B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x10082B4", Offset = "0x10082B4", VA = "0x10082B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x1008464", Offset = "0x1008464", VA = "0x1008464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x1007FF0", Offset = "0x1007FF0", VA = "0x1007FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x10080BC", Offset = "0x10080BC", VA = "0x10080BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0E97C", Offset = "0xA0E97C")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1008164", Offset = "0x1008164", VA = "0x1008164")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x10081CC", Offset = "0x10081CC", VA = "0x10081CC")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x10082A8", Offset = "0x10082A8", VA = "0x10082A8")]
	public BiomeMusicGeneric()
	{
	}
}
[Token(Token = "0x2000077")]
public class BiomeMusicHomeland : BiomeMusic, IInitializable
{
	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA710", Offset = "0x9FA710")]
	private sealed class <DelayedStart>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicHomeland <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000208")]
			[Address(RVA = "0x10093A4", Offset = "0x10093A4", VA = "0x10093A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600020A")]
			[Address(RVA = "0x100940C", Offset = "0x100940C", VA = "0x100940C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0x1008B64", Offset = "0x1008B64", VA = "0x1008B64")]
		[DebuggerHidden]
		public <DelayedStart>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0x10091C0", Offset = "0x10091C0", VA = "0x10091C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0x10091C4", Offset = "0x10091C4", VA = "0x10091C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0x10093AC", Offset = "0x10093AC", VA = "0x10093AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA720", Offset = "0x9FA720")]
	private sealed class <CheckNormalSpecialMusicPlaying>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BiomeMusicHomeland <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600020E")]
			[Address(RVA = "0x1009150", Offset = "0x1009150", VA = "0x1009150", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000210")]
			[Address(RVA = "0x10091B8", Offset = "0x10091B8", VA = "0x10091B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0x1008CFC", Offset = "0x1008CFC", VA = "0x1008CFC")]
		[DebuggerHidden]
		public <CheckNormalSpecialMusicPlaying>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0x1008FDC", Offset = "0x1008FDC", VA = "0x1008FDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600020D")]
		[Address(RVA = "0x1008FE0", Offset = "0x1008FE0", VA = "0x1008FE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0x1009158", Offset = "0x1009158", VA = "0x1009158", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA730", Offset = "0x9FA730")]
	private sealed class <FadeOut>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource aS;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <startVol>5__3;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000214")]
			[Address(RVA = "0x1009544", Offset = "0x1009544", VA = "0x1009544", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000216")]
			[Address(RVA = "0x10095AC", Offset = "0x10095AC", VA = "0x10095AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0x1008F38", Offset = "0x1008F38", VA = "0x1008F38")]
		[DebuggerHidden]
		public <FadeOut>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0x1009414", Offset = "0x1009414", VA = "0x1009414", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0x1009418", Offset = "0x1009418", VA = "0x1009418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000215")]
		[Address(RVA = "0x100954C", Offset = "0x100954C", VA = "0x100954C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly YieldInstruction WaitASec;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x10084CC", Offset = "0x10084CC", VA = "0x10084CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x10086C0", Offset = "0x10086C0", VA = "0x10086C0", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1008644", Offset = "0x1008644", VA = "0x1008644")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EA30", Offset = "0xA0EA30")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1008B90", Offset = "0x1008B90", VA = "0x1008B90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1008C80", Offset = "0x1008C80", VA = "0x1008C80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EA94", Offset = "0xA0EA94")]
	private IEnumerator CheckNormalSpecialMusicPlaying()
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1008D28", Offset = "0x1008D28", VA = "0x1008D28")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1008D90", Offset = "0x1008D90", VA = "0x1008D90")]
	private bool CheckOnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x100873C", Offset = "0x100873C", VA = "0x100873C")]
	private void CheckTime(int hour)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1008E6C", Offset = "0x1008E6C", VA = "0x1008E6C")]
	private bool NothingSpecialPlaying()
	{
		return default(bool);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1008EAC", Offset = "0x1008EAC", VA = "0x1008EAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EAF8", Offset = "0xA0EAF8")]
	private IEnumerator FadeOut(AudioSource aS, float time)
	{
		return null;
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1008F64", Offset = "0x1008F64", VA = "0x1008F64")]
	public BiomeMusicHomeland()
	{
	}
}
[Token(Token = "0x200007B")]
public class BirdSoundSpawner : MonoBehaviour
{
	[Token(Token = "0x200007C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA740", Offset = "0x9FA740")]
	private sealed class <SpawnRandomBird>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BirdSoundSpawner <>4__this;

		[Token(Token = "0x17000047")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021E")]
			[Address(RVA = "0x1009904", Offset = "0x1009904", VA = "0x1009904", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000048")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0x100996C", Offset = "0x100996C", VA = "0x100996C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x1009678", Offset = "0x1009678", VA = "0x1009678")]
		[DebuggerHidden]
		public <SpawnRandomBird>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x10096B8", Offset = "0x10096B8", VA = "0x10096B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0x10096BC", Offset = "0x10096BC", VA = "0x10096BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021F")]
		[Address(RVA = "0x100990C", Offset = "0x100990C", VA = "0x100990C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator coroutine;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue soundCue;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] trees;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float waitMin;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float waitMax;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x10095B4", Offset = "0x10095B4", VA = "0x10095B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x100966C", Offset = "0x100966C", VA = "0x100966C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x10095F0", Offset = "0x10095F0", VA = "0x10095F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EC4C", Offset = "0xA0EC4C")]
	private IEnumerator SpawnRandomBird()
	{
		return null;
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x10096A4", Offset = "0x10096A4", VA = "0x10096A4")]
	public BirdSoundSpawner()
	{
	}
}
[Token(Token = "0x200007D")]
public class BlowBirdSounds : MonoBehaviour
{
	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer blowBirdSounds;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue snoreCue;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue tweetCue;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PITCH;

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1009974", Offset = "0x1009974", VA = "0x1009974")]
	private void Snore()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x1009A50", Offset = "0x1009A50", VA = "0x1009A50")]
	private void Tweet()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x1009A90", Offset = "0x1009A90", VA = "0x1009A90")]
	public BlowBirdSounds()
	{
	}
}
[Token(Token = "0x200007E")]
public class CreatureSounds : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer voiceAudioPlayer;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioPlayer footstepsAudioPlayer;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PITCH;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue normalVoice;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NeatAudioCue shortVoice;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NeatAudioCue cozyVoice1;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NeatAudioCue cozyVoice2;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NeatAudioCue eatVoice;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioCue happyVoice;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CreatureHappyEvent happyEvent;

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC2FB78", Offset = "0xC2FB78", VA = "0xC2FB78")]
	private void IdleSpeak()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xC2FC74", Offset = "0xC2FC74", VA = "0xC2FC74")]
	private void IdleSpeakShort()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xC2FD70", Offset = "0xC2FD70", VA = "0xC2FD70")]
	private void CozySpeak1()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xC2FE80", Offset = "0xC2FE80", VA = "0xC2FE80")]
	private void CozySpeak2()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xC2FF7C", Offset = "0xC2FF7C", VA = "0xC2FF7C")]
	private void Footstep()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xC30074", Offset = "0xC30074", VA = "0xC30074")]
	private void HappySpeak()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xC30188", Offset = "0xC30188", VA = "0xC30188")]
	private void EatSpeak()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xC30284", Offset = "0xC30284", VA = "0xC30284")]
	public CreatureSounds()
	{
	}
}
[Token(Token = "0x200007F")]
public class GodIslandAnimationSoundTriggers : MonoBehaviour
{
	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NeatAudioPlayer m_god1;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NeatAudioPlayer m_god2;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeatAudioPlayer m_god3;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NeatAudioPlayer m_special;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private NeatAudioPlayer m_music;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NeatAudioCue[] m_audioCues;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NeatAudioCue[] m_musicCues;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xE03938", Offset = "0xE03938", VA = "0xE03938")]
	public void TriggerSoundGod1(int audioCueIndex)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xE03990", Offset = "0xE03990", VA = "0xE03990")]
	public void TriggerSoundGod2(int audioCueIndex)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xE039E8", Offset = "0xE039E8", VA = "0xE039E8")]
	public void TriggerSoundGod3(int audioCueIndex)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xE03A40", Offset = "0xE03A40", VA = "0xE03A40")]
	public void TriggerSoundSpecial(int audioCueIndex)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xE03A98", Offset = "0xE03A98", VA = "0xE03A98")]
	public void TriggerMusic(int audioCueIndex)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xE03B78", Offset = "0xE03B78", VA = "0xE03B78")]
	public GodIslandAnimationSoundTriggers()
	{
	}
}
[Token(Token = "0x2000080")]
public interface IBiomeMusic
{
	[Token(Token = "0x6000234")]
	void MerchantMusic(bool play = false);
}
[Token(Token = "0x2000081")]
public class ImpactSounds : MonoBehaviour
{
	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NeatAudioPlayer impactSoundPlayer;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue impactSoundCue;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool limitPlayback;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly int SPEED;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xE10670", Offset = "0xE10670", VA = "0xE10670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xE10844", Offset = "0xE10844", VA = "0xE10844")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xE109A8", Offset = "0xE109A8", VA = "0xE109A8")]
	public void TriggerImpactSound(float impactSpeed)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xE10AA4", Offset = "0xE10AA4", VA = "0xE10AA4")]
	public ImpactSounds()
	{
	}
}
[Token(Token = "0x2000082")]
public class ManateeSounds : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioPlayer voiceAudioPlayer;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PITCH;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue manateeEatingFromHandEnd;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioCue manateeEatingFromHandStart;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NeatAudioCue manateeEatNoHold;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NeatAudioCue manateeIdle;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public NeatAudioCue manateeIdleBreakerShake;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public NeatAudioCue manateePetting;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioCue manateeReactionHappy;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NeatAudioCue manateeSleepingStart;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NeatAudioCue manateeSnoring;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CreatureHappyEvent happyEvent;

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCFBAD8", Offset = "0xCFBAD8", VA = "0xCFBAD8")]
	private void ManateeEatingFromHandEnd()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCFBBD4", Offset = "0xCFBBD4", VA = "0xCFBBD4")]
	private void ManateeEatingFromHandStart()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCFBCD0", Offset = "0xCFBCD0", VA = "0xCFBCD0")]
	private void ManateeEatNoHold()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xCFBDCC", Offset = "0xCFBDCC", VA = "0xCFBDCC")]
	private void ManateeIdle()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xCFBEC8", Offset = "0xCFBEC8", VA = "0xCFBEC8")]
	private void ManateeIdleBreakerShake()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xCFBFC4", Offset = "0xCFBFC4", VA = "0xCFBFC4")]
	private void ManateePetting()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xCFC0C0", Offset = "0xCFC0C0", VA = "0xCFC0C0")]
	private void ManateeReactionHappy()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xCFC1D4", Offset = "0xCFC1D4", VA = "0xCFC1D4")]
	private void ManateeSleepingStart()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xCFC2D0", Offset = "0xCFC2D0", VA = "0xCFC2D0")]
	private void ManateeSnoring()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xCFC3CC", Offset = "0xCFC3CC", VA = "0xCFC3CC")]
	public ManateeSounds()
	{
	}
}
[Token(Token = "0x2000083")]
public class MerchantSounds : MonoBehaviour, IInitializable
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private NeatAudioPlayer blinkSoundPlayer;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NeatAudioPlayer merchantSounds;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeatAudioCue Hello;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NeatAudioCue Selected;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private NeatAudioCue Pay;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NeatAudioCue Thanks;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NeatAudioCue HereYouGo;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NeatAudioCue m_toolUpgrade;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue m_moneybagGrabbed;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NeatAudioCue m_paymentNoLongerSufficient;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int PICK;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float pickVal;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EnvironmentManager environmentManager;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD0722C", Offset = "0xD0722C", VA = "0xD0722C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD0731C", Offset = "0xD0731C", VA = "0xD0731C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD0740C", Offset = "0xD0740C", VA = "0xD0740C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xD0749C", Offset = "0xD0749C", VA = "0xD0749C")]
	private void CheckNight(int hour)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xD074B8", Offset = "0xD074B8", VA = "0xD074B8")]
	private void Snore()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD074BC", Offset = "0xD074BC", VA = "0xD074BC")]
	private void BlinkSound()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD074D8", Offset = "0xD074D8", VA = "0xD074D8")]
	private void HelloSound()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xD07588", Offset = "0xD07588", VA = "0xD07588")]
	private void SelectedSound()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xD07638", Offset = "0xD07638", VA = "0xD07638")]
	private void PaySound()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD076E8", Offset = "0xD076E8", VA = "0xD076E8")]
	private void ThanksSound()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xD07798", Offset = "0xD07798", VA = "0xD07798")]
	private void HereYouGoSound()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xD07848", Offset = "0xD07848", VA = "0xD07848")]
	private void ToolUpgrade()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xD078F8", Offset = "0xD078F8", VA = "0xD078F8")]
	private void PaymentNoLongerSufficient()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xD079A8", Offset = "0xD079A8", VA = "0xD079A8")]
	private void SeashellBagGrabbed()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xD07A58", Offset = "0xD07A58", VA = "0xD07A58")]
	public MerchantSounds()
	{
	}
}
[Token(Token = "0x2000084")]
public class MixSnapshotTrigger : MonoBehaviour
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot Indoors;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerSnapshot Outdoors;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float transitionTimeEnter;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float transitionTimeExit;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xD08814", Offset = "0xD08814", VA = "0xD08814")]
	public void OnTriggerEnter(Collider collision)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xD08934", Offset = "0xD08934", VA = "0xD08934")]
	public void OnTriggerExit(Collider collision)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD08A50", Offset = "0xD08A50", VA = "0xD08A50")]
	public MixSnapshotTrigger()
	{
	}
}
[Token(Token = "0x2000085")]
public class ParticleSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int prevCount;

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xDE8998", Offset = "0xDE8998", VA = "0xDE8998")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xDE8A84", Offset = "0xDE8A84", VA = "0xDE8A84")]
	private void InitializeIfNeeded()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xDE8BB0", Offset = "0xDE8BB0", VA = "0xDE8BB0")]
	public ParticleSoundPlayer()
	{
	}
}
[Token(Token = "0x2000086")]
public class PlantSounds : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NeatAudioCue uprootSound;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue replantSound;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xDFA3C0", Offset = "0xDFA3C0", VA = "0xDFA3C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xDFA4C8", Offset = "0xDFA4C8", VA = "0xDFA4C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xDFA5D0", Offset = "0xDFA5D0", VA = "0xDFA5D0")]
	private void Uprooted(PlantUprootedEvent e)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDFA758", Offset = "0xDFA758", VA = "0xDFA758")]
	private void Replanted(ReplantEvent e)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xDFA8E0", Offset = "0xDFA8E0", VA = "0xDFA8E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xDFA8E4", Offset = "0xDFA8E4", VA = "0xDFA8E4")]
	public PlantSounds()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FA750", Offset = "0x9FA750")]
public class RandomSoundPlayer : MonoBehaviour
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip[] sounds;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource aSource;

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xC6E2EC", Offset = "0xC6E2EC", VA = "0xC6E2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xC6E34C", Offset = "0xC6E34C", VA = "0xC6E34C")]
	public void PlayRandom()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xC6E3BC", Offset = "0xC6E3BC", VA = "0xC6E3BC")]
	public RandomSoundPlayer()
	{
	}
}
[Token(Token = "0x2000088")]
public class SetBackgroundMusic : MonoBehaviour
{
	[Token(Token = "0x2000089")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA7B4", Offset = "0x9FA7B4")]
	private sealed class <DelayedStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SetBackgroundMusic <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600026A")]
			[Address(RVA = "0xCDCD94", Offset = "0xCDCD94", VA = "0xCDCD94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600026C")]
			[Address(RVA = "0xCDCDFC", Offset = "0xCDCDFC", VA = "0xCDCDFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000267")]
		[Address(RVA = "0xCDCB28", Offset = "0xCDCB28", VA = "0xCDCB28")]
		[DebuggerHidden]
		public <DelayedStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0xCDCBC4", Offset = "0xCDCBC4", VA = "0xCDCBC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000269")]
		[Address(RVA = "0xCDCBC8", Offset = "0xCDCBC8", VA = "0xCDCBC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600026B")]
		[Address(RVA = "0xCDCD9C", Offset = "0xCDCD9C", VA = "0xCDCD9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GestrumentGlobalSync.Music backgroundMusic;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private ModalTranspose boatTransposition;

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xCDCAA8", Offset = "0xCDCAA8", VA = "0xCDCAA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xCDCAAC", Offset = "0xCDCAAC", VA = "0xCDCAAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0ED00", Offset = "0xA0ED00")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xCDCB54", Offset = "0xCDCB54", VA = "0xCDCB54")]
	private void SetBoatTranspose(int transp)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xCDCBBC", Offset = "0xCDCBBC", VA = "0xCDCBBC")]
	public SetBackgroundMusic()
	{
	}
}
[Token(Token = "0x200008A")]
public class StartMusicSystemDelayed : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA7C4", Offset = "0x9FA7C4")]
	private sealed class <DelayedStart>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMusicSystemDelayed <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000273")]
			[Address(RVA = "0xCECAB4", Offset = "0xCECAB4", VA = "0xCECAB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000275")]
			[Address(RVA = "0xCECB1C", Offset = "0xCECB1C", VA = "0xCECB1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000270")]
		[Address(RVA = "0xCEC9BC", Offset = "0xCEC9BC", VA = "0xCEC9BC")]
		[DebuggerHidden]
		public <DelayedStart>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000271")]
		[Address(RVA = "0xCEC9F0", Offset = "0xCEC9F0", VA = "0xCEC9F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000272")]
		[Address(RVA = "0xCEC9F4", Offset = "0xCEC9F4", VA = "0xCEC9F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000274")]
		[Address(RVA = "0xCECABC", Offset = "0xCECABC", VA = "0xCECABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject musicController;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xCEC914", Offset = "0xCEC914", VA = "0xCEC914")]
	private void Start()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xCEC940", Offset = "0xCEC940", VA = "0xCEC940")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EDB4", Offset = "0xA0EDB4")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xCEC9E8", Offset = "0xCEC9E8", VA = "0xCEC9E8")]
	public StartMusicSystemDelayed()
	{
	}
}
[Token(Token = "0x200008C")]
public class StaticSoundSpawner : MonoBehaviour
{
	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA7D4", Offset = "0x9FA7D4")]
	private sealed class <SpawnRandomSound>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StaticSoundSpawner <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027C")]
			[Address(RVA = "0xCF0110", Offset = "0xCF0110", VA = "0xCF0110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027E")]
			[Address(RVA = "0xCF0178", Offset = "0xCF0178", VA = "0xCF0178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000279")]
		[Address(RVA = "0xCEFF78", Offset = "0xCEFF78", VA = "0xCEFF78")]
		[DebuggerHidden]
		public <SpawnRandomSound>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xCEFFAC", Offset = "0xCEFFAC", VA = "0xCEFFAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xCEFFB0", Offset = "0xCEFFB0", VA = "0xCEFFB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027D")]
		[Address(RVA = "0xCF0118", Offset = "0xCF0118", VA = "0xCF0118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator coroutine;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NeatAudioCue[] soundCue;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NeatAudioPlayer[] soundPlayers;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minTime;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxTime;

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xCEFEC0", Offset = "0xCEFEC0", VA = "0xCEFEC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xCEFEFC", Offset = "0xCEFEFC", VA = "0xCEFEFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EE68", Offset = "0xA0EE68")]
	private IEnumerator SpawnRandomSound()
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xCEFFA4", Offset = "0xCEFFA4", VA = "0xCEFFA4")]
	public StaticSoundSpawner()
	{
	}
}
[Token(Token = "0x200008E")]
public class TransposeTester : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA7E4", Offset = "0x9FA7E4")]
	private sealed class <DelayStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransposeTester <>4__this;

		[Token(Token = "0x1700004F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000286")]
			[Address(RVA = "0x1AE2060", Offset = "0x1AE2060", VA = "0x1AE2060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000288")]
			[Address(RVA = "0x1AE20C8", Offset = "0x1AE20C8", VA = "0x1AE20C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000283")]
		[Address(RVA = "0x1AE1EDC", Offset = "0x1AE1EDC", VA = "0x1AE1EDC")]
		[DebuggerHidden]
		public <DelayStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000284")]
		[Address(RVA = "0x1AE1FA0", Offset = "0x1AE1FA0", VA = "0x1AE1FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000285")]
		[Address(RVA = "0x1AE1FA4", Offset = "0x1AE1FA4", VA = "0x1AE1FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000287")]
		[Address(RVA = "0x1AE2068", Offset = "0x1AE2068", VA = "0x1AE2068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int sinkid;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int transposeslot;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool dostuff;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1AE1E34", Offset = "0x1AE1E34", VA = "0x1AE1E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1AE1E60", Offset = "0x1AE1E60", VA = "0x1AE1E60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EF1C", Offset = "0xA0EF1C")]
	private IEnumerator DelayStart()
	{
		return null;
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1AE1F08", Offset = "0x1AE1F08", VA = "0x1AE1F08")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1AE1F98", Offset = "0x1AE1F98", VA = "0x1AE1F98")]
	public TransposeTester()
	{
	}
}
[Token(Token = "0x2000090")]
public class TreeWindSounds : MonoBehaviour
{
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA7F4", Offset = "0x9FA7F4")]
	private sealed class <WindTreeSoundPlayer>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TreeWindSounds <>4__this;

		[Token(Token = "0x17000051")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000291")]
			[Address(RVA = "0x1AE273C", Offset = "0x1AE273C", VA = "0x1AE273C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000293")]
			[Address(RVA = "0x1AE27A4", Offset = "0x1AE27A4", VA = "0x1AE27A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600028E")]
		[Address(RVA = "0x1AE21E8", Offset = "0x1AE21E8", VA = "0x1AE21E8")]
		[DebuggerHidden]
		public <WindTreeSoundPlayer>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x1AE23F8", Offset = "0x1AE23F8", VA = "0x1AE23F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x1AE23FC", Offset = "0x1AE23FC", VA = "0x1AE23FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x1AE2744", Offset = "0x1AE2744", VA = "0x1AE2744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator coroutine;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NeatAudioPlayer soundPlayer;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] trees;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] windPlayers;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NeatAudioPlayer generalWindPlayer;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform player;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float generalWindHeightMultiplier;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int HEIGHT;

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1AE20D0", Offset = "0x1AE20D0", VA = "0x1AE20D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1AE216C", Offset = "0x1AE216C", VA = "0x1AE216C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0EFD0", Offset = "0xA0EFD0")]
	private IEnumerator WindTreeSoundPlayer()
	{
		return null;
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1AE2214", Offset = "0x1AE2214", VA = "0x1AE2214")]
	public TreeWindSounds()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1AE2288", Offset = "0x1AE2288", VA = "0x1AE2288")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F034", Offset = "0xA0F034")]
	private int <WindTreeSoundPlayer>b__9_0(GameObject g1, GameObject g2)
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x2000092")]
public class BlendableList<T> : List<T> where T : IBlendable<T>
{
	[Token(Token = "0x6000294")]
	public T GetByIndex(float iFloat, bool slerp = false)
	{
		return (T)null;
	}

	[Token(Token = "0x6000295")]
	public T GetNormalized(float t, bool slerp = false)
	{
		return (T)null;
	}

	[Token(Token = "0x6000296")]
	public BlendableList()
	{
	}
}
[Token(Token = "0x2000093")]
public interface IBlendable<T>
{
	[Token(Token = "0x6000297")]
	T Lerp(T b, float t);

	[Token(Token = "0x6000298")]
	T Slerp(T b, float t);
}
[Token(Token = "0x2000094")]
public class AnalyticsManager : MonoBehaviour
{
	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnalyticsManager Instance;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool runInEditor;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	public bool trackLocation;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, object> treesChopped;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, object> puffkinInteractions;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, object> manateeInteractions;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, object> boatingTime;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, object> outdoorTime;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, object> plantStats;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, object> toolUse;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, object> crafting;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<string, object> playerLocation;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE3A8", Offset = "0x9FE3A8")]
	private int treeChops;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float waterPoured;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int seedsSown;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE414", Offset = "0x9FE414")]
	[SerializeField]
	private int plantsSprouted;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private int plantsReplanted;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE470", Offset = "0x9FE470")]
	[SerializeField]
	private int puffkinsPetted;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private int puffkinsFed;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private int manateesPetted;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int manateesFed;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE4EC", Offset = "0x9FE4EC")]
	[SerializeField]
	private int itemsCrafted;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE538", Offset = "0x9FE538")]
	private int boatingTrips;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float timeOnBoat;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float timeOutdoors;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private float timeIndoors;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private float timeOutdoorsPercent;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float timeIndoorsPercent;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE5D4", Offset = "0x9FE5D4")]
	private List<string> oneShotEventsRegistered;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private List<string> standardEventsRegistered;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float boatTimeStamp;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float indoorOutdoorTimeStamp;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xFF9B94", Offset = "0xFF9B94", VA = "0xFF9B94")]
	private void Awake()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xFF9E7C", Offset = "0xFF9E7C", VA = "0xFF9E7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xFFA224", Offset = "0xFFA224", VA = "0xFFA224")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xFFA5CC", Offset = "0xFFA5CC", VA = "0xFFA5CC")]
	private void OnWaterCanDropped(WateringCanDroppedEvent e)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xFFA5F0", Offset = "0xFFA5F0", VA = "0xFFA5F0")]
	private void OnItemCrafted(ItemCraftedEvent e)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xFFA600", Offset = "0xFFA600", VA = "0xFFA600")]
	private void OnCreatureInteract(CreatureInteractionEvent e)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xFFA738", Offset = "0xFFA738", VA = "0xFFA738")]
	private void OnBoatingEvent(BoatingEvent e)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xFFA7A4", Offset = "0xFFA7A4", VA = "0xFFA7A4")]
	private void OnReleaseSeed(SeedbagReleaseSeedEvent e)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xFFA7B4", Offset = "0xFFA7B4", VA = "0xFFA7B4")]
	private void OnLeaveOrEnterHouse(IndoorOutdoorEvent e)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xFFA828", Offset = "0xFFA828", VA = "0xFFA828")]
	private void OnChopped(ChoppedEvent e)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xFFA838", Offset = "0xFFA838", VA = "0xFFA838")]
	private void OnReplanting(ReplantEvent e)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xFFA848", Offset = "0xFFA848", VA = "0xFFA848")]
	private void OnPlantSprouted(PlantSproutedEvent e)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xFFA858", Offset = "0xFFA858", VA = "0xFFA858")]
	public void DispatchOneShotEvent(string name, [Optional] Dictionary<string, object> param)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xFFA91C", Offset = "0xFFA91C", VA = "0xFFA91C")]
	public void DispatchGameStartEvent()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xFFA9B8", Offset = "0xFFA9B8", VA = "0xFFA9B8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xFFAA04", Offset = "0xFFAA04", VA = "0xFFAA04")]
	private void DispatchAnalyticsEvents()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xFFB128", Offset = "0xFFB128", VA = "0xFFB128")]
	private void DispatchLocationTrackingEvent()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xFFACBC", Offset = "0xFFACBC", VA = "0xFFACBC")]
	private void DispatchToolUseEvent()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xFFAA64", Offset = "0xFFAA64", VA = "0xFFAA64")]
	private void DispatchCreatureInteractEvents()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xFFADE8", Offset = "0xFFADE8", VA = "0xFFADE8")]
	private void DispatchCraftingEvent()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xFFABD0", Offset = "0xFFABD0", VA = "0xFFABD0")]
	private void DispatchBoatingEvent()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xFFAE94", Offset = "0xFFAE94", VA = "0xFFAE94")]
	private void DispatchPlantStatsEvent()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xFFAF80", Offset = "0xFFAF80", VA = "0xFFAF80")]
	private void DispatchPlayerTrackingEvent()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xFFB2C4", Offset = "0xFFB2C4", VA = "0xFFB2C4")]
	public AnalyticsManager()
	{
	}
}
[Token(Token = "0x2000095")]
public class AttachSlot : MonoBehaviour
{
	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool applySlotRotationToObject;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool applySlotScaleToObject;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveObjectBase objectToAttach;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FollowJoint followJoint;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SaveObjectBase attachedObject;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action<SaveObjectBase, Grabbable> m_onObjectAttached;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action<SaveObjectBase, Grabbable> m_onObjectDetached;

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1001260", Offset = "0x1001260", VA = "0x1001260")]
	public ComponentState CreateState(ComponentState state)
	{
		return null;
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x10013B8", Offset = "0x10013B8", VA = "0x10013B8")]
	public void Initialize(ComponentState state)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x100179C", Offset = "0x100179C", VA = "0x100179C")]
	public void RegisterAttachedHandler(Action<SaveObjectBase, Grabbable> onAttatched)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x100182C", Offset = "0x100182C", VA = "0x100182C")]
	public void DeregisterAttatchedHandler(Action<SaveObjectBase, Grabbable> onAttatched)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x10018BC", Offset = "0x10018BC", VA = "0x10018BC")]
	public void RegisterDetachedHandler(Action<SaveObjectBase, Grabbable> onDetached)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x100194C", Offset = "0x100194C", VA = "0x100194C")]
	public void DeregisterDetachedHandler(Action<SaveObjectBase, Grabbable> onDetached)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x10019DC", Offset = "0x10019DC", VA = "0x10019DC")]
	public bool HasAttachedObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1001AD8", Offset = "0x1001AD8", VA = "0x1001AD8")]
	public SaveObjectBase GetAttachedObject()
	{
		return null;
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x100153C", Offset = "0x100153C", VA = "0x100153C")]
	public bool AttachSaveObject(SaveObjectBase obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1001AE0", Offset = "0x1001AE0", VA = "0x1001AE0")]
	public void DetachCurrentObject()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1001C50", Offset = "0x1001C50", VA = "0x1001C50")]
	public FollowJoint GetFollowJoint()
	{
		return null;
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1001C58", Offset = "0x1001C58", VA = "0x1001C58")]
	public AttachSlot()
	{
	}
}
[Serializable]
[Token(Token = "0x2000096")]
public class AttachSlotState : ComponentState
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID attachedObject;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x10013B0", Offset = "0x10013B0", VA = "0x10013B0")]
	public AttachSlotState()
	{
	}
}
[Token(Token = "0x2000097")]
public class AttachSlotsContainer : Container, IInitializable
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AttachSlot[] slots;

	[Token(Token = "0x17000053")]
	public override float FillPercent
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1001C60", Offset = "0x1001C60", VA = "0x1001C60", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1001CC0", Offset = "0x1001CC0", VA = "0x1001CC0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1001EBC", Offset = "0x1001EBC", VA = "0x1001EBC", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1002028", Offset = "0x1002028", VA = "0x1002028")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1002088", Offset = "0x1002088", VA = "0x1002088")]
	public AttachSlotsContainer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000098")]
public class AttachSlotsContainerState : ComponentState
{
	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AttachSlotState[] slotStates;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1001EB4", Offset = "0x1001EB4", VA = "0x1001EB4")]
	public AttachSlotsContainerState()
	{
	}
}
[Token(Token = "0x2000099")]
public class EventManager
{
	[Token(Token = "0x200009A")]
	public delegate void EventDelegate<T>(T e) where T : GameEvent;

	[Token(Token = "0x200009B")]
	private delegate void EventDelegate(GameEvent e);

	[Token(Token = "0x200009C")]
	private struct EventDelegateCounter
	{
		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private EventDelegate m_delegate;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;

		[Token(Token = "0x17000055")]
		public EventDelegate Delegate
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0xAF4964", Offset = "0xAF4964", VA = "0xAF4964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xAF496C", Offset = "0xAF496C", VA = "0xAF496C")]
		public EventDelegateCounter(EventDelegate del, int count)
		{
		}
	}

	[Token(Token = "0x200009D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA804", Offset = "0x9FA804")]
	private sealed class <>c__DisplayClass10_0<T> where T : GameEvent
	{
		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventDelegate<T> del;

		[Token(Token = "0x60002D6")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x60002D7")]
		internal void <AddListener>b__0(GameEvent e)
		{
		}
	}

	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA814", Offset = "0x9FA814")]
	private sealed class <>c__DisplayClass12_0<T> where T : GameEvent
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EventDelegate<T> del;

		[Token(Token = "0x60002D8")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60002D9")]
		internal void <AddListenerForTarget>b__0(GameEvent e)
		{
		}
	}

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventManager instance;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Type, EventDelegate> delegates;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Delegate, EventDelegate> delegateLookup;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Type, Dictionary<int, EventDelegate>> m_targetDelegates;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Delegate, EventDelegateCounter> m_targetDelegateLookup;

	[Token(Token = "0x17000054")]
	public static EventManager Instance
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x137E438", Offset = "0x137E438", VA = "0x137E438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002C5")]
	public void AddListener<T>(EventDelegate<T> del) where T : GameEvent
	{
	}

	[Token(Token = "0x60002C6")]
	public void RemoveListener<T>(EventDelegate<T> del) where T : GameEvent
	{
	}

	[Token(Token = "0x60002C7")]
	public void AddListenerForTarget<T>(EventDelegate<T> del, GameObject target) where T : GameEvent
	{
	}

	[Token(Token = "0x60002C8")]
	public void RemoveListenerForTarget<T>(EventDelegate<T> del, GameObject target) where T : GameEvent
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x137E5D4", Offset = "0x137E5D4", VA = "0x137E5D4")]
	public void Raise(GameEvent e)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x137EA04", Offset = "0x137EA04", VA = "0x137EA04")]
	public void RaiseForTarget(GameEvent e, GameObject target)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x137E4BC", Offset = "0x137E4BC", VA = "0x137E4BC")]
	public EventManager()
	{
	}
}
[Token(Token = "0x200009F")]
public class GameEvent
{
	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x10899C8", Offset = "0x10899C8", VA = "0x10899C8")]
	public GameEvent()
	{
	}
}
[Token(Token = "0x20000A0")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x20000A1")]
	public delegate void OnWorldZoneChangedCallback(WorldZone newWorldZone);

	[Token(Token = "0x20000A2")]
	public delegate void OnPlayerLeftWorldZoneCallback(WorldZone leftWorldZone);

	[Token(Token = "0x20000A3")]
	public enum State
	{
		[Token(Token = "0x40002E2")]
		LoadGame,
		[Token(Token = "0x40002E3")]
		LoadStartingAreas,
		[Token(Token = "0x40002E4")]
		LoadingStaticScenes,
		[Token(Token = "0x40002E5")]
		LoadingDynamicScenes,
		[Token(Token = "0x40002E6")]
		SpawningObjects,
		[Token(Token = "0x40002E7")]
		InitializingObjects,
		[Token(Token = "0x40002E8")]
		FinishUpLoading,
		[Token(Token = "0x40002E9")]
		PlayingGame,
		[Token(Token = "0x40002EA")]
		Paused,
		[Token(Token = "0x40002EB")]
		None
	}

	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA824", Offset = "0x9FA824")]
	private sealed class <CheckIfAllSystemsGo>d__136 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600033C")]
			[Address(RVA = "0x10919C8", Offset = "0x10919C8", VA = "0x10919C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033E")]
			[Address(RVA = "0x1091A30", Offset = "0x1091A30", VA = "0x1091A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x1091018", Offset = "0x1091018", VA = "0x1091018")]
		[DebuggerHidden]
		public <CheckIfAllSystemsGo>d__136(int <>1__state)
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x10918DC", Offset = "0x10918DC", VA = "0x10918DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x10918E0", Offset = "0x10918E0", VA = "0x10918E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x10919D0", Offset = "0x10919D0", VA = "0x10919D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE640", Offset = "0x9FE640")]
	private static GameManager <Instance>k__BackingField;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE650", Offset = "0x9FE650")]
	private static bool <IsShuttingDown>k__BackingField;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string MAIN_MENU_SCENE;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string GAME_SCENE;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string MAIN_SCENE;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameSettings gameSettings;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WorldZone currentWorldZone;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool shouldCancelLoading;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isInMainMenu;

	[Token(Token = "0x40002C1")]
	private const float AUTOSAVE_INTERVAL = 300f;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeftUntilAutoSave;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnWorldZoneChangedCallback OnWorldZoneChanged;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OnPlayerLeftWorldZoneCallback OnPlayerLeftWorldZone;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Type[] initializationOrder;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Dictionary<Type, Type> subclasses;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SceneBundle[] defaultSceneBundles;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private SceneBundle[] mainMenuSceneBundles;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SceneBundle[] newGameSceneBundles;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GotsBuildVersion gotsBuildVersion;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isStartingGame;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isReturningToHouse;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SceneHandler sceneHandler;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SaveManager saveManager;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameProgressTracker progressTracker;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlantPrefabDataManager plantDataManager;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private QuestObjectManager questObjectManager;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool allSystemsGo;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SaveGame currentGame;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameSession currentSession;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private SaveSlot saveSlotToLoad;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private State currentState;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private State previousState;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Queue<List<SceneBundle>> areasToLoad;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<IInitializable> objectsToInitialize;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<IGrabbable> grabbablesToTrack;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int currentInitIndex;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE6A0", Offset = "0x9FE6A0")]
	private static HMDActivityStatusType <HMDActivityStatus>k__BackingField;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE6B0", Offset = "0x9FE6B0")]
	private static HMDMountStatusType <HMDMountStatus>k__BackingField;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE6C0", Offset = "0x9FE6C0")]
	private static bool <IsPaused>k__BackingField;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<SaveObjectBase> strayStaticObjects;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<GameObject> strayObjectsToDestroy;

	[Token(Token = "0x17000056")]
	public static GameManager Instance
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x10899D0", Offset = "0x10899D0", VA = "0x10899D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F094", Offset = "0xA0F094")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1089A38", Offset = "0x1089A38", VA = "0x1089A38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F0A4", Offset = "0xA0F0A4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public static bool AllSystemsGo
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x1089AA8", Offset = "0x1089AA8", VA = "0x1089AA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public static bool IsLoadingGame
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1089B58", Offset = "0x1089B58", VA = "0x1089B58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000059")]
	public static bool IsShuttingDown
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1089CB4", Offset = "0x1089CB4", VA = "0x1089CB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F0B4", Offset = "0xA0F0B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1089D1C", Offset = "0x1089D1C", VA = "0x1089D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F0C4", Offset = "0xA0F0C4")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public static bool PlayerIsBetweenIslands
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1089D8C", Offset = "0x1089D8C", VA = "0x1089D8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public static WorldZone CurrentWorldZone
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x1089F10", Offset = "0x1089F10", VA = "0x1089F10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005C")]
	public static GotsBuildVersion BuildVersion
	{
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x108A1C0", Offset = "0x108A1C0", VA = "0x108A1C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public static HMDActivityStatusType HMDActivityStatus
	{
		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x108A314", Offset = "0x108A314", VA = "0x108A314")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F0D4", Offset = "0xA0F0D4")]
		get
		{
			return default(HMDActivityStatusType);
		}
		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x108A37C", Offset = "0x108A37C", VA = "0x108A37C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F0E4", Offset = "0xA0F0E4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public static HMDMountStatusType HMDMountStatus
	{
		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x108A3E8", Offset = "0x108A3E8", VA = "0x108A3E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F0F4", Offset = "0xA0F0F4")]
		get
		{
			return default(HMDMountStatusType);
		}
		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x108A450", Offset = "0x108A450", VA = "0x108A450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F104", Offset = "0xA0F104")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public static bool IsPaused
	{
		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x108A4BC", Offset = "0x108A4BC", VA = "0x108A4BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F114", Offset = "0xA0F114")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x108A524", Offset = "0x108A524", VA = "0x108A524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F124", Offset = "0xA0F124")]
		private set
		{
		}
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x108A064", Offset = "0x108A064", VA = "0x108A064")]
	public static GameSettings GetGameSettings()
	{
		return null;
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x108A1B8", Offset = "0x108A1B8", VA = "0x108A1B8")]
	public void AssignGotsBuildVersion(GotsBuildVersion v)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x108A594", Offset = "0x108A594", VA = "0x108A594")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x108A8EC", Offset = "0x108A8EC", VA = "0x108A8EC")]
	public static void SetHMDActivityStatus(HMDActivityStatusType hmdActivityStatus)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x108AA58", Offset = "0x108AA58", VA = "0x108AA58")]
	public static void SetHMDMountStatus(HMDMountStatusType hmdMountStatus)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x108A724", Offset = "0x108A724", VA = "0x108A724")]
	private void InitGameSettings()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x108A88C", Offset = "0x108A88C", VA = "0x108A88C")]
	private void InitAchievements()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x108ABC4", Offset = "0x108ABC4", VA = "0x108ABC4")]
	public static void ApplyGameSettings()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x108ACF8", Offset = "0x108ACF8", VA = "0x108ACF8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x108AFC0", Offset = "0x108AFC0", VA = "0x108AFC0")]
	private void CheckIfStartingFromMainMenu()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x108B134", Offset = "0x108B134", VA = "0x108B134")]
	public bool IsInMainMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x108ACFC", Offset = "0x108ACFC", VA = "0x108ACFC")]
	private void Init()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x108B13C", Offset = "0x108B13C", VA = "0x108B13C")]
	private void InitSystems()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x108B2CC", Offset = "0x108B2CC", VA = "0x108B2CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x108B840", Offset = "0x108B840", VA = "0x108B840")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x108B514", Offset = "0x108B514", VA = "0x108B514")]
	private void EnterState(State state)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x108B6C0", Offset = "0x108B6C0", VA = "0x108B6C0")]
	private bool UpdateState(State state)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x108C534", Offset = "0x108C534", VA = "0x108C534")]
	private bool UpdateAutoSave()
	{
		return default(bool);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x108B6E0", Offset = "0x108B6E0", VA = "0x108B6E0")]
	private void SwitchToNextState(State state)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x108CA98", Offset = "0x108CA98", VA = "0x108CA98")]
	private void SwitchState(State newState)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x108CAA0", Offset = "0x108CAA0", VA = "0x108CAA0")]
	public bool IsDefaultSceneBundle(ref SaveID id)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x108C7F4", Offset = "0x108C7F4", VA = "0x108C7F4")]
	private void LoadInitialGameAreas()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x108BB7C", Offset = "0x108BB7C", VA = "0x108BB7C")]
	private void LoadStaticScenes()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x108BC68", Offset = "0x108BC68", VA = "0x108BC68")]
	private void LoadDynamicScenes()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x108CBD0", Offset = "0x108CBD0", VA = "0x108CBD0")]
	private void HandleStrayStaticObjects(LoadedSceneBundle loadedBundle, List<SaveObjectBase> objects)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x108CE64", Offset = "0x108CE64", VA = "0x108CE64")]
	public void SetupObjectsInScene(LoadedSceneBundle loadedBundle, List<SaveObjectBase> objects)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x108D178", Offset = "0x108D178", VA = "0x108D178")]
	private void SetupSaveablesAndComponentsFromSaveData(List<SaveObjectBase> allSaveables, SaveableState[] saveStates, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x108D42C", Offset = "0x108D42C", VA = "0x108D42C")]
	private void SetupSaveablesAndComponents(List<SaveObjectBase> allSaveables)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x108BDE8", Offset = "0x108BDE8", VA = "0x108BDE8")]
	private void SpawnDynamicObjects()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x108C0F0", Offset = "0x108C0F0", VA = "0x108C0F0")]
	private void StartInitializeObjects()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x108D5EC", Offset = "0x108D5EC", VA = "0x108D5EC")]
	public static void InitializeObjects(List<LoadedSceneBundle> bundles, bool canPostponeInit, bool debugPrint = false)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x108DD5C", Offset = "0x108DD5C", VA = "0x108DD5C")]
	private void AddRemainingGrabbablesToTracker()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x108C318", Offset = "0x108C318", VA = "0x108C318")]
	private bool UpdateInitialization()
	{
		return default(bool);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x108DA88", Offset = "0x108DA88", VA = "0x108DA88")]
	private static void InitializeRange(List<IInitializable> objs, int startIndex, int num)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x108C24C", Offset = "0x108C24C", VA = "0x108C24C")]
	private void FinishUpLoading()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x108CB88", Offset = "0x108CB88", VA = "0x108CB88")]
	private bool ShouldLoadBundleFromSaveFile(SaveID bundleId)
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x108DE44", Offset = "0x108DE44", VA = "0x108DE44")]
	public void OnQuit(bool shouldSave)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x108E180", Offset = "0x108E180", VA = "0x108E180")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x108E25C", Offset = "0x108E25C", VA = "0x108E25C")]
	private void OnClearSlot(SaveSlot slot)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x108E31C", Offset = "0x108E31C", VA = "0x108E31C")]
	private void StartSession(SaveSlot slot)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x108E5A4", Offset = "0x108E5A4", VA = "0x108E5A4")]
	public void SetGameLoadingState()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x108DE58", Offset = "0x108DE58", VA = "0x108DE58")]
	private void CloseSession(bool shouldSave)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x108E5E0", Offset = "0x108E5E0", VA = "0x108E5E0")]
	private void DropItemsHeld()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x108EA58", Offset = "0x108EA58", VA = "0x108EA58")]
	public void SaveGameIfNeeded()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x108E6E4", Offset = "0x108E6E4", VA = "0x108E6E4")]
	public bool SaveCurrentSessionToFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x108C598", Offset = "0x108C598", VA = "0x108C598")]
	private bool AutoSaveCurrentSession()
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x108ECBC", Offset = "0x108ECBC", VA = "0x108ECBC")]
	public bool SaveGameToSlot(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x108EE84", Offset = "0x108EE84", VA = "0x108EE84")]
	public void LoadGame(SaveSlot slot)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x108EF08", Offset = "0x108EF08", VA = "0x108EF08")]
	public void ReturnToHouse()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x108BAF4", Offset = "0x108BAF4", VA = "0x108BAF4")]
	private void StartLoadingGame()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x108F04C", Offset = "0x108F04C", VA = "0x108F04C")]
	private void UnloadMenuScene()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x108F178", Offset = "0x108F178", VA = "0x108F178")]
	public bool WorldZoneIsLoaded(SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x108F2A0", Offset = "0x108F2A0", VA = "0x108F2A0")]
	public void OnPlayerEnteredGameArea(WorldZone zone, SceneBundle bundle)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x108B9D4", Offset = "0x108B9D4", VA = "0x108B9D4")]
	private void CancelLoadOfGameArea(SceneBundle bundle)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x108F44C", Offset = "0x108F44C", VA = "0x108F44C")]
	public void SetCurrentWorldZone(WorldZone zone)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x108F824", Offset = "0x108F824", VA = "0x108F824")]
	public bool UnloadAreaThatShouldntHaveBeenLoaded(WorldZone zone, SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x108FB60", Offset = "0x108FB60", VA = "0x108FB60")]
	public bool OnPlayerLeftGameArea(WorldZone zone, SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x108FA1C", Offset = "0x108FA1C", VA = "0x108FA1C")]
	private void HandlePersistentObjects()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x10902CC", Offset = "0x10902CC", VA = "0x10902CC")]
	private void MoveItemToPersistentSceneIfNeeded(SaveObjectBase saveObj, LoadedSceneBundle persistentBundle)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1090560", Offset = "0x1090560", VA = "0x1090560")]
	private bool MoveSaveObject(SaveObjectBase obj, LoadedSceneBundle fromBundle, LoadedSceneBundle toBundle, Scene toScene)
	{
		return default(bool);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1090998", Offset = "0x1090998", VA = "0x1090998")]
	public void MoveItemToCurrentZone(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1090444", Offset = "0x1090444", VA = "0x1090444")]
	public void MoveItemToPersistentZone(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1090B20", Offset = "0x1090B20", VA = "0x1090B20")]
	public void RemovePersistentItem(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1090BA4", Offset = "0x1090BA4", VA = "0x1090BA4")]
	public void MoveItemToSameZoneAs(SaveObjectBase obj, GameObject go)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1090CE8", Offset = "0x1090CE8", VA = "0x1090CE8")]
	public bool RemoveDynamicObjFromUnloadedBundle(ref SaveID id)
	{
		return default(bool);
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x108B8A4", Offset = "0x108B8A4", VA = "0x108B8A4")]
	public static void SetPaused(bool shouldPause)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1090F10", Offset = "0x1090F10", VA = "0x1090F10")]
	public static void ResolvePausedState()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x108B1B4", Offset = "0x108B1B4", VA = "0x108B1B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F134", Offset = "0xA0F134")]
	private IEnumerator CheckIfAllSystemsGo()
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1091044", Offset = "0x1091044", VA = "0x1091044")]
	public GameManager()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1091804", Offset = "0x1091804", VA = "0x1091804")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F198", Offset = "0xA0F198")]
	private void <ReturnToHouse>b__115_0()
	{
	}
}
[Token(Token = "0x20000A5")]
public class GameProgressTracker : MonoBehaviour
{
	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameProgressTracker Instance;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE6D0", Offset = "0x9FE6D0")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Milestone[] milestones;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, object> analyticsParams;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FE6E0", Offset = "0x9FE6E0")]
	private GameStats <SessionStats>k__BackingField;

	[Token(Token = "0x17000062")]
	public bool Initialized
	{
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x10921E4", Offset = "0x10921E4", VA = "0x10921E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F1F8", Offset = "0xA0F1F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x10921EC", Offset = "0x10921EC", VA = "0x10921EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F208", Offset = "0xA0F208")]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public GameStats SessionStats
	{
		[Token(Token = "0x6000343")]
		[Address(RVA = "0x109234C", Offset = "0x109234C", VA = "0x109234C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F218", Offset = "0xA0F218")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1092354", Offset = "0x1092354", VA = "0x1092354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F228", Offset = "0xA0F228")]
		private set
		{
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x10921F8", Offset = "0x10921F8", VA = "0x10921F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1092250", Offset = "0x1092250", VA = "0x1092250")]
	public static bool MilestoneHasBeenCompleted(Milestone.MilestoneType milestone)
	{
		return default(bool);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x109235C", Offset = "0x109235C", VA = "0x109235C")]
	public MilestoneState[] GetMilestoneStates()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x108B230", Offset = "0x108B230", VA = "0x108B230")]
	public void Init()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x109248C", Offset = "0x109248C", VA = "0x109248C")]
	public void InitSession(GameStats sessionStats, [Optional] MilestoneState[] milestoneStates)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x108E98C", Offset = "0x108E98C", VA = "0x108E98C")]
	public void OnSessionClose()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x10926B4", Offset = "0x10926B4", VA = "0x10926B4")]
	private void HandleMilestoneEvent(MilestoneEvent e)
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1092748", Offset = "0x1092748", VA = "0x1092748")]
	private void DispatchAnalyticsEvent(Milestone milestone)
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1092848", Offset = "0x1092848", VA = "0x1092848")]
	public GameProgressTracker()
	{
	}
}
[Token(Token = "0x20000A6")]
public class Milestone
{
	[Serializable]
	[Token(Token = "0x20000A7")]
	public enum MilestoneType
	{
		[Token(Token = "0x40002F9")]
		Undefined,
		[Token(Token = "0x40002FA")]
		Biome1Completed,
		[Token(Token = "0x40002FB")]
		Biome2Completed,
		[Token(Token = "0x40002FC")]
		Biome3Completed,
		[Token(Token = "0x40002FD")]
		PuffkinBarnUnlocked,
		[Token(Token = "0x40002FE")]
		ManateecowBarnUnlocked,
		[Token(Token = "0x40002FF")]
		MolesealBarnUnlocked,
		[Token(Token = "0x4000300")]
		BigDoorRevealed,
		[Token(Token = "0x4000301")]
		BraceletEquipped,
		[Token(Token = "0x4000302")]
		CompletedGame,
		[Token(Token = "0x4000303")]
		TutorialCompleted,
		[Token(Token = "0x4000304")]
		NumTypes
	}

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MilestoneType milestoneType;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool completed;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime completedDate;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int counter;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xD0853C", Offset = "0xD0853C", VA = "0xD0853C")]
	public MilestoneType GetMilestoneType()
	{
		return default(MilestoneType);
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xD08544", Offset = "0xD08544", VA = "0xD08544")]
	public Milestone(MilestoneState s)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xD08614", Offset = "0xD08614", VA = "0xD08614")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xD08628", Offset = "0xD08628", VA = "0xD08628")]
	public bool IsCompleted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xD08630", Offset = "0xD08630", VA = "0xD08630")]
	public void SetCompleted()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xD086A4", Offset = "0xD086A4", VA = "0xD086A4")]
	public MilestoneState GetState()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000A8")]
public class MilestoneState
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Milestone.MilestoneType milestoneType;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long timeStampBinary;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool completed;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int counter;

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xD087D4", Offset = "0xD087D4", VA = "0xD087D4")]
	public MilestoneState(Milestone.MilestoneType t)
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xD08744", Offset = "0xD08744", VA = "0xD08744")]
	public MilestoneState(Milestone.MilestoneType t, bool comp, DateTime time, int count)
	{
	}
}
[Token(Token = "0x20000A9")]
public class MilestoneEvent : GameEvent
{
	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Milestone.MilestoneType milestone;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xD087A8", Offset = "0xD087A8", VA = "0xD087A8")]
	public MilestoneEvent(Milestone.MilestoneType milestone)
	{
	}
}
[Token(Token = "0x20000AA")]
public class QuestEventListener : MonoBehaviour, IInitializable
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventToListenFor;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool listenWhileInactive;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEventRecieved;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool didSubscribeToEvent;

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC6A630", Offset = "0xC6A630", VA = "0xC6A630")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC6A6F4", Offset = "0xC6A6F4", VA = "0xC6A6F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC6A7B4", Offset = "0xC6A7B4", VA = "0xC6A7B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC6A86C", Offset = "0xC6A86C", VA = "0xC6A86C")]
	private void OnQuestEvent(QuestEvent e)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC6A8EC", Offset = "0xC6A8EC", VA = "0xC6A8EC", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC6A9CC", Offset = "0xC6A9CC", VA = "0xC6A9CC")]
	public QuestEventListener()
	{
	}
}
[Token(Token = "0x20000AB")]
public class QuestEvent : GameEvent
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string eventName;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC6A5FC", Offset = "0xC6A5FC", VA = "0xC6A5FC")]
	public QuestEvent(string name)
	{
	}
}
[Token(Token = "0x20000AC")]
public class SendQuestEvent : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string eventName;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlySendOnce;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool didSend;

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xCDC9A8", Offset = "0xCDC9A8", VA = "0xCDC9A8")]
	public void SendEvent()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xCDCA5C", Offset = "0xCDCA5C", VA = "0xCDCA5C")]
	public SendQuestEvent()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GameSession
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SaveGame game;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameStats sessionStats;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameProgressTracker progressTracker;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x108E4C8", Offset = "0x108E4C8", VA = "0x108E4C8")]
	public GameSession(SaveGame s, GameProgressTracker gpt)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x108CB30", Offset = "0x108CB30", VA = "0x108CB30")]
	public bool HasSaveData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1092858", Offset = "0x1092858", VA = "0x1092858")]
	public SaveGame GetSaveGame()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x108CB60", Offset = "0x108CB60", VA = "0x108CB60")]
	public SaveID[] GetActiveSceneBundlesFromSaveGame()
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x108E56C", Offset = "0x108E56C", VA = "0x108E56C")]
	public void StartSession()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x108DE28", Offset = "0x108DE28", VA = "0x108DE28")]
	public bool HasSaveDataForSceneBundle(ref SaveID bundleId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x108D0E0", Offset = "0x108D0E0", VA = "0x108D0E0")]
	public SaveableState[] GetSaveableStatesForSaveIdsInBundle(LoadedSceneBundle bundle, SaveID[] ids)
	{
		return null;
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x108D140", Offset = "0x108D140", VA = "0x108D140")]
	public SaveableBinaryDataList GetBinaryDataForBundle(ref SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x108D560", Offset = "0x108D560", VA = "0x108D560")]
	public SaveableState[] GetAllSaveableStatesForSceneBundle(LoadedSceneBundle bundle, bool staticStates = false)
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x108D15C", Offset = "0x108D15C", VA = "0x108D15C")]
	public OrientedPoint GetTransformForSaveID(SaveID id)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1090110", Offset = "0x1090110", VA = "0x1090110")]
	public void UnloadGameArea(SceneBundle bundle)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1092990", Offset = "0x1092990", VA = "0x1092990")]
	public bool UpdateSaveGame(int slotIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1092860", Offset = "0x1092860", VA = "0x1092860")]
	public void UpdateSceneBundleState(LoadedSceneBundle bundleToUpdate)
	{
	}
}
[Token(Token = "0x20000AE")]
public class HapticsManager : MonoBehaviour
{
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA834", Offset = "0x9FA834")]
	private sealed class <HapticCurve>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve curve;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HapticsManager <>4__this;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float max;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NeatVR_Controller controller;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool loop;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action callback;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <timer>5__2;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0xE0F744", Offset = "0xE0F744", VA = "0xE0F744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0xE0F7AC", Offset = "0xE0F7AC", VA = "0xE0F7AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xE0F134", Offset = "0xE0F134", VA = "0xE0F134")]
		[DebuggerHidden]
		public <HapticCurve>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xE0F5C0", Offset = "0xE0F5C0", VA = "0xE0F5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xE0F5C4", Offset = "0xE0F5C4", VA = "0xE0F5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xE0F74C", Offset = "0xE0F74C", VA = "0xE0F74C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticsManager Instance;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE6F0", Offset = "0x9FE6F0")]
	[SerializeField]
	private AnimationCurve defaultCurve;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FE73C", Offset = "0x9FE73C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE73C", Offset = "0x9FE73C")]
	private float tillFeedbackAmplitude;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float tillFeedbackDuration;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE7B0", Offset = "0x9FE7B0")]
	private float chopFeedbackDuration;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE7FC", Offset = "0x9FE7FC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FE7FC", Offset = "0x9FE7FC")]
	private float pettingFeedbackAmplitude;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE860", Offset = "0x9FE860")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FE860", Offset = "0x9FE860")]
	private float feedingFeedbackAmplitude;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float feedingFeedbackDuration;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE8D4", Offset = "0x9FE8D4")]
	private AnimationCurve boatCollisionFeedbackCurve;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float boatCollisionDuration;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE930", Offset = "0x9FE930")]
	private float seedbagShakeDur;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FE97C", Offset = "0x9FE97C")]
	private float seedbagShakeAmp;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FE9BC", Offset = "0x9FE9BC")]
	private float plantPullDur;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FEA08", Offset = "0x9FEA08")]
	[SerializeField]
	private float plantPullAmp;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FEA48", Offset = "0x9FEA48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEA48", Offset = "0x9FEA48")]
	[SerializeField]
	private float pushCraftingButtonAmp;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float pushCraftingButtonDur;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEABC", Offset = "0x9FEABC")]
	private AnimationCurve fishSpeedingAway;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AnimationCurve playerHoldingOn;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AnimationCurve playerReelingIn;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEB28", Offset = "0x9FEB28")]
	[SerializeField]
	private AnimationCurve activateInstrument;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HapticCapabilities capabilities;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<NeatVR_Controller> controllers;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine[] currentPulses;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool hapticsEnabled;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text debugText;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xE0DAB0", Offset = "0xE0DAB0", VA = "0xE0DAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xE0DB60", Offset = "0xE0DB60", VA = "0xE0DB60")]
	public void RegisterController(NeatVR_Controller controller, bool rightDevice)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xE0E128", Offset = "0xE0E128", VA = "0xE0E128")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xE0DC24", Offset = "0xE0DC24", VA = "0xE0DC24")]
	public bool AddController(NeatVR_Controller controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xE0DD20", Offset = "0xE0DD20", VA = "0xE0DD20")]
	public void AddEventListeners()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xE0E190", Offset = "0xE0E190", VA = "0xE0E190")]
	public void RemoveEventListeners()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xE0E478", Offset = "0xE0E478", VA = "0xE0E478")]
	public void OnLeverPulled(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xE0E650", Offset = "0xE0E650", VA = "0xE0E650")]
	private void OnPlantUprooted(PlantUprootedEvent e)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xE0E70C", Offset = "0xE0E70C", VA = "0xE0E70C")]
	private void OnSeedBagShake(SeedbagShakeEvent e)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xE0E7F4", Offset = "0xE0E7F4", VA = "0xE0E7F4")]
	private void OnCreaturePetting(CreaturePettingEvent e)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xE0E8B8", Offset = "0xE0E8B8", VA = "0xE0E8B8")]
	private void OnChop(ChopEvent e)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xE0E9E0", Offset = "0xE0E9E0", VA = "0xE0E9E0")]
	private void OnCreatureFed(CreatureFedEvent e)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xE0EA9C", Offset = "0xE0EA9C", VA = "0xE0EA9C")]
	private void OnTill(TillEvent e)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xE0EB58", Offset = "0xE0EB58", VA = "0xE0EB58")]
	private void OnBoatCollision(BoatCollisionEvent e)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xE0EC7C", Offset = "0xE0EC7C", VA = "0xE0EC7C")]
	public void StopAllHaptics()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xE0ED74", Offset = "0xE0ED74", VA = "0xE0ED74")]
	public void OnFishSpeedingAway(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xE0EDC4", Offset = "0xE0EDC4", VA = "0xE0EDC4")]
	public void OnFishBeingReeledIn(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xE0EE14", Offset = "0xE0EE14", VA = "0xE0EE14")]
	public void OnPlayerHoldingBackFish(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xE0EE64", Offset = "0xE0EE64", VA = "0xE0EE64")]
	public void OnLineAboutToSnap(PlayerHand hand, float amplitude)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xE0EE8C", Offset = "0xE0EE8C", VA = "0xE0EE8C")]
	public void OnStartGemPlacementFeedback(StartGemPlacementFeedback e)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xE0EFEC", Offset = "0xE0EFEC", VA = "0xE0EFEC")]
	public void OnLoopGemPlacementFeedback(LoopGemPlacementFeedback e)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xE0F020", Offset = "0xE0F020", VA = "0xE0F020")]
	public void OnStopGemPlacementFeedback(StopGemPlacementFeedback e)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xE0F024", Offset = "0xE0F024", VA = "0xE0F024")]
	public void OnInstrumentActivated(PlayerHand hand, float duration)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xE0E528", Offset = "0xE0E528", VA = "0xE0E528")]
	private void StartHapticCurve(NeatVR_Controller controller, float max = 1f, float duration = 1f, [Optional] AnimationCurve curve, bool loop = false)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xE0EEC0", Offset = "0xE0EEC0", VA = "0xE0EEC0")]
	private void StartHapticCurveWithCallback(NeatVR_Controller controller, float max = 1f, float duration = 1f, [Optional] AnimationCurve curve, bool loop = false, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xE0F04C", Offset = "0xE0F04C", VA = "0xE0F04C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F238", Offset = "0xA0F238")]
	private IEnumerator HapticCurve(NeatVR_Controller controller, float max = 1f, float duration = 1f, [Optional] AnimationCurve curve, bool loop = false, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xE0F160", Offset = "0xE0F160", VA = "0xE0F160")]
	public static void TriggerRumbleForDuration(PlayerHand hand, float amplitude, float duration)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xE0F22C", Offset = "0xE0F22C", VA = "0xE0F22C")]
	public static void TriggerRumbleWithCurve(PlayerHand hand, AnimationCurve curve, float maxAmplitude, float duration, bool loop = false)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xE0F30C", Offset = "0xE0F30C", VA = "0xE0F30C")]
	public static void TriggerRumbleWithCurve(AnimationCurve curve, float maxAmplitude, float duration, bool loop = false)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xE0F43C", Offset = "0xE0F43C", VA = "0xE0F43C")]
	public static void TriggerRumble(PlayerHand hand, float amplitude)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xE0F508", Offset = "0xE0F508", VA = "0xE0F508")]
	public HapticsManager()
	{
	}
}
[Token(Token = "0x20000B0")]
public class LanguageManager : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LanguageManager Instance;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<string> m_languages;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_currentLanguageIndex;

	[Token(Token = "0x17000066")]
	public List<string> Languages
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0xCF3704", Offset = "0xCF3704", VA = "0xCF3704")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public int CurrentLanguageIndex
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0xCF370C", Offset = "0xCF370C", VA = "0xCF370C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xCF3714", Offset = "0xCF3714", VA = "0xCF3714")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xCF37C0", Offset = "0xCF37C0", VA = "0xCF37C0")]
	public void SetLanguage(int language)
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xCF38A8", Offset = "0xCF38A8", VA = "0xCF38A8")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x20000B1")]
public class PaintingQuest : MonoBehaviour
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Potpot;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool PaintballCrafted;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xDE88D4", Offset = "0xDE88D4", VA = "0xDE88D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xDE893C", Offset = "0xDE893C", VA = "0xDE893C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xDE8968", Offset = "0xDE8968", VA = "0xDE8968")]
	public void SetActivation()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xDE8988", Offset = "0xDE8988", VA = "0xDE8988")]
	public PaintingQuest()
	{
	}
}
[Token(Token = "0x20000B2")]
public class Quest : SaveableComponent, IInitializable
{
	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public string Identifier;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEB94", Offset = "0x9FEB94")]
	private QuestObjective[] objectives;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEBE0", Offset = "0x9FEBE0")]
	public UnityEvent OnQuestCompleted;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private QuestOutcome[] triggers;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FEC18", Offset = "0x9FEC18")]
	private bool <QuestComplete>k__BackingField;

	[Token(Token = "0x17000068")]
	public bool QuestComplete
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0xC6A140", Offset = "0xC6A140", VA = "0xC6A140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F2EC", Offset = "0xA0F2EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600039A")]
		[Address(RVA = "0xC6A148", Offset = "0xC6A148", VA = "0xC6A148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0F2FC", Offset = "0xA0F2FC")]
		set
		{
		}
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC6A154", Offset = "0xC6A154", VA = "0xC6A154", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC6A3FC", Offset = "0xC6A3FC", VA = "0xC6A3FC")]
	public void OnObjectiveCompleted(QuestObjective objective)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC6A4F8", Offset = "0xC6A4F8", VA = "0xC6A4F8")]
	public void TriggerQuestCompletion()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC6A37C", Offset = "0xC6A37C", VA = "0xC6A37C")]
	private void CheckIfCompleted()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC6A584", Offset = "0xC6A584", VA = "0xC6A584", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC6A5EC", Offset = "0xC6A5EC", VA = "0xC6A5EC")]
	public void DebugCompleteNextObjective()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC6A5F0", Offset = "0xC6A5F0", VA = "0xC6A5F0")]
	public void DebugCompleteAllObjectives()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC6A5F4", Offset = "0xC6A5F4", VA = "0xC6A5F4")]
	public Quest()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class QuestState : ComponentState
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool completed;

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC6C6FC", Offset = "0xC6C6FC", VA = "0xC6C6FC")]
	public QuestState(bool completed)
	{
	}
}
[Token(Token = "0x20000B4")]
public class QuestObject : MonoBehaviour, IInitializable
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SaveID uniqueId;

	[Token(Token = "0x17000069")]
	public SaveID UniqueId
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xC6A9D4", Offset = "0xC6A9D4", VA = "0xC6A9D4")]
		get
		{
			return default(SaveID);
		}
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC6A9E0", Offset = "0xC6A9E0", VA = "0xC6A9E0", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC6AC18", Offset = "0xC6AC18", VA = "0xC6AC18")]
	public QuestObject()
	{
	}
}
[Token(Token = "0x20000B5")]
public class QuestObjectAttribute : PropertyAttribute
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type componentType;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC6AC20", Offset = "0xC6AC20", VA = "0xC6AC20")]
	public QuestObjectAttribute(Type compType)
	{
	}
}
[Token(Token = "0x20000B6")]
public class QuestObjectManager
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static QuestObjectManager Instance;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<SaveID, QuestObject> persistentQuestObjects;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<SaveID, QuestObject> areaSpecificQuestObjects;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC6AC54", Offset = "0xC6AC54", VA = "0xC6AC54")]
	public void Init()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC6ACAC", Offset = "0xC6ACAC", VA = "0xC6ACAC")]
	public void ClearDynamicQuestObjects()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC6AD04", Offset = "0xC6AD04", VA = "0xC6AD04")]
	public void ClearAllQuestObjects()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC6AA40", Offset = "0xC6AA40", VA = "0xC6AA40")]
	public void RegisterQuestObject(QuestObject obj)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC6AD6C", Offset = "0xC6AD6C", VA = "0xC6AD6C")]
	public Component GetQuestObjectWithId(SaveID id, string componentType)
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC6AEA0", Offset = "0xC6AEA0", VA = "0xC6AEA0")]
	public QuestObjectManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B7")]
public class QuestObjectRef
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private SaveID uniqueId;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Component component;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string componentType;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC6AF48", Offset = "0xC6AF48", VA = "0xC6AF48")]
	public Component GetQuestObject()
	{
		return null;
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC6B020", Offset = "0xC6B020", VA = "0xC6B020")]
	public QuestObjectRef()
	{
	}
}
[Token(Token = "0x20000B8")]
public abstract class QuestObjective : SaveableComponent
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool optionalObjective;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEC88", Offset = "0x9FEC88")]
	public UnityEvent OnObjectiveCompleted;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnQuestInit;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool objectiveCompleted;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Quest quest;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private QuestOutcome[] outcomes;

	[Token(Token = "0x1700006A")]
	public bool IsOptional
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xC6B028", Offset = "0xC6B028", VA = "0xC6B028")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public bool Completed
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0xC6B030", Offset = "0xC6B030", VA = "0xC6B030")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xC6B038", Offset = "0xC6B038", VA = "0xC6B038", Slot = "5")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xC6B190", Offset = "0xC6B190", VA = "0xC6B190")]
	public void SetQuest(Quest q)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xC6B198", Offset = "0xC6B198", VA = "0xC6B198", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xC6B200", Offset = "0xC6B200", VA = "0xC6B200")]
	protected void CompleteObjective()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xC6B2F8", Offset = "0xC6B2F8", VA = "0xC6B2F8")]
	protected QuestObjective()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B9")]
public class QuestObjectiveState : ComponentState
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool completed;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xC6C300", Offset = "0xC6C300", VA = "0xC6C300")]
	public QuestObjectiveState(bool completed)
	{
	}
}
[Token(Token = "0x20000BA")]
public class ChopTreeObjective : QuestObjective
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "QuestObjectAttribute", RVA = "0x9FECC0", Offset = "0x9FECC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FECC0", Offset = "0x9FECC0")]
	public QuestObjectRef choppableTreeReference;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Choppable choppable;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x101157C", Offset = "0x101157C", VA = "0x101157C", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x10116C4", Offset = "0x10116C4", VA = "0x10116C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x10117A0", Offset = "0x10117A0", VA = "0x10117A0")]
	public void OnTreeFell()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x10117A8", Offset = "0x10117A8", VA = "0x10117A8")]
	public ChopTreeObjective()
	{
	}
}
[Token(Token = "0x20000BB")]
public class CraftItemObjective : QuestObjective
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FED48", Offset = "0x9FED48")]
	[AttributeAttribute(Name = "QuestObjectAttribute", RVA = "0x9FED48", Offset = "0x9FED48")]
	public QuestObjectRef craftingMachineRef;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CraftingMachine machine;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xC23638", Offset = "0xC23638", VA = "0xC23638", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xC2377C", Offset = "0xC2377C", VA = "0xC2377C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xC23854", Offset = "0xC23854", VA = "0xC23854", Slot = "6")]
	public virtual void OnCraftedItem()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xC2385C", Offset = "0xC2385C", VA = "0xC2385C")]
	public CraftItemObjective()
	{
	}
}
[Token(Token = "0x20000BC")]
public class FeedAnimalObjective : QuestObjective
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EatingBehavior animalMouth;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool onlyAnimalsFavoriteFoodCounts;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int numberOfFeedingsRequired;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnAnimalFed;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int numTimesFed;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x137A81C", Offset = "0x137A81C", VA = "0x137A81C", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x137A9DC", Offset = "0x137A9DC", VA = "0x137A9DC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x137AA84", Offset = "0x137AA84", VA = "0x137AA84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x137A980", Offset = "0x137A980", VA = "0x137A980")]
	public void OnCorrectFoodEaten()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x137AB74", Offset = "0x137AB74", VA = "0x137AB74")]
	public FeedAnimalObjective()
	{
	}
}
[Token(Token = "0x20000BD")]
public class FeedObjectiveState : QuestObjectiveState
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int TimesFed;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x137AA54", Offset = "0x137AA54", VA = "0x137AA54")]
	public FeedObjectiveState(bool completed, int timesFed)
	{
	}
}
[Token(Token = "0x20000BE")]
public class PaintItemObjective : QuestObjective
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Paintable itemToPaint;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xE2F378", Offset = "0xE2F378", VA = "0xE2F378", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xE2F460", Offset = "0xE2F460", VA = "0xE2F460")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xE2F53C", Offset = "0xE2F53C", VA = "0xE2F53C")]
	public void OnPainted()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xE2F544", Offset = "0xE2F544", VA = "0xE2F544")]
	public PaintItemObjective()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PlaceItemObjective : QuestObjective
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string itemName;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider triggerCollider;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable currentGrabbable;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Collider currentCollider;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool hasInitialized;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string placedItemName;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xDEA5C4", Offset = "0xDEA5C4", VA = "0xDEA5C4", Slot = "5")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xDEA694", Offset = "0xDEA694", VA = "0xDEA694")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xDEA830", Offset = "0xDEA830", VA = "0xDEA830")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xDEA8F4", Offset = "0xDEA8F4", VA = "0xDEA8F4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xDEAA1C", Offset = "0xDEAA1C", VA = "0xDEAA1C")]
	private void OnCorrectItemPlaced()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xDEAAFC", Offset = "0xDEAAFC", VA = "0xDEAAFC")]
	public PlaceItemObjective()
	{
	}
}
[Token(Token = "0x20000C0")]
public abstract class QuestOutcome : MonoBehaviour
{
	[Token(Token = "0x20000C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA844", Offset = "0x9FA844")]
	private sealed class <WaitBeforeTriggering>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public QuestOutcome <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DA")]
			[Address(RVA = "0xC6C68C", Offset = "0xC6C68C", VA = "0xC6C68C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DC")]
			[Address(RVA = "0xC6C6F4", Offset = "0xC6C6F4", VA = "0xC6C6F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xC6C584", Offset = "0xC6C584", VA = "0xC6C584")]
		[DebuggerHidden]
		public <WaitBeforeTriggering>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xC6C5C0", Offset = "0xC6C5C0", VA = "0xC6C5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xC6C5C4", Offset = "0xC6C5C4", VA = "0xC6C5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xC6C694", Offset = "0xC6C694", VA = "0xC6C694", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEDD0", Offset = "0x9FEDD0")]
	public bool isEnabled;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayBeforeTriggering;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FEE08", Offset = "0x9FEE08")]
	public QuestOutcome[] triggerWhenDone;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC6C330", Offset = "0xC6C330", VA = "0xC6C330", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC6C334", Offset = "0xC6C334", VA = "0xC6C334")]
	public void Trigger()
	{
	}

	[Token(Token = "0x60003D3")]
	protected abstract void OnTrigger();

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC6C4F0", Offset = "0xC6C4F0", VA = "0xC6C4F0")]
	protected void Done()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC6C474", Offset = "0xC6C474", VA = "0xC6C474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F30C", Offset = "0xA0F30C")]
	private IEnumerator WaitBeforeTriggering()
	{
		return null;
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC6C5B0", Offset = "0xC6C5B0", VA = "0xC6C5B0")]
	protected QuestOutcome()
	{
	}
}
[Token(Token = "0x20000C2")]
public class CowDropsWheel : QuestOutcome
{
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA854", Offset = "0x9FA854")]
	private sealed class <CowDelay>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int eventNumber;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CowDropsWheel <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0xC23490", Offset = "0xC23490", VA = "0xC23490", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0xC234F8", Offset = "0xC234F8", VA = "0xC234F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xC23178", Offset = "0xC23178", VA = "0xC23178")]
		[DebuggerHidden]
		public <CowDelay>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xC232B8", Offset = "0xC232B8", VA = "0xC232B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xC232BC", Offset = "0xC232BC", VA = "0xC232BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xC23498", Offset = "0xC23498", VA = "0xC23498", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA864", Offset = "0x9FA864")]
	private sealed class <DisableLayerWeightAfterDuration>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CowDropsWheel <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0xC235C8", Offset = "0xC235C8", VA = "0xC235C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xC23630", Offset = "0xC23630", VA = "0xC23630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xC23220", Offset = "0xC23220", VA = "0xC23220")]
		[DebuggerHidden]
		public <DisableLayerWeightAfterDuration>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xC23500", Offset = "0xC23500", VA = "0xC23500", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xC23504", Offset = "0xC23504", VA = "0xC23504", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xC235D0", Offset = "0xC235D0", VA = "0xC235D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400036B")]
	private const string HoldingObjectLayerName = "Holding Object";

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int HoldingObjectParamId;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEE40", Offset = "0x9FEE40")]
	public GameObject WheelObject;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CreatureBehaviour m_creatureBehavior;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FEE88", Offset = "0x9FEE88")]
	public GameObject daCow;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator cowAnimator;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CreatureMovement cowMovement;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_holdingObjectLayerIndex;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC22E2C", Offset = "0xC22E2C", VA = "0xC22E2C", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC22F68", Offset = "0xC22F68", VA = "0xC22F68", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xC230DC", Offset = "0xC230DC", VA = "0xC230DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F3C0", Offset = "0xA0F3C0")]
	private IEnumerator CowDelay(float seconds, int eventNumber)
	{
		return null;
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC231A4", Offset = "0xC231A4", VA = "0xC231A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F424", Offset = "0xA0F424")]
	private IEnumerator DisableLayerWeightAfterDuration()
	{
		return null;
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC2324C", Offset = "0xC2324C", VA = "0xC2324C")]
	public CowDropsWheel()
	{
	}
}
[Token(Token = "0x20000C5")]
public class PotPotCarriesBoatHullAway : QuestOutcome
{
	[Token(Token = "0x20000C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA874", Offset = "0x9FA874")]
	private sealed class <ActivationDelay>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotCarriesBoatHullAway <>4__this;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0xC66C34", Offset = "0xC66C34", VA = "0xC66C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0xC66C9C", Offset = "0xC66C9C", VA = "0xC66C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xC66A74", Offset = "0xC66A74", VA = "0xC66A74")]
		[DebuggerHidden]
		public <ActivationDelay>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xC66B24", Offset = "0xC66B24", VA = "0xC66B24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xC66B28", Offset = "0xC66B28", VA = "0xC66B28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xC66C3C", Offset = "0xC66C3C", VA = "0xC66C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FEEC0", Offset = "0x9FEEC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEEC0", Offset = "0x9FEEC0")]
	public GameObject Potpot;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hullObject;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float delayBeforePickingUpObject;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC668CC", Offset = "0xC668CC", VA = "0xC668CC", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC66934", Offset = "0xC66934", VA = "0xC66934", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xC669E8", Offset = "0xC669E8", VA = "0xC669E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F528", Offset = "0xA0F528")]
	private IEnumerator ActivationDelay(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xC66AA0", Offset = "0xC66AA0", VA = "0xC66AA0")]
	private void PickUpHull()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xC66B14", Offset = "0xC66B14", VA = "0xC66B14")]
	public PotPotCarriesBoatHullAway()
	{
	}
}
[Token(Token = "0x20000C7")]
public class PotPotPicksUpBoatTop : QuestOutcome
{
	[Token(Token = "0x20000C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA884", Offset = "0x9FA884")]
	private sealed class <WaitUntilDone>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotPicksUpBoatTop <>4__this;

		[Token(Token = "0x17000074")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000403")]
			[Address(RVA = "0xC67010", Offset = "0xC67010", VA = "0xC67010", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000075")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0xC67078", Offset = "0xC67078", VA = "0xC67078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xC66E5C", Offset = "0xC66E5C", VA = "0xC66E5C")]
		[DebuggerHidden]
		public <WaitUntilDone>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xC66EF4", Offset = "0xC66EF4", VA = "0xC66EF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xC66EF8", Offset = "0xC66EF8", VA = "0xC66EF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xC67018", Offset = "0xC67018", VA = "0xC67018", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEF30", Offset = "0x9FEF30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FEF30", Offset = "0x9FEF30")]
	public GameObject potpot;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject boatTopObject;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int BubbleThingsId;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC66CA4", Offset = "0xC66CA4", VA = "0xC66CA4", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC66D0C", Offset = "0xC66D0C", VA = "0xC66D0C", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC66DD0", Offset = "0xC66DD0", VA = "0xC66DD0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F5DC", Offset = "0xA0F5DC")]
	private IEnumerator WaitUntilDone(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC66D44", Offset = "0xC66D44", VA = "0xC66D44")]
	private void PickUpBoatTop()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC66E88", Offset = "0xC66E88", VA = "0xC66E88")]
	public PotPotPicksUpBoatTop()
	{
	}
}
[Token(Token = "0x20000C9")]
public class PotPotPicksUpWheel : QuestOutcome
{
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA894", Offset = "0x9FA894")]
	private sealed class <PotpotDelay>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sec;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotPicksUpWheel <>4__this;

		[Token(Token = "0x17000076")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600040D")]
			[Address(RVA = "0xC67324", Offset = "0xC67324", VA = "0xC67324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000077")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600040F")]
			[Address(RVA = "0xC6738C", Offset = "0xC6738C", VA = "0xC6738C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xC671A4", Offset = "0xC671A4", VA = "0xC671A4")]
		[DebuggerHidden]
		public <PotpotDelay>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xC671D8", Offset = "0xC671D8", VA = "0xC671D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xC671DC", Offset = "0xC671DC", VA = "0xC671DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xC6732C", Offset = "0xC6732C", VA = "0xC6732C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEF90", Offset = "0x9FEF90")]
	public GameObject daPotpot;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaypointNavigationScript potpotNavScript;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC67080", Offset = "0xC67080", VA = "0xC67080", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xC670E8", Offset = "0xC670E8", VA = "0xC670E8", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xC67118", Offset = "0xC67118", VA = "0xC67118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F690", Offset = "0xA0F690")]
	private IEnumerator PotpotDelay(float sec)
	{
		return null;
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xC671D0", Offset = "0xC671D0", VA = "0xC671D0")]
	public PotPotPicksUpWheel()
	{
	}
}
[Token(Token = "0x20000CB")]
public class PotPotsCarryStatueAndEngine : QuestOutcome
{
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA8A4", Offset = "0x9FA8A4")]
	private sealed class <DelayingEvent>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PotPotsCarryStatueAndEngine <>4__this;

		[Token(Token = "0x17000078")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0xC67D28", Offset = "0xC67D28", VA = "0xC67D28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0xC67D90", Offset = "0xC67D90", VA = "0xC67D90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xC67BAC", Offset = "0xC67BAC", VA = "0xC67BAC")]
		[DebuggerHidden]
		public <DelayingEvent>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xC67BE0", Offset = "0xC67BE0", VA = "0xC67BE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xC67BE4", Offset = "0xC67BE4", VA = "0xC67BE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xC67D30", Offset = "0xC67D30", VA = "0xC67D30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FEFC8", Offset = "0x9FEFC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FEFC8", Offset = "0x9FEFC8")]
	public GameObject placedStatue;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject haxStatue;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject statueTargetPosition;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FF028", Offset = "0x9FF028")]
	public GameObject worshippedEngine;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject worshippedEngineParticles;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FF060", Offset = "0x9FF060")]
	public GameObject Potpot01;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FF098", Offset = "0x9FF098")]
	public GameObject Potpot02;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject glitterParticles;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable statuePlacedByPlayer;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaypointNavigationScript potpot1NavScript;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WaypointNavigationScript potpot2NavScript;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF0D0", Offset = "0x9FF0D0")]
	[SerializeField]
	private NeatAudioPlayer m_carrierAudioPlayer;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private NeatAudioCue m_pickupSound;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private NeatAudioCue m_dropSound;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xC67394", Offset = "0xC67394", VA = "0xC67394", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xC67428", Offset = "0xC67428", VA = "0xC67428", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xC67930", Offset = "0xC67930", VA = "0xC67930")]
	public void PotPotReachedWaypoint()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xC6798C", Offset = "0xC6798C", VA = "0xC6798C")]
	public void PickUpStatue()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xC67A34", Offset = "0xC67A34", VA = "0xC67A34")]
	public void DropStatue()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xC6783C", Offset = "0xC6783C", VA = "0xC6783C")]
	public void PickUpEngine()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xC67AF0", Offset = "0xC67AF0", VA = "0xC67AF0")]
	public void LeavingWithEngine()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xC678A4", Offset = "0xC678A4", VA = "0xC678A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F744", Offset = "0xA0F744")]
	private IEnumerator DelayingEvent(float seconds)
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xC67BD8", Offset = "0xC67BD8", VA = "0xC67BD8")]
	public PotPotsCarryStatueAndEngine()
	{
	}
}
[Token(Token = "0x20000CD")]
public class ToggleMoodBubbleIcons : MonoBehaviour
{
	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] bubbleIcons;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currIcon;

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xCAA844", Offset = "0xCAA844", VA = "0xCAA844")]
	public void ToggleNext()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xCAA8E8", Offset = "0xCAA8E8", VA = "0xCAA8E8")]
	public ToggleMoodBubbleIcons()
	{
	}
}
[Token(Token = "0x20000CE")]
public class GenericQuestOutcome : QuestOutcome
{
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA8B4", Offset = "0x9FA8B4")]
	private sealed class <OutcomeDone>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GenericQuestOutcome <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000427")]
			[Address(RVA = "0x1095338", Offset = "0x1095338", VA = "0x1095338", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000429")]
			[Address(RVA = "0x10953A0", Offset = "0x10953A0", VA = "0x10953A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1095290", Offset = "0x1095290", VA = "0x1095290")]
		[DebuggerHidden]
		public <OutcomeDone>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x10952C4", Offset = "0x10952C4", VA = "0x10952C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x10952C8", Offset = "0x10952C8", VA = "0x10952C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x1095340", Offset = "0x1095340", VA = "0x1095340", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent DoStuff;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x10951A8", Offset = "0x10951A8", VA = "0x10951A8", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1095214", Offset = "0x1095214", VA = "0x1095214")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F7F8", Offset = "0xA0F7F8")]
	private IEnumerator OutcomeDone()
	{
		return null;
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x10952BC", Offset = "0x10952BC", VA = "0x10952BC")]
	public GenericQuestOutcome()
	{
	}
}
[Token(Token = "0x20000D0")]
public class NavmeshAgentWalksToWaypoint : QuestOutcome
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF13C", Offset = "0x9FF13C")]
	public WaypointNavigationScript navScript;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool didAssignListener;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool didTrigger;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xD08F9C", Offset = "0xD08F9C", VA = "0xD08F9C", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xD0900C", Offset = "0xD0900C", VA = "0xD0900C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xD090E8", Offset = "0xD090E8", VA = "0xD090E8", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xD091E0", Offset = "0xD091E0", VA = "0xD091E0")]
	public NavmeshAgentWalksToWaypoint()
	{
	}
}
[Token(Token = "0x20000D1")]
public class ObjectTurnsOnOrOff : QuestOutcome
{
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA8C4", Offset = "0x9FA8C4")]
	private sealed class <OutcomeDone>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTurnsOnOrOff <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000435")]
			[Address(RVA = "0xE2D1DC", Offset = "0xE2D1DC", VA = "0xE2D1DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0xE2D244", Offset = "0xE2D244", VA = "0xE2D244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xE2CD40", Offset = "0xE2CD40", VA = "0xE2CD40")]
		[DebuggerHidden]
		public <OutcomeDone>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xE2D168", Offset = "0xE2D168", VA = "0xE2D168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xE2D16C", Offset = "0xE2D16C", VA = "0xE2D16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xE2D1E4", Offset = "0xE2D1E4", VA = "0xE2D1E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA8D4", Offset = "0x9FA8D4")]
	private sealed class <Animate>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTurnsOnOrOff <>4__this;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0xE2D0F8", Offset = "0xE2D0F8", VA = "0xE2D0F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0xE2D160", Offset = "0xE2D160", VA = "0xE2D160", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xE2CD6C", Offset = "0xE2CD6C", VA = "0xE2CD6C")]
		[DebuggerHidden]
		public <Animate>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xE2CE10", Offset = "0xE2CE10", VA = "0xE2CE10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xE2CE14", Offset = "0xE2CE14", VA = "0xE2CE14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xE2D100", Offset = "0xE2D100", VA = "0xE2D100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF174", Offset = "0x9FF174")]
	public bool turnOn;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool animate;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "QuestObjectAttribute", RVA = "0x9FF1AC", Offset = "0x9FF1AC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF1AC", Offset = "0x9FF1AC")]
	public QuestObjectRef goReference;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform go;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 originalScale;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool didTrigger;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xE2CAE0", Offset = "0xE2CAE0", VA = "0xE2CAE0", Slot = "5")]
	protected override void OnTrigger()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xE2CC48", Offset = "0xE2CC48", VA = "0xE2CC48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F8AC", Offset = "0xA0F8AC")]
	private IEnumerator OutcomeDone()
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xE2CCC4", Offset = "0xE2CCC4", VA = "0xE2CCC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0F910", Offset = "0xA0F910")]
	private IEnumerator Animate()
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xE2CD98", Offset = "0xE2CD98", VA = "0xE2CD98")]
	public ObjectTurnsOnOrOff()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D4")]
public class SaveGame
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SerializableBuildVersion version;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int saveSlot;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private long lastPlayedInBinary;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameState gameState;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameStats gameStats;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<SaveID, SaveableState> allSaveableStates;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<SaveID, SceneBundleState> allSceneBundleStates;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<SaveID, OrientedPoint> allObjectTransforms;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<SaveID, SaveableBinaryDataList> allBinaryData;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private DateTime sessionStartedTimestamp;

	[Token(Token = "0x17000080")]
	public TimeSpan timePlayed
	{
		[Token(Token = "0x600043E")]
		[Address(RVA = "0xC79C60", Offset = "0xC79C60", VA = "0xC79C60")]
		get
		{
			return default(TimeSpan);
		}
	}

	[Token(Token = "0x17000081")]
	public DateTime LastSaved
	{
		[Token(Token = "0x600043F")]
		[Address(RVA = "0xC79D04", Offset = "0xC79D04", VA = "0xC79D04")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x17000082")]
	public GameState GameState
	{
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xC79D70", Offset = "0xC79D70", VA = "0xC79D70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000083")]
	public GameStats GameStats
	{
		[Token(Token = "0x6000441")]
		[Address(RVA = "0xC79D78", Offset = "0xC79D78", VA = "0xC79D78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000084")]
	public DateTime SessionStartedTimestamp
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xC79D80", Offset = "0xC79D80", VA = "0xC79D80")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xC79D88", Offset = "0xC79D88", VA = "0xC79D88")]
	public SaveGame()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xC79F5C", Offset = "0xC79F5C", VA = "0xC79F5C")]
	public SaveGame(SerializableBuildVersion version)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xC7A144", Offset = "0xC7A144", VA = "0xC7A144")]
	public SaveGame(SaveGame prevGame, SerializableBuildVersion version)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xC7A36C", Offset = "0xC7A36C", VA = "0xC7A36C")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC7A3F0", Offset = "0xC7A3F0", VA = "0xC7A3F0")]
	public void UpdatePlaytime()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC7A598", Offset = "0xC7A598", VA = "0xC7A598")]
	private void UpdateLastSavedTimestamp()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC7A620", Offset = "0xC7A620", VA = "0xC7A620")]
	public void SetSaveableStatesFromSaveFile(SaveableState[] saveablesStates)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xC7A6D0", Offset = "0xC7A6D0", VA = "0xC7A6D0")]
	public void InitializeSaveGame(int slotIndex)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC7AEE4", Offset = "0xC7AEE4", VA = "0xC7AEE4")]
	public bool GetCurrentSceneBundleState(SaveID id, out SceneBundleState state)
	{
		return default(bool);
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC7AF64", Offset = "0xC7AF64", VA = "0xC7AF64")]
	public bool HasSceneBundleState(ref SaveID bundleId)
	{
		return default(bool);
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC7AFCC", Offset = "0xC7AFCC", VA = "0xC7AFCC")]
	public void SetCurrentSceneBundleState(SceneBundleState state)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC7B084", Offset = "0xC7B084", VA = "0xC7B084")]
	public SceneBundleState[] GetAllCurrentSceneBundleStates()
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC7B0EC", Offset = "0xC7B0EC", VA = "0xC7B0EC")]
	public Dictionary<SaveID, SaveableBinaryDataList> GetAllBinaryData()
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xC7B0F4", Offset = "0xC7B0F4", VA = "0xC7B0F4")]
	public SaveableBinaryDataList GetBinaryDataForBundle(ref SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xC7B174", Offset = "0xC7B174", VA = "0xC7B174")]
	public SaveableState[] GetSaveableStates()
	{
		return null;
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xC7B1DC", Offset = "0xC7B1DC", VA = "0xC7B1DC")]
	public SaveableState[] GetSaveableStates(SaveID[] ids)
	{
		return null;
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xC7B378", Offset = "0xC7B378", VA = "0xC7B378")]
	public OrientedPoint GetObjectTransform(SaveID id)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xC7B424", Offset = "0xC7B424", VA = "0xC7B424")]
	private void SetSaveableState(SaveableState state, SaveID sceneBundleId)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xC7B67C", Offset = "0xC7B67C", VA = "0xC7B67C")]
	public void UpdateSaveableStates(SaveableState[] states, SaveID sceneBundleId)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xC7A8CC", Offset = "0xC7A8CC", VA = "0xC7A8CC")]
	public void UpdateTransformsForBundle(SceneBundleState bundleState, bool checkForDuplicates = false)
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xC7B7B4", Offset = "0xC7B7B4", VA = "0xC7B7B4")]
	public void ClearStates()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xC7B854", Offset = "0xC7B854", VA = "0xC7B854")]
	public long GetLastSavedInBinary()
	{
		return default(long);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xC7B85C", Offset = "0xC7B85C", VA = "0xC7B85C")]
	public void SetLastSavedInBinary(long newValue)
	{
	}
}
[Serializable]
[Token(Token = "0x20000D5")]
public struct SaveID
{
	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private int data0;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[SerializeField]
	private int data1;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private int data2;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private int data3;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int generateID;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xAD600C", Offset = "0xAD600C", VA = "0xAD600C")]
	public SaveID(string md5string)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xAD6028", Offset = "0xAD6028", VA = "0xAD6028")]
	public SaveID(int data0, int data1, int data2, int data3)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xAD6034", Offset = "0xAD6034", VA = "0xAD6034")]
	public bool IsSet()
	{
		return default(bool);
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xAD6064", Offset = "0xAD6064", VA = "0xAD6064")]
	public void Reset()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xC7B880", Offset = "0xC7B880", VA = "0xC7B880")]
	private static bool Parse(string md5str, out int data0, out int data1, out int data2, out int data3)
	{
		return default(bool);
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xAD606C", Offset = "0xAD606C", VA = "0xAD606C")]
	public string ToHexString()
	{
		return null;
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xAD6074", Offset = "0xAD6074", VA = "0xAD6074")]
	public void GetData(out int data0, out int data1, out int data2, out int data3)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xAD6098", Offset = "0xAD6098", VA = "0xAD6098")]
	public int GetFirstData()
	{
		return default(int);
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xC7BAA4", Offset = "0xC7BAA4", VA = "0xC7BAA4")]
	public static SaveID GenerateIDBasedOnTime()
	{
		return default(SaveID);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xAD60A0", Offset = "0xAD60A0", VA = "0xAD60A0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xAD60A8", Offset = "0xAD60A8", VA = "0xAD60A8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xAD60B0", Offset = "0xAD60B0", VA = "0xAD60B0")]
	public bool ValueEquals(ref SaveID other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xAD60FC", Offset = "0xAD60FC", VA = "0xAD60FC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xC7BE08", Offset = "0xC7BE08", VA = "0xC7BE08")]
	public static bool operator ==(SaveID a, SaveID b)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000D6")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SaveManager instance;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SaveSlot[] saveSlots;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SaveSlot activeSave;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int latestSaveSlotUsed;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int NumberOfSaveSlots;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int AutoSaveSlotIndex;

	[Token(Token = "0x17000085")]
	public static SaveManager Instance
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xC7BF18", Offset = "0xC7BF18", VA = "0xC7BF18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000086")]
	public static SaveSlot[] SaveSlots
	{
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xC7BF80", Offset = "0xC7BF80", VA = "0xC7BF80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000087")]
	public static SaveSlot ActiveSlot
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xC7BFE8", Offset = "0xC7BFE8", VA = "0xC7BFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public static SaveSlot LatestSaveSlotUsed
	{
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xC7C050", Offset = "0xC7C050", VA = "0xC7C050")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000089")]
	public static SaveGame CurrentGame
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xC7C0E4", Offset = "0xC7C0E4", VA = "0xC7C0E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xC7C158", Offset = "0xC7C158", VA = "0xC7C158")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xC7C23C", Offset = "0xC7C23C", VA = "0xC7C23C")]
	public void Init()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xC7C240", Offset = "0xC7C240", VA = "0xC7C240")]
	private void LoadSaveSlotData()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xC7C594", Offset = "0xC7C594", VA = "0xC7C594")]
	public void CheckForLatestSave(bool includeAutoSave)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xC7C7F8", Offset = "0xC7C7F8", VA = "0xC7C7F8")]
	public SaveSlot FindEmptySaveSlot()
	{
		return null;
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xC7C980", Offset = "0xC7C980", VA = "0xC7C980")]
	public bool HasAnySaveData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xC7CAA4", Offset = "0xC7CAA4", VA = "0xC7CAA4")]
	public void OnLoadGame(SaveSlot slot)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xC7CB9C", Offset = "0xC7CB9C", VA = "0xC7CB9C")]
	public void OnGameUnloaded()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xC7C498", Offset = "0xC7C498", VA = "0xC7C498")]
	private void LoadSaveSlotFromDisk(ref SaveSlot slot)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC7CEAC", Offset = "0xC7CEAC", VA = "0xC7CEAC")]
	public void SetActiveSlot(GameSession session, int index)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC7D294", Offset = "0xC7D294", VA = "0xC7D294")]
	public bool SaveSession(GameSession session, SaveSlot slot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC7D800", Offset = "0xC7D800", VA = "0xC7D800")]
	public void ClearSlot(SaveSlot slot)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC7DD98", Offset = "0xC7DD98", VA = "0xC7DD98")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x20000D7")]
public class SaveObjectBase : MonoBehaviour
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	[SerializeField]
	private SaveID id;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	[SerializeField]
	private Rigidbody rb;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF314", Offset = "0x9FF314")]
	private bool <Kinematic>k__BackingField;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int version;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Component> componentsToSave;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveableState state;

	[NonSerialized]
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SaveID originalBundle;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SaveableComponent[] saveableComponents;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF324", Offset = "0x9FF324")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x1700008A")]
	public SaveID Id
	{
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xC7DE1C", Offset = "0xC7DE1C", VA = "0xC7DE1C")]
		get
		{
			return default(SaveID);
		}
	}

	[Token(Token = "0x1700008B")]
	public Rigidbody Rb
	{
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xC7DE30", Offset = "0xC7DE30", VA = "0xC7DE30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008C")]
	public bool Kinematic
	{
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xC7DE38", Offset = "0xC7DE38", VA = "0xC7DE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA14", Offset = "0xA0FA14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xC7DE40", Offset = "0xC7DE40", VA = "0xC7DE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA24", Offset = "0xA0FA24")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public bool Initialized
	{
		[Token(Token = "0x6000481")]
		[Address(RVA = "0xC7E06C", Offset = "0xC7E06C", VA = "0xC7E06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA34", Offset = "0xA0FA34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000482")]
		[Address(RVA = "0xC7E074", Offset = "0xC7E074", VA = "0xC7E074")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA44", Offset = "0xA0FA44")]
		private set
		{
		}
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC7DE28", Offset = "0xC7DE28", VA = "0xC7DE28")]
	public void SetId(SaveID id)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC7DE4C", Offset = "0xC7DE4C", VA = "0xC7DE4C")]
	public bool HasSaveableComponents()
	{
		return default(bool);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xC7E080", Offset = "0xC7E080", VA = "0xC7E080")]
	public void Setup([Optional] SaveableState s)
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC7DE68", Offset = "0xC7DE68", VA = "0xC7DE68")]
	public SaveableComponent[] GetSaveableComponents()
	{
		return null;
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC7E448", Offset = "0xC7E448", VA = "0xC7E448")]
	public SaveableComponent GetSaveableComponentOfType(Type compType)
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	public T GetSaveableComponent<T>() where T : SaveableComponent
	{
		return null;
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xC7E58C", Offset = "0xC7E58C", VA = "0xC7E58C")]
	public bool GetSaveableComponent(string type, int id, out SaveableComponent component)
	{
		return default(bool);
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xC7E684", Offset = "0xC7E684", VA = "0xC7E684")]
	public bool GetBinaryDataForFile(int componentId, out byte[] result)
	{
		return default(bool);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xC7E758", Offset = "0xC7E758", VA = "0xC7E758")]
	public SaveObjectBase()
	{
	}
}
[Token(Token = "0x20000D8")]
[DisallowMultipleComponent]
public class SaveObjectSpawnable : SaveObjectBase
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AssetReference prefab;

	[Token(Token = "0x1700008E")]
	public AssetReference Prefab
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xC7E7F8", Offset = "0xC7E7F8", VA = "0xC7E7F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xC7E800", Offset = "0xC7E800", VA = "0xC7E800")]
	public SaveObjectSpawnable()
	{
	}
}
[Token(Token = "0x20000D9")]
public class SaveObjectStatic : SaveObjectBase
{
	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC7E804", Offset = "0xC7E804", VA = "0xC7E804")]
	public SaveObjectStatic()
	{
	}
}
[Token(Token = "0x20000DA")]
public class SaveSlot
{
	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF344", Offset = "0x9FF344")]
	private int <Slot>k__BackingField;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF354", Offset = "0x9FF354")]
	private string <SaveName>k__BackingField;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DateTime lastSaved;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF364", Offset = "0x9FF364")]
	private SaveGame <Game>k__BackingField;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF374", Offset = "0x9FF374")]
	private bool <Compatible>k__BackingField;

	[Token(Token = "0x1700008F")]
	public int Slot
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xC7E808", Offset = "0xC7E808", VA = "0xC7E808")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA54", Offset = "0xA0FA54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600048E")]
		[Address(RVA = "0xC7E810", Offset = "0xC7E810", VA = "0xC7E810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA64", Offset = "0xA0FA64")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public string LastSaved
	{
		[Token(Token = "0x600048F")]
		[Address(RVA = "0xC7E818", Offset = "0xC7E818", VA = "0xC7E818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000091")]
	public string TimePlayed
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0xC7E994", Offset = "0xC7E994", VA = "0xC7E994")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000092")]
	public SaveGame Game
	{
		[Token(Token = "0x6000491")]
		[Address(RVA = "0xC7EAA4", Offset = "0xC7EAA4", VA = "0xC7EAA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA74", Offset = "0xA0FA74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000492")]
		[Address(RVA = "0xC7EAAC", Offset = "0xC7EAAC", VA = "0xC7EAAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA84", Offset = "0xA0FA84")]
		private set
		{
		}
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC7C3D4", Offset = "0xC7C3D4", VA = "0xC7C3D4")]
	public SaveSlot(int s)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC7D250", Offset = "0xC7D250", VA = "0xC7D250")]
	public SaveSlot(int s, SaveGame game)
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC7CEA4", Offset = "0xC7CEA4", VA = "0xC7CEA4")]
	public void SetGame(SaveGame game)
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xC7E81C", Offset = "0xC7E81C", VA = "0xC7E81C")]
	private string GetLastSavedString()
	{
		return null;
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC7E998", Offset = "0xC7E998", VA = "0xC7E998")]
	private string GetTimeSpanString()
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC7C958", Offset = "0xC7C958", VA = "0xC7C958")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC7EAB4", Offset = "0xC7EAB4", VA = "0xC7EAB4")]
	public bool SaveIsCompatible()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000DB")]
public static class SaveUtility
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Type> stringToType;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xC7EB5C", Offset = "0xC7EB5C", VA = "0xC7EB5C")]
	public static void SerializeComponents(SaveableState saveableState, SaveableComponent[] components)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xC7EFAC", Offset = "0xC7EFAC", VA = "0xC7EFAC")]
	public static SaveableState[] CreateSaveableStates(List<SaveObjectBase> saveables)
	{
		return null;
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xC7F3D0", Offset = "0xC7F3D0", VA = "0xC7F3D0")]
	private static void SetComponentStates(SaveableState state, SaveObjectBase saveable)
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xC7F4F4", Offset = "0xC7F4F4", VA = "0xC7F4F4")]
	private static void CollectValidSaveables(List<SaveObjectBase> saveables, List<string> names, out List<SaveObjectBase> validSaveables)
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC7F6F8", Offset = "0xC7F6F8", VA = "0xC7F6F8")]
	public static SceneBundleState CreateSceneBundleState(LoadedSceneBundle sceneBundle)
	{
		return null;
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC7FBE0", Offset = "0xC7FBE0", VA = "0xC7FBE0")]
	public static bool SetObjectState(SaveObjectBase saveable, SaveableState state, SaveableBinaryDataList binaryDataList)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC7FC98", Offset = "0xC7FC98", VA = "0xC7FC98")]
	private static void SetComponentStates(SaveObjectBase saveable, SerializedComponentState[] states, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC801B4", Offset = "0xC801B4", VA = "0xC801B4")]
	private static string ReadBytesFromFile(string path)
	{
		return null;
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC7CD08", Offset = "0xC7CD08", VA = "0xC7CD08")]
	public static SaveGame GetSaveGameFromFile(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xC7CE18", Offset = "0xC7CE18", VA = "0xC7CE18")]
	public static SaveableState[] GetSaveableStatesFromFile(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC7ABF0", Offset = "0xC7ABF0", VA = "0xC7ABF0")]
	public static SaveableBinaryDataList GetBinaryDataFromFile(int slot, ref SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC80660", Offset = "0xC80660", VA = "0xC80660")]
	private static bool ReadSaveID(FileStream stream, out SaveID outId)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC8077C", Offset = "0xC8077C", VA = "0xC8077C")]
	private static bool ReadSingleInt(FileStream stream, out int outNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC80850", Offset = "0xC80850", VA = "0xC80850")]
	private static bool ReadDataChunk(FileStream stream, int numBytes, out byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC808F4", Offset = "0xC808F4", VA = "0xC808F4")]
	private static bool WriteToFile(string text, string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC80B14", Offset = "0xC80B14", VA = "0xC80B14")]
	public static bool SaveGameStateToFile(SaveGame game, int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC80ED0", Offset = "0xC80ED0", VA = "0xC80ED0")]
	public static bool SaveBinaryDataToFile(Dictionary<SaveID, SaveableBinaryDataList> binaryDataForSceneBundles, int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC817B8", Offset = "0xC817B8", VA = "0xC817B8")]
	public static bool SaveObjectsToFile(SaveableState[] objArray, int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC7D61C", Offset = "0xC7D61C", VA = "0xC7D61C")]
	public static bool SaveAllToFile(SaveGame saveGame, SaveableState[] saveableStates, Dictionary<SaveID, SaveableBinaryDataList> binaryData, int slotIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC81A10", Offset = "0xC81A10", VA = "0xC81A10")]
	public static void SaveGameSettings(GameSettings settings)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC81BE4", Offset = "0xC81BE4", VA = "0xC81BE4")]
	public static GameSettings LoadGameSettings()
	{
		return null;
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xC81B40", Offset = "0xC81B40", VA = "0xC81B40")]
	public static string RootPath()
	{
		return null;
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC81944", Offset = "0xC81944", VA = "0xC81944")]
	public static string SaveFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC8040C", Offset = "0xC8040C", VA = "0xC8040C")]
	public static string SaveFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xC804F0", Offset = "0xC804F0", VA = "0xC804F0")]
	public static string DataFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xC805C4", Offset = "0xC805C4", VA = "0xC805C4")]
	public static string DataFilePath(int slot, SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xC81D0C", Offset = "0xC81D0C", VA = "0xC81D0C")]
	public static string DeletedSavesFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xC81DD8", Offset = "0xC81DD8", VA = "0xC81DD8")]
	public static string DeletedSavesFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xC81EBC", Offset = "0xC81EBC", VA = "0xC81EBC")]
	public static string OldDeletedSavesPath()
	{
		return null;
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xC81F88", Offset = "0xC81F88", VA = "0xC81F88")]
	public static string ScreenshotFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xC82054", Offset = "0xC82054", VA = "0xC82054")]
	public static string PolaroidsFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xC82120", Offset = "0xC82120", VA = "0xC82120")]
	public static string PolaroidFilePath()
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xC82384", Offset = "0xC82384", VA = "0xC82384")]
	public static string TempSaveFolderPath()
	{
		return null;
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xC80C68", Offset = "0xC80C68", VA = "0xC80C68")]
	public static string TempSaveFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xC813D8", Offset = "0xC813D8", VA = "0xC813D8")]
	public static string TempDataFolderPath(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xC8171C", Offset = "0xC8171C", VA = "0xC8171C")]
	public static string TempDataFilePath(int slot, SaveID bundleId)
	{
		return null;
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xC7CC08", Offset = "0xC7CC08", VA = "0xC7CC08")]
	public static bool SaveExists(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xC80D4C", Offset = "0xC80D4C", VA = "0xC80D4C")]
	public static bool EnsureFileExists(string folderPath, string fullPath)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xC814AC", Offset = "0xC814AC", VA = "0xC814AC")]
	public static bool EnsureFolderExists(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xC7D9AC", Offset = "0xC7D9AC", VA = "0xC7D9AC")]
	public static bool MoveSaveFilesToBackupFolder(int slot)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xC815DC", Offset = "0xC815DC", VA = "0xC815DC")]
	private static void RemoveFilesInDirectory(string path)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xC82450", Offset = "0xC82450", VA = "0xC82450")]
	private static DirectoryInfo CreateBackupFolder(int slot)
	{
		return null;
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xC826B0", Offset = "0xC826B0", VA = "0xC826B0")]
	private static void CleanupBackupFolder(int slot)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DC")]
public struct SaveableArray
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveableState[] objects;
}
[Token(Token = "0x20000DD")]
public interface IInitializable
{
	[Token(Token = "0x60004C6")]
	void Initialize();
}
[Token(Token = "0x20000DE")]
public abstract class SaveableComponent : MonoBehaviour
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ComponentState state;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF384", Offset = "0x9FF384")]
	private bool <StateInitialized>k__BackingField;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int componentId;

	[Token(Token = "0x17000093")]
	public bool StateInitialized
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xC828F4", Offset = "0xC828F4", VA = "0xC828F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FA94", Offset = "0xA0FA94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xC828FC", Offset = "0xC828FC", VA = "0xC828FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FAA4", Offset = "0xA0FAA4")]
		protected set
		{
		}
	}

	[Token(Token = "0x60004C9")]
	public abstract ComponentState CreateState();

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xC7FFE8", Offset = "0xC7FFE8", VA = "0xC7FFE8")]
	public void InitState([Optional] ComponentState s)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xC82908", Offset = "0xC82908", VA = "0xC82908")]
	public bool HasValidState()
	{
		return default(bool);
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xC6E2E4", Offset = "0xC6E2E4", VA = "0xC6E2E4")]
	protected SaveableComponent()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public class ComponentState
{
	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xC221FC", Offset = "0xC221FC", VA = "0xC221FC")]
	public ComponentState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E0")]
public class ComponentStateWithBinaryData : ComponentState
{
	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string filename;

	[NonSerialized]
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte[] binaryData;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xC22C88", Offset = "0xC22C88", VA = "0xC22C88", Slot = "4")]
	public virtual string GetFilenameExtension()
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xC22CD0", Offset = "0xC22CD0", VA = "0xC22CD0")]
	public ComponentStateWithBinaryData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E1")]
public class EmptyComponentState : ComponentState
{
	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xC36F08", Offset = "0xC36F08", VA = "0xC36F08")]
	public EmptyComponentState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E2")]
public class FloatContainerState : ComponentState
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxValue;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float currentValue;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1084800", Offset = "0x1084800", VA = "0x1084800")]
	public FloatContainerState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E3")]
public class IntContainerState : ComponentState
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxValue;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int currentValue;

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xE11AF4", Offset = "0xE11AF4", VA = "0xE11AF4")]
	public IntContainerState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E4")]
public class ObjectContainerState : ComponentState
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxValue;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveID[] objects;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xE2BF50", Offset = "0xE2BF50", VA = "0xE2BF50")]
	public ObjectContainerState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E5")]
public class GameState
{
	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerState playerState;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryState inventoryState;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveID[] activeSceneBundles;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneBundleState[] sceneBundleStates;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MilestoneState[] milestoneStates;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x1092D6C", Offset = "0x1092D6C", VA = "0x1092D6C")]
	public GameState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E6")]
public class PlayerState
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID playerScene;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 playerPosition;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float playerRotationAroundY;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SaveID heldInRightHand;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SaveID heldInLeftHand;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GemType[] gloveGemType;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool canOpenInventory;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool[] braceletEquipped;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MissionBeaconMapState[] BeaconMapStates;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xC637B0", Offset = "0xC637B0", VA = "0xC637B0")]
	public PlayerState()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xC6386C", Offset = "0xC6386C", VA = "0xC6386C")]
	public void UpdateState()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E7")]
public class GameStats
{
	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int hoursPlayed;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int minutesPlayed;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int seedsSown;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waterPoured;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int treesChopped;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int puffkinsFed;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int manateesFed;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int puffkinsPetted;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int manateesPetted;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float percentageTimeSpentOutdoors;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hoursSpentOnBoat;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<PlantType, int> plantsSprouted;

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1092D68", Offset = "0x1092D68", VA = "0x1092D68")]
	public void AddStats(GameStats stats)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1092850", Offset = "0x1092850", VA = "0x1092850")]
	public GameStats()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E8")]
public class SaveableState
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID id;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializedComponentState[] components;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool objectActive;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool kinematic;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReferenceSerializable prefab;

	[NonSerialized]
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SerializedBinaryData[] binaryData;

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xC7F45C", Offset = "0xC7F45C", VA = "0xC7F45C")]
	public SaveableState()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xC7F1FC", Offset = "0xC7F1FC", VA = "0xC7F1FC")]
	public SaveableState(SaveObjectBase saveable)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xC7E6EC", Offset = "0xC7E6EC", VA = "0xC7E6EC")]
	public byte[] GetBinaryData(int componentId)
	{
		return null;
	}
}
[Token(Token = "0x20000E9")]
public class SaveableBinaryDataList
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<SerializedBinaryData> datas;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xC80044", Offset = "0xC80044", VA = "0xC80044")]
	public byte[] GetDataForComponent(SaveID saveId, int componentId)
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC7B600", Offset = "0xC7B600", VA = "0xC7B600")]
	public SaveableBinaryDataList()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
public class SceneBundleState
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID id;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference sceneAsset;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveID[] dynamicObjectIds;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OrientedPoint[] dynamicObjectTransforms;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SaveID[] staticObjectIds;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientedPoint[] staticObjectTransforms;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DateTime playerLastVisitedTime;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xC7FBA8", Offset = "0xC7FBA8", VA = "0xC7FBA8")]
	public SceneBundleState(LoadedSceneBundle sceneBundle)
	{
	}
}
[Serializable]
[Token(Token = "0x20000EB")]
public struct SerializedComponentState
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string componentType;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string stateType;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string state;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ComponentState componentState;
}
[Serializable]
[Token(Token = "0x20000EC")]
public struct SerializedBinaryData
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveID id;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int componentId;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int numBytes;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public byte[] data;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xAD669C", Offset = "0xAD669C", VA = "0xAD669C")]
	public SerializedBinaryData(SaveID id, int componentId, byte[] data)
	{
	}
}
[Token(Token = "0x20000ED")]
public class SceneBundleLoadRequest
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SceneBundle bundle;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool loadStaticScenes;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IResourceLocation> locations;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<LoadedSceneBundle> callback;

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xC82F6C", Offset = "0xC82F6C", VA = "0xC82F6C")]
	public SceneBundleLoadRequest(SceneBundle bundle, bool loadStaticScenes, [Optional] Action<LoadedSceneBundle> cb)
	{
	}
}
[Token(Token = "0x20000EE")]
public class SceneHandler : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF3A4", Offset = "0x9FF3A4")]
	private static SceneHandler <Instance>k__BackingField;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference emptySceneAssetRef;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OptimizedCollection<LoadedSceneBundle> loadedSceneBundles;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<SceneBundleLoadRequest> bundlesToLoad;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AsyncOperationHandle<SceneInstance>> scenesBeingLoaded;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AsyncOperationHandle<IList<IResourceLocation>>> resourceLocationsBeingLoaded;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<LoadedSceneBundle> bundlesToProcess;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private SceneBundle[] allSceneBundles;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<SaveID, SceneBundle> sceneBundles;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Scene currentSceneForSpawnedObjects;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int mainScene;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string emptySceneName;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int numScenesToUnload;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF3C4", Offset = "0x9FF3C4")]
	private bool <IsReady>k__BackingField;

	[Token(Token = "0x17000094")]
	public static SceneHandler Instance
	{
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xC8302C", Offset = "0xC8302C", VA = "0xC8302C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FAB4", Offset = "0xA0FAB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xC8307C", Offset = "0xC8307C", VA = "0xC8307C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FAC4", Offset = "0xA0FAC4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool IsReady
	{
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xC830D4", Offset = "0xC830D4", VA = "0xC830D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FAD4", Offset = "0xA0FAD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xC830DC", Offset = "0xC830DC", VA = "0xC830DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FAE4", Offset = "0xA0FAE4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public static int NumScenesBeingLoaded
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xC830E8", Offset = "0xC830E8", VA = "0xC830E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000097")]
	public static int NumBundlesToLoad
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xC831E0", Offset = "0xC831E0", VA = "0xC831E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xC832D8", Offset = "0xC832D8", VA = "0xC832D8")]
	public void SetMainSceneAsActive()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xC83404", Offset = "0xC83404", VA = "0xC83404")]
	public OptimizedCollection<LoadedSceneBundle> GetLoadedSceneBundles()
	{
		return default(OptimizedCollection<LoadedSceneBundle>);
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xC83410", Offset = "0xC83410", VA = "0xC83410")]
	public LoadedSceneBundle GetLoadedSceneBundle(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xC7369C", Offset = "0xC7369C", VA = "0xC7369C")]
	public bool SceneBundleIsLoaded(ref SaveID id)
	{
		return default(bool);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xC834EC", Offset = "0xC834EC", VA = "0xC834EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xC836C4", Offset = "0xC836C4", VA = "0xC836C4")]
	public bool IsDoneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xC83744", Offset = "0xC83744", VA = "0xC83744")]
	public void UpdateLoading()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xC83920", Offset = "0xC83920", VA = "0xC83920")]
	public void UnloadAllScenes()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xC83C48", Offset = "0xC83C48", VA = "0xC83C48")]
	public bool GetSceneBundleFromID(SaveID id, out SceneBundle bundle)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xC83CC8", Offset = "0xC83CC8", VA = "0xC83CC8")]
	public void TriggerLoadOfSceneBundle(SceneBundle bundle, bool onlyLoadStatic, Action<LoadedSceneBundle> callback)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xC83DC4", Offset = "0xC83DC4", VA = "0xC83DC4")]
	public void TriggerUnloadOfSceneBundle(SceneBundle bundle)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xC839D0", Offset = "0xC839D0", VA = "0xC839D0")]
	private void UnloadSceneBundle(LoadedSceneBundle bundle)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xC83CD0", Offset = "0xC83CD0", VA = "0xC83CD0")]
	private void AddSceneBundleToLoadQueue(SceneBundle bundle, bool onlyLoadStatic, Action<LoadedSceneBundle> callback)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xC83F08", Offset = "0xC83F08", VA = "0xC83F08")]
	private bool ScenesHaveAlreadyBeenLoaded(SceneBundleLoadRequest request)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xC83FB4", Offset = "0xC83FB4", VA = "0xC83FB4")]
	private void OnSceneLocationLoaded(AsyncOperationHandle<IList<IResourceLocation>> handle)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xC841F0", Offset = "0xC841F0", VA = "0xC841F0")]
	private void LoadNextSceneLocation(SceneBundleLoadRequest request)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xC83E5C", Offset = "0xC83E5C", VA = "0xC83E5C")]
	private void PrepareToLoadSceneBundle(SceneBundleLoadRequest request)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xC84340", Offset = "0xC84340", VA = "0xC84340")]
	private void LoadSceneBundle(SceneBundleLoadRequest request)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC84788", Offset = "0xC84788", VA = "0xC84788")]
	private bool SceneIsLoaded(string name, ref Scene scene)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC84684", Offset = "0xC84684", VA = "0xC84684")]
	private void LoadScene(AssetReference sceneRef)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xC84A8C", Offset = "0xC84A8C", VA = "0xC84A8C")]
	public SaveID[] GetActiveSceneBundleIDs()
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC84B48", Offset = "0xC84B48", VA = "0xC84B48")]
	private void OnSceneLoaded(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC84910", Offset = "0xC84910", VA = "0xC84910")]
	private void ProcessLoadedScene(Scene scene)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC837BC", Offset = "0xC837BC", VA = "0xC837BC")]
	private void ProcessNextBundle()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC84C08", Offset = "0xC84C08", VA = "0xC84C08")]
	private void OnEmptySceneLoaded(AsyncOperationHandle<SceneInstance> handle)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC84CE4", Offset = "0xC84CE4", VA = "0xC84CE4")]
	private void OnSceneUnloaded(AsyncOperation handle)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC84D20", Offset = "0xC84D20", VA = "0xC84D20")]
	public bool IsBusyUnloadingScenes()
	{
		return default(bool);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC84D30", Offset = "0xC84D30", VA = "0xC84D30")]
	public SaveID GetBundleIDForScene(int sceneHandle)
	{
		return default(SaveID);
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xC733CC", Offset = "0xC733CC", VA = "0xC733CC")]
	public LoadedSceneBundle GetLoadedBundleForScene(int sceneHandle)
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xC84D5C", Offset = "0xC84D5C", VA = "0xC84D5C")]
	public Scene GetCurrentSceneForSpawnedObjects()
	{
		return default(Scene);
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC84E2C", Offset = "0xC84E2C", VA = "0xC84E2C")]
	public LoadedSceneBundle GetDefaultSceneBundle()
	{
		return null;
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xC7E30C", Offset = "0xC7E30C", VA = "0xC7E30C")]
	public bool SceneIsDynamic(int sceneHandle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xC6D18C", Offset = "0xC6D18C", VA = "0xC6D18C")]
	public SaveObjectBase GetSaveObject(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xC84F58", Offset = "0xC84F58", VA = "0xC84F58")]
	public SceneHandler()
	{
	}
}
[Token(Token = "0x20000EF")]
public class LoadedSceneBundle
{
	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID saveID;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Scene> dynamicScenes;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Scene> staticScenes;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<IInitializable> allObjects;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<SaveObjectBase> dynamicSaveables;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SaveObjectBase> staticSaveables;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Scene sceneForSpawnedObjects;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<Type, List<IInitializable>> objectsThatNeedInitialization;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<IGrabbable> grabbables;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, SaveObjectBase> saveObjectLookupTable;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<string> dynamicSaveableNames;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<string> staticSaveableNames;

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xCF45A4", Offset = "0xCF45A4", VA = "0xCF45A4")]
	public LoadedSceneBundle(SaveID id)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xCF47E4", Offset = "0xCF47E4", VA = "0xCF47E4")]
	public void AllObjectsInitialized()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xCF4854", Offset = "0xCF4854", VA = "0xCF4854")]
	private void AddToSortedList(List<IInitializable> initializableObjects)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xCF4DD0", Offset = "0xCF4DD0", VA = "0xCF4DD0")]
	private void AddStaticObjects(List<IInitializable> initializableObjects, List<SaveObjectBase> saveableObjects)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xCF50C8", Offset = "0xCF50C8", VA = "0xCF50C8")]
	public void AddDynamicObjects(List<IInitializable> initializableObjects, List<SaveObjectBase> saveableObjects)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xCF51B0", Offset = "0xCF51B0", VA = "0xCF51B0")]
	public void AddDynamicSaveObject(SaveObjectBase saveObject)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xCF526C", Offset = "0xCF526C", VA = "0xCF526C")]
	public bool RemoveDynamicSaveObject(SaveObjectBase saveObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xCF5304", Offset = "0xCF5304", VA = "0xCF5304")]
	public bool RemoveStaticSaveObject(SaveObjectBase saveObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xCF539C", Offset = "0xCF539C", VA = "0xCF539C")]
	public void AddStaticSaveObject(SaveObjectBase saveObject)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xCF5458", Offset = "0xCF5458", VA = "0xCF5458")]
	public void FindObjectsInScenes(List<Scene> scenes, bool isStatic)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xCF56D8", Offset = "0xCF56D8", VA = "0xCF56D8")]
	public SaveObjectBase GetSaveable(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xCF4F14", Offset = "0xCF4F14", VA = "0xCF4F14")]
	private void AddSaveObjectToLookupTable(SaveObjectBase obj)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xCF5720", Offset = "0xCF5720", VA = "0xCF5720")]
	private SaveObjectBase GetSaveObjectFromLookupTable(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xCF5844", Offset = "0xCF5844", VA = "0xCF5844")]
	public void RemoveAnyNullObjects()
	{
	}
}
[Token(Token = "0x20000F0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FA8F4", Offset = "0x9FA8F4")]
public class SceneBundle : ScriptableObject
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FF3D4", Offset = "0x9FF3D4")]
	public float version;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public SaveID id;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference[] staticScenes;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AssetReference[] dynamicScenes;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneBundle[] extraContentBundles;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xC82F64", Offset = "0xC82F64", VA = "0xC82F64")]
	public SceneBundle()
	{
	}
}
[Token(Token = "0x20000F1")]
public class UnloadWorldZone : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private WorldZone zone;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1AE4920", Offset = "0x1AE4920", VA = "0x1AE4920")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1AE4A1C", Offset = "0x1AE4A1C", VA = "0x1AE4A1C")]
	public UnloadWorldZone()
	{
	}
}
[Token(Token = "0x20000F2")]
public enum WorldZoneID
{
	[Token(Token = "0x4000442")]
	Homeland,
	[Token(Token = "0x4000443")]
	Biome1,
	[Token(Token = "0x4000444")]
	Biome2,
	[Token(Token = "0x4000445")]
	Biome3,
	[Token(Token = "0x4000446")]
	Biome4,
	[Token(Token = "0x4000447")]
	GodIsland,
	[Token(Token = "0x4000448")]
	COUNT
}
[Token(Token = "0x20000F3")]
public class WorldZone : MonoBehaviour
{
	[Token(Token = "0x20000F4")]
	public struct WorldZoneBounds
	{
		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float radius;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 center;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 capsulePos1;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 capsulePos2;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 capsuleDirection;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float capsuleHeight;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isCapsule;

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xB19324", Offset = "0xB19324", VA = "0xB19324")]
		public WorldZoneBounds(Collider col, Transform transform)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA95C", Offset = "0x9FA95C")]
	private sealed class <>c
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__19_0;

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1AEABA0", Offset = "0x1AEABA0", VA = "0x1AEABA0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x1AEABA8", Offset = "0x1AEABA8", VA = "0x1AEABA8")]
		internal void <.ctor>b__19_0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SceneBundle sceneBundle;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider innerTrigger;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider outerTrigger;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LODGroup lodGroup;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<bool> OnLowResVersionToggled;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorldZoneBounds innerBounds;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private WorldZoneBounds outerBounds;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool playerIsInside;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool needsDistanceCheck;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public WorldZoneID ZoneID;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1AE9B44", Offset = "0x1AE9B44", VA = "0x1AE9B44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1AEA214", Offset = "0x1AEA214", VA = "0x1AEA214")]
	private void OnPlayerEntered()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1AEA45C", Offset = "0x1AEA45C", VA = "0x1AEA45C")]
	private void OnPlayerLeft()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1AEA460", Offset = "0x1AEA460", VA = "0x1AEA460")]
	private void Update()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1AEA820", Offset = "0x1AEA820", VA = "0x1AEA820")]
	private static bool IsInsideBounds(Vector3 pos, ref WorldZoneBounds bounds)
	{
		return default(bool);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1AEA398", Offset = "0x1AEA398", VA = "0x1AEA398")]
	public void LoadZone()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1AE4938", Offset = "0x1AE4938", VA = "0x1AE4938")]
	public void UnloadZone()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x1AE9CF8", Offset = "0x1AE9CF8", VA = "0x1AE9CF8")]
	public void ToggleLowResVersion(bool visible)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1AEAA30", Offset = "0x1AEAA30", VA = "0x1AEAA30")]
	public WorldZone()
	{
	}
}
[Token(Token = "0x20000F6")]
public class WorldZoneLODExtender : SaveableComponent, IInitializable
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] m_lodExtensions;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject[] m_lodSubtractions;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_shouldBeActive;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x1AEABAC", Offset = "0x1AEABAC", VA = "0x1AEABAC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1AEAC44", Offset = "0x1AEAC44", VA = "0x1AEAC44", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1AEACE0", Offset = "0x1AEACE0", VA = "0x1AEACE0")]
	public void ExtendLOD()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1AEADDC", Offset = "0x1AEADDC", VA = "0x1AEADDC")]
	public WorldZoneLODExtender()
	{
	}
}
[Token(Token = "0x20000F7")]
public class WorldZoneLODExtenderState : ComponentState
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_shouldExtendLOD;

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x1AEAC14", Offset = "0x1AEAC14", VA = "0x1AEAC14")]
	public WorldZoneLODExtenderState(bool shouldExtend)
	{
	}
}
[Token(Token = "0x20000F8")]
public class WorldZoneLODSwitcher : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_defaultLOD;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_alternativeLOD;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_hasSwitchedToAlternativeLOD;

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1AEADE4", Offset = "0x1AEADE4", VA = "0x1AEADE4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1AEAE7C", Offset = "0x1AEAE7C", VA = "0x1AEAE7C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x1AEAF18", Offset = "0x1AEAF18", VA = "0x1AEAF18")]
	public void SwitchToAlternativeLOD()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x1AEAF64", Offset = "0x1AEAF64", VA = "0x1AEAF64")]
	public WorldZoneLODSwitcher()
	{
	}
}
[Token(Token = "0x20000F9")]
public class WorldZoneLODSwitcherState : ComponentState
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_switchedToAlternative;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x1AEAE4C", Offset = "0x1AEAE4C", VA = "0x1AEAE4C")]
	public WorldZoneLODSwitcherState(bool didSwitch)
	{
	}
}
[Token(Token = "0x20000FA")]
public class SceneObject : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string sceneName;

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xC850F8", Offset = "0xC850F8", VA = "0xC850F8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xC85154", Offset = "0xC85154", VA = "0xC85154", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xC851E8", Offset = "0xC851E8", VA = "0xC851E8")]
	public SceneObject()
	{
	}
}
[Token(Token = "0x20000FB")]
public struct SpawnOperationCallbackData
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveID operationId;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] spawnedObjects;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveObjectBase[] saveObjects;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xAD6AC0", Offset = "0xAD6AC0", VA = "0xAD6AC0")]
	public SpawnOperationCallbackData(SaveID id, GameObject[] objects, SaveObjectBase[] saveObjs)
	{
	}
}
[Token(Token = "0x20000FC")]
public class SpawnManager : MonoBehaviour
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int MaxObjsSpawnedPerFrame;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static SpawnManager instance;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool noSpawningUntilNextUpdate;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<ObjectSpawner> spawnQueue;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ObjectSpawner> currentSpawnOperations;

	[Token(Token = "0x17000098")]
	public static int NumOperationsInQueue
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xCEA8FC", Offset = "0xCEA8FC", VA = "0xCEA8FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xCE9A60", Offset = "0xCE9A60", VA = "0xCE9A60")]
	public static void SpawnObjectsFromSaveState(SaveableState[] states, Scene scene, OrientedPoint[] points, SaveID bundleId, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xCE9BFC", Offset = "0xCE9BFC", VA = "0xCE9BFC")]
	public static void SpawnObjects(AssetReference[] references, [Optional] OrientedPoint[] spawnPoints, [Optional] Transform[] parents, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xCE9ED4", Offset = "0xCE9ED4", VA = "0xCE9ED4")]
	public static void SpawnSingleObject(AssetReference reference, OrientedPoint spawnPoint, [Optional] Transform parent, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xCEA0D4", Offset = "0xCEA0D4", VA = "0xCEA0D4")]
	public static void SpawnOperationCompleted(ObjectSpawner op)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xCEA1E4", Offset = "0xCEA1E4", VA = "0xCEA1E4")]
	public static bool NeedsUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xCEA374", Offset = "0xCEA374", VA = "0xCEA374")]
	public static void CancelAllSpawnRequests()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xCEA484", Offset = "0xCEA484", VA = "0xCEA484")]
	public static void CancelSpawnRequestsForBundle(SaveID bundleId)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xCEA798", Offset = "0xCEA798", VA = "0xCEA798")]
	public static int GetNumItemsBeingSpawned()
	{
		return default(int);
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xCEA9DC", Offset = "0xCEA9DC", VA = "0xCEA9DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xCEA3E4", Offset = "0xCEA3E4", VA = "0xCEA3E4")]
	private void CancelAllRequests()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xCEA50C", Offset = "0xCEA50C", VA = "0xCEA50C")]
	private void CancelRequestsForBundle(SaveID bundleId)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xCE9B18", Offset = "0xCE9B18", VA = "0xCE9B18")]
	private void Spawn(SaveableState[] states, Scene scene, OrientedPoint[] points, SaveID operationId, SaveableBinaryDataList binaryDataList)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xCE9CA4", Offset = "0xCE9CA4", VA = "0xCE9CA4")]
	private void Spawn(AssetReference[] refs, OrientedPoint[] spawnPoints, Transform[] parentTransforms, Action<SpawnOperationCallbackData> preInitCallback, Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xCEAE3C", Offset = "0xCEAE3C", VA = "0xCEAE3C")]
	private static string GetDebugSpawnOpName()
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xCEA14C", Offset = "0xCEA14C", VA = "0xCEA14C")]
	private void SpawnOpCompleted(ObjectSpawner op)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xCEAE84", Offset = "0xCEAE84", VA = "0xCEAE84")]
	public static void UpdateSpawnQueue()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xCEAF5C", Offset = "0xCEAF5C", VA = "0xCEAF5C")]
	private void UpdateQueue()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xCEA2C4", Offset = "0xCEA2C4", VA = "0xCEA2C4")]
	private bool QueueIsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xCEA31C", Offset = "0xCEA31C", VA = "0xCEA31C")]
	private bool SpawningIsInProgress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xCEB0C8", Offset = "0xCEB0C8", VA = "0xCEB0C8")]
	public static void QuickSpawnObjectDebug(string address, OrientedPoint point)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xCEB1F4", Offset = "0xCEB1F4", VA = "0xCEB1F4")]
	private static void OnDebugObjectSpawned(AsyncOperationHandle<GameObject> handle)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xCEB7FC", Offset = "0xCEB7FC", VA = "0xCEB7FC")]
	private static void OnPostInitDebugSpawn(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xCEB3D8", Offset = "0xCEB3D8", VA = "0xCEB3D8")]
	public static void SetupSpawnedObjects(LoadedSceneBundle bundle, Scene scene, OrientedPoint[] spawnPoints, GameObject[] results, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xCEB8FC", Offset = "0xCEB8FC", VA = "0xCEB8FC")]
	public static void SetScene(Scene scene, GameObject[] results)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xCEBA84", Offset = "0xCEBA84", VA = "0xCEBA84")]
	public static void SetTransforms(OrientedPoint[] transforms, GameObject[] results)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xCEBBF8", Offset = "0xCEBBF8", VA = "0xCEBBF8")]
	public static void SetupStateForSpawnedObjects(List<SaveObjectBase> saveables)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xCEBD40", Offset = "0xCEBD40", VA = "0xCEBD40")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x20000FD")]
public class ObjectSpawner
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID sceneBundleId;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Scene scene;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<SpawnOperationCallbackData> preInitCallback;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<SpawnOperationCallbackData> postInitCallback;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AssetReference[] references;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientedPoint[] transforms;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform[] parents;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] results;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string debugName;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpawnUtility.SpawnOperationTracker tracker;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentSpawnIndex;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xE2C3B4", Offset = "0xE2C3B4", VA = "0xE2C3B4")]
	public ObjectSpawner()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xE2C3BC", Offset = "0xE2C3BC", VA = "0xE2C3BC")]
	public ObjectSpawner(string debugName, SaveID bundleId, AssetReference[] refs, Scene scene, [Optional] OrientedPoint[] points, [Optional] Transform[] parents, [Optional] Action<SpawnOperationCallbackData> preInitCallback, [Optional] Action<SpawnOperationCallbackData> postInitCallback)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xE2C4E4", Offset = "0xE2C4E4", VA = "0xE2C4E4")]
	public void StartOperation()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xE2C590", Offset = "0xE2C590", VA = "0xE2C590", Slot = "4")]
	public virtual bool UpdateOperation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xE2C6B8", Offset = "0xE2C6B8", VA = "0xE2C6B8", Slot = "5")]
	public virtual void OnObjectsSpawned()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xE2C890", Offset = "0xE2C890", VA = "0xE2C890")]
	protected void AddSpawnedObjectsToLoadedSceneBundle(int startIndex, int num)
	{
	}
}
[Token(Token = "0x20000FE")]
public class SavedObjectSpawner : ObjectSpawner
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SaveableState[] saveStates;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int objectsLeftToProcess;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int objectsLeftToAddToBundle;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SaveableBinaryDataList binaryDataList;

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC8299C", Offset = "0xC8299C", VA = "0xC8299C")]
	public SavedObjectSpawner(SaveID bundleId, SaveableState[] states, Scene scene, SaveableBinaryDataList binaryDataList, [Optional] OrientedPoint[] points)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xC82B58", Offset = "0xC82B58", VA = "0xC82B58", Slot = "5")]
	public override void OnObjectsSpawned()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xC82BFC", Offset = "0xC82BFC", VA = "0xC82BFC", Slot = "4")]
	public override bool UpdateOperation()
	{
		return default(bool);
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xC82D74", Offset = "0xC82D74", VA = "0xC82D74")]
	private void SetObjectStates(int startIndex, int num)
	{
	}
}
[Token(Token = "0x20000FF")]
public static class SpawnUtility
{
	[Token(Token = "0x2000100")]
	public class AsyncOperationTracker<T>
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int operationsHandled;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal AsyncOperationHandle<T>[] handles;

		[Token(Token = "0x6000563")]
		internal bool IsComplete()
		{
			return default(bool);
		}

		[Token(Token = "0x6000564")]
		public AsyncOperationTracker()
		{
		}
	}

	[Token(Token = "0x2000101")]
	public class SpawnOperationTracker : AsyncOperationTracker<GameObject>
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal Action callBack;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal ObjectSpawner spawnOp;

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xCEC2C0", Offset = "0xCEC2C0", VA = "0xCEC2C0")]
		public SpawnOperationTracker(ObjectSpawner so, Action cb)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xCEBF40", Offset = "0xCEBF40", VA = "0xCEBF40")]
		public void FinishUp()
		{
		}
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<AsyncOperationHandle<GameObject>, SpawnOperationTracker> spawnOperationTrackerDictionary;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xCEBE44", Offset = "0xCEBE44", VA = "0xCEBE44")]
	private static void OnSpawnOperationCompleted(AsyncOperationHandle<GameObject> obj)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xCEC10C", Offset = "0xCEC10C", VA = "0xCEC10C")]
	private static void RemoveTracker(SpawnOperationTracker tracker)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xCEC1FC", Offset = "0xCEC1FC", VA = "0xCEC1FC")]
	public static SpawnOperationTracker StartSpawningObjects(ObjectSpawner spawner, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xCEC374", Offset = "0xCEC374", VA = "0xCEC374")]
	public static void SpawnObjects(ObjectSpawner spawner, int startIndex, int num)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xCEAC4C", Offset = "0xCEAC4C", VA = "0xCEAC4C")]
	public static void CancelOperation(SpawnOperationTracker tracker)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xCEAAC0", Offset = "0xCEAAC0", VA = "0xCEAAC0")]
	public static void CancelAllOperations()
	{
	}
}
[Token(Token = "0x2000102")]
public class NeatLog
{
	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE1E268", Offset = "0xE1E268", VA = "0xE1E268")]
	public static void PrintFinal(string msg, [Optional] UnityEngine.Object context)
	{
	}
}
[Token(Token = "0x2000103")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FA96C", Offset = "0x9FA96C")]
public class CraftingBubble : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x2000104")]
	public class BubbledItem
	{
		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable stashable;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Harvestable harvestable;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OrientedPointSmooth positioner;

		[Token(Token = "0x1700009A")]
		public CraftingSystem.ResourceType ResourceType
		{
			[Token(Token = "0x6000594")]
			[Address(RVA = "0xC26454", Offset = "0xC26454", VA = "0xC26454")]
			get
			{
				return default(CraftingSystem.ResourceType);
			}
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xC24F80", Offset = "0xC24F80", VA = "0xC24F80")]
		public BubbledItem(Stashable stashable, Harvestable harvestable, OrientedPointSmooth positioner)
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xC2567C", Offset = "0xC2567C", VA = "0xC2567C")]
		public void UpdateItemPosition()
		{
		}
	}

	[Token(Token = "0x2000105")]
	private struct HoveringStashable
	{
		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF554", Offset = "0x9FF554")]
		private Stashable <Stashable>k__BackingField;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF564", Offset = "0x9FF564")]
		private bool <IsHovering>k__BackingField;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF574", Offset = "0x9FF574")]
		private bool <IsResolved>k__BackingField;

		[Token(Token = "0x1700009B")]
		public Stashable Stashable
		{
			[Token(Token = "0x6000596")]
			[Address(RVA = "0xAD5C60", Offset = "0xAD5C60", VA = "0xAD5C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB34", Offset = "0xA0FB34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xAD5C68", Offset = "0xAD5C68", VA = "0xAD5C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB44", Offset = "0xA0FB44")]
			set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public bool IsHovering
		{
			[Token(Token = "0x6000598")]
			[Address(RVA = "0xAD5C70", Offset = "0xAD5C70", VA = "0xAD5C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB54", Offset = "0xA0FB54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000599")]
			[Address(RVA = "0xAD5C78", Offset = "0xAD5C78", VA = "0xAD5C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB64", Offset = "0xA0FB64")]
			set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool IsResolved
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0xAD5C84", Offset = "0xAD5C84", VA = "0xAD5C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB74", Offset = "0xA0FB74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600059B")]
			[Address(RVA = "0xAD5C8C", Offset = "0xAD5C8C", VA = "0xAD5C8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB84", Offset = "0xA0FB84")]
			set
			{
			}
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xAD5C34", Offset = "0xAD5C34", VA = "0xAD5C34")]
		public HoveringStashable(Stashable stashable)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xAD5C98", Offset = "0xAD5C98", VA = "0xAD5C98")]
		public void Resolve(bool isHovering)
		{
		}
	}

	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA9D0", Offset = "0x9FA9D0")]
	private sealed class <>c__DisplayClass59_0
	{
		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable stashable;

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xC24F78", Offset = "0xC24F78", VA = "0xC24F78")]
		public <>c__DisplayClass59_0()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xC2633C", Offset = "0xC2633C", VA = "0xC2633C")]
		internal bool <Contains>b__0(BubbledItem bi)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA9E0", Offset = "0x9FA9E0")]
	private sealed class <>c__DisplayClass62_0
	{
		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Grabbable grabbable;

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xC253CC", Offset = "0xC253CC", VA = "0xC253CC")]
		public <>c__DisplayClass62_0()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xC263C4", Offset = "0xC263C4", VA = "0xC263C4")]
		internal bool <OnPreGrabItem>b__0(BubbledItem bi)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FA9F0", Offset = "0x9FA9F0")]
	private sealed class <>c
	{
		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__75_0;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__75_1;

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xC2632C", Offset = "0xC2632C", VA = "0xC2632C")]
		public <>c()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xC26334", Offset = "0xC26334", VA = "0xC26334")]
		internal void <.ctor>b__75_0()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xC26338", Offset = "0xC26338", VA = "0xC26338")]
		internal void <.ctor>b__75_1()
		{
		}
	}

	[Token(Token = "0x4000481")]
	private const float UpdateInterval = 0.2f;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int HoverShaderId;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float radiusItem;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float radiusBubble;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool alwaysUseSpiralPlacement;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[SerializeField]
	private bool placeItemsIn3d;

	[Token(Token = "0x4000487")]
	private const float ITEM_SPACING = 0.005f;

	[Token(Token = "0x4000488")]
	private const float ITEM_SMOOTHING = 5f;

	[Token(Token = "0x4000489")]
	private const float ITEM_MIN_DIST_FROM_CENTER = 0.09f;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2 WOBBLE_PHASE;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector2 WOBBLE_PHASE_OFFSET;

	[NonSerialized]
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<BubbledItem> items;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer bubbleRenderer;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material m_material;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_hasMaterialReference;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool m_hasBubble;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF4EC", Offset = "0x9FF4EC")]
	public UnityEvent OnAddedItem;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnRemovedItem;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnEnterBubble;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnExitBubble;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnRewardRecieved;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Stashable stashableHeldInBubble;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private ObjectContainer container;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool initialized;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OptimizedCollection<Stashable> m_hoveringStashables;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OptimizedCollection<HoveringStashable> m_hoveringStashablesToResolve;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider[] m_overlappingColliders;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float m_timeSinceUpdated;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SphereCollider m_sphereCollider;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool m_forceDisabled;

	[Token(Token = "0x17000099")]
	public int ItemCount
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0xC23864", Offset = "0xC23864", VA = "0xC23864")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000001")]
	[HideInInspector]
	public event Action OnStashedItemInBubble
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0xC238B4", Offset = "0xC238B4", VA = "0xC238B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FAF4", Offset = "0xA0FAF4")]
		add
		{
		}
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xC23958", Offset = "0xC23958", VA = "0xC23958")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB04", Offset = "0xA0FB04")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	[HideInInspector]
	public event Action OnStashedItemsUpdate
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0xC239FC", Offset = "0xC239FC", VA = "0xC239FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB14", Offset = "0xA0FB14")]
		add
		{
		}
		[Token(Token = "0x600056C")]
		[Address(RVA = "0xC23AA0", Offset = "0xC23AA0", VA = "0xC23AA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB24", Offset = "0xA0FB24")]
		remove
		{
		}
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xC23B44", Offset = "0xC23B44", VA = "0xC23B44")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC23BA4", Offset = "0xC23BA4", VA = "0xC23BA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xC23B48", Offset = "0xC23B48", VA = "0xC23B48")]
	private void RemoveAllHovering()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xC23F9C", Offset = "0xC23F9C", VA = "0xC23F9C")]
	private void UpdateHoveringStashables()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xC241C8", Offset = "0xC241C8", VA = "0xC241C8")]
	private int ClearNonHoveringStashables()
	{
		return default(int);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC24028", Offset = "0xC24028", VA = "0xC24028")]
	private void AddHoveringStashableToResolve(int length)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xC24324", Offset = "0xC24324", VA = "0xC24324")]
	private void ResolveHoveringStashable(Stashable stashable)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xC24450", Offset = "0xC24450", VA = "0xC24450", Slot = "5")]
	protected virtual bool CanBeAdded(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xC24490", Offset = "0xC24490", VA = "0xC24490")]
	private bool IsStashableValid(Stashable stashable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xC245F4", Offset = "0xC245F4", VA = "0xC245F4")]
	private bool IsHeldStateValid(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xC24754", Offset = "0xC24754", VA = "0xC24754")]
	private Stashable GetStashableFromCollider(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xC247CC", Offset = "0xC247CC", VA = "0xC247CC")]
	private Grabbable GetGrabbableFromCollider(Collider other)
	{
		return null;
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xC24110", Offset = "0xC24110", VA = "0xC24110")]
	private void UpdateTriggerCollision()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xC24844", Offset = "0xC24844", VA = "0xC24844")]
	private void OnTriggerUpdate(Collider other)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xC24C34", Offset = "0xC24C34", VA = "0xC24C34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xC24D9C", Offset = "0xC24D9C", VA = "0xC24D9C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xC242AC", Offset = "0xC242AC", VA = "0xC242AC")]
	private void UpdateHoveringEffect()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xC24ED4", Offset = "0xC24ED4", VA = "0xC24ED4")]
	private void SetHoveringEffect(bool isHovering)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xC24F74", Offset = "0xC24F74", VA = "0xC24F74", Slot = "6")]
	protected virtual void HandleInvalidGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xC24688", Offset = "0xC24688", VA = "0xC24688")]
	private bool Contains(Stashable stashable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xC24A28", Offset = "0xC24A28", VA = "0xC24A28")]
	public void AddItem(Stashable item)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xC24FE8", Offset = "0xC24FE8", VA = "0xC24FE8")]
	private void AddChildStashables(Stashable item)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xC252D8", Offset = "0xC252D8", VA = "0xC252D8")]
	private void OnPreGrabItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xC253D4", Offset = "0xC253D4", VA = "0xC253D4")]
	public void RemoveItem(BubbledItem item, bool itemWillBeDestroyed = false)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xC23C10", Offset = "0xC23C10", VA = "0xC23C10")]
	private void UpdateTargetPositions(bool updateSmoothing)
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xC23EF8", Offset = "0xC23EF8", VA = "0xC23EF8")]
	private void UpdateItemPositions()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xC257A4", Offset = "0xC257A4", VA = "0xC257A4")]
	public OrientedPoint GetTargetPosition(int i, int count)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xC2552C", Offset = "0xC2552C", VA = "0xC2552C")]
	private OrientedPoint GetTargetPosition3d(int i, int count)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xC25A74", Offset = "0xC25A74", VA = "0xC25A74", Slot = "7")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xC25CD4", Offset = "0xC25CD4", VA = "0xC25CD4")]
	private void TryAddSphereCollider()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xC25DDC", Offset = "0xC25DDC", VA = "0xC25DDC")]
	public void ForceEnable()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xC25E9C", Offset = "0xC25E9C", VA = "0xC25E9C")]
	public void ForceDisable()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xC25DE4", Offset = "0xC25DE4", VA = "0xC25DE4")]
	public void Enable()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xC25EA8", Offset = "0xC25EA8", VA = "0xC25EA8")]
	public void Disable()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xC25F40", Offset = "0xC25F40", VA = "0xC25F40")]
	public void RemoveAllItemsFromBubble()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xC25FB0", Offset = "0xC25FB0", VA = "0xC25FB0")]
	public CraftingBubble()
	{
	}
}
[Token(Token = "0x2000109")]
public class CraftingCanvas : MonoBehaviour
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<CraftingSystem.ResourceType, List<CraftingCanvasSprite>> CanvasSprites;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CraftingIngredient> BubbleIngredientList;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent m_onCorrectIngredient;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FF594", Offset = "0x9FF594")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF594", Offset = "0x9FF594")]
	private Transform m_root;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float m_popOutDuration;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_previouslyCompleted;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool m_shouldUpdate;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CraftingCanvasSprite[] m_spriteList;

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xC26524", Offset = "0xC26524", VA = "0xC26524")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xC26528", Offset = "0xC26528", VA = "0xC26528")]
	public void CollectCanvasSprites()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xC266A0", Offset = "0xC266A0", VA = "0xC266A0")]
	public void UpdateIngredientList(List<CraftingIngredient> newIngredientList)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xC26AA0", Offset = "0xC26AA0", VA = "0xC26AA0")]
	public void Activate()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xC26AAC", Offset = "0xC26AAC", VA = "0xC26AAC")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xC26AB4", Offset = "0xC26AB4", VA = "0xC26AB4")]
	private void HideAllSprites()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xC26B44", Offset = "0xC26B44", VA = "0xC26B44")]
	public void PopOut()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xC26C08", Offset = "0xC26C08", VA = "0xC26C08")]
	private void OnBubbleRemoved()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xC26CC8", Offset = "0xC26CC8", VA = "0xC26CC8")]
	public CraftingCanvas()
	{
	}
}
[Token(Token = "0x200010A")]
public class CraftingCanvasSprite : MonoBehaviour
{
	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CraftingSystem.ResourceType SpriteResourceType;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool IsSpriteVisible;

	[Token(Token = "0x1700009E")]
	public bool IsVisible
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xC26D88", Offset = "0xC26D88", VA = "0xC26D88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xC26A44", Offset = "0xC26A44", VA = "0xC26A44")]
	public void SetSpriteVisible(bool newVisible)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xC26D90", Offset = "0xC26D90", VA = "0xC26D90")]
	public CraftingCanvasSprite()
	{
	}
}
[Token(Token = "0x200010B")]
public class CraftingMachine : MonoBehaviour
{
	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF614", Offset = "0x9FF614")]
	public UnityEvent OnCraftingSuccessful;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnCraftingFailed;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool automaticallyTryToCraft;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool m_spawnCraftedItem;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[SerializeField]
	private bool m_requiresExactAmountOfResources;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private CraftingSystem.RecipeCollectionType recipeCollectionType;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CraftingBubble bubble;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Rotatable2 handle;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CraftingIngredient> currentIngredients;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CraftingCanvas ConnectedCanvas;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_initialized;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xC26F30", Offset = "0xC26F30", VA = "0xC26F30")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xC27008", Offset = "0xC27008", VA = "0xC27008")]
	public void TryInitialize()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xC271D4", Offset = "0xC271D4", VA = "0xC271D4")]
	private void CollectIngredients(ref List<CraftingIngredient> ingredients)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xC274FC", Offset = "0xC274FC", VA = "0xC274FC")]
	private CraftingRecipe GetCraftableRecipe()
	{
		return null;
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xC27664", Offset = "0xC27664", VA = "0xC27664")]
	private bool TryToCraftSomething()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xC27B6C", Offset = "0xC27B6C", VA = "0xC27B6C")]
	public void Debug_PerformSuccessfulCraft()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xC279B0", Offset = "0xC279B0", VA = "0xC279B0")]
	public void PerformSuccessfulCraft(CraftingRecipe recipe)
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xC27D88", Offset = "0xC27D88", VA = "0xC27D88")]
	private void OnCraftedItemSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xC277C8", Offset = "0xC277C8", VA = "0xC277C8")]
	private bool ConsumeItemOfType(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xC28084", Offset = "0xC28084", VA = "0xC28084")]
	public void LeverPulled(Rotatable2 handle)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xC28180", Offset = "0xC28180", VA = "0xC28180")]
	public void OnStashedItemsUpdate()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xC28228", Offset = "0xC28228", VA = "0xC28228")]
	private void CraftAutomatically()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xC28134", Offset = "0xC28134", VA = "0xC28134")]
	private bool TryCraft()
	{
		return default(bool);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xC2822C", Offset = "0xC2822C", VA = "0xC2822C")]
	public CraftingMachine()
	{
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class CraftingIngredient
{
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private CraftingSystem.ResourceTypeEnum resourceType;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int amount;

	[Token(Token = "0x1700009F")]
	public CraftingSystem.ResourceType Resource
	{
		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xC269F4", Offset = "0xC269F4", VA = "0xC269F4")]
		get
		{
			return default(CraftingSystem.ResourceType);
		}
	}

	[Token(Token = "0x170000A0")]
	public int Amount
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xC26F28", Offset = "0xC26F28", VA = "0xC26F28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xC26DA0", Offset = "0xC26DA0", VA = "0xC26DA0")]
	public CraftingIngredient(int amount = 0)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xC26E9C", Offset = "0xC26E9C", VA = "0xC26E9C")]
	public void Init(CraftingSystem.ResourceType resource, int amount)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC26F10", Offset = "0xC26F10", VA = "0xC26F10")]
	public void IncreaseAmount()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xC26F20", Offset = "0xC26F20", VA = "0xC26F20")]
	public void SetAmount(int amount)
	{
	}
}
[Token(Token = "0x200010D")]
public class CraftingRecipe : ScriptableObject
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public string itemName;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF6DC", Offset = "0x9FF6DC")]
	[SerializeField]
	private CraftingSystem.RecipeCollectionType[] recipeCollections;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF728", Offset = "0x9FF728")]
	[SerializeField]
	[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x9FF728", Offset = "0x9FF728")]
	private CraftingIngredient[] ingredients;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF7AC", Offset = "0x9FF7AC")]
	private int numResultingItems;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AssetReference prefabToSpawnReference;

	[Token(Token = "0x170000A1")]
	public AssetReference Prefab
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xC28244", Offset = "0xC28244", VA = "0xC28244")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A2")]
	public int NumItemsToCraft
	{
		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xC2824C", Offset = "0xC2824C", VA = "0xC2824C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A3")]
	public CraftingIngredient[] Ingredients
	{
		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xC28254", Offset = "0xC28254", VA = "0xC28254")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A4")]
	public CraftingSystem.RecipeCollectionType[] RecipeCollections
	{
		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xC2825C", Offset = "0xC2825C", VA = "0xC2825C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xC28264", Offset = "0xC28264", VA = "0xC28264")]
	public int GetTotalNumberOfResourcesNeeded()
	{
		return default(int);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xC282D0", Offset = "0xC282D0", VA = "0xC282D0")]
	public void AddIngredient()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xC283D0", Offset = "0xC283D0", VA = "0xC283D0")]
	public bool IngredientsMatchRecipe(List<CraftingIngredient> otherIngredients)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xC285D0", Offset = "0xC285D0", VA = "0xC285D0")]
	public bool ValidateRecipe(out string outputMsg)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xC28968", Offset = "0xC28968", VA = "0xC28968")]
	public bool BelongsToCollection(CraftingSystem.RecipeCollectionType collectionType)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xC289D0", Offset = "0xC289D0", VA = "0xC289D0")]
	public CraftingRecipe()
	{
	}
}
[Serializable]
[Token(Token = "0x200010E")]
public class CraftingSystem : SaveableComponent, IInitializable
{
	[Serializable]
	[Token(Token = "0x200010F")]
	public class RecipeData
	{
		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingRecipe recipe;

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xC28E88", Offset = "0xC28E88", VA = "0xC28E88")]
		public RecipeData()
		{
		}
	}

	[Token(Token = "0x2000110")]
	public enum RecipeCollectionType
	{
		[Token(Token = "0x40004CC")]
		CraftingBubble,
		[Token(Token = "0x40004CD")]
		PotPotMissionGiver,
		[Token(Token = "0x40004CE")]
		PotPotMissionBoatTop,
		[Token(Token = "0x40004CF")]
		PotPotMissionPaintball,
		[Token(Token = "0x40004D0")]
		Trader,
		[Token(Token = "0x40004D1")]
		TentToSmallHouse,
		[Token(Token = "0x40004D2")]
		SmallHouseToMansion,
		[Token(Token = "0x40004D3")]
		PuffkinBarn,
		[Token(Token = "0x40004D4")]
		ManateeCowBarn,
		[Token(Token = "0x40004D5")]
		MolesealBarn,
		[Token(Token = "0x40004D6")]
		CookingCampfire,
		[Token(Token = "0x40004D7")]
		CookingStove,
		[Token(Token = "0x40004D8")]
		TutorialPotPotMission,
		[Token(Token = "0x40004D9")]
		RopesToTent,
		[Token(Token = "0x40004DA")]
		CurvedBridgeHomelandQuest,
		[Token(Token = "0x40004DB")]
		MansionToEndgameHouse,
		[Token(Token = "0x40004DC")]
		ToolMerchantTradingPost,
		[Token(Token = "0x40004DD")]
		NumTypes
	}

	[Token(Token = "0x2000111")]
	public enum ResourceType
	{
		[Token(Token = "0x40004DF")]
		Undefined,
		[Token(Token = "0x40004E0")]
		Turnip,
		[Token(Token = "0x40004E1")]
		Carrot,
		[Token(Token = "0x40004E2")]
		Sunflower,
		[Token(Token = "0x40004E3")]
		Radish,
		[Token(Token = "0x40004E4")]
		Wood,
		[Token(Token = "0x40004E5")]
		Stone,
		[Token(Token = "0x40004E6")]
		Seedbag,
		[Token(Token = "0x40004E7")]
		PlanterBasic,
		[Token(Token = "0x40004E8")]
		BirdBathBasic,
		[Token(Token = "0x40004E9")]
		Berry,
		[Token(Token = "0x40004EA")]
		Raspberry,
		[Token(Token = "0x40004EB")]
		Blueberry,
		[Token(Token = "0x40004EC")]
		Strawberry,
		[Token(Token = "0x40004ED")]
		Tomato,
		[Token(Token = "0x40004EE")]
		Bean,
		[Token(Token = "0x40004EF")]
		Bamboo,
		[Token(Token = "0x40004F0")]
		Boobell,
		[Token(Token = "0x40004F1")]
		Dandelion,
		[Token(Token = "0x40004F2")]
		Shroom,
		[Token(Token = "0x40004F3")]
		Linnea,
		[Token(Token = "0x40004F4")]
		Lily,
		[Token(Token = "0x40004F5")]
		Buttercup,
		[Token(Token = "0x40004F6")]
		Fern,
		[Token(Token = "0x40004F7")]
		Leafy,
		[Token(Token = "0x40004F8")]
		Bridge,
		[Token(Token = "0x40004F9")]
		Coop,
		[Token(Token = "0x40004FA")]
		Barn,
		[Token(Token = "0x40004FB")]
		Fence1,
		[Token(Token = "0x40004FC")]
		Statue,
		[Token(Token = "0x40004FD")]
		FeederCow,
		[Token(Token = "0x40004FE")]
		Reed,
		[Token(Token = "0x40004FF")]
		Trellis,
		[Token(Token = "0x4000500")]
		FeederPuffkin,
		[Token(Token = "0x4000501")]
		PotpotComplete,
		[Token(Token = "0x4000502")]
		RockPath,
		[Token(Token = "0x4000503")]
		Shelf,
		[Token(Token = "0x4000504")]
		Foxglove,
		[Token(Token = "0x4000505")]
		CompostBin,
		[Token(Token = "0x4000506")]
		Boat,
		[Token(Token = "0x4000507")]
		Paintball,
		[Token(Token = "0x4000508")]
		SeedbagBamboo,
		[Token(Token = "0x4000509")]
		SeedbagBean,
		[Token(Token = "0x400050A")]
		SeedbagCloudberry,
		[Token(Token = "0x400050B")]
		SeedbagBoobell,
		[Token(Token = "0x400050C")]
		SeedbagButtercup,
		[Token(Token = "0x400050D")]
		SeedbagCarrot,
		[Token(Token = "0x400050E")]
		SeedbagDandelion,
		[Token(Token = "0x400050F")]
		SeedbagFern,
		[Token(Token = "0x4000510")]
		SeedbagFoxglove,
		[Token(Token = "0x4000511")]
		SeedbagLeafy,
		[Token(Token = "0x4000512")]
		SeedbagLily,
		[Token(Token = "0x4000513")]
		SeedbagLinnea,
		[Token(Token = "0x4000514")]
		SeedbagMushroom1,
		[Token(Token = "0x4000515")]
		SeedbagRadish,
		[Token(Token = "0x4000516")]
		SeedbagRaspberry,
		[Token(Token = "0x4000517")]
		SeedbagReed,
		[Token(Token = "0x4000518")]
		SeedbagStrawberry,
		[Token(Token = "0x4000519")]
		SeedbagSunflower,
		[Token(Token = "0x400051A")]
		SeedbagTomato,
		[Token(Token = "0x400051B")]
		SeedbagTurnip,
		[Token(Token = "0x400051C")]
		SeedbagMushroom2,
		[Token(Token = "0x400051D")]
		paintball_clear,
		[Token(Token = "0x400051E")]
		Metal,
		[Token(Token = "0x400051F")]
		Fertilizer,
		[Token(Token = "0x4000520")]
		Tent,
		[Token(Token = "0x4000521")]
		SmallHouse,
		[Token(Token = "0x4000522")]
		LargeHouse,
		[Token(Token = "0x4000523")]
		CurtainLong,
		[Token(Token = "0x4000524")]
		CurtainShort,
		[Token(Token = "0x4000525")]
		PatternRoleBlue1,
		[Token(Token = "0x4000526")]
		PatternRoleBlue2,
		[Token(Token = "0x4000527")]
		PatternRoleBlue3,
		[Token(Token = "0x4000528")]
		PatternRoleBlue4,
		[Token(Token = "0x4000529")]
		PatternRoleBlueStripes,
		[Token(Token = "0x400052A")]
		PatternRoleFish,
		[Token(Token = "0x400052B")]
		PatternRoleGreenStripes,
		[Token(Token = "0x400052C")]
		PatternRolePeachStripes,
		[Token(Token = "0x400052D")]
		PatternRoleRed,
		[Token(Token = "0x400052E")]
		PatternRoleWhiteFruit,
		[Token(Token = "0x400052F")]
		PatternRoleWhiteLeaves1,
		[Token(Token = "0x4000530")]
		PatternRoleWhiteLeaves2,
		[Token(Token = "0x4000531")]
		PatternRoleWhiteLeaves3,
		[Token(Token = "0x4000532")]
		PatternRoleWhiteStripes1,
		[Token(Token = "0x4000533")]
		PatternRoleWhiteStripes2,
		[Token(Token = "0x4000534")]
		PatternRoleWhiteStripes3,
		[Token(Token = "0x4000535")]
		CoralBall,
		[Token(Token = "0x4000536")]
		CoralCrystal,
		[Token(Token = "0x4000537")]
		CoralSpike,
		[Token(Token = "0x4000538")]
		CoralCone,
		[Token(Token = "0x4000539")]
		Cloudberry,
		[Token(Token = "0x400053A")]
		Crate,
		[Token(Token = "0x400053B")]
		ShelfTriple,
		[Token(Token = "0x400053C")]
		ShelfBelt,
		[Token(Token = "0x400053D")]
		ShelfMetal,
		[Token(Token = "0x400053E")]
		Coin,
		[Token(Token = "0x400053F")]
		InstrumentCrystal,
		[Token(Token = "0x4000540")]
		ReedFire,
		[Token(Token = "0x4000541")]
		RadishFire,
		[Token(Token = "0x4000542")]
		LilyFire,
		[Token(Token = "0x4000543")]
		Grass,
		[Token(Token = "0x4000544")]
		PuffkinTotem,
		[Token(Token = "0x4000545")]
		ManateeCowTotem,
		[Token(Token = "0x4000546")]
		MolesealTotem,
		[Token(Token = "0x4000547")]
		Nest,
		[Token(Token = "0x4000548")]
		BarnSpotSign,
		[Token(Token = "0x4000549")]
		PuffkinReward,
		[Token(Token = "0x400054A")]
		PuffkinChildReward,
		[Token(Token = "0x400054B")]
		ManateeCowReward,
		[Token(Token = "0x400054C")]
		ManateeCowChildReward,
		[Token(Token = "0x400054D")]
		MolesealReward,
		[Token(Token = "0x400054E")]
		MolesealChildReward,
		[Token(Token = "0x400054F")]
		FruitSalad,
		[Token(Token = "0x4000550")]
		VeggieKabobs,
		[Token(Token = "0x4000551")]
		BeanStew,
		[Token(Token = "0x4000552")]
		SeaweedSalad,
		[Token(Token = "0x4000553")]
		BerryPie,
		[Token(Token = "0x4000554")]
		BeanFritters,
		[Token(Token = "0x4000555")]
		FlowerTempura,
		[Token(Token = "0x4000556")]
		TutorialCrystal,
		[Token(Token = "0x4000557")]
		Shroom2,
		[Token(Token = "0x4000558")]
		Shroom3,
		[Token(Token = "0x4000559")]
		Shroom4,
		[Token(Token = "0x400055A")]
		SeedbagMushroom3,
		[Token(Token = "0x400055B")]
		SeedbagMushroom4,
		[Token(Token = "0x400055C")]
		WoodBirch,
		[Token(Token = "0x400055D")]
		WaterPump,
		[Token(Token = "0x400055E")]
		NestPuffkin,
		[Token(Token = "0x400055F")]
		NestManateeCow,
		[Token(Token = "0x4000560")]
		NestMoleSeal,
		[Token(Token = "0x4000561")]
		StorageChest,
		[Token(Token = "0x4000562")]
		ShroomFireBlue,
		[Token(Token = "0x4000563")]
		ShroomFirePink,
		[Token(Token = "0x4000564")]
		WoodPath,
		[Token(Token = "0x4000565")]
		PillowBasic,
		[Token(Token = "0x4000566")]
		PillowPuff,
		[Token(Token = "0x4000567")]
		PillowWide,
		[Token(Token = "0x4000568")]
		SeedbagBlueberry,
		[Token(Token = "0x4000569")]
		NumTypes
	}

	[Serializable]
	[Token(Token = "0x2000112")]
	public class ResourceTypeEnum : SerializableEnum<ResourceType>
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xC28E90", Offset = "0xC28E90", VA = "0xC28E90")]
		public ResourceTypeEnum()
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xC26E28", Offset = "0xC26E28", VA = "0xC26E28")]
		public ResourceTypeEnum(ResourceType value)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000113")]
	public class CraftingRecipeCollection
	{
		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecipeData[] allRecipes;

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xC28ACC", Offset = "0xC28ACC", VA = "0xC28ACC")]
		public CraftingRecipe GetCraftableRecipe(ref List<CraftingIngredient> ingredients, bool mustMatchExactly)
		{
			return null;
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xC28E80", Offset = "0xC28E80", VA = "0xC28E80")]
		public CraftingRecipeCollection()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000114")]
	public class CraftingSystemState : ComponentState
	{
		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xC28E68", Offset = "0xC28E68", VA = "0xC28E68")]
		public CraftingSystemState()
		{
		}
	}

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CraftingSystem Instance;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CraftingSystemData data;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xC28A5C", Offset = "0xC28A5C", VA = "0xC28A5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xC27604", Offset = "0xC27604", VA = "0xC27604")]
	public CraftingRecipe GetCraftableRecipe(ref List<CraftingIngredient> ingredients, RecipeCollectionType collectionType, bool mustMatchExactly)
	{
		return null;
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xC27D1C", Offset = "0xC27D1C", VA = "0xC27D1C")]
	public CraftingRecipe GetFirstRecepieOfCollectionType(RecipeCollectionType collectionType)
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xC28E0C", Offset = "0xC28E0C", VA = "0xC28E0C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xC28E70", Offset = "0xC28E70", VA = "0xC28E70", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xC28E74", Offset = "0xC28E74", VA = "0xC28E74")]
	public CraftingSystem()
	{
	}
}
[Token(Token = "0x2000115")]
public class UnlockCraftingRecipe : MonoBehaviour
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CraftingRecipe recipe;

	[Token(Token = "0x170000A5")]
	public CraftingRecipe Recipe
	{
		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x1AE4A24", Offset = "0x1AE4A24", VA = "0x1AE4A24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1AE4A2C", Offset = "0x1AE4A2C", VA = "0x1AE4A2C")]
	public UnlockCraftingRecipe()
	{
	}
}
[Token(Token = "0x2000116")]
public class AnimalNavigationSystem : MonoBehaviour
{
	[Token(Token = "0x2000117")]
	public enum NavigationTargetErrors
	{
		[Token(Token = "0x400056F")]
		NoTargets,
		[Token(Token = "0x4000570")]
		TargetsAreOccupied,
		[Token(Token = "0x4000571")]
		NoTargetWithinRange,
		[Token(Token = "0x4000572")]
		NoError
	}

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimalNavigationSystem Instance;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AnimalNavigationTarget> targets;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xFFDBDC", Offset = "0xFFDBDC", VA = "0xFFDBDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xFFDC4C", Offset = "0xFFDC4C", VA = "0xFFDC4C")]
	public void AddTarget(AnimalNavigationTarget target)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xFFDCE4", Offset = "0xFFDCE4", VA = "0xFFDCE4")]
	public void RemoveTarget(AnimalNavigationTarget target)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xFFDD7C", Offset = "0xFFDD7C", VA = "0xFFDD7C")]
	public AnimalNavigationTarget GetRandomTargetForCreature(CreatureBehaviour creature, Vector3 startPoint, float maxDistance, out NavigationTargetErrors error, AnimalNavigationTarget.AnimalTargetType navigationTargetType = AnimalNavigationTarget.AnimalTargetType.None)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xFFE124", Offset = "0xFFE124", VA = "0xFFE124")]
	private void Shuffle()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xFFE298", Offset = "0xFFE298", VA = "0xFFE298")]
	public static Vector3 GetRandomPointAroundTarget(AnimalNavigationTarget target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xFFE32C", Offset = "0xFFE32C", VA = "0xFFE32C")]
	public static Vector3 GetRandomPointAroundPosition(Vector3 pos, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xFFE41C", Offset = "0xFFE41C", VA = "0xFFE41C")]
	public AnimalNavigationTarget[] GetTargetsOfType(CreatureType creatureType, AnimalNavigationTarget.AnimalTargetType targetType)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xFFE5A0", Offset = "0xFFE5A0", VA = "0xFFE5A0")]
	public AnimalNavigationSystem()
	{
	}
}
[Token(Token = "0x2000118")]
public class AnimalNavigationTarget : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000119")]
	public enum AnimalTargetType
	{
		[Token(Token = "0x400057D")]
		None,
		[Token(Token = "0x400057E")]
		EatingSpot,
		[Token(Token = "0x400057F")]
		SleepingSpot,
		[Token(Token = "0x4000580")]
		BarnSpot,
		[Token(Token = "0x4000581")]
		Exit,
		[Token(Token = "0x4000582")]
		NumTypes
	}

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreatureTypeFlag creatureTypeFlag;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int priority;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hasFixedPosition;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimalTargetType targetType;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimalBarnSpot barnSpot;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF838", Offset = "0x9FF838")]
	private bool <Occupied>k__BackingField;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FF848", Offset = "0x9FF848")]
	private Vector3 <Point>k__BackingField;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit hitInfo;

	[Token(Token = "0x170000A6")]
	public AnimalBarnSpot BarnSpot
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xFFE620", Offset = "0xFFE620", VA = "0xFFE620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A7")]
	public bool Occupied
	{
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xFFE628", Offset = "0xFFE628", VA = "0xFFE628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FB94", Offset = "0xA0FB94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xFFE630", Offset = "0xFFE630", VA = "0xFFE630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FBA4", Offset = "0xA0FBA4")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public Vector3 Point
	{
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xFFE63C", Offset = "0xFFE63C", VA = "0xFFE63C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FBB4", Offset = "0xA0FBB4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xFFE648", Offset = "0xFFE648", VA = "0xFFE648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FBC4", Offset = "0xA0FBC4")]
		private set
		{
		}
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xFFE654", Offset = "0xFFE654", VA = "0xFFE654", Slot = "5")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xFFE8A0", Offset = "0xFFE8A0", VA = "0xFFE8A0")]
	public void OccupyTarget()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xFFE8AC", Offset = "0xFFE8AC", VA = "0xFFE8AC")]
	public void ReleaseTarget()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xFFE750", Offset = "0xFFE750", VA = "0xFFE750")]
	private Vector3 GetPointOnGround()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xFFE8B4", Offset = "0xFFE8B4", VA = "0xFFE8B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xFFE9A0", Offset = "0xFFE9A0", VA = "0xFFE9A0", Slot = "6")]
	public virtual bool IsCompatibleWithCreature(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xFFEAD0", Offset = "0xFFEAD0", VA = "0xFFEAD0")]
	public AnimalNavigationTarget()
	{
	}
}
[Token(Token = "0x200011A")]
public class AnimalPopulationManager : MonoBehaviour, IInitializable
{
	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimalPopulationManager Instance;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<CreatureType, List<CreatureBehaviour>> allAnimals;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float UpdateIntervalFast;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float UpdateIntervalIntermittent;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeUntilNextUpdate;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeUntilNextIntermittentUpdate;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FF858", Offset = "0x9FF858")]
	private CreaturePopulation m_puffkinPopulation;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private CreaturePopulation m_manateeCowPopulation;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private CreaturePopulation m_molesealPopulation;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private AnimalNavigationSystem m_animalNavigationSystem;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OptimizedCollection<VisitingAnimalSpawnLocation> m_spawnLocations;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int m_dayCount;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool m_initialized;

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xFFEB58", Offset = "0xFFEB58", VA = "0xFFEB58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xFFEBC8", Offset = "0xFFEBC8", VA = "0xFFEBC8", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xFFED58", Offset = "0xFFED58", VA = "0xFFED58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xFFEEC0", Offset = "0xFFEEC0", VA = "0xFFEEC0")]
	public static void RegiserSpawnLocation(VisitingAnimalSpawnLocation spawnLocation)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xFFEF48", Offset = "0xFFEF48", VA = "0xFFEF48")]
	public static void UnregisterSpawnLocation(VisitingAnimalSpawnLocation spawnLocation)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xFFEFD0", Offset = "0xFFEFD0", VA = "0xFFEFD0")]
	public static void RegisterAnimal(CreatureBehaviour animal)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xFFF318", Offset = "0xFFF318", VA = "0xFFF318")]
	public static void UnregisterAnimal(CreatureBehaviour animal)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xFFF1F0", Offset = "0xFFF1F0", VA = "0xFFF1F0")]
	private void UpdateCreaturePopulationOnRegister(CreatureBehaviour animal, CreatureType creatureType)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xFFF4B4", Offset = "0xFFF4B4", VA = "0xFFF4B4")]
	private void UpdateCreaturePopulationOnUnregister(CreatureBehaviour animal, CreatureType creatureType)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xFFF600", Offset = "0xFFF600", VA = "0xFFF600")]
	private unsafe ref CreaturePopulation TryGetPopulationOfType(CreatureType creatureType, out bool hasPopulation)
	{
		return ref *(CreaturePopulation*)null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xFFF63C", Offset = "0xFFF63C", VA = "0xFFF63C")]
	private int GetNumberOfAnimals(CreatureType creatureType)
	{
		return default(int);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xFFF6C8", Offset = "0xFFF6C8", VA = "0xFFF6C8")]
	private void OnUpdateGameTime(float gameTimeDelta)
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xFFFA34", Offset = "0xFFFA34", VA = "0xFFFA34")]
	private void OnNewDay(int dayCount)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xFFFCA4", Offset = "0xFFFCA4", VA = "0xFFFCA4")]
	private void CheckAnimalPopulation(CreatureType creatureType, int dayCount, CreaturePopulation populationSettings)
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x10000C0", Offset = "0x10000C0", VA = "0x10000C0")]
	private void OnVisitingAnimalSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xFFFAD0", Offset = "0xFFFAD0", VA = "0xFFFAD0")]
	private void UpdateNewDayBehavior(int dayCount)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xFFF524", Offset = "0xFFF524", VA = "0xFFF524")]
	private void UpdateAnimalVisitation(CreatureBehaviour creature, int dayCount)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xFFFEF4", Offset = "0xFFFEF4", VA = "0xFFFEF4")]
	private bool TryGetRandomSpawnLocationOfType(CreatureType creatureType, out Transform validSpawnLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x1000140", Offset = "0x1000140", VA = "0x1000140")]
	private bool TryGetRandomExitLocation(CreatureType creatureType, out Transform validExitLocation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x10001FC", Offset = "0x10001FC", VA = "0x10001FC")]
	public AnimalPopulationManager()
	{
	}
}
[Token(Token = "0x200011B")]
public class AnimalTameMeter : MonoBehaviour
{
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAA00", Offset = "0x9FAA00")]
	private sealed class <AnimateLevel>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimalTameMeter <>4__this;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int piece;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float newTarget;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float previousTarget;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <targetWeight>5__2;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <initialWeight>5__3;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeLeft>5__4;

		[Token(Token = "0x170000A9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0x10010CC", Offset = "0x10010CC", VA = "0x10010CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0x1001134", Offset = "0x1001134", VA = "0x1001134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x1000CB4", Offset = "0x1000CB4", VA = "0x1000CB4")]
		[DebuggerHidden]
		public <AnimateLevel>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x1000ECC", Offset = "0x1000ECC", VA = "0x1000ECC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x1000ED0", Offset = "0x1000ED0", VA = "0x1000ED0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x10010D4", Offset = "0x10010D4", VA = "0x10010D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000590")]
	private const float ShowDuration = 0.3f;

	[Token(Token = "0x4000591")]
	private const float HideDuration = 0.2f;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SkinnedMeshRenderer[] progressMeters;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject eggPiece;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject baseHeart;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject fullHeart;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private ParticleSystem m_levelUpParticles;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private NeatAudioPlayer audioPlayer;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NeatAudioPlayer fluidAudioPlayer;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private NeatAudioCue heartPieceFullSound;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue heartFullSound;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NeatAudioCue eggFullSound;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private NeatAudioCue heartPieceFill;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] adornments;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int currentAdornment;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int currentPiece;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float currentProgress;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool eggMeterActive;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool tameMeterVisible;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool m_isShowingTameMeter;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_defaultScale;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine animationRoutine;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x100032C", Offset = "0x100032C", VA = "0x100032C")]
	public void Show()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1000590", Offset = "0x1000590", VA = "0x1000590")]
	private void OnShowComplete()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x100059C", Offset = "0x100059C", VA = "0x100059C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x10006DC", Offset = "0x10006DC", VA = "0x10006DC")]
	private void OnHideComplete()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x1000718", Offset = "0x1000718", VA = "0x1000718")]
	public float GetProgressOnCurrentPiece()
	{
		return default(float);
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x1000720", Offset = "0x1000720", VA = "0x1000720")]
	public float GetTotalProgress()
	{
		return default(float);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1000730", Offset = "0x1000730", VA = "0x1000730")]
	public bool EggMeterUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1000738", Offset = "0x1000738", VA = "0x1000738")]
	public float GetMaxProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1000760", Offset = "0x1000760", VA = "0x1000760")]
	public uint GetCurrentTamenessLevel()
	{
		return default(uint);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1000804", Offset = "0x1000804", VA = "0x1000804")]
	public void SetTotalProgress(float progress, bool eggActive)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x10008AC", Offset = "0x10008AC", VA = "0x10008AC")]
	public void IncreaseProgressOnCurrentPiece(float amount, out int levelChangeResult)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1000444", Offset = "0x1000444", VA = "0x1000444")]
	private void UpdateMeter(bool animate, float previousProgress = 0f)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1000C1C", Offset = "0x1000C1C", VA = "0x1000C1C")]
	private void UpdateAdornment()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1000C94", Offset = "0x1000C94", VA = "0x1000C94")]
	private float GetBlendShapeWeightForProgress(float progress)
	{
		return default(float);
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1000ABC", Offset = "0x1000ABC", VA = "0x1000ABC")]
	private void SetLevel(int piece, float progress)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1000CAC", Offset = "0x1000CAC", VA = "0x1000CAC")]
	public void SetAdornment(int index)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1000B7C", Offset = "0x1000B7C", VA = "0x1000B7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0FBD4", Offset = "0xA0FBD4")]
	private IEnumerator AnimateLevel(int piece, float previousTarget, float newTarget)
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1000CE0", Offset = "0x1000CE0", VA = "0x1000CE0")]
	public void PlayLevelUpEffect()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1000E58", Offset = "0x1000E58", VA = "0x1000E58")]
	public AnimalTameMeter()
	{
	}
}
[Token(Token = "0x200011D")]
public class AttachPosition : MonoBehaviour
{
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float LocalScaleWhileAttached;

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1001250", Offset = "0x1001250", VA = "0x1001250")]
	public AttachPosition()
	{
	}
}
[Token(Token = "0x200011E")]
public class AnimalBarnSpot : SaveableComponent, IInitializable
{
	[Token(Token = "0x200011F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAA10", Offset = "0x9FAA10")]
	private sealed class <ReturnSignAfterDelay>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimalBarnSpot <>4__this;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable grabbable;

		[Token(Token = "0x170000AB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000647")]
			[Address(RVA = "0xFFD8C8", Offset = "0xFFD8C8", VA = "0xFFD8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000649")]
			[Address(RVA = "0xFFD930", Offset = "0xFFD930", VA = "0xFFD930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xFFD114", Offset = "0xFFD114", VA = "0xFFD114")]
		[DebuggerHidden]
		public <ReturnSignAfterDelay>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xFFD344", Offset = "0xFFD344", VA = "0xFFD344", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xFFD348", Offset = "0xFFD348", VA = "0xFFD348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xFFD8D0", Offset = "0xFFD8D0", VA = "0xFFD8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CreatureType creatureType;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform signPosition;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform nestPosition;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private int adornmentIndex;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CreatureBehaviour claimedBy;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CreatureBehaviour claimedByForBreeding;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_isInitialized;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BarnSpotSign currentSign;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable currentNest;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xFFB2D4", Offset = "0xFFB2D4", VA = "0xFFB2D4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xFFB4E4", Offset = "0xFFB4E4", VA = "0xFFB4E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xFFB690", Offset = "0xFFB690", VA = "0xFFB690")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xFFB7D0", Offset = "0xFFB7D0", VA = "0xFFB7D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xFFBA68", Offset = "0xFFBA68", VA = "0xFFBA68")]
	public void ReturnItemToBarn(Grabbable item)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xFFBCC8", Offset = "0xFFBCC8", VA = "0xFFBCC8", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xFFBEC8", Offset = "0xFFBEC8", VA = "0xFFBEC8")]
	private CreatureBehaviour LookUpCreatureFromSaveID(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xFFBFF0", Offset = "0xFFBFF0", VA = "0xFFBFF0")]
	private Grabbable LookUpNestFromSaveID(ref SaveID id)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xFFC118", Offset = "0xFFC118", VA = "0xFFC118")]
	public CreatureType GetCreatureType()
	{
		return default(CreatureType);
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xFFC120", Offset = "0xFFC120", VA = "0xFFC120")]
	public void DetachSign(BarnSpotSign sign)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xFFB6A0", Offset = "0xFFB6A0", VA = "0xFFB6A0")]
	private void SpawnCorrectSign()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xFFC484", Offset = "0xFFC484", VA = "0xFFC484")]
	private void OnSignSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xFFC298", Offset = "0xFFC298", VA = "0xFFC298")]
	private void SpawnSign()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xFFC9A8", Offset = "0xFFC9A8", VA = "0xFFC9A8")]
	public int GetAdornmentIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xFFC9B0", Offset = "0xFFC9B0", VA = "0xFFC9B0")]
	public bool IsCompatibleWithCreatureType(CreatureType t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xFFC9CC", Offset = "0xFFC9CC", VA = "0xFFC9CC")]
	public bool IsAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xFFCA88", Offset = "0xFFCA88", VA = "0xFFCA88")]
	public bool IsClaimedBy(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xFFCB04", Offset = "0xFFCB04", VA = "0xFFCB04")]
	public bool IsClaimedByForBreeding(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xFFCB80", Offset = "0xFFCB80", VA = "0xFFCB80")]
	public bool ClaimSpot(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xFFCBEC", Offset = "0xFFCBEC", VA = "0xFFCBEC")]
	public bool ClaimSpotForBreeding(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xFFCC38", Offset = "0xFFCC38", VA = "0xFFCC38")]
	public bool GiveSpotOtherCreature(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xFFCE40", Offset = "0xFFCE40", VA = "0xFFCE40")]
	public void FreeUpSlot()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xFFCE64", Offset = "0xFFCE64", VA = "0xFFCE64")]
	public void UpdateSign()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xFFCE68", Offset = "0xFFCE68", VA = "0xFFCE68")]
	public bool IsClaimed()
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xFFC830", Offset = "0xFFC830", VA = "0xFFC830")]
	public bool IsClaimedForBreeding()
	{
		return default(bool);
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xFFCED8", Offset = "0xFFCED8", VA = "0xFFCED8")]
	public CreatureBehaviour GetAssignedCreature()
	{
		return null;
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xFFCD4C", Offset = "0xFFCD4C", VA = "0xFFCD4C")]
	private void ResetClaims()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xFFCF9C", Offset = "0xFFCF9C", VA = "0xFFCF9C")]
	public void OnSignDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xFFD07C", Offset = "0xFFD07C", VA = "0xFFD07C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0FC88", Offset = "0xA0FC88")]
	private IEnumerator ReturnSignAfterDelay(Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xFFD140", Offset = "0xFFD140", VA = "0xFFD140")]
	public void OnSignDestroyed(BarnSpotSign sign)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xFFD1F4", Offset = "0xFFD1F4", VA = "0xFFD1F4")]
	public OrientedPoint GetEggSpawnPoint()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xFFD320", Offset = "0xFFD320", VA = "0xFFD320")]
	public Vector3 GetDirectionFacingOut()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xFFD33C", Offset = "0xFFD33C", VA = "0xFFD33C")]
	public AnimalBarnSpot()
	{
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class AnimalBarnSpotState : ComponentState
{
	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID claimedBy;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SaveID claimedByForBreeding;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SaveID nestId;

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xFFB34C", Offset = "0xFFB34C", VA = "0xFFB34C")]
	public AnimalBarnSpotState(CreatureBehaviour claimedBy, CreatureBehaviour claimedByForBreeding, Grabbable nest)
	{
	}
}
[Token(Token = "0x2000121")]
public class AnimalBarnSystem : MonoBehaviour
{
	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimalBarnSystem Instance;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AssetReference barnSignPrefab;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AnimalBarnSpot> barnSpots;

	[Token(Token = "0x170000AD")]
	public static AssetReference BarnSignPrefab
	{
		[Token(Token = "0x600064C")]
		[Address(RVA = "0xFFC8D0", Offset = "0xFFC8D0", VA = "0xFFC8D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xFFD938", Offset = "0xFFD938", VA = "0xFFD938")]
	private void Awake()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xFFB548", Offset = "0xFFB548", VA = "0xFFB548")]
	public static void RegisterBarnSpot(AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xFFB968", Offset = "0xFFB968", VA = "0xFFB968")]
	public static void DeregisterBarnSpot(AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xFFD9A8", Offset = "0xFFD9A8", VA = "0xFFD9A8")]
	public static AnimalBarnSpot GetAvailableBarnSpot(CreatureType creatureType)
	{
		return null;
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xFFDB5C", Offset = "0xFFDB5C", VA = "0xFFDB5C")]
	public AnimalBarnSystem()
	{
	}
}
[Token(Token = "0x2000122")]
public class BarnSpotSign : MonoBehaviour, IValidateCustom, IValidate
{
	[Token(Token = "0x2000123")]
	public enum SignType
	{
		[Token(Token = "0x40005D2")]
		Unoccupied,
		[Token(Token = "0x40005D3")]
		Claimed,
		[Token(Token = "0x40005D4")]
		ClaimedForBreeding,
		[Token(Token = "0x40005D5")]
		NumTypes
	}

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GradientColorer unclaimedManateecow;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GradientColorer claimedManateecow;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GradientColorer unclaimedMoleseal;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GradientColorer claimedMoleseal;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GradientColorer unclaimedPuffkin;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GradientColorer claimedPuffkin;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GradientColorer claimedForBreeding;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] adornments;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FFA74", Offset = "0x9FFA74")]
	[SerializeField]
	private GradientColorer[] allSigns;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<SignType, GradientColorer> signsLookupTable;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SignType signType;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int signAdornment;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimalBarnSpot barnSpot;

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1004A9C", Offset = "0x1004A9C", VA = "0x1004A9C")]
	public bool CanBeGivenToAnimal(CreatureBehaviour creature)
	{
		return default(bool);
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xFFC68C", Offset = "0xFFC68C", VA = "0xFFC68C")]
	public void Init(AnimalBarnSpot connectedSpot)
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xFFC260", Offset = "0xFFC260", VA = "0xFFC260")]
	public void SetIsUnoccupied()
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xFFC1C0", Offset = "0xFFC1C0", VA = "0xFFC1C0")]
	public void SetIsClaimed()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xFFC224", Offset = "0xFFC224", VA = "0xFFC224")]
	public void SetIsClaimedForBreeding()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1004AC8", Offset = "0x1004AC8", VA = "0x1004AC8")]
	private void UpdateVisuals()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1004CE0", Offset = "0x1004CE0", VA = "0x1004CE0")]
	public void ClaimSpot(CreatureBehaviour creature)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1004CF8", Offset = "0x1004CF8", VA = "0x1004CF8")]
	public SignType GetSignType()
	{
		return default(SignType);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xFFC8A0", Offset = "0xFFC8A0", VA = "0xFFC8A0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1004D00", Offset = "0x1004D00", VA = "0x1004D00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1004E30", Offset = "0x1004E30", VA = "0x1004E30")]
	public BarnSpotSign()
	{
	}
}
[Token(Token = "0x2000124")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FAA20", Offset = "0x9FAA20")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FAA20", Offset = "0x9FAA20")]
public class CreatureAnimation : MonoBehaviour
{
	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int MovingParamId;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int EatParamId;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int SleepParamId;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int RandomDerpParamId;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int RandomIdleParamId;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int TryToEatFromHandParamId;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int EatFromHandParamId;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int PettedParamId;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int WantsNestParamId;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly int SpawnEggParamId;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly int ForceIdleParamId;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly int SpeedNormalizedParamId;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly int AngularSpeedNormalizedParamId;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static readonly int TurnRightParamId;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly int TurnLeftParamId;

	[Token(Token = "0x40005E5")]
	private const string HoldingGiftLayerName = "Holding Gift";

	[Token(Token = "0x40005E6")]
	private const float MaxAnimationSpeed = 1.5f;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CreatureMovement movement;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CreatureBehaviour behaviour;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int m_holdingGiftLayerIndex;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xC28EE0", Offset = "0xC28EE0", VA = "0xC28EE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xC28FD8", Offset = "0xC28FD8", VA = "0xC28FD8")]
	private void ResetAnimParameters()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xC29180", Offset = "0xC29180", VA = "0xC29180")]
	public void SetIsHoldingGift(bool shouldHoldGift)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xC291BC", Offset = "0xC291BC", VA = "0xC291BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xC29704", Offset = "0xC29704", VA = "0xC29704")]
	public void UpdateAnimationSpeedByGrowth(float scale, out float updatedSpeed)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xC297A4", Offset = "0xC297A4", VA = "0xC297A4")]
	public bool IsMovementAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xC299B0", Offset = "0xC299B0", VA = "0xC299B0")]
	public CreatureAnimation()
	{
	}
}
[Token(Token = "0x2000125")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FAAAC", Offset = "0x9FAAAC")]
public class CreatureBehaviour : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000126")]
	public enum CreatureAction
	{
		[Token(Token = "0x4000612")]
		Undefined,
		[Token(Token = "0x4000613")]
		Idle,
		[Token(Token = "0x4000614")]
		Sleep,
		[Token(Token = "0x4000615")]
		Eat,
		[Token(Token = "0x4000616")]
		Derp,
		[Token(Token = "0x4000617")]
		TryToEatFromHand,
		[Token(Token = "0x4000618")]
		EatFromHand,
		[Token(Token = "0x4000619")]
		Petted,
		[Token(Token = "0x400061A")]
		FollowPlayer,
		[Token(Token = "0x400061B")]
		GoToPoint,
		[Token(Token = "0x400061C")]
		WantsToBreed,
		[Token(Token = "0x400061D")]
		SpawnEgg,
		[Token(Token = "0x400061E")]
		StayAtLocation,
		[Token(Token = "0x400061F")]
		NumActions
	}

	[Token(Token = "0x40005EB")]
	private const float ScaleUpdatedSpeedThreshold = 0.05f;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private CreatureType creatureType;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CreatureAnimation m_creatureAnimation;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CreatureMovement m_movement;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxTimeSpentNotMoving;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float minTimeSpentNotMoving;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float minDistanceFromPlayerWhenMoving;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float reactionMargin;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SaveObjectBase saveObject;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CreatureTameness creatureTameness;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private BreedableCreature breedableCreature;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool m_allowedToLeave;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimalNavigationTarget assignedBarnSpot;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimalNavigationTarget claimedBreedingSpot;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool m_hasCreatureTameness;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool m_hasBreedableCreature;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FLookAnimator lookAtAnimator;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFB70", Offset = "0x9FFB70")]
	private bool <IsStationary>k__BackingField;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CreatureAction previousAction;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CreatureAction currentAction;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public CreatureAction nextAction;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CreatureAction specialActionOverride;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float timeSinceEating;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeSinceSleeping;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float timeSinceDerpyBehavior;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float timeLeftDoingCurrentAction;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float timeSpentBeingPetted;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AnimalNavigationTarget wantedSpotForBreeding;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<string, object> analyticsParams;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CreatureInteractionEvent interactionEvent;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CreatureFedEvent fedEvent;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool initialized;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private GrowthStateType m_creatureGrowthStateType;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float m_currentBodyScale;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool m_isLeaving;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AnimalNavigationTarget m_exitLocation;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFB80", Offset = "0x9FFB80")]
	private bool <CloseToPlayer>k__BackingField;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFB90", Offset = "0x9FFB90")]
	private bool <SomewhatCloseToPlayer>k__BackingField;

	[Token(Token = "0x170000AE")]
	public bool IsStationary
	{
		[Token(Token = "0x6000665")]
		[Address(RVA = "0xC29BDC", Offset = "0xC29BDC", VA = "0xC29BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD3C", Offset = "0xA0FD3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000666")]
		[Address(RVA = "0xC29BE4", Offset = "0xC29BE4", VA = "0xC29BE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD4C", Offset = "0xA0FD4C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public CreatureAction CurrentBehavior
	{
		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC296E8", Offset = "0xC296E8", VA = "0xC296E8")]
		get
		{
			return default(CreatureAction);
		}
	}

	[Token(Token = "0x170000B0")]
	public CreatureAction PreviousBehavior
	{
		[Token(Token = "0x6000668")]
		[Address(RVA = "0xC29C04", Offset = "0xC29C04", VA = "0xC29C04")]
		get
		{
			return default(CreatureAction);
		}
	}

	[Token(Token = "0x170000B1")]
	public float TimeLeft
	{
		[Token(Token = "0x6000669")]
		[Address(RVA = "0xC29C0C", Offset = "0xC29C0C", VA = "0xC29C0C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000B2")]
	public bool CloseToPlayer
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0xC29C14", Offset = "0xC29C14", VA = "0xC29C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD5C", Offset = "0xA0FD5C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600066B")]
		[Address(RVA = "0xC29C1C", Offset = "0xC29C1C", VA = "0xC29C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD6C", Offset = "0xA0FD6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool SomewhatCloseToPlayer
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0xC29C28", Offset = "0xC29C28", VA = "0xC29C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD7C", Offset = "0xA0FD7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xC29C30", Offset = "0xC29C30", VA = "0xC29C30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD8C", Offset = "0xA0FD8C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public bool IsDomesticated
	{
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xC29C3C", Offset = "0xC29C3C", VA = "0xC29C3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B5")]
	public bool AllowedToLeave
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xC29CE4", Offset = "0xC29CE4", VA = "0xC29CE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xC29D3C", Offset = "0xC29D3C", VA = "0xC29D3C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public float ReactionMargin
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xC29D48", Offset = "0xC29D48", VA = "0xC29D48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0xC29D50", Offset = "0xC29D50", VA = "0xC29D50")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public float CloseDistance
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0xC29D58", Offset = "0xC29D58", VA = "0xC29D58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xC29D60", Offset = "0xC29D60", VA = "0xC29D60")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public bool CanBeTamed
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0xC29D68", Offset = "0xC29D68", VA = "0xC29D68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B9")]
	public int TamenessLevel
	{
		[Token(Token = "0x6000676")]
		[Address(RVA = "0xC29D84", Offset = "0xC29D84", VA = "0xC29D84")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000BA")]
	public float Tameness
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0xC29E54", Offset = "0xC29E54", VA = "0xC29E54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BB")]
	public BreedableCreature BreedableCreature
	{
		[Token(Token = "0x6000678")]
		[Address(RVA = "0xC29EF8", Offset = "0xC29EF8", VA = "0xC29EF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public bool IsInitialized
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0xC29F00", Offset = "0xC29F00", VA = "0xC29F00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BD")]
	public CreatureMovement Movement
	{
		[Token(Token = "0x600067A")]
		[Address(RVA = "0xC29F08", Offset = "0xC29F08", VA = "0xC29F08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xC29F10", Offset = "0xC29F10", VA = "0xC29F10")]
	public CreatureType GetCreatureType()
	{
		return default(CreatureType);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xC29F18", Offset = "0xC29F18", VA = "0xC29F18")]
	public GrowthStateType GetGrowthStateType()
	{
		return default(GrowthStateType);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xC29F20", Offset = "0xC29F20", VA = "0xC29F20", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xC2A1D0", Offset = "0xC2A1D0", VA = "0xC2A1D0")]
	private void RegisterAnimal()
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xC2A238", Offset = "0xC2A238", VA = "0xC2A238")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xC2A708", Offset = "0xC2A708", VA = "0xC2A708")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xC2AC08", Offset = "0xC2AC08", VA = "0xC2AC08")]
	private void OnCreatureTamenessInitialized()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xC2AC2C", Offset = "0xC2AC2C", VA = "0xC2AC2C")]
	private void RemoveIfAlreadyLeft()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xC2AD0C", Offset = "0xC2AD0C", VA = "0xC2AD0C")]
	public void UpdateNewDay(int dayNumber)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xC2ADC0", Offset = "0xC2ADC0", VA = "0xC2ADC0")]
	public void OnVisitorEnter()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xC2ADC4", Offset = "0xC2ADC4", VA = "0xC2ADC4")]
	public void OnVisitorLeave(int leavingDay)
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xC23088", Offset = "0xC23088", VA = "0xC23088")]
	public void CancelLeaving()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xC2ADFC", Offset = "0xC2ADFC", VA = "0xC2ADFC")]
	public bool TryGetFirstDay(out int firstDay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xC230AC", Offset = "0xC230AC", VA = "0xC230AC")]
	public bool TrySetFirstDay(int firstDay)
	{
		return default(bool);
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xC2AE3C", Offset = "0xC2AE3C", VA = "0xC2AE3C")]
	public int GetLastUpdatedDay()
	{
		return default(int);
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xC29BF0", Offset = "0xC29BF0", VA = "0xC29BF0")]
	private bool HasSpecialActionOverride()
	{
		return default(bool);
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xC2AE58", Offset = "0xC2AE58", VA = "0xC2AE58")]
	public void UpdateOften(float dt)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xC2B2F4", Offset = "0xC2B2F4", VA = "0xC2B2F4")]
	private void UpdateGrowthAndSpeed(float dt)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xC2BE20", Offset = "0xC2BE20", VA = "0xC2BE20")]
	public bool CanMove()
	{
		return default(bool);
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xC2BE38", Offset = "0xC2BE38", VA = "0xC2BE38")]
	public void UpdateIntermittently(float dt)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xC2C86C", Offset = "0xC2C86C", VA = "0xC2C86C")]
	public static bool ResourceTypeIsNest(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xC2CAFC", Offset = "0xC2CAFC", VA = "0xC2CAFC")]
	public static bool ResourceTypeIsBreedingItem(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xC2C3A0", Offset = "0xC2C3A0", VA = "0xC2C3A0")]
	private AnimalBarnSpot FindSpotForBreeding()
	{
		return null;
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xC2C440", Offset = "0xC2C440", VA = "0xC2C440")]
	public bool CanRequestNest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xC2CB4C", Offset = "0xC2CB4C", VA = "0xC2CB4C")]
	public bool IsRequestingNestOfType(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xC2CC40", Offset = "0xC2CC40", VA = "0xC2CC40")]
	public bool WantsABarnSpot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xC2CCC8", Offset = "0xC2CCC8", VA = "0xC2CCC8")]
	private CreatureAction NextWantedAction(AnimalNavigationTarget target)
	{
		return default(CreatureAction);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xC2B728", Offset = "0xC2B728", VA = "0xC2B728")]
	private void UpdateStayAtLocation()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xC2B7B4", Offset = "0xC2B7B4", VA = "0xC2B7B4")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xC2B72C", Offset = "0xC2B72C", VA = "0xC2B72C")]
	private void UpdateGoToPoint()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xC2CDA8", Offset = "0xC2CDA8", VA = "0xC2CDA8")]
	private CreatureAction TryGetGoToAction()
	{
		return default(CreatureAction);
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xC2CE5C", Offset = "0xC2CE5C", VA = "0xC2CE5C")]
	private void GoToNewPoint()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xC2B7E0", Offset = "0xC2B7E0", VA = "0xC2B7E0")]
	private void DoAction(CreatureAction action)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xC2D450", Offset = "0xC2D450", VA = "0xC2D450")]
	public void SpawnEggInClaimedSpot(AnimalBarnSpot barnsSpot)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xC2D474", Offset = "0xC2D474", VA = "0xC2D474")]
	public void StartTryingToEatFromHand()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xC2D568", Offset = "0xC2D568", VA = "0xC2D568")]
	public void OnObjectReceived(PlayerHand hand, Grabbable grabbable)
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xC2D84C", Offset = "0xC2D84C", VA = "0xC2D84C")]
	private void ClaimBarnSpot(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xC2D93C", Offset = "0xC2D93C", VA = "0xC2D93C")]
	public bool IsRequestedItem(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xC2D6E0", Offset = "0xC2D6E0", VA = "0xC2D6E0")]
	public bool CheckRecievedItem(Grabbable grabbable, CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xC2BBEC", Offset = "0xC2BBEC", VA = "0xC2BBEC")]
	private void TryToIncreaseTameness()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xC2D708", Offset = "0xC2D708", VA = "0xC2D708")]
	private void ClaimBreedingSpot()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xC2DCB8", Offset = "0xC2DCB8", VA = "0xC2DCB8")]
	public void StopTryingToEatFromHand()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xC2DCC4", Offset = "0xC2DCC4", VA = "0xC2DCC4")]
	public void OnPettingStart()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xC2DD7C", Offset = "0xC2DD7C", VA = "0xC2DD7C")]
	public void OnPettingEnd()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xC2D4D0", Offset = "0xC2D4D0", VA = "0xC2D4D0")]
	private bool IsGrownUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xC2D520", Offset = "0xC2D520", VA = "0xC2D520")]
	public void SetSpecialActionOverride(CreatureAction action)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xC2D6D4", Offset = "0xC2D6D4", VA = "0xC2D6D4")]
	public void ClearSpecialActionOverride()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xC2DD8C", Offset = "0xC2DD8C", VA = "0xC2DD8C")]
	public void TryToReachNavmeshPosition(Vector3 navmeshPos)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xC2DDAC", Offset = "0xC2DDAC", VA = "0xC2DDAC")]
	public SaveID GetSaveID()
	{
		return default(SaveID);
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xC2DE40", Offset = "0xC2DE40", VA = "0xC2DE40")]
	public void AssignBarnSpot(AnimalBarnSpot spot, int adornmentIndex)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xC2DF58", Offset = "0xC2DF58", VA = "0xC2DF58")]
	public void ResetBarnSpot()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xC2DFB4", Offset = "0xC2DFB4", VA = "0xC2DFB4")]
	public void SetClaimedBreedingSpot(AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xC2E078", Offset = "0xC2E078", VA = "0xC2E078")]
	public void ResetBreedingSpot()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xC29C40", Offset = "0xC29C40", VA = "0xC29C40")]
	public bool HasAssignedBarnSpot()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xC2C0DC", Offset = "0xC2C0DC", VA = "0xC2C0DC")]
	public bool HasClaimedSpotForBreeding()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xC2E084", Offset = "0xC2E084", VA = "0xC2E084")]
	public AnimalBarnSpot GetClaimedSpotForBreeding()
	{
		return null;
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xC2CB24", Offset = "0xC2CB24", VA = "0xC2CB24")]
	public bool IsTame()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xC29D88", Offset = "0xC29D88", VA = "0xC29D88")]
	private int TryGetTamenessLevel()
	{
		return default(int);
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xC29E58", Offset = "0xC29E58", VA = "0xC29E58")]
	private float TryGetTameness()
	{
		return default(float);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xC2E184", Offset = "0xC2E184", VA = "0xC2E184")]
	public CreatureBehaviour()
	{
	}
}
[Token(Token = "0x2000127")]
public class CreatureMovement : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000128")]
	public enum CreatureMovementState
	{
		[Token(Token = "0x4000638")]
		Idle,
		[Token(Token = "0x4000639")]
		WaitingForPath,
		[Token(Token = "0x400063A")]
		Turning,
		[Token(Token = "0x400063B")]
		Moving,
		[Token(Token = "0x400063C")]
		NoTarget,
		[Token(Token = "0x400063D")]
		Disabled
	}

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistanceToNextTarget;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_shouldStopToTurn;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private NavMeshAgent agent;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CreatureBehaviour creature;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_tryingToReachPosition;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CreatureMovementState currentState;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CreatureMovementState previousState;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 currentTargetPosition;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimalNavigationTarget nextTarget;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimalNavigationTarget currentTarget;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float timeSpentNotMoving;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentTurnDirection;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float angleNeededToTurn;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float angleLeftToTurn;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeSpentTurning;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFBD0", Offset = "0x9FFBD0")]
	private bool <MovingAroundCurrentTarget>k__BackingField;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int numTargetsTried;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float m_originalSpeed;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float m_turnSpeed;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_hasForcedMovement;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 m_forcedMovementTarget;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 m_forcedVelocity;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFBE0", Offset = "0x9FFBE0")]
	private bool <Initialized>k__BackingField;

	[Token(Token = "0x170000BE")]
	public float CurrentSpeedNormalized
	{
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xC296E4", Offset = "0xC296E4", VA = "0xC296E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BF")]
	public float CurrentAngularSpeedNormalized
	{
		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xC2E254", Offset = "0xC2E254", VA = "0xC2E254")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000C0")]
	public CreatureMovementState CurrentMovementState
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xC2E25C", Offset = "0xC2E25C", VA = "0xC2E25C")]
		get
		{
			return default(CreatureMovementState);
		}
	}

	[Token(Token = "0x170000C1")]
	public bool MovingAroundCurrentTarget
	{
		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xC2E264", Offset = "0xC2E264", VA = "0xC2E264")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FD9C", Offset = "0xA0FD9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xC2E26C", Offset = "0xC2E26C", VA = "0xC2E26C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDAC", Offset = "0xA0FDAC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public bool HasForcedMovement
	{
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xC2E278", Offset = "0xC2E278", VA = "0xC2E278")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C3")]
	public Vector3 TemporaryTargetPosition
	{
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xC2E280", Offset = "0xC2E280", VA = "0xC2E280")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C4")]
	public bool Initialized
	{
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xC2E28C", Offset = "0xC2E28C", VA = "0xC2E28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDBC", Offset = "0xA0FDBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xC2E294", Offset = "0xC2E294", VA = "0xC2E294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDCC", Offset = "0xA0FDCC")]
		private set
		{
		}
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xC2E2A0", Offset = "0xC2E2A0", VA = "0xC2E2A0", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xC2E490", Offset = "0xC2E490", VA = "0xC2E490")]
	public void AssignCreatureBehaviour(CreatureBehaviour creature)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xC2E1C0", Offset = "0xC2E1C0", VA = "0xC2E1C0")]
	private float GetCurrentSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xC2CDBC", Offset = "0xC2CDBC", VA = "0xC2CDBC")]
	public bool DidReachTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xC2E498", Offset = "0xC2E498", VA = "0xC2E498")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xC2EF04", Offset = "0xC2EF04", VA = "0xC2EF04")]
	private bool TryStartIdleIfInvalidTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xC2EA7C", Offset = "0xC2EA7C", VA = "0xC2EA7C")]
	private void UpdateForcedMovement()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xC2EE94", Offset = "0xC2EE94", VA = "0xC2EE94")]
	private void TurnToFaceInDirection(Vector3 dir)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xC2F2FC", Offset = "0xC2F2FC", VA = "0xC2F2FC")]
	private bool AlmostReachedTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xC2F1A0", Offset = "0xC2F1A0", VA = "0xC2F1A0")]
	private void StopAtTarget()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xC2F1E4", Offset = "0xC2F1E4", VA = "0xC2F1E4")]
	private bool IsStuck()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xC2EAC0", Offset = "0xC2EAC0", VA = "0xC2EAC0")]
	private bool CannotFindPath()
	{
		return default(bool);
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xC2CE44", Offset = "0xC2CE44", VA = "0xC2CE44")]
	public void CancelMovement()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xC2EB40", Offset = "0xC2EB40", VA = "0xC2EB40")]
	private void MoveToPointWithinCurrentTarget()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xC2D0C4", Offset = "0xC2D0C4", VA = "0xC2D0C4")]
	public void MoveToTarget(AnimalNavigationTarget newTarget)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xC2F754", Offset = "0xC2F754", VA = "0xC2F754")]
	public void TryToReachNavmeshPosition(Vector3 navmeshPos)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xC2F760", Offset = "0xC2F760", VA = "0xC2F760")]
	public void SetForcedMovement(CreatureMovementState forcedState, Vector3 pos)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xC2F828", Offset = "0xC2F828", VA = "0xC2F828")]
	public void SetForcedMovement(CreatureMovementState forcedState, Vector3 pos, Vector3 vel)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xC2F898", Offset = "0xC2F898", VA = "0xC2F898")]
	public void StopForcedMovement()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xC2F920", Offset = "0xC2F920", VA = "0xC2F920")]
	private AnimalNavigationTarget FindNewTarget(AnimalNavigationTarget.AnimalTargetType targetType = AnimalNavigationTarget.AnimalTargetType.None, float maxDistance = 0f)
	{
		return null;
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xC2FADC", Offset = "0xC2FADC", VA = "0xC2FADC")]
	public AnimalNavigationTarget FindNewTargetOfType(AnimalNavigationTarget.AnimalTargetType targetType, float maxDistance = 0f)
	{
		return null;
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xC2D028", Offset = "0xC2D028", VA = "0xC2D028")]
	public AnimalNavigationTarget FindAndMoveToNewTarget(AnimalNavigationTarget.AnimalTargetType targetType = AnimalNavigationTarget.AnimalTargetType.None, float maxDistance = 0f)
	{
		return null;
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xC2F618", Offset = "0xC2F618", VA = "0xC2F618")]
	private float CalculateAngleToTargetDir(Vector3 dir)
	{
		return default(float);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xC2ED38", Offset = "0xC2ED38", VA = "0xC2ED38")]
	private bool IsFacingTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xC2F330", Offset = "0xC2F330", VA = "0xC2F330")]
	private int TurnDirectionToTarget(Vector3 dir)
	{
		return default(int);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xC2F424", Offset = "0xC2F424", VA = "0xC2F424")]
	private void StartIdling()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xC2F52C", Offset = "0xC2F52C", VA = "0xC2F52C")]
	private bool HasValidTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xC2EF8C", Offset = "0xC2EF8C", VA = "0xC2EF8C")]
	private Vector3 GetTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xC2FAE0", Offset = "0xC2FAE0", VA = "0xC2FAE0")]
	public AnimalNavigationTarget GetCurrentTarget()
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xC2F038", Offset = "0xC2F038", VA = "0xC2F038")]
	private bool HasReachedTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xC2BDF8", Offset = "0xC2BDF8", VA = "0xC2BDF8")]
	public void SetAgentSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xC2FAE8", Offset = "0xC2FAE8", VA = "0xC2FAE8")]
	public CreatureMovement()
	{
	}
}
[Token(Token = "0x2000129")]
public class CreatureTameness : SaveableComponent, IInitializable
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float MaxTameness;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float DefaultTamenessIncrease;

	[Token(Token = "0x4000640")]
	public const int DefaultRandomNestingPercentage = 1;

	[Token(Token = "0x4000641")]
	public const float MaxNestingRequestDuration = 600f;

	[Token(Token = "0x4000642")]
	private const float NestingIncrementPerSecond = 0.1f;

	[Token(Token = "0x4000643")]
	private const float RewardDuration = 240f;

	[Token(Token = "0x4000644")]
	private const float TamenessFalloffPerSecond = 0.0015f;

	[Token(Token = "0x4000645")]
	private const float NormalTamenessFalloffTheshold = 900f;

	[Token(Token = "0x4000646")]
	private const float FullTamenessFalloffTheshold = 1800f;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CreatureBehaviour m_creatureBehaviour;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool m_canBeTamed;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private Milestone.MilestoneType m_milestoneRequiredForBarn;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AnimalTameMeter tameMeter;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SpriteRenderer m_moodBubbleIcon;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_moodBubble;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private CreatureGiftSystem m_giftingSystem;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AttachSlot m_attatchSlot;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_rewardTimer;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private uint m_numSpawnedRewards;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float delayBeforeFalloff;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_nestingMultiplier;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CreatureRequest m_currentRequest;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Grabbable m_heldItem;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreatureType m_creatureType;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DateTime lastTimeInteractedWith;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_nestingRequestDuration;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFC60", Offset = "0x9FFC60")]
	private int <FirstDay>k__BackingField;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFC70", Offset = "0x9FFC70")]
	private int <LastDayUpdated>k__BackingField;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFC80", Offset = "0x9FFC80")]
	private int <LeavingDay>k__BackingField;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFC90", Offset = "0x9FFC90")]
	private bool <IsHatchingEgg>k__BackingField;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private SaveID m_hatchingEggId;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnInitialized;

	[Token(Token = "0x170000C5")]
	public bool IsRequestingNest
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xC2C7E8", Offset = "0xC2C7E8", VA = "0xC2C7E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	public bool IsRequestingBarnSpot
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xC2C738", Offset = "0xC2C738", VA = "0xC2C738")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C7")]
	public bool CanBeTamed
	{
		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xC3035C", Offset = "0xC3035C", VA = "0xC3035C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C8")]
	public bool IsHoldingBreedingItem
	{
		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xC2BCC0", Offset = "0xC2BCC0", VA = "0xC2BCC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C9")]
	public int FirstDay
	{
		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xC30364", Offset = "0xC30364", VA = "0xC30364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDDC", Offset = "0xA0FDDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xC3036C", Offset = "0xC3036C", VA = "0xC3036C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDEC", Offset = "0xA0FDEC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CA")]
	public int LastDayUpdated
	{
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xC30374", Offset = "0xC30374", VA = "0xC30374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FDFC", Offset = "0xA0FDFC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xC3037C", Offset = "0xC3037C", VA = "0xC3037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE0C", Offset = "0xA0FE0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public int LeavingDay
	{
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xC30384", Offset = "0xC30384", VA = "0xC30384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE1C", Offset = "0xA0FE1C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xC3038C", Offset = "0xC3038C", VA = "0xC3038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE2C", Offset = "0xA0FE2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public bool IsHatchingEgg
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xC30394", Offset = "0xC30394", VA = "0xC30394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE3C", Offset = "0xA0FE3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xC3039C", Offset = "0xC3039C", VA = "0xC3039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE4C", Offset = "0xA0FE4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public float Tameness
	{
		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xC2E168", Offset = "0xC2E168", VA = "0xC2E168")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xC303A8", Offset = "0xC303A8", VA = "0xC303A8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xC30674", Offset = "0xC30674", VA = "0xC30674", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xC2ADE8", Offset = "0xC2ADE8", VA = "0xC2ADE8")]
	public void SetLeavingDay(int leavingDay)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xC2ADF0", Offset = "0xC2ADF0", VA = "0xC2ADF0")]
	public void ResetLeavingDay()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xC2ADAC", Offset = "0xC2ADAC", VA = "0xC2ADAC")]
	public void UpdateNewDay(int dayNumber)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xC31344", Offset = "0xC31344", VA = "0xC31344")]
	public void SetCanBeTamed(bool tameable)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xC2A1A0", Offset = "0xC2A1A0", VA = "0xC2A1A0")]
	public void InitCreature(CreatureBehaviour creature, CreatureType ct)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xC2DB24", Offset = "0xC2DB24", VA = "0xC2DB24")]
	public bool SufficientTimeHasPassedSinceLastIncrease()
	{
		return default(bool);
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xC2DBC0", Offset = "0xC2DBC0", VA = "0xC2DBC0")]
	public void IncreaseTameness()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xC2D2F4", Offset = "0xC2D2F4", VA = "0xC2D2F4")]
	public void UnlockEggMeter(bool unlocked)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xC2DF3C", Offset = "0xC2DF3C", VA = "0xC2DF3C")]
	public void SetAdornment(int adornment)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xC31350", Offset = "0xC31350", VA = "0xC31350")]
	private void IncreaseTameness(float value)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC31424", Offset = "0xC31424", VA = "0xC31424")]
	private void SetDelayBeforeTamenessFalloff()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC2BD80", Offset = "0xC2BD80", VA = "0xC2BD80")]
	public void UpdateEggMeterVisibility(bool hasAssignedBarnSpot)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xC313C0", Offset = "0xC313C0", VA = "0xC313C0")]
	private void UpdateTamenessLevelChangeRequest(int levelChangeResult)
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xC2C180", Offset = "0xC2C180", VA = "0xC2C180")]
	public void UpdateTamenessFalloff(float dt)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xC2D4F8", Offset = "0xC2D4F8", VA = "0xC2D4F8")]
	public void ShowTamenessIndicator()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xC2B2D8", Offset = "0xC2B2D8", VA = "0xC2B2D8")]
	public void HideTamenessIndicator()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xC30BF8", Offset = "0xC30BF8", VA = "0xC30BF8")]
	public CreatureItemRequest RequestItemBySeed(uint seed)
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xC2AE34", Offset = "0xC2AE34", VA = "0xC2AE34")]
	public void SetFirstDay(int firstDay)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xC31460", Offset = "0xC31460", VA = "0xC31460")]
	public CreatureItemRequest RequestRandomItemAtTamenessLevel()
	{
		return null;
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xC2D964", Offset = "0xC2D964", VA = "0xC2D964")]
	public bool CheckRequestedItem(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xC2CB90", Offset = "0xC2CB90", VA = "0xC2CB90")]
	public bool CheckRequestedNest(CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xC2DA1C", Offset = "0xC2DA1C", VA = "0xC2DA1C")]
	public bool CheckRecievedItem(Grabbable grabbable, CraftingSystem.ResourceType resourceType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xC30CE0", Offset = "0xC30CE0", VA = "0xC30CE0")]
	private bool StartHoldingItem(Grabbable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xC3165C", Offset = "0xC3165C", VA = "0xC3165C")]
	public void OnHeldItemGrabbedByPlayer(Grabbable item)
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xC3185C", Offset = "0xC3185C", VA = "0xC3185C")]
	public Grabbable GetHeldItem()
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xC3159C", Offset = "0xC3159C", VA = "0xC3159C")]
	public void DropHeldItem(bool makeGrabbable)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xC2C88C", Offset = "0xC2C88C", VA = "0xC2C88C")]
	public void DropHeldBreedingItem(bool makeGrabbable)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xC31864", Offset = "0xC31864", VA = "0xC31864")]
	public void DropHeldGift(bool makeGrabbable)
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xC31580", Offset = "0xC31580", VA = "0xC31580")]
	public void PlayLevelUpEffect()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xC2C5D8", Offset = "0xC2C5D8", VA = "0xC2C5D8")]
	public CreatureRequest RequestNest()
	{
		return null;
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xC2C2E0", Offset = "0xC2C2E0", VA = "0xC2C2E0")]
	public CreatureRequest RequestBarnSpot()
	{
		return null;
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xC2C7BC", Offset = "0xC2C7BC", VA = "0xC2C7BC")]
	public void StopCurrentRequest()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xC31538", Offset = "0xC31538", VA = "0xC31538")]
	private void ShowRequestInBubble(CreatureRequest request)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xC2C278", Offset = "0xC2C278", VA = "0xC2C278")]
	public bool HasActiveRequest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xC2CC68", Offset = "0xC2CC68", VA = "0xC2CC68")]
	public CraftingSystem.ResourceType GetRequestedResourceType()
	{
		return default(CraftingSystem.ResourceType);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xC30ABC", Offset = "0xC30ABC", VA = "0xC30ABC")]
	private void HideRequestbubble()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xC31978", Offset = "0xC31978", VA = "0xC31978")]
	public void SetRewardTimer(float seconds)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xC2C62C", Offset = "0xC2C62C", VA = "0xC2C62C")]
	public void UpdateRewardTimer(float dt, GrowthStateType creatureGrowthStateType)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xC31980", Offset = "0xC31980", VA = "0xC31980")]
	public bool SpawnReward(CreatureType creatureType, GrowthStateType growthStateType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xC31BA4", Offset = "0xC31BA4", VA = "0xC31BA4")]
	private void OnPostInitCallback(SpawnOperationCallbackData obj)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xC30ADC", Offset = "0xC30ADC", VA = "0xC30ADC")]
	private void TrySetRewardColor(SaveObjectBase rewardObject)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xC2C214", Offset = "0xC2C214", VA = "0xC2C214")]
	public bool CanRequestBarnSpot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xC2E114", Offset = "0xC2E114", VA = "0xC2E114")]
	public bool IsCompletelyTame()
	{
		return default(bool);
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xC2C334", Offset = "0xC2C334", VA = "0xC2C334")]
	public bool IsReadyToSpawnEgg()
	{
		return default(bool);
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xC2C51C", Offset = "0xC2C51C", VA = "0xC2C51C")]
	public bool RandomlyWantsToNest(float dt)
	{
		return default(bool);
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xC2DC7C", Offset = "0xC2DC7C", VA = "0xC2DC7C")]
	public void IncreaseNestingProbability()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xC2D37C", Offset = "0xC2D37C", VA = "0xC2D37C")]
	public void SpawnEggInSpot(CreatureType creatureType, AnimalBarnSpot spot)
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xC31BFC", Offset = "0xC31BFC", VA = "0xC31BFC")]
	private void OnEggSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xC31D24", Offset = "0xC31D24", VA = "0xC31D24")]
	private void OnChildSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xC29D20", Offset = "0xC29D20", VA = "0xC29D20")]
	public bool IsHoldingItem()
	{
		return default(bool);
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xC31EAC", Offset = "0xC31EAC", VA = "0xC31EAC")]
	public CreatureTameness()
	{
	}
}
[Serializable]
[Token(Token = "0x200012A")]
public class CreatureTamenessState : ComponentState
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool CanBeTamed;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float TamenessLevel;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DelayUntilFalloff;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EggMeterUnlocked;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint RequestSeed;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint SpawnedRewards;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RewardTimer;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SaveID HatchingEggId;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SaveID HeldItemId;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int FirstDay;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int LastDayUpdated;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int LeavingDay;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xC305A8", Offset = "0xC305A8", VA = "0xC305A8")]
	public CreatureTamenessState(bool canBeTamed, float tamenessLevel, float delayBeforeFalloff, bool eggMeterUnlocked, uint requestSeed, float rewardTimer, uint numSpawnedRewards, int firstDay, int lastDayUpdated, int leavingDay, SaveID eggId, SaveID heldItemId)
	{
	}
}
[Token(Token = "0x200012B")]
public class EatingBehavior : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200012C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAB10", Offset = "0x9FAB10")]
	private sealed class <>c
	{
		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayerHand, Grabbable> <>9__35_0;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__35_1;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__35_2;

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC36EF4", Offset = "0xC36EF4", VA = "0xC36EF4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC36EFC", Offset = "0xC36EFC", VA = "0xC36EFC")]
		internal void <.ctor>b__35_0(PlayerHand <p0>, Grabbable <p1>)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xC36F00", Offset = "0xC36F00", VA = "0xC36F00")]
		internal void <.ctor>b__35_1()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xC36F04", Offset = "0xC36F04", VA = "0xC36F04")]
		internal void <.ctor>b__35_2()
		{
		}
	}

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FFCA0", Offset = "0x9FFCA0")]
	[SerializeField]
	private CraftingSystem.ResourceTypeEnum favoriteFood;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem happyParticles;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject moodBubble;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_foodTargetPosition;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9FFD1C", Offset = "0x9FFD1C")]
	public UnityEvent OnEat;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnEatFavoriteFood;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnOpenMouth;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnCloseMouth;

	[Token(Token = "0x4000672")]
	private const float chewingTime = 0.4f;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeLeft;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float originalScale;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distanceToMouth;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Grabbable foodBeingEaten;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Grabbable nearbyObjectOfInterest;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PlayerHand handHoldingItem;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CreatureBehaviour creature;

	[Token(Token = "0x14000003")]
	[HideInInspector]
	public event Action<PlayerHand, Grabbable> OnObjectReceived
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0xC2A664", Offset = "0xC2A664", VA = "0xC2A664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE5C", Offset = "0xA0FE5C")]
		add
		{
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0xC2AB64", Offset = "0xC2AB64", VA = "0xC2AB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE6C", Offset = "0xA0FE6C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action OnOpenMouthCallback
	{
		[Token(Token = "0x6000726")]
		[Address(RVA = "0xC2A51C", Offset = "0xC2A51C", VA = "0xC2A51C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE7C", Offset = "0xA0FE7C")]
		add
		{
		}
		[Token(Token = "0x6000727")]
		[Address(RVA = "0xC2AA1C", Offset = "0xC2AA1C", VA = "0xC2AA1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE8C", Offset = "0xA0FE8C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action OnCloseMouthCallback
	{
		[Token(Token = "0x6000728")]
		[Address(RVA = "0xC2A5C0", Offset = "0xC2A5C0", VA = "0xC2A5C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FE9C", Offset = "0xA0FE9C")]
		add
		{
		}
		[Token(Token = "0x6000729")]
		[Address(RVA = "0xC2AAC0", Offset = "0xC2AAC0", VA = "0xC2AAC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0FEAC", Offset = "0xA0FEAC")]
		remove
		{
		}
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xC2B458", Offset = "0xC2B458", VA = "0xC2B458")]
	public static Grabbable GetObjectOfInterest(CreatureBehaviour creature, GameObject go, out bool isFood)
	{
		return null;
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC35A9C", Offset = "0xC35A9C", VA = "0xC35A9C")]
	public static Grabbable GetObjectOfInterest(GameObject go, out bool isFood)
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC35C98", Offset = "0xC35C98", VA = "0xC35C98")]
	private static bool CanBeUsedNow(Grabbable grabbableItem)
	{
		return default(bool);
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC35D44", Offset = "0xC35D44", VA = "0xC35D44")]
	private void Start()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC35E24", Offset = "0xC35E24", VA = "0xC35E24")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC362AC", Offset = "0xC362AC", VA = "0xC362AC")]
	private Grabbable TryGetObjectOfInterest(Collider other, out bool isFood)
	{
		return null;
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xC3637C", Offset = "0xC3637C", VA = "0xC3637C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xC364C8", Offset = "0xC364C8", VA = "0xC364C8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xC36B1C", Offset = "0xC36B1C", VA = "0xC36B1C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xC36990", Offset = "0xC36990", VA = "0xC36990")]
	private void Eat(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xC36C2C", Offset = "0xC36C2C", VA = "0xC36C2C")]
	public EatingBehavior()
	{
	}
}
[Token(Token = "0x200012D")]
public class LiftAndDisappear : MonoBehaviour
{
	[Token(Token = "0x200012E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAB20", Offset = "0x9FAB20")]
	private sealed class <DelayFunction>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sec;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LiftAndDisappear <>4__this;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xCF4420", Offset = "0xCF4420", VA = "0xCF4420", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000745")]
			[Address(RVA = "0xCF4488", Offset = "0xCF4488", VA = "0xCF4488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xCF42FC", Offset = "0xCF42FC", VA = "0xCF42FC")]
		[DebuggerHidden]
		public <DelayFunction>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xCF434C", Offset = "0xCF434C", VA = "0xCF434C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xCF4350", Offset = "0xCF4350", VA = "0xCF4350", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xCF4428", Offset = "0xCF4428", VA = "0xCF4428", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FFD84", Offset = "0x9FFD84")]
	public GameObject objectToLift;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FFDBC", Offset = "0x9FFDBC")]
	public GameObject objectParticles;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FFDF4", Offset = "0x9FFDF4")]
	public GameObject bubble;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9FFE2C", Offset = "0x9FFE2C")]
	public GameObject disappearEffect;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform bubbleStartPosition;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool readyToYeet;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float scaleItemInBubble;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool disableRendererWhenDisappearing;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool disableGameObjectAfterDelay;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float originalItemScale;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xCF3CC4", Offset = "0xCF3CC4", VA = "0xCF3CC4")]
	public void BubbleOfThings()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xCF3F50", Offset = "0xCF3F50", VA = "0xCF3F50")]
	public void BubbleUp()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xCF411C", Offset = "0xCF411C", VA = "0xCF411C")]
	public void BubbleOfThingsEnd()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xCF4120", Offset = "0xCF4120", VA = "0xCF4120")]
	public void SpawnDissapearing()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xCF4270", Offset = "0xCF4270", VA = "0xCF4270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0FEBC", Offset = "0xA0FEBC")]
	private IEnumerator DelayFunction(float sec)
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xCF4328", Offset = "0xCF4328", VA = "0xCF4328")]
	public LiftAndDisappear()
	{
	}
}
[Token(Token = "0x200012F")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x2000130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAB30", Offset = "0x9FAB30")]
	private sealed class <StopForcedUpdatesAfterDelay>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookAtPlayer <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0xCF98F4", Offset = "0xCF98F4", VA = "0xCF98F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0xCF995C", Offset = "0xCF995C", VA = "0xCF995C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xCF97C8", Offset = "0xCF97C8", VA = "0xCF97C8")]
		[DebuggerHidden]
		public <StopForcedUpdatesAfterDelay>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xCF9874", Offset = "0xCF9874", VA = "0xCF9874", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xCF9878", Offset = "0xCF9878", VA = "0xCF9878", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xCF98FC", Offset = "0xCF98FC", VA = "0xCF98FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistanceFromPlayer;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FLookAnimator lookAtAnimator;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasLookAtAnimator;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isCloseToPlayer;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float maxDistanceSquared;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float maxDistanceSquaredForUpdate;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_forceLookAtPlayer;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool m_forceUpdate;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine m_stopDelayRoutine;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YieldInstruction m_delayStopInstruction;

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xCF9374", Offset = "0xCF9374", VA = "0xCF9374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xCF940C", Offset = "0xCF940C", VA = "0xCF940C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xCF9640", Offset = "0xCF9640", VA = "0xCF9640")]
	public void ForceLookAtPlayer(bool value)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xCF964C", Offset = "0xCF964C", VA = "0xCF964C")]
	public void StartForcedLookAt()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xCF96BC", Offset = "0xCF96BC", VA = "0xCF96BC")]
	public void StopForcedLookAt()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xCF974C", Offset = "0xCF974C", VA = "0xCF974C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA0FF70", Offset = "0xA0FF70")]
	private IEnumerator StopForcedUpdatesAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xCF97F4", Offset = "0xCF97F4", VA = "0xCF97F4")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x2000131")]
public class Poopable : MonoBehaviour
{
	[Token(Token = "0x2000132")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAB40", Offset = "0x9FAB40")]
	private sealed class <DelayCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Poopable <>4__this;

		[Token(Token = "0x170000D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xC65790", Offset = "0xC65790", VA = "0xC65790", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0xC657F8", Offset = "0xC657F8", VA = "0xC657F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xC65648", Offset = "0xC65648", VA = "0xC65648")]
		[DebuggerHidden]
		public <DelayCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC6568C", Offset = "0xC6568C", VA = "0xC6568C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xC65690", Offset = "0xC65690", VA = "0xC65690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xC65798", Offset = "0xC65798", VA = "0xC65798", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destroyPoopAfter;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isConsideredPoop;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool isWaiting;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SaveObjectBase saveObject;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xC65454", Offset = "0xC65454", VA = "0xC65454")]
	public void TriggerSelfDestruct()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xC65520", Offset = "0xC65520", VA = "0xC65520")]
	public void NoLongerConsiderPoop()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xC65458", Offset = "0xC65458", VA = "0xC65458")]
	private void StartWaiting()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xC655CC", Offset = "0xC655CC", VA = "0xC655CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10024", Offset = "0xA10024")]
	private IEnumerator DelayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xC65674", Offset = "0xC65674", VA = "0xC65674")]
	public Poopable()
	{
	}
}
[Token(Token = "0x2000133")]
public class Pooper : MonoBehaviour, IValidate
{
	[Token(Token = "0x2000134")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAB50", Offset = "0x9FAB50")]
	private sealed class <DelayCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pooper <>4__this;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waitTime;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076A")]
			[Address(RVA = "0xC65E10", Offset = "0xC65E10", VA = "0xC65E10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xC65E78", Offset = "0xC65E78", VA = "0xC65E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xC65CE0", Offset = "0xC65CE0", VA = "0xC65CE0")]
		[DebuggerHidden]
		public <DelayCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC65D1C", Offset = "0xC65D1C", VA = "0xC65D1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC65D20", Offset = "0xC65D20", VA = "0xC65D20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC65E18", Offset = "0xC65E18", VA = "0xC65E18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference poopPrefab;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float poopingInterval;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform poopSpawnPosition;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool onlyPoopInPond;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isInPond;

	[Token(Token = "0x40006A8")]
	private const float timeUntilFirstPoop = 5f;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CacheReferenceAttribute", RVA = "0x9FFEC4", Offset = "0x9FFEC4")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isWaiting;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xC65800", Offset = "0xC65800", VA = "0xC65800")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xC65850", Offset = "0xC65850", VA = "0xC65850")]
	private void StartWaiting(float waitTime)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xC65908", Offset = "0xC65908", VA = "0xC65908")]
	private void StopWaiting()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xC65914", Offset = "0xC65914", VA = "0xC65914")]
	private void PoopAnObject()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xC65B2C", Offset = "0xC65B2C", VA = "0xC65B2C")]
	public void OnPoopSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xC65C00", Offset = "0xC65C00", VA = "0xC65C00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xC65C78", Offset = "0xC65C78", VA = "0xC65C78")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xC6587C", Offset = "0xC6587C", VA = "0xC6587C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA100D8", Offset = "0xA100D8")]
	private IEnumerator DelayCoroutine(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xC65D0C", Offset = "0xC65D0C", VA = "0xC65D0C")]
	public Pooper()
	{
	}
}
[Token(Token = "0x2000135")]
public interface IDataRowInterface
{
}
[Token(Token = "0x2000136")]
public abstract class DataAsset : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000137")]
	public struct DataRowEntry
	{
		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string EntryName;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string EntryData;
	}

	[Serializable]
	[Token(Token = "0x2000138")]
	public struct DataRow
	{
		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RowName;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DataRowEntry[] RowData;
	}

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] CSVColumnNames;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<DataRow> RawData;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Dictionary<string, IDataRowInterface> DataStorage;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IDataRowInterface CurrentStructToPopulate;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xC34E6C", Offset = "0xC34E6C", VA = "0xC34E6C")]
	protected IDataRowInterface GetData_Internal(string dataRowName)
	{
		return null;
	}

	[Token(Token = "0x600076E")]
	protected abstract void RepopulateDataStorage();

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xC34F4C", Offset = "0xC34F4C", VA = "0xC34F4C")]
	protected DataAsset()
	{
	}
}
[Token(Token = "0x2000139")]
public class DataManager : MonoBehaviour
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static DataManager Instance_Internal;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemDataAsset ItemData;

	[Token(Token = "0x170000D6")]
	public static DataManager Instance
	{
		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC34F54", Offset = "0xC34F54", VA = "0xC34F54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xC35028", Offset = "0xC35028", VA = "0xC35028")]
	public static DataManager GetManager()
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xC3502C", Offset = "0xC3502C", VA = "0xC3502C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xC35084", Offset = "0xC35084", VA = "0xC35084")]
	public static bool GetItemData(string inItemName, out ItemDataAssetRow outItemData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xC35170", Offset = "0xC35170", VA = "0xC35170")]
	public DataManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200013A")]
public struct ItemDataAssetRow : IDataRowInterface
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string RowName;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int SellValue;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int BuyValue;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool Sellable;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MerchantType;
}
[Token(Token = "0x200013B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FAB60", Offset = "0x9FAB60")]
public class ItemDataAsset : DataAsset
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ItemDataAssetRow> RawDataRows;

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xCF2D60", Offset = "0xCF2D60", VA = "0xCF2D60")]
	public bool GetData(string dataRowName, out ItemDataAssetRow outData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xCF2E10", Offset = "0xCF2E10", VA = "0xCF2E10", Slot = "4")]
	protected override void RepopulateDataStorage()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xCF2F9C", Offset = "0xCF2F9C", VA = "0xCF2F9C")]
	public ItemDataAsset()
	{
	}
}
[Token(Token = "0x200013C")]
public class GrabbableToolImpostor : GrabbableImpostor
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string toolName;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFF24", Offset = "0x9FFF24")]
	private Tool_Base <Tool>k__BackingField;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer rnd;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x170000D7")]
	public Tool_Base Tool
	{
		[Token(Token = "0x6000778")]
		[Address(RVA = "0xE0CA5C", Offset = "0xE0CA5C", VA = "0xE0CA5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1018C", Offset = "0xA1018C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000779")]
		[Address(RVA = "0xE0CA64", Offset = "0xE0CA64", VA = "0xE0CA64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1019C", Offset = "0xA1019C")]
		private set
		{
		}
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xE0CA6C", Offset = "0xE0CA6C", VA = "0xE0CA6C", Slot = "17")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xE0CB04", Offset = "0xE0CB04", VA = "0xE0CB04")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xE0CBD4", Offset = "0xE0CBD4", VA = "0xE0CBD4", Slot = "18")]
	public override int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xE0CBDC", Offset = "0xE0CBDC", VA = "0xE0CBDC", Slot = "20")]
	public override bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xE0CC88", Offset = "0xE0CC88", VA = "0xE0CC88", Slot = "16")]
	public override Grabbable GetRealGrabbable()
	{
		return null;
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xE0CD18", Offset = "0xE0CD18", VA = "0xE0CD18")]
	public GrabbableToolImpostor()
	{
	}
}
[Token(Token = "0x200013D")]
public class KillPlane : MonoBehaviour
{
	[Token(Token = "0x6000780")]
	[Address(RVA = "0xCF2FA4", Offset = "0xCF2FA4", VA = "0xCF2FA4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xCF32A0", Offset = "0xCF32A0", VA = "0xCF32A0")]
	public KillPlane()
	{
	}
}
[Token(Token = "0x200013E")]
public class EnvironmentLight : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200013F")]
	public struct LightData
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float LightSize;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color LightColor;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float LightViewDistance;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float LightFadeoutDistance;
	}

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightData Data;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool StartActive;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject LightVisuals;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool ToggleVisualsWithLight;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	protected bool LightActive;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnvironmentLightManager LightManagerReference;

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xC36FA8", Offset = "0xC36FA8", VA = "0xC36FA8")]
	protected EnvironmentLightManager GetLightManagerReference()
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xC37064", Offset = "0xC37064", VA = "0xC37064", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xC37180", Offset = "0xC37180", VA = "0xC37180", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xC3706C", Offset = "0xC3706C", VA = "0xC3706C")]
	public void SetLightState(bool inNewState)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xC372F0", Offset = "0xC372F0", VA = "0xC372F0")]
	public EnvironmentLight()
	{
	}
}
[Token(Token = "0x2000140")]
public class EnvironmentLightManager : MonoBehaviour
{
	[Token(Token = "0x2000141")]
	private struct EnvironmentLightRenderData
	{
		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color LightColor;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 WorldPosition;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float LightSize;
	}

	[Token(Token = "0x2000142")]
	private struct ClosestLightHelper
	{
		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int LightListID;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float LightDistanceSquared;

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xC37BE4", Offset = "0xC37BE4", VA = "0xC37BE4")]
		public static int InsertElementIntoArray(ref ClosestLightHelper[] inArray, int numEntries, int inLightListID, float inLightDistSqr)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaxVisibleLightCount;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<EnvironmentLight> LightList;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ComputeBuffer LightRenderDataBuffer;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnvironmentLight[] LightsToRender;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] LightDistancesSqr;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xC37300", Offset = "0xC37300", VA = "0xC37300")]
	public EnvironmentLightManager()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xC37394", Offset = "0xC37394", VA = "0xC37394")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xC37404", Offset = "0xC37404", VA = "0xC37404")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xC37494", Offset = "0xC37494", VA = "0xC37494")]
	public void Update()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xC37790", Offset = "0xC37790", VA = "0xC37790")]
	public void UpdateLightVisibility()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xC37B74", Offset = "0xC37B74", VA = "0xC37B74")]
	public bool HaveInvalidBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xC371A8", Offset = "0xC371A8", VA = "0xC371A8")]
	public void AddEnvironmentLight(EnvironmentLight inLight)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xC37248", Offset = "0xC37248", VA = "0xC37248")]
	public void RemoveEnvironmentLight(EnvironmentLight inLight)
	{
	}
}
[Token(Token = "0x2000143")]
public class TimeBasedEnvironmentLight : EnvironmentLight
{
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FABC8", Offset = "0x9FABC8")]
	private sealed class <WaitForDependenciesInit>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeBasedEnvironmentLight <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000798")]
			[Address(RVA = "0xCA796C", Offset = "0xCA796C", VA = "0xCA796C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xCA79D4", Offset = "0xCA79D4", VA = "0xCA79D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xCA7528", Offset = "0xCA7528", VA = "0xCA7528")]
		[DebuggerHidden]
		public <WaitForDependenciesInit>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xCA7738", Offset = "0xCA7738", VA = "0xCA7738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xCA773C", Offset = "0xCA773C", VA = "0xCA773C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xCA7974", Offset = "0xCA7974", VA = "0xCA7974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int StartHour;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int EndHour;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xCA7474", Offset = "0xCA7474", VA = "0xCA7474", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xCA74AC", Offset = "0xCA74AC", VA = "0xCA74AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA101AC", Offset = "0xA101AC")]
	private IEnumerator WaitForDependenciesInit()
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xCA7554", Offset = "0xCA7554", VA = "0xCA7554", Slot = "5")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xCA76DC", Offset = "0xCA76DC", VA = "0xCA76DC")]
	private void OnNewHourOfDay(int newHour)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xCA7724", Offset = "0xCA7724", VA = "0xCA7724")]
	public TimeBasedEnvironmentLight()
	{
	}
}
[Token(Token = "0x2000145")]
public class LostAndFound : MonoBehaviour
{
	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LostAndFound Instance;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit hitInfo;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3 PositionOutsideHouse;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly Quaternion RotationOutsideHouse;

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xCF9964", Offset = "0xCF9964", VA = "0xCF9964")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xCF99D4", Offset = "0xCF99D4", VA = "0xCF99D4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xCF9BC4", Offset = "0xCF9BC4", VA = "0xCF9BC4")]
	public static void RecoverLostObject(RecoverIfLost comp, Rigidbody rb)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xCFA7F0", Offset = "0xCFA7F0", VA = "0xCFA7F0")]
	public static void ResetPosition(RecoverIfLost comp, Rigidbody rb)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xCFA404", Offset = "0xCFA404", VA = "0xCFA404")]
	private static void MoveObject(Rigidbody rb, Vector3 groundPos, Quaternion rot, bool dropFromAbove, float yOffset = 0f)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xCFADFC", Offset = "0xCFADFC", VA = "0xCFADFC")]
	public LostAndFound()
	{
	}
}
[Token(Token = "0x2000146")]
public class LostAndFoundPosition : MonoBehaviour
{
	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<LostAndFoundPosition> positions;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int priority;

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xCFAF38", Offset = "0xCFAF38", VA = "0xCFAF38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xCFB008", Offset = "0xCFB008", VA = "0xCFB008")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xCFABDC", Offset = "0xCFABDC", VA = "0xCFABDC")]
	public static Transform GetLostAndFoundPosition()
	{
		return null;
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xCFB0D8", Offset = "0xCFB0D8", VA = "0xCFB0D8")]
	public LostAndFoundPosition()
	{
	}
}
[Token(Token = "0x2000147")]
public class ObjectSpawnLocation : MonoBehaviour
{
	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference OverrideInitialPrefabToSpawn;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE2C3AC", Offset = "0xE2C3AC", VA = "0xE2C3AC")]
	public ObjectSpawnLocation()
	{
	}
}
[Token(Token = "0x2000148")]
public class RandomObjectSpawner : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000149")]
	public class SpawnPoint
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPoint posAndRot;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpawnedObject spawnedObj;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoilSurface soilSurface;
	}

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AssetReference> prefabsToSpawn;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SpawnPoint> spawnPoints;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float timeBetweenSpawns;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxNumberOfSpawnedObjectsInWorld;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SpawnPoint> freeSpawnPoints;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Queue<SpawnPoint> spawnPointsPendingSpawn;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SpawnedObject> spawnedObjects;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ObjectSpawnLocation[] ValidSpawnLocationComponents;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private OrientedPoint[] ValidSpawnPoints;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SpawnedObject[] SpawnedObjectList;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> FreeSpawnPointIDs;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float timer;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool HavePendingSpawn;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int PendingSpawnPoint;

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xC6C970", Offset = "0xC6C970", VA = "0xC6C970")]
	private void FetchValidSpawnPoints()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xC6CC50", Offset = "0xC6CC50", VA = "0xC6CC50", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xC6D500", Offset = "0xC6D500", VA = "0xC6D500")]
	private void Update()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xC6D5D0", Offset = "0xC6D5D0", VA = "0xC6D5D0")]
	private bool TrySpawnObject()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xC6D9F8", Offset = "0xC6D9F8", VA = "0xC6D9F8")]
	private void OnObjectSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xC6DB30", Offset = "0xC6DB30", VA = "0xC6DB30")]
	public void RemoveSpawnedObject(SpawnedObject so)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xC6DC68", Offset = "0xC6DC68", VA = "0xC6DC68")]
	public void RemoveSpawnedObject(int inSpawnObjectID)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xC6D27C", Offset = "0xC6D27C", VA = "0xC6D27C")]
	public void SpawnAllObjects()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xC6DCB8", Offset = "0xC6DCB8", VA = "0xC6DCB8")]
	private void OnAllObjectsSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xC6DDEC", Offset = "0xC6DDEC", VA = "0xC6DDEC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xC6E190", Offset = "0xC6E190", VA = "0xC6E190")]
	public RandomObjectSpawner()
	{
	}
}
[Serializable]
[Token(Token = "0x200014A")]
public class RandomObjectSpawnerState : ComponentState
{
	[Serializable]
	[Token(Token = "0x200014B")]
	public struct SpawnPointSaveData
	{
		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SaveID ObjectSaveID;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPointSerializable OrientedSpawnPoint;
	}

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SpawnPointSaveData[] SpawnSaveDatas;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeBetweenSpawns;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReferenceSerializable[] PrefabsToSpawn;

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xC6DE74", Offset = "0xC6DE74", VA = "0xC6DE74")]
	public RandomObjectSpawnerState(OrientedPoint[] inValidSpawnPoints, SpawnedObject[] inSpawnedObjectList, List<AssetReference> inPrefabsToSpawn, float inTimeBetweenSpawns)
	{
	}
}
[Token(Token = "0x200014C")]
public class SpawnedObject : SaveableComponent
{
	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RandomObjectSpawner SpawnerReference;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int SpawnerObjectID;

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xCEC7E0", Offset = "0xCEC7E0", VA = "0xCEC7E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xCEC878", Offset = "0xCEC878", VA = "0xCEC878")]
	public void SetSpawner(RandomObjectSpawner inSpawner, int ObjectID)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xCEC8A8", Offset = "0xCEC8A8", VA = "0xCEC8A8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xCEC904", Offset = "0xCEC904", VA = "0xCEC904")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x200014D")]
public class Ocean : MonoBehaviour
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MeshRadius;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int CirclePoints;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh GeneratedMesh;

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE2D24C", Offset = "0xE2D24C", VA = "0xE2D24C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xE2D26C", Offset = "0xE2D26C", VA = "0xE2D26C")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xE2D604", Offset = "0xE2D604", VA = "0xE2D604")]
	public Ocean()
	{
	}
}
[Token(Token = "0x200014E")]
public class OceanWaveParticles : MonoBehaviour
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particleSystem;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem innerParticleSystem;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnRate;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDistance;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distLifeTimeMultiplier;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distSizeMultiplier;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float startLifeTimeMin;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float startLifeTimeMax;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float startSizeMin;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float startSizeMax;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float playerTeleportDistance;

	[Token(Token = "0x400070A")]
	private const int instaspawnCount = 60;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float spawnTime;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initialized;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ParticleSystem.MainModule mainModuleInner;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] lifetimes;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 previousPlayerOrigin;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xE2DA54", Offset = "0xE2DA54", VA = "0xE2DA54")]
	private void Start()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xE2DAB4", Offset = "0xE2DAB4", VA = "0xE2DAB4")]
	private void ResetWaves()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xE2E050", Offset = "0xE2E050", VA = "0xE2E050")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xE2DC98", Offset = "0xE2DC98", VA = "0xE2DC98")]
	private void SpawnWave()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xE2E298", Offset = "0xE2E298", VA = "0xE2E298")]
	public OceanWaveParticles()
	{
	}
}
[Token(Token = "0x200014F")]
public class RecoverIfLost : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000150")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FABD8", Offset = "0x9FABD8")]
	private sealed class <ResetPositionAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RecoverIfLost <>4__this;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Grabbable grabbable;

		[Token(Token = "0x170000DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xC73CFC", Offset = "0xC73CFC", VA = "0xC73CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xC73D64", Offset = "0xC73D64", VA = "0xC73D64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xC73958", Offset = "0xC73958", VA = "0xC73958")]
		[DebuggerHidden]
		public <ResetPositionAfterDelay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xC73B38", Offset = "0xC73B38", VA = "0xC73B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xC73B3C", Offset = "0xC73B3C", VA = "0xC73B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xC73D04", Offset = "0xC73D04", VA = "0xC73D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FFF84", Offset = "0x9FFF84")]
	private OrientedPoint <OriginalPositionAndRotation>k__BackingField;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SaveID originalBundle;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine resetAfterDelayRoutine;

	[Token(Token = "0x170000DA")]
	public OrientedPoint OriginalPositionAndRotation
	{
		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC73244", Offset = "0xC73244", VA = "0xC73244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10260", Offset = "0xA10260")]
		get
		{
			return default(OrientedPoint);
		}
		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xC7325C", Offset = "0xC7325C", VA = "0xC7325C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10270", Offset = "0xA10270")]
		private set
		{
		}
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xC73274", Offset = "0xC73274", VA = "0xC73274", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xC7356C", Offset = "0xC7356C", VA = "0xC7356C")]
	public bool HasValidPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xC73780", Offset = "0xC73780", VA = "0xC73780")]
	public void ResetAfterDelay(float delay, Grabbable grabbable)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xC738B0", Offset = "0xC738B0", VA = "0xC738B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10280", Offset = "0xA10280")]
	private IEnumerator ResetPositionAfterDelay(float delay, Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xC73984", Offset = "0xC73984", VA = "0xC73984")]
	public void OnGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xC73A7C", Offset = "0xC73A7C", VA = "0xC73A7C")]
	public void DidResetPosition()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xC73B30", Offset = "0xC73B30", VA = "0xC73B30")]
	public RecoverIfLost()
	{
	}
}
[Token(Token = "0x2000151")]
public class ShowObjectBasedOnPlatform : MonoBehaviour
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject viveObject;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject oculusObject;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject indexObject;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject pico3Object;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pico4Object;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject defaultObject;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject[] allObjects;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xCDDB18", Offset = "0xCDDB18", VA = "0xCDDB18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xCDDDD4", Offset = "0xCDDDD4", VA = "0xCDDDD4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xCDE1C0", Offset = "0xCDE1C0", VA = "0xCDE1C0")]
	public ShowObjectBasedOnPlatform()
	{
	}
}
[Token(Token = "0x2000152")]
public class SkySphere : MonoBehaviour
{
	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MeshRadius;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SphereSegments;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int SegmentResolution;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh GeneratedMesh;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xCDE8D0", Offset = "0xCDE8D0", VA = "0xCDE8D0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xCDE8E8", Offset = "0xCDE8E8", VA = "0xCDE8E8")]
	public void GenerateMesh()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xCDE900", Offset = "0xCDE900", VA = "0xCDE900")]
	public SkySphere()
	{
	}
}
[Token(Token = "0x2000153")]
[ExecuteInEditMode]
public class TutorialRunestone : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FABF8", Offset = "0x9FABF8")]
	private sealed class <MossFadeoutLoop>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialRunestone <>4__this;

		[Token(Token = "0x170000DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0x1AE4198", Offset = "0x1AE4198", VA = "0x1AE4198", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0x1AE4200", Offset = "0x1AE4200", VA = "0x1AE4200", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1AE3F74", Offset = "0x1AE3F74", VA = "0x1AE3F74")]
		[DebuggerHidden]
		public <MossFadeoutLoop>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1AE408C", Offset = "0x1AE408C", VA = "0x1AE408C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x1AE4090", Offset = "0x1AE4090", VA = "0x1AE4090", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1AE41A0", Offset = "0x1AE41A0", VA = "0x1AE41A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FFF94", Offset = "0x9FFF94")]
	public float MossVisibility;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MossMaxHeight;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FFFAC", Offset = "0x9FFFAC")]
	public float MossHeightPercent;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FFFC4", Offset = "0x9FFFC4")]
	public float MossNoiseModifierStrength;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9FFFDC", Offset = "0x9FFFDC")]
	public float MossNoiseMultiplier;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve MossVisibilityCurve;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MossFadeoutDuration;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float MossFadeoutTimer;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool HaveTriggeredFadeout;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int MossMaxHeightParamID;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int MossHeightPercentParamID;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int MossNoiseModifierStrengthParamID;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int MossNoiseMultiplierParamID;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Renderer CachedRenderer;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock CachedPropertyBlock;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine FadeoutRoutine;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1AE3B2C", Offset = "0x1AE3B2C", VA = "0x1AE3B2C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1AE3E88", Offset = "0x1AE3E88", VA = "0x1AE3E88")]
	public void TriggerMossFadeout()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1AE3EF8", Offset = "0x1AE3EF8", VA = "0x1AE3EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10334", Offset = "0xA10334")]
	private IEnumerator MossFadeoutLoop()
	{
		return null;
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1AE3BC4", Offset = "0x1AE3BC4", VA = "0x1AE3BC4")]
	private void CacheRenderer()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1AE3D20", Offset = "0x1AE3D20", VA = "0x1AE3D20")]
	private void ApplyMaterialParams()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1AE3FA0", Offset = "0x1AE3FA0", VA = "0x1AE3FA0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1AE4068", Offset = "0x1AE4068", VA = "0x1AE4068")]
	public TutorialRunestone()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class TutorialRunestoneComponentState : ComponentState
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float MossVisibility;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool HaveTriggeredFadeout;

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1AE4020", Offset = "0x1AE4020", VA = "0x1AE4020")]
	public TutorialRunestoneComponentState(float inMossVisibility, bool inHaveTriggeredFadeout)
	{
	}
}
[Token(Token = "0x2000156")]
public class Water : MonoBehaviour
{
	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameObject Ocean;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1AE5CAC", Offset = "0x1AE5CAC", VA = "0x1AE5CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1AE5D6C", Offset = "0x1AE5D6C", VA = "0x1AE5D6C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1AE5E28", Offset = "0x1AE5E28", VA = "0x1AE5E28")]
	public Water()
	{
	}
}
[Token(Token = "0x2000157")]
public class WaterGleamEffect : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000158")]
	public struct Remappable
	{
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float iMin;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float iMax;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float oMin;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float oMax;
	}

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeInAngle;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeOutAngle;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnOffAngle;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject localGleam;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject distantGleam;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh distantGleamMesh;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Remappable gleamWaveSize;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Remappable gleamWaveSpeed;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Remappable gleamScale;

	[NonSerialized]
	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float shadertime;

	[NonSerialized]
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float wavesize;

	[NonSerialized]
	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float angle;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1AE70D4", Offset = "0x1AE70D4", VA = "0x1AE70D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x1AE72B4", Offset = "0x1AE72B4", VA = "0x1AE72B4")]
	public void UpdateGleamEffectValues(float dt, Transform directionalLight, float dist, Vector3 cameraPos, float oceandepth)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1AE7668", Offset = "0x1AE7668", VA = "0x1AE7668")]
	public WaterGleamEffect()
	{
	}
}
[Token(Token = "0x2000159")]
public class WaterSplash : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem waterSplash;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1AE7684", Offset = "0x1AE7684", VA = "0x1AE7684")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1AE76B4", Offset = "0x1AE76B4", VA = "0x1AE76B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1AE7780", Offset = "0x1AE7780", VA = "0x1AE7780")]
	private void SplashAt(Vector3 pos)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1AE7874", Offset = "0x1AE7874", VA = "0x1AE7874")]
	public WaterSplash()
	{
	}
}
[Token(Token = "0x200015A")]
public class BambooStem : SaveableComponent, IInitializable
{
	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 leafPoint;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AttachSlot attachSlot;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x10045D4", Offset = "0x10045D4", VA = "0x10045D4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1004638", Offset = "0x1004638", VA = "0x1004638", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1004870", Offset = "0x1004870", VA = "0x1004870")]
	public void OnStash()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1004A2C", Offset = "0x1004A2C", VA = "0x1004A2C")]
	public void OnUnStash()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1004878", Offset = "0x1004878", VA = "0x1004878")]
	public void ToggleVisibilityOfAttachedObjects(bool visible)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1004A34", Offset = "0x1004A34", VA = "0x1004A34")]
	public BambooStem()
	{
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class BambooStemState : ComponentState
{
	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1004630", Offset = "0x1004630", VA = "0x1004630")]
	public BambooStemState()
	{
	}
}
[Token(Token = "0x200015C")]
[ExecuteInEditMode]
public class GradientColorer : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int shPropLevelsMin;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int shPropLevelsMax;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int patternProperty;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int patternStrengthProperty;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int patternColorProperty;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static List<GradientColorer> all;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantColors defaultColors;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PaintColor paint;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA00058", Offset = "0xA00058")]
	public float paintLevelsMin;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA00070", Offset = "0xA00070")]
	public float paintLevelsMax;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color currentHighlight;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentShadow;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CacheReferenceAttribute", RVA = "0xA00088", Offset = "0xA00088")]
	[SerializeField]
	private Renderer meshRenderer;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private LODGroup lodGroup;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static MaterialPropertyBlock mpb;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool hasCreatedMpb;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlantColors colors;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool initialized;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	private bool m_hasDynamicPattern;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CreaturePattern m_pattern;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color m_patternColor;

	[Token(Token = "0x170000DF")]
	public Color Highlight
	{
		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xE0CEF4", Offset = "0xE0CEF4", VA = "0xE0CEF4")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170000E0")]
	public Color Shadow
	{
		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xE0CF00", Offset = "0xE0CF00", VA = "0xE0CF00")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170000E1")]
	public PlantColors CurrentColors
	{
		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xE0CF0C", Offset = "0xE0CF0C", VA = "0xE0CF0C")]
		get
		{
			return default(PlantColors);
		}
	}

	[Token(Token = "0x170000E2")]
	public bool Initialized
	{
		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xE0CF24", Offset = "0xE0CF24", VA = "0xE0CF24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xE0CF2C", Offset = "0xE0CF2C", VA = "0xE0CF2C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xE0D044", Offset = "0xE0D044", VA = "0xE0D044")]
	public void ApplyPaintColors(Color32 highlight, Color32 shadow)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xE0D45C", Offset = "0xE0D45C", VA = "0xE0D45C")]
	public void RemovePaint()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xE0D4A8", Offset = "0xE0D4A8", VA = "0xE0D4A8")]
	public void SetColors(Color dark, Color mid, Color bright)
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xE0D02C", Offset = "0xE0D02C", VA = "0xE0D02C")]
	public void SetColors(PlantColors newColors)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xE0D554", Offset = "0xE0D554", VA = "0xE0D554")]
	public void SetToDefaultColors()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xE0D090", Offset = "0xE0D090", VA = "0xE0D090")]
	public void ApplyColorsToMesh()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xE0D570", Offset = "0xE0D570", VA = "0xE0D570")]
	public void SetCreaturePattern(CreaturePattern creaturePattern, Color color)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xE0D5C8", Offset = "0xE0D5C8", VA = "0xE0D5C8")]
	public GradientColorer()
	{
	}
}
[Serializable]
[Token(Token = "0x200015D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9FAC18", Offset = "0x9FAC18")]
public struct PlantColors
{
	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color dark;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color mid;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color bright;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] shaderPropIds;

	[Token(Token = "0x170000E3")]
	public Color Item
	{
		[Token(Token = "0x6000804")]
		[Address(RVA = "0xAD80A8", Offset = "0xAD80A8", VA = "0xAD80A8")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000805")]
		[Address(RVA = "0xAD80B0", Offset = "0xAD80B0", VA = "0xAD80B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xAD8084", Offset = "0xAD8084", VA = "0xAD8084")]
	public PlantColors(Color dark, Color mid, Color bright)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xAD80A0", Offset = "0xAD80A0", VA = "0xAD80A0")]
	public void ApplyTo(MaterialPropertyBlock mpb)
	{
	}
}
[Token(Token = "0x200015E")]
public class GradientColorerHighPrio : GradientColorer
{
	[Token(Token = "0x6000807")]
	[Address(RVA = "0xE0D7CC", Offset = "0xE0D7CC", VA = "0xE0D7CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xE0D7D0", Offset = "0xE0D7D0", VA = "0xE0D7D0")]
	public GradientColorerHighPrio()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FAC50", Offset = "0x9FAC50")]
public class PlantGrowthSettings : ScriptableObject
{
	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00158", Offset = "0xA00158")]
	public float globalBaseGrowthRate;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA00190", Offset = "0xA00190")]
	public float growthTickInterval;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA001C8", Offset = "0xA001C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA001C8", Offset = "0xA001C8")]
	public float soilnessRequiredForSowing;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0021C", Offset = "0xA0021C")]
	public float waterLevelNeededToSprout;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float averageSproutingDelay;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA00234", Offset = "0xA00234")]
	public float sproutingDelayVariation;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeFromBudToFlower;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeFromFlowerToFruit;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0026C", Offset = "0xA0026C")]
	public float defaultShadeTolerance;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float defaultLightTolerance;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float defaultDroughtTolerance;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float defaultWaterTolerance;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA002A4", Offset = "0xA002A4")]
	public float yPosOfRootVeg;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float defaultHeightVariability;

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xDEC180", Offset = "0xDEC180", VA = "0xDEC180")]
	public PlantGrowthSettings()
	{
	}
}
[Token(Token = "0x2000160")]
public enum FlowerState
{
	[Token(Token = "0x4000777")]
	None,
	[Token(Token = "0x4000778")]
	Bud,
	[Token(Token = "0x4000779")]
	Flower,
	[Token(Token = "0x400077A")]
	Fruit
}
[Token(Token = "0x2000161")]
public class FlowerHead : PlantPart
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FlowerState state;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public AssetReference budAssetRef;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public AssetReference flowerAssetRef;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public AssetReference fruitAssetRef;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float flowerToFruit;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1085034", Offset = "0x1085034", VA = "0x1085034")]
	public FlowerHead()
	{
	}
}
[Token(Token = "0x2000162")]
public class PlantPart : MonoBehaviour
{
	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float currentScale;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 modifiedScale;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh refSharedMesh;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GradientColorer ColorerComponent;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer[] MeshRendererComponents;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float PartGrowth;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool PlantPartDataDirty;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool PartVisible;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Matrix4x4 PartToRootMatrix;

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xDEF404", Offset = "0xDEF404", VA = "0xDEF404")]
	public void OnBecameInvisible()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xDEF40C", Offset = "0xDEF40C", VA = "0xDEF40C")]
	public void OnBecameVisible()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xDEF430", Offset = "0xDEF430", VA = "0xDEF430", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xDEF570", Offset = "0xDEF570", VA = "0xDEF570", Slot = "5")]
	public virtual void UpdateMesh(bool forceUpdate = false)
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xDEF680", Offset = "0xDEF680", VA = "0xDEF680", Slot = "6")]
	protected virtual void ApplyAdditionalMeshDataForUpdate(MaterialPropertyBlock PropertyBlock)
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xDEF684", Offset = "0xDEF684", VA = "0xDEF684", Slot = "7")]
	public virtual void PartGrowthFinished()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xDEF6A8", Offset = "0xDEF6A8", VA = "0xDEF6A8")]
	public PlantPart()
	{
	}
}
[Token(Token = "0x2000163")]
public class PlantSettingsManager : MonoBehaviour
{
	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlantSettingsManager instance;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float avgSproutDelay;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float sproutDelayVar;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float waterLevelToSprout;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float soilnessReq;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private PlantGrowthSettings buildSettings;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AssetReference seedBase;

	[Token(Token = "0x170000E4")]
	public static PlantSettingsManager Instance
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0xDFA1B8", Offset = "0xDFA1B8", VA = "0xDFA1B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xDFA1B0", Offset = "0xDFA1B0", VA = "0xDFA1B0")]
	private PlantSettingsManager()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xDFA290", Offset = "0xDFA290", VA = "0xDFA290")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xDFA2F0", Offset = "0xDFA2F0", VA = "0xDFA2F0")]
	private void InitSettings()
	{
	}
}
[Token(Token = "0x2000164")]
public struct PlantCullingData
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int ProxyID;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 PlantPosition;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float PlantRadius;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool PlantVisible;
}
[Token(Token = "0x2000165")]
public class PlantCullingSystem : PlantSystemBase
{
	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> ActiveProxyIDs;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, int> ActivePlantCullingDataIDs;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DynamicNativeArray<PlantCullingData> PlantCullingDataStorage;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NativeArray<int> CullDataIndices;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NativeArray<int> PlantNeedsRenderUpdateFlags;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int NumParallelCullJobs;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int FinalCullJobIterations;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool ShouldUpdateCullDataIndices;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool HavePendingCullJobs;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private JobHandle CullJobsHandle;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int NumIntBits;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool DisablePlantCulling;

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xDEB154", Offset = "0xDEB154", VA = "0xDEB154")]
	public PlantCullingSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xDEB264", Offset = "0xDEB264", VA = "0xDEB264", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xDEB940", Offset = "0xDEB940", VA = "0xDEB940")]
	public void UpdatePlantRenderStates()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xDEBAD8", Offset = "0xDEBAD8", VA = "0xDEBAD8", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xDEBBA0", Offset = "0xDEBBA0", VA = "0xDEBBA0")]
	public void SetPlantRenderingEnabled(int inProxyID, bool newEnabled, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xDEBC80", Offset = "0xDEBC80", VA = "0xDEBC80")]
	public void AddPlantCullingData(int inProxyID, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xDEBEA8", Offset = "0xDEBEA8", VA = "0xDEBEA8")]
	public void RemovePlantCullingData(int inProxyID)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xDEC034", Offset = "0xDEC034", VA = "0xDEC034")]
	public void UpdateCullingDataPosition(int inProxyID, Vector3 inPlantPosition)
	{
	}
}
[Token(Token = "0x2000166")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FACBC", Offset = "0x9FACBC")]
public struct PlantCullJob : IJobParallelFor
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe int* DataIndicesBufferPtr;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe int* PlantNeedsRenderUpdateFlagsPtr;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantCullingData* CullDataStoragePtr;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NumCameras;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[DeallocateOnJobCompletion]
	[Unity.Collections.ReadOnly]
	public NativeArray<Vector3> CameraPositions;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[DeallocateOnJobCompletion]
	[Unity.Collections.ReadOnly]
	public NativeArray<Vector3> CameraForwards;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[DeallocateOnJobCompletion]
	[Unity.Collections.ReadOnly]
	public NativeArray<float> CameraMaxViewAngles;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int NumParallelCullJobs;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int FinalCullJobIterations;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool DisablePlantCulling;

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xAD80F4", Offset = "0xAD80F4", VA = "0xAD80F4", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x2000167")]
public class PlantGrowthSystem : PlantSystemBase
{
	[Token(Token = "0x2000168")]
	private struct ProxyGrowthData
	{
		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool HaveValidProxy;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ProxyID;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int SoilSurfaceID;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsGrowing;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int GrowthListIndex;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ResourceDataID;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CachedProxyShrivel;

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xAD85BC", Offset = "0xAD85BC", VA = "0xAD85BC")]
		public void SetIsGrowing(bool inIsGrowing, int inGrowthListID = -1)
		{
		}
	}

	[Token(Token = "0x2000169")]
	public struct ProxyGrowthRuntimeData
	{
		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool HaveValidData;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ProxyID;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ProxyPartCount;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ProxyGrowth;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public unsafe PlantPartGrowthData* CachedDataPtr;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TotalGrowthDuration;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SoilSurfaceID;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 SoilSurfaceLocation;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool OnUntillableSoilSurface;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int ResourceDataID;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PlantShrivel;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CurrentSoilWaterness;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool HaveFertilizer;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public PlantGrowthResult LastGrowthResult;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int DirtPileID;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int TillabilityCheckID;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float AdditionalTimeSinceLastGrowth;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float MossCover;
	}

	[Token(Token = "0x200016A")]
	private struct PlantResourceData_Native
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float TimeToPickable;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Waterings;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int NumberOfPieces;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SeedsPerBag;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float FertilizerEfficiency;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float FertilizerWaterConsumptionMultiplier;
	}

	[Token(Token = "0x200016B")]
	public struct SoilSurfaceData
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public unsafe SurfaceData.TexelData* DataBufferPtr;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2Int SurfaceTextureSize;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HaveUntillableAreas;
	}

	[Token(Token = "0x200016C")]
	public enum PlantGrowthResult
	{
		[Token(Token = "0x40007DB")]
		NoWater,
		[Token(Token = "0x40007DC")]
		MossCovered,
		[Token(Token = "0x40007DD")]
		WaitingForValueCheck,
		[Token(Token = "0x40007DE")]
		Success
	}

	[Token(Token = "0x200016D")]
	private struct PlantGrowthJobResults
	{
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int GrowthDataID;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool HaveWater;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool HaveFertilizer;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool OnUntillableSoil;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public bool HavePendingValueCheck;
	}

	[Token(Token = "0x200016E")]
	private struct PlantGrowthCurveCache
	{
		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlantPartGrowthCurveCache[] GrowthCurveCaches;
	}

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoilModificationManager SoilModManager;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlantResourceData> ResourceDataList;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PlantGrowthCurveCache> PlantGrowthCurves;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DynamicNativeArray<PlantResourceData_Native> NativeResourceData;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private DynamicNativeArray<ProxyGrowthData> ProxyGrowthDataArray;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DynamicNativeArray<ProxyGrowthRuntimeData> ActiveProxyGrowthData;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private DynamicNativeArray<SoilSurfaceData> SoilSurfaceDataArray;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DynamicNativeArray<JobHandle> PendingGrowthJobs;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public DynamicNativeArray<SoilResourceJobPayload> PendingGrowthJobsPayload;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private DynamicNativeArray<int> PendingGrowthJobsDataID;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DynamicNativeArray<PlantGrowthJobResults> LastFrameJobResults;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float LastFrameDeltaTime;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float GlobalGrowthMultiplier;

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xDEC1BC", Offset = "0xDEC1BC", VA = "0xDEC1BC")]
	public PlantGrowthSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xDEC578", Offset = "0xDEC578", VA = "0xDEC578", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xDECEC8", Offset = "0xDECEC8", VA = "0xDECEC8", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xDECFA8", Offset = "0xDECFA8", VA = "0xDECFA8")]
	public int FetchPrefabDataResourceID(PlantPrefabData inPrefabData)
	{
		return default(int);
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xDED19C", Offset = "0xDED19C", VA = "0xDED19C")]
	public void SetProxyGrowing(PlantPositionProxy inProxy, bool newIsGrowing)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xDED97C", Offset = "0xDED97C", VA = "0xDED97C")]
	public bool GetProxyIsGrowing(int inProxyID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xDED9F8", Offset = "0xDED9F8", VA = "0xDED9F8")]
	public void FetchCurrentProxyGrowth(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xDEDACC", Offset = "0xDEDACC", VA = "0xDEDACC")]
	public void SetProxyDirtPileID(int inProxyID, int inDirtPileID)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xDEC5BC", Offset = "0xDEC5BC", VA = "0xDEC5BC")]
	private void ProcessPendingJobResults()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xDEDB78", Offset = "0xDEDB78", VA = "0xDEDB78")]
	private float CalculateGrowth(ref PlantResourceData_Native resourceData, ref ProxyGrowthRuntimeData currentRuntimeDataRef, bool hasFertilizer)
	{
		return default(float);
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xDEC7F4", Offset = "0xDEC7F4", VA = "0xDEC7F4")]
	public void UpdateGrowth()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xDEE2D8", Offset = "0xDEE2D8", VA = "0xDEE2D8")]
	private unsafe void QueuePlantGrowthJobs(in ProxyGrowthRuntimeData* inGrowthDataPtr, in int inGrowthDataID, float inRequiredWaterAmount, float inRequiredFertilizerAmount)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xDECEB4", Offset = "0xDECEB4", VA = "0xDECEB4")]
	private void UpdateSoil()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xDEDF28", Offset = "0xDEDF28", VA = "0xDEDF28")]
	private unsafe static void UpdateProxyGrowthRenderData(PlantGrowthSystem growthSystem, float currentProxyGrowth, float currentProxyShrivel, int plantPartCount, PlantPartGrowthData* plantGrowthDataPtr, PlantProxyRenderData* plantRenderDataPtr, in PlantRenderSystemData renderSystemData, int plantResourceID)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xDEE0DC", Offset = "0xDEE0DC", VA = "0xDEE0DC")]
	private unsafe static void LerpProxyPartColors(float colorLerpVal, Color targetColor, int plantPartCount, PlantPartGrowthData* plantGrowthDataPtr, PlantProxyRenderData* plantRenderDataPtr, in PlantRenderSystemData renderSystemData)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xDEE720", Offset = "0xDEE720", VA = "0xDEE720")]
	private unsafe static void ResetProxyPartColors(int plantPartCount, PlantPartGrowthData* plantGrowthDataPtr, PlantProxyRenderData* plantRenderDataPtr, in PlantRenderSystemData renderSystemData)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xDED794", Offset = "0xDED794", VA = "0xDED794")]
	public void ForceProxyGrowthValue(PlantPositionProxy inProxy, float inProxyGrowthValue, bool useCachedShrivel = false)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xDEDD60", Offset = "0xDEDD60", VA = "0xDEDD60")]
	private unsafe void SetProxyGrowthFinished(PlantPositionProxy plantProxy, ProxyGrowthRuntimeData* growthRuntimeDataPtr, int proxyPartCount)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xDEEDCC", Offset = "0xDEEDCC", VA = "0xDEEDCC")]
	public void RegisterProxy(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xDEEEC4", Offset = "0xDEEEC4", VA = "0xDEEEC4")]
	public void DeregisterProxy(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xDEEF88", Offset = "0xDEEF88", VA = "0xDEEF88")]
	public void RegisterSoilSurface(SoilSurfaceGround groundSurface)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xDEF0DC", Offset = "0xDEF0DC", VA = "0xDEF0DC")]
	public void RegisterSimpleSoilSurface(SoilSurfaceSimple surface)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xDEF1D8", Offset = "0xDEF1D8", VA = "0xDEF1D8")]
	public void DeregisterSoilSurface(SoilSurface surface)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xDEF29C", Offset = "0xDEF29C", VA = "0xDEF29C")]
	public void UpdateSoilSurfaceData(SoilSurfaceGround groundSurface)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xDEE538", Offset = "0xDEE538", VA = "0xDEE538")]
	public float GetGrowthValueFromCurveCache(float inGrowthValue, int inPlantResourceID, int inPlantPartCurveID)
	{
		return default(float);
	}
}
[Token(Token = "0x200016F")]
public struct PlantPartGrowthData
{
	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GrowthStart;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float GrowthDistance;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int RenderDataIndex;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool IsDirtPile;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int PartGrowthCurveID;
}
[Token(Token = "0x2000170")]
[ExecuteInEditMode]
public class PlantPositionProxy : PlantSystemIndexable, IInitializable
{
	[Token(Token = "0x2000171")]
	private struct SubPlantIndexRange
	{
		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int StartIndex;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int EndIndex;
	}

	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FAD00", Offset = "0x9FAD00")]
	private sealed class <PlantWindStateLerp>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlantPositionProxy <>4__this;

		[Token(Token = "0x170000E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xDF54A8", Offset = "0xDF54A8", VA = "0xDF54A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0xDF5510", Offset = "0xDF5510", VA = "0xDF5510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xDF324C", Offset = "0xDF324C", VA = "0xDF324C")]
		[DebuggerHidden]
		public <PlantWindStateLerp>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xDF5334", Offset = "0xDF5334", VA = "0xDF5334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xDF5338", Offset = "0xDF5338", VA = "0xDF5338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xDF54B0", Offset = "0xDF54B0", VA = "0xDF54B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AssetReference PlantPrefabDataReference;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public NativeArray<PlantPartGrowthData> CachedGrowthData;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PlantSubPartProxy[] SpawnedSubPartProxies;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool ShouldUpdateGrowthData;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CapsuleCollider CollisionCollider;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SaveID PlantedSurfaceID;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool RequireSoilSurfaceForGrowth;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool HaveValidSoilPosition;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SoilSurface HoveredSoilSurface;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 HoveredSoliPosition;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool ProxyGrowthFinished;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool HavePendingProxySplit;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool HaveGeneratedFinalGrowthData;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SaveID PlantSaveID;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool IsRootVegetable;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool HaveFlowerHeads;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool InDropZone;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int NumberOfSubPartsToSpawn;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private SoilValueCheckHelper PendingValueCheck;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float CachedSoilValue;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Grabbable ProxyGrabbable;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool HaveCustomSoilPatchPosition;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00424", Offset = "0xA00424")]
	private bool <HasFinishedGrowing>k__BackingField;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float TargetWindState;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float InitialWindState;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float WindStateLerpDuration;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float WindStateLerpTimer;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float WindStateCoroutineLastTimestamp;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private SubPlantIndexRange[] subArrayIndexes;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool isSpawningSubPartProxies;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	private bool m_initialized;

	[Token(Token = "0x170000E5")]
	public bool HasFinishedGrowing
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0xDEF6B8", Offset = "0xDEF6B8", VA = "0xDEF6B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA103E8", Offset = "0xA103E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600083B")]
		[Address(RVA = "0xDEF6C0", Offset = "0xDEF6C0", VA = "0xDEF6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA103F8", Offset = "0xA103F8")]
		private set
		{
		}
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xDEF6CC", Offset = "0xDEF6CC", VA = "0xDEF6CC", Slot = "6")]
	public override bool CanEverGrow()
	{
		return default(bool);
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xDEF6D4", Offset = "0xDEF6D4", VA = "0xDEF6D4", Slot = "7")]
	public override bool HaveValidGrowthPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xDEF714", Offset = "0xDEF714", VA = "0xDEF714", Slot = "8")]
	public override bool HaveValidData()
	{
		return default(bool);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xDEF784", Offset = "0xDEF784", VA = "0xDEF784", Slot = "16")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xDEF870", Offset = "0xDEF870", VA = "0xDEF870", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xDEFC74", Offset = "0xDEFC74", VA = "0xDEFC74", Slot = "20")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xDF07F8", Offset = "0xDF07F8", VA = "0xDF07F8", Slot = "11")]
	public override void SetRenderingActive(bool newRenderingActive)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xDF0990", Offset = "0xDF0990", VA = "0xDF0990", Slot = "9")]
	public override void GatherRenderData()
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xDF0A60", Offset = "0xDF0A60", VA = "0xDF0A60", Slot = "10")]
	protected override void GenerateCachedRenderData()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xDEE820", Offset = "0xDEE820", VA = "0xDEE820")]
	public void DisableCachedRenderDataShrivel()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xDED584", Offset = "0xDED584", VA = "0xDED584")]
	public void GenerateCachedGrowthData()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xDF1970", Offset = "0xDF1970", VA = "0xDF1970", Slot = "12")]
	public override void PlantUpdate()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xDF22DC", Offset = "0xDF22DC", VA = "0xDF22DC", Slot = "13")]
	public override void UpdateRenderTransforms()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xDF2500", Offset = "0xDF2500", VA = "0xDF2500", Slot = "14")]
	public override void OnProxyGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xDF29D8", Offset = "0xDF29D8", VA = "0xDF29D8", Slot = "15")]
	public override void OnProxyDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xDF2ED8", Offset = "0xDF2ED8", VA = "0xDF2ED8")]
	public void OnParentGrabbed(Grabbable parent)
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xDF3030", Offset = "0xDF3030", VA = "0xDF3030")]
	public void OnParentDropped(Grabbable parent)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xDEEB88", Offset = "0xDEEB88", VA = "0xDEEB88")]
	public void SetPlantWindState(float newWindState, bool stopLerpCoroutine = true)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xDEEB38", Offset = "0xDEEB38", VA = "0xDEEB38")]
	public void LerpPlantWindState(float targetWindState, float lerpDuration)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xDF31D0", Offset = "0xDF31D0", VA = "0xDF31D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10408", Offset = "0xA10408")]
	private IEnumerator PlantWindStateLerp()
	{
		return null;
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xDF3278", Offset = "0xDF3278", VA = "0xDF3278")]
	public void SetHighlightForWholePlant(float newHighlight)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xDEECD4", Offset = "0xDEECD4", VA = "0xDEECD4")]
	public void UpdateGrabbableState()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xDEE8C8", Offset = "0xDEE8C8", VA = "0xDEE8C8")]
	public void GenerateSubPartProxies()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xDF3738", Offset = "0xDF3738", VA = "0xDF3738")]
	public void OnSubPartProxiesSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xDEECBC", Offset = "0xDEECBC", VA = "0xDEECBC")]
	public void OnFinishedGrowing()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xDF48B4", Offset = "0xDF48B4", VA = "0xDF48B4")]
	private void PlayFinishedSound()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xDF336C", Offset = "0xDF336C", VA = "0xDF336C")]
	public bool AreAllSpawnedSubPartProxiesDetached()
	{
		return default(bool);
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xDF495C", Offset = "0xDF495C", VA = "0xDF495C", Slot = "19")]
	public override void InitializeComponentData(in PlantPrefabData dataForInit)
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xDF50D0", Offset = "0xDF50D0", VA = "0xDF50D0")]
	public void OnDropZoneBeginHover()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xDF50DC", Offset = "0xDF50DC", VA = "0xDF50DC")]
	public void OnDropZoneEndHover()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xDF2CAC", Offset = "0xDF2CAC", VA = "0xDF2CAC")]
	public bool AttachToSoilSurface(SoilSurface inSurface)
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xDF26C8", Offset = "0xDF26C8", VA = "0xDF26C8")]
	public void DetachFromSoilSurface()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xDF0580", Offset = "0xDF0580", VA = "0xDF0580")]
	public void SetDirtPileActive(bool newDirtPileActive)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xDF525C", Offset = "0xDF525C", VA = "0xDF525C")]
	public bool IsPlanted()
	{
		return default(bool);
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xDF52A0", Offset = "0xDF52A0", VA = "0xDF52A0")]
	public PlantPositionProxy()
	{
	}
}
[Serializable]
[Token(Token = "0x2000173")]
public class PlantPositionProxyState : ComponentState
{
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable plantPrefabData;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float currentGrowth;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SaveID soilSurfaceId;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool HaveGeneratedScale;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 GeneratedScale;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool HaveGeneratedRotation;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float GeneratedRotation;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RequiresSoilSurfaceForGrowth;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int NumAttachedChildren;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float PlantWindState;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool PlantActive;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public SaveID PlantSaveID;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public byte PlantUpdateState;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xDEFAFC", Offset = "0xDEFAFC", VA = "0xDEFAFC")]
	public PlantPositionProxyState(AssetReference prefabDataRef, float growth, SaveID soilSurface, bool haveGeneratedScale, Vector3 generatedScale, bool haveGeneratedRotation, float generatedRotation, bool requireSoildSurfaceForGrowth, int numChildren, float windState, bool inPlantActive, SaveID inPlantSaveID, byte inPlantUpdateState)
	{
	}
}
[Serializable]
[Token(Token = "0x2000174")]
public struct PlantPartGrowthCurvePoint
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float Time;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float Value;
}
[Serializable]
[Token(Token = "0x2000175")]
public struct PlantPartGrowthCurveCache
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public PlantPartGrowthCurvePoint[] CachedCurvePoints;
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FAD10", Offset = "0x9FAD10")]
public class PlantPrefabData : ScriptableObject
{
	[Token(Token = "0x2000177")]
	public enum PlantPartType
	{
		[Token(Token = "0x4000858")]
		Stem,
		[Token(Token = "0x4000859")]
		Root,
		[Token(Token = "0x400085A")]
		Leaf,
		[Token(Token = "0x400085B")]
		DirtPile,
		[Token(Token = "0x400085C")]
		Head,
		[Token(Token = "0x400085D")]
		COUNT
	}

	[Serializable]
	[Token(Token = "0x2000178")]
	public struct PartTypeData
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlantPartType PartType;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<PlantPartRenderData> PartRenderDatas;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantPartGrowthData[] PartGrowthDatas;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4[] AdditionalTypeMatrices;
	}

	[Serializable]
	[Token(Token = "0x2000179")]
	public struct PlantPartRenderData
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlantPartType PartType;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Matrix4x4 PartToRootMatrix;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Mesh PartMesh;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material PartMaterial;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color ColorDark;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color ColorMid;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color ColorBright;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int SubPlantIndex;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool AllowShrivel;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		public bool HaveOverrideGrowthData;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float OverrideGrowthStart;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float OverrideGrowthEnd;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int GrowthCurveIndex;
	}

	[Serializable]
	[Token(Token = "0x200017A")]
	public struct PlantPartGrowthData
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValidGrowthData;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool HaveOverrideData;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float GrowthStart;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float GrowthDistance;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int GrowthCurveIndex;
	}

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00434", Offset = "0xA00434")]
	public GameObject PrefabTemplate;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantResourceData ResourceData;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RequiresTrellis;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool IsRootVegetable;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0046C", Offset = "0xA0046C")]
	public bool UseCustomPlantScale;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 MaxPlantScale;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 MinPlantScale;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool RandomizeYaw;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float YawRandomizeRange;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA004A4", Offset = "0xA004A4")]
	public bool UseSeparateHeadGrowthStage;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool UseCustomHeadGrowthFraction;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float CustomHeadGrowthFraction;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA004DC", Offset = "0xA004DC")]
	public NeatAudioCue GrowthFinishedSound;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00514", Offset = "0xA00514")]
	public float PlantHeight;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PartTypeData[] PartTypeDatas;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int PlantPartCount;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int NumSubPlants;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CurrencyType PlantHeadCurrencyType;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public CurrencyType PlantBodyCurrencyType;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CraftingSystem.ResourceType PlantHeadResourceType;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CraftingSystem.ResourceType PlantBodyResourceType;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ItemDataAssetRow PlantBodyItemData;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ItemDataAssetRow PlantHeadItemData;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 PlantHeadColliderSize;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 PlantHeadColliderCenter;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float PlantBodyRendererSize;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 PlantBodyRenderOffset;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float PlantHeadRendererSize;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 PlantHeadRenderOffset;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3 PlantStemColliderCenter;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float PlantStemColliderHeight;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float PlantStemColliderRadius;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool HaveCustomGrabPoint;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 PlantGrabPointPosition;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Quaternion PlantGrabPointRotation;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public bool HaveCustomGrabPointLeft;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3 PlantGrabPointPositionLeft;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Quaternion PlantGrabPointRotationLeft;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public bool HaveCustomHeadGrabPoint;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3 FlowerHeadGrabPointPosition;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Quaternion FlowerHeadGrabPointRotation;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public bool HaveCustomHeadGrabPointLeft;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 FlowerHeadGrabPointPositionLeft;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Quaternion FlowerHeadGrabPointRotationLeft;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public PlantColors DirtColor_Watered;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public PlantColors DirtColor_Dry;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public int HashedNameProxy;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public int HashedNameSubPart;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int HashedNameSeed;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public int HashedNameSeedBag;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private int CurrentSubPlantIndex;

	[NonSerialized]
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int PrefabDataID;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private List<AnimationCurve> FoundAnimationCurves;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public PlantPartGrowthCurveCache[] CachedGrowthCurves;

	[Token(Token = "0x4000855")]
	private const int PLANT_GROWTH_CURVE_CACHE_SIZE = 128;

	[Token(Token = "0x4000856")]
	private const int PLANT_GROWTH_CURVE_CACHE_SAMPLE_SIZE = 2049;

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xDF5518", Offset = "0xDF5518", VA = "0xDF5518")]
	private void RecalcPartCount()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xDF56D4", Offset = "0xDF56D4", VA = "0xDF56D4")]
	public PlantPrefabData()
	{
	}
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FAD78", Offset = "0x9FAD78")]
public class PlantPrefabDataCollection : ScriptableObject
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GlobalGrowthDurationModifier;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantPrefabData[] PrefabDatas;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReference[] PrefabDataAssetRefs;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AssetReference[] PlantTypes;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xDF57DC", Offset = "0xDF57DC", VA = "0xDF57DC")]
	public PlantPrefabDataCollection()
	{
	}
}
[Token(Token = "0x200017C")]
public class PlantPrefabDataManager : MonoBehaviour
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlantPrefabDataManager Instance;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantPrefabDataCollection collection;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, PlantPrefabData> plantPrefabDatas;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numAssetsToLoad;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0xDF57EC", Offset = "0xDF57EC", VA = "0xDF57EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0xDF5AC4", Offset = "0xDF5AC4", VA = "0xDF5AC4")]
	public void Reset()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0xDF5B2C", Offset = "0xDF5B2C", VA = "0xDF5B2C")]
	public bool DoneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xDF5B3C", Offset = "0xDF5B3C", VA = "0xDF5B3C")]
	private void OnAssetLoaded(AsyncOperationHandle<PlantPrefabData> handle)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xDF5BA8", Offset = "0xDF5BA8", VA = "0xDF5BA8")]
	private void OnPlantTypeLoaded(AsyncOperationHandle<PlantType> handle)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xDF02B0", Offset = "0xDF02B0", VA = "0xDF02B0")]
	public PlantPrefabData GetPlantPrefabData(AssetReference assetRef)
	{
		return null;
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xDF5C14", Offset = "0xDF5C14", VA = "0xDF5C14")]
	public PlantPrefabDataManager()
	{
	}
}
[Token(Token = "0x200017D")]
public abstract class PlantSystemBase
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected bool NeedsInit;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PlantProxySystem MainProxySystem;

	[Token(Token = "0x6000870")]
	public abstract void Update();

	[Token(Token = "0x6000871")]
	public abstract void Cleanup();

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xC54950", Offset = "0xC54950", VA = "0xC54950")]
	protected PlantSystemBase()
	{
	}
}
[Token(Token = "0x200017E")]
public struct IndexableProxyData
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int PlantID;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool IsValidProxy;
}
[Token(Token = "0x200017F")]
[ExecuteInEditMode]
public class PlantProxySystem : MonoBehaviour
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantRenderSystem RenderSystem;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantGrowthSystem GrowthSystem;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlantUpdateSystem UpdateSystem;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlantCullingSystem CullingSystem;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlantSpawnLocationManager SpawnLocationManager;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlantProxySystem instance;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool needsInit;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AssetReference BaseProxyTemplateRef;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AssetReference BaseSubPartProxyTemplateRef;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlantPrefabDataCollection PrefabDataCollection;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material PlantRenderMaterial;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ComputeShader PlantCullingShader;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private DynamicNativeArray<IndexableProxyData> IndexableProxyDataList;

	[Token(Token = "0x170000E8")]
	public static PlantProxySystem Instance
	{
		[Token(Token = "0x6000876")]
		[Address(RVA = "0xDEDC4C", Offset = "0xDEDC4C", VA = "0xDEDC4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xDF5CA8", Offset = "0xDF5CA8", VA = "0xDF5CA8")]
	private void InitSystems()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xDF60C0", Offset = "0xDF60C0", VA = "0xDF60C0")]
	private void CleanupSystems()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xDF61F8", Offset = "0xDF61F8", VA = "0xDF61F8")]
	public void OnAreaUnloaded()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xDF6214", Offset = "0xDF6214", VA = "0xDF6214")]
	public bool NeedsInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xDF621C", Offset = "0xDF621C", VA = "0xDF621C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xDF62A8", Offset = "0xDF62A8", VA = "0xDF62A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xDF6330", Offset = "0xDF6330", VA = "0xDF6330")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xDF6390", Offset = "0xDF6390", VA = "0xDF6390")]
	private void Update()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xDF6414", Offset = "0xDF6414", VA = "0xDF6414")]
	public static PlantPrefabData GetProxyPrefabData()
	{
		return null;
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xDF64FC", Offset = "0xDF64FC", VA = "0xDF64FC")]
	public static void PreInitializePlantProxy(PlantPositionProxy proxy, AssetReference inProxyPrefabData, float inBaseGrowth, SoilSurface inSoilSurface, bool requireSoilSurface = true)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xDF65E8", Offset = "0xDF65E8", VA = "0xDF65E8")]
	public static bool SpawnNewPositionProxy(Transform inSpawnTransform, Action<SpawnOperationCallbackData> postSpawnCallback, bool sanitizeRotation = true)
	{
		return default(bool);
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xDF3500", Offset = "0xDF3500", VA = "0xDF3500")]
	public static void SpawnNewSubPartProxies(Transform inSpawnTransform, int numberOfProxies, Action<SpawnOperationCallbackData> preInitCallback)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xDF67E0", Offset = "0xDF67E0", VA = "0xDF67E0")]
	public static bool SetupNewSubPartProxyForCulling(PlantSubPartProxy inSubPartProxy)
	{
		return default(bool);
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xDF3EFC", Offset = "0xDF3EFC", VA = "0xDF3EFC")]
	public static bool SetupNewSubPartProxy(PlantSubPartProxy inSubPartProxy, Transform inSpawnTransform, in NativeArray<PlantPartRenderData> inSubPartRenderData, Matrix4x4 inOffsetMatrix, bool inInitialCullState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xDF0370", Offset = "0xDF0370", VA = "0xDF0370")]
	public void RegisterIndexableProxy(PlantSystemIndexable inIndexable)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xDF6B34", Offset = "0xDF6B34", VA = "0xDF6B34")]
	public void DeregisterIndexableProxy(PlantSystemIndexable inIndexable)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xDF68C0", Offset = "0xDF68C0", VA = "0xDF68C0")]
	private void InitProxyData(PlantSystemIndexable inIndexable)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xDF6D68", Offset = "0xDF6D68", VA = "0xDF6D68")]
	private void RemoveIndexableData(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xDF0448", Offset = "0xDF0448", VA = "0xDF0448")]
	public void SetProxyActive(PlantSystemIndexable inIndexable, bool newActive, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xDF6F08", Offset = "0xDF6F08", VA = "0xDF6F08")]
	public PlantProxySystem()
	{
	}
}
[Token(Token = "0x2000180")]
[ExecuteInEditMode]
public struct PlantProxyRenderData
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool HasValidProxy;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool ProxyRenderingActive;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float PlantGrowth;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public unsafe PlantPartRenderData* RenderDataBufferPtr;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int RenderDataBufferCount;

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xAD8918", Offset = "0xAD8918", VA = "0xAD8918")]
	public void SetHasValidProxy(bool newHasValidProxy)
	{
	}
}
[Token(Token = "0x2000181")]
public class PlantRenderSystem : PlantSystemBase
{
	[Token(Token = "0x2000182")]
	private struct RenderArgsHelper
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint MeshIndexCount;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint MeshInstanceCount;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint MeshIndexStart;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint MeshBasevertex;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint AdditionalArg;
	}

	[Token(Token = "0x4000892")]
	private const int PLANT_ARRAY_ALLOCATION_CHUNK = 256;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantPrefabDataCollection PrefabDataCollection;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DynamicNativeArray<PlantProxyRenderData> RenderProxyData;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PlantSystemIndexable> IndexableProxyList;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Mesh> PlantMeshes;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Mesh> PlantOutlineMeshes;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Mesh, int> PlantMeshIds;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Material> PlantMaterials;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> PlantPlantMeshInstances;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material PlantRenderMaterial;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<int> PlantsToDeactivateRendering;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> PlantsToActivateRendering;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<MaterialPropertyBlock> MeshPropertyBlocks;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PlantRenderSystemData RenderData;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ComputeBuffer PlantRenderDatasBuffer;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ComputeBuffer PlantRenderArgsBuffer;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ComputeBuffer PlantInstanceOffsetBuffer;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<ComputeBuffer> PlantMeshRenderDatasBuffers;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<ComputeBuffer> PlantMeshRenderArgsBuffers;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private NativeArray<RenderArgsHelper> PlantRenderArgsData;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool PlantRenderingEnabled;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool UseComputeCullingShader;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xDF5DC8", Offset = "0xDF5DC8", VA = "0xDF5DC8")]
	public PlantRenderSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xDF6F48", Offset = "0xDF6F48", VA = "0xDF6F48", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xDF6F4C", Offset = "0xDF6F4C", VA = "0xDF6F4C", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xDF718C", Offset = "0xDF718C", VA = "0xDF718C")]
	private void CleanupMeshBuffers()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xDF69BC", Offset = "0xDF69BC", VA = "0xDF69BC")]
	public void RegisterIndexableProxy(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xDF6C58", Offset = "0xDF6C58", VA = "0xDF6C58")]
	public void DeregisterIndexableProxy(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xDF6DE8", Offset = "0xDF6DE8", VA = "0xDF6DE8")]
	public void SetProxyRenderState(int inProxyIndex, bool inProxyRenderState, bool inInitialCullState = false)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xDF0894", Offset = "0xDF0894", VA = "0xDF0894")]
	public void SetProxyRenderingActive(PlantSystemIndexable inIndexableProxy, bool inIsRenderingActive, bool inUpdateAllocation = true)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xDF738C", Offset = "0xDF738C", VA = "0xDF738C")]
	public void AllocatePlantRenderData(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xDF7594", Offset = "0xDF7594", VA = "0xDF7594")]
	public void FreePlantRenderData(PlantSystemIndexable inIndexableProxy)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xDF1708", Offset = "0xDF1708", VA = "0xDF1708")]
	public int GetMeshID(Mesh inMesh, Material inMaterial)
	{
		return default(int);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xDF7AA8", Offset = "0xDF7AA8", VA = "0xDF7AA8")]
	private ComputeBuffer FetchMeshBuffer(int inMeshID, int inCount, int inStride)
	{
		return null;
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xDF7C68", Offset = "0xDF7C68", VA = "0xDF7C68")]
	private ComputeBuffer FetchRenderArgsBuffer(int inMeshID, int inStride)
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xDF7E04", Offset = "0xDF7E04", VA = "0xDF7E04")]
	private MaterialPropertyBlock FetchMaterialPropertyBlock(int inMeshID)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xDF7F2C", Offset = "0xDF7F2C", VA = "0xDF7F2C")]
	private void UpdatePlantRenderDataBuffers(Camera c)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xDF825C", Offset = "0xDF825C", VA = "0xDF825C")]
	protected void RenderPlants(Camera c)
	{
	}
}
[Token(Token = "0x2000183")]
public struct PlantPartRenderBufferData
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Matrix4x4 PartRenderMatrix;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 PartGrowthScale;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float GreyscaleIntensity;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color32 ColorDark;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color32 ColorMid;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color32 ColorBright;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 PlantWorldLocation;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 PlantWindData;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float PlantHightlight;
}
[Token(Token = "0x2000184")]
public struct PlantPartIndexes
{
	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int PlantProxyIndex;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int PlantPartIndex;
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0x9FAE00", Offset = "0x9FAE00")]
[AttributeAttribute(Name = "Il2CppSetOptionAttribute", RVA = "0x9FAE00", Offset = "0x9FAE00")]
public class PlantRenderSystemData
{
	[Token(Token = "0x2000186")]
	public enum RenderDataOffset
	{
		[Token(Token = "0x40008C2")]
		PartRenderMatrix = 0,
		[Token(Token = "0x40008C3")]
		PartGrowthScale = 64,
		[Token(Token = "0x40008C4")]
		GreyscaleIntensity = 80,
		[Token(Token = "0x40008C5")]
		ColorDark = 84,
		[Token(Token = "0x40008C6")]
		ColorMid = 88,
		[Token(Token = "0x40008C7")]
		ColorBright = 92,
		[Token(Token = "0x40008C8")]
		PlantWorldLocation = 96,
		[Token(Token = "0x40008C9")]
		PlantWindData = 108,
		[Token(Token = "0x40008CA")]
		PlantHighlight = 116
	}

	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FAEA8", Offset = "0x9FAEA8")]
	private struct ResizeBufferJob : IJob
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int InBlockSize;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int NewBlockCount;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe int* BlockCountPtr;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe int* indicesBufferCountPtr;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe int** OccupiedIndicesBufferPtr;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NativeDisableUnsafePtrRestriction]
		public unsafe void** BufferAddrPtr;

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xAD8C7C", Offset = "0xAD8C7C", VA = "0xAD8C7C", Slot = "4")]
		public void Execute()
		{
		}
	}

	[Token(Token = "0x2000188")]
	private struct MemoryBuffer
	{
		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int BufferBlockSize;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int BufferBlockCount;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int IndicesBufferCount;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private unsafe int* OccupiedIndicesBuffer;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private unsafe void* BufferAddr;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeSpan HighestSpan;

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xDF97A8", Offset = "0xDF97A8", VA = "0xDF97A8")]
		public unsafe static void BlockMemCpy(void* destination, void* source, int blockCount)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xDF97C8", Offset = "0xDF97C8", VA = "0xDF97C8")]
		public unsafe static MemoryBuffer* AllocateNewBuffer(int inBlockSize, int inBufferCount)
		{
			//IL_0002: Expected I, but got O
			return (MemoryBuffer*)unchecked((nint)null);
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xDF998C", Offset = "0xDF998C", VA = "0xDF998C")]
		public unsafe static bool FreeMemoryBuffer(MemoryBuffer* inBufferToFree)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xAD8928", Offset = "0xAD8928", VA = "0xAD8928")]
		public bool AllocateBufferData()
		{
			return default(bool);
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xAD8930", Offset = "0xAD8930", VA = "0xAD8930")]
		public bool AllocateIndicesBuffer()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xAD8938", Offset = "0xAD8938", VA = "0xAD8938")]
		public bool ResizeBufferAllocation(int newBufferBlockCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xAD8940", Offset = "0xAD8940", VA = "0xAD8940")]
		public bool FreeBufferData()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xAD8978", Offset = "0xAD8978", VA = "0xAD8978")]
		public bool FreeIndicesData()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xAD89B0", Offset = "0xAD89B0", VA = "0xAD89B0")]
		public unsafe void* ClaimBufferBlock(out int claimedIndex)
		{
			//IL_0002: Expected I, but got O
			return (void*)unchecked((nint)null);
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xAD89B8", Offset = "0xAD89B8", VA = "0xAD89B8")]
		public unsafe void* GetBufferBlockPtr(in int claimedIndex)
		{
			//IL_0002: Expected I, but got O
			return (void*)unchecked((nint)null);
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xAD89E8", Offset = "0xAD89E8", VA = "0xAD89E8")]
		public void FreeBufferBlock(uint indexToFree)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xAD8A18", Offset = "0xAD8A18", VA = "0xAD8A18")]
		public bool MoveBufferBlock(in MemoryTransactionData moveTransactionData)
		{
			return default(bool);
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xDF9DA4", Offset = "0xDF9DA4", VA = "0xDF9DA4")]
		public static int GetRightMostUnsetBitIndex(int inValueToTest)
		{
			return default(int);
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xDF9F34", Offset = "0xDF9F34", VA = "0xDF9F34")]
		public static int GetLeftMostSetBitIndex(int inValueToTest)
		{
			return default(int);
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xAD8A20", Offset = "0xAD8A20", VA = "0xAD8A20")]
		public unsafe bool GetBufferInformation(out void* outBufferAddr, out int outBufferBlockCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xAD8A4C", Offset = "0xAD8A4C", VA = "0xAD8A4C")]
		public unsafe bool GetBufferInformation(out void* outBufferAddr, out int outBufferBlockCount, out int* outIndicesBufferAddr, out int outIndicesBufferCount)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000189")]
	public struct MemoryTransactionData
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int sourceIndex;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int destinationIndex;
	}

	[Token(Token = "0x200018A")]
	public struct MeshMemoryBuffers
	{
		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private unsafe MemoryBuffer* RenderDataBuffer;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private unsafe MemoryBuffer* PlantIndexBuffer;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool NeedBufferCleanup;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int BufferInstanceCount;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool HaveUpdatedData;

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xAD8B10", Offset = "0xAD8B10", VA = "0xAD8B10")]
		public unsafe bool RequestInstanceAllocations(out int claimedBufferIndex, out PlantPartRenderBufferData* outRenderDataPtr, out PlantPartIndexes* outIndexDataPtr)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xAD8B18", Offset = "0xAD8B18", VA = "0xAD8B18")]
		public bool SetOrChangeInstanceValues(ref int claimedBufferIndex, in PlantPartRenderBufferData inRenderBufferData, in PlantPartIndexes inPartIndexData)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BD")]
		public bool ChangeInstanceValue<ValueType>(int claimedBufferIndex, in ValueType newValue, int inDataOffset) where ValueType : struct
		{
			return default(bool);
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xAD8B20", Offset = "0xAD8B20", VA = "0xAD8B20")]
		public bool ChangeInstancePartIndexData(int claimedBufferIndex, in PlantPartIndexes inPartIndexData)
		{
			return default(bool);
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xAD8B68", Offset = "0xAD8B68", VA = "0xAD8B68")]
		public void SetupBuffers(int initialBufferSizes = 256)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xAD8B70", Offset = "0xAD8B70", VA = "0xAD8B70")]
		public void FreeBuffers()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xAD8BA0", Offset = "0xAD8BA0", VA = "0xAD8BA0")]
		public bool FreeIndices(in int[] inIndices)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xAD8BA8", Offset = "0xAD8BA8", VA = "0xAD8BA8")]
		public unsafe bool FreeIndices(in int* inIndicesBuffer, in int inBufferSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xAD8BB0", Offset = "0xAD8BB0", VA = "0xAD8BB0")]
		public bool ConditionalCleanupBuffers()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xAD8BB8", Offset = "0xAD8BB8", VA = "0xAD8BB8")]
		public bool GetBufferDataAsArrays(out NativeArray<PlantPartRenderBufferData> outRenderBufferData)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xAD8BD4", Offset = "0xAD8BD4", VA = "0xAD8BD4")]
		public bool GetInstanceData(int claimedBufferIndex, out PlantPartRenderBufferData outData)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200018B")]
	public struct PendingInstanceAllocationData
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public unsafe PlantPartRenderData* RenderDataCachePtr;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public unsafe int* RenderDataIndicesBufferPtr;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int RenderDataIndicesLength;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int DataIDToSkip;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Matrix4x4 ProxyLocalToWorld;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ProxyBaseGrowth;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ProxyWindState;
	}

	[Token(Token = "0x200018C")]
	private struct PendingMeshBufferJobsData
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DynamicNativeArray<int> IndicesToFree;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DynamicNativeArray<PendingInstanceAllocationData> AllocationsToPerform;

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xAD8C74", Offset = "0xAD8C74", VA = "0xAD8C74")]
		public void CleanUp()
		{
		}
	}

	[Token(Token = "0x40008B8")]
	private const int BUFFER_RESIZE_INT_COUNT = 8;

	[Token(Token = "0x40008B9")]
	private const int BUFFER_RESIZE_CHUNKS = 256;

	[Token(Token = "0x40008BA")]
	private const Allocator AllocationType = Allocator.Persistent;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private DynamicNativeArray<MeshMemoryBuffers> MemoryBufferList;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<PendingMeshBufferJobsData> PendingBufferJobsData;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool BuffersNeedCleanup;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool HavePendingBufferJobs;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NativeList<JobHandle> BufferJobHandles;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<int> ProxiesThatNeedPartGrowthUpdate;

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xDF8B78", Offset = "0xDF8B78", VA = "0xDF8B78")]
	private unsafe static void* RenderSysMalloc(int inSize, int inAlignment, Allocator inAllocationType = Allocator.Persistent)
	{
		//IL_0002: Expected I, but got O
		return (void*)unchecked((nint)null);
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xDF8B84", Offset = "0xDF8B84", VA = "0xDF8B84")]
	private unsafe static void RenderSysFree(void* inPointerToFree, Allocator inAllocationType = Allocator.Persistent)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xDF6F18", Offset = "0xDF6F18", VA = "0xDF6F18")]
	public PlantRenderSystemData()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xDF8B8C", Offset = "0xDF8B8C", VA = "0xDF8B8C")]
	private void InitData()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xDF7074", Offset = "0xDF7074", VA = "0xDF7074")]
	public void FreeData()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xDF8AE8", Offset = "0xDF8AE8", VA = "0xDF8AE8")]
	public void ConditionalCleanupData()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xDF7920", Offset = "0xDF7920", VA = "0xDF7920")]
	public void EnsureMeshBufferIndexIsCreated(int inMeshIndex)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xDF7658", Offset = "0xDF7658", VA = "0xDF7658")]
	public unsafe void AllocatePlantRenderData(PlantPartRenderData* inRenderDataCachePtr, in int inRenderDataLength, in PlantMeshBufferIndexMapping[] inIndexMappings, in int inDataIDToSkip, in Matrix4x4 inProxyLocalToWorld, in float inProxyBaseGrowth, in float inProxyWindState)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xDF50E4", Offset = "0xDF50E4", VA = "0xDF50E4")]
	public bool SetOrChangeMeshInstanceValues(int inMeshID, ref int claimedBufferIndex, in PlantPartRenderBufferData inPartBufferData, in PlantPartIndexes inPartIndexData)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A2")]
	public bool ChangeInstanceMeshValue<ValueType>(int inMeshID, int claimedBufferIndex, in ValueType newValue, RenderDataOffset inDataOffset) where ValueType : struct
	{
		return default(bool);
	}

	[Token(Token = "0x60008A3")]
	public bool ChangeInstanceMeshValue<ValueType>(int inMeshID, int claimedBufferIndex, in ValueType newValue, int inDataOffset) where ValueType : struct
	{
		return default(bool);
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xDF93F0", Offset = "0xDF93F0", VA = "0xDF93F0")]
	public bool ChangeInstanceMeshPartIndexData(int inMeshID, int claimedBufferIndex, in PlantPartIndexes inPartIndexData)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xDF9500", Offset = "0xDF9500", VA = "0xDF9500")]
	public bool GetInstanceMeshReadOnlyData(int inMeshID, int claimedBufferIndex, out PlantPartRenderBufferData outInstanceData)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xDF81CC", Offset = "0xDF81CC", VA = "0xDF81CC")]
	public bool GetMeshDataAsNativeArrays(int inMeshID, out NativeArray<PlantPartRenderBufferData> outRenderBufferData)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xDF77D4", Offset = "0xDF77D4", VA = "0xDF77D4")]
	public unsafe void AddPendingInstancesToFree(PlantPartRenderData* inCachedRenderDataBuffer, in PlantMeshBufferIndexMapping[] inIndexMappings)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xDF86A0", Offset = "0xDF86A0", VA = "0xDF86A0")]
	public void ProcessPendingBufferDataJobs()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xDF5190", Offset = "0xDF5190", VA = "0xDF5190")]
	public void FreeMeshInstance(int inMeshID, int inBufferIndex)
	{
	}
}
[Token(Token = "0x200018D")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FAEB8", Offset = "0x9FAEB8")]
public struct FreeBufferIndicesJob : IJob
{
	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantRenderSystemData.MeshMemoryBuffers* MemoryBuffersStoragePtr;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int MeshID;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe int* IndicesToFreeBuffer;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int IndicesToFreeBufferCount;

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xAE3BBC", Offset = "0xAE3BBC", VA = "0xAE3BBC", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x200018E")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FAEEC", Offset = "0x9FAEEC")]
public struct AllocatePlantRenderDataJob : IJob
{
	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantRenderSystemData.MeshMemoryBuffers* MemoryBuffersStoragePtr;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe PlantRenderSystemData.PendingInstanceAllocationData* JobDataPtr;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int JobDataCount;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xAE0DF0", Offset = "0xAE0DF0", VA = "0xAE0DF0", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x200018F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FAF20", Offset = "0x9FAF20")]
public class PlantResourceData : ScriptableObject
{
	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeToPickable;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Waterings;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfPieces;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int SeedsPerBag;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FertilizerEfficiency;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float FertilizerWaterConsumptionMultiplier;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xDFA188", Offset = "0xDFA188", VA = "0xDFA188")]
	public PlantResourceData()
	{
	}
}
[Token(Token = "0x2000190")]
[ExecuteInEditMode]
public class PlantSpawnLocation : SaveableComponent, IInitializable
{
	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AssetReference PlantToSpawn;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA005CC", Offset = "0xA005CC")]
	public float PlantBaseGrowth;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Refresh;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool ShouldRespawn;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RespawnTimer;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlantPositionProxy SpawnedPlant;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool HasSpawnedPlant;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool HavePendingRespawn;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool HaveActiveTimer;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float TimeToRespawn;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool SpawnLocationInitialized;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public SaveID PlantSaveID;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float RecreatePlantCheckTimer;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float TimeSinceLastRecreateCheck;

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xDFA8EC", Offset = "0xDFA8EC", VA = "0xDFA8EC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xDFA9AC", Offset = "0xDFA9AC", VA = "0xDFA9AC")]
	private void AssignSpawnedPlant(PlantPositionProxy plant)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xDFA9DC", Offset = "0xDFA9DC", VA = "0xDFA9DC")]
	private void InvalidateSpawnedPlantReference()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xDFAA0C", Offset = "0xDFAA0C", VA = "0xDFAA0C")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xDFAED8", Offset = "0xDFAED8", VA = "0xDFAED8")]
	public void ResolveSaveIDToPlantInstance()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xDFB0E0", Offset = "0xDFB0E0", VA = "0xDFB0E0")]
	private void RegisterWithManager()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xDFB184", Offset = "0xDFB184", VA = "0xDFB184")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xDFB188", Offset = "0xDFB188", VA = "0xDFB188")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xDFB2C0", Offset = "0xDFB2C0", VA = "0xDFB2C0", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xDFAE0C", Offset = "0xDFAE0C", VA = "0xDFAE0C")]
	public void SpawnPlant(bool editor = false)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xDFB3E0", Offset = "0xDFB3E0", VA = "0xDFB3E0")]
	private void SetFlagsRecursive(GameObject root, HideFlags flags)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xDFB494", Offset = "0xDFB494", VA = "0xDFB494")]
	private void OnProxyPlantSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xDFB704", Offset = "0xDFB704", VA = "0xDFB704")]
	public void OnSpawnedProxyGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xDFB888", Offset = "0xDFB888", VA = "0xDFB888")]
	public void RespawnPlant()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xDFB9A0", Offset = "0xDFB9A0", VA = "0xDFB9A0")]
	private void SetPlantGrowth(float newGrowth)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xDFBAA0", Offset = "0xDFBAA0", VA = "0xDFBAA0")]
	public PlantSpawnLocation()
	{
	}
}
[Serializable]
[Token(Token = "0x2000191")]
public class PlantSpawnLocationComponentState : ComponentState
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float PlantBaseGrowth;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool ShouldRespawn;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RespawnTimer;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool HavePendingRespawn;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool HaveActiveTimer;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TimeToRespawn;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SaveID PlantSaveID;

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xC520B8", Offset = "0xC520B8", VA = "0xC520B8")]
	public PlantSpawnLocationComponentState(float inPlantBaseGrowth, bool inShouldRespawn, float inRespawnTimer, bool inHavePendingRespawn, bool inHaveActiveTimer, float inTimeToRespawn, SaveID inPlantSaveID)
	{
	}
}
[Token(Token = "0x2000192")]
[ExecuteInEditMode]
public class PlantSpawnLocationManager
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<PlantSpawnLocation> SpawnLocationList;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlantProxySystem MainProxySystem;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<SaveID, PlantSpawnLocation> SpawnLocationSaveIDMappings;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<SaveID, PlantPositionProxy> PlantProxySaveIDMappings;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xC52158", Offset = "0xC52158", VA = "0xC52158")]
	public PlantSpawnLocationManager(PlantProxySystem proxySystem)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xC52258", Offset = "0xC52258", VA = "0xC52258", Slot = "1")]
	~PlantSpawnLocationManager()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xC522C0", Offset = "0xC522C0", VA = "0xC522C0")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xC52388", Offset = "0xC52388", VA = "0xC52388")]
	public void Update()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xC52490", Offset = "0xC52490", VA = "0xC52490")]
	public void RegisterSpawnLocation(PlantSpawnLocation inSpawnLocation)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xC525C0", Offset = "0xC525C0", VA = "0xC525C0")]
	public void DeregisterSpawnLocation(PlantSpawnLocation inSpawnLocation)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xC524FC", Offset = "0xC524FC", VA = "0xC524FC")]
	public void AddSpawnLocationSaveIDMapping(PlantSpawnLocation inSpawnLocation)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xC5269C", Offset = "0xC5269C", VA = "0xC5269C")]
	public void BroadcastSaveIDDestroyed(PlantPositionProxy inProxy)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xC527D0", Offset = "0xC527D0", VA = "0xC527D0")]
	public void RegisterPositionProxySaveID(PlantPositionProxy inProxy)
	{
	}
}
[Token(Token = "0x2000193")]
public class PlantSubPartProxy : PlantSystemIndexable, IInitializable
{
	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool NeedsRenderDataAllocationUpdate;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Matrix4x4 SubPartOffsetMatrix;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private AssetReference ParentPlantPrefabData;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int SubPartIndex;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool DetachedFromParent;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	public bool ShouldStartActive;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private PlantPositionProxy PlantParent;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xC52890", Offset = "0xC52890", VA = "0xC52890")]
	public bool IsDetachedFromParent()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xC52898", Offset = "0xC52898", VA = "0xC52898")]
	public PlantSubPartProxy()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xC529D4", Offset = "0xC529D4", VA = "0xC529D4", Slot = "6")]
	public override bool CanEverGrow()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xC529DC", Offset = "0xC529DC", VA = "0xC529DC", Slot = "8")]
	public override bool HaveValidData()
	{
		return default(bool);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xC52A48", Offset = "0xC52A48", VA = "0xC52A48", Slot = "9")]
	public override void GatherRenderData()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xC52A4C", Offset = "0xC52A4C", VA = "0xC52A4C", Slot = "10")]
	protected override void GenerateCachedRenderData()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xC53658", Offset = "0xC53658", VA = "0xC53658", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xC539C8", Offset = "0xC539C8", VA = "0xC539C8")]
	public PlantPositionProxy GetPlantParent()
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC53A80", Offset = "0xC53A80", VA = "0xC53A80", Slot = "20")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xC5407C", Offset = "0xC5407C", VA = "0xC5407C", Slot = "14")]
	public override void OnProxyGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xC54158", Offset = "0xC54158", VA = "0xC54158", Slot = "15")]
	public override void OnProxyDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xC5415C", Offset = "0xC5415C", VA = "0xC5415C", Slot = "11")]
	public override void SetRenderingActive(bool newRenderingActive)
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xC541B8", Offset = "0xC541B8", VA = "0xC541B8", Slot = "12")]
	public override void PlantUpdate()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xC541BC", Offset = "0xC541BC", VA = "0xC541BC", Slot = "13")]
	public override void UpdateRenderTransforms()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xC54434", Offset = "0xC54434", VA = "0xC54434")]
	public void InitProxyData(AssetReference plantPrefabData, int subPlantIndex)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xC54464", Offset = "0xC54464", VA = "0xC54464", Slot = "19")]
	public override void InitializeComponentData(in PlantPrefabData dataForInit)
	{
	}
}
[Serializable]
[Token(Token = "0x2000194")]
public class PlantSubPartProxyState : ComponentState
{
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable PlantPrefabData;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DetachedFromParentPlant;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SubPartIndex;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int PlantPartCount;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CurrentGrowth;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool HaveGeneratedScale;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 GeneratedScale;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool HaveGeneratedRotation;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float GeneratedRotation;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PlantWindState;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool PlantActive;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public byte PlantUpdateState;

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xC53874", Offset = "0xC53874", VA = "0xC53874")]
	public PlantSubPartProxyState(AssetReference linkedData, bool detachedFromParent, int index, int partCount, float growth, bool haveGeneratedScale, Vector3 generatedScale, bool haveGeneratedRotation, float generatedRotation, float windState, bool inPlantActive, byte inPlantUpdateState)
	{
	}
}
[Token(Token = "0x2000195")]
public struct PlantPartRenderData
{
	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Matrix4x4 RenderTransform;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 PlantGrowthScale;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float GreyscaleIntensity;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color32 PlantColorDark;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color32 PlantColorMid;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color32 PlantColorBright;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 PlantWorldLocation;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 PlantWindData;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float PlantHighlight;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int PlantProxyIndex;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int PlantPartIndex;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int RenderBufferIndex;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int MeshID;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int SubPlantIndex;
}
[Token(Token = "0x2000196")]
public struct PlantMeshBufferIndexMapping
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int MeshID;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public NativeArray<int> CachedDataIndices;
}
[Token(Token = "0x2000197")]
public abstract class PlantSystemIndexable : SaveableComponent, ICompostable
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ProxyID;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int ProxyPartCount;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ShouldUpdateRenderData;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float BaseGrowth;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ProxyRenderingActive;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool ProxyActive;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public PlantPrefabData LinkedData;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA005F4", Offset = "0xA005F4")]
	private Stashable <ProxyStashable>k__BackingField;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlantMeshBufferIndexMapping[] MeshBufferIndexMappings;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool DirtPileActive;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int DirtPileRenderDataID;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool HaveGeneratedScale;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 GeneratedScale;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool HaveGeneratedRotation;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float GeneratedYaw;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float PlantHeight;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float PlantWindState;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float PlantHighlight;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NativeArray<PlantPartRenderData> CachedRenderData;

	[Token(Token = "0x170000E9")]
	public Stashable ProxyStashable
	{
		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xC54960", Offset = "0xC54960", VA = "0xC54960")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104BC", Offset = "0xA104BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xC54968", Offset = "0xC54968", VA = "0xC54968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104CC", Offset = "0xA104CC")]
		protected set
		{
		}
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xC54970", Offset = "0xC54970", VA = "0xC54970", Slot = "6")]
	public virtual bool CanEverGrow()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xC54978", Offset = "0xC54978", VA = "0xC54978", Slot = "7")]
	public virtual bool HaveValidGrowthPosition()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xC54980", Offset = "0xC54980", VA = "0xC54980", Slot = "8")]
	public virtual bool HaveValidData()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FA")]
	public abstract void GatherRenderData();

	[Token(Token = "0x60008FB")]
	protected abstract void GenerateCachedRenderData();

	[Token(Token = "0x60008FC")]
	public abstract void SetRenderingActive(bool newRenderingActive);

	[Token(Token = "0x60008FD")]
	public abstract void PlantUpdate();

	[Token(Token = "0x60008FE")]
	public abstract void UpdateRenderTransforms();

	[Token(Token = "0x60008FF")]
	public abstract void OnProxyGrabbed(Grabbable grabbable);

	[Token(Token = "0x6000900")]
	public abstract void OnProxyDropped(Grabbable grabbable);

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xC54988", Offset = "0xC54988", VA = "0xC54988", Slot = "16")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xC54B0C", Offset = "0xC54B0C", VA = "0xC54B0C", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xC54BC0", Offset = "0xC54BC0", VA = "0xC54BC0", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xC53D3C", Offset = "0xC53D3C", VA = "0xC53D3C")]
	public void UpdateRenderDataBufferPtr()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xC53E38", Offset = "0xC53E38", VA = "0xC53E38")]
	public void UpdateRenderDataPartIndexes()
	{
	}

	[Token(Token = "0x6000906")]
	public void SetProxyInstancesRenderData<ValueType>(ValueType inValue, PlantRenderSystemData.RenderDataOffset dataOffset) where ValueType : struct
	{
	}

	[Token(Token = "0x6000907")]
	public abstract void InitializeComponentData(in PlantPrefabData dataForInit);

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xC54C74", Offset = "0xC54C74", VA = "0xC54C74", Slot = "5")]
	public int GetCompostContentValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xC54C7C", Offset = "0xC54C7C", VA = "0xC54C7C")]
	public void SetHighlight(float newHighlight)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xC52940", Offset = "0xC52940", VA = "0xC52940")]
	protected PlantSystemIndexable()
	{
	}
}
[Token(Token = "0x2000198")]
public class PlantUpdateSystem : PlantSystemBase
{
	[Token(Token = "0x2000199")]
	public enum PlantUpdateType
	{
		[Token(Token = "0x4000945")]
		Transform = 1,
		[Token(Token = "0x4000946")]
		Update = 2,
		[Token(Token = "0x4000947")]
		All = 65535
	}

	[Token(Token = "0x200019A")]
	private struct IndexedProxyUpdateData
	{
		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ProxyID;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsValidData;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool ShouldDisableAfterUpdate;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte UpdateMask;
	}

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DynamicNativeArray<IndexedProxyUpdateData> UpdateDataList;

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xC54EFC", Offset = "0xC54EFC", VA = "0xC54EFC")]
	public PlantUpdateSystem(PlantProxySystem inProxySystem)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xC54FAC", Offset = "0xC54FAC", VA = "0xC54FAC")]
	private int GetUpdateDataListForProxyID(int inProxyID)
	{
		return default(int);
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xC53F28", Offset = "0xC53F28", VA = "0xC53F28")]
	public void SetProxyShouldReceiveUpdates(bool inShouldReceiveUpdates, int inProxyID)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xC55044", Offset = "0xC55044", VA = "0xC55044")]
	public void SetProxyShouldDisableAfterUpdate(int inProxyID, bool ShouldDisableAfterUpdate = true)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xC53FF0", Offset = "0xC53FF0", VA = "0xC53FF0")]
	public void SetProxyUpdateMask(int inProxyID, PlantUpdateType inUpdateMask)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xC537DC", Offset = "0xC537DC", VA = "0xC537DC")]
	public bool GetProxyIsUpdating(in int inProxyID, out byte outUpdateMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xC550D4", Offset = "0xC550D4", VA = "0xC550D4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xC55250", Offset = "0xC55250", VA = "0xC55250", Slot = "5")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xC550D8", Offset = "0xC550D8", VA = "0xC550D8")]
	private void RunPlantUpdateFunctions()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xC552C0", Offset = "0xC552C0", VA = "0xC552C0")]
	public void UpdatePlantTransform(PlantSystemIndexable inIndexable)
	{
	}
}
[Token(Token = "0x200019B")]
public class FlowerHead_AttachPoint : MonoBehaviour
{
	[Token(Token = "0x6000915")]
	[Address(RVA = "0x108503C", Offset = "0x108503C", VA = "0x108503C")]
	public FlowerHead_AttachPoint()
	{
	}
}
[Token(Token = "0x200019C")]
public class PlantTemplate : MonoBehaviour
{
	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlantBodyItemDataName;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string PlantHeadItemDataName;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xC54CE8", Offset = "0xC54CE8", VA = "0xC54CE8")]
	public PlantTemplate()
	{
	}
}
[Token(Token = "0x200019D")]
public abstract class PlantTemplatePart_Base : MonoBehaviour
{
	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseOverrideGrowthSettings;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool HaveGeneratedBaseGrowth;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float GrowthStart;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GrowthEnd;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float OverrideGrowthStart;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OverrideGrowthEnd;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool UseGrowthCurve;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve GrowthCurve;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool UseGrowthOffset;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool HaveXGrowthOffset;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool HaveYGrowthOffset;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool HaveZGrowthOffset;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve XGrowthOffsetCurve;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve YGrowthOffsetCurve;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve ZGrowthOffsetCurve;

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xC54CF0", Offset = "0xC54CF0", VA = "0xC54CF0")]
	protected PlantTemplatePart_Base()
	{
	}
}
[Token(Token = "0x200019E")]
public class PlantTemplatePart_Dirt : PlantTemplatePart_Base
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlantColors DirtColor_Watered;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PlantColors DirtColor_Dry;

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xC54D04", Offset = "0xC54D04", VA = "0xC54D04")]
	public PlantTemplatePart_Dirt()
	{
	}
}
[Token(Token = "0x200019F")]
public class PlantTemplatePart_Head : PlantTemplatePart_Base
{
	[Token(Token = "0x6000919")]
	[Address(RVA = "0xC54D18", Offset = "0xC54D18", VA = "0xC54D18")]
	public PlantTemplatePart_Head()
	{
	}
}
[Token(Token = "0x20001A0")]
public class PlantTemplatePart_HeadPart : PlantTemplatePart_Base
{
	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC54D2C", Offset = "0xC54D2C", VA = "0xC54D2C")]
	public PlantTemplatePart_HeadPart()
	{
	}
}
[Token(Token = "0x20001A1")]
public class PlantTemplatePart_Leaf : PlantTemplatePart_Base
{
	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC54D40", Offset = "0xC54D40", VA = "0xC54D40")]
	public PlantTemplatePart_Leaf()
	{
	}
}
[Token(Token = "0x20001A2")]
public class PlantTemplatePart_Root : PlantTemplatePart_Base
{
	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC54D54", Offset = "0xC54D54", VA = "0xC54D54")]
	public PlantTemplatePart_Root()
	{
	}
}
[Token(Token = "0x20001A3")]
public class PlantTemplatePart_Stem : PlantTemplatePart_Base
{
	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC54D68", Offset = "0xC54D68", VA = "0xC54D68")]
	public PlantTemplatePart_Stem()
	{
	}
}
[Token(Token = "0x20001A4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FAFA8", Offset = "0x9FAFA8")]
public class PlantType : ScriptableObject
{
	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite sprite;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject seedMeshPrefab;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool requiresTrellis;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CraftingSystem.ResourceTypeEnum resourceType;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC54D7C", Offset = "0xC54D7C", VA = "0xC54D7C")]
	public PlantType()
	{
	}
}
[Token(Token = "0x20001A5")]
public class PlantTypeDictionary : MonoBehaviour
{
	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlantTypeDictionary Instance;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<PlantType> plantTypes;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<CraftingSystem.ResourceType, PlantType> lookupTable;

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC54DF4", Offset = "0xC54DF4", VA = "0xC54DF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC54E4C", Offset = "0xC54E4C", VA = "0xC54E4C")]
	public PlantTypeDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A6")]
public class Seed : SaveableComponent, ITillable, IInitializable
{
	[Token(Token = "0x20001A7")]
	public enum SeedStatus
	{
		[Token(Token = "0x4000984")]
		Dormant,
		[Token(Token = "0x4000985")]
		LyingOnGround,
		[Token(Token = "0x4000986")]
		Planted,
		[Token(Token = "0x4000987")]
		Germinating,
		[Token(Token = "0x4000988")]
		SpawnedPlant,
		[Token(Token = "0x4000989")]
		BeingRemoved
	}

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlantType plantType;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AssetReference plantTypeRef;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool requiresTrellis;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CraftingSystem.ResourceType resourceType;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject moodBubblePrefab;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AssetReference PlantData;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject moodBubble;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Grabbable grabbable;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float sproutingDelay;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float maxTimeAlive;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float lifeTimer;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public SeedStatus CurrentStatus;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00624", Offset = "0xA00624")]
	[SerializeField]
	private NeatAudioCue m_sproutedSound;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float statusTimer;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SoilSurface PlantedSoilSurface;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SaveID PlantedSurfaceSaveID;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float localWaterLevel;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Rigidbody SeedRigidBody;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private BirdInterestPoint birdInterestPoint;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float colliderSize;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 trellisPlantPosition;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool initialized;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ISoilManipulator m_soilManipulator;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00670", Offset = "0xA00670")]
	private bool <IsSoilManipulator>k__BackingField;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 PendingPlantPosition;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SoilValueCheckHelper SoilnessValueCheck;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SoilValueCheckHelper WaterValueCheck;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private AsyncOperationHandle<PlantType> PlantTypeAsyncHandle;

	[Token(Token = "0x170000EA")]
	public bool IsSoilManipulator
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xC85B10", Offset = "0xC85B10", VA = "0xC85B10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104DC", Offset = "0xA104DC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000922")]
		[Address(RVA = "0xC85B18", Offset = "0xC85B18", VA = "0xC85B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104EC", Offset = "0xA104EC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC85B24", Offset = "0xC85B24", VA = "0xC85B24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC85F50", Offset = "0xC85F50", VA = "0xC85F50")]
	private bool HavePendingAsyncOperations()
	{
		return default(bool);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC863E0", Offset = "0xC863E0", VA = "0xC863E0")]
	public void SetSoilManipulation(ISoilManipulator manipulator)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC85FD0", Offset = "0xC85FD0", VA = "0xC85FD0")]
	private bool IsAtEndOfLife()
	{
		return default(bool);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC864F4", Offset = "0xC864F4", VA = "0xC864F4")]
	private void OnStopMoving()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC8669C", Offset = "0xC8669C", VA = "0xC8669C")]
	private bool TryFetchCurrentSoilSurface()
	{
		return default(bool);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC86024", Offset = "0xC86024", VA = "0xC86024")]
	private bool TryToPlantSelf()
	{
		return default(bool);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC86A24", Offset = "0xC86A24", VA = "0xC86A24")]
	private void PlantSelf(Vector3 plantPosition)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC862C8", Offset = "0xC862C8", VA = "0xC862C8")]
	private void OnPlanted(Vector3 pos)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xC86B44", Offset = "0xC86B44", VA = "0xC86B44")]
	private void TryManipulateSoil(Vector3 pos)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xC86C1C", Offset = "0xC86C1C", VA = "0xC86C1C")]
	private void TrySprout(Vector3 plantPosition)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xC8630C", Offset = "0xC8630C", VA = "0xC8630C")]
	public void SpawnPlant()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xC86EA8", Offset = "0xC86EA8", VA = "0xC86EA8")]
	private void OnProxyPlantSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xC86FBC", Offset = "0xC86FBC", VA = "0xC86FBC")]
	private void OnSeedSprouted()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xC87054", Offset = "0xC87054", VA = "0xC87054")]
	private void OnPickedUp()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xC863F0", Offset = "0xC863F0", VA = "0xC863F0")]
	private void RemoveSeed()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xC8719C", Offset = "0xC8719C", VA = "0xC8719C")]
	public bool RequiresTrellis()
	{
		return default(bool);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xC871A4", Offset = "0xC871A4", VA = "0xC871A4", Slot = "5")]
	public void Till()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xC87288", Offset = "0xC87288", VA = "0xC87288", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xC87334", Offset = "0xC87334", VA = "0xC87334", Slot = "6")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xC87B5C", Offset = "0xC87B5C", VA = "0xC87B5C")]
	private void OnPlantTypeLoaded(AsyncOperationHandle<PlantType> inLoadedHandle)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xC876C4", Offset = "0xC876C4", VA = "0xC876C4")]
	private void InitializePlantTypeData()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xC87BD4", Offset = "0xC87BD4", VA = "0xC87BD4")]
	public void SetPlantType(PlantType type, AssetReference plantRef)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xC87CA0", Offset = "0xC87CA0", VA = "0xC87CA0")]
	public Seed()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A8")]
public class SeedState : ComponentState
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable PlantTypeAsset;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReferenceSerializable PlantDataAsset;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Seed.SeedStatus SeedStatus;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StatusTimer;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float LifeTimer;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public SaveID SoilSurfaceSaveID;

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xCDC124", Offset = "0xCDC124", VA = "0xCDC124")]
	public SeedState(AssetReference inPlantTypeAsset, Seed.SeedStatus inSeedStatus, float inStatusTime, float inLifeTimer, SaveID inSoilSurfaceSaveID, AssetReference inPlantDataAsset)
	{
	}
}
[Token(Token = "0x20001A9")]
public struct BilinearSampleHelper
{
	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int BufferIndex;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float DataWeight;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public unsafe float* DataValuePtr;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1006D00", Offset = "0x1006D00", VA = "0x1006D00")]
	public unsafe static bool ModifyBilinearSample(in SurfaceData.TexelData* inDataBufferPtr, in SoilDataType inDataType, in float inModificationAmount, in Vector2 inSampleLocation, in Vector2Int inDataExtents)
	{
		return default(bool);
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1006DA4", Offset = "0x1006DA4", VA = "0x1006DA4")]
	public unsafe static bool ModifyBilinearSample_Prealloc(ref BilinearSampleHelper* inHelperBuffer, in SurfaceData.TexelData* inDataBufferPtr, in SoilDataType inDataType, in float inModificationAmount, in Vector2 inSampleLocation, in Vector2Int inDataExtents)
	{
		return default(bool);
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1006E10", Offset = "0x1006E10", VA = "0x1006E10")]
	public unsafe static void SetupSampleHelpers(ref BilinearSampleHelper* inHelperBuffer, in Vector2 inSampleLocation, in Vector2Int inDataExtents)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x10070E8", Offset = "0x10070E8", VA = "0x10070E8")]
	public unsafe static void FetchDataPointersFromBuffer(ref BilinearSampleHelper* inHelperBuffer, in SurfaceData.TexelData* inDataBufferPtr, in SoilDataType inDataType)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x1007188", Offset = "0x1007188", VA = "0x1007188")]
	public unsafe static bool TryModifyData(ref BilinearSampleHelper* inHelperBuffer, in float inModificationAmount, in bool inAllowWeightChanges = false)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001AA")]
public class SoilValueCheckHelper
{
	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int ResultStorageID;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float ResultValue;

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xCE96D8", Offset = "0xCE96D8", VA = "0xCE96D8")]
	private SoilValueCheckHelper()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xCE9708", Offset = "0xCE9708", VA = "0xCE9708", Slot = "1")]
	~SoilValueCheckHelper()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xCE9820", Offset = "0xCE9820", VA = "0xCE9820")]
	public bool IsValidRequest()
	{
		return default(bool);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xCE9840", Offset = "0xCE9840", VA = "0xCE9840")]
	public float GetRequestValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xCE9940", Offset = "0xCE9940", VA = "0xCE9940")]
	public static SoilValueCheckHelper CreateValueCheckRequest(in int inSoilID, in SoilDataType inDataValueToCheck, in Vector2 inLocationToCheck, in bool inDoBilinearCheck)
	{
		return null;
	}
}
[Token(Token = "0x20001AB")]
public struct SoilValueCheckData
{
	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SoilID;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public SoilDataType DataTypeToCheck;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 SurfaceLocationToCheck;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DoBilinearCheck;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float FoundValue;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ResultStorageIndex;
}
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB010", Offset = "0x9FB010")]
public struct CheckSoilValuesJob : IJob
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* TexelDataBuffer;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int TexelDataBufferExtents;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SoilValueCheckData* ValueCheckDataBuffer;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ValueCheckDataBufferSize;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xAE0E44", Offset = "0xAE0E44", VA = "0xAE0E44", Slot = "4")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xAE0E4C", Offset = "0xAE0E4C", VA = "0xAE0E4C")]
	private unsafe void SetCheckDataFromSample(SoilValueCheckData* inDataToSet, SurfaceData.TexelData* inTexelData)
	{
	}
}
[Token(Token = "0x20001AD")]
public class GrassBall : MonoBehaviour, ISoilManipulator, ICompostable
{
	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float GrassApplicationRadius;

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xE0D834", Offset = "0xE0D834", VA = "0xE0D834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xE0D898", Offset = "0xE0D898", VA = "0xE0D898")]
	private bool TryChangeSoilToGrassAtLocation(Vector3 inPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xE0DA04", Offset = "0xE0DA04", VA = "0xE0DA04", Slot = "5")]
	public int GetCompostContentValue()
	{
		return default(int);
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xE0DA0C", Offset = "0xE0DA0C", VA = "0xE0DA0C", Slot = "4")]
	public void OnSoilManipulation(Vector3 inPosition)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xE0DA10", Offset = "0xE0DA10", VA = "0xE0DA10")]
	public GrassBall()
	{
	}
}
[Token(Token = "0x20001AE")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB044", Offset = "0x9FB044")]
public struct SoilModificationJob : IJobParallelFor
{
	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* DataToModify;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Unity.Collections.ReadOnly]
	public int4 TexelData;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Unity.Collections.ReadOnly]
	public int4 AdditionalData;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Unity.Collections.ReadOnly]
	public float4 ModificationData;

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xAD690C", Offset = "0xAD690C", VA = "0xAD690C", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001AF")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB078", Offset = "0x9FB078")]
internal struct UntillableSoilGrowthJob : IJobParallelFor
{
	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SoilModificationData* ModificationDataBuffer;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int ModificationDataBufferSize;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[Unity.Collections.ReadOnly]
	public int4 AdditionalData;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Unity.Collections.ReadOnly]
	public Vector2Int SurfaceDataExtents;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Unity.Collections.ReadOnly]
	public uint RandomSeed;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* BaseDataPtr;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Unity.Collections.ReadOnly]
	public float TimeSinceLastJob;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe bool* JobModifiedDataPtr;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0xB19258", Offset = "0xB19258", VA = "0xB19258", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB0AC", Offset = "0x9FB0AC")]
public struct SoilEvaporationCheckJob : IJobParallelFor
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* SoilDataPtr;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int SoilDataSize;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe long* JobResultBufferPtr;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int JobResultIndex;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SoilSurfaceIndex;

	[Token(Token = "0x600094F")]
	[Address(RVA = "0xAD6844", Offset = "0xAD6844", VA = "0xAD6844", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001B1")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB0E0", Offset = "0x9FB0E0")]
public struct SoilEvaporationJob : IJobParallelFor
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* SoilDataPtr;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int SoilDataSize;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[Unity.Collections.ReadOnly]
	public Vector2Int SurfaceDataExtents;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe long* JobResultBufferPtr;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int JobResultIndex;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Unity.Collections.ReadOnly]
	public Vector2Int JobTileCount;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Unity.Collections.ReadOnly]
	public Vector2Int JobTileDataExtents;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Unity.Collections.ReadOnly]
	public float TimeSinceLastJob;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int SoilSurfaceIndex;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xAD684C", Offset = "0xAD684C", VA = "0xAD684C", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x20001B2")]
public struct SoilModificationActionData
{
	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int SoilID;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public SoilDataType ModificationType;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2 ModificationLocation;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2Int SoilExtents;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ModificationRadius;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ModificationValue;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseFalloff;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool ValueChanged;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float TimeLeft;
}
[Token(Token = "0x20001B3")]
public struct SoilModificationData
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float4 Data;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xAD6900", Offset = "0xAD6900", VA = "0xAD6900")]
	public SoilModificationData(float4 data)
	{
	}
}
[Token(Token = "0x20001B4")]
public class SoilModificationManager
{
	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DynamicNativeArray<PlantGrowthSystem.SoilSurfaceData> ParentSurfaceData;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> SoilSurfaceIDsToUpdate;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> PendingSoilSurfaceWaternessUpdates;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> PendingSoilSurfaceEvaporations;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SoilModificationActionData>[] PendingUntillableSoilModifications;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DynamicNativeArray<SoilModificationData>[] SoilModificationJobData;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NativeArray<JobHandle> ScheduledSoilGrowthJobs;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NativeArray<bool> SoilGrowthJobResults;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NativeArray<long> WaternessCheckJobResults;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NativeArray<long> SoilEvaporationJobResults;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private DynamicNativeArray<SoilValueCheckData> PendingValueChecks;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DynamicNativeArray<SoilValueCheckData>[] ValueCheckJobPayloads;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private DynamicNativeArray<float> ValueCheckResults;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private DynamicNativeArray<SoilModificationActionData> PendingSoilModifications;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public DynamicNativeArray<TryUseSoilResourceJob> QueuedSoilResourceJobs;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public DynamicNativeArray<SoilModifyAtLocationJob> QueuedSoilLocationModifications;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PlantGrowthSystem ParentSystem;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private JobHandle PreviousFrameCombinedHandle;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xCE3CFC", Offset = "0xCE3CFC", VA = "0xCE3CFC")]
	public SoilModificationManager(PlantGrowthSystem inParentSystem, DynamicNativeArray<PlantGrowthSystem.SoilSurfaceData> inSurfaceData)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xCE3F7C", Offset = "0xCE3F7C", VA = "0xCE3F7C", Slot = "1")]
	~SoilModificationManager()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xCE4130", Offset = "0xCE4130", VA = "0xCE4130")]
	public void WaitForAllJobsFinished()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xCE413C", Offset = "0xCE413C", VA = "0xCE413C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xCE55A4", Offset = "0xCE55A4", VA = "0xCE55A4")]
	private void CreateSoilValueCheckJobs(ref JobHandle outCombinedDependencies)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xCE5A9C", Offset = "0xCE5A9C", VA = "0xCE5A9C")]
	private void CreateSoilModificationJobs(ref JobHandle outCombinedDependencies, ref JobHandle inCombinedDependencies)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xCE5ED0", Offset = "0xCE5ED0", VA = "0xCE5ED0")]
	public void FinishJobsAndCleanup()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xCE3FE4", Offset = "0xCE3FE4", VA = "0xCE3FE4")]
	private void Cleanup()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xCE5EFC", Offset = "0xCE5EFC", VA = "0xCE5EFC")]
	public void AddSoilSurfaceToUpdate(int inSurfaceIDToUpdate)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xCE5F5C", Offset = "0xCE5F5C", VA = "0xCE5F5C")]
	public void AddPendingSoilModification(in int inSoilID, in SoilDataType inModificationType, in Vector2 inModificationLocation, in Vector2Int inSoilExtents, in float inModificationRadius, in float inModificationValue, bool inUseFalloff = true)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xCE6060", Offset = "0xCE6060", VA = "0xCE6060")]
	public void AddPendingSoilModification_Untillable(in int inSoilID, in Vector2 inModificationLocation, in Vector2Int inSoilExtents, in float inModificationRadius, in float inModificationValue, in bool valueChangedSinceLastUpdate, in float duration)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xCE620C", Offset = "0xCE620C", VA = "0xCE620C")]
	public int AddPendingSoilValueCheck(in int inSoilID, in SoilDataType inDataValueToCheck, in Vector2 inLocationToCheck, in bool inDoBilinearCheck)
	{
		return default(int);
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xCE631C", Offset = "0xCE631C", VA = "0xCE631C")]
	public float FetchSoilCheckResult(in int resultStorageIndex, bool clearOnFetch = true, bool clearOnValidResult = true)
	{
		return default(float);
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xCE63EC", Offset = "0xCE63EC", VA = "0xCE63EC")]
	public void ClearValueCheckResultSlot(in int resultSlotToClear)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xCE5E38", Offset = "0xCE5E38", VA = "0xCE5E38")]
	private void SetSoilDataNeedWaterStateUpdate(int inSoilID)
	{
	}
}
[Token(Token = "0x20001B5")]
public class SoilModifierComponent : SaveableComponent, IInitializable
{
	[Token(Token = "0x20001B6")]
	public struct SoilModification
	{
		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector2 position;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float radius;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float modificationValue;

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xAD6914", Offset = "0xAD6914", VA = "0xAD6914")]
		public SoilModification(Vector2 position, float radius, float value)
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xAD6920", Offset = "0xAD6920", VA = "0xAD6920")]
		public bool IsValid()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40009D6")]
	private const float DefaultModificationRadius = 1f;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool RunEveryFrame;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool RunOnStart;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool UseDeltaTime;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ModificationValue;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ModificationRadius;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool[] SoilTypesToModify;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 SoilTraceOffset;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TraceDistance;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform SoilTracePosition;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float m_radiusFactor;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool OnlyModifySoilWithUntillableAreas;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SoilSurfaceGround soilSurface;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SoilModification previousModification;

	[Token(Token = "0x170000EB")]
	public float RadiusFactor
	{
		[Token(Token = "0x6000961")]
		[Address(RVA = "0xCE6474", Offset = "0xCE6474", VA = "0xCE6474")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000962")]
		[Address(RVA = "0xCE647C", Offset = "0xCE647C", VA = "0xCE647C")]
		set
		{
		}
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xCE6484", Offset = "0xCE6484", VA = "0xCE6484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xCE6840", Offset = "0xCE6840", VA = "0xCE6840")]
	public void UpdateWithValue(float modificationValue, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xCE68FC", Offset = "0xCE68FC", VA = "0xCE68FC")]
	public void UpdateWithRadius(float modificationRadius, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xCE6914", Offset = "0xCE6914", VA = "0xCE6914")]
	public void UpdateWithRadiusFactor(float radiusFactor, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xCE684C", Offset = "0xCE684C", VA = "0xCE684C")]
	public void UpdateWithModification(float modificationValue, float modificationRadius, float radiusFactor, SoilDataType dataToModify)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xCE6928", Offset = "0xCE6928", VA = "0xCE6928")]
	public void ApplyModificationToData(SoilDataType[] dataToModify)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xCE649C", Offset = "0xCE649C", VA = "0xCE649C")]
	private void CreateModificationJob([Optional] SoilDataType[] dataToModify, bool calledFromUpdate = false)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xCE6B5C", Offset = "0xCE6B5C", VA = "0xCE6B5C")]
	private SoilSurfaceGround GetSoilSurfaceToModify()
	{
		return null;
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xCE6E14", Offset = "0xCE6E14", VA = "0xCE6E14", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xCE6F18", Offset = "0xCE6F18", VA = "0xCE6F18", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xCE6FFC", Offset = "0xCE6FFC", VA = "0xCE6FFC")]
	public void UpdateCachedSoilSurface()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xCE7028", Offset = "0xCE7028", VA = "0xCE7028")]
	public bool HasSoilSurfaceBelow()
	{
		return default(bool);
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xCE7098", Offset = "0xCE7098", VA = "0xCE7098")]
	public SoilModifierComponent()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B7")]
public class SoilModifierComponentState : ComponentState
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool RunEveryFrame;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool RunOnStart;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool UseDeltaTime;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float ModificationValue;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ModificationRadius;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RadiusFactor;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xCE6EA4", Offset = "0xCE6EA4", VA = "0xCE6EA4")]
	public SoilModifierComponentState(bool inRunEveryFrame, bool inRunOnStart, bool inUseDeltaTime, float inModificationValue, float inModificationRadius, float inRadiusFactor)
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB114", Offset = "0x9FB114")]
public struct SoilModifyAtLocationJob : IJob
{
	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* DataToModify;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int DataExtents;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 JobLocation;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoilDataType ModificationDataType;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ModificationValue;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilinearModification;

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xAD699C", Offset = "0xAD699C", VA = "0xAD699C", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x20001B9")]
public struct SoilResourceJobPayload
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector2 JobLocation;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public SoilDataType JobResourceType;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float JobResourceValue;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseBilinearData;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool JobSuccess;
}
[Token(Token = "0x20001BA")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0x9FB148", Offset = "0x9FB148")]
public struct TryUseSoilResourceJob : IJob
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SurfaceData.TexelData* DataBufferPtr;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector2Int DataExtents;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[NativeDisableUnsafePtrRestriction]
	public unsafe SoilResourceJobPayload* PayloadBufferPtr;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int PayloadBufferStartIndex;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PayloadCount;

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xB191C4", Offset = "0xB191C4", VA = "0xB191C4", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x20001BB")]
public class TrellisUtilities
{
	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00868", Offset = "0xA00868")]
	private static float <MaxDistanceFromTrellis>k__BackingField;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00878", Offset = "0xA00878")]
	private static string <TrellisTag>k__BackingField;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Collider[] results;

	[Token(Token = "0x170000EC")]
	public static float MaxDistanceFromTrellis
	{
		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1AE27AC", Offset = "0x1AE27AC", VA = "0x1AE27AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA104FC", Offset = "0xA104FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000ED")]
	public static string TrellisTag
	{
		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1AE2814", Offset = "0x1AE2814", VA = "0x1AE2814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1050C", Offset = "0xA1050C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1AE287C", Offset = "0x1AE287C", VA = "0x1AE287C")]
	public static bool LookForTrellis(Vector3 pos, out Vector3 plantPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1AE2A78", Offset = "0x1AE2A78", VA = "0x1AE2A78")]
	public static Vector3 GetPositionNextToTrellis(Vector3 currentPlantPos, Vector3 trellisPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1AE2BDC", Offset = "0x1AE2BDC", VA = "0x1AE2BDC")]
	public static bool ColliderHasTrellis(Collider col)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001BC")]
public class Boat : MonoBehaviour, IInitializable, IMovingPlatform
{
	[Token(Token = "0x20001BD")]
	public enum BoatMovementState
	{
		[Token(Token = "0x4000A26")]
		MovingForward,
		[Token(Token = "0x4000A27")]
		MovingBackwards,
		[Token(Token = "0x4000A28")]
		SlowingDown,
		[Token(Token = "0x4000A29")]
		StandingStill
	}

	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB17C", Offset = "0x9FB17C")]
	private sealed class <UpdateMusic>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Boat <>4__this;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <s>5__2;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <allow>5__3;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0x100D0FC", Offset = "0x100D0FC", VA = "0x100D0FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x100D164", Offset = "0x100D164", VA = "0x100D164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x100C000", Offset = "0x100C000", VA = "0x100C000")]
		[DebuggerHidden]
		public <UpdateMusic>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x100CA94", Offset = "0x100CA94", VA = "0x100CA94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x100CA98", Offset = "0x100CA98", VA = "0x100CA98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x100D104", Offset = "0x100D104", VA = "0x100D104", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Boat Instance;

	[Token(Token = "0x4000A01")]
	private const float PlayerInRangeOfBoatSqDistance = 625f;

	[Token(Token = "0x4000A02")]
	private const float SphereCastRadius = 1f;

	[Token(Token = "0x4000A03")]
	private const float BoatLength = 4f;

	[Token(Token = "0x4000A04")]
	private const float ResetGasLeverDuration = 4f;

	[Token(Token = "0x4000A05")]
	private const float MOTOR_MAX_ANGLE = 35f;

	[Token(Token = "0x4000A06")]
	private const float MAX_SPEED = 4.5f;

	[Token(Token = "0x4000A07")]
	private const float ACCELERATION = 0.25f;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Rotatable2 gasLever;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Rotatable steeringWheel;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody rigbod;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform boatContainer;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform motorTransform;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Animator engineAnimator;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MeshCollider boatContainerTrigger;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA008F8", Offset = "0xA008F8")]
	[SerializeField]
	private UnityEvent m_onEnterBoatEvent;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private UnityEvent m_onExitBoatEvent;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int speedMultiplierParam;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float currentSpeed;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float scaledSpeed;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float currentMaxSpeed;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private BoatMovementState currentState;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool needsToCheckDistanceFromLand;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int SPEED;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00954", Offset = "0xA00954")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private NeatAudioCue m_collisionSound;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NeatAudioPlayer boatEngineSound;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer boatWavesSound;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NeatAudioPlayer boatIdleSound;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool initialized;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 velocity;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 m_sphereCastOffset;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float m_stuckDuration;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Coroutine boatMusic;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private YieldInstruction WaitSlightly;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool boatIsStopped;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool boatMusicStopped;

	[Token(Token = "0x170000EE")]
	public Vector3 Velocity
	{
		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1009AFC", Offset = "0x1009AFC", VA = "0x1009AFC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1009B08", Offset = "0x1009B08", VA = "0x1009B08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1009C58", Offset = "0x1009C58", VA = "0x1009C58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1009DB4", Offset = "0x1009DB4", VA = "0x1009DB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1009E78", Offset = "0x1009E78", VA = "0x1009E78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1009F28", Offset = "0x1009F28", VA = "0x1009F28", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x100A1DC", Offset = "0x100A1DC", VA = "0x100A1DC")]
	private bool PlayerIsAttachedToBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x100A368", Offset = "0x100A368", VA = "0x100A368")]
	private void OnLeverOrWheelGrabbed()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x100A4F8", Offset = "0x100A4F8", VA = "0x100A4F8")]
	public bool PlayerInRangeOfBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x1007BB4", Offset = "0x1007BB4", VA = "0x1007BB4")]
	public bool OnBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x100A6F8", Offset = "0x100A6F8", VA = "0x100A6F8")]
	private bool CheckIfPlayerIsInBoat()
	{
		return default(bool);
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x100A39C", Offset = "0x100A39C", VA = "0x100A39C")]
	private void AttachPlayerToBoat()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x100AA44", Offset = "0x100AA44", VA = "0x100AA44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x100B364", Offset = "0x100B364", VA = "0x100B364")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x100B220", Offset = "0x100B220", VA = "0x100B220")]
	private void UpdateBoatAutomaticReturn()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x100BA40", Offset = "0x100BA40", VA = "0x100BA40")]
	public void ReturnBoatToDock()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x100B924", Offset = "0x100B924", VA = "0x100B924")]
	private void ReturnBoatToLand(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x100AACC", Offset = "0x100AACC", VA = "0x100AACC")]
	private void UpdateSpeed()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x100BF84", Offset = "0x100BF84", VA = "0x100BF84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1051C", Offset = "0xA1051C")]
	private IEnumerator UpdateMusic()
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x100B008", Offset = "0x100B008", VA = "0x100B008")]
	private void UpdateDirection()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x100B368", Offset = "0x100B368", VA = "0x100B368")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x100C174", Offset = "0x100C174", VA = "0x100C174")]
	private bool CheckCollision(Vector3 vel, out Vector3 modifiedVelocity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x100C0C4", Offset = "0x100C0C4", VA = "0x100C0C4")]
	private Vector3 GetUpdatedVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x100C02C", Offset = "0x100C02C", VA = "0x100C02C")]
	private void SlowDown()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x100C044", Offset = "0x100C044", VA = "0x100C044")]
	private void StandStill()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x100B55C", Offset = "0x100B55C", VA = "0x100B55C")]
	private bool IsFarAwayFromLand(out Vector3 newPos, out Quaternion newRot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x100C568", Offset = "0x100C568", VA = "0x100C568")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x100C6D4", Offset = "0x100C6D4", VA = "0x100C6D4")]
	private void OnPlayerTeleported(TeleportDestinationInfo destinationInfo)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x100BF44", Offset = "0x100BF44", VA = "0x100BF44")]
	private void ResetGasLever()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x100C948", Offset = "0x100C948", VA = "0x100C948", Slot = "5")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x100C954", Offset = "0x100C954", VA = "0x100C954")]
	public Boat()
	{
	}
}
[Token(Token = "0x20001BF")]
public class BoatDockPosition : MonoBehaviour
{
	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<BoatDockPosition> positions;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x100D16C", Offset = "0x100D16C", VA = "0x100D16C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x100D23C", Offset = "0x100D23C", VA = "0x100D23C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x100BB60", Offset = "0x100BB60", VA = "0x100BB60")]
	public static Transform GetBoatDockPosition()
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x100D30C", Offset = "0x100D30C", VA = "0x100D30C")]
	public BoatDockPosition()
	{
	}
}
[Token(Token = "0x20001C0")]
public class SnapToSurface : MonoBehaviour
{
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB18C", Offset = "0x9FB18C")]
	private sealed class <SnapWhenStill>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rb;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable grabbable;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SnapToSurface <>4__this;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeOut>5__2;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xCE1014", Offset = "0xCE1014", VA = "0xCE1014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0xCE107C", Offset = "0xCE107C", VA = "0xCE107C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xCE0B3C", Offset = "0xCE0B3C", VA = "0xCE0B3C")]
		[DebuggerHidden]
		public <SnapWhenStill>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xCE0CB0", Offset = "0xCE0CB0", VA = "0xCE0CB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xCE0CB4", Offset = "0xCE0CB4", VA = "0xCE0CB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xCE101C", Offset = "0xCE101C", VA = "0xCE101C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform surfacePos;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parentObject;

	[Token(Token = "0x4000A32")]
	private const float movementThreshold = 0.1f;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Rigidbody> intersectingRbs;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Grabbable> attachedObjects;

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xCDFD00", Offset = "0xCDFD00", VA = "0xCDFD00")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xCDFE78", Offset = "0xCDFE78", VA = "0xCDFE78")]
	private bool BoatIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xCDFF64", Offset = "0xCDFF64", VA = "0xCDFF64")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xCE045C", Offset = "0xCE045C", VA = "0xCE045C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xCE085C", Offset = "0xCE085C", VA = "0xCE085C")]
	private void AddMovingPlatformVelocity(Rigidbody rb)
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xCE0A90", Offset = "0xCE0A90", VA = "0xCE0A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA105D0", Offset = "0xA105D0")]
	private IEnumerator SnapWhenStill(Rigidbody rb, Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xCE0B68", Offset = "0xCE0B68", VA = "0xCE0B68")]
	public void SnappedObjectGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xCE02E0", Offset = "0xCE02E0", VA = "0xCE02E0")]
	private void AddObject(Grabbable obj)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xCE0680", Offset = "0xCE0680", VA = "0xCE0680")]
	private void RemoveObject(Grabbable obj)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xCE0C00", Offset = "0xCE0C00", VA = "0xCE0C00")]
	public SnapToSurface()
	{
	}
}
[Token(Token = "0x20001C2")]
public class ChildGrabbableToggler : MonoBehaviour
{
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB19C", Offset = "0x9FB19C")]
	private sealed class <CheckShouldDisableChildren>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChildGrabbableToggler <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x1011504", Offset = "0x1011504", VA = "0x1011504", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x101156C", Offset = "0x101156C", VA = "0x101156C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1010E7C", Offset = "0x1010E7C", VA = "0x1010E7C")]
		[DebuggerHidden]
		public <CheckShouldDisableChildren>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x101143C", Offset = "0x101143C", VA = "0x101143C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1011440", Offset = "0x1011440", VA = "0x1011440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x101150C", Offset = "0x101150C", VA = "0x101150C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IGrabbable[] ChildGrabbables;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ShouldDisableChildren;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool ChildrenActive;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider TogglerCollider;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Grabbable MainChildGrabbable;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool MainChildStashed;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine disableChildrenRoutine;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1010314", Offset = "0x1010314", VA = "0x1010314")]
	public void Awake()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x101062C", Offset = "0x101062C", VA = "0x101062C")]
	public void SetupChildGrabbables(Component[] inAdditionalComponents)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1010320", Offset = "0x1010320", VA = "0x1010320")]
	public void SetChildrenActive(bool newActive, bool forceApply = false)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1010E00", Offset = "0x1010E00", VA = "0x1010E00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10684", Offset = "0xA10684")]
	private IEnumerator CheckShouldDisableChildren()
	{
		return null;
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1010EA8", Offset = "0x1010EA8", VA = "0x1010EA8")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1010EC8", Offset = "0x1010EC8", VA = "0x1010EC8")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1010D20", Offset = "0x1010D20", VA = "0x1010D20")]
	private void OnMainChildGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1010F0C", Offset = "0x1010F0C", VA = "0x1010F0C")]
	private void OnMainChildReleased(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x1010DC4", Offset = "0x1010DC4", VA = "0x1010DC4")]
	private void OnMainChildStashed()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x1010FA8", Offset = "0x1010FA8", VA = "0x1010FA8")]
	private void OnMainChildUnstashed()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1010FB8", Offset = "0x1010FB8", VA = "0x1010FB8")]
	public void Touch()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1010FC4", Offset = "0x1010FC4", VA = "0x1010FC4")]
	public void OnChildGrabbed(Grabbable childGrabbable)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x101128C", Offset = "0x101128C", VA = "0x101128C")]
	public bool MainChildIsStashed()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x101136C", Offset = "0x101136C", VA = "0x101136C")]
	public ChildGrabbableToggler()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x101137C", Offset = "0x101137C", VA = "0x101137C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA106E8", Offset = "0xA106E8")]
	private bool <SetupChildGrabbables>b__8_0(IGrabbable arrayItem)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001C4")]
public class Bobber : MonoBehaviour
{
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB1AC", Offset = "0x9FB1AC")]
	private sealed class <AnimateBobberResetToRod>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bobber <>4__this;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float customYOffset;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <dir>5__2;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <speed>5__3;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x100FCDC", Offset = "0x100FCDC", VA = "0x100FCDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x100FD44", Offset = "0x100FD44", VA = "0x100FD44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x100EDF0", Offset = "0x100EDF0", VA = "0x100EDF0")]
		[DebuggerHidden]
		public <AnimateBobberResetToRod>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x100F878", Offset = "0x100F878", VA = "0x100F878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x100F87C", Offset = "0x100F87C", VA = "0x100F87C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x100FCE4", Offset = "0x100FCE4", VA = "0x100FCE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB1BC", Offset = "0x9FB1BC")]
	private sealed class <ReactivateBobberPhysicsAfterDuration>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bobber <>4__this;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x100FE2C", Offset = "0x100FE2C", VA = "0x100FE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x100FE94", Offset = "0x100FE94", VA = "0x100FE94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x100F7B8", Offset = "0x100F7B8", VA = "0x100F7B8")]
		[DebuggerHidden]
		public <ReactivateBobberPhysicsAfterDuration>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x100FD4C", Offset = "0x100FD4C", VA = "0x100FD4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x100FD50", Offset = "0x100FD50", VA = "0x100FD50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x100FE34", Offset = "0x100FE34", VA = "0x100FE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A45")]
	private const float BobberTargetMaxDistance = 0.01f;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody rb;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Tool_FishingRod rod;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform lineAttachPoint;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform fishAttachPoint;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConfigurableJoint joint;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem waterSplash;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ParticleSystem fishBiteLureEffect;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ParticleSystem fishReeledInEffect;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ParticleSystem fishSwimmingFastEffect;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Collider bobberCollider;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 origStruggleScale;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NeatAudioCue throwSound;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NeatAudioCue retractSound;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NeatAudioCue splashSound;

	[NonSerialized]
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer soundPlayer;

	[Token(Token = "0x4000A55")]
	private const float FLOAT_STRENGTH = 50f;

	[Token(Token = "0x4000A56")]
	private const float FLOAT_Y_OFFSET = 0.21f;

	[Token(Token = "0x4000A57")]
	private const float DRAG_FLOATING = 5f;

	[Token(Token = "0x4000A58")]
	private const float DRAG_AIR = 1f;

	[Token(Token = "0x4000A59")]
	private const float DRAG_AIR_BUBBLE_ATTACHED = 5f;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Tweener scaleAnim;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody attachedToBubble;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool attachedBubbleIsFish;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float m_attachYOffset;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float m_additionalBobberYOffset;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 bubbleOffset;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool isAnimatingRetraction;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rigidbody fishingRodRb;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine m_animatieBobberRoutine;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Coroutine m_activateBobberCollisionRoutine;

	[Token(Token = "0x170000F5")]
	public Rigidbody AttachedFish
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x100D38C", Offset = "0x100D38C", VA = "0x100D38C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x100D394", Offset = "0x100D394", VA = "0x100D394")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x100D39C", Offset = "0x100D39C", VA = "0x100D39C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x100D404", Offset = "0x100D404", VA = "0x100D404")]
	public void SetRod(Tool_FishingRod rod)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x100D458", Offset = "0x100D458", VA = "0x100D458")]
	private void SplashAt(Vector3 pos)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x100D5D0", Offset = "0x100D5D0", VA = "0x100D5D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x100D680", Offset = "0x100D680", VA = "0x100D680")]
	public bool CanBeThrown()
	{
		return default(bool);
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x100D690", Offset = "0x100D690", VA = "0x100D690")]
	public void ResetWaterPhysics()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x100D728", Offset = "0x100D728", VA = "0x100D728")]
	public void UpdateWaterPhysics()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x100DA80", Offset = "0x100DA80", VA = "0x100DA80")]
	public void UpdateAttachedBubble()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x100DCE8", Offset = "0x100DCE8", VA = "0x100DCE8")]
	public void DetachFromFishBubble(bool kinematic)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x100DDA8", Offset = "0x100DDA8", VA = "0x100DDA8")]
	public void AttachToComponent(Fish fish, Rigidbody fishRb)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x100E1CC", Offset = "0x100E1CC", VA = "0x100E1CC")]
	public void AttachToComponent(Grabbable grabbable, Rigidbody grabbableRb)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x100DFA0", Offset = "0x100DFA0", VA = "0x100DFA0")]
	private void SetBubbleOffsets(Fish fish, Rigidbody fishRb)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x100E224", Offset = "0x100E224", VA = "0x100E224")]
	private void SetBubbleOffset(Grabbable grabbable, Rigidbody grabbableRb)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x100DE18", Offset = "0x100DE18", VA = "0x100DE18")]
	private void PrepBobberForAttaching()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x100DED4", Offset = "0x100DED4", VA = "0x100DED4")]
	private void IgnoreBobbleCollisionOnCaughtObject(Component component)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x100E574", Offset = "0x100E574", VA = "0x100E574")]
	public void Throw(Vector3 pos, Vector3 velocity)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x100E7C0", Offset = "0x100E7C0", VA = "0x100E7C0")]
	private void SetJointConnected(bool connected)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x100E824", Offset = "0x100E824", VA = "0x100E824")]
	public void ResetToRod(float animDuration = 0f, float customYOffset = 0f)
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x100EB94", Offset = "0x100EB94", VA = "0x100EB94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10748", Offset = "0xA10748")]
	private IEnumerator AnimateBobberResetToRod(float duration, float customYOffset = 0f)
	{
		return null;
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x100EC24", Offset = "0x100EC24", VA = "0x100EC24")]
	private void UpdateJointPhysics(bool connected, float customYOffset = 0f)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x100EE1C", Offset = "0x100EE1C", VA = "0x100EE1C")]
	public void AddBobForce(Vector3 force)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x100EE3C", Offset = "0x100EE3C", VA = "0x100EE3C")]
	public void OnThrownIntoWater()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x100EF88", Offset = "0x100EF88", VA = "0x100EF88")]
	public void OnFishGrabbedOn()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x100F110", Offset = "0x100F110", VA = "0x100F110")]
	public void OnFishNibbled()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x100F1B4", Offset = "0x100F1B4", VA = "0x100F1B4")]
	public void OnBobberOutOfWater(bool playSound = true)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x100F340", Offset = "0x100F340", VA = "0x100F340")]
	public void OnFishStartedPulling()
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x100F390", Offset = "0x100F390", VA = "0x100F390")]
	public void OnFishStoppedPulling()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x100F3E0", Offset = "0x100F3E0", VA = "0x100F3E0")]
	public void OnPlayerDroppedRod()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x100F470", Offset = "0x100F470", VA = "0x100F470")]
	public void OnPlayerPickedUpRod()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x100F528", Offset = "0x100F528", VA = "0x100F528")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x100F628", Offset = "0x100F628", VA = "0x100F628")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x100EB14", Offset = "0x100EB14", VA = "0x100EB14")]
	public void DeactivateCollision(float duration)
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x100F72C", Offset = "0x100F72C", VA = "0x100F72C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA107AC", Offset = "0xA107AC")]
	private IEnumerator ReactivateBobberPhysicsAfterDuration(float duration)
	{
		return null;
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x100F7E4", Offset = "0x100F7E4", VA = "0x100F7E4")]
	public Bobber()
	{
	}
}
[Token(Token = "0x20001C7")]
public class Catchable : MonoBehaviour
{
	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA00A00", Offset = "0xA00A00")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA00A00", Offset = "0xA00A00")]
	public double catchWeight;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bubble;

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x10100B8", Offset = "0x10100B8", VA = "0x10100B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x1010118", Offset = "0x1010118", VA = "0x1010118")]
	private void SetBubbleMode(bool on)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1010164", Offset = "0x1010164", VA = "0x1010164")]
	public void SetCatchWeight(float value)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x1010170", Offset = "0x1010170", VA = "0x1010170")]
	public void OnGrab()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1010178", Offset = "0x1010178", VA = "0x1010178")]
	public Catchable()
	{
	}
}
[Token(Token = "0x20001C8")]
public class Fish : SaveableComponent, IInitializable
{
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB1CC", Offset = "0x9FB1CC")]
	private sealed class <RandomPondMovement>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fish <>4__this;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentSpeed>5__2;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <targetSpeed>5__3;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <newPos>5__4;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <displ>5__5;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A1B")]
			[Address(RVA = "0x137C998", Offset = "0x137C998", VA = "0x137C998", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A1D")]
			[Address(RVA = "0x137CA00", Offset = "0x137CA00", VA = "0x137CA00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x137B438", Offset = "0x137B438", VA = "0x137B438")]
		[DebuggerHidden]
		public <RandomPondMovement>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x137C168", Offset = "0x137C168", VA = "0x137C168", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x137C16C", Offset = "0x137C16C", VA = "0x137C16C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x137C9A0", Offset = "0x137C9A0", VA = "0x137C9A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB1DC", Offset = "0x9FB1DC")]
	private sealed class <SwimAway>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Fish <>4__this;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <dir>5__2;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <duration>5__3;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <speed>5__4;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A21")]
			[Address(RVA = "0x137CD54", Offset = "0x137CD54", VA = "0x137CD54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A23")]
			[Address(RVA = "0x137CDBC", Offset = "0x137CDBC", VA = "0x137CDBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x137C020", Offset = "0x137C020", VA = "0x137C020")]
		[DebuggerHidden]
		public <SwimAway>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x137CA08", Offset = "0x137CA08", VA = "0x137CA08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x137CA0C", Offset = "0x137CA0C", VA = "0x137CA0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x137CD5C", Offset = "0x137CD5C", VA = "0x137CD5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rb;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer bubble;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator anim;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GradientColorer gradient;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable grabbable;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material[] fishMaterials;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private FishStruggleStats m_struggleStats;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlantColors fishColors;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool initialized;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Pond pond;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isAttachedToFishingRod;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string FishAnim_SpeedNormalized;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string FishAnim_OnLure;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action OnStartSwimAway;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnSwimAway;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Tweener twMoveLateral;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tweener twPlopVertical;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tweener twMoveRotate;

	[Token(Token = "0x170000FA")]
	public bool IsInPond
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x137AB84", Offset = "0x137AB84", VA = "0x137AB84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x137ABF4", Offset = "0x137ABF4", VA = "0x137ABF4")]
	public void SetBubbleMode(bool on)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x137ACBC", Offset = "0x137ACBC", VA = "0x137ACBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x137AE6C", Offset = "0x137AE6C", VA = "0x137AE6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x137AFC4", Offset = "0x137AFC4", VA = "0x137AFC4", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x137B2A8", Offset = "0x137B2A8", VA = "0x137B2A8")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x137AE0C", Offset = "0x137AE0C", VA = "0x137AE0C")]
	private void StopAllTweeners()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x137B308", Offset = "0x137B308", VA = "0x137B308")]
	public void OnGrab(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x137B35C", Offset = "0x137B35C", VA = "0x137B35C")]
	public void SetBubbleNotCollidableWithWater()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x137B38C", Offset = "0x137B38C", VA = "0x137B38C")]
	public void OnDrop(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x137B3BC", Offset = "0x137B3BC", VA = "0x137B3BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA108B0", Offset = "0xA108B0")]
	private IEnumerator RandomPondMovement()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x137B464", Offset = "0x137B464", VA = "0x137B464")]
	public void PlopInto(Pond pond)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x137B8AC", Offset = "0x137B8AC", VA = "0x137B8AC")]
	private void SetPosXZ(Vector2 v)
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x137B920", Offset = "0x137B920", VA = "0x137B920")]
	private Vector2 GetPosXZ()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x137B94C", Offset = "0x137B94C", VA = "0x137B94C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x137BB50", Offset = "0x137BB50", VA = "0x137BB50")]
	public void RandomizeColors()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x137BD54", Offset = "0x137BD54", VA = "0x137BD54")]
	public void RandomizeRareColors()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x137BC20", Offset = "0x137BC20", VA = "0x137BC20")]
	private void CreateColors(float darkHue, float midHue, float brightHue, out Color dark, out Color mid, out Color bright)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x137BE5C", Offset = "0x137BE5C", VA = "0x137BE5C")]
	public void SetIsAttachedToFishingRod(bool attached)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x137BE68", Offset = "0x137BE68", VA = "0x137BE68")]
	public void SwimAwayIntoOcean()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x137BFA4", Offset = "0x137BFA4", VA = "0x137BFA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10914", Offset = "0xA10914")]
	private IEnumerator SwimAway()
	{
		return null;
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x137C04C", Offset = "0x137C04C", VA = "0x137C04C")]
	public Fish()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x137C13C", Offset = "0x137C13C", VA = "0x137C13C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10978", Offset = "0xA10978")]
	private void <PlopInto>b__31_0()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CB")]
public class FishState : ComponentState
{
	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32Serializable dark;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color32Serializable mid;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color32Serializable bright;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x107FB00", Offset = "0x107FB00", VA = "0x107FB00")]
	public FishState(Color32 dark, Color32 mid, Color32 bright)
	{
	}
}
[Token(Token = "0x20001CC")]
public class FishCatchMovement
{
	[Token(Token = "0x4000A95")]
	private const float CATCH_TIME = 20f;

	[Token(Token = "0x4000A96")]
	private const float SWIM_SPEED_FAST = 4f;

	[Token(Token = "0x4000A97")]
	private const float SWIM_SPEED_SLOW = 0.2f;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float REEL_IN_SPEED;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Bobber bobber;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 chaseTangent;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 dirFromRod;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 randomSwimSlowlyDirection;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float chaseTimeCurrent;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeSpentReeling;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeLeftInCurrentDir;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeSpentSwimming;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float fishSwimSpeed;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isReeling;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int numTimesFleeing;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timeToSpendInCurrentState;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeSpentReelingIncorrectly;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FishStruggleStats m_currentFishStruggleStats;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FishingState fishingState;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 centerPos;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 targetCenterPos;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentAngle;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float dir;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float currentRadius;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float targetRadius;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float randomTargetAngle;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentSpeed;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 currentFishFacingDir;

	[Token(Token = "0x170000FF")]
	public bool FishIsStill
	{
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x107D6F8", Offset = "0x107D6F8", VA = "0x107D6F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x107D644", Offset = "0x107D644", VA = "0x107D644")]
	public float CatchProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x107D71C", Offset = "0x107D71C", VA = "0x107D71C")]
	private float GetFishDistanceTraveled()
	{
		return default(float);
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x107D73C", Offset = "0x107D73C", VA = "0x107D73C")]
	public bool FishGotAway()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x107D7EC", Offset = "0x107D7EC", VA = "0x107D7EC")]
	public bool LineSnapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x107D87C", Offset = "0x107D87C", VA = "0x107D87C")]
	public void StartChasing(Vector3 chaseTangent, Vector3 dirFromRod, Bobber bobber)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x107D900", Offset = "0x107D900", VA = "0x107D900")]
	public FishingState UpdateMovement(Vector3 dragDir, float reelForce, PlayerHand hand, FishingEffects effects)
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x107E8F8", Offset = "0x107E8F8", VA = "0x107E8F8")]
	private void UpdateCircleMovement(Vector3 dirToPlayer)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x107E4CC", Offset = "0x107E4CC", VA = "0x107E4CC")]
	private void GenerateNewCirclePos()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x107E604", Offset = "0x107E604", VA = "0x107E604")]
	private Vector3 RandomizeNewDir(Vector3 currDragDir)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x107EF7C", Offset = "0x107EF7C", VA = "0x107EF7C")]
	public FishCatchMovement()
	{
	}
}
[Token(Token = "0x20001CD")]
public enum FishSwimState
{
	[Token(Token = "0x4000AB2")]
	Fleeing,
	[Token(Token = "0x4000AB3")]
	Still,
	[Token(Token = "0x4000AB4")]
	None
}
[Token(Token = "0x20001CE")]
public class FishingState
{
	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FishSwimState swimState;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float swimSpeed;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float progressInCurrentState;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeSpentReelingIncorrectly;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float counterActionAmount;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float totalTimeElapsed;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool playerIsReelingIn;

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x1081C68", Offset = "0x1081C68", VA = "0x1081C68")]
	public static void Clone(FishingState src, FishingState dst)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x107D8E8", Offset = "0x107D8E8", VA = "0x107D8E8")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x107F058", Offset = "0x107F058", VA = "0x107F058")]
	public FishingState()
	{
	}
}
[Token(Token = "0x20001CF")]
[ExecuteAlways]
public class FishRegion : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	public delegate void OnFishSpawnedCallback();

	[Serializable]
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB1FC", Offset = "0x9FB1FC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<FishRegion, float> <>9__12_0;

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x107F888", Offset = "0x107F888", VA = "0x107F888")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x107F890", Offset = "0x107F890", VA = "0x107F890")]
		internal float <OnEnable>b__12_0(FishRegion x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<FishRegion> all;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA00A74", Offset = "0xA00A74")]
	public float probability;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float priority;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00A8C", Offset = "0xA00A8C")]
	public AssetReference[] fishInRegion;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA00AC4", Offset = "0xA00AC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00AC4", Offset = "0xA00AC4")]
	public double[] fishCatchWeights;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 posSelf;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float radiusSq;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Scene sceneToSpawnFishIn;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OnFishSpawnedCallback OnFishSpawned;

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x107F0C0", Offset = "0x107F0C0", VA = "0x107F0C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x107F1B0", Offset = "0x107F1B0", VA = "0x107F1B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x107F36C", Offset = "0x107F36C", VA = "0x107F36C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x107F3F0", Offset = "0x107F3F0", VA = "0x107F3F0")]
	public bool TryGetFish(Vector3 pos, out AssetReference fishPrefab)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x107F5C8", Offset = "0x107F5C8", VA = "0x107F5C8")]
	public static bool TryGetFishAt(Vector3 pos, out AssetReference fishPrefab, out FishRegion fishRegion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x107F520", Offset = "0x107F520", VA = "0x107F520")]
	private AssetReference WhatsTheFish()
	{
		return null;
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x107F794", Offset = "0x107F794", VA = "0x107F794")]
	public FishRegion()
	{
	}
}
[Token(Token = "0x20001D2")]
public class FishingArrow : MonoBehaviour
{
	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int color;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rnd;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x17000100")]
	public Color ArrowColor
	{
		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x107FB94", Offset = "0x107FB94", VA = "0x107FB94")]
		set
		{
		}
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x107FC98", Offset = "0x107FC98", VA = "0x107FC98")]
	public FishingArrow()
	{
	}
}
[Token(Token = "0x20001D3")]
public class FishingCrank : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tool_FishingRod rod;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform grabPoint;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrabbableOutline outline;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 ROTATION_AXIS;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 CRANK_HANDLE_DIR;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 PERPENDICULAR_VEC;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float MAX_SPEED;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00B48", Offset = "0xA00B48")]
	private float <CurrentSpeed>k__BackingField;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00B58", Offset = "0xA00B58")]
	private float <PreviousSpeed>k__BackingField;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentAngle;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rotationSpeed;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 prevPosOnPlane;

	[Token(Token = "0x17000101")]
	public float CurrentSpeed
	{
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x107FD04", Offset = "0x107FD04", VA = "0x107FD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10A28", Offset = "0xA10A28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x107FD0C", Offset = "0x107FD0C", VA = "0x107FD0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10A38", Offset = "0xA10A38")]
		private set
		{
		}
	}

	[Token(Token = "0x17000102")]
	public float PreviousSpeed
	{
		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x107FD14", Offset = "0x107FD14", VA = "0x107FD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10A48", Offset = "0xA10A48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x107FD1C", Offset = "0x107FD1C", VA = "0x107FD1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10A58", Offset = "0xA10A58")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x107FD24", Offset = "0x107FD24", VA = "0x107FD24", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x107FE34", Offset = "0x107FE34", VA = "0x107FE34", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x107FEF4", Offset = "0x107FEF4", VA = "0x107FEF4", Slot = "16")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x107FE54", Offset = "0x107FE54", VA = "0x107FE54", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x107FEFC", Offset = "0x107FEFC", VA = "0x107FEFC", Slot = "17")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x107FF04", Offset = "0x107FF04", VA = "0x107FF04", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x107FF0C", Offset = "0x107FF0C", VA = "0x107FF0C", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x107FF10", Offset = "0x107FF10", VA = "0x107FF10", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x107FF3C", Offset = "0x107FF3C", VA = "0x107FF3C", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1080768", Offset = "0x1080768", VA = "0x1080768")]
	private void UpdatePlayerHandPosition(PlayerHand hand, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x108008C", Offset = "0x108008C", VA = "0x108008C")]
	private void UpdateCrankRotation(PlayerHand hand, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1080A80", Offset = "0x1080A80", VA = "0x1080A80", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1080B08", Offset = "0x1080B08", VA = "0x1080B08", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1080B10", Offset = "0x1080B10", VA = "0x1080B10", Slot = "6")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1080B18", Offset = "0x1080B18", VA = "0x1080B18", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1080B20", Offset = "0x1080B20", VA = "0x1080B20", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1080B28", Offset = "0x1080B28", VA = "0x1080B28")]
	public FishingCrank()
	{
	}
}
[Token(Token = "0x20001D4")]
public enum FishingEffectsState
{
	[Token(Token = "0x4000ADA")]
	Idle = 1,
	[Token(Token = "0x4000ADB")]
	BobberFlying = 2,
	[Token(Token = "0x4000ADC")]
	BobberInWater = 4,
	[Token(Token = "0x4000ADD")]
	PlayerReeling = 8,
	[Token(Token = "0x4000ADE")]
	FishNibbling = 0x10,
	[Token(Token = "0x4000ADF")]
	FishOnHook = 0x20,
	[Token(Token = "0x4000AE0")]
	FishResisting = 0x40
}
[Token(Token = "0x20001D5")]
public class FishingEffects : MonoBehaviour
{
	[Token(Token = "0x4000AE1")]
	private const float defaultTimeToMaxRedness = 1.5f;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator fishingRodAnimator;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Bobber bobber;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FishingLine fishingLine;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int bendinessXParameter;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int bendinessYParameter;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 currentBendDirection;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentBendStrength;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float targetBendStrength;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float currentRedness;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetRedness;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_maxRednessDuration;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private FishingEffectsState EffectStates;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FishingEffectsState RodBentStates;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int STRUGGLE;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public NeatAudioPlayer struggleSoundPlayer;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FishingState prevState;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1080BCC", Offset = "0x1080BCC", VA = "0x1080BCC")]
	public void Setup(Animator anim, Bobber bobber, FishingLine line)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1080D64", Offset = "0x1080D64", VA = "0x1080D64")]
	public void OnBobberHitWater(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1080E7C", Offset = "0x1080E7C", VA = "0x1080E7C")]
	public void OnFishGrabbedOn(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1080F78", Offset = "0x1080F78", VA = "0x1080F78")]
	public void OnFishNibbled(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1081060", Offset = "0x1081060", VA = "0x1081060")]
	public void OnBobberResetted(PlayerHand hand, bool playSound)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1081120", Offset = "0x1081120", VA = "0x1081120")]
	public void OnFishCaught()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x108125C", Offset = "0x108125C", VA = "0x108125C")]
	public void UpdateEffects(FishingState state, PlayerHand hand)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x1081870", Offset = "0x1081870", VA = "0x1081870")]
	public void UpdateRodBend(FishingState state)
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x107E5E4", Offset = "0x107E5E4", VA = "0x107E5E4")]
	public void SetEffectStateActive(FishingEffectsState state)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x107E5F4", Offset = "0x107E5F4", VA = "0x107E5F4")]
	public void SetEffectStateInactive(FishingEffectsState state)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1081114", Offset = "0x1081114", VA = "0x1081114")]
	public void ResetEffectStates()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1081DCC", Offset = "0x1081DCC", VA = "0x1081DCC")]
	public bool IsEffectStateActive(FishingEffectsState state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1080C9C", Offset = "0x1080C9C", VA = "0x1080C9C")]
	private void SetRodBendiness(float valueX, float valueY)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1081DDC", Offset = "0x1081DDC", VA = "0x1081DDC")]
	public FishingEffects()
	{
	}
}
[Token(Token = "0x20001D6")]
public class FishingLine : MonoBehaviour
{
	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int color;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform customTarget;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00B68", Offset = "0xA00B68")]
	public float wobblyness;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float smoothCoef;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA00BA0", Offset = "0xA00BA0")]
	public float maxLineSlackExponent;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentLineSlackExponent;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lineSlackChangeSpeed;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float targetLineSlackExponent;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WobblyArc arc;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject arcMeshObject;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshFilter mf;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer rnd;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color currentColor;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private OrientedPoint[] pointsTarget;

	[Token(Token = "0x4000B02")]
	private const int INITIAL_LINE_SEGMENTS = 5;

	[Token(Token = "0x4000B03")]
	private const int POST_ROD_SEGMENTS = 32;

	[Token(Token = "0x4000B04")]
	private const int ARC_MESH_SEGMENT_COUNT = 37;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] RodSegments;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject RodReel;

	[Token(Token = "0x17000103")]
	public float lineSlackPercent
	{
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1081EBC", Offset = "0x1081EBC", VA = "0x1081EBC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000104")]
	public bool VisibleInHierarchy
	{
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1082F14", Offset = "0x1082F14", VA = "0x1082F14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1081ED8", Offset = "0x1081ED8", VA = "0x1081ED8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1082200", Offset = "0x1082200", VA = "0x1082200")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x10822B4", Offset = "0x10822B4", VA = "0x10822B4")]
	public void SetCustomTarget(Transform target)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x10822BC", Offset = "0x10822BC", VA = "0x10822BC")]
	public void DoUpdate(bool lineIsExtended)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1081CBC", Offset = "0x1081CBC", VA = "0x1081CBC")]
	public void SetLineColor(Color newColor)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1082E78", Offset = "0x1082E78", VA = "0x1082E78")]
	public void Show()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1082ED4", Offset = "0x1082ED4", VA = "0x1082ED4")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x10821E0", Offset = "0x10821E0", VA = "0x10821E0")]
	private void SetMeshVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x10824A8", Offset = "0x10824A8", VA = "0x10824A8")]
	private void UpdateLineData(Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1082F30", Offset = "0x1082F30", VA = "0x1082F30")]
	public void SetLineSlackExponent(float newExponent)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1081BD4", Offset = "0x1081BD4", VA = "0x1081BD4")]
	public void AnimateLineSlackExponentToCustomValue(float targetValue, float duration)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1082FCC", Offset = "0x1082FCC", VA = "0x1082FCC")]
	public void AnimateLineSlackExponentToMax(float duration)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1081BC8", Offset = "0x1081BC8", VA = "0x1081BC8")]
	public void AnimateLineSlackExponentTo0(float duration)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1082F40", Offset = "0x1082F40", VA = "0x1082F40")]
	private void AnimateLineSlackToTarget(float newTargetExponent, float duration)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x108240C", Offset = "0x108240C", VA = "0x108240C")]
	private void UpdateLineSlack()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1082FE0", Offset = "0x1082FE0", VA = "0x1082FE0")]
	public FishingLine()
	{
	}
}
[Token(Token = "0x20001D7")]
public class FishingRing : MonoBehaviour
{
	[Token(Token = "0x4000B07")]
	private const float EXPAND_ANIM_TIME = 0.2f;

	[Token(Token = "0x4000B08")]
	private const float RADIUS_CATCH = 0.5f;

	[Token(Token = "0x4000B09")]
	private const float RADIUS_START = 3.5f;

	[Token(Token = "0x4000B0A")]
	private const float THICKNESS_PER_METER = 0.0075f;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int propRadiusRing;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int propRadiusThickness;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int propColor;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tool_FishingRod rod;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Bobber bobber;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer rnd;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color colorDefault;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color colorFishCaught;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tweener animAppear;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener animBobberArrow;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FishingArrow arrowLeft;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FishingArrow arrowRight;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform arrowBobber;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform arrowPull;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color sideArrowColor;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float radius;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float radiusThickness;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color ringColor;

	[Token(Token = "0x4000B1E")]
	private const float SCALE_PER_METER_BOBBER_ARROW = 0.05f;

	[Token(Token = "0x4000B1F")]
	private const float SCALE_PER_METER_SIDE_ARROWS = 0.1f;

	[Token(Token = "0x17000105")]
	private float Radius
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x10830E0", Offset = "0x10830E0", VA = "0x10830E0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0x10830E8", Offset = "0x10830E8", VA = "0x10830E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	private float RadiusThickness
	{
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0x1083198", Offset = "0x1083198", VA = "0x1083198")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x10831A0", Offset = "0x10831A0", VA = "0x10831A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	private Color RingColor
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1083250", Offset = "0x1083250", VA = "0x1083250")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x108325C", Offset = "0x108325C", VA = "0x108325C")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	private float DistanceToPlayer
	{
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1083C98", Offset = "0x1083C98", VA = "0x1083C98")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1083330", Offset = "0x1083330", VA = "0x1083330")]
	public void OnFishCaught()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x1083658", Offset = "0x1083658", VA = "0x1083658")]
	public void UpdateCatchShrink(float t, float bobberSignedDist)
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x1083598", Offset = "0x1083598", VA = "0x1083598")]
	private void SetBobberArrow(bool visible)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x10835D4", Offset = "0x10835D4", VA = "0x10835D4")]
	public void SetPullArrow(bool visible, Vector3 dir)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x108352C", Offset = "0x108352C", VA = "0x108352C")]
	private void HideSideArrows()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1083BEC", Offset = "0x1083BEC", VA = "0x1083BEC")]
	private Vector3 GetScaleByDistance(float dist, float scalePerMeter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x1083C68", Offset = "0x1083C68", VA = "0x1083C68")]
	private void SetScaleByDistance(Transform tf, float distance, float scalePerMeter)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x108379C", Offset = "0x108379C", VA = "0x108379C")]
	private void UpdateSideArrows(float bobberSignedDist)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x1083D94", Offset = "0x1083D94", VA = "0x1083D94")]
	public void Appear(Vector3 pos)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x10840D8", Offset = "0x10840D8", VA = "0x10840D8")]
	public void Disappear()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1084138", Offset = "0x1084138", VA = "0x1084138")]
	public bool Contains(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x1084240", Offset = "0x1084240", VA = "0x1084240")]
	public FishingRing()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x1084320", Offset = "0x1084320", VA = "0x1084320")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10A68", Offset = "0xA10A68")]
	private float <Appear>b__44_0()
	{
		return default(float);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1084328", Offset = "0x1084328", VA = "0x1084328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10A78", Offset = "0xA10A78")]
	private void <Appear>b__44_1(float x)
	{
	}
}
[Token(Token = "0x20001D8")]
public class FishingRod : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB20C", Offset = "0x9FB20C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Extendular, float> <>9__7_0;

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x10847DC", Offset = "0x10847DC", VA = "0x10847DC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x10847E4", Offset = "0x10847E4", VA = "0x10847E4")]
		internal float <SetRodExtendedness>b__7_0(Extendular x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToTip;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 prevTipPos;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 tipVel;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Extendular[] extendulars;

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x108432C", Offset = "0x108432C", VA = "0x108432C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1084450", Offset = "0x1084450", VA = "0x1084450")]
	private Vector3 TangVel()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1084598", Offset = "0x1084598", VA = "0x1084598")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x108459C", Offset = "0x108459C", VA = "0x108459C")]
	public void SetRodExtendedness(float extendedness)
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1084764", Offset = "0x1084764", VA = "0x1084764")]
	public FishingRod()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DA")]
public class Extendular
{
	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform tf;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float zStart;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float zEnd;

	[Token(Token = "0x17000109")]
	public float Length
	{
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x137ECC4", Offset = "0x137ECC4", VA = "0x137ECC4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x137ECD0", Offset = "0x137ECD0", VA = "0x137ECD0")]
	public void SetZ(float t)
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x137ED98", Offset = "0x137ED98", VA = "0x137ED98")]
	public Extendular()
	{
	}
}
[Token(Token = "0x20001DB")]
public class Pond : MonoBehaviour
{
	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2[] region;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rect regionBounds;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] fish;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform regionHolder;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float swimDepth;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float debugAng;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> failedTests;

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xC648F8", Offset = "0xC648F8", VA = "0xC648F8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xC64ED4", Offset = "0xC64ED4", VA = "0xC64ED4")]
	private Vector2 GetRandomPointInPond()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xC650BC", Offset = "0xC650BC", VA = "0xC650BC")]
	public Vector2 GetRandomPointInPondInCircle(Vector2 circleCenter, float circleRadius)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xC64F3C", Offset = "0xC64F3C", VA = "0xC64F3C")]
	private bool PointInside(Vector2 p, Vector2[] path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xC64A3C", Offset = "0xC64A3C", VA = "0xC64A3C")]
	private void UpdateRegion()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xC6524C", Offset = "0xC6524C", VA = "0xC6524C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xC64E8C", Offset = "0xC64E8C", VA = "0xC64E8C")]
	private Vector3 RegionToWorld(Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xC65250", Offset = "0xC65250", VA = "0xC65250")]
	public Vector3 RegionToWorldSwim(Vector2 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xC652A8", Offset = "0xC652A8", VA = "0xC652A8")]
	public Vector2 WorldToRegion(Vector3 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xC652B0", Offset = "0xC652B0", VA = "0xC652B0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xC65374", Offset = "0xC65374", VA = "0xC65374")]
	private void FishPlop(Fish fish)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xC65398", Offset = "0xC65398", VA = "0xC65398")]
	public Vector3 GetNewFishMoveSpot(Vector3 pos, float moveRangeMax)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xC653D8", Offset = "0xC653D8", VA = "0xC653D8")]
	public Pond()
	{
	}
}
[Token(Token = "0x20001DC")]
public class GarbageBin : MonoBehaviour, IInitializable
{
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB21C", Offset = "0x9FB21C")]
	private sealed class <CloseLidAfterDelay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GarbageBin <>4__this;

		[Token(Token = "0x1700010A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x1093F50", Offset = "0x1093F50", VA = "0x1093F50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x1093FB8", Offset = "0x1093FB8", VA = "0x1093FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1093444", Offset = "0x1093444", VA = "0x1093444")]
		[DebuggerHidden]
		public <CloseLidAfterDelay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1093E88", Offset = "0x1093E88", VA = "0x1093E88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1093E8C", Offset = "0x1093E8C", VA = "0x1093E8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1093F58", Offset = "0x1093F58", VA = "0x1093F58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB22C", Offset = "0x9FB22C")]
	private sealed class <RemoveObjectAfterDelay>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable obj;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GarbageBin <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x10941C0", Offset = "0x10941C0", VA = "0x10941C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x1094228", Offset = "0x1094228", VA = "0x1094228", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x10935D0", Offset = "0x10935D0", VA = "0x10935D0")]
		[DebuggerHidden]
		public <RemoveObjectAfterDelay>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1093FC0", Offset = "0x1093FC0", VA = "0x1093FC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1093FC4", Offset = "0x1093FC4", VA = "0x1093FC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x10941C8", Offset = "0x10941C8", VA = "0x10941C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB23C", Offset = "0x9FB23C")]
	private sealed class <ScaleUpGrabbable>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable obj;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 targetScale;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <timeLeft>5__3;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0x10944BC", Offset = "0x10944BC", VA = "0x10944BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ACB")]
			[Address(RVA = "0x1094524", Offset = "0x1094524", VA = "0x1094524", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x10936A0", Offset = "0x10936A0", VA = "0x10936A0")]
		[DebuggerHidden]
		public <ScaleUpGrabbable>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1094230", Offset = "0x1094230", VA = "0x1094230", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1094234", Offset = "0x1094234", VA = "0x1094234", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x10944C4", Offset = "0x10944C4", VA = "0x10944C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB24C", Offset = "0x9FB24C")]
	private sealed class <AnimateRemovalOfObject>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GarbageBin <>4__this;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Grabbable obj;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool throwOutAgain;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <startScale>5__2;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <startPos>5__3;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <vec>5__4;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <duration>5__5;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <timeLeft>5__6;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x1093E18", Offset = "0x1093E18", VA = "0x1093E18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0x1093E80", Offset = "0x1093E80", VA = "0x1093E80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1093770", Offset = "0x1093770", VA = "0x1093770")]
		[DebuggerHidden]
		public <AnimateRemovalOfObject>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1093860", Offset = "0x1093860", VA = "0x1093860", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1093864", Offset = "0x1093864", VA = "0x1093864", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1093E20", Offset = "0x1093E20", VA = "0x1093E20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BezierCurve bezierCurve;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool lidOpen;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Grabbable isAnimatingRemoval;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int chewParam;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int burpParam;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int openBinParam;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Grabbable> objectsInBin;

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1092D74", Offset = "0x1092D74", VA = "0x1092D74", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1092D80", Offset = "0x1092D80", VA = "0x1092D80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1092D88", Offset = "0x1092D88", VA = "0x1092D88")]
	private void ResetAnimationParams()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1092DD4", Offset = "0x1092DD4", VA = "0x1092DD4")]
	public void OpenLid()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1092E78", Offset = "0x1092E78", VA = "0x1092E78")]
	public void CloseLid()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1092FA4", Offset = "0x1092FA4", VA = "0x1092FA4")]
	private void Chew()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x1092FDC", Offset = "0x1092FDC", VA = "0x1092FDC")]
	private void Burp()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1093014", Offset = "0x1093014", VA = "0x1093014")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x10932F8", Offset = "0x10932F8", VA = "0x10932F8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x1092F18", Offset = "0x1092F18", VA = "0x1092F18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10A88", Offset = "0xA10A88")]
	private IEnumerator CloseLidAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1093470", Offset = "0x1093470", VA = "0x1093470")]
	private void CloseLidImmediately()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1093260", Offset = "0x1093260", VA = "0x1093260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10AEC", Offset = "0xA10AEC")]
	private IEnumerator RemoveObjectAfterDelay(Grabbable obj)
	{
		return null;
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x10935FC", Offset = "0x10935FC", VA = "0x10935FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10B50", Offset = "0xA10B50")]
	private IEnumerator ScaleUpGrabbable(Grabbable obj, Vector3 targetScale, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x10936CC", Offset = "0x10936CC", VA = "0x10936CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10BB4", Offset = "0xA10BB4")]
	private IEnumerator AnimateRemovalOfObject(Grabbable obj, bool throwOutAgain = false)
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x109379C", Offset = "0x109379C", VA = "0x109379C")]
	public GarbageBin()
	{
	}
}
[Token(Token = "0x20001E1")]
public class GarbageBinLid : MonoBehaviour
{
	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GarbageBin bin;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Rigidbody> currentIntersectionObjs;

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x109452C", Offset = "0x109452C", VA = "0x109452C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x109467C", Offset = "0x109467C", VA = "0x109467C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x10947DC", Offset = "0x10947DC", VA = "0x10947DC")]
	public GarbageBinLid()
	{
	}
}
[Token(Token = "0x20001E2")]
[DisallowMultipleComponent]
public class Grabbable : SaveableComponent, IGrabbable, IInitializable
{
	[Token(Token = "0x20001E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB26C", Offset = "0x9FB26C")]
	private sealed class <MakeKinematicAfterDelay>d__165 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable <>4__this;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool canAdjustDrag;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <delay>5__3;

		[Token(Token = "0x17000123")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xE0A7E4", Offset = "0xE0A7E4", VA = "0xE0A7E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0xE0A84C", Offset = "0xE0A84C", VA = "0xE0A84C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xE097BC", Offset = "0xE097BC", VA = "0xE097BC")]
		[DebuggerHidden]
		public <MakeKinematicAfterDelay>d__165(int <>1__state)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xE0A20C", Offset = "0xE0A20C", VA = "0xE0A20C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xE0A210", Offset = "0xE0A210", VA = "0xE0A210", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xE0A7EC", Offset = "0xE0A7EC", VA = "0xE0A7EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB27C", Offset = "0x9FB27C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Grabbable> <>9__175_0;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Grabbable> <>9__175_1;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<bool> <>9__175_2;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Grabbable> <>9__175_3;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xE0A1F4", Offset = "0xE0A1F4", VA = "0xE0A1F4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xE0A1FC", Offset = "0xE0A1FC", VA = "0xE0A1FC")]
		internal void <.ctor>b__175_0(Grabbable <p0>)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xE0A200", Offset = "0xE0A200", VA = "0xE0A200")]
		internal void <.ctor>b__175_1(Grabbable <p0>)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xE0A204", Offset = "0xE0A204", VA = "0xE0A204")]
		internal void <.ctor>b__175_2(bool <p0>)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xE0A208", Offset = "0xE0A208", VA = "0xE0A208")]
		internal void <.ctor>b__175_3(Grabbable <p0>)
		{
		}
	}

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material largeObjectMaterial;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00BE8", Offset = "0xA00BE8")]
	public Transform fixedGrabPoint;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public Transform fixedGrabPointLeftHand;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool hideHandWhileHolding;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool shouldSnapToSurfaceBelow;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[SerializeField]
	private bool shouldSnapToWall;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	[SerializeField]
	private bool isLargeObject;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool isVeryLargeObject;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	private bool shouldFloat;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RecoverIfLost recoverIfLost;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA00CB4", Offset = "0xA00CB4")]
	[SerializeField]
	private int grabPriority;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00D00", Offset = "0xA00D00")]
	public UnityEvent OnGrab;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnDrop;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<Grabbable> OnDropped;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<Grabbable> OnGrabbed;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00D38", Offset = "0xA00D38")]
	public NeatAudioCue pickupSoundCue;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NeatAudioCue dropSoundCue;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public bool GrabbableShouldConsumeGrab;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool initialized;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AttachSlot attachedToSlot;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00DA0", Offset = "0xA00DA0")]
	private bool <IsBeingAnimated>k__BackingField;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00DB0", Offset = "0xA00DB0")]
	private bool <AllowSnapping>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool HavePlantedProxyWithDelay;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00DC0", Offset = "0xA00DC0")]
	[SerializeField]
	private Harvestable harvestable;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private Transform grabbableRootTransform;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private GrabbableOutline outline;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private NeatAudioPlayer grabbableSoundPlayer;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Purchaseable activePurchaseable;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SaveObjectBase saveObject;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool hasSaveObject;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform m_projectedPrevisLocation;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00E5C", Offset = "0xA00E5C")]
	private bool <IsStuckToHand>k__BackingField;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine kinematicAfterDelayCoroutine;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float lastHeldTimestamp;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float drag;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion cachedHandRotation;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool initializedPreLoad;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool initializedPostLoad;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Vector3 originalScale;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 originalLocalScale;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Quaternion originalLocalRotation;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 fixedGrabPointPositionLS;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Quaternion fixedGrabPointRotationLS;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 fixedGrabPointLeftHandPositionLS;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Quaternion fixedGrabPointLeftHandRotationLS;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GameObject largeObjectVisualizer;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 largeObjectVisualizerLocalOffset;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private int originalLayer;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private PlayerHand previousHeldByHand;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private LayerData[] m_originalObjectLayers;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 startHandAttachPosLocal;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Quaternion startHandAttachRotLocal;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 startPositionWorld;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Quaternion rotationOffset;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private List<Vector3> previousVelocities;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 currentPredictedVelocity;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool hasSavedPredictedVelocity;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private OrientedPoint largeObjectTransform;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool hasValidLargeObjectTransform;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x231")]
	[HideInInspector]
	public bool largeObjectHasBeenPlaced;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	[SerializeField]
	private Rigidbody grabbableRigidbody;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public ChildGrabbableToggler ParentToggler;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private bool didUpdateReferences;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x249")]
	private bool m_isVisualizerOverridden;

	[Token(Token = "0x17000112")]
	private static Material LargeObjectMaterial
	{
		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xE03C00", Offset = "0xE03C00", VA = "0xE03C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public bool IsLargeObject
	{
		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xE03CD4", Offset = "0xE03CD4", VA = "0xE03CD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000114")]
	public RecoverIfLost RecoverIfLost
	{
		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xE03CDC", Offset = "0xE03CDC", VA = "0xE03CDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public bool IsBeingAnimated
	{
		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xE03F74", Offset = "0xE03F74", VA = "0xE03F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D98", Offset = "0xA10D98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xE03F7C", Offset = "0xE03F7C", VA = "0xE03F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10DA8", Offset = "0xA10DA8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public bool ShouldSnapToWall
	{
		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xE03F94", Offset = "0xE03F94", VA = "0xE03F94")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000117")]
	public bool IsAttached
	{
		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0xE03F9C", Offset = "0xE03F9C", VA = "0xE03F9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000118")]
	public bool AllowSnapping
	{
		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xE0400C", Offset = "0xE0400C", VA = "0xE0400C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10DB8", Offset = "0xA10DB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xE04014", Offset = "0xE04014", VA = "0xE04014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10DC8", Offset = "0xA10DC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000119")]
	public bool HideHandWhileHolding
	{
		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xE04020", Offset = "0xE04020", VA = "0xE04020")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0xE04028", Offset = "0xE04028", VA = "0xE04028")]
		set
		{
		}
	}

	[Token(Token = "0x1700011A")]
	public Harvestable Harvestable
	{
		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xE0404C", Offset = "0xE0404C", VA = "0xE0404C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011B")]
	public Stashable Stashable
	{
		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xE04054", Offset = "0xE04054", VA = "0xE04054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	public Transform GrabbableRootTransform
	{
		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xE0405C", Offset = "0xE0405C", VA = "0xE0405C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011D")]
	public bool IsHeld
	{
		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xE0406C", Offset = "0xE0406C", VA = "0xE0406C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011E")]
	public SaveObjectBase SaveObj
	{
		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xE040DC", Offset = "0xE040DC", VA = "0xE040DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011F")]
	public Vector3 ProjectedPrevisPos
	{
		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xE040E4", Offset = "0xE040E4", VA = "0xE040E4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000120")]
	public bool IsStuckToHand
	{
		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xE04100", Offset = "0xE04100", VA = "0xE04100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10DD8", Offset = "0xA10DD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xE04108", Offset = "0xE04108", VA = "0xE04108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10DE8", Offset = "0xA10DE8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public Purchaseable ActivePurchaseable
	{
		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xE04154", Offset = "0xE04154", VA = "0xE04154")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public bool DidUpdateRefs
	{
		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xE04C00", Offset = "0xE04C00", VA = "0xE04C00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000006")]
	[HideInInspector]
	public event Action<bool> OnToggleUsage
	{
		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xE03CE4", Offset = "0xE03CE4", VA = "0xE03CE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D58", Offset = "0xA10D58")]
		add
		{
		}
		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xE03D88", Offset = "0xE03D88", VA = "0xE03D88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D68", Offset = "0xA10D68")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action<Grabbable> OnPreGrab
	{
		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xE03E2C", Offset = "0xE03E2C", VA = "0xE03E2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D78", Offset = "0xA10D78")]
		add
		{
		}
		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xE03ED0", Offset = "0xE03ED0", VA = "0xE03ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10D88", Offset = "0xA10D88")]
		remove
		{
		}
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xE03F88", Offset = "0xE03F88", VA = "0xE03F88")]
	public void SetIsBeingAnimated(bool animated)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xE04034", Offset = "0xE04034", VA = "0xE04034", Slot = "5")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xE0403C", Offset = "0xE0403C", VA = "0xE0403C", Slot = "17")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xE04044", Offset = "0xE04044", VA = "0xE04044")]
	public PlayerHand GetPreviousHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xE04064", Offset = "0xE04064", VA = "0xE04064", Slot = "7")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xE04114", Offset = "0xE04114", VA = "0xE04114")]
	public bool WasHeldRecently()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xE0414C", Offset = "0xE0414C", VA = "0xE0414C")]
	public void AssignActivePurchaseable(Purchaseable p)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xE0415C", Offset = "0xE0415C", VA = "0xE0415C")]
	public Vector3 GetHandAttachPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xE04220", Offset = "0xE04220", VA = "0xE04220")]
	public Quaternion GetHandAttachRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xE04364", Offset = "0xE04364", VA = "0xE04364")]
	public Vector3 GetGrabPoint(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xE044B4", Offset = "0xE044B4", VA = "0xE044B4")]
	public Transform GetGrabPointTransform()
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xE045CC", Offset = "0xE045CC", VA = "0xE045CC")]
	private Vector3 GetScaleWhileHeld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xE04710", Offset = "0xE04710", VA = "0xE04710")]
	public Vector3 GetOriginalScale()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xE047D0", Offset = "0xE047D0", VA = "0xE047D0")]
	public Rigidbody GetRigidbody()
	{
		return null;
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xE047F4", Offset = "0xE047F4", VA = "0xE047F4")]
	public void AddRigidbodyIfNeeded()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xE04C08", Offset = "0xE04C08", VA = "0xE04C08")]
	public bool SetupReferences(bool checkIfNeeded)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xE0492C", Offset = "0xE0492C", VA = "0xE0492C")]
	public bool AssignGrabbableRigidbody()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xE0508C", Offset = "0xE0508C", VA = "0xE0508C", Slot = "18")]
	public virtual void PreLoadInit()
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xE0530C", Offset = "0xE0530C", VA = "0xE0530C")]
	private void SetupLargeObjectVisualisation()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xE05A3C", Offset = "0xE05A3C", VA = "0xE05A3C", Slot = "19")]
	public virtual void PostLoadInit()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xE060D4", Offset = "0xE060D4", VA = "0xE060D4", Slot = "8")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xE06AFC", Offset = "0xE06AFC", VA = "0xE06AFC")]
	private void ShowLargeObjectVisualization()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xE06F20", Offset = "0xE06F20", VA = "0xE06F20")]
	private void UpdateLargeObjectVisualization()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xE07AEC", Offset = "0xE07AEC", VA = "0xE07AEC")]
	private void TryAssignVisualizerLocation(bool shouldReset = false)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xE07BDC", Offset = "0xE07BDC", VA = "0xE07BDC")]
	public void OverrideObjectVisualizer(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xE07D4C", Offset = "0xE07D4C", VA = "0xE07D4C")]
	public void ClearObjectVisualizerOverride()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xE07DCC", Offset = "0xE07DCC", VA = "0xE07DCC")]
	public bool IsNewOverridePosition(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xE06574", Offset = "0xE06574", VA = "0xE06574")]
	private void StickToHand(PlayerHand hand, OrientedPoint handAttachPoint, Vector3 grabPosOnItem)
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xE07F50", Offset = "0xE07F50", VA = "0xE07F50", Slot = "10")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xE08080", Offset = "0xE08080", VA = "0xE08080")]
	private void FollowHand(PlayerHand hand, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xE08230", Offset = "0xE08230", VA = "0xE08230")]
	public Quaternion GetCachedHandRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xE08244", Offset = "0xE08244", VA = "0xE08244")]
	public void SaveCurrentVelocity(PlayerHand hand, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xE08294", Offset = "0xE08294", VA = "0xE08294")]
	private Vector3 GetPredictedVelocity(PlayerHand hand, OrientedPoint handAttachPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xE086A8", Offset = "0xE086A8", VA = "0xE086A8")]
	private void ThrowGrabbable(Vector3 velocityToApply)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xE08700", Offset = "0xE08700", VA = "0xE08700")]
	private bool PlaceOnFlatSurfaceBelow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xE08904", Offset = "0xE08904", VA = "0xE08904")]
	private void SnapToSurfaceBelow()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xE08AD0", Offset = "0xE08AD0", VA = "0xE08AD0")]
	private void SnapToWall()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xE08B60", Offset = "0xE08B60", VA = "0xE08B60", Slot = "9")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xE09330", Offset = "0xE09330", VA = "0xE09330")]
	public void ForceDetach()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xE093E0", Offset = "0xE093E0", VA = "0xE093E0")]
	public void ForceLetGo()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xE09204", Offset = "0xE09204", VA = "0xE09204")]
	private void MoveToCurrentZone()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xE09430", Offset = "0xE09430", VA = "0xE09430")]
	public void AssignSaveObject(SaveObjectBase saveObj)
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xE09460", Offset = "0xE09460", VA = "0xE09460", Slot = "11")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xE09468", Offset = "0xE09468", VA = "0xE09468", Slot = "20")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xE09470", Offset = "0xE09470", VA = "0xE09470", Slot = "12")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xE09540", Offset = "0xE09540", VA = "0xE09540", Slot = "13")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xE095D0", Offset = "0xE095D0", VA = "0xE095D0", Slot = "15")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xE095D8", Offset = "0xE095D8", VA = "0xE095D8")]
	public void AssignCollider(Collider col)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xE07A84", Offset = "0xE07A84", VA = "0xE07A84")]
	private void ToggleUseage(bool inUse)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xE09698", Offset = "0xE09698", VA = "0xE09698")]
	public void ApplyVeryLargeObjectScaleIfNeeded()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xE091F8", Offset = "0xE091F8", VA = "0xE091F8")]
	private void ResetLayers(GameObject go, int layer)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xE096EC", Offset = "0xE096EC", VA = "0xE096EC")]
	private bool CanBeMadeKinematic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xE09708", Offset = "0xE09708", VA = "0xE09708")]
	public bool IsHeldStashedOrAnimated()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xE08A40", Offset = "0xE08A40", VA = "0xE08A40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10DF8", Offset = "0xA10DF8")]
	private IEnumerator MakeKinematicAfterDelay(bool canAdjustDrag = true)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xE064AC", Offset = "0xE064AC", VA = "0xE064AC")]
	private void CancelKinematicAfterDelayRoutine()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xE097E8", Offset = "0xE097E8", VA = "0xE097E8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xE09880", Offset = "0xE09880", VA = "0xE09880", Slot = "16")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xE099CC", Offset = "0xE099CC", VA = "0xE099CC")]
	public void AttachToSaveObjectSlot(AttachSlot slot)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xE07EBC", Offset = "0xE07EBC", VA = "0xE07EBC")]
	public void DetachFromSaveObjectSlot()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xE09AFC", Offset = "0xE09AFC", VA = "0xE09AFC")]
	public void WasDetachedFromSaveObjectSlot()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xE09B08", Offset = "0xE09B08", VA = "0xE09B08")]
	public bool IsAttachedToParentGrabbable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xE09BD0", Offset = "0xE09BD0", VA = "0xE09BD0", Slot = "6")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xE09BD8", Offset = "0xE09BD8", VA = "0xE09BD8", Slot = "14")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xE09D04", Offset = "0xE09D04", VA = "0xE09D04")]
	public Grabbable()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E5")]
public class GrabbableState : ComponentState
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool largeObjectHasBeenPlaced;

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xE09850", Offset = "0xE09850", VA = "0xE09850")]
	public GrabbableState(bool objectPlaced)
	{
	}
}
[Token(Token = "0x20001E6")]
public class GrabbableOutline : MonoBehaviour, IValidateCustom, IValidate
{
	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB28C", Offset = "0x9FB28C")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool value;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xE0A944", Offset = "0xE0A944", VA = "0xE0A944")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xE0CA38", Offset = "0xE0CA38", VA = "0xE0CA38")]
		internal void <set_ShowSpriteOutline>b__0(SpriteRenderer x)
		{
		}
	}

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA00E8C", Offset = "0xA00E8C")]
	[SerializeField]
	private Transform[] m_ignoredObjects;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color currentOutlineColor;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool HavePlantHighlight;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlantSystemIndexable PlantComponent;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ChildGrabbableToggler ParentToggler;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00EE8", Offset = "0xA00EE8")]
	[SerializeField]
	private SpriteRenderer[] spritesToOutlineOnHover;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00F34", Offset = "0xA00F34")]
	[SerializeField]
	private MeshFilter[] MeshFilters;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private MeshRenderer[] MeshRenderers;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private SkinnedMeshRenderer[] SkinnedMeshRenderers;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Mesh[] overrideOutlineMeshes;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool hasOutlineSprites;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpriteRenderer[] spriteOutlines;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Grabbable attachedGrabbable;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA00FB0", Offset = "0xA00FB0")]
	private bool <CanShowOutline>k__BackingField;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material outlineMaterialSprite;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material outlineMaterial3D;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Material outlineMaterialPlants3D;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int outlineColorId;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Color defaultOutlineColor;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool defaultColorInitialized;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Dictionary<Mesh, Mesh> outlineMeshDict;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Mesh[] outlineMeshes;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static bool OutlineDisabled;

	[Token(Token = "0x17000125")]
	public bool CanShowOutline
	{
		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xE0A854", Offset = "0xE0A854", VA = "0xE0A854")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10EAC", Offset = "0xA10EAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xE0A85C", Offset = "0xE0A85C", VA = "0xE0A85C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10EBC", Offset = "0xA10EBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000126")]
	public bool ShowSpriteOutline
	{
		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xE0A868", Offset = "0xE0A868", VA = "0xE0A868")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	private static Material OutlineMaterialSprite
	{
		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xE0A94C", Offset = "0xE0A94C", VA = "0xE0A94C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000128")]
	private static Material OutlineMaterial3D
	{
		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xE0AA20", Offset = "0xE0AA20", VA = "0xE0AA20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000129")]
	private static Material OutlineMaterialPlants3D
	{
		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xE0AAF4", Offset = "0xE0AAF4", VA = "0xE0AAF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xE0ABC8", Offset = "0xE0ABC8", VA = "0xE0ABC8")]
	public void AssignGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xE0ABD0", Offset = "0xE0ABD0", VA = "0xE0ABD0")]
	public Grabbable GetGrabbable()
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xE0ABD8", Offset = "0xE0ABD8", VA = "0xE0ABD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xE0B58C", Offset = "0xE0B58C", VA = "0xE0B58C")]
	private void UpdateSkinnedMeshRenderers(bool enable)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xE0AF04", Offset = "0xE0AF04", VA = "0xE0AF04")]
	public void SetupOutlineMeshes()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xE0B6A8", Offset = "0xE0B6A8", VA = "0xE0B6A8")]
	public static Mesh MakeOutlineMesh(Mesh inputMesh)
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xE0BC20", Offset = "0xE0BC20", VA = "0xE0BC20")]
	public bool SetupHighlighting(bool shouldFix = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xE0AE20", Offset = "0xE0AE20", VA = "0xE0AE20")]
	private void SetOutlineColor()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xE0AC20", Offset = "0xE0AC20", VA = "0xE0AC20")]
	private void Setup2DHighlighting()
	{
	}

	[Token(Token = "0x6000B4B")]
	private T[] GetNonIgnoredOutlineComponents<T>(T[] outlineComponents) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xE0BE50", Offset = "0xE0BE50", VA = "0xE0BE50")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xE0BF08", Offset = "0xE0BF08", VA = "0xE0BF08")]
	public void OnHoverUpdate(Camera c)
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xE0C86C", Offset = "0xE0C86C", VA = "0xE0C86C")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xE0BFE4", Offset = "0xE0BFE4", VA = "0xE0BFE4")]
	private bool DrawOutline3D(Camera c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xE0C898", Offset = "0xE0C898", VA = "0xE0C898")]
	public void SetOutlineColor(Color newColor)
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xE0C8A4", Offset = "0xE0C8A4", VA = "0xE0C8A4")]
	public void ResetOutlineColor()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xE0C914", Offset = "0xE0C914", VA = "0xE0C914")]
	public GrabbableOutline()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xE0BD48", Offset = "0xE0BD48", VA = "0xE0BD48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10ECC", Offset = "0xA10ECC")]
	internal static SpriteRenderer <Setup2DHighlighting>g__CreateOutlineSprite|41_0(SpriteRenderer parentSprite)
	{
		return null;
	}
}
[Token(Token = "0x20001E8")]
public class GrabbableUtils
{
	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xE08320", Offset = "0xE08320", VA = "0xE08320")]
	public static Vector3 PredictVelocityForFrame(ref List<Vector3> previousVelocities, int frame)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xE04FEC", Offset = "0xE04FEC", VA = "0xE04FEC")]
	public static Collider[] FindGrabbableColliders(IGrabbable rootGrabbable, GameObject rootGo)
	{
		return null;
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xE0CD20", Offset = "0xE0CD20", VA = "0xE0CD20")]
	private static void FindCollidersRecursive(IGrabbable rootGrabbable, GameObject go, ref List<Collider> collidersOut)
	{
	}
}
[Token(Token = "0x20001E9")]
public class Harvestable : MonoBehaviour
{
	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA00FC0", Offset = "0xA00FC0")]
	[SerializeField]
	private CraftingSystem.ResourceTypeEnum craftingResourceType;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0100C", Offset = "0xA0100C")]
	[SerializeField]
	private CurrencyType currencyType;

	[Token(Token = "0x1700012A")]
	public CraftingSystem.ResourceType ResourceType
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xE0F7B4", Offset = "0xE0F7B4", VA = "0xE0F7B4")]
		get
		{
			return default(CraftingSystem.ResourceType);
		}
	}

	[Token(Token = "0x1700012B")]
	public CurrencyType CurrencyType
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xE0F804", Offset = "0xE0F804", VA = "0xE0F804")]
		get
		{
			return default(CurrencyType);
		}
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xE0F80C", Offset = "0xE0F80C", VA = "0xE0F80C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public bool HasValidResourceType
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xE0F814", Offset = "0xE0F814", VA = "0xE0F814")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xE0F878", Offset = "0xE0F878", VA = "0xE0F878")]
	public void SetResourceType(CraftingSystem.ResourceType resourceType)
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xE0F8F0", Offset = "0xE0F8F0", VA = "0xE0F8F0")]
	public Harvestable()
	{
	}
}
[Token(Token = "0x20001EA")]
public interface IStickyVolume
{
	[Token(Token = "0x6000B60")]
	bool TrySetSticky(StickyNote sticky);
}
[Token(Token = "0x20001EB")]
public class InstrumentCrystalAnimation : MonoBehaviour
{
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB29C", Offset = "0x9FB29C")]
	private sealed class <AnimateScale>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minScale;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxScale;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InstrumentCrystalAnimation <>4__this;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <dir>5__3;

		[Token(Token = "0x1700012D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xE11138", Offset = "0xE11138", VA = "0xE11138", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xE111A0", Offset = "0xE111A0", VA = "0xE111A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xE10D24", Offset = "0xE10D24", VA = "0xE10D24")]
		[DebuggerHidden]
		public <AnimateScale>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xE10F58", Offset = "0xE10F58", VA = "0xE10F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xE10F5C", Offset = "0xE10F5C", VA = "0xE10F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xE11140", Offset = "0xE11140", VA = "0xE11140", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine shakeAnim;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine scaleAnim;

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xE10B44", Offset = "0xE10B44", VA = "0xE10B44")]
	public void Scale(float duration, float minScale, float maxScale)
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xE10C64", Offset = "0xE10C64", VA = "0xE10C64")]
	public void StopScaling()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xE10BC4", Offset = "0xE10BC4", VA = "0xE10BC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA10EDC", Offset = "0xA10EDC")]
	private IEnumerator AnimateScale(float duration, float minScale, float maxScale)
	{
		return null;
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xE10D50", Offset = "0xE10D50", VA = "0xE10D50")]
	public void Shake(float duration)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xE10E54", Offset = "0xE10E54", VA = "0xE10E54")]
	public void StopShaking()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xE10F50", Offset = "0xE10F50", VA = "0xE10F50")]
	public InstrumentCrystalAnimation()
	{
	}
}
[Token(Token = "0x20001ED")]
public interface IGrabbable
{
	[Token(Token = "0x6000B6D")]
	int GetCurrentPriority();

	[Token(Token = "0x6000B6E")]
	bool IsExtraSticky();

	[Token(Token = "0x6000B6F")]
	GrabbableOutline GetOutline();

	[Token(Token = "0x6000B70")]
	void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint);

	[Token(Token = "0x6000B71")]
	void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint);

	[Token(Token = "0x6000B72")]
	void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint);

	[Token(Token = "0x6000B73")]
	bool IsEnabled();

	[Token(Token = "0x6000B74")]
	bool ShouldConsumeGrab(Collider collider);

	[Token(Token = "0x6000B75")]
	void Touch();

	[Token(Token = "0x6000B76")]
	float GetDelayBeforeGrab();

	[Token(Token = "0x6000B77")]
	Collider[] GetColliders();
}
[Token(Token = "0x20001EE")]
public interface IInteractableByTool
{
	[Token(Token = "0x6000B78")]
	void DoInteraction(ITool tool);
}
[Token(Token = "0x20001EF")]
public interface ITillable
{
	[Token(Token = "0x6000B79")]
	void Till();
}
[Token(Token = "0x20001F0")]
public enum ToolType
{
	[Token(Token = "0x4000BCA")]
	WateringCan,
	[Token(Token = "0x4000BCB")]
	Hoe,
	[Token(Token = "0x4000BCC")]
	SeedBag,
	[Token(Token = "0x4000BCD")]
	Seed,
	[Token(Token = "0x4000BCE")]
	FishingRod,
	[Token(Token = "0x4000BCF")]
	Sickle,
	[Token(Token = "0x4000BD0")]
	Plantable,
	[Token(Token = "0x4000BD1")]
	Axe,
	[Token(Token = "0x4000BD2")]
	Camera,
	[Token(Token = "0x4000BD3")]
	Wallet,
	[Token(Token = "0x4000BD4")]
	None
}
[Token(Token = "0x20001F1")]
public interface ITool
{
	[Token(Token = "0x6000B7A")]
	ToolType GetToolType();

	[Token(Token = "0x6000B7B")]
	int GetUpgradeLevel();
}
[Token(Token = "0x20001F2")]
public class KinematicAtRest : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB2AC", Offset = "0x9FB2AC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__9_0;

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xCF36F8", Offset = "0xCF36F8", VA = "0xCF36F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xCF3700", Offset = "0xCF3700", VA = "0xCF3700")]
		internal void <.ctor>b__9_0()
		{
		}
	}

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float movementThreshold;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float timeAtRestBeforeKinematic;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x14000008")]
	public event Action OnSettle
	{
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xCF32A8", Offset = "0xCF32A8", VA = "0xCF32A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10F90", Offset = "0xA10F90")]
		add
		{
		}
		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xCF334C", Offset = "0xCF334C", VA = "0xCF334C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10FA0", Offset = "0xA10FA0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xCF33F0", Offset = "0xCF33F0", VA = "0xCF33F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xCF34C4", Offset = "0xCF34C4", VA = "0xCF34C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xCF358C", Offset = "0xCF358C", VA = "0xCF358C")]
	public KinematicAtRest()
	{
	}
}
[Token(Token = "0x20001F4")]
public class Pettable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB2BC", Offset = "0x9FB2BC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__19_0;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__19_1;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xDEA0E0", Offset = "0xDEA0E0", VA = "0xDEA0E0")]
		public <>c()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xDEA0E8", Offset = "0xDEA0E8", VA = "0xDEA0E8")]
		internal void <.ctor>b__19_0()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xDEA0EC", Offset = "0xDEA0EC", VA = "0xDEA0EC")]
		internal void <.ctor>b__19_1()
		{
		}
	}

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01088", Offset = "0xA01088")]
	public UnityEvent OnPettingStart;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPettingEnd;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDidPetForALongTime;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NeatAudioPlayer pettingAudio;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int SPEED;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PettableCollider[] m_pettableColliders;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerHand currentPetter;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float pettingTimeout;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeSpentPetting;

	[Token(Token = "0x14000009")]
	[HideInInspector]
	public event Action OnPettingStartCallback
	{
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xDE97FC", Offset = "0xDE97FC", VA = "0xDE97FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10FB0", Offset = "0xA10FB0")]
		add
		{
		}
		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xDE98A0", Offset = "0xDE98A0", VA = "0xDE98A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10FC0", Offset = "0xA10FC0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action OnPettingEndCallback
	{
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xDE9944", Offset = "0xDE9944", VA = "0xDE9944")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10FD0", Offset = "0xA10FD0")]
		add
		{
		}
		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xDE99E8", Offset = "0xDE99E8", VA = "0xDE99E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10FE0", Offset = "0xA10FE0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xDE9A8C", Offset = "0xDE9A8C", VA = "0xDE9A8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xDE9CDC", Offset = "0xDE9CDC", VA = "0xDE9CDC")]
	public bool CanPet(PlayerHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xDE9CE4", Offset = "0xDE9CE4", VA = "0xDE9CE4")]
	public void Pet(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xDE9DF8", Offset = "0xDE9DF8", VA = "0xDE9DF8")]
	public void StopPetting(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xDE9E84", Offset = "0xDE9E84", VA = "0xDE9E84")]
	public Pettable()
	{
	}
}
[Token(Token = "0x20001F6")]
public class PrevNextButton : PushButton
{
	[Token(Token = "0x20001F7")]
	public enum BtnDirection
	{
		[Token(Token = "0x4000BF3")]
		Prev,
		[Token(Token = "0x4000BF4")]
		Next
	}

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 DefaultHoverScale;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform m_visual;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private Vector3 m_hoverScaleUpValue;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[SerializeField]
	private float m_scaleSpeed;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 m_defaultScale;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public BtnDirection Direction;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameSettingId SettingId;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA01130", Offset = "0xA01130")]
	private int <Value>k__BackingField;

	[Token(Token = "0x1700012F")]
	public int Value
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xC67D98", Offset = "0xC67D98", VA = "0xC67D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA10FF0", Offset = "0xA10FF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xC67DA0", Offset = "0xC67DA0", VA = "0xC67DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11000", Offset = "0xA11000")]
		set
		{
		}
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xC67DA8", Offset = "0xC67DA8", VA = "0xC67DA8", Slot = "21")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0xC67E58", Offset = "0xC67E58", VA = "0xC67E58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0xC67F7C", Offset = "0xC67F7C", VA = "0xC67F7C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0xC680A0", Offset = "0xC680A0", VA = "0xC680A0", Slot = "7")]
	public override void PressButton(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0xC680D8", Offset = "0xC680D8", VA = "0xC680D8")]
	public void HoverOver(PushButton button)
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0xC68190", Offset = "0xC68190", VA = "0xC68190")]
	public void HoverOut(PushButton button)
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0xC681A8", Offset = "0xC681A8", VA = "0xC681A8")]
	public PrevNextButton()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Pushable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB2CC", Offset = "0x9FB2CC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<PlayerHand> <>9__15_0;

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xC6A134", Offset = "0xC6A134", VA = "0xC6A134")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xC6A13C", Offset = "0xC6A13C", VA = "0xC6A13C")]
		internal void <.ctor>b__15_0(PlayerHand <p0>)
		{
		}
	}

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float maxPushDistance;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currentDistance;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 startPos;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 previousPos;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider currentCollider;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerHand currentHand;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool pushed;

	[Token(Token = "0x1400000B")]
	[HideInInspector]
	public event Action<PlayerHand> OnPush
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xC698FC", Offset = "0xC698FC", VA = "0xC698FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11010", Offset = "0xA11010")]
		add
		{
		}
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xC699A0", Offset = "0xC699A0", VA = "0xC699A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11020", Offset = "0xA11020")]
		remove
		{
		}
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xC69A44", Offset = "0xC69A44", VA = "0xC69A44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xC69A80", Offset = "0xC69A80", VA = "0xC69A80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xC69D68", Offset = "0xC69D68", VA = "0xC69D68")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xC69EE4", Offset = "0xC69EE4", VA = "0xC69EE4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xC69E80", Offset = "0xC69E80", VA = "0xC69E80")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xC69F7C", Offset = "0xC69F7C", VA = "0xC69F7C")]
	public Pushable()
	{
	}
}
[Token(Token = "0x20001FA")]
public class RecipeBoard : SaveableComponent, IInitializable, IHouseholdMovable, IStickyVolume
{
	[Token(Token = "0x20001FB")]
	private class RecipeBoardState : ComponentState
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasUnlockedAll;

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xC72A8C", Offset = "0xC72A8C", VA = "0xC72A8C")]
		public RecipeBoardState(bool hasUnlockedAll)
		{
		}
	}

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<StickyNotePosition> m_positions;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] m_stickyColliders;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_hasUnlockedAll;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool m_initialized;

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xC71EA8", Offset = "0xC71EA8", VA = "0xC71EA8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xC72188", Offset = "0xC72188", VA = "0xC72188", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xC722E8", Offset = "0xC722E8", VA = "0xC722E8")]
	private void PlaceStickyNotes()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xC72458", Offset = "0xC72458", VA = "0xC72458")]
	private void PlaceStickys(BoxCollider col)
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xC72674", Offset = "0xC72674", VA = "0xC72674", Slot = "10")]
	public bool TrySetSticky(StickyNote sticky)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xC72754", Offset = "0xC72754", VA = "0xC72754")]
	private StickyNotePosition GetNearestStickyPosition(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xC72960", Offset = "0xC72960", VA = "0xC72960", Slot = "6")]
	public void OnPreUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xC7222C", Offset = "0xC7222C", VA = "0xC7222C")]
	private void UnlockAllRecipePositions()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xC72978", Offset = "0xC72978", VA = "0xC72978", Slot = "7")]
	public void OnPostUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xC7297C", Offset = "0xC7297C", VA = "0xC7297C", Slot = "8")]
	public void OnBeforeMove(int homeLevel)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xC72980", Offset = "0xC72980", VA = "0xC72980", Slot = "9")]
	public void OnMoved(int homeLevel)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0xC72A24", Offset = "0xC72A24", VA = "0xC72A24", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0xC72ABC", Offset = "0xC72ABC", VA = "0xC72ABC")]
	public RecipeBoard()
	{
	}
}
[Token(Token = "0x20001FC")]
public class Rotatable : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
{
	[Serializable]
	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB2DC", Offset = "0x9FB2DC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__84_0;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__84_1;

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xC77384", Offset = "0xC77384", VA = "0xC77384")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xC7738C", Offset = "0xC7738C", VA = "0xC7738C")]
		internal void <.ctor>b__84_0(bool <p0>)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xC77390", Offset = "0xC77390", VA = "0xC77390")]
		internal void <.ctor>b__84_1()
		{
		}
	}

	[Token(Token = "0x4000C04")]
	private const int DefaultPriority = 120;

	[Token(Token = "0x4000C05")]
	private const bool DefaultIsExtraSticky = true;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01160", Offset = "0xA01160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01160", Offset = "0xA01160")]
	private float maxPositiveRotation;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA011D0", Offset = "0xA011D0")]
	private float maxNegativeRotation;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0121C", Offset = "0xA0121C")]
	public float maxPositiveTotalDelta;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01254", Offset = "0xA01254")]
	public float maxNegativeTotalDelta;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0128C", Offset = "0xA0128C")]
	[SerializeField]
	private bool returnToDefaultRotationOnRelease;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool elasticRelease;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float elasticityOverflowModifier;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float elasticityDuration;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float returnToDefaultDelay;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01318", Offset = "0xA01318")]
	private bool rotateAroundXAxis;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool rotateAroundZAxis;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01374", Offset = "0xA01374")]
	public UnityEvent OnGrab;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnDrop;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA013CC", Offset = "0xA013CC")]
	private GrabbableOutline outline;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01428", Offset = "0xA01428")]
	[SerializeField]
	private float m_shutAtDegree;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float m_shutEvaluationThreshold;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private NeatAudioPlayer m_shutAudioCue;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentRotationInDegrees;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 rotationAxis;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 maxRotatedYVec;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 minRotatedYVec;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float maxAngleCosinePos;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float maxAngleCosineNeg;

	[NonSerialized]
	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float totalDeltaRotation;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion previousLocalRotation;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 originalLocalEulerAngles;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 previousUpLocal;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Sequence rotationTweenSequence;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] rotationDeltaBuffer;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool m_canBeGrabbed;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int m_currentPriority;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool m_isExtraSticky;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_lastShutRotationDelta;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_initialized;

	[Token(Token = "0x17000130")]
	public bool IsHeld
	{
		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xC74CF0", Offset = "0xC74CF0", VA = "0xC74CF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000131")]
	public float CurrentRotation
	{
		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xC74D60", Offset = "0xC74D60", VA = "0xC74D60")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000132")]
	public bool Initialized
	{
		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xC74D68", Offset = "0xC74D68", VA = "0xC74D68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	public float MaxPositiveRoation
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xC74D70", Offset = "0xC74D70", VA = "0xC74D70")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000134")]
	public float MaxNegativeRotation
	{
		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xC74D78", Offset = "0xC74D78", VA = "0xC74D78")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000135")]
	public bool CanBeGrabbed
	{
		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xC74D80", Offset = "0xC74D80", VA = "0xC74D80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xC74D88", Offset = "0xC74D88", VA = "0xC74D88")]
		set
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<bool> OnToggleUsage
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xC74A60", Offset = "0xC74A60", VA = "0xC74A60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11030", Offset = "0xA11030")]
		add
		{
		}
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xC74B04", Offset = "0xC74B04", VA = "0xC74B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11040", Offset = "0xA11040")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action OnPreGrab
	{
		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xC74BA8", Offset = "0xC74BA8", VA = "0xC74BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11050", Offset = "0xA11050")]
		add
		{
		}
		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xC74C4C", Offset = "0xC74C4C", VA = "0xC74C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11060", Offset = "0xA11060")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xC74E40", Offset = "0xC74E40", VA = "0xC74E40", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xC74F14", Offset = "0xC74F14", VA = "0xC74F14")]
	private void Precalculate()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0xC75108", Offset = "0xC75108", VA = "0xC75108")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0xC753C4", Offset = "0xC753C4", VA = "0xC753C4")]
	private void HandleShutAudio(float rotationDelta)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0xC74D90", Offset = "0xC74D90", VA = "0xC74D90")]
	private void SetCanBeGrabbed(bool value)
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0xC75504", Offset = "0xC75504", VA = "0xC75504")]
	private bool GetCanBeGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0xC7550C", Offset = "0xC7550C", VA = "0xC7550C", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0xC75514", Offset = "0xC75514", VA = "0xC75514", Slot = "16")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xC7551C", Offset = "0xC7551C", VA = "0xC7551C", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xC7565C", Offset = "0xC7565C", VA = "0xC7565C")]
	private Vector3 GetLocalUpNormalized(OrientedPoint orientedPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xC75750", Offset = "0xC75750", VA = "0xC75750", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xC757FC", Offset = "0xC757FC", VA = "0xC757FC")]
	private void UpdateRotationTowardsHand(OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xC75384", Offset = "0xC75384", VA = "0xC75384")]
	private float GetRotationDelta(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xC76748", Offset = "0xC76748", VA = "0xC76748")]
	public void ForceStopGrabbing()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xC767EC", Offset = "0xC767EC", VA = "0xC767EC", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xC76ACC", Offset = "0xC76ACC", VA = "0xC76ACC")]
	public void BounceRotateToDegree(float degree, float windupDuration, float bounceDuration)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xC76FA0", Offset = "0xC76FA0", VA = "0xC76FA0")]
	public float GetRotationNormalized()
	{
		return default(float);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xC7708C", Offset = "0xC7708C", VA = "0xC7708C", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xC77094", Offset = "0xC77094", VA = "0xC77094", Slot = "17")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xC7709C", Offset = "0xC7709C", VA = "0xC7709C", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xC770A4", Offset = "0xC770A4", VA = "0xC770A4", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xC756E8", Offset = "0xC756E8", VA = "0xC756E8")]
	private void ToggleUseage(bool inUse)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xC75F48", Offset = "0xC75F48", VA = "0xC75F48")]
	private bool ClampRotation(Quaternion rotationToClamp, out Quaternion clampedRotation)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0xC770A8", Offset = "0xC770A8", VA = "0xC770A8", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0xC770B0", Offset = "0xC770B0", VA = "0xC770B0", Slot = "6")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0xC770B8", Offset = "0xC770B8", VA = "0xC770B8", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xC770C0", Offset = "0xC770C0", VA = "0xC770C0", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xC770C8", Offset = "0xC770C8", VA = "0xC770C8")]
	public Rotatable()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xC77310", Offset = "0xC77310", VA = "0xC77310")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11070", Offset = "0xA11070")]
	private void <BounceRotateToDegree>b__72_0()
	{
	}
}
[Token(Token = "0x20001FE")]
public class Rotatable2 : MonoBehaviour, IGrabbable, IValidateCustom, IValidate, IInitializable
{
	[Token(Token = "0x20001FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB2EC", Offset = "0x9FB2EC")]
	private sealed class <AnimateTo>d__75 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rotatable2 <>4__this;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delay;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float angle;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <progress>5__3;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <startAngle>5__4;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <diffAngle>5__5;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xC79864", Offset = "0xC79864", VA = "0xC79864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xC798CC", Offset = "0xC798CC", VA = "0xC798CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xC78360", Offset = "0xC78360", VA = "0xC78360")]
		[DebuggerHidden]
		public <AnimateTo>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xC7961C", Offset = "0xC7961C", VA = "0xC7961C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xC79620", Offset = "0xC79620", VA = "0xC79620", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xC7986C", Offset = "0xC7986C", VA = "0xC7986C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB2FC", Offset = "0x9FB2FC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__97_0;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__97_1;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Rotatable2> <>9__97_2;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<Rotatable2> <>9__97_3;

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xC79604", Offset = "0xC79604", VA = "0xC79604")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xC7960C", Offset = "0xC7960C", VA = "0xC7960C")]
		internal void <.ctor>b__97_0(bool <p0>)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xC79610", Offset = "0xC79610", VA = "0xC79610")]
		internal void <.ctor>b__97_1()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xC79614", Offset = "0xC79614", VA = "0xC79614")]
		internal void <.ctor>b__97_2(Rotatable2 <p0>)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xC79618", Offset = "0xC79618", VA = "0xC79618")]
		internal void <.ctor>b__97_3(Rotatable2 <p0>)
		{
		}
	}

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01494", Offset = "0xA01494")]
	[SerializeField]
	private int grabPriority;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxDegreesPerSecond;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float snapToAngleIncrements;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float snapToAngleThreshold;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float snapToAngleOffset;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float targetAngle;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01530", Offset = "0xA01530")]
	private bool limitRotation;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxPositiveAngle;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float maxNegativeAngle;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private bool shouldResetAfterDelay;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA015AC", Offset = "0xA015AC")]
	private bool decelerateAfterRelease;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[SerializeField]
	private bool isHeavy;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01608", Offset = "0xA01608")]
	private Transform grabHandle;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01664", Offset = "0xA01664")]
	public UnityEvent OnGrab;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnDrop;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnSnap;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnSnapQuickly;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA016DC", Offset = "0xA016DC")]
	private GrabbableOutline outline;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerHand heldByHand;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 currentEulerAngles;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 previousEulerAngles;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 startUpDirection;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float overrideAngle;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool didSnap;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool isAnimating;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float startAngle;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float delayBeforeTriggering;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool slowDownOverTime;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float degreesMovedLastUpdate;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float delayBeforeSlowDown;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool allowedToSnap;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] speedHistory;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int currentFrame;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Vector3> previousVelocities;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA01728", Offset = "0xA01728")]
	private bool <CanBeGrabbed>k__BackingField;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float angleInDegrees;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float anglesToMove;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float previousRotationDir;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 previousHandPos;

	[Token(Token = "0x17000136")]
	public bool IsHeld
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xC778B4", Offset = "0xC778B4", VA = "0xC778B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000137")]
	public float CurrentRotation
	{
		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xC77924", Offset = "0xC77924", VA = "0xC77924")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000138")]
	public float DeltaRotation
	{
		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xC77938", Offset = "0xC77938", VA = "0xC77938")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000139")]
	public float MaxSpeedDegPerSec
	{
		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC77948", Offset = "0xC77948", VA = "0xC77948")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013A")]
	public float CurrentSignedRotation
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xC77950", Offset = "0xC77950", VA = "0xC77950")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013B")]
	public float MaxPositiveAngle
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC77974", Offset = "0xC77974", VA = "0xC77974")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013C")]
	public float MaxNegativeAngle
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xC7797C", Offset = "0xC7797C", VA = "0xC7797C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700013D")]
	public bool CanBeGrabbed
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xC77984", Offset = "0xC77984", VA = "0xC77984")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11100", Offset = "0xA11100")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC7798C", Offset = "0xC7798C", VA = "0xC7798C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11110", Offset = "0xA11110")]
		set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<bool> OnToggleUsage
	{
		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xC77394", Offset = "0xC77394", VA = "0xC77394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11080", Offset = "0xA11080")]
		add
		{
		}
		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xC77438", Offset = "0xC77438", VA = "0xC77438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11090", Offset = "0xA11090")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action OnPreGrab
	{
		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xC774DC", Offset = "0xC774DC", VA = "0xC774DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA110A0", Offset = "0xA110A0")]
		add
		{
		}
		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xC77580", Offset = "0xC77580", VA = "0xC77580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA110B0", Offset = "0xA110B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<Rotatable2> OnSnapped
	{
		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xC77624", Offset = "0xC77624", VA = "0xC77624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA110C0", Offset = "0xA110C0")]
		add
		{
		}
		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xC776C8", Offset = "0xC776C8", VA = "0xC776C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA110D0", Offset = "0xA110D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public event Action<Rotatable2> OnReachedTarget
	{
		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xC7776C", Offset = "0xC7776C", VA = "0xC7776C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA110E0", Offset = "0xA110E0")]
		add
		{
		}
		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xC77810", Offset = "0xC77810", VA = "0xC77810")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA110F0", Offset = "0xA110F0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0xC77998", Offset = "0xC77998", VA = "0xC77998", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xC7799C", Offset = "0xC7799C", VA = "0xC7799C")]
	public void SetSnapToAngleIncrements(float angle, float offset)
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xC779A8", Offset = "0xC779A8", VA = "0xC779A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xC77A28", Offset = "0xC77A28", VA = "0xC77A28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xC78044", Offset = "0xC78044", VA = "0xC78044")]
	private float GetAverageSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xC780B8", Offset = "0xC780B8", VA = "0xC780B8")]
	public float GetRotationNormalized()
	{
		return default(float);
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xC77F14", Offset = "0xC77F14", VA = "0xC77F14")]
	private float GetClosestSnapAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xC781B0", Offset = "0xC781B0", VA = "0xC781B0")]
	public void ForceSnapToClosest()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xC78214", Offset = "0xC78214", VA = "0xC78214")]
	public void AnimateToAngle(float angle, float duration, float delay = 0f)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xC782E0", Offset = "0xC782E0", VA = "0xC782E0")]
	public void ResetToOriginalAngle(float duration = 0f, float delay = 0f)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xC78240", Offset = "0xC78240", VA = "0xC78240")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11120", Offset = "0xA11120")]
	private IEnumerator AnimateTo(float angle, float duration, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xC7838C", Offset = "0xC7838C", VA = "0xC7838C", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xC78394", Offset = "0xC78394", VA = "0xC78394", Slot = "16")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xC7839C", Offset = "0xC7839C", VA = "0xC7839C", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xC78520", Offset = "0xC78520", VA = "0xC78520", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xC78628", Offset = "0xC78628", VA = "0xC78628")]
	private void UpdateRotationTowardsHand(OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xC78DE0", Offset = "0xC78DE0", VA = "0xC78DE0")]
	public void ForceStopGrabbing()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xC78E9C", Offset = "0xC78E9C", VA = "0xC78E9C", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xC79110", Offset = "0xC79110", VA = "0xC79110")]
	private Vector3 GetPredictedVelocity(PlayerHand hand, OrientedPoint handAttachPoint)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xC791A0", Offset = "0xC791A0", VA = "0xC791A0", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xC791DC", Offset = "0xC791DC", VA = "0xC791DC", Slot = "17")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xC791E4", Offset = "0xC791E4", VA = "0xC791E4", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xC791EC", Offset = "0xC791EC", VA = "0xC791EC", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xC784B8", Offset = "0xC784B8", VA = "0xC784B8")]
	private void ToggleUseage(bool inUse)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xC791F0", Offset = "0xC791F0", VA = "0xC791F0", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xC791F8", Offset = "0xC791F8", VA = "0xC791F8", Slot = "6")]
	public GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xC79200", Offset = "0xC79200", VA = "0xC79200", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xC79208", Offset = "0xC79208", VA = "0xC79208", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xC79210", Offset = "0xC79210", VA = "0xC79210")]
	public Rotatable2()
	{
	}
}
[Token(Token = "0x2000201")]
public class SettingsButton : PushButton
{
	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameSettingId SettingId;

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0xCDCE04", Offset = "0xCDCE04", VA = "0xCDCE04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xCDCF38", Offset = "0xCDCF38", VA = "0xCDCF38", Slot = "7")]
	public override void PressButton(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xCDCFF4", Offset = "0xCDCFF4", VA = "0xCDCFF4")]
	public SettingsButton()
	{
	}
}
[Token(Token = "0x2000202")]
public class SettingsSlider : PushButton
{
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameSettingId SettingId;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private Transform[] steps;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private GameObject[] settings;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private GameObject sliderKnob;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int currentSelection;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xCDD004", Offset = "0xCDD004", VA = "0xCDD004")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xCDD29C", Offset = "0xCDD29C", VA = "0xCDD29C", Slot = "4")]
	public override void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xCDD2D0", Offset = "0xCDD2D0", VA = "0xCDD2D0", Slot = "6")]
	public override void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xCDD304", Offset = "0xCDD304", VA = "0xCDD304", Slot = "5")]
	public override void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xCDD520", Offset = "0xCDD520", VA = "0xCDD520")]
	private void UpdateSelection(int index)
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xCDD134", Offset = "0xCDD134", VA = "0xCDD134")]
	private void SelectStep(int step)
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xCDD5CC", Offset = "0xCDD5CC", VA = "0xCDD5CC")]
	public SettingsSlider()
	{
	}
}
[Token(Token = "0x2000203")]
public class SnapToWall : MonoBehaviour
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform wallAttachPoint;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RaycastHit hitInfo;

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xCE1084", Offset = "0xCE1084", VA = "0xCE1084")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xCE1160", Offset = "0xCE1160", VA = "0xCE1160")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xCE123C", Offset = "0xCE123C", VA = "0xCE123C")]
	public void OnGrabbableDropped(bool isHeld)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xCE1910", Offset = "0xCE1910", VA = "0xCE1910")]
	public SnapToWall()
	{
	}
}
[Token(Token = "0x2000204")]
public class SnowBall : MonoBehaviour
{
	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speedRequiredToSploosh;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xCE1918", Offset = "0xCE1918", VA = "0xCE1918")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xCE1A38", Offset = "0xCE1A38", VA = "0xCE1A38")]
	public SnowBall()
	{
	}
}
[Token(Token = "0x2000205")]
[DisallowMultipleComponent]
public class Stashable : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000206")]
	public delegate void OnDropZoneBeginHover();

	[Token(Token = "0x2000207")]
	public delegate void OnDropZoneEndHover();

	[Serializable]
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB31C", Offset = "0x9FB31C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__84_0;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__84_1;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__84_2;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__84_3;

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCEEBFC", Offset = "0xCEEBFC", VA = "0xCEEBFC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCEEC04", Offset = "0xCEEC04", VA = "0xCEEC04")]
		internal void <.ctor>b__84_0()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xCEEC08", Offset = "0xCEEC08", VA = "0xCEEC08")]
		internal void <.ctor>b__84_1()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCEEC0C", Offset = "0xCEEC0C", VA = "0xCEEC0C")]
		internal void <.ctor>b__84_2()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCEEC10", Offset = "0xCEEC10", VA = "0xCEEC10")]
		internal void <.ctor>b__84_3()
		{
		}
	}

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 boundsLocalCenter;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float boundsRadius;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useCustomBounds;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool useGrabPointRotation;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 originalScale;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Grabbable grabbable;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform objectRoot;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private int hashedName;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private bool RequireInventoryHeroSlot;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Mesh HeroSlotMesh;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InventoryHeroSlot ConnectedHeroSlot;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Func<bool> InventoryAddFunction;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string ItemDataName;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ItemDataAssetRow ItemData;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool stashed;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool initialized;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool isEmissive;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MaterialPropertyBlock emissiveMpb;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MaterialPropertyBlock[] previousMpbs;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Renderer[] renderers;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion precalcGrabPointRotation;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public OnDropZoneBeginHover BeginHoverDelegate;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public OnDropZoneEndHover EndHoverDelegate;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private LayerData[] m_originalObjectLayers;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA01828", Offset = "0xA01828")]
	private int <HoveredDropZones>k__BackingField;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int StashableHighlightProp;

	[Token(Token = "0x17000140")]
	public Vector3 OriginalScale
	{
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xCECB24", Offset = "0xCECB24", VA = "0xCECB24")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000141")]
	public Transform ObjectRoot
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xCECB30", Offset = "0xCECB30", VA = "0xCECB30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000142")]
	public bool IsHeld
	{
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xCECB38", Offset = "0xCECB38", VA = "0xCECB38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000143")]
	public bool IsStashed
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xCECB54", Offset = "0xCECB54", VA = "0xCECB54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000144")]
	public bool Initialized
	{
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xCECB5C", Offset = "0xCECB5C", VA = "0xCECB5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000145")]
	public int HashedName
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xCECB64", Offset = "0xCECB64", VA = "0xCECB64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000146")]
	public int HoveredDropZones
	{
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xCECFE8", Offset = "0xCECFE8", VA = "0xCECFE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11254", Offset = "0xA11254")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xCECFF0", Offset = "0xCECFF0", VA = "0xCECFF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11264", Offset = "0xA11264")]
		set
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action OnStashedItem
	{
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xCE8BC4", Offset = "0xCE8BC4", VA = "0xCE8BC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA111D4", Offset = "0xA111D4")]
		add
		{
		}
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xCECB6C", Offset = "0xCECB6C", VA = "0xCECB6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA111E4", Offset = "0xA111E4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action OnUnStashedItem
	{
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xCECC10", Offset = "0xCECC10", VA = "0xCECC10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA111F4", Offset = "0xA111F4")]
		add
		{
		}
		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xCECCB4", Offset = "0xCECCB4", VA = "0xCECCB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11204", Offset = "0xA11204")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event Action OnAddedToPlayerInventory
	{
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xCECD58", Offset = "0xCECD58", VA = "0xCECD58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11214", Offset = "0xA11214")]
		add
		{
		}
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xCECDFC", Offset = "0xCECDFC", VA = "0xCECDFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11224", Offset = "0xA11224")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event Action OnRemovedFromPlayerInventory
	{
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xCECEA0", Offset = "0xCECEA0", VA = "0xCECEA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11234", Offset = "0xA11234")]
		add
		{
		}
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xCECF44", Offset = "0xCECF44", VA = "0xCECF44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11244", Offset = "0xA11244")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xCECFF8", Offset = "0xCECFF8", VA = "0xCECFF8", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xCED490", Offset = "0xCED490", VA = "0xCED490")]
	public float GetRadiusWorldSpace()
	{
		return default(float);
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xCED4C8", Offset = "0xCED4C8", VA = "0xCED4C8")]
	public Vector3 GetCenterPosWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xCED4FC", Offset = "0xCED4FC", VA = "0xCED4FC")]
	public Vector3 GetMinBoundsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xCED620", Offset = "0xCED620", VA = "0xCED620")]
	public Vector3 GetMaxBoundsPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xCED6EC", Offset = "0xCED6EC", VA = "0xCED6EC")]
	public void UpdateHoveredDropzones(int v)
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xCED368", Offset = "0xCED368", VA = "0xCED368")]
	public void AssignOriginalScale()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xCED79C", Offset = "0xCED79C", VA = "0xCED79C")]
	public void ApplyNewOriginalScale(Vector3 newScale)
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xCED7CC", Offset = "0xCED7CC", VA = "0xCED7CC")]
	public bool HasUpdatedBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0xCED7DC", Offset = "0xCED7DC", VA = "0xCED7DC")]
	public Rigidbody TryFindRootRigidbody()
	{
		return null;
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0xCED83C", Offset = "0xCED83C", VA = "0xCED83C")]
	public OrientedPoint CalculateLocalPosition(OrientedPoint op)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0xCEDA58", Offset = "0xCEDA58", VA = "0xCEDA58")]
	public void SetLocalPosition(OrientedPoint op, bool preCalculated = false)
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xCEDCDC", Offset = "0xCEDCDC", VA = "0xCEDCDC")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xCEDD18", Offset = "0xCEDD18", VA = "0xCEDD18")]
	public bool CanBeStashed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xCEDE04", Offset = "0xCEDE04", VA = "0xCEDE04")]
	public void Stash(Transform parent)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xCEDECC", Offset = "0xCEDECC", VA = "0xCEDECC")]
	public void Unstash()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0xCEE0FC", Offset = "0xCEE0FC", VA = "0xCEE0FC")]
	public void AddedToPlayerInventory()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0xCEE110", Offset = "0xCEE110", VA = "0xCEE110")]
	public void RemovedFromPlayerInventory()
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xCEE124", Offset = "0xCEE124", VA = "0xCEE124")]
	public bool HaveCustomInventoryAddLogic()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xCEE134", Offset = "0xCEE134", VA = "0xCEE134")]
	public bool HasCorrectReferences()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xCEE1F0", Offset = "0xCEE1F0", VA = "0xCEE1F0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xCEE2E8", Offset = "0xCEE2E8", VA = "0xCEE2E8")]
	public void SetCustomHashedName(int hash)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xCEE2F0", Offset = "0xCEE2F0", VA = "0xCEE2F0")]
	public void SetEmissiveness(bool emissive)
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xCEE6B0", Offset = "0xCEE6B0", VA = "0xCEE6B0")]
	private void SetEmissiveness_Plant(float emissiveValue, PlantSystemIndexable indexable)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xCEE760", Offset = "0xCEE760", VA = "0xCEE760")]
	public void SetConnectedHeroSlot(InventoryHeroSlot newHeroSlot)
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xCEE768", Offset = "0xCEE768", VA = "0xCEE768")]
	public bool RequireHeroSlot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xCEE770", Offset = "0xCEE770", VA = "0xCEE770")]
	public InventoryHeroSlot GetConnectedHeroSlot()
	{
		return null;
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xCEE778", Offset = "0xCEE778", VA = "0xCEE778")]
	public Mesh GetHeroSlotMesh()
	{
		return null;
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xCEE780", Offset = "0xCEE780", VA = "0xCEE780")]
	public bool NeedNewHeroSlot()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xCEE808", Offset = "0xCEE808", VA = "0xCEE808")]
	public Stashable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000209")]
public class StashableState : ComponentState
{
	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3Serializable originalScale;

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0xCEE270", Offset = "0xCEE270", VA = "0xCEE270")]
	public StashableState(Vector3 scale)
	{
	}
}
[Token(Token = "0x200020A")]
public class StickyNote : Grabbable
{
	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	private Vector3 colliderSize;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool isStuck;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
	private bool m_hasTriedUnlockCollectable;

	[Token(Token = "0x17000147")]
	public bool IsStuck
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xCF0188", Offset = "0xCF0188", VA = "0xCF0188")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0xCF0190", Offset = "0xCF0190", VA = "0xCF0190", Slot = "19")]
	public override void PostLoadInit()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xCF0304", Offset = "0xCF0304", VA = "0xCF0304")]
	private void OnLetGo()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xCF04D4", Offset = "0xCF04D4", VA = "0xCF04D4")]
	private void HandleGrabbed()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xCF05CC", Offset = "0xCF05CC", VA = "0xCF05CC")]
	public void SetIsStuck(bool stuck)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xCF05D8", Offset = "0xCF05D8", VA = "0xCF05D8")]
	public StickyNote()
	{
	}
}
[Token(Token = "0x200020B")]
public class StickyVolume : MonoBehaviour, IInitializable, IHouseholdMovable, IStickyVolume
{
	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<StickyNotePosition> positions;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private StickyNote playerSticky;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider[] cols;

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xCF0640", Offset = "0xCF0640", VA = "0xCF0640")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xCF0908", Offset = "0xCF0908", VA = "0xCF0908", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xCF0C38", Offset = "0xCF0C38", VA = "0xCF0C38", Slot = "9")]
	public bool TrySetSticky(StickyNote sticky)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xCF0D18", Offset = "0xCF0D18", VA = "0xCF0D18")]
	private StickyNotePosition GetNearestStickyPosition(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xCF0ED0", Offset = "0xCF0ED0", VA = "0xCF0ED0", Slot = "5")]
	public void OnPreUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xCF0ED4", Offset = "0xCF0ED4", VA = "0xCF0ED4", Slot = "6")]
	public void OnPostUpgrade(int homeLevel)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xCF0ED8", Offset = "0xCF0ED8", VA = "0xCF0ED8", Slot = "7")]
	public void OnBeforeMove(int homeLevel)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xCF0EDC", Offset = "0xCF0EDC", VA = "0xCF0EDC", Slot = "8")]
	public void OnMoved(int homeLevel)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xCF0F80", Offset = "0xCF0F80", VA = "0xCF0F80")]
	public StickyVolume()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB32C", Offset = "0x9FB32C")]
public class Storage : MonoBehaviour, IInitializable
{
	[Token(Token = "0x200020D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB390", Offset = "0x9FB390")]
	private sealed class <MoveItemIntoSlot>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Storage <>4__this;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InventorySlot slot;

		[Token(Token = "0x17000148")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xCF1EA4", Offset = "0xCF1EA4", VA = "0xCF1EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000149")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xCF1F0C", Offset = "0xCF1F0C", VA = "0xCF1F0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xCF19E8", Offset = "0xCF19E8", VA = "0xCF19E8")]
		[DebuggerHidden]
		public <MoveItemIntoSlot>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xCF1DA4", Offset = "0xCF1DA4", VA = "0xCF1DA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xCF1DA8", Offset = "0xCF1DA8", VA = "0xCF1DA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xCF1EAC", Offset = "0xCF1EAC", VA = "0xCF1EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StorageDropzone dropZone;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InventorySlot[] slots;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ObjectContainer container;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isMovingItemIntoSlot;

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xCF1000", Offset = "0xCF1000", VA = "0xCF1000", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xCF1414", Offset = "0xCF1414", VA = "0xCF1414")]
	public bool HasSpaceForItem(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xCF151C", Offset = "0xCF151C", VA = "0xCF151C")]
	private void AddToSlot(Stashable item, InventorySlot slot)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xCF1350", Offset = "0xCF1350", VA = "0xCF1350")]
	private void AddImmediately(Stashable item)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xCF1784", Offset = "0xCF1784", VA = "0xCF1784")]
	public void Add(Stashable item)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xCF1900", Offset = "0xCF1900", VA = "0xCF1900")]
	public bool TryAdd(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xCF1868", Offset = "0xCF1868", VA = "0xCF1868")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11274", Offset = "0xA11274")]
	private IEnumerator MoveItemIntoSlot(InventorySlot slot)
	{
		return null;
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xCF1654", Offset = "0xCF1654", VA = "0xCF1654")]
	private InventorySlot FindSlotWithSpaceForItem(Stashable item)
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xCF1A14", Offset = "0xCF1A14", VA = "0xCF1A14")]
	private void OnPreGrabItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xCF1AEC", Offset = "0xCF1AEC", VA = "0xCF1AEC")]
	public void Remove(Stashable item)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xCF1BF4", Offset = "0xCF1BF4", VA = "0xCF1BF4")]
	public void UpdateSlotsHoverStatus(List<StashableTrigger.StashableCollider> hoveringColliders)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xCF1D9C", Offset = "0xCF1D9C", VA = "0xCF1D9C")]
	public Storage()
	{
	}
}
[Token(Token = "0x200020E")]
public class StorageDropzone : StashableTrigger
{
	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Storage storage;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_initialized;

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xCF12BC", Offset = "0xCF12BC", VA = "0xCF12BC")]
	public void Init(Storage storage)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xCF1F14", Offset = "0xCF1F14", VA = "0xCF1F14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xCF2100", Offset = "0xCF2100", VA = "0xCF2100")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xCF2244", Offset = "0xCF2244", VA = "0xCF2244")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xCF2388", Offset = "0xCF2388", VA = "0xCF2388")]
	private bool HasValidItemInside()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0xCF24A0", Offset = "0xCF24A0", VA = "0xCF24A0", Slot = "4")]
	protected override void OnHoverStateChanged()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xCF2534", Offset = "0xCF2534", VA = "0xCF2534")]
	public StorageDropzone()
	{
	}
}
[Token(Token = "0x200020F")]
public class Choppable : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB3A0", Offset = "0x9FB3A0")]
	private sealed class <RemoveChoppedPartAndSpawnResources>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Choppable <>4__this;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeWaited>5__2;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timeElapsed>5__4;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform <objToScale>5__5;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <startScale>5__6;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <brokenTopOrigPos>5__7;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool <shouldPlaySecondPoof>5__8;

		[Token(Token = "0x1700014B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xC21F58", Offset = "0xC21F58", VA = "0xC21F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xC21FC0", Offset = "0xC21FC0", VA = "0xC21FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC2153C", Offset = "0xC2153C", VA = "0xC2153C")]
		[DebuggerHidden]
		public <RemoveChoppedPartAndSpawnResources>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xC21568", Offset = "0xC21568", VA = "0xC21568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xC2156C", Offset = "0xC2156C", VA = "0xC2156C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC21F60", Offset = "0xC21F60", VA = "0xC21F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000211")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB3B0", Offset = "0x9FB3B0")]
	private sealed class <WaitForRespawn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Choppable <>4__this;

		[Token(Token = "0x1700014D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xC2214C", Offset = "0xC2214C", VA = "0xC2214C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xC221B4", Offset = "0xC221B4", VA = "0xC221B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xC21FC8", Offset = "0xC21FC8", VA = "0xC21FC8")]
		[DebuggerHidden]
		public <WaitForRespawn>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xC21FF4", Offset = "0xC21FF4", VA = "0xC21FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC21FF8", Offset = "0xC21FF8", VA = "0xC21FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xC22154", Offset = "0xC22154", VA = "0xC22154", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01878", Offset = "0xA01878")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01878", Offset = "0xA01878")]
	private AssetReference[] prefabsToSpawn;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA018E8", Offset = "0xA018E8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA018E8", Offset = "0xA018E8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA018E8", Offset = "0xA018E8")]
	[SerializeField]
	private int[] numCopiesOfEachPrefab;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0197C", Offset = "0xA0197C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0197C", Offset = "0xA0197C")]
	private GameObject fullTreeObject;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA019EC", Offset = "0xA019EC")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA019EC", Offset = "0xA019EC")]
	private GameObject treeCrownObject;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01A5C", Offset = "0xA01A5C")]
	private GameObject stumpObject;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01AA8", Offset = "0xA01AA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01AA8", Offset = "0xA01AA8")]
	[SerializeField]
	private Tool_Axe.AxeLevelType m_requieredAxeLevel;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01B18", Offset = "0xA01B18")]
	[SerializeField]
	private int hitsRequired;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01B64", Offset = "0xA01B64")]
	private float chopForceApplied;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01BB0", Offset = "0xA01BB0")]
	private float delayBeforeRemoval;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool shouldRespawn;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA01C0C", Offset = "0xA01C0C")]
	[SerializeField]
	private float delayBeforeRespawn;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01C58", Offset = "0xA01C58")]
	[SerializeField]
	private Transform resourceSpawnPoint;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Transform brokenTopScalePoint;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Rigidbody rigbod;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private ParticleSystem particleEffect;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform forcePoint;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float timeLeftUntilRespawn;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int hits;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timeLeftBeforeRemoval;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 fallVector;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool hasBeenChopped;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private OrientedPoint defaultPosAndRot;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int numItemsLeftToSpawn;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int totalNumItemsToSpawn;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float timeLeftBeforeResourceSpawn;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01CE4", Offset = "0xA01CE4")]
	public UnityEvent OnChop;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnChopFail;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnFall;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnRemoved;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool initialized;

	[Token(Token = "0x1700014A")]
	public int RequieredAxeLevel
	{
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x10117B0", Offset = "0x10117B0", VA = "0x10117B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x10117B8", Offset = "0x10117B8", VA = "0x10117B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11328", Offset = "0xA11328")]
	private IEnumerator RemoveChoppedPartAndSpawnResources()
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1011834", Offset = "0x1011834", VA = "0x1011834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1138C", Offset = "0xA1138C")]
	private IEnumerator WaitForRespawn()
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x10118B0", Offset = "0x10118B0", VA = "0x10118B0")]
	private Vector3 GetResourceSpawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x10119D0", Offset = "0x10119D0", VA = "0x10119D0")]
	private void SpawnResource()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x1011C9C", Offset = "0x1011C9C", VA = "0x1011C9C")]
	private void OnResourceSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x1011DE8", Offset = "0x1011DE8", VA = "0x1011DE8")]
	private void Respawn()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x1012070", Offset = "0x1012070", VA = "0x1012070")]
	public void Chop(float chopForce, Vector3 chopDirection, int axeLevel)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x101242C", Offset = "0x101242C", VA = "0x101242C")]
	private void OnChopped()
	{
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x1012834", Offset = "0x1012834", VA = "0x1012834")]
	private void ShakeTree()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x10121B0", Offset = "0x10121B0", VA = "0x10121B0")]
	private void ShakeOnFail()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x1012AF8", Offset = "0x1012AF8", VA = "0x1012AF8")]
	private bool PlayerIsNearby()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x1012C18", Offset = "0x1012C18", VA = "0x1012C18", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x1012C90", Offset = "0x1012C90", VA = "0x1012C90", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x1012FE0", Offset = "0x1012FE0", VA = "0x1012FE0")]
	public Choppable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000212")]
public class ChoppableState : ComponentState
{
	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool hasBeenChopped;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeLeftUntilRespawn;

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xC221BC", Offset = "0xC221BC", VA = "0xC221BC")]
	public ChoppableState(bool chopped, float timeTilRespawn)
	{
	}
}
[Token(Token = "0x2000213")]
public class Telescope : Tool_Base, ITool
{
	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject cam;

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xCA63FC", Offset = "0xCA63FC", VA = "0xCA63FC", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0xCA6404", Offset = "0xCA6404", VA = "0xCA6404", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xCA662C", Offset = "0xCA662C", VA = "0xCA662C", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xCA664C", Offset = "0xCA664C", VA = "0xCA664C", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xCA666C", Offset = "0xCA666C", VA = "0xCA666C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xCA66C8", Offset = "0xCA66C8", VA = "0xCA66C8")]
	public Telescope()
	{
	}
}
[Token(Token = "0x2000214")]
public class ToolManager : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ToolManager Instance;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Tool_Base> allTools;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<ToolShed> allToolSheds;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool fishingRodFound;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool axeFound;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool cameraFound;

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xCAA8F0", Offset = "0xCAA8F0", VA = "0xCAA8F0")]
	public static bool GetFishingRodFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xCAA9D0", Offset = "0xCAA9D0", VA = "0xCAA9D0")]
	public static bool GetCameraFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0xCAAAB0", Offset = "0xCAAAB0", VA = "0xCAAAB0")]
	public static bool GetAxeFound()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0xCAAB90", Offset = "0xCAAB90", VA = "0xCAAB90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0xCAAC44", Offset = "0xCAAC44", VA = "0xCAAC44")]
	public static void RegisterTool(Tool_Base tool)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xCAACC8", Offset = "0xCAACC8", VA = "0xCAACC8")]
	public static void RegisterToolShed(ToolShed shed)
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0xCAAD4C", Offset = "0xCAAD4C", VA = "0xCAAD4C")]
	public static void RemoveToolShed(ToolShed shed)
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0xCAAE1C", Offset = "0xCAAE1C", VA = "0xCAAE1C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0xCAAEBC", Offset = "0xCAAEBC", VA = "0xCAAEBC")]
	public static void ReturnAllToolsToHouse()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0xCAB0A8", Offset = "0xCAB0A8", VA = "0xCAB0A8")]
	public static void ReturnAllToolsToBoat()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0xCAB1E8", Offset = "0xCAB1E8", VA = "0xCAB1E8")]
	public static Tool_Base GetToolWithName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0xCAB464", Offset = "0xCAB464", VA = "0xCAB464")]
	public static void FoundFishingRod()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xCAB6CC", Offset = "0xCAB6CC", VA = "0xCAB6CC")]
	public static void FoundCamera()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xCAB934", Offset = "0xCAB934", VA = "0xCAB934")]
	public static void FoundAxe()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xCABB9C", Offset = "0xCABB9C", VA = "0xCABB9C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xCABC24", Offset = "0xCABC24", VA = "0xCABC24")]
	public ToolManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000215")]
public class ToolShedState : ComponentState
{
	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fishingRodFound;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool axeCrafted;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool cameraFound;

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xCABC1C", Offset = "0xCABC1C", VA = "0xCABC1C")]
	public ToolShedState()
	{
	}
}
[Token(Token = "0x2000216")]
public class ToolPosition : MonoBehaviour, IInitializable
{
	[Token(Token = "0x2000217")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB3C0", Offset = "0x9FB3C0")]
	private sealed class <AnimateSnapToPosition>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ToolPosition <>4__this;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform tool;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <done>5__3;

		[Token(Token = "0x1700014F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xCAC658", Offset = "0xCAC658", VA = "0xCAC658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD1")]
			[Address(RVA = "0xCAC6C0", Offset = "0xCAC6C0", VA = "0xCAC6C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xCAC144", Offset = "0xCAC144", VA = "0xCAC144")]
		[DebuggerHidden]
		public <AnimateSnapToPosition>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xCAC3B0", Offset = "0xCAC3B0", VA = "0xCAC3B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xCAC3B4", Offset = "0xCAC3B4", VA = "0xCAC3B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xCAC660", Offset = "0xCAC660", VA = "0xCAC660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GrabbableToolImpostor impostor;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasTool;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stashable stashable;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Tool_Base toolRef;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool initialized;

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xCABCF0", Offset = "0xCABCF0", VA = "0xCABCF0", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0xCABE44", Offset = "0xCABE44", VA = "0xCABE44")]
	public void ResetToolPosition()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xCABF70", Offset = "0xCABF70", VA = "0xCABF70")]
	private void SnapToPosition(Rigidbody toolRb, bool animate = true)
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xCAC09C", Offset = "0xCAC09C", VA = "0xCAC09C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11490", Offset = "0xA11490")]
	private IEnumerator AnimateSnapToPosition(Transform tool, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xCAC170", Offset = "0xCAC170", VA = "0xCAC170")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xCAC2C8", Offset = "0xCAC2C8", VA = "0xCAC2C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xCAC3A8", Offset = "0xCAC3A8", VA = "0xCAC3A8")]
	public ToolPosition()
	{
	}
}
[Token(Token = "0x2000218")]
public class ToolShed : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isShedNextToHouse;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isShedOnBoat;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject FishingRodCollider;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FishingRodImpostor;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject AxeCollider;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject AxeImpostor;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject CameraCollider;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CameraImpostor;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ToolPosition[] allToolPositions;

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xCAC6C8", Offset = "0xCAC6C8", VA = "0xCAC6C8", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xCAC7AC", Offset = "0xCAC7AC", VA = "0xCAC7AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xCAB684", Offset = "0xCAB684", VA = "0xCAB684")]
	public void ToggleFishingRodImpostor(bool found)
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xCABB54", Offset = "0xCABB54", VA = "0xCABB54")]
	public void ToggleAxeImpostor(bool crafted)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xCAB8EC", Offset = "0xCAB8EC", VA = "0xCAB8EC")]
	public void ToggleCameraImpostor(bool found)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xCAAFFC", Offset = "0xCAAFFC", VA = "0xCAAFFC")]
	public void ReturnAllToolsToShed()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xCAC810", Offset = "0xCAC810", VA = "0xCAC810")]
	public ToolShed()
	{
	}
}
[Token(Token = "0x2000219")]
public class Tool_Axe : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x200021A")]
	public enum AxeLevelType
	{
		[Token(Token = "0x4000CFD")]
		Any,
		[Token(Token = "0x4000CFE")]
		Level1,
		[Token(Token = "0x4000CFF")]
		Level2,
		[Token(Token = "0x4000D00")]
		Level3
	}

	[Token(Token = "0x4000CF7")]
	private const float chopCooldownTime = 0.5f;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float chopCooldownLeft;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioPlayer chopSoundPlayer;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int AxeLevel;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ChopEvent chopEvent;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xCAC818", Offset = "0xCAC818", VA = "0xCAC818", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xCAC820", Offset = "0xCAC820", VA = "0xCAC820")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xCAC860", Offset = "0xCAC860", VA = "0xCAC860", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0xCAC984", Offset = "0xCAC984", VA = "0xCAC984", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0xCACA24", Offset = "0xCACA24", VA = "0xCACA24", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xCACA84", Offset = "0xCACA84", VA = "0xCACA84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xCAD008", Offset = "0xCAD008", VA = "0xCAD008", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xCAD094", Offset = "0xCAD094", VA = "0xCAD094", Slot = "17")]
	public override void SetToolUpgradeLevel(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xCAD120", Offset = "0xCAD120", VA = "0xCAD120")]
	public Tool_Axe()
	{
	}
}
[Token(Token = "0x200021B")]
public abstract class Tool_Base : SaveableComponent
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA01D3C", Offset = "0xA01D3C")]
	private Grabbable <Grabbable>k__BackingField;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal bool isBeingUsed;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected GameObject[] m_upgradeVisuals;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected GameObject m_currentVisual;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_upgradeLevel;

	[Token(Token = "0x17000151")]
	public Grabbable Grabbable
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xCAD184", Offset = "0xCAD184", VA = "0xCAD184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11544", Offset = "0xA11544")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xCAD18C", Offset = "0xCAD18C", VA = "0xCAD18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11554", Offset = "0xA11554")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xCAD194", Offset = "0xCAD194", VA = "0xCAD194", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xCA6514", Offset = "0xCA6514", VA = "0xCA6514", Slot = "6")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xCAC954", Offset = "0xCAC954", VA = "0xCAC954")]
	public void InitializeToolLevel(int level)
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xCAD1A0", Offset = "0xCAD1A0", VA = "0xCAD1A0")]
	private void TryReactivateTool()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xCAD304", Offset = "0xCAD304", VA = "0xCAD304", Slot = "7")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xCACF78", Offset = "0xCACF78", VA = "0xCACF78")]
	public PlayerHand GetHand()
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xCAD3F0", Offset = "0xCAD3F0", VA = "0xCAD3F0", Slot = "8")]
	internal virtual void ToggleUseage(bool pickUp)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xCAD460", Offset = "0xCAD460", VA = "0xCAD460", Slot = "9")]
	internal virtual void OnPickUp()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xCAD46C", Offset = "0xCAD46C", VA = "0xCAD46C", Slot = "10")]
	internal virtual void OnLetGo()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xCAD474", Offset = "0xCAD474", VA = "0xCAD474", Slot = "11")]
	public virtual void OnStashedInToolShed()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xCACA80", Offset = "0xCACA80", VA = "0xCACA80", Slot = "12")]
	public virtual void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0xCAD478", Offset = "0xCAD478", VA = "0xCAD478", Slot = "13")]
	public virtual void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0xCAD47C", Offset = "0xCAD47C", VA = "0xCAD47C", Slot = "14")]
	public virtual void WhileHeld(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0xCAD480", Offset = "0xCAD480", VA = "0xCAD480", Slot = "15")]
	public virtual void OnSnapTurnWhileHeld()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0xCAD484", Offset = "0xCAD484", VA = "0xCAD484", Slot = "16")]
	public virtual float GetDelayBeforeRelease()
	{
		return default(float);
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0xCAD118", Offset = "0xCAD118", VA = "0xCAD118", Slot = "17")]
	public virtual void SetToolUpgradeLevel(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0xCAD560", Offset = "0xCAD560", VA = "0xCAD560", Slot = "18")]
	public int GetUpgradeLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xCAD48C", Offset = "0xCAD48C", VA = "0xCAD48C")]
	private void SetUpgradeVisual(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xCA66D8", Offset = "0xCA66D8", VA = "0xCA66D8")]
	protected Tool_Base()
	{
	}
}
[Token(Token = "0x200021C")]
public class Tool_FishingRod : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x200021D")]
	private struct BobberVelocityData
	{
		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float TimeStamp;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 Velocity;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Pos;

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xAD6594", Offset = "0xAD6594", VA = "0xAD6594")]
		public BobberVelocityData(float inTimeStamp, Vector3 inVelocity, Vector3 inPos)
		{
		}
	}

	[Token(Token = "0x200021E")]
	private enum State
	{
		[Token(Token = "0x4000D43")]
		BobberHanging,
		[Token(Token = "0x4000D44")]
		BobberFlyingOut,
		[Token(Token = "0x4000D45")]
		BobberLandedWaitingForFish,
		[Token(Token = "0x4000D46")]
		FishBitingRingAppearing,
		[Token(Token = "0x4000D47")]
		FishChasing,
		[Token(Token = "0x4000D48")]
		FishReadyToYeet,
		[Token(Token = "0x4000D49")]
		FishYeeting,
		[Token(Token = "0x4000D4A")]
		FishBubbleAttached
	}

	[Token(Token = "0x200021F")]
	private enum YankDir
	{
		[Token(Token = "0x4000D4C")]
		Forward,
		[Token(Token = "0x4000D4D")]
		Backward
	}

	[Token(Token = "0x2000220")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB3D0", Offset = "0x9FB3D0")]
	private sealed class <DebugWaitForBite>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_FishingRod <>4__this;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <nibbleCount>5__2;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xCB2660", Offset = "0xCB2660", VA = "0xCB2660", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xCB26C8", Offset = "0xCB26C8", VA = "0xCB26C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xCB1440", Offset = "0xCB1440", VA = "0xCB1440")]
		[DebuggerHidden]
		public <DebugWaitForBite>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xCB23AC", Offset = "0xCB23AC", VA = "0xCB23AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xCB23B0", Offset = "0xCB23B0", VA = "0xCB23B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xCB2668", Offset = "0xCB2668", VA = "0xCB2668", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB3E0", Offset = "0x9FB3E0")]
	private sealed class <StopFishingAfterDelay>d__108 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_FishingRod <>4__this;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xCB2814", Offset = "0xCB2814", VA = "0xCB2814", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xCB287C", Offset = "0xCB287C", VA = "0xCB287C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xCB1F5C", Offset = "0xCB1F5C", VA = "0xCB1F5C")]
		[DebuggerHidden]
		public <StopFishingAfterDelay>d__108(int <>1__state)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xCB26D0", Offset = "0xCB26D0", VA = "0xCB26D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xCB26D4", Offset = "0xCB26D4", VA = "0xCB26D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xCB281C", Offset = "0xCB281C", VA = "0xCB281C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject[] m_bobberUpgradeVisuals;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform[] m_crankUpgradeVisuals;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject bobberPrefab;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform bobberStartPos;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Rigidbody bobberAttach;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public FishingRod rodModel;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Stashable stashable;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FishingLine fishingLine;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer sounds;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animator animator;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform bendyRootJoint;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FishingEffects effects;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Transform spool;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform crankPositionLeftHand;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform crankPositionRightHand;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private Transform crankJoint;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Transform bobberAttachParent;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private FishingCrank crank;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bobber bobber;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public NeatAudioPlayer ReelSoundPlayer;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int SPEED;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AssetReference fishPrefab;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private FishRegion currentFishRegion;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Rigidbody spawnedFish;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioSource CaughtSound;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float FishDangleOffset;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float BobberDangleOffset;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float timeSinceBobberThrown;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool IsCurrentlyReeling;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool stashedInToolShed;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 playerPositionWhenFishingStarted;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private RaycastHit[] raycastResults;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Collider[] fishingRodColliders;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int CollapsedRodId;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float timeLeftBeforeFishingStops;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float timeLeftToUpdateFishingLine;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 prevBobberPos;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform m_currentCrankVisual;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject m_currentBobberVisual;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int FishingRodLevel;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float fishSwimSpeed;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float currentSpoolSpeed;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float targetSpoolSpeed;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<BobberVelocityData> previousVelocities;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private readonly FishCatchMovement catchMovement;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private State fishingState;

	[Token(Token = "0x4000D34")]
	private const float THRESH_THROW_SPEED = 20f;

	[Token(Token = "0x4000D35")]
	private const float THRESH_PULL_SPEED = 15f;

	[Token(Token = "0x4000D36")]
	private const float THRESH_POINTING_UP = 0.4f;

	[Token(Token = "0x4000D37")]
	private const float THRESH_THROW_FORWARD = 0.1f;

	[Token(Token = "0x4000D38")]
	private const float THRESH_THROW_TIME = 0.5f;

	[Token(Token = "0x4000D39")]
	private const float THRESH_THROW_VELOCITY = 13f;

	[Token(Token = "0x4000D3A")]
	private const float THRESH_THROW_ANGLE_DELTA_MIN = 60f;

	[Token(Token = "0x4000D3B")]
	private const float THRESH_THROW_ANGLE_DELTA_MAX = 160f;

	[Token(Token = "0x4000D3C")]
	private const float THRESH_THROW_UP_DIR = 45f;

	[Token(Token = "0x4000D3D")]
	private const float THRESH_THROW_BACK_DIR = 75f;

	[Token(Token = "0x4000D3E")]
	private const bool USE_BEFORE_SHARPEST_TURN_VELOCITY = true;

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xCAD568", Offset = "0xCAD568", VA = "0xCAD568", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xCAD570", Offset = "0xCAD570", VA = "0xCAD570")]
	public void SetCrank(FishingCrank crank)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0xCAD578", Offset = "0xCAD578", VA = "0xCAD578")]
	private void ResetFishData()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xCAD5BC", Offset = "0xCAD5BC", VA = "0xCAD5BC")]
	public static bool UseTeleportButtonToThrowLine()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xCAD5C4", Offset = "0xCAD5C4", VA = "0xCAD5C4", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xCAD6AC", Offset = "0xCAD6AC", VA = "0xCAD6AC", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xCADC3C", Offset = "0xCADC3C", VA = "0xCADC3C")]
	private void StashRod()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xCADEC0", Offset = "0xCADEC0", VA = "0xCADEC0")]
	private void OnStash()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xCADF4C", Offset = "0xCADF4C", VA = "0xCADF4C", Slot = "11")]
	public override void OnStashedInToolShed()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xCADF80", Offset = "0xCADF80", VA = "0xCADF80")]
	private void OnRecovered(RecoverEvent e)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xCADCF8", Offset = "0xCADCF8", VA = "0xCADCF8")]
	private void ResetBobberAndLine()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xCAD93C", Offset = "0xCAD93C", VA = "0xCAD93C")]
	private void TrySetupBobber()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xCAE16C", Offset = "0xCAE16C", VA = "0xCAE16C")]
	private void TrackBobberVelocityOverTime(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xCAE32C", Offset = "0xCAE32C", VA = "0xCAE32C")]
	private Vector3 GetCurrentBobberVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xCAE3C4", Offset = "0xCAE3C4", VA = "0xCAE3C4", Slot = "14")]
	public override void WhileHeld(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xCAE91C", Offset = "0xCAE91C", VA = "0xCAE91C")]
	private void UpdateBobberAngle()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xCAEB38", Offset = "0xCAEB38", VA = "0xCAEB38")]
	public float GetCurrentReelForce()
	{
		return default(float);
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xCAEA4C", Offset = "0xCAEA4C", VA = "0xCAEA4C")]
	private Vector3 GetCurrentDragDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xCAEF94", Offset = "0xCAEF94", VA = "0xCAEF94")]
	private bool CheckIfRodDidAHeckaYank(PlayerHand hand, YankDir throwDir, Vector3 throwVelocity)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xCAF410", Offset = "0xCAF410", VA = "0xCAF410")]
	private bool CanCatchFishNow(PlayerHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xCAE7FC", Offset = "0xCAE7FC", VA = "0xCAE7FC")]
	private bool ShouldThrowBobber(out float throwSpeed, out Vector3 throwDirection, out Vector3 startPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xCB0464", Offset = "0xCB0464", VA = "0xCB0464")]
	private void DrawPrevVelocities(int num)
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xCAF5AC", Offset = "0xCAF5AC", VA = "0xCAF5AC")]
	private bool IsValidThrow(out float throwSpeed, out Vector3 throwDirection, out Vector3 startPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xCB07B0", Offset = "0xCB07B0", VA = "0xCB07B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xCAEC98", Offset = "0xCAEC98", VA = "0xCAEC98")]
	private void UpdateReeling(Vector3 dragDir, float reelForce, PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xCAEF10", Offset = "0xCAEF10", VA = "0xCAEF10")]
	private void CheckIfBobberHasBeenReeledIn(Vector3 dragDir, float reelForce)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xCB0C60", Offset = "0xCB0C60", VA = "0xCB0C60")]
	private void UpdateSpoolAnimation(float reelForce)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xCB0F2C", Offset = "0xCB0F2C", VA = "0xCB0F2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xCB1208", Offset = "0xCB1208", VA = "0xCB1208")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xCB129C", Offset = "0xCB129C", VA = "0xCB129C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xCAE6D4", Offset = "0xCAE6D4", VA = "0xCAE6D4")]
	public void ThrowBobber(Vector3 pos, Vector3 velocity)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xCB1328", Offset = "0xCB1328", VA = "0xCB1328")]
	public bool BobberIsFlyingOut()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xCB1338", Offset = "0xCB1338", VA = "0xCB1338")]
	public void OnBobberHitWater()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xCB13C4", Offset = "0xCB13C4", VA = "0xCB13C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11564", Offset = "0xA11564")]
	private IEnumerator DebugWaitForBite()
	{
		return null;
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xCB146C", Offset = "0xCB146C", VA = "0xCB146C")]
	private void StartFishBite()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xCB1534", Offset = "0xCB1534", VA = "0xCB1534")]
	private void StartFishChase()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xCB0AB8", Offset = "0xCB0AB8", VA = "0xCB0AB8")]
	private void OnCatchAndReadyToYeet()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xCB16E0", Offset = "0xCB16E0", VA = "0xCB16E0")]
	private void OnFishSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xCB1B98", Offset = "0xCB1B98", VA = "0xCB1B98")]
	private void FishGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xCAF344", Offset = "0xCAF344", VA = "0xCAF344")]
	private void OnYeetFishWithRod()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xCB1CBC", Offset = "0xCB1CBC", VA = "0xCB1CBC")]
	public void OnBobberHitWall()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xCB0C1C", Offset = "0xCB0C1C", VA = "0xCB0C1C")]
	private void OnFailCatch()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xCB1CD8", Offset = "0xCB1CD8", VA = "0xCB1CD8", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xCAE098", Offset = "0xCAE098", VA = "0xCAE098")]
	public void ResetBobberToRod(bool animate)
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xCB1E78", Offset = "0xCB1E78", VA = "0xCB1E78")]
	private void OnPlayerSnapTurned(NeatVR_Player player)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xCB1EA4", Offset = "0xCB1EA4", VA = "0xCB1EA4")]
	private void OnPlayerTeleported(TeleportDestinationInfo destinationInfo)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xCB1E7C", Offset = "0xCB1E7C", VA = "0xCB1E7C")]
	private void PlayerMovedQuickly()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xCB1EA8", Offset = "0xCB1EA8", VA = "0xCB1EA8", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xCB1EE0", Offset = "0xCB1EE0", VA = "0xCB1EE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA115C8", Offset = "0xA115C8")]
	private IEnumerator StopFishingAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xCB1F88", Offset = "0xCB1F88", VA = "0xCB1F88", Slot = "16")]
	public override float GetDelayBeforeRelease()
	{
		return default(float);
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xCB1F90", Offset = "0xCB1F90", VA = "0xCB1F90", Slot = "17")]
	public override void SetToolUpgradeLevel(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xCB202C", Offset = "0xCB202C", VA = "0xCB202C")]
	private void UpdateBobberVisuals(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xCB20F0", Offset = "0xCB20F0", VA = "0xCB20F0")]
	private void UpdateCrankVisuals(int upgradeLevel)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xCB21DC", Offset = "0xCB21DC", VA = "0xCB21DC")]
	public Tool_FishingRod()
	{
	}
}
[Token(Token = "0x2000222")]
public class Tool_Hoe : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem diggingEffect;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NeatAudioPlayer digSound;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float digCooldownLeft;

	[Token(Token = "0x4000D58")]
	private const float DIGGING_SPEED_REQUIRED = 1f;

	[Token(Token = "0x4000D59")]
	private const float DIG_COOLDOWN = 0.5f;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Quaternion diggingEffectRotation;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 lastDigPos;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float tillRadius;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TillEvent tillEvent;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Collider[] cols;

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xCB2884", Offset = "0xCB2884", VA = "0xCB2884", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xCB288C", Offset = "0xCB288C", VA = "0xCB288C", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xCB28F0", Offset = "0xCB28F0", VA = "0xCB28F0", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xCB29CC", Offset = "0xCB29CC", VA = "0xCB29CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0xCB2A14", Offset = "0xCB2A14", VA = "0xCB2A14")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xCB3290", Offset = "0xCB3290", VA = "0xCB3290")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xCB2F54", Offset = "0xCB2F54", VA = "0xCB2F54")]
	private bool TryToTillAtPosition(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xCB30C8", Offset = "0xCB30C8", VA = "0xCB30C8")]
	private void StartDig(Vector3 position)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xCB32F0", Offset = "0xCB32F0", VA = "0xCB32F0", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0xCB334C", Offset = "0xCB334C", VA = "0xCB334C")]
	public Tool_Hoe()
	{
	}
}
[Token(Token = "0x2000223")]
public class Tool_Plantable : Tool_Base, ITool
{
	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject targetMarkerTEMP;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material mat;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private NeatAudioPlayer seedSoundPlayer;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasValidPlantPos;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Vector3 plantPos;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float radius;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool initialized;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private readonly int PICK;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0xCB3404", Offset = "0xCB3404", VA = "0xCB3404", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0xCB340C", Offset = "0xCB340C", VA = "0xCB340C", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0xCB3564", Offset = "0xCB3564", VA = "0xCB3564")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xCB3738", Offset = "0xCB3738", VA = "0xCB3738")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xCB38C4", Offset = "0xCB38C4", VA = "0xCB38C4", Slot = "10")]
	internal override void OnLetGo()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xCB374C", Offset = "0xCB374C", VA = "0xCB374C")]
	private void TryTargetSoil()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xCB39B0", Offset = "0xCB39B0", VA = "0xCB39B0")]
	private void AnimateSeedDrop()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xCB38D0", Offset = "0xCB38D0", VA = "0xCB38D0")]
	private void EnableTargetMarker(bool enable)
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xCB3574", Offset = "0xCB3574", VA = "0xCB3574")]
	private void UpdateTargetMarker()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xCB3B08", Offset = "0xCB3B08", VA = "0xCB3B08", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xCB3B64", Offset = "0xCB3B64", VA = "0xCB3B64")]
	public Tool_Plantable()
	{
	}
}
[Token(Token = "0x2000224")]
public class Tool_SeedBag : Tool_Base, ITool, IInitializable
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private IntValueContainer container;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private PlantType plantType;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AssetReference plantTypeRef;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AssetReference PlantPrefabData;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject openBag;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject closedBag;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform seedTransform;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject counterLabel;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro counterText;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private SpriteRenderer icon;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float lastTimeSeedWasSpawned;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AssetReference seedPrefab;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool bagIsOpen;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public NeatAudioPlayer seedSoundPlayer;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PlayerHand hand;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private SeedbagShakeEvent shakeEvent;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool DebugCrazySprinklerMode;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int SeedSpamPerFrameInCrayMode;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static int EmptySeedBagHashedName;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly int PICK;

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xCB3BFC", Offset = "0xCB3BFC", VA = "0xCB3BFC", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xCB3C04", Offset = "0xCB3C04", VA = "0xCB3C04")]
	private bool IsUpsideDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xCB3CD4", Offset = "0xCB3CD4", VA = "0xCB3CD4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xCB3D3C", Offset = "0xCB3D3C", VA = "0xCB3D3C", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xCB4510", Offset = "0xCB4510", VA = "0xCB4510")]
	private void OnAssetLoadComplete(AsyncOperationHandle<PlantType> handle)
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xCB4134", Offset = "0xCB4134", VA = "0xCB4134")]
	private void UpdatePlantType(PlantType newPlantType)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xCB459C", Offset = "0xCB459C", VA = "0xCB459C")]
	private bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0xCB463C", Offset = "0xCB463C", VA = "0xCB463C", Slot = "14")]
	public override void WhileHeld(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0xCB4800", Offset = "0xCB4800", VA = "0xCB4800")]
	private bool CanReleaseSeed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xCB4BB4", Offset = "0xCB4BB4", VA = "0xCB4BB4")]
	private void OnBagShakeDown(float obj)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xCB486C", Offset = "0xCB486C", VA = "0xCB486C")]
	private void ReleaseSeed()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xCB4BE8", Offset = "0xCB4BE8", VA = "0xCB4BE8")]
	private void OnSeedSpawned(SpawnOperationCallbackData obj)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xCB415C", Offset = "0xCB415C", VA = "0xCB415C")]
	private void UpdateSprite()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xCB4358", Offset = "0xCB4358", VA = "0xCB4358")]
	private void UpdateResource(PlantPrefabData prefabData)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xCB4F44", Offset = "0xCB4F44", VA = "0xCB4F44")]
	public bool IsOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xCB4F4C", Offset = "0xCB4F4C", VA = "0xCB4F4C", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xCB4FF0", Offset = "0xCB4FF0", VA = "0xCB4FF0", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xCB5094", Offset = "0xCB5094", VA = "0xCB5094", Slot = "9")]
	internal override void OnPickUp()
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xCB50C4", Offset = "0xCB50C4", VA = "0xCB50C4", Slot = "10")]
	internal override void OnLetGo()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xCB46F4", Offset = "0xCB46F4", VA = "0xCB46F4")]
	private void ToggleOpenBag(bool open)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xCB50D0", Offset = "0xCB50D0", VA = "0xCB50D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xCB51AC", Offset = "0xCB51AC", VA = "0xCB51AC")]
	public Tool_SeedBag()
	{
	}
}
[Serializable]
[Token(Token = "0x2000225")]
public class SeedbagState : ComponentState
{
	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AssetReferenceSerializable plantType;

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xCDC1FC", Offset = "0xCDC1FC", VA = "0xCDC1FC")]
	public SeedbagState(AssetReference assetReference)
	{
	}
}
[Token(Token = "0x2000226")]
public class Tool_Sickle : Tool_Base, ITool
{
	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xCB5274", Offset = "0xCB5274", VA = "0xCB5274", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xCB527C", Offset = "0xCB527C", VA = "0xCB527C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xCB570C", Offset = "0xCB570C", VA = "0xCB570C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xCB5768", Offset = "0xCB5768", VA = "0xCB5768")]
	public Tool_Sickle()
	{
	}
}
[Token(Token = "0x2000227")]
public class Tool_Wallet : Tool_Base, ITool, IInitializable, IGloveBlobReactable
{
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB3F0", Offset = "0x9FB3F0")]
	private sealed class <WalletInfusion>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_Wallet <>4__this;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentInfusionTime>5__2;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <walletMainTransform>5__3;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xCB8860", Offset = "0xCB8860", VA = "0xCB8860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xCB88C8", Offset = "0xCB88C8", VA = "0xCB88C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xCB7600", Offset = "0xCB7600", VA = "0xCB7600")]
		[DebuggerHidden]
		public <WalletInfusion>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xCB85DC", Offset = "0xCB85DC", VA = "0xCB85DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xCB85E0", Offset = "0xCB85E0", VA = "0xCB85E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xCB8868", Offset = "0xCB8868", VA = "0xCB8868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000229")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB400", Offset = "0x9FB400")]
	private sealed class <EatRoutine>d__98 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_Wallet <>4__this;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <initialScale>5__2;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x17000158")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xCB8350", Offset = "0xCB8350", VA = "0xCB8350", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xCB83B8", Offset = "0xCB83B8", VA = "0xCB83B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xCB7CBC", Offset = "0xCB7CBC", VA = "0xCB7CBC")]
		[DebuggerHidden]
		public <EatRoutine>d__98(int <>1__state)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xCB81A0", Offset = "0xCB81A0", VA = "0xCB81A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xCB81A4", Offset = "0xCB81A4", VA = "0xCB81A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xCB8358", Offset = "0xCB8358", VA = "0xCB8358", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200022A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB410", Offset = "0x9FB410")]
	private sealed class <OpenMouthRoutine>d__99 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Tool_Wallet <>4__this;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x1700015A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xCB856C", Offset = "0xCB856C", VA = "0xCB856C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xCB85D4", Offset = "0xCB85D4", VA = "0xCB85D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xCB7CE8", Offset = "0xCB7CE8", VA = "0xCB7CE8")]
		[DebuggerHidden]
		public <OpenMouthRoutine>d__99(int <>1__state)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xCB83C0", Offset = "0xCB83C0", VA = "0xCB83C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xCB83C4", Offset = "0xCB83C4", VA = "0xCB83C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xCB8574", Offset = "0xCB8574", VA = "0xCB8574", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Stashable Stashable;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh WalletOpenMesh;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Mesh WalletClosedMesh;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter WalletMeshFilter;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float CurrencyInputDistance;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float CurrencyInputDistanceSqr;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float lookRotationSpeed;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float lookRotationSpeedModifier;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator scaleAnimationRoutine;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool WalletOpen;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int StoredCurrency;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CurrencyHolder TrackedCurrencyHolder;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool InMerchantWalletArea;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MerchantBoat WalletAreaMerchantBoat;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float MoneyPourAngle;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float MaxWalletPourFracPerSecond;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool HaveBegunPouring;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int PourInitialWalletAmount;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ParticleSystem MoneyPourParticles;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float MaxParticleSpawnRate;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool PourParticleSystemActive;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject CurrencyDisplayObject;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro CurrencyLabel;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01E9C", Offset = "0xA01E9C")]
	[SerializeField]
	private NeatAudioCue WalletOpenCue;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private NeatAudioCue WalletCloseCue;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private NeatAudioCue WalletFeedCue;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private NeatAudioCue WalletFirstPickupCue;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private NeatAudioPlayer WalletAudioPlayer;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01F28", Offset = "0xA01F28")]
	private NeatAudioCue WalletPourCue;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private NeatAudioCue WalletCoinTrayImpactCue;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private NeatAudioPlayer WalletPourAudioPlayer;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private NeatAudioPlayer WalletCoinTrayImpactAudioPlayer;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool IsPlayingPourLoop;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int POURSPEED;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool IsPlayingTrayImpactLoop;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA01FA4", Offset = "0xA01FA4")]
	private float eatAnimationDuration;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA01FF0", Offset = "0xA01FF0")]
	[SerializeField]
	private float closeMouthAtCurvePercentage;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[SerializeField]
	private float eatAnimationMaxScale;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private AnimationCurve eatMoneyAnimationCurveX;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private AnimationCurve eatMoneyAnimationCurveY;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private AnimationCurve eatMoneyAnimationCurveZ;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool isEating;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02070", Offset = "0xA02070")]
	[SerializeField]
	private float openMouthAnimationDuration;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA020BC", Offset = "0xA020BC")]
	[SerializeField]
	private float openMouthAtCurvePercentage;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[SerializeField]
	private float openMouthAnimationMaxScale;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private AnimationCurve openMouthMoneyAnimationCurveX;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private AnimationCurve openMouthMoneyAnimationCurveY;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private AnimationCurve openMouthMoneyAnimationCurveZ;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool IsOpeningMouth;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0213C", Offset = "0xA0213C")]
	[SerializeField]
	private GloveBlobReactionColors BlobReactionColors;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	[SerializeField]
	private float InfusionDuration;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private AnimationCurve InfusionScaleCurve;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private AnimationCurve InfusionTranslationCurve;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Coroutine WalletInfusionCoroutine;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 InitialInfusionPosition;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 InitialInfusionScale;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Transform InfusionTarget;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private PlayerHand InfusionHand;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Quaternion lastSlerpRotation;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Quaternion targetRotation;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Vector3 initialLerpScale;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private bool hasBeenGrabbedOnce;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA021B8", Offset = "0xA021B8")]
	[SerializeField]
	private float CurrencyLabelDisplayDuration;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private float RemainingCurrencyLabelDisplayDuration;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool ShouldShowCurrencyDisplayLabel;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
	public bool HasBeenAddedToInventory;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x222")]
	private bool IsInventoryDropZone;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private Vector3 InitialCurrencyDisplayLocation;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float CurrencyDisplayUpVectorOffset;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float CurrencyDisplayForwardVectorOffset;

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xCB5778", Offset = "0xCB5778", VA = "0xCB5778", Slot = "21")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xCB5AA8", Offset = "0xCB5AA8", VA = "0xCB5AA8", Slot = "6")]
	public override void Init()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xCB5B80", Offset = "0xCB5B80", VA = "0xCB5B80", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xCB5C58", Offset = "0xCB5C58", VA = "0xCB5C58")]
	private void OnGrabbed(Grabbable obj)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xCB5D08", Offset = "0xCB5D08", VA = "0xCB5D08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xCB5EA0", Offset = "0xCB5EA0", VA = "0xCB5EA0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xCB69E8", Offset = "0xCB69E8", VA = "0xCB69E8")]
	public void UpdateCurrencyLabelPosition()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xCB6F88", Offset = "0xCB6F88", VA = "0xCB6F88", Slot = "12")]
	public override void StartUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xCB72B8", Offset = "0xCB72B8", VA = "0xCB72B8", Slot = "13")]
	public override void StopUsing(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xCB7430", Offset = "0xCB7430", VA = "0xCB7430")]
	public void TriggerWalletInfusion(PlayerHand handToInfuseInto)
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xCB7584", Offset = "0xCB7584", VA = "0xCB7584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA116CC", Offset = "0xA116CC")]
	private IEnumerator WalletInfusion()
	{
		return null;
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xCB762C", Offset = "0xCB762C", VA = "0xCB762C")]
	public void WalletInfusionFinished()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xCB68E4", Offset = "0xCB68E4", VA = "0xCB68E4")]
	private void OpenWallet()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xCB5DC8", Offset = "0xCB5DC8", VA = "0xCB5DC8")]
	public void CloseWallet(bool silently = false)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xCB71B8", Offset = "0xCB71B8", VA = "0xCB71B8")]
	public void SetTrackedCurrencyHolder(CurrencyHolder newTrackedCurrencyHolder)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xCB7780", Offset = "0xCB7780", VA = "0xCB7780")]
	public bool CanBeUsedAsDropZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xCB7858", Offset = "0xCB7858", VA = "0xCB7858")]
	public void AddToStoredCurrency(int currencyToAdd)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xCB6944", Offset = "0xCB6944", VA = "0xCB6944")]
	public void RemoveFromStoredCurrency(int currencyToRemove)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xCB7928", Offset = "0xCB7928", VA = "0xCB7928")]
	public void ResetStoredCurrency()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xCB59CC", Offset = "0xCB59CC", VA = "0xCB59CC")]
	public void OnStoredCurrencyUpdated()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xCB79C4", Offset = "0xCB79C4", VA = "0xCB79C4")]
	public void SetInWalletArea(bool newInWalletArea, [Optional] MerchantBoat inWalletAreaMerchantBoat)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xCB79D8", Offset = "0xCB79D8", VA = "0xCB79D8")]
	public void OnAddedToInventory()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xCB7A00", Offset = "0xCB7A00", VA = "0xCB7A00")]
	public void OnRemovedFromInventory()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xCB7A24", Offset = "0xCB7A24", VA = "0xCB7A24")]
	public void SetIsInventoryDropZone(bool newIsInventoryDropZone)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xCB7930", Offset = "0xCB7930", VA = "0xCB7930")]
	public void ShowCurrencyDisplayLabel()
	{
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0xCB6954", Offset = "0xCB6954", VA = "0xCB6954")]
	public void HideCurrencyDisplayLabel()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0xCB7C34", Offset = "0xCB7C34", VA = "0xCB7C34", Slot = "19")]
	public ToolType GetToolType()
	{
		return default(ToolType);
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xCB7C3C", Offset = "0xCB7C3C", VA = "0xCB7C3C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xCB78AC", Offset = "0xCB78AC", VA = "0xCB78AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11730", Offset = "0xA11730")]
	private IEnumerator EatRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xCB67D4", Offset = "0xCB67D4", VA = "0xCB67D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11794", Offset = "0xA11794")]
	private IEnumerator OpenMouthRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xCB7D14", Offset = "0xCB7D14", VA = "0xCB7D14")]
	private bool AnimateScale(Transform t, Vector3 initialScale, float targetScale, float duration, ref float timeElapsed, AnimationCurve curveX, AnimationCurve curveY, AnimationCurve curveZ)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xCB7EA4", Offset = "0xCB7EA4", VA = "0xCB7EA4")]
	private float GetScaleBasedOnCurve(float fraction, float initialScale, float targetScale, AnimationCurve curve)
	{
		return default(float);
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xCB6850", Offset = "0xCB6850", VA = "0xCB6850")]
	private void StopAndPlayScaleRoutine(IEnumerator coroutine)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xCB7F50", Offset = "0xCB7F50", VA = "0xCB7F50")]
	private void StartPlayingTrayImpactLoop()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xCB7F7C", Offset = "0xCB7F7C", VA = "0xCB7F7C")]
	private void StopPlayingTrayImpactLoop()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xCB7FA0", Offset = "0xCB7FA0", VA = "0xCB7FA0", Slot = "22")]
	public Grabbable GetGrabbable()
	{
		return null;
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xCB7FA8", Offset = "0xCB7FA8", VA = "0xCB7FA8", Slot = "23")]
	public GameObject GetGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xCB7FB0", Offset = "0xCB7FB0", VA = "0xCB7FB0", Slot = "24")]
	public GloveBlobReactionColors GetReactionColors()
	{
		return default(GloveBlobReactionColors);
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xCB7FD4", Offset = "0xCB7FD4", VA = "0xCB7FD4")]
	public void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xCB807C", Offset = "0xCB807C", VA = "0xCB807C")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0xCB808C", Offset = "0xCB808C", VA = "0xCB808C")]
	public Tool_Wallet()
	{
	}
}
[Serializable]
[Token(Token = "0x200022B")]
public class Tool_WalletState : ComponentState
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int StoredCurrency;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool hasBeenGrabbedOnce;

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xCB7CB4", Offset = "0xCB7CB4", VA = "0xCB7CB4")]
	public Tool_WalletState()
	{
	}
}
[Token(Token = "0x200022C")]
public class UpgradeableToolState : ComponentState
{
	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Level;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x1AE4E84", Offset = "0x1AE4E84", VA = "0x1AE4E84")]
	public UpgradeableToolState(int level)
	{
	}
}
[Token(Token = "0x200022D")]
public class WalletGrabbedEvent : GameEvent
{
	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1AE594C", Offset = "0x1AE594C", VA = "0x1AE594C")]
	public WalletGrabbedEvent()
	{
	}
}
[Token(Token = "0x200022E")]
public class WalletStand : MonoBehaviour
{
	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x1AE5A90", Offset = "0x1AE5A90", VA = "0x1AE5A90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x1AE5B38", Offset = "0x1AE5B38", VA = "0x1AE5B38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x1AE5BE0", Offset = "0x1AE5BE0", VA = "0x1AE5BE0")]
	private void OnWalletGrabbedEvent(WalletGrabbedEvent e)
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1AE5CA4", Offset = "0x1AE5CA4", VA = "0x1AE5CA4")]
	public WalletStand()
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB420", Offset = "0x9FB420")]
public class WaterConeEmitter : MonoBehaviour
{
	[Token(Token = "0x2000230")]
	public class Particle
	{
		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 velocity;

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1AE6E14", Offset = "0x1AE6E14", VA = "0x1AE6E14")]
		public Particle()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1AE6FC0", Offset = "0x1AE6FC0", VA = "0x1AE6FC0")]
		public void StepNext(float dt, Vector3 gravity)
		{
		}
	}

	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9FB4A0", Offset = "0x9FB4A0")]
	public class ParticleRing
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Particle[] particles;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifeTime;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spawnTime;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool active;

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1AE61B0", Offset = "0x1AE61B0", VA = "0x1AE61B0")]
		public ParticleRing()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1AE6604", Offset = "0x1AE6604", VA = "0x1AE6604")]
		public void StepNext(float dt, Vector3 gravity)
		{
		}
	}

	[Token(Token = "0x2000232")]
	public struct PosDir
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 dir;
	}

	[Token(Token = "0x2000233")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB4D8", Offset = "0x9FB4D8")]
	private sealed class <Run>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaterConeEmitter <>4__this;

		[Token(Token = "0x1700015C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x1AE6F50", Offset = "0x1AE6F50", VA = "0x1AE6F50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x1AE6FB8", Offset = "0x1AE6FB8", VA = "0x1AE6FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1AE64F4", Offset = "0x1AE64F4", VA = "0x1AE64F4")]
		[DebuggerHidden]
		public <Run>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x1AE6E24", Offset = "0x1AE6E24", VA = "0x1AE6E24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1AE6E28", Offset = "0x1AE6E28", VA = "0x1AE6E28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1AE6F58", Offset = "0x1AE6F58", VA = "0x1AE6F58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float emissionRadius;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float emissionAngle;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float emissionSpeed;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int angularSegments;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ringMaxLifetime;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float emissionInterval;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter mf;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh m_dynamicMesh;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh mesh;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleRing[] particleRings;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] triangleIndices;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] vertices;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> uv0;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int ringCount;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int vertsPerRing;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int quadCount;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int vertexCount;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int emissionRootRingIndex;

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x1AE5E30", Offset = "0x1AE5E30", VA = "0x1AE5E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x1AE6100", Offset = "0x1AE6100", VA = "0x1AE6100")]
	private void CreateMesh()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x1AE6444", Offset = "0x1AE6444", VA = "0x1AE6444")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x1AE64EC", Offset = "0x1AE64EC", VA = "0x1AE64EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x1AE6470", Offset = "0x1AE6470", VA = "0x1AE6470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA118E8", Offset = "0xA118E8")]
	private IEnumerator Run()
	{
		return null;
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x1AE6520", Offset = "0x1AE6520", VA = "0x1AE6520")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x1AE66A8", Offset = "0x1AE66A8", VA = "0x1AE66A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x1AE6A40", Offset = "0x1AE6A40", VA = "0x1AE6A40")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x1AE66AC", Offset = "0x1AE66AC", VA = "0x1AE66AC")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x1AE6ACC", Offset = "0x1AE6ACC", VA = "0x1AE6ACC")]
	private void EmitRing()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x1AE6B60", Offset = "0x1AE6B60", VA = "0x1AE6B60")]
	public void CullRings()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x1AE61C0", Offset = "0x1AE61C0", VA = "0x1AE61C0")]
	private void SetParticleRingSpawnPos(ParticleRing ring)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x1AE6BD8", Offset = "0x1AE6BD8", VA = "0x1AE6BD8")]
	public PosDir GetSpawnCoordinate(int index)
	{
		return default(PosDir);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x1AE6E1C", Offset = "0x1AE6E1C", VA = "0x1AE6E1C")]
	public WaterConeEmitter()
	{
	}
}
[Token(Token = "0x2000234")]
public class Waterable : MonoBehaviour
{
	[Token(Token = "0x4000DF2")]
	private const string SHADER_PROP_NAME_WATER = "_WaterAmount";

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int shaderPropIdWater;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FloatVariable_Ranged waterLevel;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float maxWaterLevel;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float defaultWaterLevel;

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x1AE787C", Offset = "0x1AE787C", VA = "0x1AE787C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x1AE79B4", Offset = "0x1AE79B4", VA = "0x1AE79B4")]
	public void ChangeWaterLevel(float amount)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x1AE7B64", Offset = "0x1AE7B64", VA = "0x1AE7B64", Slot = "4")]
	public void AddWater(float amount)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x1AE7A68", Offset = "0x1AE7A68", VA = "0x1AE7A68")]
	private void UpdateWaterLevelOnMesh()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x1AE7B68", Offset = "0x1AE7B68", VA = "0x1AE7B68")]
	public Waterable()
	{
	}
}
[Token(Token = "0x2000235")]
public class ConsoleCommandButton : PushButton
{
	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string consoleCommand;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TextMeshPro text;

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xC22CD8", Offset = "0xC22CD8", VA = "0xC22CD8", Slot = "21")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0xC22DB4", Offset = "0xC22DB4", VA = "0xC22DB4", Slot = "7")]
	public override void PressButton(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0xC22D5C", Offset = "0xC22D5C", VA = "0xC22D5C")]
	public void SetConsoleCommand(string newCommand, string description)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xC22DBC", Offset = "0xC22DBC", VA = "0xC22DBC")]
	public ConsoleCommandButton()
	{
	}
}
[Token(Token = "0x2000236")]
public class MainMenuSaveSlot : MenuButton
{
	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int index;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02244", Offset = "0xA02244")]
	private SaveSlot <Slot>k__BackingField;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject emptySlot;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject filledSlot;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private PushButton removeButton;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private PushButton saveButton;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private PushButton loadButton;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private TextMeshPro playtimeText;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private TextMeshPro lastSavedText;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private TextMeshPro slotNrLabel;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Color defaultSlotNrColor;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private Color selectedSlotNrColor;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private MenuManager menu;

	[Token(Token = "0x1700015E")]
	public SaveSlot Slot
	{
		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xCFB160", Offset = "0xCFB160", VA = "0xCFB160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1199C", Offset = "0xA1199C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xCFB168", Offset = "0xCFB168", VA = "0xCFB168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA119AC", Offset = "0xA119AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xCFB170", Offset = "0xCFB170", VA = "0xCFB170")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xCFB3C4", Offset = "0xCFB3C4", VA = "0xCFB3C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xCFB618", Offset = "0xCFB618", VA = "0xCFB618")]
	public void Init(MenuManager menu, SaveSlot s)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xCFB650", Offset = "0xCFB650", VA = "0xCFB650")]
	public void UpdateText(bool isAllowedToSave)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xCFB99C", Offset = "0xCFB99C", VA = "0xCFB99C")]
	private void OnRemovePressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xCFB9C4", Offset = "0xCFB9C4", VA = "0xCFB9C4")]
	private void OnSavePressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xCFB9EC", Offset = "0xCFB9EC", VA = "0xCFB9EC")]
	private void OnLoadPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xCFBA14", Offset = "0xCFBA14", VA = "0xCFBA14")]
	public MainMenuSaveSlot()
	{
	}
}
[Token(Token = "0x2000237")]
public class MenuButton : PushButton
{
	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public MenuActionType type;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MenuButtonPushedEvent pushEvent;

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0xCFD31C", Offset = "0xCFD31C", VA = "0xCFD31C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0xCFD320", Offset = "0xCFD320", VA = "0xCFD320")]
	public new void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0xCFBA64", Offset = "0xCFBA64", VA = "0xCFBA64")]
	public MenuButton()
	{
	}
}
[Token(Token = "0x2000238")]
public class MenuManager : MonoBehaviour
{
	[Token(Token = "0x2000239")]
	public enum State
	{
		[Token(Token = "0x4000E51")]
		Start,
		[Token(Token = "0x4000E52")]
		ManageSlotsPage,
		[Token(Token = "0x4000E53")]
		LoadingSlot,
		[Token(Token = "0x4000E54")]
		SavingToSlot,
		[Token(Token = "0x4000E55")]
		RemovingSlot,
		[Token(Token = "0x4000E56")]
		ConfirmQuitPage,
		[Token(Token = "0x4000E57")]
		SettingsPage,
		[Token(Token = "0x4000E58")]
		PrivacyPage,
		[Token(Token = "0x4000E59")]
		ConfirmQuitWithoutSavingPage,
		[Token(Token = "0x4000E5A")]
		CheatsPage,
		[Token(Token = "0x4000E5B")]
		DebugCommandsPage
	}

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MenuManager Instance;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State state;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_menuBook;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PushButton m_homeButton;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PushButton m_recipeButton;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private PushButton m_animalButton;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BookmarkHandler m_bookmarkHandler;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_homePage;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_recipePage;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_animalPage;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private PushButton newGameButton;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private ToggleableObject newGameButtonVariants;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private PushButton continueButton;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject continuePlayingExtraInfo;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject incompatibleSaveWarning;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject incompatibleSaveWarningWhileLoading;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private ToggleableObject continueButtonVariants;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro continueSaveSlotText;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshPro continueLastSavedText;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject autoSave;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private GameObject lastSavedLabel;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private PushButton manageSlotsButton;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private PushButton quitButton;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private ToggleableObject quitButtonVariants;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private MainMenuSaveSlot[] mainMenuSaveSlots;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private GameObject slotsPage;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ToggleableObject infoMessageVariants;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private PushButton confirmQuitButton;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private PushButton cancelQuitButton;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private GameObject confirmQuitPage;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private PushButton settingsButton;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private PushButton quitWithoutSavingButton;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private ToggleableObject confirmQuitVariants;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private GameObject mainInfoPage;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject settingsPage;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private GameObject privacyPage;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private PushButton returnToHouseButton;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private PushButton privacyButton;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private PushButton confirmPrivacyButton;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private PushButton abortPrivacyButton;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private GameObject privacyErrorMsg;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private GameObject privacyLoadingText;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private GameObject privacyConfirmButtons;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private TextMeshPro buildVersionText;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private TextMeshPro versionText;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private PushButton confirmButton;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private PushButton cancelButton;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[SerializeField]
	private GameObject consoleCommandsPage;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private GameObject cheatsPage;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private GameObject debugCommandsPage;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private PushButton cheatsPageButton;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[SerializeField]
	private PushButton debugCommandsPageButton;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[SerializeField]
	private GameObject consoleCommandButtonTemplate;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool didCreateConsoleCommandButtons;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02624", Offset = "0xA02624")]
	[SerializeField]
	private NeatAudioPlayer menuSoundsPlayer;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	[SerializeField]
	private NeatAudioCue openMenuSound;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[SerializeField]
	private NeatAudioCue closeMenuSound;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[SerializeField]
	private NeatAudioCue flipPageSound;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[SerializeField]
	private NeatAudioCue hoverSound;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	[SerializeField]
	private NeatAudioCue selectSound;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[SerializeField]
	private NeatAudioCue saveGameSound;

	[NonSerialized]
	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool isOpen;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject currentOpenPage;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private MainMenuSaveSlot selectedSaveSlot;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private PushButton selectedMainPageButton;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 playerOffset;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA026D0", Offset = "0xA026D0")]
	private PlayerHand <HandUsingMenu>k__BackingField;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private string privacyUrl;

	[Token(Token = "0x4000E4E")]
	public const float END_DEPTH = 0.8f;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static CultureInfo EnglishCulture;

	[Token(Token = "0x1700015F")]
	public PlayerHand HandUsingMenu
	{
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xCFD35C", Offset = "0xCFD35C", VA = "0xCFD35C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA119BC", Offset = "0xA119BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xCFD364", Offset = "0xCFD364", VA = "0xCFD364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA119CC", Offset = "0xA119CC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xCFD374", Offset = "0xCFD374", VA = "0xCFD374")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xCFD45C", Offset = "0xCFD45C", VA = "0xCFD45C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xCFD604", Offset = "0xCFD604", VA = "0xCFD604")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xCFD670", Offset = "0xCFD670", VA = "0xCFD670")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xCFDF28", Offset = "0xCFDF28", VA = "0xCFDF28")]
	private void HomeButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xCFDF80", Offset = "0xCFDF80", VA = "0xCFDF80")]
	private void RecipeButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xCFDFD8", Offset = "0xCFDFD8", VA = "0xCFDFD8")]
	private void AnimalButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xCFE030", Offset = "0xCFE030", VA = "0xCFE030")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xCFE8E8", Offset = "0xCFE8E8", VA = "0xCFE8E8")]
	private void NewGameButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xCFEAEC", Offset = "0xCFEAEC", VA = "0xCFEAEC")]
	private void ContinueButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xCFF06C", Offset = "0xCFF06C", VA = "0xCFF06C")]
	private void OpenStartPage()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xCFF744", Offset = "0xCFF744", VA = "0xCFF744")]
	private void UpdateConsoleCommands()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xCFF764", Offset = "0xCFF764", VA = "0xCFF764")]
	private void AddDebugButtonsToPage(ConsoleCommand[] commands, GameObject page)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xCFFAC8", Offset = "0xCFFAC8", VA = "0xCFFAC8")]
	private void SettingsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0xCFFD44", Offset = "0xCFFD44", VA = "0xCFFD44")]
	private void OnCheatsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0xCFFD50", Offset = "0xCFFD50", VA = "0xCFFD50")]
	private void OnDebugCommandsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xCFFD5C", Offset = "0xCFFD5C", VA = "0xCFFD5C")]
	private void ManageSlotsButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xCFFD68", Offset = "0xCFFD68", VA = "0xCFFD68")]
	private void QuitButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xCFFE58", Offset = "0xCFFE58", VA = "0xCFFE58")]
	private void QuitWithoutSavingButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xCFF030", Offset = "0xCFF030", VA = "0xCFF030")]
	private void ShowInfoMessage(bool show)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xCFFAD4", Offset = "0xCFFAD4", VA = "0xCFFAD4")]
	private void OpenOrClosePage(PushButton button, GameObject page, State openState)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xCFED58", Offset = "0xCFED58", VA = "0xCFED58")]
	private void UpdateSaveSlots()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xCFFEA0", Offset = "0xCFFEA0", VA = "0xCFFEA0")]
	private void OnConfirmQuitButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xCFFF9C", Offset = "0xCFFF9C", VA = "0xCFFF9C")]
	private void OnCancelQuitButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xCFFFA0", Offset = "0xCFFFA0", VA = "0xCFFFA0")]
	private void ReturnToHouseButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xD000D8", Offset = "0xD000D8", VA = "0xD000D8")]
	private void ConfirmPrivacyButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xD000E4", Offset = "0xD000E4", VA = "0xD000E4")]
	private void AbortPrivacyButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xD000F0", Offset = "0xD000F0", VA = "0xD000F0")]
	private void PrivacyButtonPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xD001FC", Offset = "0xD001FC", VA = "0xD001FC")]
	private void FetchUrlSuccess(string msg)
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xD00254", Offset = "0xD00254", VA = "0xD00254")]
	private void FetchUrlFailure(string msg)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xCFBA0C", Offset = "0xCFBA0C", VA = "0xCFBA0C")]
	public void OnLoadSlotPressed(MainMenuSaveSlot slotButton)
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xCFB9BC", Offset = "0xCFB9BC", VA = "0xCFB9BC")]
	public void OnRemoveSlotPressed(MainMenuSaveSlot slotButton)
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xCFB9E4", Offset = "0xCFB9E4", VA = "0xCFB9E4")]
	public void OnSaveToSlotPressed(MainMenuSaveSlot slotButton)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0xCFEF34", Offset = "0xCFEF34", VA = "0xCFEF34")]
	private void DeselectCurrentSlot()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0xD002AC", Offset = "0xD002AC", VA = "0xD002AC")]
	private void SelectSlot(MainMenuSaveSlot slotButton, State nextState)
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0xD00518", Offset = "0xD00518", VA = "0xD00518")]
	private void UpdateInfoText()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0xD007F4", Offset = "0xD007F4", VA = "0xD007F4")]
	private void OnCancelPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0xD00818", Offset = "0xD00818", VA = "0xD00818")]
	private void OnConfirmPressed(PushButton button)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0xD00CC0", Offset = "0xD00CC0", VA = "0xD00CC0")]
	private void OnPlayerTeleported(TeleportDestinationInfo destinationInfo)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0xD00CC4", Offset = "0xD00CC4", VA = "0xD00CC4")]
	public void Open(PlayerHand handUsingMenu)
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0xD00F9C", Offset = "0xD00F9C", VA = "0xD00F9C")]
	public void FollowPlayer()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0xCFEA2C", Offset = "0xCFEA2C", VA = "0xCFEA2C")]
	public void Close()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0xD00E8C", Offset = "0xD00E8C", VA = "0xD00E8C")]
	public Vector3 GetMenuSpawnPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0xCFF278", Offset = "0xCFF278", VA = "0xCFF278")]
	private void CheckForAutosave()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0xD011AC", Offset = "0xD011AC", VA = "0xD011AC")]
	private void UpdateVersionText()
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0xD01330", Offset = "0xD01330", VA = "0xD01330")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x200023A")]
public enum MenuActionType
{
	[Token(Token = "0x4000E5D")]
	Unknown,
	[Token(Token = "0x4000E5E")]
	Navigation,
	[Token(Token = "0x4000E5F")]
	Confirm,
	[Token(Token = "0x4000E60")]
	SaveSlotSelect,
	[Token(Token = "0x4000E61")]
	Save,
	[Token(Token = "0x4000E62")]
	Load,
	[Token(Token = "0x4000E63")]
	Clear,
	[Token(Token = "0x4000E64")]
	GDPR,
	[Token(Token = "0x4000E65")]
	ReturnToHouse,
	[Token(Token = "0x4000E66")]
	QuitToMain,
	[Token(Token = "0x4000E67")]
	Quit
}
[Token(Token = "0x200023B")]
public class MenuNavigationButton : MenuButton
{
	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject targetPage;

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0xD013B0", Offset = "0xD013B0", VA = "0xD013B0")]
	public MenuNavigationButton()
	{
	}
}
[Token(Token = "0x200023C")]
public class MenuOpenSpinner : MonoBehaviour
{
	[Token(Token = "0x4000E69")]
	public const float OPEN_MENU_HOLD_TIME = 0.5f;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rnd;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int propIdFill;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MenuManager menuManager;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float openMenuHoldTimer;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delayAfterClose;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerHand leftHand;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerHand rightHand;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool initialized;

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0xD013B4", Offset = "0xD013B4", VA = "0xD013B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0xD01904", Offset = "0xD01904", VA = "0xD01904")]
	private PlayerHand IsHoldingMenuButton()
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0xD01ABC", Offset = "0xD01ABC", VA = "0xD01ABC")]
	private bool DidPressCloseMenuButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0xD016AC", Offset = "0xD016AC", VA = "0xD016AC")]
	public void SetProgress(float fill)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0xD01B9C", Offset = "0xD01B9C", VA = "0xD01B9C")]
	public MenuOpenSpinner()
	{
	}
}
[Token(Token = "0x200023D")]
public class WaypointNavigationScript : MonoBehaviour
{
	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnReachedDestination;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnReachedWaypoint;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] waypoints;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform carryPosition;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isActivated;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform currentWaypoint;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator animator;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int i;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool variableSet;

	[Token(Token = "0x17000160")]
	public float CurrentSpeedNormalized
	{
		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x1AE7BD4", Offset = "0x1AE7BD4", VA = "0x1AE7BD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1AE7C48", Offset = "0x1AE7C48", VA = "0x1AE7C48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1AE7CCC", Offset = "0x1AE7CCC", VA = "0x1AE7CCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1AE802C", Offset = "0x1AE802C", VA = "0x1AE802C")]
	public int GetCurrentWaypointNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1AE8034", Offset = "0x1AE8034", VA = "0x1AE8034")]
	public void SetIsActivated(bool value)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x1AE8040", Offset = "0x1AE8040", VA = "0x1AE8040")]
	public WaypointNavigationScript()
	{
	}
}
[Token(Token = "0x200023E")]
public struct TeleportDestinationInfo
{
	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float hitDistancePercentage;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public RaycastHit raycastHit;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsOverride;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 OverridePosition;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool valid;
}
[Token(Token = "0x200023F")]
public class LocomotionArc : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000240")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB4E8", Offset = "0x9FB4E8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tweener, Tweener> <>9__42_0;

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xCF91E8", Offset = "0xCF91E8", VA = "0xCF91E8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0xCF91F0", Offset = "0xCF91F0", VA = "0xCF91F0")]
		internal Tweener <Show>b__42_0(Tweener tw)
		{
			return null;
		}
	}

	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB4F8", Offset = "0x9FB4F8")]
	private sealed class <ActivateOverrideDestination>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionArc <>4__this;

		[Token(Token = "0x17000164")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E46")]
			[Address(RVA = "0xCF9304", Offset = "0xCF9304", VA = "0xCF9304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E48")]
			[Address(RVA = "0xCF936C", Offset = "0xCF936C", VA = "0xCF936C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xCF82D4", Offset = "0xCF82D4", VA = "0xCF82D4")]
		[DebuggerHidden]
		public <ActivateOverrideDestination>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xCF9244", Offset = "0xCF9244", VA = "0xCF9244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0xCF9248", Offset = "0xCF9248", VA = "0xCF9248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xCF930C", Offset = "0xCF930C", VA = "0xCF930C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E82")]
	private const int ARC_MESH_SEGMENT_COUNT = 64;

	[Token(Token = "0x4000E83")]
	private const int ARC_MESH_ANGULAR_COUNT = 16;

	[Token(Token = "0x4000E84")]
	private const int ARC_MESH_VERTS_PER_SEGMENT = 17;

	[Token(Token = "0x4000E85")]
	private const int ARC_MESH_VERTEX_COUNT = 1024;

	[Token(Token = "0x4000E86")]
	private const float ARC_MESH_RADIUS_NEAR = 0.01f;

	[Token(Token = "0x4000E87")]
	private const float ARC_MESH_RADIUS_CENTER = 0.02f;

	[Token(Token = "0x4000E88")]
	private const float ARC_MESH_RADIUS_FAR = 0.08f;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ARC_MESH_RADIUS_MAX;

	[Token(Token = "0x4000E8A")]
	private const float ARC_TRACE_TIME = 4f;

	[Token(Token = "0x4000E8B")]
	private const float ARC_TRACE_SPEED = 8f;

	[Token(Token = "0x4000E8C")]
	private const float ARC_MAX_TRACE_DISTANCE = 20f;

	[Token(Token = "0x4000E8D")]
	private const float ARC_SMOOTH_COEF = 0.2f;

	[Token(Token = "0x4000E8E")]
	private const float ARC_SMOOTH_COEF_INVALID = 0.1f;

	[Token(Token = "0x4000E8F")]
	private const float ARC_WOBBLINESS = 0.9f;

	[Token(Token = "0x4000E90")]
	private const float ARC_APPEAR_UP_FORCE = 2000f;

	[Token(Token = "0x4000E91")]
	private const float ARC_ANIM_APPEAR_TIME = 0.35f;

	[Token(Token = "0x4000E92")]
	private const float ARC_ANIM_DISAPPEAR_TIME = 0.2f;

	[Token(Token = "0x4000E93")]
	private const float ARC_ANIM_VALIDITY_COEF = 0.15f;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA026E0", Offset = "0xA026E0")]
	private TeleportDestinationInfo <Destination>k__BackingField;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TweenyFloat animExtend;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private TweenyFloat animBubbleActivity;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float validitySmooth;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject arcMeshObject;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshFilter mf;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer rnd;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh mesh;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh2D mesh2D;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private PlayerHandAnimator m_playerHandAnimator;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OrientedPoint[] pointsTarget;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private OrientedPoint[] pointsCurrent;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3[] pointsVelocities;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool HaveOverrideDestination;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool OverrideDestinationActive;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 OverrideDestination;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool initializedDataStreams;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3[] verts;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3[] normals;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<Vector4> uvs;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int[] triangles;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine m_activateOverrideDestinationRoutine;

	[Token(Token = "0x17000161")]
	public TeleportDestinationInfo Destination
	{
		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xCF661C", Offset = "0xCF661C", VA = "0xCF661C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA119DC", Offset = "0xA119DC")]
		get
		{
			return default(TeleportDestinationInfo);
		}
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xCF662C", Offset = "0xCF662C", VA = "0xCF662C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA119EC", Offset = "0xA119EC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public bool VisibleInHierarchy
	{
		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xCF76DC", Offset = "0xCF76DC", VA = "0xCF76DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000163")]
	private float TimePerSegment
	{
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xCF8158", Offset = "0xCF8158", VA = "0xCF8158")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0xCF6648", Offset = "0xCF6648", VA = "0xCF6648")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0xCF6AAC", Offset = "0xCF6AAC", VA = "0xCF6AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0xCF7678", Offset = "0xCF7678", VA = "0xCF7678")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0xCF77B8", Offset = "0xCF77B8", VA = "0xCF77B8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0xCF79FC", Offset = "0xCF79FC", VA = "0xCF79FC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0xCF6A8C", Offset = "0xCF6A8C", VA = "0xCF6A8C")]
	private void SetMeshVisibility(bool visible)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0xCF771C", Offset = "0xCF771C", VA = "0xCF771C")]
	private void UpdateValiditySmoothing()
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xCF78D8", Offset = "0xCF78D8", VA = "0xCF78D8")]
	public void Stabilize()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xCF76F8", Offset = "0xCF76F8", VA = "0xCF76F8")]
	private void UpdatePathPhysics(float dt)
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xCF7A9C", Offset = "0xCF7A9C", VA = "0xCF7A9C")]
	private void UpdatePathPositionsAndVelocity(float dt)
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xCF8088", Offset = "0xCF8088", VA = "0xCF8088")]
	private float GetInfluenceCurve(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xCF7E40", Offset = "0xCF7E40", VA = "0xCF7E40")]
	private void UpdatePathRotations()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xCF8164", Offset = "0xCF8164", VA = "0xCF8164")]
	public void SetLocationOverride(Vector3 inOverrideLocation, bool inOverrideStartsActive)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xCF8258", Offset = "0xCF8258", VA = "0xCF8258")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA119FC", Offset = "0xA119FC")]
	private IEnumerator ActivateOverrideDestination()
	{
		return null;
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xCF8300", Offset = "0xCF8300", VA = "0xCF8300")]
	public void ResetLocationOverride()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xCF8398", Offset = "0xCF8398", VA = "0xCF8398")]
	public bool HaveLocationOverride()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xCF83A0", Offset = "0xCF83A0", VA = "0xCF83A0")]
	public bool IsLocationOverrideActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xCF6B64", Offset = "0xCF6B64", VA = "0xCF6B64")]
	private TeleportDestinationInfo UpdateArcData()
	{
		return default(TeleportDestinationInfo);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xCF83C0", Offset = "0xCF83C0", VA = "0xCF83C0")]
	private TeleportDestinationInfo UpdateArcData_DestinationOverride()
	{
		return default(TeleportDestinationInfo);
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xCF89CC", Offset = "0xCF89CC", VA = "0xCF89CC")]
	private void InitializeDataStreamsIfNeeded()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xCF7228", Offset = "0xCF7228", VA = "0xCF7228")]
	private void UpdateArcMesh()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xCF8CAC", Offset = "0xCF8CAC", VA = "0xCF8CAC")]
	public void ShowGoop(bool show)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xCF8D60", Offset = "0xCF8D60", VA = "0xCF8D60")]
	public void SetGoopValidity(bool validity)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xCF8C14", Offset = "0xCF8C14", VA = "0xCF8C14")]
	private float GetMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xCF8DF4", Offset = "0xCF8DF4", VA = "0xCF8DF4")]
	private float GetExpandedMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xCF8F3C", Offset = "0xCF8F3C", VA = "0xCF8F3C")]
	private float GetMirrorMask(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xCF8EA4", Offset = "0xCF8EA4", VA = "0xCF8EA4")]
	private float GetExtentionAnimMultiplier(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xCF87B8", Offset = "0xCF87B8", VA = "0xCF87B8")]
	private OrientedPoint EvalArc(Vector2 v0, Vector3 lateralDir, float t)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xCF8F50", Offset = "0xCF8F50", VA = "0xCF8F50")]
	public LocomotionArc()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xCF90B4", Offset = "0xCF90B4", VA = "0xCF90B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11A60", Offset = "0xA11A60")]
	private Tweener <Hide>b__43_0(Tweener tw)
	{
		return null;
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xCF9160", Offset = "0xCF9160", VA = "0xCF9160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA11A70", Offset = "0xA11A70")]
	private void <Hide>b__43_1()
	{
	}
}
[Token(Token = "0x2000242")]
public class AnimationParameterReset : StateMachineBehaviour
{
	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string parameter;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int parameterId;

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x10011C8", Offset = "0x10011C8", VA = "0x10011C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x10011F8", Offset = "0x10011F8", VA = "0x10011F8", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x1001228", Offset = "0x1001228", VA = "0x1001228")]
	public AnimationParameterReset()
	{
	}
}
[Token(Token = "0x2000243")]
public class CurrencyHolder : SaveableComponent, IInitializable
{
	[Token(Token = "0x2000244")]
	public delegate void CurrencyHolderDelegate();

	[Token(Token = "0x2000245")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB508", Offset = "0x9FB508")]
	private sealed class <MoneyBagInventoryAlert>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CurrencyHolder <>4__this;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tool_Wallet <foundWallet>5__2;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <walletIsAddedToInventory>5__3;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E65")]
			[Address(RVA = "0xC33640", Offset = "0xC33640", VA = "0xC33640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E67")]
			[Address(RVA = "0xC336A8", Offset = "0xC336A8", VA = "0xC336A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xC32E30", Offset = "0xC32E30", VA = "0xC32E30")]
		[DebuggerHidden]
		public <MoneyBagInventoryAlert>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xC33348", Offset = "0xC33348", VA = "0xC33348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xC3334C", Offset = "0xC3334C", VA = "0xC3334C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xC33648", Offset = "0xC33648", VA = "0xC33648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB518", Offset = "0x9FB518")]
	private sealed class <MoveMoneyBagToMouth>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bagTransform;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CurrencyHolder <>4__this;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <startScale>5__3;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <currentLerpTime>5__4;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <lerpProgress>5__5;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xC33970", Offset = "0xC33970", VA = "0xC33970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xC339D8", Offset = "0xC339D8", VA = "0xC339D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xC32E5C", Offset = "0xC32E5C", VA = "0xC32E5C")]
		[DebuggerHidden]
		public <MoveMoneyBagToMouth>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xC336B0", Offset = "0xC336B0", VA = "0xC336B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xC336B4", Offset = "0xC336B4", VA = "0xC336B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xC33978", Offset = "0xC33978", VA = "0xC33978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ContainedCurrency;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Stashable CurrencyHolderStashable;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Grabbable CurrencyHolderGrabbable;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro CurrencyDisplayLabel;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CurrencyHolderDelegate OnFinishedResizing;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float sizeUpLerpTime;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float lerpToMouthDuration;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MerchantBoat MerchantBoatOwner;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool IsMerchantCurrencyStorage;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool InWalletDropZone;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool SizeLerping;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentSizeLerpTime;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 targetSize;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Tool_Wallet FeedingWallet;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly Vector3 startSize;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine MoneyBagAlertFeedback;

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xC31FAC", Offset = "0xC31FAC", VA = "0xC31FAC", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xC32054", Offset = "0xC32054", VA = "0xC32054")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0xC322B4", Offset = "0xC322B4", VA = "0xC322B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xC32400", Offset = "0xC32400", VA = "0xC32400")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xC32580", Offset = "0xC32580", VA = "0xC32580")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xC328D0", Offset = "0xC328D0", VA = "0xC328D0")]
	public void OnGrabbed(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xC32B50", Offset = "0xC32B50", VA = "0xC32B50")]
	public void OnDropped(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xC32AD4", Offset = "0xC32AD4", VA = "0xC32AD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11AD0", Offset = "0xA11AD0")]
	private IEnumerator MoneyBagInventoryAlert()
	{
		return null;
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xC32D98", Offset = "0xC32D98", VA = "0xC32D98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11B34", Offset = "0xA11B34")]
	private IEnumerator MoveMoneyBagToMouth(Transform bagTransform)
	{
		return null;
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xC32E88", Offset = "0xC32E88", VA = "0xC32E88")]
	public bool OnAddedToInventory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xC33044", Offset = "0xC33044", VA = "0xC33044")]
	public void SetInWalletDropZone(bool newInWalletDropZone)
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xC33050", Offset = "0xC33050", VA = "0xC33050")]
	public bool GetIsInWalletDropZone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xC33058", Offset = "0xC33058", VA = "0xC33058")]
	public void SetMerchantBoatOwner(MerchantBoat inMerchantBoat)
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xC3204C", Offset = "0xC3204C", VA = "0xC3204C")]
	public void SetContainedCurrency(int newContainedCurrency)
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xC33088", Offset = "0xC33088", VA = "0xC33088")]
	public void UpdateCurrencyDisplayLabel()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xC33144", Offset = "0xC33144", VA = "0xC33144", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xC331D8", Offset = "0xC331D8", VA = "0xC331D8")]
	public void StartChangingSize(Vector3 sizeFrom, Vector3 sizeTo)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xC332D8", Offset = "0xC332D8", VA = "0xC332D8")]
	public CurrencyHolder()
	{
	}
}
[Token(Token = "0x2000247")]
public class CurrencyHolderState : ComponentState
{
	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ContainedCurrency;

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xC331AC", Offset = "0xC331AC", VA = "0xC331AC")]
	public CurrencyHolderState(int inContainedCurrency)
	{
	}
}
[Token(Token = "0x2000248")]
public class CurrencyHolderDispenser : MonoBehaviour
{
	[Token(Token = "0x2000249")]
	public delegate void PostCurrencyHolderSpawnedDelegate(CurrencyHolder spawnedCurrencyHolder);

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetReference ReferenceToSpawn;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetTransform;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int PendingCurrency;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PostCurrencyHolderSpawnedDelegate PostCurrencyHolderSpawned;

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xC33A2C", Offset = "0xC33A2C", VA = "0xC33A2C")]
	public void DispenseCurrencyHolder(int currencyToDispense)
	{
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xC33A34", Offset = "0xC33A34", VA = "0xC33A34")]
	public void DispenseCurrencyHolder(int currencyToDispense, AssetReference holderAssetReference)
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xC33B78", Offset = "0xC33B78", VA = "0xC33B78")]
	public void OnCurrencyHolderSpawned(SpawnOperationCallbackData data)
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xC3408C", Offset = "0xC3408C", VA = "0xC3408C")]
	public CurrencyHolderDispenser()
	{
	}
}
[Token(Token = "0x200024A")]
public class MerchantAnimation : MonoBehaviour
{
	[Token(Token = "0x200024B")]
	public enum MerchantAnim
	{
		[Token(Token = "0x4000ED8")]
		Wave,
		[Token(Token = "0x4000ED9")]
		WareSelected,
		[Token(Token = "0x4000EDA")]
		PayFirst,
		[Token(Token = "0x4000EDB")]
		ChangedWare,
		[Token(Token = "0x4000EDC")]
		PaidForWare,
		[Token(Token = "0x4000EDD")]
		GrabbedWare,
		[Token(Token = "0x4000EDE")]
		UpgradeSelected,
		[Token(Token = "0x4000EDF")]
		UpgradePaid,
		[Token(Token = "0x4000EE0")]
		SoldItems,
		[Token(Token = "0x4000EE1")]
		InsufficientFunds,
		[Token(Token = "0x4000EE2")]
		None
	}

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] animIds;

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xD01BAC", Offset = "0xD01BAC", VA = "0xD01BAC")]
	private void PlayAnimation(MerchantAnim anim, bool resetOtherAnimations = true)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xD01C38", Offset = "0xD01C38", VA = "0xD01C38")]
	private void ResetParameters(MerchantAnim exclude = MerchantAnim.None)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xD01CD4", Offset = "0xD01CD4", VA = "0xD01CD4")]
	public void TriggerWave()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xD01CE0", Offset = "0xD01CE0", VA = "0xD01CE0")]
	public void TriggerWareSelected()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xD01CEC", Offset = "0xD01CEC", VA = "0xD01CEC")]
	public void TriggerShouldPayFirst()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xD01CF8", Offset = "0xD01CF8", VA = "0xD01CF8")]
	public void TriggerWareChanged()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xD01D04", Offset = "0xD01D04", VA = "0xD01D04")]
	public void TriggerWarePaidFor()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xD01D38", Offset = "0xD01D38", VA = "0xD01D38")]
	public void SetInsufficientFundsConditions()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xD01DE4", Offset = "0xD01DE4", VA = "0xD01DE4")]
	public void TriggerWareGrabbed(bool resetOtherAnimations = false)
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD01DF0", Offset = "0xD01DF0", VA = "0xD01DF0")]
	public void TriggerIdle()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD01DF8", Offset = "0xD01DF8", VA = "0xD01DF8")]
	public void TriggerUpgradeSelected()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD01E04", Offset = "0xD01E04", VA = "0xD01E04")]
	public void SetLayerWeight(int layer, float newWeight)
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xD01E20", Offset = "0xD01E20", VA = "0xD01E20")]
	public void TriggerUpgradePaid()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xD01E2C", Offset = "0xD01E2C", VA = "0xD01E2C")]
	public void TriggerPlayerSoldItems()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xD01E98", Offset = "0xD01E98", VA = "0xD01E98")]
	public void ResetSelectedItem()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xD01F18", Offset = "0xD01F18", VA = "0xD01F18")]
	public MerchantAnimation()
	{
	}
}
[Token(Token = "0x200024C")]
public class MerchantBehavior : MonoBehaviour, IInitializable
{
	[Token(Token = "0x200024D")]
	public delegate float EasingFunction(float t);

	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB528", Offset = "0x9FB528")]
	private sealed class <NightTransition>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shouldBeNight;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <weight>5__2;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <weightDir>5__3;

		[Token(Token = "0x1700016C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xD052A4", Offset = "0xD052A4", VA = "0xD052A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xD0530C", Offset = "0xD0530C", VA = "0xD0530C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xD02668", Offset = "0xD02668", VA = "0xD02668")]
		[DebuggerHidden]
		public <NightTransition>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xD05164", Offset = "0xD05164", VA = "0xD05164", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xD05168", Offset = "0xD05168", VA = "0xD05168", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xD052AC", Offset = "0xD052AC", VA = "0xD052AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB538", Offset = "0x9FB538")]
	private sealed class <PlayerLeftBoatRoutine>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x1700016E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xD05388", Offset = "0xD05388", VA = "0xD05388", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xD053F0", Offset = "0xD053F0", VA = "0xD053F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xD0283C", Offset = "0xD0283C", VA = "0xD0283C")]
		[DebuggerHidden]
		public <PlayerLeftBoatRoutine>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xD05314", Offset = "0xD05314", VA = "0xD05314", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xD05318", Offset = "0xD05318", VA = "0xD05318", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xD05390", Offset = "0xD05390", VA = "0xD05390", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB548", Offset = "0x9FB548")]
	private sealed class <MoveThingToMerchantHand>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Purchaseable thing;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CurrencyCost cost;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <origScale>5__2;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <targetScale>5__4;

		[Token(Token = "0x17000170")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC1")]
			[Address(RVA = "0xD050F4", Offset = "0xD050F4", VA = "0xD050F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC3")]
			[Address(RVA = "0xD0515C", Offset = "0xD0515C", VA = "0xD0515C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xD03304", Offset = "0xD03304", VA = "0xD03304")]
		[DebuggerHidden]
		public <MoveThingToMerchantHand>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xD049F0", Offset = "0xD049F0", VA = "0xD049F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xD049F4", Offset = "0xD049F4", VA = "0xD049F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xD050FC", Offset = "0xD050FC", VA = "0xD050FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB558", Offset = "0x9FB558")]
	private sealed class <MoveThingBackToShelf>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Purchaseable thing;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <bubbleScale>5__2;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <targetScale>5__4;

		[Token(Token = "0x17000172")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EC7")]
			[Address(RVA = "0xD04980", Offset = "0xD04980", VA = "0xD04980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC9")]
			[Address(RVA = "0xD049E8", Offset = "0xD049E8", VA = "0xD049E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xD0395C", Offset = "0xD0395C", VA = "0xD0395C")]
		[DebuggerHidden]
		public <MoveThingBackToShelf>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xD04300", Offset = "0xD04300", VA = "0xD04300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xD04304", Offset = "0xD04304", VA = "0xD04304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xD04988", Offset = "0xD04988", VA = "0xD04988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB568", Offset = "0x9FB568")]
	private sealed class <AnimateSpeechBubble>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MerchantBehavior <>4__this;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool show;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <initialScale>5__2;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <targetScale>5__3;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timeElapsed>5__4;

		[Token(Token = "0x17000174")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECD")]
			[Address(RVA = "0xD04290", Offset = "0xD04290", VA = "0xD04290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0xD042F8", Offset = "0xD042F8", VA = "0xD042F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xD03988", Offset = "0xD03988", VA = "0xD03988")]
		[DebuggerHidden]
		public <AnimateSpeechBubble>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xD04034", Offset = "0xD04034", VA = "0xD04034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xD04038", Offset = "0xD04038", VA = "0xD04038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xD04298", Offset = "0xD04298", VA = "0xD04298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EE3")]
	public const int NightMerchantLayerIndex = 1;

	[Token(Token = "0x4000EE4")]
	public const int SellReactionLayerIndex = 2;

	[Token(Token = "0x4000EE5")]
	private const float WeightChangeSpeed = 0.5f;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected MerchantAnimation anim;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform merchantHandJoint;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GameObject bubble;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected MerchantSpeechBubbleBase speechBubble;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float speechBubbleFullScale;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem[] poofEffects;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int currentEffect;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Purchaseable selectedObj;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Purchaseable boughtObj;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_initialized;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	protected bool isBusyMovingThingToShelf;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	protected bool isBusyMovingThingToHand;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	protected bool isAnimatingBubble;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected bool isAnimatingSpeechBubble;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool m_isNight;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float timePayFirstAnimWasTriggered;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MerchantSpeechBubble merchantSpeechBubble;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Transform m_bubbleContainer;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator playerLeftBoatRoutine;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static float scaleDuration;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	protected static float bounceDuration;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static float bounceFactor;

	[Token(Token = "0x1700016A")]
	public bool IsInTransaction
	{
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xD02104", Offset = "0xD02104", VA = "0xD02104")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016B")]
	protected MerchantSpeechBubbleBase SpeechBubble
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xD021D0", Offset = "0xD021D0", VA = "0xD021D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0xD021C0", Offset = "0xD021C0", VA = "0xD021C0")]
	public Purchaseable GetThingPlayerWants()
	{
		return null;
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xD021C8", Offset = "0xD021C8", VA = "0xD021C8")]
	public Purchaseable GetThingPlayerBought()
	{
		return null;
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xD021D8", Offset = "0xD021D8", VA = "0xD021D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xD02294", Offset = "0xD02294", VA = "0xD02294")]
	protected void InitializeBubble()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xD022D8", Offset = "0xD022D8", VA = "0xD022D8", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xD023E4", Offset = "0xD023E4", VA = "0xD023E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xD024D4", Offset = "0xD024D4", VA = "0xD024D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xD02360", Offset = "0xD02360", VA = "0xD02360")]
	private void OnNewHourOfDay(int hour)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xD025D8", Offset = "0xD025D8", VA = "0xD025D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11C38", Offset = "0xA11C38")]
	private IEnumerator NightTransition(bool shouldBeNight)
	{
		return null;
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xD02694", Offset = "0xD02694", VA = "0xD02694")]
	public void PlayerEnteredBoat()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xD02768", Offset = "0xD02768", VA = "0xD02768")]
	public void PlayerLeftBoat()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xD027C0", Offset = "0xD027C0", VA = "0xD027C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11C9C", Offset = "0xA11C9C")]
	private IEnumerator PlayerLeftBoatRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xD02868", Offset = "0xD02868", VA = "0xD02868", Slot = "5")]
	protected virtual void ResetOnLeftBoat()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xD02B20", Offset = "0xD02B20", VA = "0xD02B20", Slot = "6")]
	public virtual void SetInsufficientPayement()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xD02B38", Offset = "0xD02B38", VA = "0xD02B38")]
	public void CancelCurrentPurchase()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xD02C2C", Offset = "0xD02C2C", VA = "0xD02C2C", Slot = "7")]
	public virtual void PlayerPointedAtThing(Purchaseable thing, CurrencyCost cost, bool canAffordThing)
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xD03120", Offset = "0xD03120", VA = "0xD03120")]
	private void TryTriggerPayFirstAnim()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xD0317C", Offset = "0xD0317C", VA = "0xD0317C")]
	public void OnFundsRemoved()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xD031C4", Offset = "0xD031C4", VA = "0xD031C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xD03208", Offset = "0xD03208", VA = "0xD03208")]
	protected void UpdateBubblePosition()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD03080", Offset = "0xD03080", VA = "0xD03080")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11D00", Offset = "0xA11D00")]
	private IEnumerator MoveThingToMerchantHand(Purchaseable thing, CurrencyCost cost)
	{
		return null;
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xD03330", Offset = "0xD03330", VA = "0xD03330")]
	protected bool AnimateFromTo(Transform t, float initialScale, float targetScale, float duration, ref float timeElapsed, EasingFunction Ease)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xD03504", Offset = "0xD03504", VA = "0xD03504")]
	private bool AnimateXAndYScale(Transform t, float initialScale, float targetScale, float duration, ref float timeElapsed, AnimationCurve curveX, AnimationCurve curveY)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xD03648", Offset = "0xD03648", VA = "0xD03648")]
	private float GetScaleBasedOnCurve(float fraction, float initialScale, float targetScale, AnimationCurve curve)
	{
		return default(float);
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xD03458", Offset = "0xD03458", VA = "0xD03458")]
	private float GetScaleBasedOnEasingFunction(float fraction, float initialScale, float targetScale, EasingFunction Ease)
	{
		return default(float);
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xD02A88", Offset = "0xD02A88", VA = "0xD02A88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11D64", Offset = "0xA11D64")]
	protected IEnumerator MoveThingBackToShelf(Purchaseable thing)
	{
		return null;
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xD02B9C", Offset = "0xD02B9C", VA = "0xD02B9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11DC8", Offset = "0xA11DC8")]
	protected IEnumerator AnimateSpeechBubble(bool show)
	{
		return null;
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xD039B4", Offset = "0xD039B4", VA = "0xD039B4")]
	protected void PlayPoofEffect(Vector3 pos)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xD03B30", Offset = "0xD03B30", VA = "0xD03B30")]
	private ParticleSystem GetAvailableEffect()
	{
		return null;
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xD03B8C", Offset = "0xD03B8C", VA = "0xD03B8C", Slot = "8")]
	public virtual void SetPaymentStatus(bool hasSufficientFunds)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xD03C84", Offset = "0xD03C84", VA = "0xD03C84")]
	public bool PlayerPaidForThing(Purchaseable thing)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xD03DC0", Offset = "0xD03DC0", VA = "0xD03DC0", Slot = "9")]
	public virtual void PlayerGrabbedBoughtThing(Purchaseable thing)
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xD03E60", Offset = "0xD03E60", VA = "0xD03E60", Slot = "10")]
	public virtual void FinishAnyPendingPurchase()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xD03F88", Offset = "0xD03F88", VA = "0xD03F88", Slot = "11")]
	public virtual bool HasQualifiedPayment()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xD03F90", Offset = "0xD03F90", VA = "0xD03F90")]
	public void PlayerSoldItems()
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0xD03FA8", Offset = "0xD03FA8", VA = "0xD03FA8")]
	public MerchantBehavior()
	{
	}
}
[Token(Token = "0x2000253")]
public class MerchantBoat : SaveableComponent, IInitializable
{
	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MerchantBoat Instance;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MerchantType m_merchantType;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PaymentBin[] bins;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private MerchantWalletArea WalletArea;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private StockManagerBase stockManager;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private MerchantBehavior merchantBehavior;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA027D0", Offset = "0xA027D0")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue m_paymentAcceptedSound;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NeatAudioCue m_transactionCompletedSound;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private SellBin MerchantSellBin;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private CurrencyHolderDispenser MerchantCurrencyDispenser;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CurrencyHolder MerchantCurrencyHolder;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float playerLeftBoatTimestamp;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isPlayerOnBoat;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool m_hasPlayedAcceptedSound;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro TotalStoredValueLabel;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int TotalStoredValue;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int SellBinValue;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int WalletZoneValue;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int InternalStoredValue;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool HavePendingCurrencyHolderSpawn;

	[Token(Token = "0x17000176")]
	public int CurrentWalletZoneValue
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xD054B0", Offset = "0xD054B0", VA = "0xD054B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000177")]
	public int CurrentSellBinValue
	{
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xD054B8", Offset = "0xD054B8", VA = "0xD054B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000178")]
	public int CurrentTotalStoredValue
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xD054C0", Offset = "0xD054C0", VA = "0xD054C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000179")]
	public MerchantType MerchantType
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xD054C8", Offset = "0xD054C8", VA = "0xD054C8")]
		get
		{
			return default(MerchantType);
		}
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xD054D0", Offset = "0xD054D0", VA = "0xD054D0")]
	public bool GetTryRestockResult()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xD056B8", Offset = "0xD056B8", VA = "0xD056B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xD057FC", Offset = "0xD057FC", VA = "0xD057FC", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xD05B48", Offset = "0xD05B48", VA = "0xD05B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0xD05B74", Offset = "0xD05B74", VA = "0xD05B74")]
	private void UpdateWantedThing()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0xD05D94", Offset = "0xD05D94", VA = "0xD05D94")]
	private void UpdateBoughtThing()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0xD05F70", Offset = "0xD05F70", VA = "0xD05F70")]
	private void CancelCurrentPurchaseAfterDuration()
	{
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0xD05FCC", Offset = "0xD05FCC", VA = "0xD05FCC")]
	private void UpdateAmountsPaid(CurrencyCost cost)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xD0604C", Offset = "0xD0604C", VA = "0xD0604C")]
	public void ConfirmPurchase(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0xD06394", Offset = "0xD06394", VA = "0xD06394")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD064C0", Offset = "0xD064C0", VA = "0xD064C0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xD0551C", Offset = "0xD0551C", VA = "0xD0551C")]
	private void CancelCurrentPurchase()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xD065EC", Offset = "0xD065EC", VA = "0xD065EC")]
	public void PlayerSelectedItem(Purchaseable item)
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xD06684", Offset = "0xD06684", VA = "0xD06684")]
	private bool CanPayThePrice(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xD05FFC", Offset = "0xD05FFC", VA = "0xD05FFC")]
	private bool CanPayThePrice(CurrencyCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD06308", Offset = "0xD06308", VA = "0xD06308")]
	private bool HasSufficientFunds(CurrencyCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD06754", Offset = "0xD06754", VA = "0xD06754")]
	private bool AcceptPayment(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD06318", Offset = "0xD06318", VA = "0xD06318")]
	private bool AcceptCurrencyPayment(int currencyCost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xD059FC", Offset = "0xD059FC", VA = "0xD059FC")]
	public void OnCurrencyValuesUpdated(bool shouldUpdateCurrencyHolder = true)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xD06A80", Offset = "0xD06A80", VA = "0xD06A80")]
	public void SpawnCurrencyHolder(int currencyAmount)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xD068A8", Offset = "0xD068A8", VA = "0xD068A8")]
	public void DestroyCurrencyHolder()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xD06B2C", Offset = "0xD06B2C", VA = "0xD06B2C")]
	private void OnFinishedResizingMerchantCurrencyHolder()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xD06C5C", Offset = "0xD06C5C", VA = "0xD06C5C")]
	public void SellBinValueUpdated(int newSellBinValue)
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xD067F8", Offset = "0xD067F8", VA = "0xD067F8")]
	public void ConsumeSellBinItems()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xD06C6C", Offset = "0xD06C6C", VA = "0xD06C6C")]
	private void OnMerchantCurrencyHolderSpawned(CurrencyHolder spawnedCurrencyHolder)
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xD06CF0", Offset = "0xD06CF0", VA = "0xD06CF0")]
	public void AddMoneyFromWallet(int moneyToAdd)
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xD06D04", Offset = "0xD06D04", VA = "0xD06D04")]
	public void UpdateMoneyFromWallet(int newValue)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xD06D14", Offset = "0xD06D14", VA = "0xD06D14")]
	public void OnMerchantCurrencyHolderGrabbed()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xD06D68", Offset = "0xD06D68", VA = "0xD06D68", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xD06E90", Offset = "0xD06E90", VA = "0xD06E90")]
	public MerchantBoat()
	{
	}
}
[Token(Token = "0x2000254")]
public class MerchantBoatState : ComponentState
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int WalletZoneValue;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int InternalStoredValue;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SaveID MerchantCurrencyHolderSaveID;

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xD06E88", Offset = "0xD06E88", VA = "0xD06E88")]
	public MerchantBoatState()
	{
	}
}
[Token(Token = "0x2000255")]
public class MerchantItemCostSpeechBubble : MerchantSpeechBubbleBase
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro flowerAmount;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshPro vegAmount;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshPro fruitAmount;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private SpriteRenderer flowerIcon;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private SpriteRenderer vegIcon;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private SpriteRenderer fruitIcon;

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xD06EA4", Offset = "0xD06EA4", VA = "0xD06EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD06EB4", Offset = "0xD06EB4", VA = "0xD06EB4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xD06EF4", Offset = "0xD06EF4", VA = "0xD06EF4")]
	public void SetPrice(ItemCost cost)
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xD06FF4", Offset = "0xD06FF4", VA = "0xD06FF4")]
	public void SetPricesPaid(bool flowersPaid = false, bool veggiesPaid = false, bool fruitPaid = false)
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xD07214", Offset = "0xD07214", VA = "0xD07214", Slot = "6")]
	public override void ResetPricesPaid()
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xD07224", Offset = "0xD07224", VA = "0xD07224")]
	public MerchantItemCostSpeechBubble()
	{
	}
}
[Token(Token = "0x2000256")]
public class MerchantSpeechBubble : MerchantSpeechBubbleBase
{
	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshPro currencyAmount;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SpriteRenderer currencyIcon;

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xD07AC4", Offset = "0xD07AC4", VA = "0xD07AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xD07AD4", Offset = "0xD07AD4", VA = "0xD07AD4")]
	private void Init()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xD05058", Offset = "0xD05058", VA = "0xD05058")]
	public void SetPrice(CurrencyCost cost)
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xD03BB4", Offset = "0xD03BB4", VA = "0xD03BB4")]
	public void SetPricesPaid(bool currencyPaid = false)
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD07B14", Offset = "0xD07B14", VA = "0xD07B14", Slot = "6")]
	public override void ResetPricesPaid()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xD07B1C", Offset = "0xD07B1C", VA = "0xD07B1C")]
	public MerchantSpeechBubble()
	{
	}
}
[Token(Token = "0x2000257")]
internal class MerchantWalletArea : MonoBehaviour
{
	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CurrencyHolder> ContainedCurrencyHolders;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Tool_Wallet ContainedWallet;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MerchantBoat MerchantBoatOwner;

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xD07B24", Offset = "0xD07B24", VA = "0xD07B24")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xD07B94", Offset = "0xD07B94", VA = "0xD07B94")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xD07D18", Offset = "0xD07D18", VA = "0xD07D18")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xD07E70", Offset = "0xD07E70", VA = "0xD07E70")]
	public MerchantWalletArea()
	{
	}
}
[Token(Token = "0x2000258")]
public class PaymentBin : CraftingBubble
{
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB578", Offset = "0x9FB578")]
	private sealed class <PlayRejectSoundAfterDelay>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PaymentBin <>4__this;

		[Token(Token = "0x1700017B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F14")]
			[Address(RVA = "0xDE942C", Offset = "0xDE942C", VA = "0xDE942C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F16")]
			[Address(RVA = "0xDE9494", Offset = "0xDE9494", VA = "0xDE9494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xDE8EAC", Offset = "0xDE8EAC", VA = "0xDE8EAC")]
		[DebuggerHidden]
		public <PlayRejectSoundAfterDelay>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xDE9368", Offset = "0xDE9368", VA = "0xDE9368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xDE936C", Offset = "0xDE936C", VA = "0xDE936C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xDE9434", Offset = "0xDE9434", VA = "0xDE9434", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB588", Offset = "0x9FB588")]
	private sealed class <ThrowItOut>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable grabbable;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PaymentBin <>4__this;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody <rb>5__2;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <progress>5__4;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <done>5__5;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xDE978C", Offset = "0xDE978C", VA = "0xDE978C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xDE97F4", Offset = "0xDE97F4", VA = "0xDE97F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xDE8F70", Offset = "0xDE8F70", VA = "0xDE8F70")]
		[DebuggerHidden]
		public <ThrowItOut>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xDE949C", Offset = "0xDE949C", VA = "0xDE949C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xDE94A0", Offset = "0xDE94A0", VA = "0xDE94A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xDE9794", Offset = "0xDE9794", VA = "0xDE9794", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[SerializeField]
	private CurrencyType currencyType;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private ParticleSystem acceptPaymentEffect;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private TextMeshPro itemCountLabel;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private BezierCurve bezier;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0292C", Offset = "0xA0292C")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private NeatAudioCue m_rejectedSound;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private NeatAudioCue m_acceptedSound;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Coroutine m_playRejectSoundRoutine;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int m_lastCount;

	[Token(Token = "0x1700017A")]
	public CurrencyType CurrencyType
	{
		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xDE8BB8", Offset = "0xDE8BB8", VA = "0xDE8BB8")]
		get
		{
			return default(CurrencyType);
		}
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xDE8BC0", Offset = "0xDE8BC0", VA = "0xDE8BC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xDE8C38", Offset = "0xDE8C38", VA = "0xDE8C38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xDE8C40", Offset = "0xDE8C40", VA = "0xDE8C40", Slot = "5")]
	protected override bool CanBeAdded(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xDE8D28", Offset = "0xDE8D28", VA = "0xDE8D28", Slot = "6")]
	protected override void HandleInvalidGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xDE8E30", Offset = "0xDE8E30", VA = "0xDE8E30")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA11FBC", Offset = "0xA11FBC")]
	private IEnumerator PlayRejectSoundAfterDelay()
	{
		return null;
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xDE8ED8", Offset = "0xDE8ED8", VA = "0xDE8ED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12020", Offset = "0xA12020")]
	private IEnumerator ThrowItOut(Grabbable grabbable)
	{
		return null;
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xDE8F9C", Offset = "0xDE8F9C", VA = "0xDE8F9C")]
	private void UpdateItemCountLabel()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xDE90A0", Offset = "0xDE90A0", VA = "0xDE90A0")]
	public int NumItems()
	{
		return default(int);
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xDE90F0", Offset = "0xDE90F0", VA = "0xDE90F0")]
	public bool PricePaid(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xDE9158", Offset = "0xDE9158", VA = "0xDE9158")]
	public int GetCost(ItemCost cost)
	{
		return default(int);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xDE9180", Offset = "0xDE9180", VA = "0xDE9180")]
	public bool AcceptPayment(ItemCost cost)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xDE92F8", Offset = "0xDE92F8", VA = "0xDE92F8")]
	public PaymentBin()
	{
	}
}
[Token(Token = "0x200025B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB598", Offset = "0x9FB598")]
public class Purchaseable : MonoBehaviour
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform scaleTransform;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 m_localPosition;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Quaternion m_localRotation;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Vector3 m_localScale;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_isLargeObject;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool isOnShelf;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool canAfford;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool boughtAndReadyToBeGrabbed;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private Grabbable grabbable;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private Stashable stashable;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OrientedPoint placementOnShelf;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 originalScale;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color highlightColor;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SaveObjectSpawnable m_saveObjectSpawnable;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string MerchantType;

	[Token(Token = "0x1700017F")]
	public Transform ScaleTransform
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xC688DC", Offset = "0xC688DC", VA = "0xC688DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000180")]
	public bool IsOnShelf
	{
		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xC688E4", Offset = "0xC688E4", VA = "0xC688E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000181")]
	public bool CanAfford
	{
		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xC688EC", Offset = "0xC688EC", VA = "0xC688EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000182")]
	public bool BoughtAndReadyToBeGrabbed
	{
		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xC688F4", Offset = "0xC688F4", VA = "0xC688F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000183")]
	public bool IsLargeObject
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xC689D0", Offset = "0xC689D0", VA = "0xC689D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000184")]
	public Grabbable Grabbable
	{
		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xC689D8", Offset = "0xC689D8", VA = "0xC689D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000185")]
	public Stashable Stashable
	{
		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xC689E0", Offset = "0xC689E0", VA = "0xC689E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000186")]
	public SaveObjectSpawnable SaveObjectSpawnable
	{
		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xC689E8", Offset = "0xC689E8", VA = "0xC689E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xC688FC", Offset = "0xC688FC", VA = "0xC688FC")]
	public void InitOnShelf()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xC68924", Offset = "0xC68924", VA = "0xC68924")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xC68B30", Offset = "0xC68B30", VA = "0xC68B30")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xC68C84", Offset = "0xC68C84", VA = "0xC68C84")]
	public void StoreCurrentPlacement()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xC68D00", Offset = "0xC68D00", VA = "0xC68D00")]
	public void WasPurchased()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xC68D38", Offset = "0xC68D38", VA = "0xC68D38")]
	public void InsuffecientFunds()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xC68DC0", Offset = "0xC68DC0", VA = "0xC68DC0")]
	public void GrabbedByMerchant(Transform parent)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xC69190", Offset = "0xC69190", VA = "0xC69190")]
	public void PutBackOnShelf()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xC5AF2C", Offset = "0xC5AF2C", VA = "0xC5AF2C")]
	public void PlayerStartedPointingAtUs()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xC5AFEC", Offset = "0xC5AFEC", VA = "0xC5AFEC")]
	public void PlayerIsPointingAtUs()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xC5B0AC", Offset = "0xC5B0AC", VA = "0xC5B0AC")]
	public void PlayerStoppedPointingAtUs()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xC5D1B0", Offset = "0xC5D1B0", VA = "0xC5D1B0")]
	public void SelectedByPlayer()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xC69338", Offset = "0xC69338", VA = "0xC69338")]
	public bool GetStorePlacement(out Vector3 localPosition, out Quaternion localRotation, out Vector3 localScale)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xC694E0", Offset = "0xC694E0", VA = "0xC694E0")]
	public AssetReference GetAssetReference()
	{
		return null;
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xC695E8", Offset = "0xC695E8", VA = "0xC695E8")]
	public AssetReference GetAssetReferenceInParent()
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xC689EC", Offset = "0xC689EC", VA = "0xC689EC")]
	private SaveObjectSpawnable GetSaveObjectSpawnable()
	{
		return null;
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xC69690", Offset = "0xC69690", VA = "0xC69690")]
	public OrientedPoint GetStorePlacementAsOrientedPoint()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xC696E0", Offset = "0xC696E0", VA = "0xC696E0")]
	public void SetSaveComponentActive(bool shouldBeActive)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xC69710", Offset = "0xC69710", VA = "0xC69710", Slot = "4")]
	public virtual void GrabbedByPlayer()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xC69738", Offset = "0xC69738", VA = "0xC69738")]
	public Purchaseable()
	{
	}
}
[Token(Token = "0x200025C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB5FC", Offset = "0x9FB5FC")]
public class PurchaseableToolUpgrade : PurchaseableUpgrade
{
	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PurchasableUpgradeType UpgradeType;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int UpgradeLevel;

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xC69880", Offset = "0xC69880", VA = "0xC69880", Slot = "4")]
	public override void GrabbedByPlayer()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xC69884", Offset = "0xC69884", VA = "0xC69884")]
	public PurchaseableToolUpgrade()
	{
	}
}
[Token(Token = "0x200025D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB660", Offset = "0x9FB660")]
public class PurchaseableUpgrade : Purchaseable
{
	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xC698F4", Offset = "0xC698F4", VA = "0xC698F4", Slot = "4")]
	public override void GrabbedByPlayer()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xC69890", Offset = "0xC69890", VA = "0xC69890")]
	public PurchaseableUpgrade()
	{
	}
}
[Token(Token = "0x200025E")]
public class SellBin : CraftingBubble
{
	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CurrencyHolderDispenser ConnectedDispenser;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MerchantBoat ConnectedMerchantBoat;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private TextMeshPro ItemValueLabel;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private Rotatable2 handle;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private BezierCurve RejectBezier;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int TotalContainedCurrency;

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xCDC254", Offset = "0xCDC254", VA = "0xCDC254", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0xCDC2D8", Offset = "0xCDC2D8", VA = "0xCDC2D8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xCDC464", Offset = "0xCDC464", VA = "0xCDC464")]
	public void ContainedItemsUpdated()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xCDC3A8", Offset = "0xCDC3A8", VA = "0xCDC3A8")]
	public void UpdateSellValueLabel()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xCDC56C", Offset = "0xCDC56C", VA = "0xCDC56C")]
	public void UpdateConnectedMerchantBoat()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xCDC600", Offset = "0xCDC600", VA = "0xCDC600", Slot = "5")]
	protected override bool CanBeAdded(Stashable stashable, bool canBeHeld)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xCDC650", Offset = "0xCDC650", VA = "0xCDC650", Slot = "6")]
	protected override void HandleInvalidGrabbable(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xCDC708", Offset = "0xCDC708", VA = "0xCDC708")]
	public void SellContainedItems()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xCDC7AC", Offset = "0xCDC7AC", VA = "0xCDC7AC")]
	public void DestroyContainedItems()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xCDC934", Offset = "0xCDC934", VA = "0xCDC934")]
	public void OnLeverPulled(Rotatable2 handle)
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xCDC938", Offset = "0xCDC938", VA = "0xCDC938")]
	public int GetContainedItemValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xCDC940", Offset = "0xCDC940", VA = "0xCDC940")]
	public SellBin()
	{
	}
}
[Token(Token = "0x200025F")]
public static class ByteArrayExtensions
{
	[Serializable]
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB6D4", Offset = "0x9FB6D4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<byte, string> <>9__0_0;

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x1010010", Offset = "0x1010010", VA = "0x1010010")]
		public <>c()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x1010018", Offset = "0x1010018", VA = "0x1010018")]
		internal string <ToHexString>b__0_0(byte b)
		{
			return null;
		}
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x100FE9C", Offset = "0x100FE9C", VA = "0x100FE9C")]
	public static string ToHexString(this byte[] bytes)
	{
		return null;
	}
}
[Token(Token = "0x2000261")]
public static class DictionaryExtensions
{
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB6F4", Offset = "0x9FB6F4")]
	private sealed class <>c__DisplayClass1_0<TKey, TValue>
	{
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TValue value;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<KeyValuePair<TKey, TValue>, bool> <>9__0;

		[Token(Token = "0x6000F50")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000F51")]
		internal bool <RemoveAllWhereValueIs>b__0(KeyValuePair<TKey, TValue> kvp)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F4E")]
	public static TValue GetValueOrDefault<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TKey key)
	{
		return (TValue)null;
	}

	[Token(Token = "0x6000F4F")]
	public static void RemoveAllWhereValueIs<TKey, TValue>(this IDictionary<TKey, TValue> dictionary, TValue value)
	{
	}
}
[Token(Token = "0x2000263")]
public static class FloatExtensions
{
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1084808", Offset = "0x1084808", VA = "0x1084808")]
	public static float Smooth01(this float x)
	{
		return default(float);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1084820", Offset = "0x1084820", VA = "0x1084820")]
	private static float Lerp(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1084838", Offset = "0x1084838", VA = "0x1084838")]
	private static float InverseLerp(float a, float b, float v)
	{
		return default(float);
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x1084848", Offset = "0x1084848", VA = "0x1084848")]
	public static float Remap(this float value, float iMin, float iMax, float oMin, float oMax)
	{
		return default(float);
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x108486C", Offset = "0x108486C", VA = "0x108486C")]
	public static float RemapClamped(this float value, float iMin, float iMax, float oMin, float oMax)
	{
		return default(float);
	}
}
[Token(Token = "0x2000264")]
public static class GameObjectExtensions
{
	[Token(Token = "0x6000F57")]
	public static T CreateChildWithComponent<T>(this GameObject go, string name) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000F58")]
	public static T InstantiateGetComp<T>(this GameObject original) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x1091AC0", Offset = "0x1091AC0", VA = "0x1091AC0")]
	public static void SetLayer(this GameObject go, int layer, bool recursive = true)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x1091B6C", Offset = "0x1091B6C", VA = "0x1091B6C")]
	public static Vector3 GetClosestPointOnColliderBounds(this GameObject go, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F5B")]
	public static void RemoveComponent<T>(this GameObject go) where T : Component
	{
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x1091D14", Offset = "0x1091D14", VA = "0x1091D14")]
	public static void GetRendererBoundingCircle(this GameObject go, out Vector3 localCenter, out float radius, bool logError = true)
	{
	}
}
[Token(Token = "0x2000265")]
public static class IEnumerableExtensions
{
	[Token(Token = "0x6000F5D")]
	public static void ForEach<T>(this IEnumerable<T> list, Action<T> action)
	{
	}
}
[Token(Token = "0x2000266")]
public static class IEnumeratorExtensions
{
	[Token(Token = "0x6000F5E")]
	public static int IndexOf<T>(this T[] array, T testThing) where T : class
	{
		return default(int);
	}
}
[Token(Token = "0x2000267")]
public static class ListExtensions
{
	[Token(Token = "0x6000F5F")]
	public static bool ContainsWhere<T>(this List<T> list, Func<T, bool> cond)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F60")]
	public static void AddIfUnique<T>(this List<T> list, T item)
	{
	}
}
[Token(Token = "0x2000268")]
public static class MaterialPropertyBlockExtensions
{
	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool initializedPropertyIds;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int[] propertyIds;

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xCFC890", Offset = "0xCFC890", VA = "0xCFC890")]
	public static void SetColorTriplet(this MaterialPropertyBlock mpb, ColorTriplet colorTriplet)
	{
	}
}
[Token(Token = "0x2000269")]
public static class ObjectExtensions
{
	[Token(Token = "0x6000F62")]
	public static T Ref<T>(this T o) where T : UnityEngine.Object
	{
		return null;
	}
}
[Token(Token = "0x200026A")]
public static class RectExtensions
{
	[Token(Token = "0x17000187")]
	private static Vector2 Random01Vec2
	{
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xC73D6C", Offset = "0xC73D6C", VA = "0xC73D6C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xC73DB4", Offset = "0xC73DB4", VA = "0xC73DB4")]
	public static Vector2 GetRandomPointInside(this Rect r)
	{
		return default(Vector2);
	}
}
[Token(Token = "0x200026B")]
public static class StringExtensions
{
	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MD5 md5;

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xCF2538", Offset = "0xCF2538", VA = "0xCF2538")]
	public static string GetMD5HashHexString(this string s)
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xCF2600", Offset = "0xCF2600", VA = "0xCF2600")]
	public static int GetDeterministicHashCode(this string str)
	{
		return default(int);
	}
}
[Token(Token = "0x200026C")]
public enum TransformType
{
	[Token(Token = "0x4000F71")]
	Point,
	[Token(Token = "0x4000F72")]
	Direction,
	[Token(Token = "0x4000F73")]
	Vector
}
[Token(Token = "0x200026D")]
public static class TransformExtensions
{
	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1AE13B0", Offset = "0x1AE13B0", VA = "0x1AE13B0")]
	public static Vector3 WorldToLocal(this Transform tf, Vector3 v3, TransformType type = TransformType.Point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x1AE13F4", Offset = "0x1AE13F4", VA = "0x1AE13F4")]
	public static Quaternion WorldToLocal(this Transform tf, Quaternion r)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x1AE14D8", Offset = "0x1AE14D8", VA = "0x1AE14D8")]
	public static OrientedPoint WorldToLocal(this Transform tf, OrientedPoint op)
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x1AE13F8", Offset = "0x1AE13F8", VA = "0x1AE13F8")]
	public static Quaternion InverseTransformRotation(this Transform t, Quaternion worldSpaceRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x1AE1550", Offset = "0x1AE1550", VA = "0x1AE1550")]
	public static Quaternion TransformRotation(this Transform t, Quaternion localSpaceRotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x1AE1628", Offset = "0x1AE1628", VA = "0x1AE1628")]
	public static void DestroyAllChildren(this Transform tf)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x1AE16E4", Offset = "0x1AE16E4", VA = "0x1AE16E4")]
	public static void Reset(this Transform tf, Space space = Space.Self)
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x1AE1718", Offset = "0x1AE1718", VA = "0x1AE1718")]
	public static void ResetPosition(this Transform tf, Space space = Space.Self)
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x1AE17D8", Offset = "0x1AE17D8", VA = "0x1AE17D8")]
	public static void ResetRotation(this Transform tf, Space space = Space.Self)
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x1AE1898", Offset = "0x1AE1898", VA = "0x1AE1898")]
	public static void ResetScale(this Transform tf)
	{
	}

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x1AE1910", Offset = "0x1AE1910", VA = "0x1AE1910")]
	public static Transform[] GetAllChildren(this Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x1AE1A34", Offset = "0x1AE1A34", VA = "0x1AE1A34")]
	public static void SetLocalEulerY(this Transform transform, float y)
	{
	}

	[Token(Token = "0x6000F73")]
	public static T FindComponentInParent<T>(this Transform parent) where T : class
	{
		return null;
	}
}
[Token(Token = "0x200026E")]
public static class Vector2Extensions
{
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x1AE4EB0", Offset = "0x1AE4EB0", VA = "0x1AE4EB0")]
	public static Vector3 XYZ(this Vector2 vec, float y = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x1AE4EF0", Offset = "0x1AE4EF0", VA = "0x1AE4EF0")]
	public static Vector2 Floor(this Vector2 vec)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x1AE3A54", Offset = "0x1AE3A54", VA = "0x1AE3A54")]
	public static Vector2 Round(this Vector2 v)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x1AE3AF8", Offset = "0x1AE3AF8", VA = "0x1AE3AF8")]
	public static Vector2Int ToInt(this Vector2 v)
	{
		return default(Vector2Int);
	}
}
[Token(Token = "0x200026F")]
public static class Vector3Extensions
{
	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x1AE4F78", Offset = "0x1AE4F78", VA = "0x1AE4F78")]
	public static Vector2 XZ(this Vector3 vec)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x1AE4FA8", Offset = "0x1AE4FA8", VA = "0x1AE4FA8")]
	public static Vector3 FlattenY(this Vector3 v)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x1AE4FB0", Offset = "0x1AE4FB0", VA = "0x1AE4FB0")]
	public static bool EqualsFast(this Vector3 a, Vector3 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x1AE4FD8", Offset = "0x1AE4FD8", VA = "0x1AE4FD8")]
	public static bool IsWithinSqrDist(this Vector3 self, Vector3 other, float f)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000270")]
public class LocalizationTester : MonoBehaviour
{
	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FB7C4", Offset = "0x9FB7C4")]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationTester <>4__this;

		[Token(Token = "0x17000188")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0xCF5CBC", Offset = "0xCF5CBC", VA = "0xCF5CBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0xCF5D24", Offset = "0xCF5D24", VA = "0xCF5D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xCF5AB8", Offset = "0xCF5AB8", VA = "0xCF5AB8")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xCF5BB0", Offset = "0xCF5BB0", VA = "0xCF5BB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xCF5BB4", Offset = "0xCF5BB4", VA = "0xCF5BB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xCF5CC4", Offset = "0xCF5CC4", VA = "0xCF5CC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string testLocale;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waitBeforePlaySubtitle;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string subtitle;

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0xCF5A3C", Offset = "0xCF5A3C", VA = "0xCF5A3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA123C4", Offset = "0xA123C4")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xCF5AE4", Offset = "0xCF5AE4", VA = "0xCF5AE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xCF5B30", Offset = "0xCF5B30", VA = "0xCF5B30")]
	public LocalizationTester()
	{
	}
}
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB7D4", Offset = "0x9FB7D4")]
public class LoadTextFromLocalization : MonoBehaviour
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Key;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xCF4498", Offset = "0xCF4498", VA = "0xCF4498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xCF4500", Offset = "0xCF4500", VA = "0xCF4500")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xCF459C", Offset = "0xCF459C", VA = "0xCF459C")]
	public LoadTextFromLocalization()
	{
	}
}
[Token(Token = "0x2000273")]
public class LocalizationResource : MonoBehaviour
{
	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ResourceKey;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string ResourceFilename;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool allowDefaultString;

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xCF59DC", Offset = "0xCF59DC", VA = "0xCF59DC")]
	public LocalizationResource()
	{
	}
}
[Token(Token = "0x2000274")]
public class ResourceLoader
{
	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xC73E4C", Offset = "0xC73E4C", VA = "0xC73E4C")]
	public static Dictionary<string, string> LoadTextResource(string languageCode, string resourceFilename)
	{
		return null;
	}
}
[Token(Token = "0x2000275")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB838", Offset = "0x9FB838")]
public class ResourceSprite : MonoBehaviour
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string FileName;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer r;

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xC73FC0", Offset = "0xC73FC0", VA = "0xC73FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xC74028", Offset = "0xC74028", VA = "0xC74028")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0xC74184", Offset = "0xC74184", VA = "0xC74184")]
	public ResourceSprite()
	{
	}
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB89C", Offset = "0x9FB89C")]
public class ResourceTextField : LocalizationResource
{
	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MaxCharactersPerLine;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 refSize;

	[NonSerialized]
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string replaceFourDigitCode;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TextMesh textMesh;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer rend;

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0xC7418C", Offset = "0xC7418C", VA = "0xC7418C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0xC7446C", Offset = "0xC7446C", VA = "0xC7446C")]
	private Vector3 CheckLocalRenderBounds()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0xC74218", Offset = "0xC74218", VA = "0xC74218")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0xC745C4", Offset = "0xC745C4", VA = "0xC745C4")]
	public ResourceTextField()
	{
	}
}
[Token(Token = "0x2000277")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB900", Offset = "0x9FB900")]
public class ResourceTextFieldCanvas : LocalizationResource
{
	[Token(Token = "0x2000278")]
	public enum Branching
	{
		[Token(Token = "0x4000F8B")]
		None,
		[Token(Token = "0x4000F8C")]
		ControllerType
	}

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Branching branching;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string ResourceKeyControllerOculus;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string ResourceKeyControllerVive;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uiText;

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xC745D4", Offset = "0xC745D4", VA = "0xC745D4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xC745D8", Offset = "0xC745D8", VA = "0xC745D8")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0xC747B0", Offset = "0xC747B0", VA = "0xC747B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0xC7485C", Offset = "0xC7485C", VA = "0xC7485C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0xC746F0", Offset = "0xC746F0", VA = "0xC746F0")]
	private string GetResourceKey()
	{
		return null;
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0xC74908", Offset = "0xC74908", VA = "0xC74908")]
	public ResourceTextFieldCanvas()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB964", Offset = "0x9FB964")]
public class ResourceTextFieldTMP : LocalizationResource
{
	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int MaxCharactersPerLine;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_Text textMesh;

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0xC74910", Offset = "0xC74910", VA = "0xC74910")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xC74978", Offset = "0xC74978", VA = "0xC74978")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xC74A48", Offset = "0xC74A48", VA = "0xC74A48")]
	public ResourceTextFieldTMP()
	{
	}
}
[Token(Token = "0x200027A")]
public class TextHelper
{
	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0xCA68FC", Offset = "0xCA68FC", VA = "0xCA68FC")]
	public static string Wrap(string text, int lineWidth)
	{
		return null;
	}
}
[Token(Token = "0x200027B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FB9C8", Offset = "0x9FB9C8")]
public class TextMeshZoom : MonoBehaviour
{
	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMesh text;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float nearCS;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float nearFS;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float farFS;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float zoomFactor;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minDistance;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera cam;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float currentDistance;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 cachedPos;

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0xCA6AA0", Offset = "0xCA6AA0", VA = "0xCA6AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xCA6BB0", Offset = "0xCA6BB0", VA = "0xCA6BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xCA6D28", Offset = "0xCA6D28", VA = "0xCA6D28")]
	public TextMeshZoom()
	{
	}
}
[Token(Token = "0x200027C")]
public class TextResource
{
	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, Dictionary<string, string>> defaultSnippets;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, Dictionary<string, string>> textSnippets;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Font OverrideFont;

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xCA6D44", Offset = "0xCA6D44", VA = "0xCA6D44")]
	public static void Init(string resourceFilename)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xCA7070", Offset = "0xCA7070", VA = "0xCA7070")]
	private static void setFont()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xCA7074", Offset = "0xCA7074", VA = "0xCA7074")]
	public static string GetString(string resourceName, string resourceFilename, bool allowDefaultString)
	{
		return null;
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xCA7224", Offset = "0xCA7224", VA = "0xCA7224")]
	public static void SetCurrentLocale(string locale)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xCA6E24", Offset = "0xCA6E24", VA = "0xCA6E24")]
	public static string GetCurrentLocale()
	{
		return null;
	}
}
[Token(Token = "0x200027D")]
public class SubtitlePlayer : MonoBehaviour
{
	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBA2C", Offset = "0x9FBA2C")]
	private sealed class <playback>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubtitlePlayer <>4__this;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public JObject txt;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <c>5__2;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator<KeyValuePair<string, JToken>> <>7__wrap2;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private JToken <j>5__4;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <t>5__5;

		[Token(Token = "0x1700018A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xCA174C", Offset = "0xCA174C", VA = "0xCA174C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xCA17B4", Offset = "0xCA17B4", VA = "0xCA17B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xCA0F74", Offset = "0xCA0F74", VA = "0xCA0F74")]
		[DebuggerHidden]
		public <playback>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xCA0FA0", Offset = "0xCA0FA0", VA = "0xCA0FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xCA108C", Offset = "0xCA108C", VA = "0xCA108C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xCA0FCC", Offset = "0xCA0FCC", VA = "0xCA0FCC")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xCA1754", Offset = "0xCA1754", VA = "0xCA1754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text Sub;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxCharsPerLine;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool FadeIn;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool FadeOut;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Font defaultFont;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xCF26BC", Offset = "0xCF26BC", VA = "0xCF26BC")]
	public static SubtitlePlayer PlaySub(string key, bool fadeIn = true, bool fadeOut = true)
	{
		return null;
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xCF29E0", Offset = "0xCF29E0", VA = "0xCF29E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xCF27CC", Offset = "0xCF27CC", VA = "0xCF27CC")]
	public void PlayFile(string file, bool fadeIn = true, bool fadeOut = true)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xCF2B28", Offset = "0xCF2B28", VA = "0xCF2B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12478", Offset = "0xA12478")]
	private IEnumerator playback(JObject txt)
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xCF2BC0", Offset = "0xCF2BC0", VA = "0xCF2BC0")]
	private string GetLineBrokenText(string source)
	{
		return null;
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xCF2CAC", Offset = "0xCF2CAC", VA = "0xCF2CAC")]
	public SubtitlePlayer()
	{
	}
}
[Token(Token = "0x200027F")]
public class NeatAPI_Validator : MonoBehaviour
{
	[Token(Token = "0x2000280")]
	public enum Validity
	{
		[Token(Token = "0x4000FAB")]
		Unknown,
		[Token(Token = "0x4000FAC")]
		Invalid,
		[Token(Token = "0x4000FAD")]
		Valid
	}

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Validity validity;

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xD0AF28", Offset = "0xD0AF28", VA = "0xD0AF28")]
	private void OnInvalid()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xD0AFA0", Offset = "0xD0AFA0", VA = "0xD0AFA0")]
	private void ShutDown()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xD0AFA8", Offset = "0xD0AFA8", VA = "0xD0AFA8")]
	private void LoadErrorScene()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xD0B014", Offset = "0xD0B014", VA = "0xD0B014")]
	private void OnValid()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0xD0B08C", Offset = "0xD0B08C", VA = "0xD0B08C")]
	public NeatAPI_Validator()
	{
	}
}
[Token(Token = "0x2000281")]
public class NeatVR_Controller
{
	[Token(Token = "0x2000282")]
	public enum InputAction
	{
		[Token(Token = "0x4000FC1")]
		Grab,
		[Token(Token = "0x4000FC2")]
		GrabHandGesture,
		[Token(Token = "0x4000FC3")]
		Inventory,
		[Token(Token = "0x4000FC4")]
		Teleport,
		[Token(Token = "0x4000FC5")]
		SnapTurnLeft,
		[Token(Token = "0x4000FC6")]
		SnapTurnRight,
		[Token(Token = "0x4000FC7")]
		Menu,
		[Token(Token = "0x4000FC8")]
		CloseMenu,
		[Token(Token = "0x4000FC9")]
		UseTool,
		[Token(Token = "0x4000FCA")]
		NUM_ACTIONS
	}

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02AC8", Offset = "0xA02AC8")]
	private int <ButtonsNum>k__BackingField;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected NeatVR_Button[] buttons;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool grabDown;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool grabHeld;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool grabUp;

	[Token(Token = "0x4000FB3")]
	protected const float THR_TRIGGER_RELEASE = 0.85f;

	[Token(Token = "0x4000FB4")]
	protected const float THR_TRIGGER_PRESS = 0.9f;

	[Token(Token = "0x4000FB5")]
	protected const float THR_GRIP_RELEASE = 0.9f;

	[Token(Token = "0x4000FB6")]
	protected const float THR_GRIP_PRESS = 0.95f;

	[Token(Token = "0x4000FB7")]
	protected const float THR_SNAP_TURN_RELEASE = 0.5f;

	[Token(Token = "0x4000FB8")]
	protected const float THR_SNAP_TURN_PRESS = 0.6f;

	[Token(Token = "0x4000FB9")]
	public const float THR_DYNAMIC_WINDOW = 0.08f;

	[Token(Token = "0x4000FBA")]
	public const float THR_DYNAMIC_DEADZONE = 0.03f;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool isRightHand;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private InputAction? currentGrabAction;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputDevice device;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localHandRotationPrev;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 angularVelocity;

	[Token(Token = "0x1700018C")]
	protected int ButtonsNum
	{
		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0xE1E93C", Offset = "0xE1E93C", VA = "0xE1E93C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1252C", Offset = "0xA1252C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700018D")]
	public virtual bool IsReadyForInput
	{
		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xE1E944", Offset = "0xE1E944", VA = "0xE1E944", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700018E")]
	public InputDevice Device
	{
		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xE1EA14", Offset = "0xE1EA14", VA = "0xE1EA14")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x1700018F")]
	public virtual Vector3 Velocity
	{
		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xE1F2A8", Offset = "0xE1F2A8", VA = "0xE1F2A8", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000190")]
	public Vector3 AngularVelocity
	{
		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xE1F3F4", Offset = "0xE1F3F4", VA = "0xE1F3F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0xE1EA20", Offset = "0xE1EA20", VA = "0xE1EA20")]
	public NeatVR_Controller(InputDevice device, bool isRightHand)
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0xE1ECA0", Offset = "0xE1ECA0", VA = "0xE1ECA0", Slot = "1")]
	~NeatVR_Controller()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0xE1EDFC", Offset = "0xE1EDFC", VA = "0xE1EDFC", Slot = "5")]
	protected virtual void CreateButtons()
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0xE1F120", Offset = "0xE1F120", VA = "0xE1F120", Slot = "6")]
	public virtual void ApplyControllerPoseTo(Transform transform)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xE1F400", Offset = "0xE1F400", VA = "0xE1F400", Slot = "8")]
	public virtual void UpdateInputDelta()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xE1F4B0", Offset = "0xE1F4B0", VA = "0xE1F4B0")]
	protected bool HasValidDevice()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xE1F658", Offset = "0xE1F658", VA = "0xE1F658")]
	protected void CalculateAngularVelocity()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xE1F89C", Offset = "0xE1F89C", VA = "0xE1F89C", Slot = "9")]
	protected virtual void UpdatePlatformSpecificInputDelta(bool rightHand)
	{
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xE1F504", Offset = "0xE1F504", VA = "0xE1F504")]
	protected void UpdateButton(InputAction action, NeatVR_Input.AbstractButtonName buttonName, bool right)
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xE1FD58", Offset = "0xE1FD58", VA = "0xE1FD58")]
	public void UpdateGrab(bool isUsingMenu)
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xE1FF00", Offset = "0xE1FF00", VA = "0xE1FF00")]
	public bool OnGrabDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xE1FF08", Offset = "0xE1FF08", VA = "0xE1FF08")]
	public bool OnGrabUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xE1FF10", Offset = "0xE1FF10", VA = "0xE1FF10")]
	public bool OnGrabHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xE1FF18", Offset = "0xE1FF18", VA = "0xE1FF18")]
	public void TriggerHapticPulse(float amplitude)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xE1FF74", Offset = "0xE1FF74", VA = "0xE1FF74")]
	public void StopHapticPulse()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xE1FFB4", Offset = "0xE1FFB4", VA = "0xE1FFB4")]
	public bool GetFingerCurls(out float[] curlData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xE1FFD8", Offset = "0xE1FFD8", VA = "0xE1FFD8", Slot = "10")]
	public virtual Vector2 GetStickInput(bool isRightHand)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xE202AC", Offset = "0xE202AC", VA = "0xE202AC", Slot = "11")]
	public virtual bool GetOnPress(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xE2030C", Offset = "0xE2030C", VA = "0xE2030C", Slot = "12")]
	public virtual bool GetOnRelease(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xE2036C", Offset = "0xE2036C", VA = "0xE2036C", Slot = "13")]
	public virtual bool GetIsPressed(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xE203CC", Offset = "0xE203CC", VA = "0xE203CC")]
	private void OnSettingsChanged(SettingsChangedEvent e)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xE20418", Offset = "0xE20418", VA = "0xE20418")]
	private void OnTrackingLost(XRNodeState xrNode)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xE2055C", Offset = "0xE2055C", VA = "0xE2055C", Slot = "14")]
	protected virtual void OnDominantHandChanged(bool useLeftHand)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xE20560", Offset = "0xE20560", VA = "0xE20560", Slot = "15")]
	protected virtual void OnSmoothLocomotionSettingChanged(bool enabled)
	{
	}
}
[Token(Token = "0x2000283")]
public struct ShakeTracker
{
	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 defaultDirection;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 currentDirection;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 previousDirection;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float shakeDuration;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float shakeErrorDuration;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float angleThreshold;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastShakeDuration;

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xAD66E0", Offset = "0xAD66E0", VA = "0xAD66E0")]
	public ShakeTracker(Vector3 dir, float shakeAngleThresh)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xAD6704", Offset = "0xAD6704", VA = "0xAD6704")]
	public float CheckShaking(bool isMoving, Vector3 vel, out Vector3 dir)
	{
		return default(float);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xAD6710", Offset = "0xAD6710", VA = "0xAD6710")]
	private void ResetDetection()
	{
	}
}
[Token(Token = "0x2000284")]
public class NeatVR
{
	[Token(Token = "0x17000191")]
	public static Vector3 HeadPosLocal
	{
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xE1E2E0", Offset = "0xE1E2E0", VA = "0xE1E2E0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000192")]
	public static Vector3 EyePosLeftLocal
	{
		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xE1E344", Offset = "0xE1E344", VA = "0xE1E344")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000193")]
	public static Vector3 EyePosRightLocal
	{
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xE1E3A8", Offset = "0xE1E3A8", VA = "0xE1E3A8")]
		get
		{
			return default(Vector3);
		}
	}
}
[Token(Token = "0x2000285")]
public class NeatVR_Button
{
	[Token(Token = "0x2000286")]
	public enum ButtonPressChange
	{
		[Token(Token = "0x4000FDD")]
		None,
		[Token(Token = "0x4000FDE")]
		Press,
		[Token(Token = "0x4000FDF")]
		Release
	}

	[Token(Token = "0x2000287")]
	public enum ButtonState
	{
		[Token(Token = "0x4000FE1")]
		Pressed,
		[Token(Token = "0x4000FE2")]
		Released
	}

	[Token(Token = "0x2000288")]
	public enum ThresholdType
	{
		[Token(Token = "0x4000FE4")]
		Static,
		[Token(Token = "0x4000FE5")]
		Dynamic
	}

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ButtonPressChange change;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ButtonState state;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ThresholdType thresholdType;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float releaseInterpolator;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float value;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float thrStaticRelease;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float thrStaticPress;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thrDynamicRelease;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float thrDynamicPress;

	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool calcInterpolator;

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xE1E40C", Offset = "0xE1E40C", VA = "0xE1E40C")]
	public NeatVR_Button()
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xE1E428", Offset = "0xE1E428", VA = "0xE1E428")]
	public static NeatVR_Button CreateAnalogStatic(bool calcInterpolator = false, float thrStaticRelease = 0.05f, float thrStaticPress = 0.95f)
	{
		return null;
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xE1E4C4", Offset = "0xE1E4C4", VA = "0xE1E4C4")]
	public static NeatVR_Button CreateAnalogDynamic(bool calcInterpolator = false)
	{
		return null;
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xE1E554", Offset = "0xE1E554", VA = "0xE1E554")]
	public void Update(bool valueNew)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xE1E590", Offset = "0xE1E590", VA = "0xE1E590")]
	public void Update(float valueNew)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xE1E5AC", Offset = "0xE1E5AC", VA = "0xE1E5AC")]
	private void UpdateStatic(float valueNew)
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xE1E694", Offset = "0xE1E694", VA = "0xE1E694")]
	private void UpdateDynamic(float valueNew)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xE1E7F4", Offset = "0xE1E7F4", VA = "0xE1E7F4")]
	private void UpdateDynamicReleaseThreshold(float valueNew)
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xE1E880", Offset = "0xE1E880", VA = "0xE1E880")]
	private void UpdateDynamicPressThreshold(float valueNew)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xE1E90C", Offset = "0xE1E90C", VA = "0xE1E90C")]
	public bool GetOnPress()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xE1E91C", Offset = "0xE1E91C", VA = "0xE1E91C")]
	public bool GetOnRelease()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xE1E92C", Offset = "0xE1E92C", VA = "0xE1E92C")]
	public bool IsPressed()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000289")]
public class NeatVR_ControllerOffset
{
	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 localPosition;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion localRotation;

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xE20564", Offset = "0xE20564", VA = "0xE20564")]
	public NeatVR_ControllerOffset()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xE2060C", Offset = "0xE2060C", VA = "0xE2060C")]
	public NeatVR_ControllerOffset(Vector3 pos, Vector3 eulerAngles)
	{
	}
}
[Token(Token = "0x200028A")]
public class NeatVR_Hardware
{
	[Token(Token = "0x200028B")]
	public enum TrackingSpace
	{
		[Token(Token = "0x4000FF0")]
		Unknown,
		[Token(Token = "0x4000FF1")]
		ThreeSixty,
		[Token(Token = "0x4000FF2")]
		ForwardFacing,
		[Token(Token = "0x4000FF3")]
		Debug
	}

	[Token(Token = "0x200028C")]
	public enum Controller
	{
		[Token(Token = "0x4000FF5")]
		Unknown,
		[Token(Token = "0x4000FF6")]
		ViveWands,
		[Token(Token = "0x4000FF7")]
		OculusTouch,
		[Token(Token = "0x4000FF8")]
		Knuckles,
		[Token(Token = "0x4000FF9")]
		WMR,
		[Token(Token = "0x4000FFA")]
		Debug,
		[Token(Token = "0x4000FFB")]
		PSVR2Controller,
		[Token(Token = "0x4000FFC")]
		PICO3,
		[Token(Token = "0x4000FFD")]
		PICO4
	}

	[Token(Token = "0x200028D")]
	public enum Hmd
	{
		[Token(Token = "0x4000FFF")]
		Unknown,
		[Token(Token = "0x4001000")]
		Vive,
		[Token(Token = "0x4001001")]
		OculusRift,
		[Token(Token = "0x4001002")]
		WMR,
		[Token(Token = "0x4001003")]
		Debug,
		[Token(Token = "0x4001004")]
		PSVR2,
		[Token(Token = "0x4001005")]
		PICO3,
		[Token(Token = "0x4001006")]
		PICO4
	}

	[Serializable]
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBA3C", Offset = "0x9FBA3C")]
	private sealed class <>c
	{
		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xE22A00", Offset = "0xE22A00", VA = "0xE22A00")]
		public <>c()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xE22A08", Offset = "0xE22A08", VA = "0xE22A08")]
		internal void <.cctor>b__28_0()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xE22A0C", Offset = "0xE22A0C", VA = "0xE22A0C")]
		internal void <.cctor>b__28_1()
		{
		}
	}

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrackingSpace trackingSpace;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Controller controllerType;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Hmd headsetType;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02AE8", Offset = "0xA02AE8")]
	private static Action OnHeadsetTypeFound;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static NeatVR_ControllerOffset controllerOffsetOculus;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static NeatVR_ControllerOffset controllerOffsetVive;

	[Token(Token = "0x17000194")]
	public static bool FoundTrackingSpaceType
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xE219E0", Offset = "0xE219E0", VA = "0xE219E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000195")]
	public static bool FoundControllerType
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xE1EC30", Offset = "0xE1EC30", VA = "0xE1EC30")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000196")]
	public static bool FoundHeadsetType
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xE21A50", Offset = "0xE21A50", VA = "0xE21A50")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action OnControllerTypeFound
	{
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xE21AC0", Offset = "0xE21AC0", VA = "0xE21AC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1253C", Offset = "0xA1253C")]
		add
		{
		}
		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xE21BB0", Offset = "0xE21BB0", VA = "0xE21BB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1254C", Offset = "0xA1254C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xE21CA0", Offset = "0xE21CA0", VA = "0xE21CA0")]
	public static NeatVR_ControllerOffset GetControllerOffset()
	{
		return null;
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xE21E14", Offset = "0xE21E14", VA = "0xE21E14")]
	public static bool TryDetectHardware()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xE22690", Offset = "0xE22690", VA = "0xE22690")]
	private static void SetCurrentControllerType(Controller controller)
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xE22530", Offset = "0xE22530", VA = "0xE22530")]
	private static void SetCurrentHeadsetType(Hmd hmd)
	{
	}
}
[Token(Token = "0x200028F")]
public static class NeatVR_Input
{
	[Token(Token = "0x2000290")]
	public enum AbstractButtonName
	{
		[Token(Token = "0x400101E")]
		Grab,
		[Token(Token = "0x400101F")]
		Inventory,
		[Token(Token = "0x4001020")]
		Teleport,
		[Token(Token = "0x4001021")]
		SnapTurn,
		[Token(Token = "0x4001022")]
		Menu,
		[Token(Token = "0x4001023")]
		CloseMenu,
		[Token(Token = "0x4001024")]
		UseTool,
		[Token(Token = "0x4001025")]
		NumButtons
	}

	[Token(Token = "0x2000291")]
	private struct HarwareInputButton
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string buttonName;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isAnalog;
	}

	[Token(Token = "0x2000292")]
	public class HardwareInput
	{
		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HarwareInputButton inputLeft;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HarwareInputButton inputRight;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xE23E74", Offset = "0xE23E74", VA = "0xE23E74")]
		public HardwareInput(string left, string right, bool analog = false)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xE240FC", Offset = "0xE240FC", VA = "0xE240FC")]
		public bool IsAnalog(bool isRight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xE23F58", Offset = "0xE23F58", VA = "0xE23F58")]
		public bool GetButton(bool isRight)
		{
			return default(bool);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xE22F88", Offset = "0xE22F88", VA = "0xE22F88")]
		public float GetAxis(bool isRight)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000293")]
	public class AbstractedInput
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HardwareInput oculus;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HardwareInput vive;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HardwareInput knuckles;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HardwareInput xr;

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xE23ED8", Offset = "0xE23ED8", VA = "0xE23ED8")]
		public AbstractedInput(HardwareInput oculus, HardwareInput vive, HardwareInput knuckles, HardwareInput xr)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xE22A88", Offset = "0xE22A88", VA = "0xE22A88")]
		public bool GetButton(NeatVR_Hardware.Controller controllerType, bool right)
		{
			return default(bool);
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xE22A10", Offset = "0xE22A10", VA = "0xE22A10")]
		public float GetAxis(NeatVR_Hardware.Controller controllerType, bool right)
		{
			return default(float);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xE22E98", Offset = "0xE22E98", VA = "0xE22E98")]
		public bool IsAnalog(NeatVR_Hardware.Controller controllerType, bool right)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int lastNodeStateGrabFrame;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<XRNodeState> nodeStates;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Vector3 lastLeftPosition;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Vector3 lastRightPosition;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static HardwareInput inputAxisTrigger;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static HardwareInput inputAxisGrip;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static HardwareInput inputAxisStickHorizontal;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static HardwareInput inputBtnOculusFaceFar;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static HardwareInput inputBtnOculusFaceNear;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static HardwareInput inputBtnOculusStick;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static HardwareInput inputBtnViveTouchpadLeft;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static HardwareInput inputBtnViveTouchpadRight;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static HardwareInput inputBtnViveTouchpad;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static HardwareInput inputBtnViveMenu;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static HardwareInput inputBtnKnucklesMenu;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static HardwareInput inputBtnKnucklesInventory;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static HardwareInput inputAxisStickVertical;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static HardwareInput inputNull;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static HardwareInput inputBtnXrPrimary;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static HardwareInput inputBtnXrSecondary;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static AbstractedInput[] abstractedButtons;

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xE1FBA8", Offset = "0xE1FBA8", VA = "0xE1FBA8")]
	public static float GetAnalogButtonState(AbstractButtonName buttonName, bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xE1FC80", Offset = "0xE1FC80", VA = "0xE1FC80")]
	public static bool GetDigitalButtonState(AbstractButtonName buttonName, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xE1F998", Offset = "0xE1F998", VA = "0xE1F998")]
	public static float GetTurnLeftButtonState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xE1FA34", Offset = "0xE1FA34", VA = "0xE1FA34")]
	public static float GetTurnRightButtonState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xE22AE8", Offset = "0xE22AE8", VA = "0xE22AE8")]
	public static bool GetStickForwardButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xE22B80", Offset = "0xE22B80", VA = "0xE22B80")]
	public static bool GetStickBackwardButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xE22C1C", Offset = "0xE22C1C", VA = "0xE22C1C")]
	public static bool GetStickLeftButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xE22CB8", Offset = "0xE22CB8", VA = "0xE22CB8")]
	public static bool GetStickRightButtonState(out float inputScale, bool right, float threshold = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xE22D50", Offset = "0xE22D50", VA = "0xE22D50")]
	public static bool GetHasVerticalInput(float threshold, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xE22DF4", Offset = "0xE22DF4", VA = "0xE22DF4")]
	public static bool GetHasHorizontalInput(float threshold, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xE20074", Offset = "0xE20074", VA = "0xE20074")]
	public static float GetStickHorizontalState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xE20210", Offset = "0xE20210", VA = "0xE20210")]
	public static float GetStickVerticalState(bool right)
	{
		return default(float);
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xE22F08", Offset = "0xE22F08", VA = "0xE22F08")]
	private static float GetThresholdAdjustedInputScale(float inputVal)
	{
		return default(float);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xE1F234", Offset = "0xE1F234", VA = "0xE1F234")]
	public static Vector3 GetHandPosLocal(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xE1F1C0", Offset = "0xE1F1C0", VA = "0xE1F1C0")]
	public static Quaternion GetHandRotLocal(bool right)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xE22FB0", Offset = "0xE22FB0", VA = "0xE22FB0")]
	private static void UpdateNodeStatesIfNeeded()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xE225B8", Offset = "0xE225B8", VA = "0xE225B8")]
	public static string GetControllerName(bool right)
	{
		return null;
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xE23094", Offset = "0xE23094", VA = "0xE23094")]
	public static bool TryGetHandNode(bool right, out XRNodeState handNode)
	{
		return default(bool);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xE1E9B0", Offset = "0xE1E9B0", VA = "0xE1E9B0")]
	public static bool GetHandReadyForInput(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xE23264", Offset = "0xE23264", VA = "0xE23264")]
	public static bool GetHandExists(bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xE232EC", Offset = "0xE232EC", VA = "0xE232EC")]
	public static Vector3 GetHandVelocityLocal(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xE1F314", Offset = "0xE1F314", VA = "0xE1F314")]
	public static Vector3 GetHandVelocity(bool right)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xE1FAD0", Offset = "0xE1FAD0", VA = "0xE1FAD0")]
	public static bool ButtonIsAnalog(AbstractButtonName button, bool right)
	{
		return default(bool);
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xE2354C", Offset = "0xE2354C", VA = "0xE2354C")]
	public static void RebindAbstractButton(AbstractButtonName name, AbstractedInput newAbrstractedInput)
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xE23614", Offset = "0xE23614", VA = "0xE23614")]
	public static AbstractedInput GetAbstractButton(AbstractButtonName name)
	{
		return null;
	}
}
[Token(Token = "0x2000294")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBA4C", Offset = "0x9FBA4C")]
public class NeatVR_PlatformDefines : ScriptableObject
{
	[Token(Token = "0x2000295")]
	public enum PlatformEnum
	{
		[Token(Token = "0x4001030")]
		Android,
		[Token(Token = "0x4001031")]
		Default,
		[Token(Token = "0x4001032")]
		PSVR2,
		[Token(Token = "0x4001033")]
		COUNT
	}

	[Serializable]
	[Token(Token = "0x2000296")]
	public struct DefineInfo
	{
		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string DefineKeyWord;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool DefineState;
	}

	[Serializable]
	[Token(Token = "0x2000297")]
	public struct PlatformInfo
	{
		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PlatformEnum Platform;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DefineInfo[] Defines;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xAD9338", Offset = "0xAD9338", VA = "0xAD9338")]
		public void ApplyDefines()
		{
		}
	}

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlatformInfo[] Platforms;

	[Token(Token = "0x17000197")]
	public int PlatformCount
	{
		[Token(Token = "0x6001017")]
		[Address(RVA = "0xE24114", Offset = "0xE24114", VA = "0xE24114")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xE2411C", Offset = "0xE2411C", VA = "0xE2411C")]
	public void ApplyDefines()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xE241F0", Offset = "0xE241F0", VA = "0xE241F0")]
	public NeatVR_PlatformDefines()
	{
	}
}
[Token(Token = "0x2000298")]
public class NeatVR_Player : MonoBehaviour
{
	[Token(Token = "0x2000299")]
	public delegate void PlayerTeleportDelegate(TeleportDestinationInfo destinationInfo);

	[Serializable]
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBAB4", Offset = "0x9FBAB4")]
	private sealed class <>c
	{
		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__105_0;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action <>9__105_1;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__105_2;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__107_0;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__108_0;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action <>9__108_1;

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xE291C4", Offset = "0xE291C4", VA = "0xE291C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xE291CC", Offset = "0xE291CC", VA = "0xE291CC")]
		internal void <ShowLoadingScreen>b__105_0()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xE29278", Offset = "0xE29278", VA = "0xE29278")]
		internal void <ShowLoadingScreen>b__105_1()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xE29328", Offset = "0xE29328", VA = "0xE29328")]
		internal void <ShowLoadingScreen>b__105_2()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xE293D4", Offset = "0xE293D4", VA = "0xE293D4")]
		internal void <StartPlaying>b__107_0()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xE293E0", Offset = "0xE293E0", VA = "0xE293E0")]
		internal void <StartPlayingInHouse>b__108_0()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xE293EC", Offset = "0xE293EC", VA = "0xE293EC")]
		internal void <StartPlayingInHouse>b__108_1()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xE29468", Offset = "0xE29468", VA = "0xE29468")]
		internal void <.cctor>b__121_0(NeatVR_Player <p0>)
		{
		}
	}

	[Token(Token = "0x200029B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBAC4", Offset = "0x9FBAC4")]
	private sealed class <>c__DisplayClass106_0
	{
		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action OnComplete;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action AfterFade;

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xE28468", Offset = "0xE28468", VA = "0xE28468")]
		public <>c__DisplayClass106_0()
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xE2946C", Offset = "0xE2946C", VA = "0xE2946C")]
		internal void <ShowLoadingScreen>b__0()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xE2952C", Offset = "0xE2952C", VA = "0xE2952C")]
		internal void <ShowLoadingScreen>b__1()
		{
		}
	}

	[Token(Token = "0x200029C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBAD4", Offset = "0x9FBAD4")]
	private sealed class <>c__DisplayClass107_0
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool startInTutorial;

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xE2862C", Offset = "0xE2862C", VA = "0xE2862C")]
		public <>c__DisplayClass107_0()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xE29540", Offset = "0xE29540", VA = "0xE29540")]
		internal void <StartPlaying>b__1()
		{
		}
	}

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBAE4", Offset = "0x9FBAE4")]
	private sealed class <DetectHardwareTypeLoop>d__115 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0xE29718", Offset = "0xE29718", VA = "0xE29718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xE29780", Offset = "0xE29780", VA = "0xE29780", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xE28EE0", Offset = "0xE28EE0", VA = "0xE28EE0")]
		[DebuggerHidden]
		public <DetectHardwareTypeLoop>d__115(int <>1__state)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xE29678", Offset = "0xE29678", VA = "0xE29678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xE2967C", Offset = "0xE2967C", VA = "0xE2967C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xE29720", Offset = "0xE29720", VA = "0xE29720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static NeatVR_Player instance;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool readyToStart;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool fullyInitialized;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02AF8", Offset = "0xA02AF8")]
	private static bool <CanOpenInventory>k__BackingField;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Transform origin;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform head;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecordingCamera recorderCamera;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LoadingScreen m_loadingScreen;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 leftEyePosWorld;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 rightEyePosWorld;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 lastValidPlayerPosition;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Vector3 InvalidPosition;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Camera headCamera;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayerState playerState;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MissionBeaconMapState[] BeaconMapStates;

	[Token(Token = "0x4001047")]
	private const float SNAP_TURN_AMOUNT = 45f;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float m_heightAdjustmentOffset;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NeatVR_PlatformDefines PlatformDefines;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02B38", Offset = "0xA02B38")]
	public Material SSAOMat;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA02B70", Offset = "0xA02B70")]
	public float SSAOIntensity;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA02B88", Offset = "0xA02B88")]
	public float SSAOBlurAmount;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA02BA0", Offset = "0xA02BA0")]
	public float SSAORadius;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA02BB8", Offset = "0xA02BB8")]
	public float SSAOArea;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool SSAOFastMode;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static PlayerTeleportDelegate PlayerTeleported;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Action<NeatVR_Player> OnPlayerSnapTurned;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02BD0", Offset = "0xA02BD0")]
	private static bool <IsFadingLoadingScreen>k__BackingField;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02BE0", Offset = "0xA02BE0")]
	private static bool <IsUsingDebugCamera>k__BackingField;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02BF0", Offset = "0xA02BF0")]
	private bool <HasMovingPlatform>k__BackingField;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02C00", Offset = "0xA02C00")]
	private IMovingPlatform <MovingPlatform>k__BackingField;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool didCompleteTutorial;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool m_heightOffsetInitialized;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 m_lastHeadPos;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02C10", Offset = "0xA02C10")]
	private static bool <InputDisabled>k__BackingField;

	[Token(Token = "0x17000198")]
	public static bool CanOpenInventory
	{
		[Token(Token = "0x600101B")]
		[Address(RVA = "0xE2425C", Offset = "0xE2425C", VA = "0xE2425C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1255C", Offset = "0xA1255C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600101C")]
		[Address(RVA = "0xE242C4", Offset = "0xE242C4", VA = "0xE242C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1256C", Offset = "0xA1256C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000199")]
	public static float HeightAdjustmentOffset
	{
		[Token(Token = "0x600101D")]
		[Address(RVA = "0xE24334", Offset = "0xE24334", VA = "0xE24334")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700019A")]
	public static bool IsFadingLoadingScreen
	{
		[Token(Token = "0x600101E")]
		[Address(RVA = "0xE243A8", Offset = "0xE243A8", VA = "0xE243A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1257C", Offset = "0xA1257C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600101F")]
		[Address(RVA = "0xE24410", Offset = "0xE24410", VA = "0xE24410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1258C", Offset = "0xA1258C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public static bool IsUsingDebugCamera
	{
		[Token(Token = "0x6001020")]
		[Address(RVA = "0xE24480", Offset = "0xE24480", VA = "0xE24480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1259C", Offset = "0xA1259C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001021")]
		[Address(RVA = "0xE244E8", Offset = "0xE244E8", VA = "0xE244E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA125AC", Offset = "0xA125AC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public bool HasMovingPlatform
	{
		[Token(Token = "0x6001022")]
		[Address(RVA = "0xE24558", Offset = "0xE24558", VA = "0xE24558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA125BC", Offset = "0xA125BC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001023")]
		[Address(RVA = "0xE24560", Offset = "0xE24560", VA = "0xE24560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA125CC", Offset = "0xA125CC")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public IMovingPlatform MovingPlatform
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0xE2456C", Offset = "0xE2456C", VA = "0xE2456C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA125DC", Offset = "0xA125DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001025")]
		[Address(RVA = "0xE24574", Offset = "0xE24574", VA = "0xE24574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA125EC", Offset = "0xA125EC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019E")]
	public static NeatVR_Player Instance
	{
		[Token(Token = "0x6001028")]
		[Address(RVA = "0xE245E8", Offset = "0xE245E8", VA = "0xE245E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019F")]
	public static bool IsReady
	{
		[Token(Token = "0x6001029")]
		[Address(RVA = "0xE24650", Offset = "0xE24650", VA = "0xE24650")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public static bool IsFullyInitialized
	{
		[Token(Token = "0x600102A")]
		[Address(RVA = "0xE246B8", Offset = "0xE246B8", VA = "0xE246B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A1")]
	public static bool InputDisabled
	{
		[Token(Token = "0x600102B")]
		[Address(RVA = "0xE24720", Offset = "0xE24720", VA = "0xE24720")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA125FC", Offset = "0xA125FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600102C")]
		[Address(RVA = "0xE24788", Offset = "0xE24788", VA = "0xE24788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1260C", Offset = "0xA1260C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001A2")]
	public static Transform Head
	{
		[Token(Token = "0x600102D")]
		[Address(RVA = "0xE247F8", Offset = "0xE247F8", VA = "0xE247F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public static Vector3 LocalHeadPos
	{
		[Token(Token = "0x600102E")]
		[Address(RVA = "0xE24898", Offset = "0xE24898", VA = "0xE24898")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A4")]
	public static Transform Origin
	{
		[Token(Token = "0x600102F")]
		[Address(RVA = "0xE1F828", Offset = "0xE1F828", VA = "0xE1F828")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A5")]
	public static Camera HeadCamera
	{
		[Token(Token = "0x6001030")]
		[Address(RVA = "0xE24968", Offset = "0xE24968", VA = "0xE24968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A6")]
	public Vector3 LeftEyePosWorld
	{
		[Token(Token = "0x6001033")]
		[Address(RVA = "0xE24DE4", Offset = "0xE24DE4", VA = "0xE24DE4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001A7")]
	public Vector3 RightEyePosWorld
	{
		[Token(Token = "0x6001034")]
		[Address(RVA = "0xE24EAC", Offset = "0xE24EAC", VA = "0xE24EAC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xE2457C", Offset = "0xE2457C", VA = "0xE2457C")]
	public void SetMovingPlatform(IMovingPlatform mover)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xE245B8", Offset = "0xE245B8", VA = "0xE245B8")]
	public void UnsetMovingPlatform()
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xE24ABC", Offset = "0xE24ABC", VA = "0xE24ABC")]
	public static bool ObjectIsNearbyPlayer(Vector3 objectPos, float maxDistance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xE24C34", Offset = "0xE24C34", VA = "0xE24C34")]
	public static bool PlayerIsLookingAtObject(Vector3 objectPos, float minDotProd)
	{
		return default(bool);
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xE24F74", Offset = "0xE24F74", VA = "0xE24F74")]
	public void SetHeadCamera(ref Camera cam, bool isDebugCamera)
	{
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xE25170", Offset = "0xE25170", VA = "0xE25170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xE25438", Offset = "0xE25438", VA = "0xE25438")]
	public void SetPlayerState(PlayerState ps)
	{
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0xE25440", Offset = "0xE25440", VA = "0xE25440")]
	private void InitFromPlayerState(bool startInTutorial)
	{
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xE25B18", Offset = "0xE25B18", VA = "0xE25B18")]
	private void InitializeHeightOffset()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xE25B90", Offset = "0xE25B90", VA = "0xE25B90")]
	internal void ToggleSSAO()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xE2594C", Offset = "0xE2594C", VA = "0xE2594C")]
	private void AssignItemToHand(SaveID id, bool right)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xE25B94", Offset = "0xE25B94", VA = "0xE25B94")]
	private void Start()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xE25C20", Offset = "0xE25C20", VA = "0xE25C20")]
	private void Update()
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xE260D4", Offset = "0xE260D4", VA = "0xE260D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0xE261F8", Offset = "0xE261F8", VA = "0xE261F8")]
	public static bool TryGetHeadVelocity(out Vector3 velocity)
	{
		return default(bool);
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xE26538", Offset = "0xE26538", VA = "0xE26538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xE26198", Offset = "0xE26198", VA = "0xE26198")]
	private void UpdateEyePositions()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xE265A0", Offset = "0xE265A0", VA = "0xE265A0")]
	private void MakePlayerLookInPrimaryDirection()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xE266C8", Offset = "0xE266C8", VA = "0xE266C8")]
	public static Vector3 GetFlatHeadLookDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0xE268F4", Offset = "0xE268F4", VA = "0xE268F4")]
	public static Vector3 GetPositionAbovePlayer(float distanceAbove)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xE26AC4", Offset = "0xE26AC4", VA = "0xE26AC4")]
	public static Vector3 GetPositionInFrontOfPlayer(float distanceAhead)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xE26C78", Offset = "0xE26C78", VA = "0xE26C78")]
	public static void SnapTurn(bool right)
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xE27078", Offset = "0xE27078", VA = "0xE27078")]
	public static void TeleportTo(Vector3 position)
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xE273F8", Offset = "0xE273F8", VA = "0xE273F8")]
	public static void TeleportTo(Transform newPos)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xE274D0", Offset = "0xE274D0", VA = "0xE274D0")]
	public static void TeleportTo(Transform newPos, TeleportDestinationInfo locomotionArcDestination)
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xE27140", Offset = "0xE27140", VA = "0xE27140")]
	public static void TeleportTo(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0xE275F8", Offset = "0xE275F8", VA = "0xE275F8")]
	public static void TeleportToWithSnap(Vector3 position)
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xE27564", Offset = "0xE27564", VA = "0xE27564")]
	private static void InvokeTeleported(TeleportDestinationInfo locomotionArcDestination)
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xE27B04", Offset = "0xE27B04", VA = "0xE27B04")]
	public static void MoveAwayFromEverything()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xE27BE4", Offset = "0xE27BE4", VA = "0xE27BE4")]
	public static void ResetToLastKnownPosition()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xE27CB4", Offset = "0xE27CB4", VA = "0xE27CB4")]
	private static bool PositionIsValid(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xE27CE4", Offset = "0xE27CE4", VA = "0xE27CE4")]
	public static Vector3 GetLastValidPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xE27F34", Offset = "0xE27F34", VA = "0xE27F34")]
	public static void ShowLoadingScreen(bool setLoadingStateAfterFade = false)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xE282A4", Offset = "0xE282A4", VA = "0xE282A4")]
	public static void ShowLoadingScreen(Action AfterFade, Action OnComplete)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xE28470", Offset = "0xE28470", VA = "0xE28470")]
	public static void StartPlaying(bool startInTutorial)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xE28634", Offset = "0xE28634", VA = "0xE28634")]
	public static void StartPlayingInHouse()
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0xE28820", Offset = "0xE28820", VA = "0xE28820")]
	public static void TeleportToHouseImmediately()
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0xE28B94", Offset = "0xE28B94", VA = "0xE28B94")]
	public static void UnlockInventory()
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0xE28C3C", Offset = "0xE28C3C", VA = "0xE28C3C")]
	public static bool HasGloveAbility(GemType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0xE28D94", Offset = "0xE28D94", VA = "0xE28D94")]
	public static void DisablePlayerInput()
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xE28E3C", Offset = "0xE28E3C", VA = "0xE28E3C")]
	public static void EnablePlayerInput()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xE26F78", Offset = "0xE26F78", VA = "0xE26F78")]
	private void UpdateHandsAfterQuickMovement()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xE25BC0", Offset = "0xE25BC0", VA = "0xE25BC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1261C", Offset = "0xA1261C")]
	private IEnumerator DetectHardwareTypeLoop()
	{
		return null;
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xE1A620", Offset = "0xE1A620", VA = "0xE1A620")]
	public static void UpdateHeightOffset(float newHeightOffset)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xE28F0C", Offset = "0xE28F0C", VA = "0xE28F0C")]
	public void UpdateMissionBeaconMapState(MissionBeaconMapType mapToUpdate, MissionBeaconMapState newState)
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xE28F4C", Offset = "0xE28F4C", VA = "0xE28F4C")]
	public MissionBeaconMapState GetMissionBeaconMapState(MissionBeaconMapType mapToFetch)
	{
		return default(MissionBeaconMapState);
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xE28F88", Offset = "0xE28F88", VA = "0xE28F88")]
	public MissionBeaconMapState[] GetMissionBeaconMapStates()
	{
		return null;
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xE28F90", Offset = "0xE28F90", VA = "0xE28F90")]
	public NeatVR_Player()
	{
	}
}
[Token(Token = "0x200029E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBAF4", Offset = "0x9FBAF4")]
public class PaintColor : ScriptableObject
{
	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlight;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color shadow;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int shaderPropPaintHighlight;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int shaderPropPaintShadow;

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xE2F094", Offset = "0xE2F094", VA = "0xE2F094")]
	public void ApplyTo(MaterialPropertyBlock mpb)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xE2F144", Offset = "0xE2F144", VA = "0xE2F144")]
	public static void Clear(MaterialPropertyBlock mpb)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xE2F1F8", Offset = "0xE2F1F8", VA = "0xE2F1F8")]
	public static void ApplyTo(MaterialPropertyBlock mpb, Color hightlightOverride, Color shadowOverride)
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xE2F2EC", Offset = "0xE2F2EC", VA = "0xE2F2EC")]
	public PaintColor()
	{
	}
}
[Token(Token = "0x200029F")]
public class Paintable : SaveableComponent, IInitializable
{
	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool colorChildren;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color32 currentHighlight;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color32 currentShadow;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnSucessfulPaintEvent;

	[Token(Token = "0x600107F")]
	[Address(RVA = "0xE2F54C", Offset = "0xE2F54C", VA = "0xE2F54C", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xE2F768", Offset = "0xE2F768", VA = "0xE2F768")]
	public bool TryPaint(PaintColor paint)
	{
		return default(bool);
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xE2F608", Offset = "0xE2F608", VA = "0xE2F608")]
	private bool ApplyPaintColors(Color32 highlight, Color32 shadow)
	{
		return default(bool);
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xE2F7E4", Offset = "0xE2F7E4", VA = "0xE2F7E4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xE2F960", Offset = "0xE2F960", VA = "0xE2F960")]
	public Paintable()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A0")]
public class PaintableState : ComponentState
{
	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32Serializable highlightColor;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color32Serializable shadowColor;

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xDE8450", Offset = "0xDE8450", VA = "0xDE8450")]
	public PaintableState(Color32 highlight, Color32 shadow)
	{
	}
}
[Token(Token = "0x20002A1")]
[ExecuteAlways]
public class Paintball : MonoBehaviour
{
	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rnd;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PaintColor color;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject splashParticlePrefab;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isEraserPaintball;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem paintSplash;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabbable grabbable;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private PaintSplashColor paintballColor;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Rigidbody m_rigidBody;

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xDE84BC", Offset = "0xDE84BC", VA = "0xDE84BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xDE85A4", Offset = "0xDE85A4", VA = "0xDE85A4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xDE88CC", Offset = "0xDE88CC", VA = "0xDE88CC")]
	public Paintball()
	{
	}
}
[Token(Token = "0x20002A2")]
public class DebugController : NeatVR_Controller
{
	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 controllerPosition;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 prevControllerPosition;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion controllerRotation;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 velocity;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float angle;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isCurrentlySelected;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool[] currentInput;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool[] previousInput;

	[Token(Token = "0x170001AA")]
	public override bool IsReadyForInput
	{
		[Token(Token = "0x6001088")]
		[Address(RVA = "0xC35178", Offset = "0xC35178", VA = "0xC35178", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AB")]
	public override Vector3 Velocity
	{
		[Token(Token = "0x6001089")]
		[Address(RVA = "0xC35180", Offset = "0xC35180", VA = "0xC35180", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xC3518C", Offset = "0xC3518C", VA = "0xC3518C")]
	public DebugController(bool isRightHand)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xC352AC", Offset = "0xC352AC", VA = "0xC352AC", Slot = "8")]
	public override void UpdateInputDelta()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xC354F0", Offset = "0xC354F0", VA = "0xC354F0", Slot = "11")]
	public override bool GetOnPress(InputAction button)
	{
		return default(bool);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xC35560", Offset = "0xC35560", VA = "0xC35560", Slot = "12")]
	public override bool GetOnRelease(InputAction button)
	{
		return default(bool);
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xC355D0", Offset = "0xC355D0", VA = "0xC355D0", Slot = "13")]
	public override bool GetIsPressed(InputAction button)
	{
		return default(bool);
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xC3560C", Offset = "0xC3560C", VA = "0xC3560C", Slot = "6")]
	public override void ApplyControllerPoseTo(Transform transform)
	{
	}
}
[Token(Token = "0x20002A3")]
public class DebugNavigation : MonoBehaviour
{
	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugNavigation Instance;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static GameObject debugObjects;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera debugCamera;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject debugHUD;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectList;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool DisableHUD;

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xC35764", Offset = "0xC35764", VA = "0xC35764")]
	public DebugNavigation()
	{
	}
}
[Token(Token = "0x20002A4")]
public class DebugTeleportPlayer : MonoBehaviour
{
	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DebugTeleportPlayer destination;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool ignoreNextEnter;

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xC35770", Offset = "0xC35770", VA = "0xC35770")]
	public DebugTeleportPlayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A5")]
public struct GloveBlobReactionColors
{
	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color InnerColor;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color CenterColor;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color OuterColor;
}
[Token(Token = "0x20002A6")]
public interface IGloveBlobReactable
{
	[Token(Token = "0x6001093")]
	Grabbable GetGrabbable();

	[Token(Token = "0x6001094")]
	GameObject GetGameObject();

	[Token(Token = "0x6001095")]
	GloveBlobReactionColors GetReactionColors();
}
[Token(Token = "0x20002A7")]
public class InventoryDropzone : StashableTrigger
{
	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer rnd;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool initialized;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool IsPlayerInventory;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InventorySlot ContainedSlot;

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xE12064", Offset = "0xE12064", VA = "0xE12064")]
	public void Init()
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xE1210C", Offset = "0xE1210C", VA = "0xE1210C")]
	private bool IsValidCollider(Collider col)
	{
		return default(bool);
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xE12114", Offset = "0xE12114", VA = "0xE12114")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xE12254", Offset = "0xE12254", VA = "0xE12254")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xE12394", Offset = "0xE12394", VA = "0xE12394")]
	public void OnObjectRemovedFromInventory()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xE124CC", Offset = "0xE124CC", VA = "0xE124CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xE12FB4", Offset = "0xE12FB4", VA = "0xE12FB4")]
	private void OnPreGrabItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xE1321C", Offset = "0xE1321C", VA = "0xE1321C")]
	private bool HasValidItemInside()
	{
		return default(bool);
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xE133C8", Offset = "0xE133C8", VA = "0xE133C8", Slot = "4")]
	protected override void OnHoverStateChanged()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xE12398", Offset = "0xE12398", VA = "0xE12398")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xE133CC", Offset = "0xE133CC", VA = "0xE133CC")]
	public InventoryDropzone()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A8")]
public class InventoryHeroSlot : InventorySlot
{
	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Stashable ConnectedHeroItem;

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xE133DC", Offset = "0xE133DC", VA = "0xE133DC", Slot = "16")]
	public override void SlotActivated()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xE13594", Offset = "0xE13594", VA = "0xE13594", Slot = "17")]
	public override bool CanStash(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xE13660", Offset = "0xE13660", VA = "0xE13660", Slot = "18")]
	public override void OnItemAdded(Stashable item)
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xE1378C", Offset = "0xE1378C", VA = "0xE1378C", Slot = "19")]
	public override void OnItemRemoved(Stashable item)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xE13820", Offset = "0xE13820", VA = "0xE13820", Slot = "20")]
	public override void UpdateHoverStatus(bool isHovering)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xE13824", Offset = "0xE13824", VA = "0xE13824", Slot = "23")]
	public override GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xE138F8", Offset = "0xE138F8", VA = "0xE138F8")]
	public InventoryHeroSlot()
	{
	}
}
[Serializable]
[Token(Token = "0x20002A9")]
public class InventorySlot : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x4001091")]
	private const float SMOOTHING_VALUE = 0.3f;

	[Token(Token = "0x4001092")]
	public const float BASE_SLOT_RADIUS = 0.048f;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float SlotRadius;

	[Token(Token = "0x4001094")]
	public const int MAX_NUM_ITEMS = 10;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OrientedPoint localOpSlotTarget;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private OrientedPoint localOpSlot;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private OrientedPoint localOpItemRecentlyAdded;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private OrientedPoint localOpItemTarget;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int hashedName;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 trgInvSpacePos;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion trgInvSpaceRot;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GrabbableOutline outline;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Stashable> items;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject numberCounterObject;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro numberCounterLabel;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[SerializeField]
	private GameObject iconBackground;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private GameObject iconFlowers;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private GameObject iconVeggies;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private GameObject iconBerries;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject[] icons;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected MeshRenderer rnd;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected MeshFilter mf;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected MaterialPropertyBlock mpb;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool initialized;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool HaveOverrideTargetPosition;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private OrientedPoint OverrideLocalOpSlotTarget;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int HoverShaderId;

	[Token(Token = "0x170001AC")]
	public int NumItems
	{
		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xE139E4", Offset = "0xE139E4", VA = "0xE139E4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AD")]
	public bool IsFull
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xE13A34", Offset = "0xE13A34", VA = "0xE13A34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AE")]
	public bool HasRoomLeft
	{
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xE13A8C", Offset = "0xE13A8C", VA = "0xE13A8C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AF")]
	public bool IsEmpty
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xE13AE4", Offset = "0xE13AE4", VA = "0xE13AE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B0")]
	public Vector3 LocalTargetPosition
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xE13B3C", Offset = "0xE13B3C", VA = "0xE13B3C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xE13B48", Offset = "0xE13B48", VA = "0xE13B48")]
	private void UpdateIcons()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xE13B6C", Offset = "0xE13B6C", VA = "0xE13B6C")]
	private void UpdateCounterLabel()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xE13C50", Offset = "0xE13C50", VA = "0xE13C50")]
	private void UpdateCurrencyIcons()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xE13E9C", Offset = "0xE13E9C", VA = "0xE13E9C", Slot = "15")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xE140A0", Offset = "0xE140A0", VA = "0xE140A0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xE14230", Offset = "0xE14230", VA = "0xE14230")]
	public void Activate()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xE14414", Offset = "0xE14414", VA = "0xE14414", Slot = "16")]
	public virtual void SlotActivated()
	{
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xE14418", Offset = "0xE14418", VA = "0xE14418")]
	public void UpdateItemPositions()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xE146C8", Offset = "0xE146C8", VA = "0xE146C8")]
	public void CheckForNullItems()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xE12DBC", Offset = "0xE12DBC", VA = "0xE12DBC")]
	public void MakeItemsSnapToTargets()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xE14288", Offset = "0xE14288", VA = "0xE14288")]
	private void UpdateItemVisibilities()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xE14378", Offset = "0xE14378", VA = "0xE14378")]
	public void MakeAllItemsEmissive()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xE14214", Offset = "0xE14214", VA = "0xE14214")]
	public void Snap()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xE14864", Offset = "0xE14864", VA = "0xE14864")]
	public bool ItemHasReachedTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xE149F0", Offset = "0xE149F0", VA = "0xE149F0")]
	public bool ContainsType(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xE14A3C", Offset = "0xE14A3C", VA = "0xE14A3C", Slot = "17")]
	public virtual bool CanStash(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xE14A90", Offset = "0xE14A90", VA = "0xE14A90")]
	public void UpdateSmoothing()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xE12B98", Offset = "0xE12B98", VA = "0xE12B98")]
	public void UpdateSlotTargetPos(Vector3 localPos, Quaternion localRot)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xE14BE0", Offset = "0xE14BE0", VA = "0xE14BE0")]
	public void SetOverrideTargetSlotPos(Vector3 localPos, Quaternion localRot)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xE14CE4", Offset = "0xE14CE4", VA = "0xE14CE4")]
	public void ResetOverrideTargetSlotPos()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xE14CEC", Offset = "0xE14CEC", VA = "0xE14CEC")]
	public Stashable FirstItemInList()
	{
		return null;
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xE129AC", Offset = "0xE129AC", VA = "0xE129AC")]
	public void AddItemToList(Stashable item)
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xE14D50", Offset = "0xE14D50", VA = "0xE14D50", Slot = "18")]
	public virtual void OnItemAdded(Stashable item)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xE130CC", Offset = "0xE130CC", VA = "0xE130CC")]
	public bool TryRemoveItemFromList(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xE14D54", Offset = "0xE14D54", VA = "0xE14D54", Slot = "19")]
	public virtual void OnItemRemoved(Stashable item)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xE14D58", Offset = "0xE14D58", VA = "0xE14D58")]
	public void DestroyAllItems()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xE14E88", Offset = "0xE14E88", VA = "0xE14E88", Slot = "20")]
	public virtual void UpdateHoverStatus(bool isHovering)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xE14F74", Offset = "0xE14F74", VA = "0xE14F74")]
	public void CommitMaterialChanges()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xE15014", Offset = "0xE15014", VA = "0xE15014")]
	public List<SaveID> GetSaveIDsOfItems()
	{
		return null;
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xE15320", Offset = "0xE15320", VA = "0xE15320", Slot = "4")]
	public int GetCurrentPriority()
	{
		return default(int);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xE15328", Offset = "0xE15328", VA = "0xE15328", Slot = "5")]
	public bool IsExtraSticky()
	{
		return default(bool);
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xE15330", Offset = "0xE15330", VA = "0xE15330", Slot = "21")]
	public PlayerHand GetHeldByHand()
	{
		return null;
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xE15338", Offset = "0xE15338", VA = "0xE15338", Slot = "7")]
	public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xE155A4", Offset = "0xE155A4", VA = "0xE155A4", Slot = "8")]
	public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xE155A8", Offset = "0xE155A8", VA = "0xE155A8", Slot = "9")]
	public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xE155AC", Offset = "0xE155AC", VA = "0xE155AC", Slot = "10")]
	public bool IsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xE1561C", Offset = "0xE1561C", VA = "0xE1561C", Slot = "22")]
	public bool HaveChildGrabbables()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xE15624", Offset = "0xE15624", VA = "0xE15624", Slot = "11")]
	public bool ShouldConsumeGrab(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xE1562C", Offset = "0xE1562C", VA = "0xE1562C", Slot = "12")]
	public void Touch()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xE15630", Offset = "0xE15630", VA = "0xE15630", Slot = "23")]
	public virtual GrabbableOutline GetOutline()
	{
		return null;
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xE15638", Offset = "0xE15638", VA = "0xE15638", Slot = "13")]
	public float GetDelayBeforeGrab()
	{
		return default(float);
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xE15640", Offset = "0xE15640", VA = "0xE15640", Slot = "14")]
	public Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xE1395C", Offset = "0xE1395C", VA = "0xE1395C")]
	public InventorySlot()
	{
	}
}
[Token(Token = "0x20002AA")]
public class NeatVR_Fade : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB14", Offset = "0x9FBB14")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color fadeToColor;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action callback;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xE21494", Offset = "0xE21494", VA = "0xE21494")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xE2179C", Offset = "0xE2179C", VA = "0xE2179C")]
		internal void <FaceFade>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB24", Offset = "0x9FBB24")]
	private sealed class <>c
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DOGetter<Color> <>9__18_1;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static DOSetter<Color> <>9__18_2;

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xE2168C", Offset = "0xE2168C", VA = "0xE2168C")]
		public <>c()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xE21694", Offset = "0xE21694", VA = "0xE21694")]
		internal Color <FaceFade>b__18_1()
		{
			return default(Color);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xE21700", Offset = "0xE21700", VA = "0xE21700")]
		internal void <FaceFade>b__18_2(Color x)
		{
		}
	}

	[Token(Token = "0x20002AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB34", Offset = "0x9FBB34")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color fadeToColor;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xE2149C", Offset = "0xE2149C", VA = "0xE2149C")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xE218D0", Offset = "0xE218D0", VA = "0xE218D0")]
		internal void <MonitorFade>b__0()
		{
		}
	}

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NeatVR_Fade Instance;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color currentColor;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color targetColor;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color deltaColor;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader fadeShader;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image monitorFade;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer faceFaderRenderer;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Color LoadingColor;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Material fadeMaterial;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int fadeMaterialColorID;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int faceFaderID;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Tweener faceFadeTweener;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Tweener monitorFadeTweener;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xE2070C", Offset = "0xE2070C", VA = "0xE2070C")]
	public static void FadeToColor(Color newColor, float duration, [Optional] Action callback)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xE20DCC", Offset = "0xE20DCC", VA = "0xE20DCC")]
	public void OnStartFade(Color newColor, float duration)
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xE20E34", Offset = "0xE20E34", VA = "0xE20E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xE20EA4", Offset = "0xE20EA4", VA = "0xE20EA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xE210F4", Offset = "0xE210F4", VA = "0xE210F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xE211F4", Offset = "0xE211F4", VA = "0xE211F4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xE20A00", Offset = "0xE20A00", VA = "0xE20A00")]
	public static void FaceFade(Color fadeToColor, float fadeTime, Action callback)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xE207E0", Offset = "0xE207E0", VA = "0xE207E0")]
	public static void MonitorFade(Color fadeToColor, float fadeTime)
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xE214A4", Offset = "0xE214A4", VA = "0xE214A4")]
	public NeatVR_Fade()
	{
	}
}
[Token(Token = "0x20002AE")]
public class PlayerHand : MonoBehaviour, IDebugInfo
{
	[Token(Token = "0x20002AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB44", Offset = "0x9FBB44")]
	private sealed class <FadeOutInfusionColor>d__185 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHand <>4__this;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeElapsed>5__2;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x170001BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001147")]
			[Address(RVA = "0xC5E700", Offset = "0xC5E700", VA = "0xC5E700", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001149")]
			[Address(RVA = "0xC5E768", Offset = "0xC5E768", VA = "0xC5E768", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xC5DF20", Offset = "0xC5DF20", VA = "0xC5DF20")]
		[DebuggerHidden]
		public <FadeOutInfusionColor>d__185(int <>1__state)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xC5E528", Offset = "0xC5E528", VA = "0xC5E528", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xC5E52C", Offset = "0xC5E52C", VA = "0xC5E52C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xC5E708", Offset = "0xC5E708", VA = "0xC5E708", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB54", Offset = "0x9FBB54")]
	private sealed class <>c
	{
		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__191_0;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<float, float> <>9__191_1;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<float> <>9__191_2;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<float> <>9__191_3;

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xC5E510", Offset = "0xC5E510", VA = "0xC5E510")]
		public <>c()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xC5E518", Offset = "0xC5E518", VA = "0xC5E518")]
		internal void <.ctor>b__191_0()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xC5E51C", Offset = "0xC5E51C", VA = "0xC5E51C")]
		internal void <.ctor>b__191_1(float <p0>, float <p1>)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xC5E520", Offset = "0xC5E520", VA = "0xC5E520")]
		internal void <.ctor>b__191_2(float <p0>)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xC5E524", Offset = "0xC5E524", VA = "0xC5E524")]
		internal void <.ctor>b__191_3(float <p0>)
		{
		}
	}

	[Token(Token = "0x40010C0")]
	private const float TOOL_USE_MAX_SPEED = 4f;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isDominantHand;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform rootTransform;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform modelRootTransform;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private PlayerHandAnimator m_playerHandAnimator;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform grabbableAttachSpot;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform gemTransform;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform braceletAttachPoint;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer braceletMesh;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02CE0", Offset = "0xA02CE0")]
	private bool <HasBracelet>k__BackingField;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform finger1;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform finger2;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform finger3;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform finger4;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool headsetFocus;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform inventoryTransform;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private SmoothLerper smoothLerper;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Transform smoothLerperTransform;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public Transform menuPointer;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public Transform grabDirection;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LocomotionArc locomotionArc;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private GrabbableTracker grabbableTracker;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IGrabbable currentGrabbable;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IGrabbable currentGrabbableInProgress;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tool_Base currentTool;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float timeLeftBeforeGrab;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color DisabledGrabbableColor;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool isHoldingPolaroid;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private NeatVR_Controller controller;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public PlayerHand otherHand;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GrabbableOutline hoveredGrabbable;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 oriVelocity;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float oriVelMag;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 oriAcceleration;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float oriAccMag;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float grabRadius;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public OrientedPoint trackedAttachPointLocal;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private PlayerHandAnimator animator;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Pettable currentPettable;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Action OnOpenInventoryEvent;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	internal bool hasInventoryOpen;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[SerializeField]
	private float shakeAngleThreshold;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private float shakeIntensityThreshold;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private MaterialPropertyBlock mpbMenu;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private MeshRenderer menuPointerRenderer;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float delayUntilRelease;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private UIButton currentButton;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool didPressPushButton;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private Vector3 m_currentGrabPosision;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private IGrabbable m_currentGrabbableInRange;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float[] m_curlData;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool m_hasCurlData;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private RaycastHit m_hitInfo;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private CreaturePettingEvent pettingEvent;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private ShakeTracker shakeTrackerHorizontal;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private ShakeTracker shakeTrackerVertical;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private bool initialized;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Collider[] collidersInRange;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private OptimizedCollection<PotentialGrabbable> grabbablesInRange;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public Renderer handRenderer;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private MaterialPropertyBlock gloveGemPropertyBlock;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool menuWasOpen;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool isReactingToGem;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
	public bool isAbsorbingWallet;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private IGloveBlobReactable objectForBlobReaction;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private bool controllerReady;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	private Vector3 currentVelocity;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private Vector3 currentAngularVelocity;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int AttractStateBlendId;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int TargetLocationId;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int TargetCenterColorId;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int TargetInnerColorId;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int TargetOuterColorId;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int InfusionAmountId;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02DC0", Offset = "0xA02DC0")]
	[SerializeField]
	private Glove m_glove;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02E0C", Offset = "0xA02E0C")]
	[SerializeField]
	private NeatAudioPlayer m_feedbackAudioPlayer;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[SerializeField]
	private NeatAudioCue m_startFeedbackSound;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[SerializeField]
	private NeatAudioCue m_feedbackLoopSound;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[SerializeField]
	private NeatAudioPlayer grabAudioPlayer;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[SerializeField]
	private NeatAudioCue grabAudioCue;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[SerializeField]
	private NeatAudioCue releaseAudioCue;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private bool m_handShouldBeVisibleWhileGrabbing;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly int MUCHNESS;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
	private bool isAnimatingInfusion;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private float currAttractState;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private float currGemAttractState;

	[Token(Token = "0x170001B1")]
	public PlayerHandAnimator PlayerHandAnimator
	{
		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC557B4", Offset = "0xC557B4", VA = "0xC557B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B2")]
	public bool HasBracelet
	{
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC557BC", Offset = "0xC557BC", VA = "0xC557BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA126D0", Offset = "0xA126D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC557C4", Offset = "0xC557C4", VA = "0xC557C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA126E0", Offset = "0xA126E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B3")]
	public SmoothLerper SmoothLerper
	{
		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xC557D0", Offset = "0xC557D0", VA = "0xC557D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B4")]
	public NeatVR_Controller Controller
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xC55D18", Offset = "0xC55D18", VA = "0xC55D18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B5")]
	public bool IsRightHand
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xC55D20", Offset = "0xC55D20", VA = "0xC55D20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B6")]
	public bool IsGrabbingSomething
	{
		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xC55D3C", Offset = "0xC55D3C", VA = "0xC55D3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B7")]
	public bool IsTryingToGrabSomething
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xC55D4C", Offset = "0xC55D4C", VA = "0xC55D4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B8")]
	public bool ControllerIsReadyAndTracking
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xC55D5C", Offset = "0xC55D5C", VA = "0xC55D5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001B9")]
	public Vector3 AngularVelocity
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xC55D64", Offset = "0xC55D64", VA = "0xC55D64")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BA")]
	public Vector3 Velocity
	{
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0xC55D74", Offset = "0xC55D74", VA = "0xC55D74")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BB")]
	public bool IsMovingTooFastForToolUse
	{
		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xC55D84", Offset = "0xC55D84", VA = "0xC55D84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BC")]
	public GemType GloveType
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0xC55DD0", Offset = "0xC55DD0", VA = "0xC55DD0")]
		get
		{
			return default(GemType);
		}
	}

	[Token(Token = "0x170001BD")]
	private bool IsHoldingGrabbable
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0xC5C82C", Offset = "0xC5C82C", VA = "0xC5C82C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BE")]
	private bool IsHoldingTool
	{
		[Token(Token = "0x6001126")]
		[Address(RVA = "0xC5B454", Offset = "0xC5B454", VA = "0xC5B454")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000017")]
	public event Action OnShake
	{
		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC557D8", Offset = "0xC557D8", VA = "0xC557D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA126F0", Offset = "0xA126F0")]
		add
		{
		}
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC55880", Offset = "0xC55880", VA = "0xC55880")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12700", Offset = "0xA12700")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event Action<float, float> OnShakeHorizontal
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xC55928", Offset = "0xC55928", VA = "0xC55928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12710", Offset = "0xA12710")]
		add
		{
		}
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xC559D0", Offset = "0xC559D0", VA = "0xC559D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12720", Offset = "0xA12720")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event Action<float> OnShakeUp
	{
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xC55A78", Offset = "0xC55A78", VA = "0xC55A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12730", Offset = "0xA12730")]
		add
		{
		}
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xC55B20", Offset = "0xC55B20", VA = "0xC55B20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12740", Offset = "0xA12740")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event Action<float> OnShakeDown
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xC55BC8", Offset = "0xC55BC8", VA = "0xC55BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12750", Offset = "0xA12750")]
		add
		{
		}
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xC55C70", Offset = "0xC55C70", VA = "0xC55C70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12760", Offset = "0xA12760")]
		remove
		{
		}
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xC55DC8", Offset = "0xC55DC8", VA = "0xC55DC8")]
	public Glove GetGlove()
	{
		return null;
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xC55DEC", Offset = "0xC55DEC", VA = "0xC55DEC")]
	public bool HasGloveAbility(GemType abilityType)
	{
		return default(bool);
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xC55ED8", Offset = "0xC55ED8", VA = "0xC55ED8")]
	public void Init()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xC56674", Offset = "0xC56674", VA = "0xC56674")]
	public OrientedPoint GetAttachPointWorld()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xC56738", Offset = "0xC56738", VA = "0xC56738")]
	public void EnableSmoothing(bool enable)
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xC564D4", Offset = "0xC564D4", VA = "0xC564D4")]
	private void InitMenuPointer()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xC563C4", Offset = "0xC563C4", VA = "0xC563C4")]
	private void InitShakeTrackers()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xC567E0", Offset = "0xC567E0", VA = "0xC567E0")]
	public void InitializeController(bool rightHand)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xC56B48", Offset = "0xC56B48", VA = "0xC56B48")]
	public void InitializeDebugController(bool rightHand)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xC56968", Offset = "0xC56968", VA = "0xC56968")]
	private void InitControllerOffset()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xC56C10", Offset = "0xC56C10", VA = "0xC56C10")]
	private OrientedPoint GetTrackedAttachPointLocal()
	{
		return default(OrientedPoint);
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xC56CF8", Offset = "0xC56CF8", VA = "0xC56CF8")]
	private Transform GetControllerTransform()
	{
		return null;
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xC56DA8", Offset = "0xC56DA8", VA = "0xC56DA8")]
	public void UpdateHandPoses()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xC56DF4", Offset = "0xC56DF4", VA = "0xC56DF4")]
	public Vector3 GetVelocityAtPoint(Vector3 worldPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xC56E90", Offset = "0xC56E90", VA = "0xC56E90")]
	public void SetMenuPointerVisibility(bool visible)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xC56EE0", Offset = "0xC56EE0", VA = "0xC56EE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xC57408", Offset = "0xC57408", VA = "0xC57408")]
	public void FocusStateLost()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xC56634", Offset = "0xC56634", VA = "0xC56634")]
	public void FocusStateGained()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xC575BC", Offset = "0xC575BC", VA = "0xC575BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xC579C0", Offset = "0xC579C0", VA = "0xC579C0")]
	private void UpdateFingerTracking()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xC582FC", Offset = "0xC582FC", VA = "0xC582FC")]
	private void UpdateGameInput()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xC5BD58", Offset = "0xC5BD58", VA = "0xC5BD58")]
	private void DrawOutline(Camera c)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xC5B600", Offset = "0xC5B600", VA = "0xC5B600")]
	private void UpdateTurning(bool smoothTurningEnabled)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xC5BFDC", Offset = "0xC5BFDC", VA = "0xC5BFDC")]
	public void UpdatePositionOfHeldItem()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xC5BE64", Offset = "0xC5BE64", VA = "0xC5BE64")]
	private void UpdateSmoothTurning()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xC5BF0C", Offset = "0xC5BF0C", VA = "0xC5BF0C")]
	private void UpdateSnapTurning(NeatVR_Controller.InputAction inputAction)
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xC5B4C4", Offset = "0xC5B4C4", VA = "0xC5B4C4")]
	private float DelayBeforeReleasingHeldObject()
	{
		return default(float);
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xC5B644", Offset = "0xC5B644", VA = "0xC5B644")]
	private bool IsAllowedToTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xC5B884", Offset = "0xC5B884", VA = "0xC5B884")]
	private bool IsAllowedToOpenInventory()
	{
		return default(bool);
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0xC57AD0", Offset = "0xC57AD0", VA = "0xC57AD0")]
	private bool IsUsingMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xC5C1CC", Offset = "0xC5C1CC", VA = "0xC5C1CC")]
	private bool IsHoldingPolaroid()
	{
		return default(bool);
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xC5C1D4", Offset = "0xC5C1D4", VA = "0xC5C1D4")]
	public void OnGrabPolaroid()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xC5C1E0", Offset = "0xC5C1E0", VA = "0xC5C1E0")]
	public void OnDropPolaroid()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xC57BC8", Offset = "0xC57BC8", VA = "0xC57BC8")]
	private void UpdateMenuInput()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xC58020", Offset = "0xC58020", VA = "0xC58020")]
	private void UpdatePolaroidInput()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xC57F5C", Offset = "0xC57F5C", VA = "0xC57F5C")]
	private void TryDeselectAndClearButton()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xC5C1E8", Offset = "0xC5C1E8", VA = "0xC5C1E8")]
	private void UpdateUIButtonInput(bool overrideDistance = false)
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xC5C0FC", Offset = "0xC5C0FC", VA = "0xC5C0FC")]
	private void SnapTurn(bool right)
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xC57220", Offset = "0xC57220", VA = "0xC57220")]
	private void DetectShaking()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xC5C83C", Offset = "0xC5C83C", VA = "0xC5C83C")]
	public void OnGrabItem()
	{
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xC57058", Offset = "0xC57058", VA = "0xC57058")]
	private void UpdatePhysicsVectors()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xC5A4C4", Offset = "0xC5A4C4", VA = "0xC5A4C4")]
	public void StopGrabbing()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xC5CA98", Offset = "0xC5CA98", VA = "0xC5CA98")]
	private void AdjustHandToMatchGrabbable(Grabbable grabbable, Vector3 grabPosOnItem)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xC5D0C0", Offset = "0xC5D0C0", VA = "0xC5D0C0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA12770", Offset = "0xA12770")]
	private void DrawDebugLine(Vector3 start, Vector3 end, Color color)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xC5B150", Offset = "0xC5B150", VA = "0xC5B150")]
	private bool TryToGrabLargeObject(IGrabbable grabbable, out float delayBeforeGrab)
	{
		return default(bool);
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xC5A638", Offset = "0xC5A638", VA = "0xC5A638")]
	private bool TryToGrabObject(IGrabbable grabbable, Vector3 grabPosOnItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xC5D410", Offset = "0xC5D410", VA = "0xC5D410")]
	public void ForceGrabObject(Grabbable grabbable)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xC563A4", Offset = "0xC563A4", VA = "0xC563A4")]
	public void SetHandVisibility(bool visible)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xC57000", Offset = "0xC57000", VA = "0xC57000")]
	private void ToggleRenderers(bool enable)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xC5D464", Offset = "0xC5D464", VA = "0xC5D464")]
	private bool InventoryIsOpenOnThisHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xC5ACC4", Offset = "0xC5ACC4", VA = "0xC5ACC4")]
	private IGrabbable GetBestGrabbable(out Vector3 grabPos)
	{
		return null;
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xC5C8D8", Offset = "0xC5C8D8", VA = "0xC5C8D8")]
	public void ReleaseIfThingIsHeld()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xC5B23C", Offset = "0xC5B23C", VA = "0xC5B23C")]
	private Pettable TryToFindPettable()
	{
		return null;
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xC5A364", Offset = "0xC5A364", VA = "0xC5A364")]
	private void UpdatePetting(Pettable newPettable)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xC5D66C", Offset = "0xC5D66C", VA = "0xC5D66C")]
	public IGrabbable GetCurrentGrabbable()
	{
		return null;
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xC5D674", Offset = "0xC5D674", VA = "0xC5D674")]
	public string[,] GetDebugInfo()
	{
		return null;
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xC5D8C0", Offset = "0xC5D8C0", VA = "0xC5D8C0")]
	public Transform GetRoot()
	{
		return null;
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xC5D8C8", Offset = "0xC5D8C8", VA = "0xC5D8C8")]
	public void StartReactingToGem(IGloveBlobReactable inGem)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xC59DAC", Offset = "0xC59DAC", VA = "0xC59DAC")]
	public void StopReactingToGem(bool updateAnimation = true)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xC5DE64", Offset = "0xC5DE64", VA = "0xC5DE64")]
	public void AnimateInfusionEffect()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xC5DEA4", Offset = "0xC5DEA4", VA = "0xC5DEA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA127A8", Offset = "0xA127A8")]
	private IEnumerator FadeOutInfusionColor()
	{
		return null;
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xC595F4", Offset = "0xC595F4", VA = "0xC595F4")]
	private void UpdateGemReaction()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xC5DF4C", Offset = "0xC5DF4C", VA = "0xC5DF4C")]
	public void OverrideCurrentGrabbable(IGrabbable grabbable)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xC5DF54", Offset = "0xC5DF54", VA = "0xC5DF54")]
	public void SetBraceletVisible(bool visible)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xC5DF7C", Offset = "0xC5DF7C", VA = "0xC5DF7C")]
	public PlayerHand()
	{
	}
}
[Token(Token = "0x20002B1")]
public class PlayerHandAnimator : MonoBehaviour
{
	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int animGrabbingId;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int animGrabbingToolId;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int curlThumbId;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int curlIndexId;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int curlMiddleId;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int curlRingId;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int curlPinkyId;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int useFingerCurls;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator handModelAnimator;

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xC5A5C4", Offset = "0xC5A5C4", VA = "0xC5A5C4")]
	public void TriggerGrabAnimation()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xC5A5EC", Offset = "0xC5A5EC", VA = "0xC5A5EC")]
	public void TriggerIdleAnimation()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xC5E770", Offset = "0xC5E770", VA = "0xC5E770")]
	public void SetFingerTracking(bool useFingerTracking)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xC5A1C4", Offset = "0xC5A1C4", VA = "0xC5A1C4")]
	public void UpdateFingerCurls(float[] curlData)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xC5A128", Offset = "0xC5A128", VA = "0xC5A128")]
	public void ResetFingerCurls()
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xC5E79C", Offset = "0xC5E79C", VA = "0xC5E79C")]
	public void SetLayerWeight(int layerIndex, float weight)
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xC5DE44", Offset = "0xC5DE44", VA = "0xC5DE44")]
	public void SetAnimationBoolParam(int animatorHash, bool shouldBeOn)
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xC5E7B8", Offset = "0xC5E7B8", VA = "0xC5E7B8")]
	public void SetAnimationTriggerParam(int animatorHash)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xC5E7D4", Offset = "0xC5E7D4", VA = "0xC5E7D4")]
	public void SetAnimationState(string animatorState, int layer)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xC5E7F0", Offset = "0xC5E7F0", VA = "0xC5E7F0")]
	public PlayerHandAnimator()
	{
	}
}
[Token(Token = "0x20002B2")]
public class PlayerHandManager : MonoBehaviour
{
	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerHandManager instance;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject playerHandPrefabRight;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject playerHandPrefabLeft;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera debugCamera;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public PlayerHand[] hands;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Grabbable leftHandStartingItem;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Grabbable rightHandStartingItem;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02EB8", Offset = "0xA02EB8")]
	private bool <IsHandsActive>k__BackingField;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02EC8", Offset = "0xA02EC8")]
	private bool <HasInitializedHands>k__BackingField;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA02ED8", Offset = "0xA02ED8")]
	private bool <HasSpawnedHands>k__BackingField;

	[Token(Token = "0x170001C1")]
	public bool IsHandsActive
	{
		[Token(Token = "0x600115A")]
		[Address(RVA = "0xC5E8F8", Offset = "0xC5E8F8", VA = "0xC5E8F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1285C", Offset = "0xA1285C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600115B")]
		[Address(RVA = "0xC5E900", Offset = "0xC5E900", VA = "0xC5E900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1286C", Offset = "0xA1286C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public bool HasInitializedHands
	{
		[Token(Token = "0x600115C")]
		[Address(RVA = "0xC5E90C", Offset = "0xC5E90C", VA = "0xC5E90C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1287C", Offset = "0xA1287C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600115D")]
		[Address(RVA = "0xC5E914", Offset = "0xC5E914", VA = "0xC5E914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1288C", Offset = "0xA1288C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public bool HasSpawnedHands
	{
		[Token(Token = "0x600115E")]
		[Address(RVA = "0xC5E920", Offset = "0xC5E920", VA = "0xC5E920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1289C", Offset = "0xA1289C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600115F")]
		[Address(RVA = "0xC5E928", Offset = "0xC5E928", VA = "0xC5E928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA128AC", Offset = "0xA128AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xC5E934", Offset = "0xC5E934", VA = "0xC5E934")]
	public static PlayerHand GetHand(bool rightHand)
	{
		return null;
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xC5EA14", Offset = "0xC5EA14", VA = "0xC5EA14")]
	public void SetStartingItem(Grabbable grabbable, bool right)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xC5EA28", Offset = "0xC5EA28", VA = "0xC5EA28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xC5EA80", Offset = "0xC5EA80", VA = "0xC5EA80")]
	private void Update()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xC5EB94", Offset = "0xC5EB94", VA = "0xC5EB94")]
	public void SetupStartingItems()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xC5ECAC", Offset = "0xC5ECAC", VA = "0xC5ECAC")]
	public void InitDefaultGloves()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xC5EE68", Offset = "0xC5EE68", VA = "0xC5EE68")]
	public void InitGlovesFromState(PlayerState playerState)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xC5F008", Offset = "0xC5F008", VA = "0xC5F008")]
	public void SpawnHands()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xC5F374", Offset = "0xC5F374", VA = "0xC5F374")]
	public static IGrabbable[] GetHeldGrabbables()
	{
		return null;
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xC5F4E0", Offset = "0xC5F4E0", VA = "0xC5F4E0")]
	public static void SetGloveAbility(GemType gloveType)
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xC5ED34", Offset = "0xC5ED34", VA = "0xC5ED34")]
	private void SetGloveAbilityOnBothHands(GemType gloveType)
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xC5F5A0", Offset = "0xC5F5A0", VA = "0xC5F5A0")]
	public PlayerHand GetDominantHand()
	{
		return null;
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xC5F180", Offset = "0xC5F180", VA = "0xC5F180")]
	private PlayerHand CreatePlayerHand(bool rightHand)
	{
		return null;
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xC5F6B0", Offset = "0xC5F6B0", VA = "0xC5F6B0")]
	public void InitializeDebugControllers()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xC5F744", Offset = "0xC5F744", VA = "0xC5F744")]
	public static void SetHandsVisible(bool visible)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xC5F294", Offset = "0xC5F294", VA = "0xC5F294")]
	public static void SetHandsActive(bool shouldBeActive)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xC5F818", Offset = "0xC5F818", VA = "0xC5F818")]
	public PlayerHandManager()
	{
	}
}
[Token(Token = "0x20002B3")]
public class PlayerInventory : SaveableComponent, IInitializable
{
	[Token(Token = "0x20002B4")]
	public delegate void OpenInventoryDelegate(PlayerHand hand, Transform inventoryPosition);

	[Token(Token = "0x20002B5")]
	public delegate void CloseInventoryDelegate();

	[Serializable]
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB64", Offset = "0x9FBB64")]
	private sealed class <>c
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InventorySlot, int> <>9__29_0;

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xC632F0", Offset = "0xC632F0", VA = "0xC632F0")]
		public <>c()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xC632F8", Offset = "0xC632F8", VA = "0xC632F8")]
		internal int <get_HeldItemCount>b__29_0(InventorySlot slot)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB74", Offset = "0x9FBB74")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable item;

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xC609EC", Offset = "0xC609EC", VA = "0xC609EC")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xC63314", Offset = "0xC63314", VA = "0xC63314")]
		internal bool <HasSpaceForItem>b__0(InventorySlot slot)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001137")]
	private const int MAX_SLOT_COUNT = 8;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerInventory instance;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool initialized;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool ItemWantsPlayersAttention;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA02EE8", Offset = "0xA02EE8")]
	public float radiusArc;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_root;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InventorySlot[] inventorySlots;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InventoryHeroSlot[] InventoryHeroSlots;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InventorySlot> activeSlots;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<InventorySlot> inactiveSlots;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<InventoryHeroSlot> ActiveHeroSlots;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<InventoryHeroSlot> InactiveHeroSlots;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SmoothLerper smoother;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject inventorySlotPrefab;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Transform counterLabel;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshPro counterText;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02F50", Offset = "0xA02F50")]
	private NeatAudioPlayer m_audioPlayer;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private NeatAudioCue m_openSound;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private NeatAudioCue m_closeSound;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private NeatAudioCue m_itemAddedSound;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA02FCC", Offset = "0xA02FCC")]
	[SerializeField]
	private UnityEvent m_openInventoryEvent;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private UnityEvent m_closeInventoryEvent;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private InventoryDropzone dropZone;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] anglesBetweenRad;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float totalAngularSpanRad;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float totalAngularSpanStashArcDegrees;

	[Token(Token = "0x4001151")]
	private const float ARC_STASH_THICKNESS_DEFAULT = 0.1f;

	[Token(Token = "0x4001152")]
	private const float ARC_STASH_THICKNESS_ITEM_INSIDE_BUFFER = 0.05f;

	[Token(Token = "0x4001153")]
	private const float ARC_STASH_EDGE_PAD_ANGLE = 15f;

	[Token(Token = "0x4001154")]
	private const float ARC_STASH_EDGE_PAD_ANGLE_ITEM_INSIDE_BUFFER = 2f;

	[NonSerialized]
	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PlayerHand hand;

	[NonSerialized]
	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public PlayerHand handLastUsed;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject debugAddItem;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool CurrencyHolderBeingHeld;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool WalletIsDropZone;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public OpenInventoryDelegate OnOpenInventory;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CloseInventoryDelegate OnClose;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool needsUpdate;

	[Token(Token = "0x170001C4")]
	public int ActiveSlotCount
	{
		[Token(Token = "0x6001171")]
		[Address(RVA = "0xC5F820", Offset = "0xC5F820", VA = "0xC5F820")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C5")]
	public int HeldItemCount
	{
		[Token(Token = "0x6001172")]
		[Address(RVA = "0xC5F870", Offset = "0xC5F870", VA = "0xC5F870")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001C6")]
	public bool IsOpen
	{
		[Token(Token = "0x6001173")]
		[Address(RVA = "0xC5A2AC", Offset = "0xC5A2AC", VA = "0xC5A2AC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001C7")]
	public float Fullness
	{
		[Token(Token = "0x6001174")]
		[Address(RVA = "0xC5F968", Offset = "0xC5F968", VA = "0xC5F968")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001C8")]
	public static PlayerInventory Instance
	{
		[Token(Token = "0x6001175")]
		[Address(RVA = "0xC5F9EC", Offset = "0xC5F9EC", VA = "0xC5F9EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xC5FA54", Offset = "0xC5FA54", VA = "0xC5FA54")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xC5FC2C", Offset = "0xC5FC2C", VA = "0xC5FC2C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xC5FE4C", Offset = "0xC5FE4C", VA = "0xC5FE4C")]
	private void CreateInventorySlot()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xC5FF48", Offset = "0xC5FF48", VA = "0xC5FF48")]
	private void CreateInventoryHeroSlot()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xC60044", Offset = "0xC60044", VA = "0xC60044")]
	private void Update()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xC605FC", Offset = "0xC605FC", VA = "0xC605FC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xC607B0", Offset = "0xC607B0", VA = "0xC607B0")]
	public static void Init([Optional] ComponentState s)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xC608B0", Offset = "0xC608B0", VA = "0xC608B0")]
	public bool HasSpaceForItem(Stashable item)
	{
		return default(bool);
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xC609F4", Offset = "0xC609F4", VA = "0xC609F4")]
	public Component GetFirstItemOfType(Type componentType)
	{
		return null;
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xC60BA4", Offset = "0xC60BA4", VA = "0xC60BA4")]
	private void ActivateItemsInInventory()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xC60DC4", Offset = "0xC60DC4", VA = "0xC60DC4")]
	private void DisableItemsInInventory()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xC60FA8", Offset = "0xC60FA8", VA = "0xC60FA8")]
	private void UpdateSlotTargetPositions()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xC61474", Offset = "0xC61474", VA = "0xC61474")]
	private void UpdateSlotCounter()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xC603E0", Offset = "0xC603E0", VA = "0xC603E0")]
	private void UpdateSlotPositions(bool snap = false)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xC60600", Offset = "0xC60600", VA = "0xC60600")]
	private void UpdateSlotSmoothing()
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xC61534", Offset = "0xC61534", VA = "0xC61534")]
	private bool TryGetSlotIndexFor(Stashable stashable, out int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xC60174", Offset = "0xC60174", VA = "0xC60174")]
	public void Add(Stashable item)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xC616A4", Offset = "0xC616A4", VA = "0xC616A4")]
	private void AddHeroItem(Stashable heroItem)
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xC5D22C", Offset = "0xC5D22C", VA = "0xC5D22C")]
	public void Remove(Stashable item)
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xC619B4", Offset = "0xC619B4", VA = "0xC619B4")]
	private void RemoveHeroItem(Stashable heroItem)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xC61B78", Offset = "0xC61B78", VA = "0xC61B78")]
	public void RemoveItemsInSlot(int index)
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xC61A84", Offset = "0xC61A84", VA = "0xC61A84")]
	private void RemoveSlotAtIndex(int index)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xC61C74", Offset = "0xC61C74", VA = "0xC61C74")]
	private void RemoveHeroSlotAtIndex(int index)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xC61D68", Offset = "0xC61D68", VA = "0xC61D68")]
	public void SnapInventoryItems()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0xC61318", Offset = "0xC61318", VA = "0xC61318")]
	private Vector2 GetLocalPositionForSlot(int i, out float angRad)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xC5B9B0", Offset = "0xC5B9B0", VA = "0xC5B9B0")]
	public void TryAlignAndOpen(PlayerHand hand, Transform inventoryPosition)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xC5A2C8", Offset = "0xC5A2C8", VA = "0xC5A2C8")]
	public void TryClose(PlayerHand hand)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xC5DD30", Offset = "0xC5DD30", VA = "0xC5DD30")]
	public void Close(bool playSound = true)
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xC618D4", Offset = "0xC618D4", VA = "0xC618D4")]
	private void CheckForEmptySlots()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xC611D0", Offset = "0xC611D0", VA = "0xC611D0")]
	public void CalculateAnglesBetweenItems()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xC62958", Offset = "0xC62958", VA = "0xC62958")]
	public void SetIsCurrencyHolderHeld(bool newCurrencyHolderHeld)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xC62248", Offset = "0xC62248", VA = "0xC62248")]
	public void SetWalletAsDropZone()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xC62730", Offset = "0xC62730", VA = "0xC62730")]
	public void RemoveWalletAsDropZone()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xC629C8", Offset = "0xC629C8", VA = "0xC629C8", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xC62C40", Offset = "0xC62C40", VA = "0xC62C40")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xC62D70", Offset = "0xC62D70", VA = "0xC62D70", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xC63184", Offset = "0xC63184", VA = "0xC63184")]
	public PlayerInventory()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B8")]
public class InventoryState : ComponentState
{
	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID[] inventoryContents;

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xCF2CBC", Offset = "0xCF2CBC", VA = "0xCF2CBC")]
	public InventoryState()
	{
	}
}
[Token(Token = "0x20002B9")]
public enum SpawnPositionType
{
	[Token(Token = "0x4001162")]
	SceneStartPosition,
	[Token(Token = "0x4001163")]
	LoadingScreenPosition,
	[Token(Token = "0x4001164")]
	PositionInHouse,
	[Token(Token = "0x4001165")]
	TutorialStartPosition,
	[Token(Token = "0x4001166")]
	Unknown
}
[Token(Token = "0x20002BA")]
public class PlayerSpawnPosition : MonoBehaviour
{
	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PlayerSpawnPosition> positions;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpawnPositionType spawnPosType;

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xC633DC", Offset = "0xC633DC", VA = "0xC633DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xC634AC", Offset = "0xC634AC", VA = "0xC634AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xC6357C", Offset = "0xC6357C", VA = "0xC6357C")]
	public static PlayerSpawnPosition GetSpawnPosition(SpawnPositionType posType)
	{
		return null;
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xC63730", Offset = "0xC63730", VA = "0xC63730")]
	public PlayerSpawnPosition()
	{
	}
}
[Token(Token = "0x20002BB")]
public class PlayerTeleport : MonoBehaviour
{
	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float teleportDuration;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform pointerStartTransform;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerHand pointerHand;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool visible;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pointedAtPosition;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool teleporting;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float currentTeleportTimeLeft;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hasValidDestination;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private TeleportDestinationInfo lastValidDestination;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NeatAudioPlayer teleportSoundPlayer;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerTeleportEvent teleportEvent;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerTeleport _instance;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool m_cancelNextTeleport;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float m_lastTeleportTime;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float m_lastTeleportDistance;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private readonly int PICK;

	[Token(Token = "0x170001C9")]
	private LocomotionArc LocomotionArc
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xC63B64", Offset = "0xC63B64", VA = "0xC63B64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CA")]
	public float LastTeleportTime
	{
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xC63BC0", Offset = "0xC63BC0", VA = "0xC63BC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CB")]
	public float LastTeleportDistance
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xC63BC8", Offset = "0xC63BC8", VA = "0xC63BC8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001CC")]
	public static PlayerTeleport instance
	{
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xC57444", Offset = "0xC57444", VA = "0xC57444")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xC63BD0", Offset = "0xC63BD0", VA = "0xC63BD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xC63C5C", Offset = "0xC63C5C", VA = "0xC63C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xC63DF0", Offset = "0xC63DF0", VA = "0xC63DF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0xC63DF4", Offset = "0xC63DF4", VA = "0xC63DF4")]
	public static LocomotionArc GetLocomotionArc()
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xC63E88", Offset = "0xC63E88", VA = "0xC63E88")]
	public static bool HasVisibleArcFromHand(bool isRightHand)
	{
		return default(bool);
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xC63EE4", Offset = "0xC63EE4", VA = "0xC63EE4")]
	public static bool HasVisibleArc()
	{
		return default(bool);
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xC63F04", Offset = "0xC63F04", VA = "0xC63F04")]
	public void HideTeleportPointer()
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xC63F8C", Offset = "0xC63F8C", VA = "0xC63F8C")]
	public static PlayerHand GetPointerHand()
	{
		return null;
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xC5751C", Offset = "0xC5751C", VA = "0xC5751C")]
	public void CancelTeleport(PlayerHand hand)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xC64020", Offset = "0xC64020", VA = "0xC64020")]
	public static void CancelNextTeleport()
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xC5BC98", Offset = "0xC5BC98", VA = "0xC5BC98")]
	public void TeleportButtonReleased(PlayerHand hand)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xC64088", Offset = "0xC64088", VA = "0xC64088")]
	public void TeleportButtonPressed(PlayerHand hand, bool isRightHand)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xC5B740", Offset = "0xC5B740", VA = "0xC5B740")]
	public void TeleportButtonPressed(PlayerHand hand)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0xC64210", Offset = "0xC64210", VA = "0xC64210")]
	private void Update()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xC63C60", Offset = "0xC63C60", VA = "0xC63C60")]
	private void HidePointer()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xC640C4", Offset = "0xC640C4", VA = "0xC640C4")]
	private void ShowPointer(PlayerHand newPointerHand, PlayerHand oldPointerHand)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xC64068", Offset = "0xC64068", VA = "0xC64068")]
	private void TryTeleportPlayer()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xC644EC", Offset = "0xC644EC", VA = "0xC644EC")]
	private void InitiateTeleportFade()
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xC64534", Offset = "0xC64534", VA = "0xC64534")]
	private void TeleportPlayer()
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xC6474C", Offset = "0xC6474C", VA = "0xC6474C")]
	public bool TeleportPlayerTo(Vector3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xC646E4", Offset = "0xC646E4", VA = "0xC646E4")]
	private void RaiseEvent(Vector3 origin, Vector3 destination)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xC64738", Offset = "0xC64738", VA = "0xC64738")]
	private bool IsTeleportValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xC6487C", Offset = "0xC6487C", VA = "0xC6487C")]
	private bool TryCancelTeleport()
	{
		return default(bool);
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0xC6488C", Offset = "0xC6488C", VA = "0xC6488C")]
	public PlayerTeleport()
	{
	}
}
[Token(Token = "0x20002BC")]
public class SmoothLerper : MonoBehaviour
{
	[Token(Token = "0x20002BD")]
	public enum EaseMode
	{
		[Token(Token = "0x4001184")]
		Linear,
		[Token(Token = "0x4001185")]
		EaseIn,
		[Token(Token = "0x4001186")]
		EaseInOut
	}

	[Token(Token = "0x20002BE")]
	public enum LerpMode
	{
		[Token(Token = "0x4001188")]
		Off,
		[Token(Token = "0x4001189")]
		Smooth,
		[Token(Token = "0x400118A")]
		Fixed
	}

	[Token(Token = "0x20002BF")]
	public enum LerpRotMode
	{
		[Token(Token = "0x400118C")]
		Off,
		[Token(Token = "0x400118D")]
		Smooth,
		[Token(Token = "0x400118E")]
		Fixed,
		[Token(Token = "0x400118F")]
		SmoothBasedOnPosition
	}

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EaseMode easeMode;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LerpMode posMode;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LerpRotMode rotMode;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SmoothingConfig inner;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SmoothingConfig outer;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform source;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform target;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool updateManuallyFromScript;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float influence;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool resetOnEnable;

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xCDEABC", Offset = "0xCDEABC", VA = "0xCDEABC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xCDEB70", Offset = "0xCDEB70", VA = "0xCDEB70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xCDF198", Offset = "0xCDF198", VA = "0xCDF198")]
	private void Update()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xCDEC1C", Offset = "0xCDEC1C", VA = "0xCDEC1C")]
	public void UpdateSmoothing()
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xCDF1B4", Offset = "0xCDF1B4", VA = "0xCDF1B4")]
	public float GetHarshness(float refDist, float distMin, float distMax, float valueMin, float valueMax, bool needsSquareRoot = false)
	{
		return default(float);
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xCDF370", Offset = "0xCDF370", VA = "0xCDF370")]
	public SmoothLerper()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C0")]
public struct SmoothingConfig
{
	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float radius;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float angle;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float harshness;

	[Token(Token = "0x170001CD")]
	public float RadiusSq
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xAD6838", Offset = "0xAD6838", VA = "0xAD6838")]
		get
		{
			return default(float);
		}
	}
}
[Token(Token = "0x20002C1")]
public class StashableTrigger : MonoBehaviour
{
	[Token(Token = "0x20002C2")]
	public class StashableCollider
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stashable stashable;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Collider col;

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xCEF47C", Offset = "0xCEF47C", VA = "0xCEF47C")]
		public StashableCollider(Stashable stashable, Collider col)
		{
		}
	}

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OptimizedCollection<Stashable> m_hoveringStashables;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03038", Offset = "0xA03038")]
	private readonly List<StashableCollider> <HoveringColliders>k__BackingField;

	[Token(Token = "0x170001CE")]
	protected List<StashableCollider> HoveringColliders
	{
		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xCEF0C4", Offset = "0xCEF0C4", VA = "0xCEF0C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA128BC", Offset = "0xA128BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CF")]
	public bool HasSomethingInside
	{
		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xCEF0CC", Offset = "0xCEF0CC", VA = "0xCEF0CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D0")]
	protected int CollidersInsideCount
	{
		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xCEF0E8", Offset = "0xCEF0E8", VA = "0xCEF0E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xCEF138", Offset = "0xCEF138", VA = "0xCEF138")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xCEF23C", Offset = "0xCEF23C", VA = "0xCEF23C")]
	protected void OnColliderEnter(Collider collider)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xCEF5BC", Offset = "0xCEF5BC", VA = "0xCEF5BC")]
	protected void OnColliderExit(Collider collider)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xCEF904", Offset = "0xCEF904", VA = "0xCEF904")]
	protected void OnStashableExit(Stashable stashable)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xCEF930", Offset = "0xCEF930", VA = "0xCEF930")]
	private void RemoveStashableFromHovering(Stashable stashable)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xCEFAB0", Offset = "0xCEFAB0", VA = "0xCEFAB0")]
	private bool TryRemoveStashableCollider(StashableCollider col)
	{
		return default(bool);
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xCEFA3C", Offset = "0xCEFA3C", VA = "0xCEFA3C")]
	private void RemoveHoveringStashable(Stashable stashable)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xCEFBC4", Offset = "0xCEFBC4", VA = "0xCEFBC4")]
	private void RemoveAllStashableFromHovering()
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xCEFC90", Offset = "0xCEFC90", VA = "0xCEFC90", Slot = "4")]
	protected virtual void OnHoverStateChanged()
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xCEFC94", Offset = "0xCEFC94", VA = "0xCEFC94")]
	protected Stashable TryGetDroppedItemInside()
	{
		return null;
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xCEF4CC", Offset = "0xCEF4CC", VA = "0xCEF4CC")]
	private void OnStartHover(StashableCollider col)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xCEF82C", Offset = "0xCEF82C", VA = "0xCEF82C")]
	private void StopHover(StashableCollider col)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xCEF210", Offset = "0xCEF210", VA = "0xCEF210")]
	private void StopHoverAll()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xCEFE04", Offset = "0xCEFE04", VA = "0xCEFE04")]
	public StashableTrigger()
	{
	}
}
[Token(Token = "0x20002C3")]
public class Mesh2D
{
	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2[] vertices;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2[] normals;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float[] uCoords;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[] edges;

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xCF6A84", Offset = "0xCF6A84", VA = "0xCF6A84")]
	public Mesh2D()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C4")]
public struct OrientedPoint
{
	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 localScale;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Vector3 InvalidScale;

	[Token(Token = "0x170001D1")]
	public Vector3 Right
	{
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xAD93A8", Offset = "0xAD93A8", VA = "0xAD93A8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001D2")]
	public Vector3 Up
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xAD93B0", Offset = "0xAD93B0", VA = "0xAD93B0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001D3")]
	public Vector3 Forward
	{
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xAD93B8", Offset = "0xAD93B8", VA = "0xAD93B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xAD93C0", Offset = "0xAD93C0", VA = "0xAD93C0")]
	public OrientedPoint([Optional] Vector3 position)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xAD93C8", Offset = "0xAD93C8", VA = "0xAD93C8")]
	public void TransformToLocalSpaceOf(Transform transform)
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xAD93D0", Offset = "0xAD93D0", VA = "0xAD93D0")]
	public OrientedPoint(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xAD93D8", Offset = "0xAD93D8", VA = "0xAD93D8")]
	public OrientedPoint(Vector3 position, Quaternion rotation, Vector3 localScale)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xAD93FC", Offset = "0xAD93FC", VA = "0xAD93FC")]
	public OrientedPoint(Transform transform)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xAD9404", Offset = "0xAD9404", VA = "0xAD9404")]
	public void ApplyToLocal(Transform tf)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xAD940C", Offset = "0xAD940C", VA = "0xAD940C")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xAD9414", Offset = "0xAD9414", VA = "0xAD9414")]
	public bool IsNan()
	{
		return default(bool);
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xAD941C", Offset = "0xAD941C", VA = "0xAD941C")]
	public Vector3 TransformPoint(Vector3 localPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xAD9424", Offset = "0xAD9424", VA = "0xAD9424")]
	public Vector3 InverseTransformPoint(Vector3 worldPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xAD942C", Offset = "0xAD942C", VA = "0xAD942C")]
	public Vector3 TransformVector(Vector3 localPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0xAD9434", Offset = "0xAD9434", VA = "0xAD9434")]
	public Vector3 TransformVectorNoScale(Vector3 localPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0xE2ED44", Offset = "0xE2ED44", VA = "0xE2ED44")]
	public static OrientedPoint Lerp(OrientedPoint a, OrientedPoint b, float t)
	{
		return default(OrientedPoint);
	}
}
[Token(Token = "0x20002C5")]
public class WobblyArc
{
	[Serializable]
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB84", Offset = "0x9FBB84")]
	private sealed class <>c
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Tweener, Tweener> <>9__26_0;

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1AE9AE8", Offset = "0x1AE9AE8", VA = "0x1AE9AE8")]
		public <>c()
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1AE9AF0", Offset = "0x1AE9AF0", VA = "0x1AE9AF0")]
		internal Tweener <Show>b__26_0(Tweener tw)
		{
			return null;
		}
	}

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int arcMeshSegmentCount;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int arcMeshVertexCount;

	[Token(Token = "0x40011A1")]
	private const int ARC_MESH_ANGULAR_COUNT = 8;

	[Token(Token = "0x40011A2")]
	private const int ARC_MESH_VERTS_PER_SEGMENT = 9;

	[Token(Token = "0x40011A3")]
	private const float ARC_MESH_RADIUS_NEAR = 0.003f;

	[Token(Token = "0x40011A4")]
	private const float ARC_MESH_RADIUS_CENTER = 0.003f;

	[Token(Token = "0x40011A5")]
	private const float ARC_MESH_RADIUS_FAR = 0.004f;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float ARC_MESH_RADIUS_MAX;

	[Token(Token = "0x40011A7")]
	private const float ARC_TRACE_TIME = 1f;

	[Token(Token = "0x40011A8")]
	private const float ARC_TRACE_SPEED = 8f;

	[Token(Token = "0x40011A9")]
	private const float ARC_SMOOTH_COEF_INVALID = 0.1f;

	[Token(Token = "0x40011AA")]
	private const float ARC_APPEAR_UP_FORCE = 2000f;

	[Token(Token = "0x40011AB")]
	private const float ARC_ANIM_APPEAR_TIME = 0.35f;

	[Token(Token = "0x40011AC")]
	private const float ARC_ANIM_DISAPPEAR_TIME = 0.2f;

	[Token(Token = "0x40011AD")]
	private const float ARC_ANIM_VALIDITY_COEF = 0.15f;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh mesh;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh2D mesh2D;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OrientedPoint[] pointsCurrent;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OrientedPoint[] pointsPrev;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] pointsVelocities;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float validitySmooth;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TweenyFloat animExtend;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float hitDistancePercentage;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initializedDataStreams;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] verts;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] normals;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector4> uvs;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] triangles;

	[Token(Token = "0x170001D4")]
	public float TimePerSegment
	{
		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1AE923C", Offset = "0x1AE923C", VA = "0x1AE923C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x1AE8048", Offset = "0x1AE8048", VA = "0x1AE8048")]
	public void Init(int numMeshSegments)
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x1AE832C", Offset = "0x1AE832C", VA = "0x1AE832C")]
	public Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x1AE8334", Offset = "0x1AE8334", VA = "0x1AE8334")]
	public void UpdatePathPhysics(float dt, OrientedPoint[] pointsTarget, bool hasValidDestination, float wobblyness, float smoothCoef)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x1AE8E54", Offset = "0x1AE8E54", VA = "0x1AE8E54")]
	public void Show(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x1AE82FC", Offset = "0x1AE82FC", VA = "0x1AE82FC")]
	public void HideImmediately()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x1AE8DB0", Offset = "0x1AE8DB0", VA = "0x1AE8DB0")]
	private void UpdateValiditySmoothing(bool valid)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x1AE8500", Offset = "0x1AE8500", VA = "0x1AE8500")]
	public void Stabilize(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1AE86D0", Offset = "0x1AE86D0", VA = "0x1AE86D0")]
	private void UpdatePathPositionsAndVelocity(float dt, OrientedPoint[] pointsTarget, float wobblyness, float smoothCoef)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1AE8F64", Offset = "0x1AE8F64", VA = "0x1AE8F64")]
	private float GetInfluenceCurve(float t, float smoothCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1AE8B40", Offset = "0x1AE8B40", VA = "0x1AE8B40")]
	private void UpdatePathRotations(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1AE8FBC", Offset = "0x1AE8FBC", VA = "0x1AE8FBC")]
	private void InitializeDataStreamsIfNeeded()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x1AE9250", Offset = "0x1AE9250", VA = "0x1AE9250")]
	public void UpdateArcMesh(OrientedPoint[] pointsTarget)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x1AE979C", Offset = "0x1AE979C", VA = "0x1AE979C")]
	private float GetMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x1AE9834", Offset = "0x1AE9834", VA = "0x1AE9834")]
	private float GetExpandedMeshRadius(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x1AE997C", Offset = "0x1AE997C", VA = "0x1AE997C")]
	private float GetMirrorMask(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x1AE98E4", Offset = "0x1AE98E4", VA = "0x1AE98E4")]
	private float GetExtentionAnimMultiplier(float t)
	{
		return default(float);
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x1AE9990", Offset = "0x1AE9990", VA = "0x1AE9990")]
	public WobblyArc()
	{
	}
}
[Token(Token = "0x20002C7")]
public class TeleportTutorialBridge : SaveableComponent, IInitializable
{
	[Token(Token = "0x20002C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBB94", Offset = "0x9FBB94")]
	private sealed class <CollapseEventRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTutorialBridge <>4__this;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <eventFinished>5__2;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool <haveTriggeredSound>5__3;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <remainingEventTime>5__4;

		[Token(Token = "0x170001D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001219")]
			[Address(RVA = "0xCA638C", Offset = "0xCA638C", VA = "0xCA638C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600121B")]
			[Address(RVA = "0xCA63F4", Offset = "0xCA63F4", VA = "0xCA63F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xCA6184", Offset = "0xCA6184", VA = "0xCA6184")]
		[DebuggerHidden]
		public <CollapseEventRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xCA61C8", Offset = "0xCA61C8", VA = "0xCA61C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xCA61CC", Offset = "0xCA61CC", VA = "0xCA61CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xCA6394", Offset = "0xCA6394", VA = "0xCA6394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011BD")]
	private const float CorrectDestinationRadius = 4f;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private SphereCollider TriggerOutsideSphere;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform m_correctTeleportDestination;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool HaveTriggeredCollapseEvent;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float CollapseEventDuration;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Animator BridgeCollapseAnimator;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ParticleEffectObject;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NeatAudioPlayer BridgeAudioPlayer;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public NeatAudioCue BridgeAudioCue;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource SplashAudio;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource ContinousAudio;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve ContinousAudioVolumeCurve;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float ContinousAudioMaxVolume;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float SoundStartDelay;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float SoundStartTimer;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool m_hasCrystalGem;

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xCA5848", Offset = "0xCA5848", VA = "0xCA5848", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xCA5AB0", Offset = "0xCA5AB0", VA = "0xCA5AB0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xCA5BB8", Offset = "0xCA5BB8", VA = "0xCA5BB8")]
	private void OnGemGrabbed(GemGrabbedEvent e)
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xCA5BE0", Offset = "0xCA5BE0", VA = "0xCA5BE0")]
	private void OnPlayerTeleportEvent(PlayerTeleportEvent e)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xCA5D18", Offset = "0xCA5D18", VA = "0xCA5D18")]
	private bool IsOutsideSphere(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xCA5E48", Offset = "0xCA5E48", VA = "0xCA5E48")]
	public void TriggerCollapseEvent()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xCA59EC", Offset = "0xCA59EC", VA = "0xCA59EC")]
	public void OnCollapseEventFinished()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xCA60EC", Offset = "0xCA60EC", VA = "0xCA60EC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xCA6070", Offset = "0xCA6070", VA = "0xCA6070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA128CC", Offset = "0xA128CC")]
	private IEnumerator CollapseEventRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xCA61B0", Offset = "0xCA61B0", VA = "0xCA61B0")]
	public TeleportTutorialBridge()
	{
	}
}
[Serializable]
[Token(Token = "0x20002C9")]
public class TeleportTutorialBridgeComponentState : ComponentState
{
	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool HaveTriggeredCollapseEvent;

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xCA6154", Offset = "0xCA6154", VA = "0xCA6154")]
	public TeleportTutorialBridgeComponentState(bool inHaveTriggeredCollapseEvent)
	{
	}
}
[Token(Token = "0x20002CA")]
public class TriggerCrystalHarmonization : MonoBehaviour
{
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBBA4", Offset = "0x9FBBA4")]
	private sealed class <TriggerCrystalHarmonizationStaggered>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerCrystalHarmonization <>4__this;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001223")]
			[Address(RVA = "0x1AE30C4", Offset = "0x1AE30C4", VA = "0x1AE30C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001225")]
			[Address(RVA = "0x1AE312C", Offset = "0x1AE312C", VA = "0x1AE312C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x1AE2F30", Offset = "0x1AE2F30", VA = "0x1AE2F30")]
		[DebuggerHidden]
		public <TriggerCrystalHarmonizationStaggered>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x1AE2F64", Offset = "0x1AE2F64", VA = "0x1AE2F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x1AE2F68", Offset = "0x1AE2F68", VA = "0x1AE2F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1AE30CC", Offset = "0x1AE30CC", VA = "0x1AE30CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InstrumentResonator[] crystals;

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x1AE2E7C", Offset = "0x1AE2E7C", VA = "0x1AE2E7C")]
	public void OnTriggerCrystalHarmonization()
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x1AE2EB4", Offset = "0x1AE2EB4", VA = "0x1AE2EB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12980", Offset = "0xA12980")]
	private IEnumerator TriggerCrystalHarmonizationStaggered()
	{
		return null;
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x1AE2F5C", Offset = "0x1AE2F5C", VA = "0x1AE2F5C")]
	public TriggerCrystalHarmonization()
	{
	}
}
[Token(Token = "0x20002CC")]
public class TriggerSoilModifiers : MonoBehaviour
{
	[Token(Token = "0x20002CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBBB4", Offset = "0x9FBBB4")]
	private sealed class <StaggerSoilModifierActivations>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TriggerSoilModifiers <>4__this;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600122C")]
			[Address(RVA = "0x1AE336C", Offset = "0x1AE336C", VA = "0x1AE336C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600122E")]
			[Address(RVA = "0x1AE33D4", Offset = "0x1AE33D4", VA = "0x1AE33D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1AE31E8", Offset = "0x1AE31E8", VA = "0x1AE31E8")]
		[DebuggerHidden]
		public <StaggerSoilModifierActivations>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1AE3224", Offset = "0x1AE3224", VA = "0x1AE3224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1AE3228", Offset = "0x1AE3228", VA = "0x1AE3228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x1AE3374", Offset = "0x1AE3374", VA = "0x1AE3374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float modificationMultiplier;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SoilModifierComponent[] soilModifiers;

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x1AE3134", Offset = "0x1AE3134", VA = "0x1AE3134")]
	public void OnTriggerSoilModifiers()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x1AE316C", Offset = "0x1AE316C", VA = "0x1AE316C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12A34", Offset = "0xA12A34")]
	private IEnumerator StaggerSoilModifierActivations()
	{
		return null;
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x1AE3214", Offset = "0x1AE3214", VA = "0x1AE3214")]
	public TriggerSoilModifiers()
	{
	}
}
[Token(Token = "0x20002CE")]
public class ImportantItemState : ComponentState
{
	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveID ImpostorSaveID;

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xE10B04", Offset = "0xE10B04", VA = "0xE10B04")]
	public ImportantItemState(SaveID impostorId)
	{
	}
}
[Token(Token = "0x20002CF")]
public enum MissionBeaconMapType
{
	[Token(Token = "0x40011E1")]
	Homeland,
	[Token(Token = "0x40011E2")]
	Biome1,
	[Token(Token = "0x40011E3")]
	Biome2,
	[Token(Token = "0x40011E4")]
	Biome3,
	[Token(Token = "0x40011E5")]
	COUNT
}
[Token(Token = "0x20002D0")]
public enum MissionBeaconMapState
{
	[Token(Token = "0x40011E7")]
	Locked,
	[Token(Token = "0x40011E8")]
	Unlocked,
	[Token(Token = "0x40011E9")]
	Finished
}
[Token(Token = "0x20002D1")]
public class MissionBeaconMapStateUpdateEvent : GameEvent
{
	[Token(Token = "0x6001230")]
	[Address(RVA = "0xD0880C", Offset = "0xD0880C", VA = "0xD0880C")]
	public MissionBeaconMapStateUpdateEvent()
	{
	}
}
[Token(Token = "0x20002D2")]
public class TotemQuestBody : SaveableComponent, IInitializable
{
	[Token(Token = "0x20002D3")]
	public struct HeadAttachPointData
	{
		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject AttachPointObject;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collider AttachPointCollider;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TotemQuestHead OccupyingObject;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SlotRotation;
	}

	[Token(Token = "0x20002D4")]
	private struct TotemHeadsRotationStep
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float[] TotemRotations;
	}

	[Token(Token = "0x20002D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBBC4", Offset = "0x9FBBC4")]
	private sealed class <RotateTotemHeads_Sequentially>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestBody <>4__this;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TotemHeadsRotationStep[] <totemRotationSteps>5__2;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <currentRotationTime>5__3;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <numRotationSteps>5__4;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <previousRotationStep>5__5;

		[Token(Token = "0x170001DB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600124A")]
			[Address(RVA = "0x1ADFD9C", Offset = "0x1ADFD9C", VA = "0x1ADFD9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600124C")]
			[Address(RVA = "0x1ADFE04", Offset = "0x1ADFE04", VA = "0x1ADFE04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1ADF608", Offset = "0x1ADF608", VA = "0x1ADF608")]
		[DebuggerHidden]
		public <RotateTotemHeads_Sequentially>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1ADF634", Offset = "0x1ADF634", VA = "0x1ADF634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1ADF638", Offset = "0x1ADF638", VA = "0x1ADF638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1ADFDA4", Offset = "0x1ADFDA4", VA = "0x1ADFDA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBBD4", Offset = "0x9FBBD4")]
	private sealed class <ResetTotemHeadRotations>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestBody <>4__this;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <numTotemHeads>5__2;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] <initialTotemRotations>5__3;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <currentRotationTime>5__4;

		[Token(Token = "0x170001DD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001250")]
			[Address(RVA = "0x1ADF598", Offset = "0x1ADF598", VA = "0x1ADF598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001252")]
			[Address(RVA = "0x1ADF600", Offset = "0x1ADF600", VA = "0x1ADF600", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1ADEF58", Offset = "0x1ADEF58", VA = "0x1ADEF58")]
		[DebuggerHidden]
		public <ResetTotemHeadRotations>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1ADEF84", Offset = "0x1ADEF84", VA = "0x1ADEF84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1ADEF88", Offset = "0x1ADEF88", VA = "0x1ADEF88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x1ADF5A0", Offset = "0x1ADF5A0", VA = "0x1ADF5A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TotemQuestBody Instance;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject[] TotemHeadAttachPoints;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HeadAttachPointData[] TotemHeadAttachPointDatas;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material TotemHeadPreviewMaterial;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TotemHeadRotationDuration;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float TotemHeadResetDuration;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] InitialSlotRotations;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool IsRotating;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] CurrentRotationTargets;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool PuzzleFinished;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA030A8", Offset = "0xA030A8")]
	private NeatAudioPlayer TotemBodyAudioPlayer;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private NeatAudioPlayer TotemBodyLoopAudioPlayer;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private NeatAudioCue TotemHeadShowVisualizationCue;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private NeatAudioCue TotemHeadAttachedCue;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private NeatAudioCue TotemHeadRotationCue;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private NeatAudioCue TotemHeadRotationFinishedCue;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private NeatAudioCue TotemPuzzleCompleteCue;

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xCB88D0", Offset = "0xCB88D0", VA = "0xCB88D0")]
	public TotemQuestBody()
	{
	}

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xCB8988", Offset = "0xCB8988", VA = "0xCB8988")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xCB89E0", Offset = "0xCB89E0", VA = "0xCB89E0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xCB8A90", Offset = "0xCB8A90", VA = "0xCB8A90", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xCB8BFC", Offset = "0xCB8BFC", VA = "0xCB8BFC")]
	public void InitializeAttachPointData()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xCB8E40", Offset = "0xCB8E40", VA = "0xCB8E40")]
	public int GetOptimalHeadAttachPointIndex(PlayerHand holdingHand)
	{
		return default(int);
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xCB9278", Offset = "0xCB9278", VA = "0xCB9278")]
	public bool AttachTotemHead(TotemQuestHead inHead, int inAttachPointIndex, bool canTriggerRotation = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xCB9604", Offset = "0xCB9604", VA = "0xCB9604")]
	public void DetachTotemHead(TotemQuestHead inHead, int inAttachPointIndex)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xCB9728", Offset = "0xCB9728", VA = "0xCB9728")]
	public void PreviewTotemHeadOnAttachPoint(int inAttachSlotID, Mesh inTotemHeadMesh, Vector3 meshScale)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xCB9930", Offset = "0xCB9930", VA = "0xCB9930")]
	public void PlayShowVisualizationAudio()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xCB94E0", Offset = "0xCB94E0", VA = "0xCB94E0")]
	public bool ShouldTriggerTotemHeadRotation()
	{
		return default(bool);
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xCB95CC", Offset = "0xCB95CC", VA = "0xCB95CC")]
	public void TriggerTotemHeadRotation()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xCB9954", Offset = "0xCB9954", VA = "0xCB9954")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12AE8", Offset = "0xA12AE8")]
	public IEnumerator RotateTotemHeads_Sequentially()
	{
		return null;
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xCB99D0", Offset = "0xCB99D0", VA = "0xCB99D0")]
	private void PlayTotemHeadRotationFinishedSound()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xCB99F4", Offset = "0xCB99F4", VA = "0xCB99F4")]
	public void ValidateTotemHeadRotations()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xCB9AC0", Offset = "0xCB9AC0", VA = "0xCB9AC0")]
	public void OnPuzzleFinished()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xCB9B68", Offset = "0xCB9B68", VA = "0xCB9B68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12B4C", Offset = "0xA12B4C")]
	public IEnumerator ResetTotemHeadRotations()
	{
		return null;
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xCB9D10", Offset = "0xCB9D10", VA = "0xCB9D10")]
	public float[] CalculateTargetRotations()
	{
		return null;
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xCB9E64", Offset = "0xCB9E64", VA = "0xCB9E64")]
	private TotemHeadsRotationStep[] CalculateRotationSteps()
	{
		return null;
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xCB9BE4", Offset = "0xCB9BE4", VA = "0xCB9BE4")]
	public void SetTotemHeadsGrabbable(bool newGrabbable)
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xCBA080", Offset = "0xCBA080", VA = "0xCBA080")]
	public bool HeadIndexHaveCorrectRotation(int inHeadIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xCBA114", Offset = "0xCBA114", VA = "0xCBA114", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}
}
[Token(Token = "0x20002D7")]
public class TotemQuestBodyState : ComponentState
{
	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool PuzzleFinished;

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1ADFE0C", Offset = "0x1ADFE0C", VA = "0x1ADFE0C")]
	public TotemQuestBodyState()
	{
	}
}
[Token(Token = "0x20002D8")]
public class TotemQuestDoor : SaveableComponent, IInitializable
{
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBBE4", Offset = "0x9FBBE4")]
	private sealed class <OpenDoor>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestDoor <>4__this;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <currentTime>5__2;

		[Token(Token = "0x170001DF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600125F")]
			[Address(RVA = "0x1AE0530", Offset = "0x1AE0530", VA = "0x1AE0530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001261")]
			[Address(RVA = "0x1AE0598", Offset = "0x1AE0598", VA = "0x1AE0598", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1AE01F0", Offset = "0x1AE01F0", VA = "0x1AE01F0")]
		[DebuggerHidden]
		public <OpenDoor>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1AE02E8", Offset = "0x1AE02E8", VA = "0x1AE02E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1AE02EC", Offset = "0x1AE02EC", VA = "0x1AE02EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1AE0538", Offset = "0x1AE0538", VA = "0x1AE0538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBBF4", Offset = "0x9FBBF4")]
	private sealed class <PlayOpenDoorAudio>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestDoor <>4__this;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <openDoorSoundTimer>5__2;

		[Token(Token = "0x170001E1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001265")]
			[Address(RVA = "0x1AE0658", Offset = "0x1AE0658", VA = "0x1AE0658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001267")]
			[Address(RVA = "0x1AE06C0", Offset = "0x1AE06C0", VA = "0x1AE06C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1AE021C", Offset = "0x1AE021C", VA = "0x1AE021C")]
		[DebuggerHidden]
		public <PlayOpenDoorAudio>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1AE05A0", Offset = "0x1AE05A0", VA = "0x1AE05A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1AE05A4", Offset = "0x1AE05A4", VA = "0x1AE05A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1AE0660", Offset = "0x1AE0660", VA = "0x1AE0660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float DoorOpenDuration;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AnimationCurve DoorOpenCurve;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float DoorOpenTargetY;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject DoorObject;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject DoorBlockingVolume;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA031A4", Offset = "0xA031A4")]
	[SerializeField]
	private NeatAudioPlayer DoorAudioPlayer;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private NeatAudioCue DoorOpenCue;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float DoorOpenSoundDelay;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float InitialDoorYPosition;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool DoorIsOpen;

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1ADFE14", Offset = "0x1ADFE14", VA = "0x1ADFE14", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1AE000C", Offset = "0x1AE000C", VA = "0x1AE000C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x1AE00B4", Offset = "0x1AE00B4", VA = "0x1AE00B4")]
	public void OnOpenDoorEvent(TotemQuestDoorOpenEvent e)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x1AE00F8", Offset = "0x1AE00F8", VA = "0x1AE00F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12C50", Offset = "0xA12C50")]
	public IEnumerator OpenDoor()
	{
		return null;
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x1AE0174", Offset = "0x1AE0174", VA = "0x1AE0174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12CB4", Offset = "0xA12CB4")]
	public IEnumerator PlayOpenDoorAudio()
	{
		return null;
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x1ADFF70", Offset = "0x1ADFF70", VA = "0x1ADFF70")]
	public void ForceOpenDoor()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x1AE0248", Offset = "0x1AE0248", VA = "0x1AE0248", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x1AE02E0", Offset = "0x1AE02E0", VA = "0x1AE02E0")]
	public TotemQuestDoor()
	{
	}
}
[Token(Token = "0x20002DB")]
public class TotemQuestDoorState : ComponentState
{
	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool DoorIsOpen;

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1AE02B0", Offset = "0x1AE02B0", VA = "0x1AE02B0")]
	public TotemQuestDoorState(bool inDoorIsOpen)
	{
	}
}
[Token(Token = "0x20002DC")]
public class TotemQuestDoorOpenEvent : GameEvent
{
	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1AE06C8", Offset = "0x1AE06C8", VA = "0x1AE06C8")]
	public TotemQuestDoorOpenEvent()
	{
	}
}
[Token(Token = "0x20002DD")]
public class TotemQuestHead : SaveableComponent, IInitializable
{
	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBC04", Offset = "0x9FBC04")]
	private sealed class <Illuminate>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotemQuestHead <>4__this;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float TargetIllumination;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentIlluminationFadeTime>5__2;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x1AE1340", Offset = "0x1AE1340", VA = "0x1AE1340", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x1AE13A8", Offset = "0x1AE13A8", VA = "0x1AE13A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x1AE0FA8", Offset = "0x1AE0FA8", VA = "0x1AE0FA8")]
		[DebuggerHidden]
		public <Illuminate>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x1AE118C", Offset = "0x1AE118C", VA = "0x1AE118C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x1AE1190", Offset = "0x1AE1190", VA = "0x1AE1190", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1AE1348", Offset = "0x1AE1348", VA = "0x1AE1348", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Grabbable TotemHeadGrabbable;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool IsBeingGrabbed;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerHand GrabbingHand;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int TargetedTotemBodyAttachPoint;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int OccupiedTotemBodyAttachPoint;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int PreviouslyTargetedTotemBodyAttachPoint;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Mesh TotemHeadPreviewMesh;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector3 TotemHeadPreviewMeshScale;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float HeadRotationAmount;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer[] HeadMeshRenderers;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MaterialPropertyBlock HeadMeshPropertyBlock;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float CurrentIllumination;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float IlluminationFadeDuration;

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1AE06D0", Offset = "0x1AE06D0", VA = "0x1AE06D0", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1AE0AC4", Offset = "0x1AE0AC4", VA = "0x1AE0AC4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x1AE0C44", Offset = "0x1AE0C44", VA = "0x1AE0C44")]
	public void Update()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x1AE0D70", Offset = "0x1AE0D70", VA = "0x1AE0D70")]
	public void OnGrabbed(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1AE0E4C", Offset = "0x1AE0E4C", VA = "0x1AE0E4C")]
	public void OnDropped(Grabbable inGrabbable)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x1ADFD6C", Offset = "0x1ADFD6C", VA = "0x1ADFD6C")]
	public void ShowIllumination()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x1ADF568", Offset = "0x1ADF568", VA = "0x1ADF568")]
	public void HideIllumination()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1AE0F1C", Offset = "0x1AE0F1C", VA = "0x1AE0F1C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12DB8", Offset = "0xA12DB8")]
	public IEnumerator Illuminate(float TargetIllumination)
	{
		return null;
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x1AE0FD4", Offset = "0x1AE0FD4", VA = "0x1AE0FD4")]
	public void ForceIllumination(float inIllumination)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x1AE1068", Offset = "0x1AE1068", VA = "0x1AE1068")]
	private void UpdatePropertyBlocks()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x1AE10F4", Offset = "0x1AE10F4", VA = "0x1AE10F4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x1AE116C", Offset = "0x1AE116C", VA = "0x1AE116C")]
	public TotemQuestHead()
	{
	}
}
[Token(Token = "0x20002DF")]
public class TotemQuestHeadState : ComponentState
{
	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int OccupiedTotemBodySlot;

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x1AE1164", Offset = "0x1AE1164", VA = "0x1AE1164")]
	public TotemQuestHeadState()
	{
	}
}
[Token(Token = "0x20002E0")]
public class GodHandsAttachSocket : MonoBehaviour
{
	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AttachSlot m_crystalAttashSlot;

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xE035F4", Offset = "0xE035F4", VA = "0xE035F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xE0369C", Offset = "0xE0369C", VA = "0xE0369C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xE03744", Offset = "0xE03744", VA = "0xE03744")]
	private void OnGodStatueStartSpinning(GodStatueStartSpinningEvent e)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xE03748", Offset = "0xE03748", VA = "0xE03748")]
	private void DettachGem()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xE03930", Offset = "0xE03930", VA = "0xE03930")]
	public GodHandsAttachSocket()
	{
	}
}
[Token(Token = "0x20002E1")]
public class RandomAnimationBehavior : StateMachineBehaviour
{
	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA03240", Offset = "0xA03240")]
	public string parameterName;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA03278", Offset = "0xA03278")]
	public int numAnimsToChooseBetween;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA032B0", Offset = "0xA032B0")]
	public float chance;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA032E8", Offset = "0xA032E8")]
	public float delay;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeSinceStateWasEntered;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool animHasBeenTriggered;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool hasRandomized;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentStateTime;

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xC6C72C", Offset = "0xC6C72C", VA = "0xC6C72C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xC6C738", Offset = "0xC6C738", VA = "0xC6C738", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xC6C888", Offset = "0xC6C888", VA = "0xC6C888", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xC6C908", Offset = "0xC6C908", VA = "0xC6C908")]
	public RandomAnimationBehavior()
	{
	}
}
[Token(Token = "0x20002E2")]
public class RecordingCamera : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002E3")]
	public struct SmoothingConfig
	{
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float radius;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float angle;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float harshness;

		[Token(Token = "0x170001E5")]
		public float RadiusSq
		{
			[Token(Token = "0x600128D")]
			[Address(RVA = "0xAD6000", Offset = "0xAD6000", VA = "0xAD6000")]
			get
			{
				return default(float);
			}
		}
	}

	[Token(Token = "0x20002E4")]
	public enum LerpRotMode
	{
		[Token(Token = "0x4001246")]
		Smooth,
		[Token(Token = "0x4001247")]
		SmoothBasedOnPosition
	}

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetCamera;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SmoothingConfig inner;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public SmoothingConfig outer;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LerpRotMode rotMode;

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xC72B3C", Offset = "0xC72B3C", VA = "0xC72B3C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xC72BF0", Offset = "0xC72BF0", VA = "0xC72BF0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xC72C08", Offset = "0xC72C08", VA = "0xC72C08")]
	private void Update()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xC72C0C", Offset = "0xC72C0C", VA = "0xC72C0C")]
	public void UpdateSmoothing()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xC72F4C", Offset = "0xC72F4C", VA = "0xC72F4C")]
	public float GetSmoothingHarshness(float refDist, float distMin, float distMax, float valueMin, float valueMax, bool needsSquareRoot = false)
	{
		return default(float);
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xC730B8", Offset = "0xC730B8", VA = "0xC730B8")]
	public void Enable(bool enable)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xC7323C", Offset = "0xC7323C", VA = "0xC7323C")]
	public RecordingCamera()
	{
	}
}
[Token(Token = "0x20002E5")]
public enum SoilDataType
{
	[Token(Token = "0x4001249")]
	Validity,
	[Token(Token = "0x400124A")]
	Tillability,
	[Token(Token = "0x400124B")]
	Soilness,
	[Token(Token = "0x400124C")]
	Waterness,
	[Token(Token = "0x400124D")]
	Fertility,
	[Token(Token = "0x400124E")]
	NumTypes
}
[Token(Token = "0x20002E6")]
public class SoilManager : MonoBehaviour
{
	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoilManager instance;

	[Token(Token = "0x4001250")]
	public const string TillableMaterialPath = "Assets/Data/Soil Data Presets/TillableMaterials.asset";

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static TillableMaterials tillableMaterials;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TillableMaterials m_tillableMaterials;

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xCE2C70", Offset = "0xCE2C70", VA = "0xCE2C70")]
	public static SoilSurface TryGetSurface(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xCE2D50", Offset = "0xCE2D50", VA = "0xCE2D50")]
	public static SoilSurface TryGetSurface(Collision col)
	{
		return null;
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xCE2DD0", Offset = "0xCE2DD0", VA = "0xCE2DD0")]
	public static SoilSurface TryGetSurface(RaycastHit hit)
	{
		return null;
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xCE2E48", Offset = "0xCE2E48", VA = "0xCE2E48")]
	public static bool TryTill(Collision col, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xCE301C", Offset = "0xCE301C", VA = "0xCE301C")]
	public static bool TryTill(RaycastHit hit, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xCE2F24", Offset = "0xCE2F24", VA = "0xCE2F24")]
	public static bool TryTill(Collider collider, Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xCE30CC", Offset = "0xCE30CC", VA = "0xCE30CC")]
	public static bool TryUntill(Collision col, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xCE32A0", Offset = "0xCE32A0", VA = "0xCE32A0")]
	public static bool TryUntill(RaycastHit hit, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xCE31A8", Offset = "0xCE31A8", VA = "0xCE31A8")]
	public static bool TryUntill(Collider collider, Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xCE3350", Offset = "0xCE3350", VA = "0xCE3350")]
	public static bool TryWater(Collision col, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xCE3550", Offset = "0xCE3550", VA = "0xCE3550")]
	public static bool TryWater(RaycastHit hit, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xCE343C", Offset = "0xCE343C", VA = "0xCE343C")]
	public static bool TryWater(Collider collider, Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xCE3610", Offset = "0xCE3610", VA = "0xCE3610")]
	public static bool TryFertilize(Collision col, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xCE37EC", Offset = "0xCE37EC", VA = "0xCE37EC")]
	public static bool TryFertilize(RaycastHit hit, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xCE36EC", Offset = "0xCE36EC", VA = "0xCE36EC")]
	public static bool TryFertilize(Collider collider, Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xCE389C", Offset = "0xCE389C", VA = "0xCE389C")]
	public void Awake()
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xCE390C", Offset = "0xCE390C", VA = "0xCE390C")]
	public static TillableMaterials GetTillableMaterials()
	{
		return null;
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xCE3968", Offset = "0xCE3968", VA = "0xCE3968")]
	private static TillableMaterials GetInstancedTillableMaterials()
	{
		return null;
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xCE3AA8", Offset = "0xCE3AA8", VA = "0xCE3AA8")]
	public SoilManager()
	{
	}
}
[Token(Token = "0x20002E7")]
public enum SoilSurfaceBiome
{
	[Token(Token = "0x4001254")]
	Default,
	[Token(Token = "0x4001255")]
	Biome1,
	[Token(Token = "0x4001256")]
	Biome2,
	[Token(Token = "0x4001257")]
	Biome3,
	[Token(Token = "0x4001258")]
	Biome4,
	[Token(Token = "0x4001259")]
	COUNT
}
[Token(Token = "0x20002E8")]
public class SoilSurface : SaveableComponent, IInitializable
{
	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SoilSurface> surfaces;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Collider, SoilSurface> colliderToSurface;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<SaveID, SoilSurface> saveIdToSurface;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool initialized;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected SaveID saveId;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int SurfaceID;

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xCE2CD4", Offset = "0xCE2CD4", VA = "0xCE2CD4")]
	public static SoilSurface TryGetSurface(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xCE7274", Offset = "0xCE7274", VA = "0xCE7274")]
	public static SoilSurface TryGetSurfaceFromId(SaveID id)
	{
		return null;
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xCE7358", Offset = "0xCE7358", VA = "0xCE7358")]
	public static void AddSurface(SoilSurface surface)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xCE7744", Offset = "0xCE7744", VA = "0xCE7744")]
	public static void RemoveSurface(SoilSurface surface)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xCE78E4", Offset = "0xCE78E4", VA = "0xCE78E4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xCE795C", Offset = "0xCE795C", VA = "0xCE795C", Slot = "7")]
	public virtual Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xCE7964", Offset = "0xCE7964", VA = "0xCE7964", Slot = "8")]
	public virtual float Get(SoilDataType soilDataType, Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xCE796C", Offset = "0xCE796C", VA = "0xCE796C", Slot = "9")]
	public virtual bool TryTill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xCE7974", Offset = "0xCE7974", VA = "0xCE7974", Slot = "10")]
	public virtual bool TryUntill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xCE797C", Offset = "0xCE797C", VA = "0xCE797C", Slot = "11")]
	public virtual bool TryWater(Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xCE7984", Offset = "0xCE7984", VA = "0xCE7984", Slot = "12")]
	public virtual bool TryFertilize(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xCE798C", Offset = "0xCE798C", VA = "0xCE798C", Slot = "13")]
	public virtual bool IsUntillableSoilSurface()
	{
		return default(bool);
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xCE7994", Offset = "0xCE7994", VA = "0xCE7994", Slot = "14")]
	public virtual SaveID GetSaveID()
	{
		return default(SaveID);
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xCE7A64", Offset = "0xCE7A64", VA = "0xCE7A64", Slot = "15")]
	public virtual Vector2Int GetSoilSurfacePosition(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xCE7A98", Offset = "0xCE7A98", VA = "0xCE7A98", Slot = "16")]
	public virtual Vector2 GetSoilSurfacePositionFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xCE7ACC", Offset = "0xCE7ACC", VA = "0xCE7ACC", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xCE7B28", Offset = "0xCE7B28", VA = "0xCE7B28", Slot = "17")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xCE7B98", Offset = "0xCE7B98", VA = "0xCE7B98", Slot = "18")]
	public virtual void UpdateRenderData()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xCE7B9C", Offset = "0xCE7B9C", VA = "0xCE7B9C", Slot = "19")]
	public virtual void UpdateTillableMaterials()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xCE7BA0", Offset = "0xCE7BA0", VA = "0xCE7BA0")]
	public SoilSurface()
	{
	}
}
[Token(Token = "0x20002E9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBC14", Offset = "0x9FBC14")]
public class SoilSurfaceDataPreset : ScriptableObject
{
	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material ProceduralGrassMaterial;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh ProceduralGrassMesh;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material ProceduralGrassInstancedMaterial;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ComputeShader ProceduralGrassComputeShader;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SoilSurfaceBiome SurfaceBiome;

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xCE7C98", Offset = "0xCE7C98", VA = "0xCE7C98")]
	public SoilSurfaceDataPreset()
	{
	}
}
[Token(Token = "0x20002EA")]
[ExecuteInEditMode]
public class SoilSurfaceGround : SoilSurface
{
	[Token(Token = "0x4001265")]
	private const float TILL_RADIUS_WORLD = 1f;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SurfaceData surfaceData;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material matGrass;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoilSurfaceDataPreset DataPreset;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SoilSurfaceBiome SurfaceBiomeType;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SurfaceGrass grass;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material matBlitData;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material matBlitInit;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool HaveUntillableAreas;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool HaveSurfaceGrass;

	[Token(Token = "0x400126F")]
	public const float HEIGHT_DISCREPANCY_THRESHOLD = 0.05f;

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xCE7CA0", Offset = "0xCE7CA0", VA = "0xCE7CA0", Slot = "13")]
	public override bool IsUntillableSoilSurface()
	{
		return default(bool);
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xCE7CA8", Offset = "0xCE7CA8", VA = "0xCE7CA8", Slot = "17")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xCE8034", Offset = "0xCE8034", VA = "0xCE8034", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xCE8178", Offset = "0xCE8178", VA = "0xCE8178", Slot = "15")]
	public override Vector2Int GetSoilSurfacePosition(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xCE81C4", Offset = "0xCE81C4", VA = "0xCE81C4", Slot = "16")]
	public override Vector2 GetSoilSurfacePositionFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xCE8210", Offset = "0xCE8210", VA = "0xCE8210", Slot = "8")]
	public override float Get(SoilDataType soilDataType, Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xCE8298", Offset = "0xCE8298", VA = "0xCE8298", Slot = "7")]
	public override Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xCE82B4", Offset = "0xCE82B4", VA = "0xCE82B4", Slot = "9")]
	public override bool TryTill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xCE8308", Offset = "0xCE8308", VA = "0xCE8308", Slot = "10")]
	public override bool TryUntill(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xCE8338", Offset = "0xCE8338", VA = "0xCE8338", Slot = "11")]
	public override bool TryWater(Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xCE836C", Offset = "0xCE836C", VA = "0xCE836C", Slot = "12")]
	public override bool TryFertilize(Vector3 worldPos, float radius)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xCE82E4", Offset = "0xCE82E4", VA = "0xCE82E4")]
	private bool ModifySurface(Vector3 worldPos, float delta, float radius, SoilDataType soilDataType)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xCE69E0", Offset = "0xCE69E0", VA = "0xCE69E0")]
	public bool ModifyNativeSurfaceData(Vector3 worldPos, float delta, float radius, SoilDataType soilDataType, bool inUseFalloff = true, bool inValueChanged = true, float inDuration = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xCE839C", Offset = "0xCE839C", VA = "0xCE839C", Slot = "19")]
	public override void UpdateTillableMaterials()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xCE83B8", Offset = "0xCE83B8", VA = "0xCE83B8", Slot = "18")]
	public override void UpdateRenderData()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xCE83FC", Offset = "0xCE83FC", VA = "0xCE83FC")]
	public void SetNeedsGrassRenderUpdate(bool newNeedsGrassRenderUpdate)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xCE841C", Offset = "0xCE841C", VA = "0xCE841C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xCE8594", Offset = "0xCE8594", VA = "0xCE8594")]
	public SoilSurfaceGround()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EB")]
public class SoilSurfaceGroundState : ComponentStateWithBinaryData
{
	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool HaveUntillableAreas;

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xCE860C", Offset = "0xCE860C", VA = "0xCE860C", Slot = "4")]
	public override string GetFilenameExtension()
	{
		return null;
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xCE858C", Offset = "0xCE858C", VA = "0xCE858C")]
	public SoilSurfaceGroundState()
	{
	}
}
[Token(Token = "0x20002EC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FBC8C", Offset = "0x9FBC8C")]
public class SoilSurfaceSimple : SoilSurface
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer soilMeshRenderer;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private ObjectContainer objectContainer;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Grabbable parentGrabbable;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float waternessAtStart;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int sPropWaterness;

	[Token(Token = "0x170001E6")]
	public float Waterness
	{
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xCE8654", Offset = "0xCE8654", VA = "0xCE8654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xCE86E0", Offset = "0xCE86E0", VA = "0xCE86E0")]
		set
		{
		}
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xCE87BC", Offset = "0xCE87BC", VA = "0xCE87BC", Slot = "8")]
	public override float Get(SoilDataType soilDataType, Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xCE87D0", Offset = "0xCE87D0", VA = "0xCE87D0", Slot = "14")]
	public override SaveID GetSaveID()
	{
		return default(SaveID);
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xCE8924", Offset = "0xCE8924", VA = "0xCE8924", Slot = "7")]
	public override Collider[] GetColliders()
	{
		return null;
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xCE892C", Offset = "0xCE892C", VA = "0xCE892C", Slot = "11")]
	public override bool TryWater(Vector3 worldPos, float radius, float waterDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xCE8968", Offset = "0xCE8968", VA = "0xCE8968", Slot = "17")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xCE8C68", Offset = "0xCE8C68", VA = "0xCE8C68", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xCE8CE4", Offset = "0xCE8CE4", VA = "0xCE8CE4")]
	public void AddPlant(PlantPositionProxy plant)
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xCE8EE4", Offset = "0xCE8EE4", VA = "0xCE8EE4")]
	public void ParentGrabbed(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xCE8FF4", Offset = "0xCE8FF4", VA = "0xCE8FF4")]
	public void ParentDropped(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xCE9104", Offset = "0xCE9104", VA = "0xCE9104")]
	public void ParentStashed()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xCE910C", Offset = "0xCE910C", VA = "0xCE910C")]
	public void DetachItem(Grabbable grabbable)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xCE8DC8", Offset = "0xCE8DC8", VA = "0xCE8DC8")]
	public void AddStashable(Stashable stashable)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xCE91B8", Offset = "0xCE91B8", VA = "0xCE91B8")]
	public SoilSurfaceSimple()
	{
	}
}
[Serializable]
[Token(Token = "0x20002ED")]
public class SoilSurfaceSimpleState : ComponentState
{
	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float water;

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xCE8CDC", Offset = "0xCE8CDC", VA = "0xCE8CDC")]
	public SoilSurfaceSimpleState()
	{
	}
}
[Token(Token = "0x20002EE")]
public class SoilTillingDebugger : MonoBehaviour
{
	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool tillMode;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool waterMode;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool gridMode;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gridSize;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03370", Offset = "0xA03370")]
	public int gridDimension;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool thresholdSoilness;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03388", Offset = "0xA03388")]
	public float waterDelta;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA033A0", Offset = "0xA033A0")]
	public float radius;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA033B8", Offset = "0xA033B8")]
	public float soilVisualizationThreshold;

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xCE928C", Offset = "0xCE928C", VA = "0xCE928C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xCE93E0", Offset = "0xCE93E0", VA = "0xCE93E0")]
	public void RayGizmo(Vector3 origin, float gizmoSize = 0.1f)
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xCE9490", Offset = "0xCE9490", VA = "0xCE9490")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xCE9410", Offset = "0xCE9410", VA = "0xCE9410")]
	private bool SurfaceRay(Vector3 origin, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xCE94D4", Offset = "0xCE94D4", VA = "0xCE94D4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xA12E6C", Offset = "0xA12E6C")]
	public void Till()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xCE95B0", Offset = "0xCE95B0", VA = "0xCE95B0")]
	public void Water()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xCE96B4", Offset = "0xCE96B4", VA = "0xCE96B4")]
	public SoilTillingDebugger()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EF")]
public class SurfaceData
{
	[Token(Token = "0x20002F0")]
	public struct TexelData
	{
		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Validity;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Tillability;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Soilness;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Waterness;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Fertility;

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xCA2C18", Offset = "0xCA2C18", VA = "0xCA2C18")]
		public static TexelData Lerp(in TexelData data1, in TexelData data2, in float lerpVal)
		{
			return default(TexelData);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xCA2E88", Offset = "0xCA2E88", VA = "0xCA2E88")]
		public static void Lerp(out TexelData outData, in TexelData data1, in TexelData data2, in float lerpVal)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xCA2F10", Offset = "0xCA2F10", VA = "0xCA2F10")]
		public unsafe static TexelData BilinearSampleData(in TexelData* inBufferPtr, in Vector2 inSampleLocation, in Vector2Int inBufferExtents)
		{
			return default(TexelData);
		}
	}

	[Serializable]
	[Token(Token = "0x20002F1")]
	private struct TillableMaterialInfo
	{
		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Renderer Renderer;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int MaterialIndex;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool Initialized;

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xAD6234", Offset = "0xAD6234", VA = "0xAD6234")]
		public TillableMaterialInfo(Renderer renderer, int materialIndex)
		{
		}
	}

	[Token(Token = "0x4001282")]
	private const int AMBIENT_LIGHTNESS_RAY_COUNT_NORMAL = 256;

	[Token(Token = "0x4001283")]
	private const int AMBIENT_LIGHTNESS_RAY_COUNT_FINAL = 1024;

	[Token(Token = "0x4001284")]
	public const int TEXELS_PER_METER = 4;

	[Token(Token = "0x4001285")]
	public const float METERS_PER_TEXEL = 0.25f;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D textureBaked;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rect worldBounds;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect gridRegionTexture;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider[] colliders;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] renderers;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float surfacePosY;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float areaM2;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector2Int validMin;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Vector2Int validRes;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Vector2Int validMax;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public byte[] SavedBinaryData;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public NativeArray<TexelData> NativeTexelData;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ComputeBuffer DataBuffer;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool HaveUntillableAreas;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	[HideInInspector]
	public bool NeedGrassRenderUpdate;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInitializedPropertyBlock;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static MaterialPropertyBlock RenderPropertyBlock;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int soilDataBufferProperty;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int maskWorldMinMaxProperty;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int soilDataDimensionsProperty;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int disableSoilProperty;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector4 m_worldMinMax;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 m_soilDimension;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	private bool hasTillableMaterial;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private TillableMaterialInfo[] tillableMaterialInfo;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SoilSurfaceDataPreset DataPreset;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Mesh meshPreview;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material matPreview;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Vector2Int[] directions;

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xCA17BC", Offset = "0xCA17BC", VA = "0xCA17BC")]
	public static int TexelDataSize()
	{
		return default(int);
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xCA17C4", Offset = "0xCA17C4", VA = "0xCA17C4")]
	public Vector2Int GetValidRes()
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xCA17CC", Offset = "0xCA17CC", VA = "0xCA17CC")]
	private bool UpdateDataBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xCA18CC", Offset = "0xCA18CC", VA = "0xCA18CC")]
	private void InitializeRendererPropertyBlock()
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xCA1BD0", Offset = "0xCA1BD0", VA = "0xCA1BD0")]
	public void UpdateRendererMaterialDefines(bool inHaveUntillableAreas)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xCA1BD4", Offset = "0xCA1BD4", VA = "0xCA1BD4")]
	public void UpdateTillableMaterialInfo()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xCA1EB4", Offset = "0xCA1EB4", VA = "0xCA1EB4")]
	public bool UpdateRendererPropertyBlocks(bool forceInitialize = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xCA1AE8", Offset = "0xCA1AE8", VA = "0xCA1AE8")]
	private void SetPropertyBlockData()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xCA2028", Offset = "0xCA2028", VA = "0xCA2028")]
	public void SetNeedsGrassRenderUpdate(bool newNeedGrassRenderUpdate)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xCA1C00", Offset = "0xCA1C00", VA = "0xCA1C00")]
	private bool TryGetTillableMaterials(out TillableMaterialInfo[] tillables)
	{
		return default(bool);
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xCA2068", Offset = "0xCA2068", VA = "0xCA2068", Slot = "1")]
	~SurfaceData()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xCA20D0", Offset = "0xCA20D0", VA = "0xCA20D0")]
	public void CleanupData()
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xCA216C", Offset = "0xCA216C", VA = "0xCA216C")]
	public void GenerateNativeDataFromBinaryArray()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xCA22A0", Offset = "0xCA22A0", VA = "0xCA22A0")]
	public Vector2Int WorldToGrid(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xCA22C0", Offset = "0xCA22C0", VA = "0xCA22C0")]
	public Vector2 WorldToGridFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xCA1A5C", Offset = "0xCA1A5C", VA = "0xCA1A5C")]
	public Vector3 GridToWorld(Vector2Int gridPos, float yWorld)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xCA23C0", Offset = "0xCA23C0", VA = "0xCA23C0")]
	public Vector3 GridToWorld(Vector2 gridPos, float yWorld)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xCA24B0", Offset = "0xCA24B0", VA = "0xCA24B0")]
	public Vector2Int WorldToTexturePixel(Vector3 worldPos)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xCA256C", Offset = "0xCA256C", VA = "0xCA256C")]
	public Vector2 WorldToTexturePixelFloat(Vector3 worldPos)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xCA262C", Offset = "0xCA262C", VA = "0xCA262C")]
	public bool GetGrassValidity(Vector3 worldPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xCA278C", Offset = "0xCA278C", VA = "0xCA278C")]
	public TexelData GetBakedDataBilinear(Vector3 worldPos)
	{
		return default(TexelData);
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xCA2B4C", Offset = "0xCA2B4C", VA = "0xCA2B4C")]
	public TexelData Blerp(TexelData c00, TexelData c01, TexelData c10, TexelData c11, Vector2 t)
	{
		return default(TexelData);
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xCA2C68", Offset = "0xCA2C68", VA = "0xCA2C68")]
	public SurfaceData()
	{
	}
}
[Token(Token = "0x20002F2")]
[ExecuteInEditMode]
public class SurfaceGrass : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002F3")]
	public struct GrassInstanceRenderData
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Matrix4x4 RenderMatrix;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 TexCoord;
	}

	[Serializable]
	[Token(Token = "0x20002F4")]
	public struct GrassSprite
	{
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 texCoord;
	}

	[Token(Token = "0x40012AB")]
	private const float SPRITES_PER_SQUARE_METER = 2f;

	[Token(Token = "0x40012AC")]
	private const float SPRITES_PER_SQUARE_METER_HIGH_END = 25f;

	[Token(Token = "0x40012AD")]
	private const float PATCH_TARGET_SIZE = 18f;

	[Token(Token = "0x40012AE")]
	private const int MIN_SPRITES_PER_PATCH = 4;

	[Token(Token = "0x40012AF")]
	private const int MAX_SPRITES_PER_SURFACE = 40000;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SoilSurfaceGround surface;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SurfaceGrassPatch[] childPatches;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GrassSprite[] CachedSpriteArray;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GrassInstanceRenderData[] CachedRenderArray;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NativeArray<GrassInstanceRenderData> NativePatchRenderers;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int NativePatchCount;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Mesh GrassMesh;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material GrassMaterial;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private ComputeShader GrassComputeShader;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool MeshGrassRenderingEnabled;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ComputeBuffer TempGrassRenderBuffer;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ComputeBuffer TempGrassRenderBufferTarget;

	[Token(Token = "0x6001300")]
	[Address(RVA = "0xCA30CC", Offset = "0xCA30CC", VA = "0xCA30CC")]
	private SurfaceGrass()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0xCA30DC", Offset = "0xCA30DC", VA = "0xCA30DC", Slot = "1")]
	~SurfaceGrass()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0xCA30E4", Offset = "0xCA30E4", VA = "0xCA30E4")]
	public GrassInstanceRenderData[] GetCachedRenderArray()
	{
		return null;
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xCA30EC", Offset = "0xCA30EC", VA = "0xCA30EC")]
	public NativeArray<GrassInstanceRenderData> GetNativeRenderArray(out int count)
	{
		return default(NativeArray<GrassInstanceRenderData>);
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xCA3100", Offset = "0xCA3100", VA = "0xCA3100")]
	public void GenerateGrassPatchesRuntime(SurfaceData surfData)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xCA3630", Offset = "0xCA3630", VA = "0xCA3630")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xCA35B0", Offset = "0xCA35B0", VA = "0xCA35B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12EA4", Offset = "0xA12EA4")]
	internal static int <GenerateGrassPatchesRuntime>g__RoundToPositiveInt|23_0(float value)
	{
		return default(int);
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xCA35A4", Offset = "0xCA35A4", VA = "0xCA35A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12EB4", Offset = "0xA12EB4")]
	internal static int <GenerateGrassPatchesRuntime>g__GetPatchCount|23_1(float length)
	{
		return default(int);
	}
}
[Token(Token = "0x20002F5")]
public class SurfaceGrassManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002F6")]
	public struct WorldZoneGrassData
	{
		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Mesh GrassMesh;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material GrassMaterial;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 GrassWindFrequency;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float GrassWindSpeed;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float GrassWindScale;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 GrassWindStrength;
	}

	[Token(Token = "0x20002F7")]
	private struct ComputeShaderThreadInfo
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ThreadSoilDataOffset;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int ThreadSoilDataCount;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ThreadSoilDataDimensionsX;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int ThreadSoilDataDimensionsY;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ThreadGrassDataOffset;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int ThreadGrassDataCount;
	}

	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBD00", Offset = "0x9FBD00")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoilSurfaceGround inSurface;

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xCA526C", Offset = "0xCA526C", VA = "0xCA526C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xCA5684", Offset = "0xCA5684", VA = "0xCA5684")]
		internal bool <RegisterSoilSurface>b__0(SurfaceGrass element)
		{
			return default(bool);
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xCA570C", Offset = "0xCA570C", VA = "0xCA570C")]
		internal bool <RegisterSoilSurface>b__1(SurfaceGrass element)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBD10", Offset = "0x9FBD10")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoilSurfaceGround inSurface;

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xCA5438", Offset = "0xCA5438", VA = "0xCA5438")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xCA5794", Offset = "0xCA5794", VA = "0xCA5794")]
		internal bool <DeregisterSoilSurface>b__0(SurfaceGrass element)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Bounds> RegisteredGrassBounds;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SurfaceGrass> RegisteredGrass;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SurfaceData> RegisteredSurfaceData;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ComputeShader GrassComputeShader;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh GrassMesh;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material GrassMaterial;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector4 GrassWindFrequency;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector4 GrassWindSettings;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int CurrentNumGrassInstances;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Bounds[] CachedGrassBoundsArray;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool BoundsArrayNeedUpdate;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] LastFrameIndices;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool GrassRenderingState;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public WorldZoneGrassData[] ZoneGrassDatas;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ComputeShaderThreadInfo[] ThreadInfoArray;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ComputeBuffer SoilDataBuffer;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ComputeBuffer GrassDataBuffer;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ComputeBuffer ThreadInfoBuffer;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ComputeBuffer GrassRenderDataBuffer;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int CurrentFrameYThreads;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentFrameXThreads;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int numTotal;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int numRendered;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int numCulledHeight;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int numCulledBehind;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int numCulledDist;

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xCA36A8", Offset = "0xCA36A8", VA = "0xCA36A8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xCA38F0", Offset = "0xCA38F0", VA = "0xCA38F0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xCA3A64", Offset = "0xCA3A64", VA = "0xCA3A64")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xCA3B54", Offset = "0xCA3B54", VA = "0xCA3B54")]
	public void CleanupBuffers()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xCA3C04", Offset = "0xCA3C04", VA = "0xCA3C04")]
	private bool ArraysAreEqual(in int[] first, in int[] second)
	{
		return default(bool);
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xCA3C8C", Offset = "0xCA3C8C", VA = "0xCA3C8C")]
	private bool GrassDataIsUpdated(in int[] indicesToRender, out bool[] outDataNeedUpdate)
	{
		return default(bool);
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xCA3DE4", Offset = "0xCA3DE4", VA = "0xCA3DE4")]
	public void RenderGrass(Camera c)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xCA4258", Offset = "0xCA4258", VA = "0xCA4258")]
	private void UpdateBoundsArray()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xCA42D0", Offset = "0xCA42D0", VA = "0xCA42D0")]
	private int[] CalculateGrassIndicesToRender(Camera c)
	{
		return null;
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xCA4714", Offset = "0xCA4714", VA = "0xCA4714")]
	private void CreateComputeBuffers(in int[] inIndicesToRender)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0xCA4D00", Offset = "0xCA4D00", VA = "0xCA4D00")]
	public void UpdateGrassSoilDataBuffers(in int[] inIndicesToRender, in bool[] inDataNeedUpdate)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xCA4EAC", Offset = "0xCA4EAC", VA = "0xCA4EAC")]
	public void RegisterSoilSurface(SoilSurfaceGround inSurface)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xCA5274", Offset = "0xCA5274", VA = "0xCA5274")]
	public void DeregisterSoilSurface(SoilSurfaceGround inSurface)
	{
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xCA5440", Offset = "0xCA5440", VA = "0xCA5440")]
	public void OnWorldZoneChanged(WorldZone newWorldZone)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xCA3830", Offset = "0xCA3830", VA = "0xCA3830")]
	public void SetCurrentGrassData(int newDataID)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xCA54E4", Offset = "0xCA54E4", VA = "0xCA54E4")]
	public static void ToggleGrassRenderingState()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xCA5574", Offset = "0xCA5574", VA = "0xCA5574")]
	public SurfaceGrassManager()
	{
	}
}
[Token(Token = "0x20002FA")]
public class SurfaceGrassPatch : MonoBehaviour
{
	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material grassMaterial;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter mf;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer rnd;

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xCA581C", Offset = "0xCA581C", VA = "0xCA581C")]
	public void SetPropertyBlock(MaterialPropertyBlock mpb)
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xCA5838", Offset = "0xCA5838", VA = "0xCA5838")]
	public SurfaceGrassPatch()
	{
	}
}
[Token(Token = "0x20002FB")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x6001320")]
	[Address(RVA = "0xCF0180", Offset = "0xCF0180", VA = "0xCF0180")]
	public SteamManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FC")]
public struct TimeOfDayPresetData
{
	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float StartTime;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float EndTime;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float Duration;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EnvironmentPreset Preset;
}
[Token(Token = "0x20002FD")]
[ExecuteInEditMode]
public class EnvironmentManager : SaveableComponent, IInitializable
{
	[Token(Token = "0x20002FE")]
	private enum EnvironmentLerpState
	{
		[Token(Token = "0x400131F")]
		LerpToOverride,
		[Token(Token = "0x4001320")]
		UseOverridePreset,
		[Token(Token = "0x4001321")]
		LerpFromOverride,
		[Token(Token = "0x4001322")]
		UseTimeOfDay
	}

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimationCurve InterpolationCurve;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light DirectionalLight;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material SkyboxMaterial;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material OceanMaterial;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material GleamEffectMaterial;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SkySphere SkySphereReference;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Ocean OceanReference;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SurfaceGrassManager SurfaceGrassManagerReference;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WaterGleamEffect GleamEffect;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public SkyBoxData PresetSkyBoxData;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public SkyLightData PresetSkyLightData;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public ShadowData PresetShadowData;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public OceanData PresetOceanData;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public FogData PresetFogData;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[HideInInspector]
	public GlobalFogData PresetGlobalFogData;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private bool m_startInOverrideVolume;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03520", Offset = "0xA03520")]
	private EnvironmentPreset <OverrideEnvironmentPreset>k__BackingField;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private EnvironmentLerpState LerpState;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	private float OverrideLerpAmount;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float OverrideLerpDuration;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03530", Offset = "0xA03530")]
	public float DirectionalLightIntensity;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03548", Offset = "0xA03548")]
	public float DiffuseShadowIntensity;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03560", Offset = "0xA03560")]
	public float DiffuseShadowExponent;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Color DirectionalLightColor;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public Color ShadowColor;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public Vector3 SunRotationAxis;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public Vector3 SunRiseDirection;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03578", Offset = "0xA03578")]
	public float ShadowAttenuationStrength;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public bool UseDebugPresets;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x265")]
	public bool UsePresetValues;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public EnvironmentPreset CurrentEnvironmentPreset;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public EnvironmentPreset TargetEnvironmentPreset;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float EnvironmentPresetStateProgress;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private EnvironmentPreset LerpedTimeOfDayPreset;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private EnvironmentPreset LerpedOverridePreset;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private bool HavePendingTimeOfDayUpdate;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public float[] EnvironmentPresetTimings;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[HideInInspector]
	public TimeOfDayPresetData[] TimeOfDayPresets;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private MaterialPropertyBlock SkyPropertyBlock;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private MaterialPropertyBlock GleamPropertyBlock;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[SerializeField]
	private List<EnvironmentOverrideVolume> OverrideVolumeList;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private EnvironmentOverrideVolume CurrentOverrideVolume;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private bool EnvironmentManagerRenderingEnabled;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C9")]
	private bool m_hasChangedPreset;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CA")]
	private bool m_hasInitialezed;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static EnvironmentManager m_instance;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private double timestamp;

	[Token(Token = "0x170001E7")]
	public EnvironmentPreset OverrideEnvironmentPreset
	{
		[Token(Token = "0x6001321")]
		[Address(RVA = "0xC37CE8", Offset = "0xC37CE8", VA = "0xC37CE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12EC4", Offset = "0xA12EC4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001322")]
		[Address(RVA = "0xC37CF0", Offset = "0xC37CF0", VA = "0xC37CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12ED4", Offset = "0xA12ED4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xC37D00", Offset = "0xC37D00", VA = "0xC37D00")]
	public EnvironmentManager()
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xC37EF8", Offset = "0xC37EF8", VA = "0xC37EF8", Slot = "1")]
	~EnvironmentManager()
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xC38020", Offset = "0xC38020", VA = "0xC38020")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xC38150", Offset = "0xC38150", VA = "0xC38150", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xC383CC", Offset = "0xC383CC", VA = "0xC383CC")]
	public void Update()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xC381F8", Offset = "0xC381F8", VA = "0xC381F8")]
	public void UpdatePresets()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xC38488", Offset = "0xC38488", VA = "0xC38488")]
	public void UpdatePresetVolumes()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xC38800", Offset = "0xC38800", VA = "0xC38800")]
	private void UpdateVolumeOverrides(Camera currentCamera)
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xC38C0C", Offset = "0xC38C0C", VA = "0xC38C0C")]
	public void SetRenderingEnabled(bool newRenderingEnabled)
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xC38C18", Offset = "0xC38C18", VA = "0xC38C18")]
	public void SetTimeOfDay(float inTimeOfDay)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xC38540", Offset = "0xC38540", VA = "0xC38540")]
	public bool HaveValidTimeOfDaySettings()
	{
		return default(bool);
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xC385D4", Offset = "0xC385D4", VA = "0xC385D4")]
	public void UpdateTimeOfDayPreset()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xC38B24", Offset = "0xC38B24", VA = "0xC38B24")]
	public void SetOverrideEnvironmentPreset(EnvironmentPreset inOverridePreset, bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xC38DE8", Offset = "0xC38DE8", VA = "0xC38DE8")]
	public static void SetOverrdePreset(EnvironmentPreset inOverridePreset, bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xC38A7C", Offset = "0xC38A7C", VA = "0xC38A7C")]
	public void ResetOverrideEnvironmentPreset(bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xC38E80", Offset = "0xC38E80", VA = "0xC38E80")]
	public static void ResetOverridePreset(bool shouldUseLerp = false, float lerpDuration = 0f)
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xC38684", Offset = "0xC38684", VA = "0xC38684")]
	public void SetValuesFromPreset([Optional] EnvironmentPreset overridePreset)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xC38F08", Offset = "0xC38F08", VA = "0xC38F08")]
	public void UpdateGlobalShaderValues()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xC39264", Offset = "0xC39264", VA = "0xC39264")]
	public void UpdateDirectionalLightValues()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xC39678", Offset = "0xC39678", VA = "0xC39678")]
	public void UpdateSkyboxValues()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xC39A2C", Offset = "0xC39A2C", VA = "0xC39A2C")]
	public void UpdateGleamEffectValues()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xC39C8C", Offset = "0xC39C8C", VA = "0xC39C8C")]
	public void DrawManagerVisuals(Camera c)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xC3A2D4", Offset = "0xC3A2D4", VA = "0xC3A2D4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xC3A33C", Offset = "0xC3A33C", VA = "0xC3A33C")]
	public void RegisterOverrideVolume(EnvironmentOverrideVolume inOverrideVolume)
	{
	}
}
[Serializable]
[Token(Token = "0x20002FF")]
public class EnvironmentManagerComponentState : ComponentState
{
	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool StartInOverrideVolume;

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x137DDC4", Offset = "0x137DDC4", VA = "0x137DDC4")]
	public EnvironmentManagerComponentState(bool startInOverrideVolume)
	{
	}
}
[Token(Token = "0x2000300")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FBD40", Offset = "0x9FBD40")]
public class EnvironmentOverrideVolume : MonoBehaviour
{
	[Token(Token = "0x2000301")]
	private enum ColliderType
	{
		[Token(Token = "0x400132B")]
		Sphere,
		[Token(Token = "0x400132C")]
		Box
	}

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnvironmentPreset OverridePreset;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ShouldUseLerp;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float LerpDuration;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Collider ColliderReference;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ColliderType ColliderReferenceType;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private EnvironmentManager EnvironmentManagerReference;

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x137DDF4", Offset = "0x137DDF4", VA = "0x137DDF4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x137DFF4", Offset = "0x137DFF4", VA = "0x137DFF4")]
	public float DistanceToVolume(Vector3 inPosition)
	{
		return default(float);
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x137E094", Offset = "0x137E094", VA = "0x137E094")]
	private float DistanceAsSphere(in Vector3 inPosition)
	{
		return default(float);
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x137E254", Offset = "0x137E254", VA = "0x137E254")]
	public EnvironmentOverrideVolume()
	{
	}
}
[Serializable]
[Token(Token = "0x2000302")]
public struct SkyBoxData
{
	[Token(Token = "0x400132D")]
	private const float MaxSkyLightDotSize = 8E-05f;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA035D0", Offset = "0xA035D0")]
	public float SkyLightDotSize;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Color SkyLightDotColor;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color NearLightColor;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color FarLightColor;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float LightGradientExponent;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA035E8", Offset = "0xA035E8")]
	public float LightFlattenExponent;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public FogData SkyBoxFogData;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool ShouldSnapDotSize;

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xCDE4E4", Offset = "0xCDE4E4", VA = "0xCDE4E4")]
	public static SkyBoxData CreateLerpedStruct(in SkyBoxData struct1, in SkyBoxData struct2, float inLerpVal, bool canSnap)
	{
		return default(SkyBoxData);
	}
}
[Serializable]
[Token(Token = "0x2000303")]
public struct SkyLightData
{
	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool ShouldImpactRotation;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool ShouldSnapToPosition;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03600", Offset = "0xA03600")]
	public float SkyLightRotationOffset;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0361C", Offset = "0xA0361C")]
	public float SkyLightRotationHeight;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color LightColor;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03638", Offset = "0xA03638")]
	public float LightIntensity;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xCDE714", Offset = "0xCDE714", VA = "0xCDE714")]
	public static SkyLightData CreateLerpedStruct(in SkyLightData struct1, in SkyLightData struct2, float inLerpVal, bool canSnap)
	{
		return default(SkyLightData);
	}
}
[Serializable]
[Token(Token = "0x2000304")]
public struct ShadowData
{
	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color ShadowColor;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03650", Offset = "0xA03650")]
	public float ShadowAttenuationStrength;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03668", Offset = "0xA03668")]
	public float DiffuseShadowIntensity;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03680", Offset = "0xA03680")]
	public float DiffuseShadowExponent;

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xCDD5DC", Offset = "0xCDD5DC", VA = "0xCDD5DC")]
	public static ShadowData CreateLerpedStruct(in ShadowData struct1, in ShadowData struct2, float inLerpVal)
	{
		return default(ShadowData);
	}
}
[Serializable]
[Token(Token = "0x2000305")]
public struct OceanData
{
	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Color FoamColor;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float FoamDepth;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float OceanFadeDepth;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color OceanBottomColor;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float OceanBottomDepth;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color OceanSurfaceColor;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float OceanSurfaceDepth;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color OceanHorizonColor;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float OceanHorizonExponent;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color OceanDistantColor;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float OceanDistanceStart;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float OceanDistanceEnd;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03698", Offset = "0xA03698")]
	public float OceanHorizonSunDirectionBias;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0xA036B0", Offset = "0xA036B0")]
	public float OceanHorizonSunDirectionBiasExponent;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA036C4", Offset = "0xA036C4")]
	public float OceanHorizonSunDirectionBiasStart;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float OceanHorizonSunDirectionBiasStrength;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA036E0", Offset = "0xA036E0")]
	public float SkyLightInfluence;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA036F8", Offset = "0xA036F8")]
	public float DistanceFogIntensity;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03710", Offset = "0xA03710")]
	public float DistanceFogMaxValue;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03728", Offset = "0xA03728")]
	public float DistanceFogHeight;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03740", Offset = "0xA03740")]
	public float DistanceFogHeightExponent;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float DistanceFogMaxDistance;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public FogData OceanFogData;

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xE2D60C", Offset = "0xE2D60C", VA = "0xE2D60C")]
	public static OceanData CreateLerpedStruct(in OceanData struct1, in OceanData struct2, float inLerpVal)
	{
		return default(OceanData);
	}
}
[Serializable]
[Token(Token = "0x2000306")]
public struct FogData
{
	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03758", Offset = "0xA03758")]
	public float DistanceFogIntensity;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03770", Offset = "0xA03770")]
	public float DistanceFogHeight;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03788", Offset = "0xA03788")]
	public float DistanceFogHeightExponent;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float DistanceFogMaxDistance;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color DistanceFogColor;

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x1085044", Offset = "0x1085044", VA = "0x1085044")]
	public static FogData CreateLerpedStruct(in FogData struct1, in FogData struct2, float inLerpVal)
	{
		return default(FogData);
	}
}
[Serializable]
[Token(Token = "0x2000307")]
public struct GlobalFogData
{
	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float GlobalHorizontalFogStartDistance;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float GlobalHorizontalFogMaxDensityDistance;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA037A0", Offset = "0xA037A0")]
	public float GlobalHorizontalFogMaxDensity;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float GlobalHeightFogStartDistance;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float GlobalHeightFogMaxDensityDistance;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA037B8", Offset = "0xA037B8")]
	public float GlobalHeightFogMaxDensity;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GlobalHeightFogExponent;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color GlobalFogColor;

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xE0331C", Offset = "0xE0331C", VA = "0xE0331C")]
	public static GlobalFogData CreateLerpedStruct(in GlobalFogData struct1, in GlobalFogData struct2, float inLerpVal)
	{
		return default(GlobalFogData);
	}
}
[Token(Token = "0x2000308")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBDB4", Offset = "0x9FBDB4")]
public class EnvironmentPreset : ScriptableObject
{
	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkyBoxData PresetSkyBoxData;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SkyLightData PresetSkyLightData;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public ShadowData PresetShadowData;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public OceanData PresetOceanData;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public FogData PresetFogData;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GlobalFogData PresetGlobalFogData;

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x137E25C", Offset = "0x137E25C", VA = "0x137E25C")]
	public static void SetLerpedValues(EnvironmentPreset lerpTarget, EnvironmentPreset preset1, EnvironmentPreset preset2, float lerpValue, bool hasChangedPreset)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x137E430", Offset = "0x137E430", VA = "0x137E430")]
	public EnvironmentPreset()
	{
	}
}
[Token(Token = "0x2000309")]
public enum TimeOfDayState
{
	[Token(Token = "0x400136B")]
	Dawn,
	[Token(Token = "0x400136C")]
	Day,
	[Token(Token = "0x400136D")]
	Dusk,
	[Token(Token = "0x400136E")]
	Night,
	[Token(Token = "0x400136F")]
	Count
}
[Serializable]
[Token(Token = "0x200030A")]
public struct TimeOfDayStateData
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TimeOfDayState State;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int StartHour;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int StartMinute;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[HideInInspector]
	public float StartTimeFraction;
}
[Token(Token = "0x200030B")]
public delegate void TimeOfDayCallbackDelegate();
[Serializable]
[Token(Token = "0x200030C")]
public struct TimeOfDayCallbackData
{
	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public bool IsSaveable;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public SaveID ContextObjectSaveID;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeOfDayCallbackDelegate CallbackFunction;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CallbackTime;

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xAD642C", Offset = "0xAD642C", VA = "0xAD642C")]
	public void RemoveDelegate(TimeOfDayCallbackDelegate del)
	{
	}
}
[Serializable]
[Token(Token = "0x200030D")]
public struct TimeOfDayCallbackDataSaveable
{
	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SaveID ContextObjectSaveID;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string CallbackObjectTypeName;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string CallbackFunctionMethodName;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float CallbackTime;
}
[Token(Token = "0x200030E")]
[ExecuteInEditMode]
public class TimeOfDayManager : SaveableComponent, IInitializable
{
	[Token(Token = "0x200030F")]
	public delegate void UpdateGameTimeCallback(float timeOfDayDelta);

	[Token(Token = "0x2000310")]
	public delegate void NewDayCallback(int dayCount);

	[Token(Token = "0x2000311")]
	public delegate void NewTimeOfDayStateCallback(TimeOfDayState timeOfDay);

	[Token(Token = "0x2000312")]
	public delegate void NewHourOfDayCallback(int hour);

	[Token(Token = "0x400137C")]
	public const int NightStartsAtHour = 22;

	[Token(Token = "0x400137D")]
	public const int NightEndsAtHour = 4;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TimeOfDayManager Instance;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnvironmentManager EnvironmentManagerReference;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float SecondsPerDay;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float CurrentTimeOfDay;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int NumberOfDays;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TimeOfDayRateScale;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool UseDebugTimeOfDay;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03800", Offset = "0xA03800")]
	public float DebugTimeOfDay;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03818", Offset = "0xA03818")]
	private int <CurrentHour>k__BackingField;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03828", Offset = "0xA03828")]
	private int <CurrentMinute>k__BackingField;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float CurrentDayProgress;

	[Token(Token = "0x4001389")]
	public const float PerHourFraction = 1f / 24f;

	[Token(Token = "0x400138A")]
	public const float PerMinuteFraction = 0.00069444446f;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TimeOfDayState CurrentTimeOfDayState;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimeOfDayStateData[] TimeOfDayStateDatas;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UpdateGameTimeCallback OnUpdateGameTime;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public NewDayCallback OnNewDay;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NewTimeOfDayStateCallback OnNewTimeOfDayState;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NewHourOfDayCallback OnNewHourOfDay;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<TimeOfDayCallbackData> CallbackDataList;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool TimeOfDayActive;

	[Token(Token = "0x170001E8")]
	public int CurrentHour
	{
		[Token(Token = "0x600134F")]
		[Address(RVA = "0xCA7E44", Offset = "0xCA7E44", VA = "0xCA7E44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12EE4", Offset = "0xA12EE4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001350")]
		[Address(RVA = "0xCA7E4C", Offset = "0xCA7E4C", VA = "0xCA7E4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12EF4", Offset = "0xA12EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public int CurrentMinute
	{
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xCA7E54", Offset = "0xCA7E54", VA = "0xCA7E54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12F04", Offset = "0xA12F04")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001352")]
		[Address(RVA = "0xCA7E5C", Offset = "0xCA7E5C", VA = "0xCA7E5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12F14", Offset = "0xA12F14")]
		private set
		{
		}
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0xCA7CC4", Offset = "0xCA7CC4", VA = "0xCA7CC4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xCA7E64", Offset = "0xCA7E64", VA = "0xCA7E64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xCA7F84", Offset = "0xCA7F84", VA = "0xCA7F84", Slot = "5")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xCA82B0", Offset = "0xCA82B0", VA = "0xCA82B0")]
	private void ClearDelegates()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0xCA85AC", Offset = "0xCA85AC", VA = "0xCA85AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xCA8640", Offset = "0xCA8640", VA = "0xCA8640")]
	private void UpdateTimeOfDay()
	{
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xCA8788", Offset = "0xCA8788", VA = "0xCA8788")]
	private void ProcessPendingCallbacks()
	{
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xCA8408", Offset = "0xCA8408", VA = "0xCA8408")]
	private void EvaluateTimeOfDayState(bool broadcastOnChange = true)
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xCA7EE4", Offset = "0xCA7EE4", VA = "0xCA7EE4")]
	public void SetTimeOfDayActive(bool newActive, bool setEnvironmentManagerRendering)
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xCA9284", Offset = "0xCA9284", VA = "0xCA9284")]
	public static bool IsInstantiated()
	{
		return default(bool);
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xCA9328", Offset = "0xCA9328", VA = "0xCA9328")]
	public static int GetInGameMinutesTimestamp()
	{
		return default(int);
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xCA93DC", Offset = "0xCA93DC", VA = "0xCA93DC")]
	public static void GetDurationAsDaysHoursMinutes(float durationInMinutes, out int days, out int hours, out int minutes)
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xCA94CC", Offset = "0xCA94CC", VA = "0xCA94CC")]
	public void QueueCallbackAtHour(TimeOfDayCallbackDelegate inCallbackFunction, float inHours)
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xCA96C0", Offset = "0xCA96C0", VA = "0xCA96C0")]
	public void QueueCallbackForTime(TimeOfDayCallbackDelegate inCallbackFunction, int inDays, int inHours, int inMinutes)
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xCA97F4", Offset = "0xCA97F4", VA = "0xCA97F4")]
	public void RemoveCallback(TimeOfDayCallbackDelegate inCallbackFunction)
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xCA991C", Offset = "0xCA991C", VA = "0xCA991C")]
	public void QueueCallbackForTime_Saveable(SaveObjectBase inContextObject, TimeOfDayCallbackDelegate inCallbackFunction, int inDays, int inHours, int inMinutes)
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xCA9578", Offset = "0xCA9578", VA = "0xCA9578")]
	private void AddCallbackDataToQueue(TimeOfDayCallbackData inCallbackData, float callbackTime)
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xCA9788", Offset = "0xCA9788", VA = "0xCA9788")]
	private void AddCallbackDataToQueue(TimeOfDayCallbackData inCallbackData, int inDays, int inHours, int inMinutes)
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xCA9B80", Offset = "0xCA9B80", VA = "0xCA9B80")]
	public void SetTimeOfDay(int inHours, int inMinutes, bool triggerUpdates = true)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xCA9CF8", Offset = "0xCA9CF8", VA = "0xCA9CF8")]
	public void IncrementTimeOfDayBy(int inHours, int inMinutes, bool triggerUpdates = true)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xCA9C38", Offset = "0xCA9C38", VA = "0xCA9C38")]
	public static float ConvertTimeToFraction(int inHours, int inMinutes)
	{
		return default(float);
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xCA84F0", Offset = "0xCA84F0", VA = "0xCA84F0")]
	public static void ConvertFractionToTime(float inFraction, out int outHours, out int outMinutes)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xCA9DB4", Offset = "0xCA9DB4", VA = "0xCA9DB4", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xCAA048", Offset = "0xCAA048", VA = "0xCAA048")]
	public TimeOfDayManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000313")]
public class TimeOfDayManagerComponentState : ComponentState
{
	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int NumberOfDays;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float CurrentTimeOfDay;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeOfDayCallbackDataSaveable[] CallbackDataArray;

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xCA9E38", Offset = "0xCA9E38", VA = "0xCA9E38")]
	public TimeOfDayManagerComponentState(int inNumberOfDays, float inCurrentTimeOFDay, in List<TimeOfDayCallbackData> inCallbackDataList)
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xCAA398", Offset = "0xCAA398", VA = "0xCAA398")]
	private TimeOfDayCallbackDataSaveable CreateStructForCallback(in TimeOfDayCallbackData inData)
	{
		return default(TimeOfDayCallbackDataSaveable);
	}
}
[Token(Token = "0x2000314")]
public static class Bezier
{
	[Token(Token = "0x600137D")]
	[Address(RVA = "0x10052D4", Offset = "0x10052D4", VA = "0x10052D4")]
	public static Vector3 GetPoint(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x10054CC", Offset = "0x10054CC", VA = "0x10054CC")]
	public static Vector3 GetFirstDerivative(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000315")]
public enum BezierControlPointMode
{
	[Token(Token = "0x4001397")]
	Free,
	[Token(Token = "0x4001398")]
	Aligned,
	[Token(Token = "0x4001399")]
	Mirrored
}
[Token(Token = "0x2000316")]
public class BezierCurve : MonoBehaviour
{
	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] points;

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x1005708", Offset = "0x1005708", VA = "0x1005708")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x10057BC", Offset = "0x10057BC", VA = "0x10057BC")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x1005918", Offset = "0x1005918", VA = "0x1005918")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x1005948", Offset = "0x1005948", VA = "0x1005948")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x1005AB8", Offset = "0x1005AB8", VA = "0x1005AB8")]
	public BezierCurve()
	{
	}
}
[Token(Token = "0x2000317")]
public class BezierData
{
	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3[] points;

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x1005AC0", Offset = "0x1005AC0", VA = "0x1005AC0")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x1005B48", Offset = "0x1005B48", VA = "0x1005B48")]
	public BezierData()
	{
	}
}
[Token(Token = "0x2000318")]
public class BezierSpline : MonoBehaviour
{
	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3[] points;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BezierControlPointMode[] modes;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool loop;

	[Token(Token = "0x170001EA")]
	public bool Loop
	{
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1005B50", Offset = "0x1005B50", VA = "0x1005B50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1005B58", Offset = "0x1005B58", VA = "0x1005B58")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public int ControlPointCount
	{
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1006088", Offset = "0x1006088", VA = "0x1006088")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001EC")]
	public int CurveCount
	{
		[Token(Token = "0x600138E")]
		[Address(RVA = "0x10064E0", Offset = "0x10064E0", VA = "0x10064E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x10060A4", Offset = "0x10060A4", VA = "0x10060A4")]
	public Vector3 GetControlPoint(int index)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x1005BCC", Offset = "0x1005BCC", VA = "0x1005BCC")]
	public void SetControlPoint(int index, Vector3 point)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x10063E0", Offset = "0x10063E0", VA = "0x10063E0")]
	public BezierControlPointMode GetControlPointMode(int index)
	{
		return default(BezierControlPointMode);
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x1006438", Offset = "0x1006438", VA = "0x1006438")]
	public void SetControlPointMode(int index, BezierControlPointMode mode)
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x10060EC", Offset = "0x10060EC", VA = "0x10060EC")]
	private void EnforceMode(int index)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x1006518", Offset = "0x1006518", VA = "0x1006518")]
	public Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x10066C4", Offset = "0x10066C4", VA = "0x10066C4")]
	public Vector3 GetVelocity(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x10068F8", Offset = "0x10068F8", VA = "0x10068F8")]
	public Vector3 GetDirection(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x1006928", Offset = "0x1006928", VA = "0x1006928")]
	public void AddCurve()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x1006B64", Offset = "0x1006B64", VA = "0x1006B64")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x1006CF8", Offset = "0x1006CF8", VA = "0x1006CF8")]
	public BezierSpline()
	{
	}
}
[Token(Token = "0x2000319")]
public class Line : MonoBehaviour
{
	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 p0;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 p1;

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xCF4490", Offset = "0xCF4490", VA = "0xCF4490")]
	public Line()
	{
	}
}
[Token(Token = "0x200031A")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9FBE2C", Offset = "0x9FBE2C")]
public class CacheReferenceAttribute : PropertyAttribute
{
	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IncludeChildren;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type[] AllowedTypes;

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x1010070", Offset = "0x1010070", VA = "0x1010070")]
	public CacheReferenceAttribute(bool includeChildren = true, [Optional] Type[] allowedTypes)
	{
	}
}
[Token(Token = "0x200031B")]
[AttributeAttribute(Name = "DebuggerTypeProxyAttribute", RVA = "0x9FBE64", Offset = "0x9FBE64")]
public class DynamicNativeArray<Type> where Type : struct
{
	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private bool UseUnityAlloc;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Allocator UnityAllocatorType;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private unsafe Type* InternalBufferPtr;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int CurrentCapacity;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int HighestIndex;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ArrayChunkSize;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int ArrayOccupancyCount;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int[] ArrayOccupancy;

	[Token(Token = "0x40013AB")]
	private const int BITS_PER_INT = 32;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private byte ClearValue;

	[Token(Token = "0x6001397")]
	public DynamicNativeArray(int inInitialSize, bool inUseUnityAlloc = false, Allocator inUnityAllocatorType = Allocator.Persistent)
	{
	}

	[Token(Token = "0x6001398")]
	public DynamicNativeArray(int inInitialSize, int inChunkSize, bool inUseUnityAlloc = false, Allocator inUnityAllocatorType = Allocator.Persistent)
	{
	}

	[Token(Token = "0x6001399")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x600139A")]
	~DynamicNativeArray()
	{
	}

	[Token(Token = "0x600139B")]
	private void Init(int inInitialSize, bool inUseUnityAlloc, Allocator inUnityAllocatorType)
	{
	}

	[Token(Token = "0x600139C")]
	private unsafe Type* Internal_Alloc(int inAllocSize)
	{
		//IL_0002: Expected I, but got O
		return (Type*)unchecked((nint)null);
	}

	[Token(Token = "0x600139D")]
	private unsafe void Internal_Free(Type* memoryToFree)
	{
	}

	[Token(Token = "0x600139E")]
	private void Reallocate(int inNewSize)
	{
	}

	[Token(Token = "0x600139F")]
	private void Deallocate()
	{
	}

	[Token(Token = "0x60013A0")]
	private void ReallocArrayOccupancy(int inNewSize)
	{
	}

	[Token(Token = "0x60013A1")]
	public unsafe void* GetUnsafePointer()
	{
		//IL_0002: Expected I, but got O
		return (void*)unchecked((nint)null);
	}

	[Token(Token = "0x60013A2")]
	public int Add(in Type inEntryToAdd)
	{
		return default(int);
	}

	[Token(Token = "0x60013A3")]
	public bool AddAtIndex(in Type inEntryToAdd, int inIndexToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x60013A4")]
	public void Remove(int indexToRemove)
	{
	}

	[Token(Token = "0x60013A5")]
	public unsafe ref Type GetRef(int inIndex)
	{
		return ref *(Type*)null;
	}

	[Token(Token = "0x60013A6")]
	public unsafe Type* GetPtr(int inIndex)
	{
		//IL_0002: Expected I, but got O
		return (Type*)unchecked((nint)null);
	}

	[Token(Token = "0x60013A7")]
	public void Set(int inIndex, in Type inValue)
	{
	}

	[Token(Token = "0x60013A8")]
	public NativeArray<Type> GetAsNoAllocNativeArray()
	{
		return default(NativeArray<Type>);
	}

	[Token(Token = "0x60013A9")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60013AA")]
	public static int GetRightMostUnsetBitIndex(int inValueToTest)
	{
		return default(int);
	}
}
[Token(Token = "0x200031C")]
internal sealed class DynamicNativeArrayDebugView<T> where T : struct
{
	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private DynamicNativeArray<T> DebugArray;

	[Token(Token = "0x170001ED")]
	public T[] Items
	{
		[Token(Token = "0x60013AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013AB")]
	public DynamicNativeArrayDebugView(DynamicNativeArray<T> inArray)
	{
	}
}
[Token(Token = "0x200031D")]
public class CombinedSpriteRenderer : MonoBehaviour, IInitializable, IValidateCustom, IValidate
{
	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite CombinedSpriteAsset;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SpriteRenderer BackgroundSprite;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool UsingCombinedSprite;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private MeshRenderer combinedTextureRenderer;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteRenderer[] spriteRenderers;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int MainTexId;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static MaterialPropertyBlock mpb;

	[Token(Token = "0x170001EE")]
	public Sprite SpriteAsset
	{
		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xC2287C", Offset = "0xC2287C", VA = "0xC2287C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xC22884", Offset = "0xC22884", VA = "0xC22884")]
	public MeshRenderer GetCombinedTextureRenderer()
	{
		return null;
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xC2288C", Offset = "0xC2288C", VA = "0xC2288C", Slot = "4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xC22B04", Offset = "0xC22B04", VA = "0xC22B04")]
	public void ToggleCombinedSprite()
	{
	}

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0xC22894", Offset = "0xC22894", VA = "0xC22894")]
	public void SetIsUsingCombinedSprite(bool newUsingCombinedSprite)
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0xC22B1C", Offset = "0xC22B1C", VA = "0xC22B1C")]
	public void OverrideCombinedSpriteAsset(Sprite overrideAsset)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0xC22BB8", Offset = "0xC22BB8", VA = "0xC22BB8")]
	public CombinedSpriteRenderer()
	{
	}
}
[Token(Token = "0x200031E")]
public abstract class Container : SaveableComponent, IInitializable
{
	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA038A8", Offset = "0xA038A8")]
	private readonly bool <Initialized>k__BackingField;

	[Token(Token = "0x170001EF")]
	public abstract float FillPercent
	{
		[Token(Token = "0x60013B6")]
		get;
	}

	[Token(Token = "0x170001F0")]
	public virtual bool Initialized
	{
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xC22E1C", Offset = "0xC22E1C", VA = "0xC22E1C", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12F24", Offset = "0xA12F24")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013B5")]
	public abstract void Initialize();

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xC22E24", Offset = "0xC22E24", VA = "0xC22E24")]
	protected Container()
	{
	}
}
[Token(Token = "0x200031F")]
public class FloatValueContainer : Container
{
	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA038B8", Offset = "0xA038B8")]
	[SerializeField]
	private float maxValue;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float initialValue;

	[Token(Token = "0x170001F1")]
	public float MaxValue
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1084918", Offset = "0x1084918", VA = "0x1084918")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F2")]
	public float CurrentValue
	{
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x1084920", Offset = "0x1084920", VA = "0x1084920")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F3")]
	public override float FillPercent
	{
		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x10849A4", Offset = "0x10849A4", VA = "0x10849A4", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x1084A30", Offset = "0x1084A30", VA = "0x1084A30", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x1084A34", Offset = "0x1084A34", VA = "0x1084A34", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x10849A8", Offset = "0x10849A8", VA = "0x10849A8")]
	private float CalculateFillPercent()
	{
		return default(float);
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1084B14", Offset = "0x1084B14", VA = "0x1084B14")]
	public float TryAddValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1084BCC", Offset = "0x1084BCC", VA = "0x1084BCC")]
	public float TryRemoveValue(float valueRequested)
	{
		return default(float);
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x1084C80", Offset = "0x1084C80", VA = "0x1084C80")]
	public void Fill()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1084D08", Offset = "0x1084D08", VA = "0x1084D08")]
	public void SetMaxValue(int newMax)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1084DA0", Offset = "0x1084DA0", VA = "0x1084DA0")]
	public FloatValueContainer()
	{
	}
}
[Token(Token = "0x2000320")]
public class IntValueContainer : Container
{
	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA03914", Offset = "0xA03914")]
	[SerializeField]
	private int maxValue;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int initialValue;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initialized;

	[Token(Token = "0x170001F4")]
	public override bool Initialized
	{
		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xE11AFC", Offset = "0xE11AFC", VA = "0xE11AFC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F5")]
	public override float FillPercent
	{
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xE11B04", Offset = "0xE11B04", VA = "0xE11B04", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F6")]
	public int CurrentValue
	{
		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xE11B98", Offset = "0xE11B98", VA = "0xE11B98")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xE11C20", Offset = "0xE11C20", VA = "0xE11C20", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xE11B08", Offset = "0xE11B08", VA = "0xE11B08")]
	private float CalculateFillPercent()
	{
		return default(float);
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xE11C2C", Offset = "0xE11C2C", VA = "0xE11C2C", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xE11B9C", Offset = "0xE11B9C", VA = "0xE11B9C")]
	private int GetStateValue()
	{
		return default(int);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0xE11CE4", Offset = "0xE11CE4", VA = "0xE11CE4")]
	public int TryAddValue(int value)
	{
		return default(int);
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0xE11D94", Offset = "0xE11D94", VA = "0xE11D94")]
	public int TryRemoveValue(int valueRequested)
	{
		return default(int);
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0xE11E48", Offset = "0xE11E48", VA = "0xE11E48")]
	public IntValueContainer()
	{
	}
}
[Token(Token = "0x2000321")]
public class ObjectContainer : Container
{
	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA03970", Offset = "0xA03970")]
	[SerializeField]
	private int maxNumberOfObjects;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool typeContainer;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Stashable presetObjectTypeRef;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool updateObjectPositions;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int objectType;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Stashable> objects;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<OrientedPoint> localObjOffsets;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool initialized;

	[Token(Token = "0x170001F7")]
	public override bool Initialized
	{
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xE2B2C0", Offset = "0xE2B2C0", VA = "0xE2B2C0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F8")]
	public override float FillPercent
	{
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xE2B2C8", Offset = "0xE2B2C8", VA = "0xE2B2C8", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001F9")]
	private bool hasRoomForMore
	{
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xE2B32C", Offset = "0xE2B32C", VA = "0xE2B32C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0xE2B2CC", Offset = "0xE2B2CC", VA = "0xE2B2CC")]
	private float CalculateFillPercent()
	{
		return default(float);
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0xE2B3D4", Offset = "0xE2B3D4", VA = "0xE2B3D4", Slot = "6")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0xE2B8A8", Offset = "0xE2B8A8", VA = "0xE2B8A8")]
	public bool TryAddObject(Stashable stashable)
	{
		return default(bool);
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0xE2BC1C", Offset = "0xE2BC1C", VA = "0xE2BC1C")]
	public bool TryRemoveObject(Stashable obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xE2BD0C", Offset = "0xE2BD0C", VA = "0xE2BD0C")]
	public bool HasObject(Stashable obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xE2BD74", Offset = "0xE2BD74", VA = "0xE2BD74", Slot = "4")]
	public override ComponentState CreateState()
	{
		return null;
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xE2BF58", Offset = "0xE2BF58", VA = "0xE2BF58")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xE2C2FC", Offset = "0xE2C2FC", VA = "0xE2C2FC")]
	public ObjectContainer()
	{
	}
}
[Token(Token = "0x2000322")]
public class FollowJoint : MonoBehaviour
{
	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform jointToFollow;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform follower;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasFollower;

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x1085188", Offset = "0x1085188", VA = "0x1085188")]
	public void SetFollower(Transform t)
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x108522C", Offset = "0x108522C", VA = "0x108522C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x10852F8", Offset = "0x10852F8", VA = "0x10852F8")]
	public FollowJoint()
	{
	}
}
[Token(Token = "0x2000323")]
public class AliveArpEvent : GameEvent
{
	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float max;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float xmin;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float xmax;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool random;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool directionUp;

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xFF98CC", Offset = "0xFF98CC", VA = "0xFF98CC")]
	public AliveArpEvent()
	{
	}
}
[Token(Token = "0x2000324")]
public class AliveTempoEvent : GameEvent
{
	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int tempo;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool setY;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cursorY;

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xFF98E8", Offset = "0xFF98E8", VA = "0xFF98E8")]
	public AliveTempoEvent()
	{
	}
}
[Token(Token = "0x2000325")]
public class BoatCollisionEvent : GameEvent
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float force;

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x100C6CC", Offset = "0x100C6CC", VA = "0x100C6CC")]
	public BoatCollisionEvent()
	{
	}
}
[Token(Token = "0x2000326")]
public class BoatingEvent : GameEvent
{
	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool onBoat;

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x100AA34", Offset = "0x100AA34", VA = "0x100AA34")]
	public BoatingEvent()
	{
	}
}
[Token(Token = "0x2000327")]
public class ChopEvent : GameEvent
{
	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x1011574", Offset = "0x1011574", VA = "0x1011574")]
	public ChopEvent()
	{
	}
}
[Token(Token = "0x2000328")]
public class ChoppedEvent : GameEvent
{
	[Token(Token = "0x60013E1")]
	[Address(RVA = "0xC22204", Offset = "0xC22204", VA = "0xC22204")]
	public ChoppedEvent()
	{
	}
}
[Token(Token = "0x2000329")]
public class CreatureFedEvent : GameEvent
{
	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string creature;

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0xC2A198", Offset = "0xC2A198", VA = "0xC2A198")]
	public CreatureFedEvent()
	{
	}
}
[Token(Token = "0x200032A")]
public class CreatureHappyEvent : GameEvent
{
	[Token(Token = "0x60013E3")]
	[Address(RVA = "0xC2E1B8", Offset = "0xC2E1B8", VA = "0xC2E1B8")]
	public CreatureHappyEvent()
	{
	}
}
[Token(Token = "0x200032B")]
public class CreatureInteractionEvent : GameEvent
{
	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string creature;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string interactionType;

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xC2A190", Offset = "0xC2A190", VA = "0xC2A190")]
	public CreatureInteractionEvent()
	{
	}
}
[Token(Token = "0x200032C")]
public class CreaturePettingEvent : GameEvent
{
	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xC2FB70", Offset = "0xC2FB70", VA = "0xC2FB70")]
	public CreaturePettingEvent()
	{
	}
}
[Token(Token = "0x200032D")]
public class Delayer : MonoBehaviour
{
	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBEC8", Offset = "0x9FBEC8")]
	private sealed class <DelayCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Delayer <>4__this;

		[Token(Token = "0x170001FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013ED")]
			[Address(RVA = "0xC359A8", Offset = "0xC359A8", VA = "0xC359A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013EF")]
			[Address(RVA = "0xC35A10", Offset = "0xC35A10", VA = "0xC35A10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xC35894", Offset = "0xC35894", VA = "0xC35894")]
		[DebuggerHidden]
		public <DelayCoroutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xC358D0", Offset = "0xC358D0", VA = "0xC358D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xC358D4", Offset = "0xC358D4", VA = "0xC358D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xC359B0", Offset = "0xC359B0", VA = "0xC359B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool triggerOnce;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hasTriggered;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delayInSeconds;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allowMultipleDelays;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool triggerSelfOnStart;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDelayStart;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnDelayFinished;

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xC35778", Offset = "0xC35778", VA = "0xC35778")]
	private void Update()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xC357A4", Offset = "0xC357A4", VA = "0xC357A4")]
	public void StartWaiting()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xC35818", Offset = "0xC35818", VA = "0xC35818")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA12F34", Offset = "0xA12F34")]
	private IEnumerator DelayCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xC358C0", Offset = "0xC358C0", VA = "0xC358C0")]
	public Delayer()
	{
	}
}
[Token(Token = "0x200032F")]
public class DestroyGameobject : MonoBehaviour
{
	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xC35A18", Offset = "0xC35A18", VA = "0xC35A18")]
	public void DestroyThisGameobject()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xC35A94", Offset = "0xC35A94", VA = "0xC35A94")]
	public DestroyGameobject()
	{
	}
}
[Token(Token = "0x2000330")]
public enum GameEventType
{
	[Token(Token = "0x40013E4")]
	SeedPlanted,
	[Token(Token = "0x40013E5")]
	PlantSprouted,
	[Token(Token = "0x40013E6")]
	PlantFullyGrown,
	[Token(Token = "0x40013E7")]
	ItemCrafted,
	[Token(Token = "0x40013E8")]
	CraftingSuccessful,
	[Token(Token = "0x40013E9")]
	NumTypes
}
[Token(Token = "0x2000331")]
public class GameProgressEvent : GameEvent
{
	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameEventType eventType;

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x10921B0", Offset = "0x10921B0", VA = "0x10921B0")]
	public GameProgressEvent(GameEventType eventType)
	{
	}
}
[Token(Token = "0x2000332")]
public class PlantSproutedEvent : GameProgressEvent
{
}
[Token(Token = "0x2000333")]
public class ItemCraftedEvent : GameProgressEvent
{
	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public CraftingSystem.ResourceType itemType;

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xCF2D28", Offset = "0xCF2D28", VA = "0xCF2D28")]
	public ItemCraftedEvent(CraftingSystem.ResourceType itemType, GameEventType eventType)
	{
	}
}
[Token(Token = "0x2000334")]
public class CraftingSuccessfulEvent : GameProgressEvent
{
	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xC27D80", Offset = "0xC27D80", VA = "0xC27D80")]
	public CraftingSuccessfulEvent(GameEventType eventType)
	{
	}
}
[Token(Token = "0x2000335")]
public class IndoorOutdoorEvent : GameEvent
{
	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool indoors;

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xE10B3C", Offset = "0xE10B3C", VA = "0xE10B3C")]
	public IndoorOutdoorEvent()
	{
	}
}
[Token(Token = "0x2000336")]
public class MenuButtonPushedEvent : GameEvent
{
	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MenuButton button;

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xCFD354", Offset = "0xCFD354", VA = "0xCFD354")]
	public MenuButtonPushedEvent()
	{
	}
}
[Token(Token = "0x2000337")]
public class PlantUprootedEvent : GameEvent
{
	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform plantPosition;

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xC553D0", Offset = "0xC553D0", VA = "0xC553D0")]
	public PlantUprootedEvent()
	{
	}
}
[Token(Token = "0x2000338")]
public class PlayerTeleportEvent : GameEvent
{
	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 origin;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 destination;

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xC63C54", Offset = "0xC63C54", VA = "0xC63C54")]
	public PlayerTeleportEvent()
	{
	}
}
[Token(Token = "0x2000339")]
public class ReplantEvent : GameEvent
{
	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform plantPosition;

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0xC73E44", Offset = "0xC73E44", VA = "0xC73E44")]
	public ReplantEvent()
	{
	}
}
[Token(Token = "0x200033A")]
public class SeedbagReleaseSeedEvent : GameEvent
{
	[Token(Token = "0x60013FA")]
	[Address(RVA = "0xCDC1EC", Offset = "0xCDC1EC", VA = "0xCDC1EC")]
	public SeedbagReleaseSeedEvent()
	{
	}
}
[Token(Token = "0x200033B")]
public class SeedbagShakeEvent : GameEvent
{
	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fillPercent;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0xCDC1F4", Offset = "0xCDC1F4", VA = "0xCDC1F4")]
	public SeedbagShakeEvent()
	{
	}
}
[Token(Token = "0x200033C")]
public class TillEvent : GameEvent
{
	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerHand hand;

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0xCA746C", Offset = "0xCA746C", VA = "0xCA746C")]
	public TillEvent()
	{
	}
}
[Token(Token = "0x200033D")]
public class WateringCanDroppedEvent : GameEvent
{
	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float waterPoured;

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x1AE7BCC", Offset = "0x1AE7BCC", VA = "0x1AE7BCC")]
	public WateringCanDroppedEvent()
	{
	}
}
[Token(Token = "0x200033E")]
internal class GenerateSphereMesh
{
	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x1094860", Offset = "0x1094860", VA = "0x1094860")]
	public static bool GenerateHalfSphereFromParams(out Mesh outGeneratedMesh, float inRadius, int inSegmentResolution, int inSphereSegments, bool clockwise = true)
	{
		return default(bool);
	}
}
[Token(Token = "0x200033F")]
public class GizmoDrawer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FBED8", Offset = "0x9FBED8")]
	private sealed class <>c
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xE03310", Offset = "0xE03310", VA = "0xE03310")]
		public <>c()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xE03318", Offset = "0xE03318", VA = "0xE03318")]
		internal void <.cctor>b__5_0()
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event Action OnDrawGizmosEvent
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xE02FA8", Offset = "0xE02FA8", VA = "0xE02FA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12FE8", Offset = "0xA12FE8")]
		add
		{
		}
		[Token(Token = "0x6001400")]
		[Address(RVA = "0xE03094", Offset = "0xE03094", VA = "0xE03094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA12FF8", Offset = "0xA12FF8")]
		remove
		{
		}
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0xE03180", Offset = "0xE03180", VA = "0xE03180")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0xE031F4", Offset = "0xE031F4", VA = "0xE031F4")]
	public GizmoDrawer()
	{
	}
}
[Token(Token = "0x2000341")]
public static class GlobalShaderVars
{
	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _PlayerOriginPos;

	[Token(Token = "0x6001407")]
	[Address(RVA = "0xE034C4", Offset = "0xE034C4", VA = "0xE034C4")]
	public static void SetPlayerOriginPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0xE03588", Offset = "0xE03588", VA = "0xE03588")]
	private static int GetNameID([CallerMemberName] string propertyName = "")
	{
		return default(int);
	}
}
[Token(Token = "0x2000342")]
public interface IDebugInfo
{
}
[Token(Token = "0x2000343")]
public static class Layer
{
	[Token(Token = "0x600140A")]
	[Address(RVA = "0xCF3924", Offset = "0xCF3924", VA = "0xCF3924")]
	public static LayerData[] SetLayer(ref GameObject go, int layer, int layermask)
	{
		return null;
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xCF3B70", Offset = "0xCF3B70", VA = "0xCF3B70")]
	public static void ResetLayers(LayerData[] originalObjectLayers)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xCF3CB0", Offset = "0xCF3CB0", VA = "0xCF3CB0")]
	public static bool LayerMatchesMask(int layer, int mask)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000344")]
public class LocationTracker : MonoBehaviour
{
	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LocationTracker Instance;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3[] locNodes;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float[] timeLog;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int currentNode;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float timeStamp;

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xCF5D2C", Offset = "0xCF5D2C", VA = "0xCF5D2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xCF6198", Offset = "0xCF6198", VA = "0xCF6198")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0xCF6240", Offset = "0xCF6240", VA = "0xCF6240")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0xCF62E8", Offset = "0xCF62E8", VA = "0xCF62E8")]
	private void OnTeleport(PlayerTeleportEvent e)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0xCF63C4", Offset = "0xCF63C4", VA = "0xCF63C4")]
	private int GetClosestNode(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0xCF64EC", Offset = "0xCF64EC", VA = "0xCF64EC")]
	public Dictionary<string, object> GetAnalyticsData()
	{
		return null;
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xCF6614", Offset = "0xCF6614", VA = "0xCF6614")]
	public LocationTracker()
	{
	}
}
[Token(Token = "0x2000345")]
public static class Mathfs
{
	[Token(Token = "0x6001414")]
	[Address(RVA = "0xCFCA0C", Offset = "0xCFCA0C", VA = "0xCFCA0C")]
	public static Vector2 GetDirectionRadians(float angleRadians)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xCFCAA4", Offset = "0xCFCAA4", VA = "0xCFCAA4")]
	public static float SignedAngleBetween(Vector3 a, Vector3 b, Vector3 up)
	{
		return default(float);
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xCFCC44", Offset = "0xCFCC44", VA = "0xCFCC44")]
	public static float AbsoluteAngleDifference(float angleInDegrees1, float angleInDegrees2)
	{
		return default(float);
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xCFCCD8", Offset = "0xCFCCD8", VA = "0xCFCCD8")]
	public static Vector2 Lerp(Vector2 a, Vector2 b, Vector2 t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xCFCDAC", Offset = "0xCFCDAC", VA = "0xCFCDAC")]
	public static Vector3 Multiply(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xCFCDEC", Offset = "0xCFCDEC", VA = "0xCFCDEC")]
	public static Vector3 GetVelocityAtPoint(Vector3 worldPos, Vector3 origin, Vector3 velocity, Vector3 angularVelocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xCFCF04", Offset = "0xCFCF04", VA = "0xCFCF04")]
	public static float GetTriangleAngleGivenSides(float adjacent, float opposite)
	{
		return default(float);
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xCFCF84", Offset = "0xCFCF84", VA = "0xCFCF84")]
	public static float Eerp(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xCFD00C", Offset = "0xCFD00C", VA = "0xCFD00C")]
	public static Vector3 Eerp(Vector3 a, Vector3 b, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xCFD0AC", Offset = "0xCFD0AC", VA = "0xCFD0AC")]
	public static double Mean(ref float[] data)
	{
		return default(double);
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xCFD124", Offset = "0xCFD124", VA = "0xCFD124")]
	public static void SimpleLinearRegression(ref float[] x, ref float[] y, out double b0, out double b1)
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xCFD268", Offset = "0xCFD268", VA = "0xCFD268")]
	public static float ScaleFloat(float value, float minValue, float maxValue, float resultMin = 0f, float resultMax = 1f)
	{
		return default(float);
	}
}
[Token(Token = "0x2000346")]
public struct OrientedPointSmooth
{
	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public OrientedPoint current;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OrientedPoint target;

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xAD943C", Offset = "0xAD943C", VA = "0xAD943C")]
	public OrientedPointSmooth(OrientedPoint startValue)
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0xAD9478", Offset = "0xAD9478", VA = "0xAD9478")]
	public void Smooth(float smoothParam)
	{
	}
}
[Token(Token = "0x2000347")]
public class PoseRecorder : MonoBehaviour
{
	[Token(Token = "0x4001402")]
	private const int POSE_CAPACITY = 259200;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool autosave;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filename;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filepath;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool playback;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool save;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string path;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int psize;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RigidTransform[] poses;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private byte[] bytes;

	[Token(Token = "0x400140C")]
	private const int SAVE_INTERVAL = 720;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int saveFrame;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int i;

	[Token(Token = "0x400140F")]
	private const float FRAMES_INVERSE = 1f / 72f;

	[Token(Token = "0x6001422")]
	[Address(RVA = "0xC65E80", Offset = "0xC65E80", VA = "0xC65E80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0xC65E90", Offset = "0xC65E90", VA = "0xC65E90")]
	private void PlayBack()
	{
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0xC65F74", Offset = "0xC65F74", VA = "0xC65F74")]
	private void Record()
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0xC660E0", Offset = "0xC660E0", VA = "0xC660E0")]
	public void SaveRecording()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0xC662D4", Offset = "0xC662D4", VA = "0xC662D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0xC66458", Offset = "0xC66458", VA = "0xC66458")]
	private void Update()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0xC6673C", Offset = "0xC6673C", VA = "0xC6673C")]
	public PoseRecorder()
	{
	}
}
[Token(Token = "0x2000348")]
public class ScreenShooter : MonoBehaviour
{
	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScreenShooter Instance;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Initialized;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool Active;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03A4C", Offset = "0xA03A4C")]
	public Vector2Int customResolution;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fov;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA03A84", Offset = "0xA03A84")]
	public int supersample;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03A9C", Offset = "0xA03A9C")]
	public Material blitGammaCorrect;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NeatAudioPlayer audioPlayer;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NeatVR_Controller left;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private NeatVR_Controller right;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeLeft;

	[Token(Token = "0x600142A")]
	[Address(RVA = "0xC851F0", Offset = "0xC851F0", VA = "0xC851F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xC85270", Offset = "0xC85270", VA = "0xC85270")]
	private void Update()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xC854E0", Offset = "0xC854E0", VA = "0xC854E0")]
	private bool DidPressCorrectButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xC85920", Offset = "0xC85920", VA = "0xC85920")]
	public void Activate()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xC85988", Offset = "0xC85988", VA = "0xC85988")]
	public Vector2Int GetRenderResolution()
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xC8558C", Offset = "0xC8558C", VA = "0xC8558C")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xC859FC", Offset = "0xC859FC", VA = "0xC859FC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xC85AC0", Offset = "0xC85AC0", VA = "0xC85AC0")]
	public ScreenShooter()
	{
	}
}
[Token(Token = "0x2000349")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBEE8", Offset = "0x9FBEE8")]
public class FloatVariable : ScriptableObject
{
	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float currentValue;

	[Token(Token = "0x170001FC")]
	public float Value
	{
		[Token(Token = "0x6001432")]
		[Address(RVA = "0x1084DA8", Offset = "0x1084DA8", VA = "0x1084DA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1084DB0", Offset = "0x1084DB0", VA = "0x1084DB0")]
		set
		{
		}
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x1084DB8", Offset = "0x1084DB8", VA = "0x1084DB8")]
	public void Add(float number = 1f)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x1084DC8", Offset = "0x1084DC8", VA = "0x1084DC8")]
	public void Remove(float number = 1f)
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x1084DD8", Offset = "0x1084DD8", VA = "0x1084DD8")]
	public FloatVariable()
	{
	}
}
[Token(Token = "0x200034A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBF54", Offset = "0x9FBF54")]
public class FloatVariable_Ranged : FloatVariable
{
	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxValue;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float minValue;

	[Token(Token = "0x170001FD")]
	public new float Value
	{
		[Token(Token = "0x6001439")]
		[Address(RVA = "0x1084E78", Offset = "0x1084E78", VA = "0x1084E78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001438")]
		[Address(RVA = "0x1084DE8", Offset = "0x1084DE8", VA = "0x1084DE8")]
		set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	public float NormalizedValue
	{
		[Token(Token = "0x600143A")]
		[Address(RVA = "0x1084E80", Offset = "0x1084E80", VA = "0x1084E80")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x1084DE0", Offset = "0x1084DE0", VA = "0x1084DE0")]
	public void Init(float min, float max)
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x1084F08", Offset = "0x1084F08", VA = "0x1084F08")]
	public new void Add(float number = 1f)
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x1084F98", Offset = "0x1084F98", VA = "0x1084F98")]
	public new void Remove(float number = 1f)
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x108502C", Offset = "0x108502C", VA = "0x108502C")]
	public FloatVariable_Ranged()
	{
	}
}
[Token(Token = "0x200034B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FBFC0", Offset = "0x9FBFC0")]
public class IntVariable : ScriptableObject
{
	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int currentValue;

	[Token(Token = "0x170001FF")]
	public int Value
	{
		[Token(Token = "0x600143E")]
		[Address(RVA = "0xE11E50", Offset = "0xE11E50", VA = "0xE11E50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600143F")]
		[Address(RVA = "0xE11E58", Offset = "0xE11E58", VA = "0xE11E58")]
		set
		{
		}
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0xE11E60", Offset = "0xE11E60", VA = "0xE11E60")]
	public void Add(int number = 1)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0xE11E70", Offset = "0xE11E70", VA = "0xE11E70")]
	public void Remove(int number = 1)
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0xE11E80", Offset = "0xE11E80", VA = "0xE11E80")]
	public IntVariable()
	{
	}
}
[Token(Token = "0x200034C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC02C", Offset = "0x9FC02C")]
public class IntVariable_Ranged : IntVariable
{
	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private int maxValue;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int minValue;

	[Token(Token = "0x17000200")]
	public new int Value
	{
		[Token(Token = "0x6001445")]
		[Address(RVA = "0xE11F48", Offset = "0xE11F48", VA = "0xE11F48")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001444")]
		[Address(RVA = "0xE11EC0", Offset = "0xE11EC0", VA = "0xE11EC0")]
		set
		{
		}
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0xE11E88", Offset = "0xE11E88", VA = "0xE11E88")]
	public IntVariable_Ranged(int min, int max)
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0xE11F50", Offset = "0xE11F50", VA = "0xE11F50")]
	public new void Add(int number = 1)
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0xE11FD8", Offset = "0xE11FD8", VA = "0xE11FD8")]
	public new void Remove(int number = 1)
	{
	}
}
[Token(Token = "0x200034D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC098", Offset = "0x9FC098")]
public class VertexArray : ScriptableObject
{
	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3[] vertices;

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x1AE50BC", Offset = "0x1AE50BC", VA = "0x1AE50BC")]
	public VertexArray()
	{
	}
}
[Serializable]
[Token(Token = "0x200034E")]
public class SerializableEnum<T> where T : struct, IConvertible
{
	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private string m_EnumValueAsString;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private T m_EnumValue;

	[Token(Token = "0x17000201")]
	public T Value
	{
		[Token(Token = "0x6001449")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x600144A")]
	public void SetValue(T enumValue)
	{
	}

	[Token(Token = "0x600144B")]
	public SerializableEnum()
	{
	}
}
[Token(Token = "0x200034F")]
public class Singleton<T> : MonoBehaviour where T : Component
{
	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationQuitting;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool hasInst;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _inst;

	[Token(Token = "0x17000202")]
	public static bool HasInstance
	{
		[Token(Token = "0x600144C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000203")]
	public static T inst
	{
		[Token(Token = "0x6001450")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600144D")]
	public virtual bool DoMultiAwakeRegisterErrorReport()
	{
		return default(bool);
	}

	[Token(Token = "0x600144E")]
	public void RegisterInAwake(T component)
	{
	}

	[Token(Token = "0x600144F")]
	private static bool ApplicationQuitting()
	{
		return default(bool);
	}

	[Token(Token = "0x6001451")]
	public static T TryGetInstance()
	{
		return null;
	}

	[Token(Token = "0x6001452")]
	public static T TryGetInstanceEditor()
	{
		return null;
	}

	[Token(Token = "0x6001453")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6001454")]
	protected virtual void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001455")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000350")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FC104", Offset = "0x9FC104")]
public class TriggerUnityEvent : MonoBehaviour
{
	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string instigatorTag;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int completeOnCount;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEnterEach;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnEnterComplete;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnExitEach;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int triggerEnterCount;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasCompleted;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BoxCollider boxCollider;

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x1AE33DC", Offset = "0x1AE33DC", VA = "0x1AE33DC")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x1AE3634", Offset = "0x1AE3634", VA = "0x1AE3634")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x1AE3768", Offset = "0x1AE3768", VA = "0x1AE3768")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x1AE372C", Offset = "0x1AE372C", VA = "0x1AE372C")]
	public bool IsInstigator(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1AE37B0", Offset = "0x1AE37B0", VA = "0x1AE37B0")]
	public TriggerUnityEvent()
	{
	}
}
[Token(Token = "0x2000351")]
public class TweenyFloat
{
	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float value;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tweener tweener;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float targetValue;

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x1AE4208", Offset = "0x1AE4208", VA = "0x1AE4208")]
	public TweenyFloat(float value)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x1AE423C", Offset = "0x1AE423C", VA = "0x1AE423C")]
	public static implicit operator float(TweenyFloat twf)
	{
		return default(float);
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x1AE4254", Offset = "0x1AE4254", VA = "0x1AE4254")]
	public static implicit operator TweenyFloat(float value)
	{
		return null;
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x1AE42C0", Offset = "0x1AE42C0", VA = "0x1AE42C0")]
	public void AnimateTo(float targetValue, float time, Func<Tweener, Tweener> tweenerActions)
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x1AE4418", Offset = "0x1AE4418", VA = "0x1AE4418")]
	private void Interrupt()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x1AE4438", Offset = "0x1AE4438", VA = "0x1AE4438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13008", Offset = "0xA13008")]
	private float <AnimateTo>b__11_0()
	{
		return default(float);
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x1AE4440", Offset = "0x1AE4440", VA = "0x1AE4440")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13018", Offset = "0xA13018")]
	private void <AnimateTo>b__11_1(float x)
	{
	}
}
[Token(Token = "0x2000352")]
public class WalletParticleCollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tool_Wallet WalletOwner;

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x1AE5954", Offset = "0x1AE5954", VA = "0x1AE5954")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x1AE59F8", Offset = "0x1AE59F8", VA = "0x1AE59F8")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x1AE5A88", Offset = "0x1AE5A88", VA = "0x1AE5A88")]
	public WalletParticleCollisionEventHandler()
	{
	}
}
[Token(Token = "0x2000353")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FC168", Offset = "0x9FC168")]
public class FPSWalkerEnhanced : MonoBehaviour
{
	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float walkSpeed;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float runSpeed;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool limitDiagonalSpeed;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool toggleRun;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float jumpSpeed;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float gravity;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fallingDamageThreshold;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool slideWhenOverSlopeLimit;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool slideOnTaggedObjects;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slideSpeed;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool airControl;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float antiBumpFactor;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int antiBunnyHopFactor;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 moveDirection;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool grounded;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterController controller;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform myTransform;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float speed;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hit;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float fallStartLevel;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool falling;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float slideLimit;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float rayDistance;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 contactPoint;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool playerControl;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int jumpTimer;

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x1379A48", Offset = "0x1379A48", VA = "0x1379A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x1379B3C", Offset = "0x1379B3C", VA = "0x1379B3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x137A158", Offset = "0x137A158", VA = "0x137A158")]
	private void Update()
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x137A1D8", Offset = "0x137A1D8", VA = "0x137A1D8")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x137A0C0", Offset = "0x137A0C0", VA = "0x137A0C0")]
	private void FallingDamageAlert(float fallDistance)
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x137A210", Offset = "0x137A210", VA = "0x137A210")]
	public FPSWalkerEnhanced()
	{
	}
}
[Token(Token = "0x2000354")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FC1CC", Offset = "0x9FC1CC")]
public class SmoothMouseLook : MonoBehaviour
{
	[Token(Token = "0x2000355")]
	public enum RotationAxes
	{
		[Token(Token = "0x400145E")]
		MouseXAndY,
		[Token(Token = "0x400145F")]
		MouseX,
		[Token(Token = "0x4001460")]
		MouseY
	}

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationX;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float rotationY;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> rotArrayX;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotAverageX;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> rotArrayY;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotAverageY;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float frameCounter;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion originalRotation;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion parentOriginalRotation;

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xCDF398", Offset = "0xCDF398", VA = "0xCDF398")]
	private void Update()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xCDFB48", Offset = "0xCDFB48", VA = "0xCDFB48")]
	private void Start()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xCDFA78", Offset = "0xCDFA78", VA = "0xCDFA78")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xCDFC38", Offset = "0xCDFC38", VA = "0xCDFC38")]
	public SmoothMouseLook()
	{
	}
}
[Token(Token = "0x2000356")]
public class SkyboxChanger : MonoBehaviour
{
	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] Skyboxes;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dropdown _dropdown;

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xCDE908", Offset = "0xCDE908", VA = "0xCDE908")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xCDE968", Offset = "0xCDE968", VA = "0xCDE968")]
	public void ChangeSkybox()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xCDEA08", Offset = "0xCDEA08", VA = "0xCDEA08")]
	public SkyboxChanger()
	{
	}
}
[Token(Token = "0x2000357")]
public class SkyboxRotator : MonoBehaviour
{
	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RotationPerSecond;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _rotate;

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xCDEA10", Offset = "0xCDEA10", VA = "0xCDEA10")]
	protected void Update()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xCDEA9C", Offset = "0xCDEA9C", VA = "0xCDEA9C")]
	public void ToggleSkyboxRotation()
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0xCDEAAC", Offset = "0xCDEAAC", VA = "0xCDEAAC")]
	public SkyboxRotator()
	{
	}
}
[Token(Token = "0x2000358")]
public class TimeOfDaySounds : MonoBehaviour
{
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC204", Offset = "0x9FC204")]
	private sealed class <CheckTime>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimeOfDaySounds <>4__this;

		[Token(Token = "0x17000204")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xCAA7D4", Offset = "0xCAA7D4", VA = "0xCAA7D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000205")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0xCAA83C", Offset = "0xCAA83C", VA = "0xCAA83C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xCAA570", Offset = "0xCAA570", VA = "0xCAA570")]
		[DebuggerHidden]
		public <CheckTime>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xCAA5A4", Offset = "0xCAA5A4", VA = "0xCAA5A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xCAA5A8", Offset = "0xCAA5A8", VA = "0xCAA5A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xCAA7DC", Offset = "0xCAA7DC", VA = "0xCAA7DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EnvironmentManager environmentManager;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject m_dawnSounds;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_daySounds;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_duskSounds;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_nightSounds;

	[Token(Token = "0x6001475")]
	[Address(RVA = "0xCAA460", Offset = "0xCAA460", VA = "0xCAA460")]
	private void Start()
	{
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0xCAA4F4", Offset = "0xCAA4F4", VA = "0xCAA4F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13028", Offset = "0xA13028")]
	private IEnumerator CheckTime()
	{
		return null;
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0xCAA59C", Offset = "0xCAA59C", VA = "0xCAA59C")]
	public TimeOfDaySounds()
	{
	}
}
namespace Neat.Utilities.Collections
{
	[Token(Token = "0x200035A")]
	public struct OptimizedCollection<T>
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03B74", Offset = "0xA03B74")]
		private T[] <Content>k__BackingField;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03B84", Offset = "0xA03B84")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000206")]
		public T[] Content
		{
			[Token(Token = "0x600147E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA130DC", Offset = "0xA130DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600147F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA130EC", Offset = "0xA130EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public int Count
		{
			[Token(Token = "0x6001480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA130FC", Offset = "0xA130FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001481")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1310C", Offset = "0xA1310C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001482")]
		public OptimizedCollection(int size)
		{
		}

		[Token(Token = "0x6001483")]
		public OptimizedCollection(T[] content)
		{
		}

		[Token(Token = "0x6001484")]
		public void IncreaseCount()
		{
		}

		[Token(Token = "0x6001485")]
		public void Add(T element)
		{
		}

		[Token(Token = "0x6001486")]
		public bool TryAdd(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001487")]
		public void AddUnique(T element)
		{
		}

		[Token(Token = "0x6001488")]
		public bool TryAddUnique(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x6001489")]
		public void Remove(T element)
		{
		}

		[Token(Token = "0x600148A")]
		public bool TryRemove(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x600148B")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600148C")]
		public bool Contains(T element)
		{
			return default(bool);
		}

		[Token(Token = "0x600148D")]
		public void Clear(bool shouldClearContents = false)
		{
		}

		[Token(Token = "0x600148E")]
		public T[] ToArray()
		{
			return null;
		}
	}
}
namespace Neat.NeatCode.Controller
{
	[Token(Token = "0x200035B")]
	public class NeatVR_KnucklesController : NeatVR_Controller
	{
		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameSettings m_gameSettings;

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xD091E8", Offset = "0xD091E8", VA = "0xD091E8")]
		public NeatVR_KnucklesController(InputDevice device, bool isRightHand)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xD09290", Offset = "0xD09290", VA = "0xD09290", Slot = "13")]
		public override bool GetIsPressed(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xD09298", Offset = "0xD09298", VA = "0xD09298", Slot = "11")]
		public override bool GetOnPress(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xD092A0", Offset = "0xD092A0", VA = "0xD092A0", Slot = "12")]
		public override bool GetOnRelease(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xD092A8", Offset = "0xD092A8", VA = "0xD092A8", Slot = "10")]
		public override Vector2 GetStickInput(bool isRightHand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xD092B4", Offset = "0xD092B4", VA = "0xD092B4", Slot = "5")]
		protected override void CreateButtons()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xD095B4", Offset = "0xD095B4", VA = "0xD095B4", Slot = "9")]
		protected override void UpdatePlatformSpecificInputDelta(bool rightHand)
		{
		}
	}
	[Token(Token = "0x200035C")]
	public class NeatVR_WMRController : NeatVR_Controller
	{
		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NeatVR_Input.HardwareInput[] hardwareButtons;

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xD0A604", Offset = "0xD0A604", VA = "0xD0A604")]
		public NeatVR_WMRController(InputDevice device, bool isRightHand)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xD0A610", Offset = "0xD0A610", VA = "0xD0A610", Slot = "5")]
		protected override void CreateButtons()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xD0AC74", Offset = "0xD0AC74", VA = "0xD0AC74", Slot = "8")]
		public override void UpdateInputDelta()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xD0ACD8", Offset = "0xD0ACD8", VA = "0xD0ACD8", Slot = "9")]
		protected override void UpdatePlatformSpecificInputDelta(bool rightHand)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xD0AE1C", Offset = "0xD0AE1C", VA = "0xD0AE1C")]
		private void UpdateButton(InputAction action, bool rightHand)
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class NeatVR_ViveController : NeatVR_Controller
	{
		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float inputscale;

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xD09694", Offset = "0xD09694", VA = "0xD09694")]
		public NeatVR_ViveController(InputDevice device, bool isRightHand)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xD09830", Offset = "0xD09830", VA = "0xD09830", Slot = "13")]
		public override bool GetIsPressed(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xD09BAC", Offset = "0xD09BAC", VA = "0xD09BAC", Slot = "11")]
		public override bool GetOnPress(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xD09F28", Offset = "0xD09F28", VA = "0xD09F28", Slot = "12")]
		public override bool GetOnRelease(InputAction action)
		{
			return default(bool);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xD0A2A4", Offset = "0xD0A2A4", VA = "0xD0A2A4", Slot = "10")]
		public override Vector2 GetStickInput(bool isRightHand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xD0A2B0", Offset = "0xD0A2B0", VA = "0xD0A2B0", Slot = "5")]
		protected override void CreateButtons()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xD0A5C0", Offset = "0xD0A5C0", VA = "0xD0A5C0", Slot = "14")]
		protected override void OnDominantHandChanged(bool useLeftHand)
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xD0A5DC", Offset = "0xD0A5DC", VA = "0xD0A5DC", Slot = "15")]
		protected override void OnSmoothLocomotionSettingChanged(bool enabled)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xD096B0", Offset = "0xD096B0", VA = "0xD096B0")]
		private void UpdateInputSettings()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xD0A5F8", Offset = "0xD0A5F8", VA = "0xD0A5F8", Slot = "9")]
		protected override void UpdatePlatformSpecificInputDelta(bool rightHand)
		{
		}
	}
}
namespace NeatCode.Extensions.ColorExtensions
{
	[Token(Token = "0x200035E")]
	public static class ColorExtensions
	{
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1101230", Offset = "0x1101230", VA = "0x1101230")]
		public static Color WithA(this Color color, float value)
		{
			return default(Color);
		}
	}
}
namespace Unity.IL2CPP.CompilerServices
{
	[Token(Token = "0x200035F")]
	public enum Option
	{
		[Token(Token = "0x4001473")]
		NullChecks = 1,
		[Token(Token = "0x4001474")]
		ArrayBoundsChecks,
		[Token(Token = "0x4001475")]
		DivideByZeroChecks
	}
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9FC224", Offset = "0x9FC224")]
	public class Il2CppSetOptionAttribute : Attribute
	{
		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03B94", Offset = "0xA03B94")]
		private Option <Option>k__BackingField;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA03BA4", Offset = "0xA03BA4")]
		private object <Value>k__BackingField;

		[Token(Token = "0x17000208")]
		private Option Option
		{
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x1AE48CC", Offset = "0x1AE48CC", VA = "0x1AE48CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1312C", Offset = "0xA1312C")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		private object Value
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x1AE48D4", Offset = "0x1AE48D4", VA = "0x1AE48D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1313C", Offset = "0xA1313C")]
			set
			{
			}
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x1AE48DC", Offset = "0x1AE48DC", VA = "0x1AE48DC")]
		public Il2CppSetOptionAttribute(Option option, object value)
		{
		}
	}
}
namespace NeatCorp
{
	[Token(Token = "0x2000361")]
	public class GotsAudioMixers : MonoBehaviour
	{
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixer m_outputMixer;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixer m_musicMixer;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioMixer m_soundsMixer;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GotsAudioMixers Instance;

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xE84564", Offset = "0xE84564", VA = "0xE84564")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xE845D4", Offset = "0xE845D4", VA = "0xE845D4")]
		public static AudioMixer GetOutputMixer()
		{
			return null;
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xE846AC", Offset = "0xE846AC", VA = "0xE846AC")]
		public static AudioMixer GetMusicMixer()
		{
			return null;
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xE84784", Offset = "0xE84784", VA = "0xE84784")]
		public static AudioMixer GetSoundsMixer()
		{
			return null;
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xE8485C", Offset = "0xE8485C", VA = "0xE8485C")]
		public GotsAudioMixers()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class TriggerSoundFromAnimationEvent : MonoBehaviour
	{
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayerSecondary;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioCue[] m_audioCues;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentCue;

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xD8DE04", Offset = "0xD8DE04", VA = "0xD8DE04")]
		public void TriggerSoundFromEvent(int audioCueIndex)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xD8DEE0", Offset = "0xD8DEE0", VA = "0xD8DEE0")]
		public void TriggerSoundFromEventSecondary(int audioCueIndex)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xD8DFBC", Offset = "0xD8DFBC", VA = "0xD8DFBC")]
		public TriggerSoundFromAnimationEvent()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class SendMilestoneEvent : MonoBehaviour
	{
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Milestone.MilestoneType milestone;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool onlySendOnce;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool didSend;

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xD8B6A4", Offset = "0xD8B6A4", VA = "0xD8B6A4")]
		public void SendEvent()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xD8B760", Offset = "0xD8B760", VA = "0xD8B760")]
		public SendMilestoneEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000364")]
	public class SerializableBuildVersion
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string applicationVersion;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string buildVersion;

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xD8B768", Offset = "0xD8B768", VA = "0xD8B768")]
		public SerializableBuildVersion(string appVersion, string buildVersion)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000365")]
	public class GotsBuildVersion
	{
		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string BUILD_VERSION_ASSET_PATH;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int SubPartLength;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string gitCommitHash;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string uniqueRandomizedCode;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xE84868", Offset = "0xE84868", VA = "0xE84868")]
		public string GetBuildVersion()
		{
			return null;
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xE848BC", Offset = "0xE848BC", VA = "0xE848BC")]
		public static string GetApplicationVersion()
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xE848C4", Offset = "0xE848C4", VA = "0xE848C4")]
		public SerializableBuildVersion GetSerializableVersion()
		{
			return null;
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xE84970", Offset = "0xE84970", VA = "0xE84970")]
		private static bool ParseAppVersionStringIntoParts(string version, out int first, out int second, out int third)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xE84D50", Offset = "0xE84D50", VA = "0xE84D50")]
		private static bool VersionIsValid(string v)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xE84D64", Offset = "0xE84D64", VA = "0xE84D64")]
		public static bool VersionIsFromEarlyAccess(string appVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xE84E2C", Offset = "0xE84E2C", VA = "0xE84E2C")]
		public GotsBuildVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000366")]
	public struct Color32Serializable
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte r;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte g;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte b;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte a;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xAE6CC0", Offset = "0xAE6CC0", VA = "0xAE6CC0")]
		public Color32Serializable(Color32 color)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xAE6CE0", Offset = "0xAE6CE0", VA = "0xAE6CE0")]
		public Color32 ToColor32()
		{
			return default(Color32);
		}
	}
	[Serializable]
	[Token(Token = "0x2000367")]
	public struct Vector3Serializable
	{
		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xAD8F94", Offset = "0xAD8F94", VA = "0xAD8F94")]
		public Vector3Serializable(Vector3 vec)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xAD8FA0", Offset = "0xAD8FA0", VA = "0xAD8FA0")]
		public Vector3 ToVector3()
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000368")]
	public struct Vector4Serializable
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xAD8FDC", Offset = "0xAD8FDC", VA = "0xAD8FDC")]
		public Vector4Serializable(Quaternion quaternion)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xAD8FE8", Offset = "0xAD8FE8", VA = "0xAD8FE8")]
		public Quaternion ToQuaternion()
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000369")]
	public struct AssetReferenceSerializable
	{
		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string assetGuid;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xAE6C90", Offset = "0xAE6C90", VA = "0xAE6C90")]
		public AssetReferenceSerializable(AssetReference assetRef)
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xAE6C98", Offset = "0xAE6C98", VA = "0xAE6C98")]
		public AssetReference ToAssetReference()
		{
			return null;
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xAE6CA0", Offset = "0xAE6CA0", VA = "0xAE6CA0")]
		public bool IsValid()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x200036A")]
	public struct OrientedPointSerializable
	{
		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4Serializable rotation;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3Serializable position;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3Serializable localScale;

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xAD7808", Offset = "0xAD7808", VA = "0xAD7808")]
		public OrientedPointSerializable(OrientedPoint point)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xAD783C", Offset = "0xAD783C", VA = "0xAD783C")]
		public OrientedPoint ToOrientedPoint()
		{
			return default(OrientedPoint);
		}
	}
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC25C", Offset = "0x9FC25C")]
	public class CraftingSystemData : ScriptableObject
	{
		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CraftingSystem.CraftingRecipeCollection[] collections;

		[Token(Token = "0x1700020A")]
		public CraftingSystem.CraftingRecipeCollection[] Collections
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x1106100", Offset = "0x1106100", VA = "0x1106100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x1106108", Offset = "0x1106108", VA = "0x1106108")]
		public CraftingSystemData()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public struct CreditSection
	{
		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string title;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] names;

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xAD733C", Offset = "0xAD733C", VA = "0xAD733C")]
		public CreditSection(string title, string[] names)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public struct CreditPage
	{
		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float duration;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CreditSection[] sections;

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xAD72C0", Offset = "0xAD72C0", VA = "0xAD72C0")]
		public CreditPage(CreditSection[] sections, float duration = 3f)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xAD72F8", Offset = "0xAD72F8", VA = "0xAD72F8")]
		public string GetText()
		{
			return null;
		}
	}
	[Token(Token = "0x200036E")]
	public class Credits : MonoBehaviour
	{
		[Token(Token = "0x200036F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC2C8", Offset = "0x9FC2C8")]
		private sealed class <ScrollCredits>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Credits <>4__this;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 <size>5__2;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetY>5__3;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <duration>5__4;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timeElapsed>5__5;

			[Token(Token = "0x1700020B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014D6")]
				[Address(RVA = "0xD6D298", Offset = "0xD6D298", VA = "0xD6D298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014D8")]
				[Address(RVA = "0xD6D300", Offset = "0xD6D300", VA = "0xD6D300", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xD6B920", Offset = "0xD6B920", VA = "0xD6B920")]
			[DebuggerHidden]
			public <ScrollCredits>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xD6CE00", Offset = "0xD6CE00", VA = "0xD6CE00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xD6CE04", Offset = "0xD6CE04", VA = "0xD6CE04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xD6D2A0", Offset = "0xD6D2A0", VA = "0xD6D2A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC2D8", Offset = "0x9FC2D8")]
		private sealed class <AnimateCredits>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Credits <>4__this;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <currentIndex>5__2;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <duration>5__3;

			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeElapsed>5__4;

			[Token(Token = "0x1700020D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014DC")]
				[Address(RVA = "0xD6CD90", Offset = "0xD6CD90", VA = "0xD6CD90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014DE")]
				[Address(RVA = "0xD6CDF8", Offset = "0xD6CDF8", VA = "0xD6CDF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xD6B9C8", Offset = "0xD6B9C8", VA = "0xD6B9C8")]
			[DebuggerHidden]
			public <AnimateCredits>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xD6C9A0", Offset = "0xD6C9A0", VA = "0xD6C9A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xD6C9A4", Offset = "0xD6C9A4", VA = "0xD6C9A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xD6CD98", Offset = "0xD6CD98", VA = "0xD6CD98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000371")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC2E8", Offset = "0x9FC2E8")]
		private sealed class <>c
		{
			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__34_0;

			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xD6C994", Offset = "0xD6C994", VA = "0xD6C994")]
			public <>c()
			{
			}

			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xD6C99C", Offset = "0xD6C99C", VA = "0xD6C99C")]
			internal void <.ctor>b__34_0()
			{
			}
		}

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnComplete;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro creditsText;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool initialized;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool isAnimating;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<CreditPage> pages;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] ceo;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] art;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] design;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string[] design2;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string[] code;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] code2;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string[] techArt;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string[] sound;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string[] pr;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string[] qa;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string[] petsAndBabies;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string[] specialThanks;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CreditSection firstPage;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CreditSection ceoSection;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CreditSection artSection;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CreditSection designSection;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CreditSection design2Section;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CreditSection codeSection;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreditSection code2Section;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CreditSection techArtSection;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CreditSection soundSection;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CreditSection prSection;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CreditSection qaSection;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CreditSection petsSection;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private CreditSection thanksSection;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xD6B354", Offset = "0xD6B354", VA = "0xD6B354")]
		private void Init()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xD6B7E8", Offset = "0xD6B7E8", VA = "0xD6B7E8")]
		public void ShowCredits()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xD6B8A4", Offset = "0xD6B8A4", VA = "0xD6B8A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1314C", Offset = "0xA1314C")]
		private IEnumerator ScrollCredits()
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xD6B94C", Offset = "0xD6B94C", VA = "0xD6B94C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA131B0", Offset = "0xA131B0")]
		private IEnumerator AnimateCredits()
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xD6B9F4", Offset = "0xD6B9F4", VA = "0xD6B9F4")]
		public Credits()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class HorizonClouds : MonoBehaviour
	{
		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xD25A74", Offset = "0xD25A74", VA = "0xD25A74")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xD25BF8", Offset = "0xD25BF8", VA = "0xD25BF8")]
		public HorizonClouds()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public class NightSkyEffects : MonoBehaviour
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Light directionalLight;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float toggleAtDarkness;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject objectToToggle;

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xD93704", Offset = "0xD93704", VA = "0xD93704")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xD93988", Offset = "0xD93988", VA = "0xD93988")]
		public NightSkyEffects()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public enum PaintSplashColor
	{
		[Token(Token = "0x40014CE")]
		Blue,
		[Token(Token = "0x40014CF")]
		Clear,
		[Token(Token = "0x40014D0")]
		Green,
		[Token(Token = "0x40014D1")]
		Orange,
		[Token(Token = "0x40014D2")]
		Pink,
		[Token(Token = "0x40014D3")]
		Purple,
		[Token(Token = "0x40014D4")]
		PurplePink,
		[Token(Token = "0x40014D5")]
		Red,
		[Token(Token = "0x40014D6")]
		White,
		[Token(Token = "0x40014D7")]
		Yellow
	}
	[Token(Token = "0x2000375")]
	public class ParticleEffectPoolSystem : MonoBehaviour
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ParticleEffectPoolSystem Instance;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03C84", Offset = "0xA03C84")]
		[SerializeField]
		private ParticleSystem[] waterSplashEffects;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA03CD0", Offset = "0xA03CD0")]
		private NeatAudioPlayer waterSplashAudioPlayer;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03D1C", Offset = "0xA03D1C")]
		private ParticleSystem[] poofEffects;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA03D68", Offset = "0xA03D68")]
		[SerializeField]
		private NeatAudioPlayer poofAudioPlayer;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03DB4", Offset = "0xA03DB4")]
		[SerializeField]
		private ParticleSystem[] paintSplashEffects;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioPlayer paintSplashAudioPlayer;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03E10", Offset = "0xA03E10")]
		private ParticleSystem[] glitterEffects;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioPlayer glitterAudioPlayer;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03E6C", Offset = "0xA03E6C")]
		private ParticleSystem[] dirtEffects;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer dirtAudioPlayer;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA03EC8", Offset = "0xA03EC8")]
		private NeatAudioPlayer[] pooledAudioPlayers;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int currentWaterSplashIndex;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int currentPoofIndex;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int currentPaintSplashIndex;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int currentGlitterIndex;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int currentDirtIndex;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int audioPlayerIndex;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int SPEED;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xD93AF4", Offset = "0xD93AF4", VA = "0xD93AF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xD93B64", Offset = "0xD93B64", VA = "0xD93B64")]
		public static void PlayWaterSplash(Vector3 pos)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xD93ED0", Offset = "0xD93ED0", VA = "0xD93ED0")]
		public static void PlayPoofEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xD93FD4", Offset = "0xD93FD4", VA = "0xD93FD4")]
		public static void PlayPaintSplashEffect(Vector3 pos, PaintSplashColor color, float speed)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xD94394", Offset = "0xD94394", VA = "0xD94394")]
		public static void PlayGlitterEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xD94498", Offset = "0xD94498", VA = "0xD94498")]
		public static void PlayDirtEffect(Vector3 pos)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xD9459C", Offset = "0xD9459C", VA = "0xD9459C")]
		public static void PlaySound(Vector3 pos, NeatAudioCue cue)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xD9464C", Offset = "0xD9464C", VA = "0xD9464C")]
		private int PlaySound(Vector3 pos, NeatAudioCue cue, NeatAudioPlayer[] audioPlayers, int index)
		{
			return default(int);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xD93C68", Offset = "0xD93C68", VA = "0xD93C68")]
		private int PlayEffect(Vector3 pos, ParticleSystem[] effects, int index, [Optional] NeatAudioPlayer audioPlayer)
		{
			return default(int);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xD940F4", Offset = "0xD940F4", VA = "0xD940F4")]
		private int PlayPaintSplashEffect(Vector3 pos, ParticleSystem[] effects, int colorIndex, float speed, int currentVariation, [Optional] NeatAudioPlayer audioPlayer)
		{
			return default(int);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xD948C8", Offset = "0xD948C8", VA = "0xD948C8")]
		public ParticleEffectPoolSystem()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class ToggleAtTime : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int toggleOnAtHour;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int toggleOffAtHour;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xD8D864", Offset = "0xD8D864", VA = "0xD8D864", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xD8DA2C", Offset = "0xD8DA2C", VA = "0xD8DA2C")]
		public void ToggleOn()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xD8DB88", Offset = "0xD8DB88", VA = "0xD8DB88")]
		public void ToggleOff()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xD8DCE4", Offset = "0xD8DCE4", VA = "0xD8DCE4")]
		public ToggleAtTime()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public abstract class GrabbableImpostor : MonoBehaviour, IGrabbable, IInitializable, IValidateCustom, IValidate
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GrabbableOutline outline;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider[] colliders;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand hand;

		[Token(Token = "0x60014F6")]
		public abstract Grabbable GetRealGrabbable();

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xE84F0C", Offset = "0xE84F0C", VA = "0xE84F0C", Slot = "17")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xE84F10", Offset = "0xE84F10", VA = "0xE84F10", Slot = "18")]
		public virtual int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xE84F18", Offset = "0xE84F18", VA = "0xE84F18", Slot = "19")]
		public PlayerHand GetHeldByHand()
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xE84F20", Offset = "0xE84F20", VA = "0xE84F20", Slot = "20")]
		public virtual bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xE84F28", Offset = "0xE84F28", VA = "0xE84F28", Slot = "21")]
		public bool HaveChildGrabbables()
		{
			return default(bool);
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xE84F30", Offset = "0xE84F30", VA = "0xE84F30", Slot = "11")]
		public bool ShouldConsumeGrab(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xE84F38", Offset = "0xE84F38", VA = "0xE84F38", Slot = "12")]
		public void Touch()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xE84F3C", Offset = "0xE84F3C", VA = "0xE84F3C", Slot = "7")]
		public void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xE84F44", Offset = "0xE84F44", VA = "0xE84F44", Slot = "8")]
		public void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xE84F50", Offset = "0xE84F50", VA = "0xE84F50", Slot = "9")]
		public void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xE84F54", Offset = "0xE84F54", VA = "0xE84F54", Slot = "5")]
		public bool IsExtraSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xE84F5C", Offset = "0xE84F5C", VA = "0xE84F5C", Slot = "6")]
		public GrabbableOutline GetOutline()
		{
			return null;
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xE84F64", Offset = "0xE84F64", VA = "0xE84F64", Slot = "13")]
		public float GetDelayBeforeGrab()
		{
			return default(float);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xE84F6C", Offset = "0xE84F6C", VA = "0xE84F6C", Slot = "14")]
		public Collider[] GetColliders()
		{
			return null;
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xE84F74", Offset = "0xE84F74", VA = "0xE84F74")]
		protected GrabbableImpostor()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class PettableCollider : MonoBehaviour
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Pettable m_parentPettable;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_favoritePettingSpot;

		[Token(Token = "0x1700020F")]
		public Pettable Pettable
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xD9492C", Offset = "0xD9492C", VA = "0xD9492C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xD94934", Offset = "0xD94934", VA = "0xD94934")]
		public PettableCollider()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class SaveRotation : SaveableComponent, IInitializable
	{
		[Token(Token = "0x6001508")]
		[Address(RVA = "0xD8A98C", Offset = "0xD8A98C", VA = "0xD8A98C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xD8AAD8", Offset = "0xD8AAD8", VA = "0xD8AAD8", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xD8AB88", Offset = "0xD8AB88", VA = "0xD8AB88")]
		public SaveRotation()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class SaveRotationState : ComponentState
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion localRotation;

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xD8AA34", Offset = "0xD8AA34", VA = "0xD8AA34")]
		public SaveRotationState(Quaternion rot)
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class ToggleableObject : MonoBehaviour
	{
		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] objects;

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xD8DCEC", Offset = "0xD8DCEC", VA = "0xD8DCEC")]
		public void ToggleObject(int index)
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xD8DD6C", Offset = "0xD8DD6C", VA = "0xD8DD6C")]
		public ToggleableObject()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class PlayerBracelet : MonoBehaviour, IValidate, IInitializable
	{
		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC2F8", Offset = "0x9FC2F8")]
		private sealed class <AttachToWrist>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerBracelet <>4__this;

			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform attachmentTransform;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PlayerHand hand;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Rigidbody <rigidbody>5__2;

			[Token(Token = "0x40014FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x4001500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__4;

			[Token(Token = "0x17000210")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001515")]
				[Address(RVA = "0xD9B134", Offset = "0xD9B134", VA = "0xD9B134", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000211")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001517")]
				[Address(RVA = "0xD9B19C", Offset = "0xD9B19C", VA = "0xD9B19C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0xD9ABB4", Offset = "0xD9ABB4", VA = "0xD9ABB4")]
			[DebuggerHidden]
			public <AttachToWrist>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001513")]
			[Address(RVA = "0xD9ABF0", Offset = "0xD9ABF0", VA = "0xD9ABF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0xD9ABF4", Offset = "0xD9ABF4", VA = "0xD9ABF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001516")]
			[Address(RVA = "0xD9B13C", Offset = "0xD9B13C", VA = "0xD9B13C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float attachToWristDuration;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve moveIntoPlaceCurve;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve scaleDownCurve;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CacheReferenceAttribute", RVA = "0xA03FB4", Offset = "0xA03FB4")]
		[SerializeField]
		private Grabbable grabbable;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isAnimating;

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xD9A81C", Offset = "0xD9A81C", VA = "0xD9A81C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xD9A8EC", Offset = "0xD9A8EC", VA = "0xD9A8EC")]
		public void BraceletGrabbed(Grabbable g)
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xD9AB08", Offset = "0xD9AB08", VA = "0xD9AB08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA132B4", Offset = "0xA132B4")]
		private IEnumerator AttachToWrist(Transform attachmentTransform, PlayerHand hand)
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xD9ABE0", Offset = "0xD9ABE0", VA = "0xD9ABE0")]
		public PlayerBracelet()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public struct PotentialGrabbable
	{
		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IGrabbable grabbable;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private OptimizedCollection<Collider> colliders;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int MAX_NUM_COLLIDERS;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xAD7880", Offset = "0xAD7880", VA = "0xAD7880")]
		public PotentialGrabbable(IGrabbable grabbable, Collider collider)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xAD7888", Offset = "0xAD7888", VA = "0xAD7888")]
		public void AddCollider(Collider newCollider)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xAD7890", Offset = "0xAD7890", VA = "0xAD7890")]
		public bool HasCollider(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xAD7898", Offset = "0xAD7898", VA = "0xAD7898")]
		public void SetValues(IGrabbable grabbable, Collider collider)
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xAD78A0", Offset = "0xAD78A0", VA = "0xAD78A0")]
		public Vector3 GetClosestPointToLine(Vector3 origin, Vector3 direction, bool drawGizmos = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xAD78AC", Offset = "0xAD78AC", VA = "0xAD78AC")]
		public Vector3 GetClosestPoint(Vector3 origin, bool fast = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xAD78B8", Offset = "0xAD78B8", VA = "0xAD78B8")]
		public int GetLayer()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200037F")]
	public class GrabbableTracker : MonoBehaviour
	{
		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OptimizedCollection<PotentialGrabbable> grabbablesInRange;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasCalculatedInitialValues;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 relativeOriginPos;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider[] sphereCastResults;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, IGrabbable> GrabbableLookUpTable;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<IGrabbable> grabbableList;

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xE84F7C", Offset = "0xE84F7C", VA = "0xE84F7C")]
		public static void Reset()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xE85018", Offset = "0xE85018", VA = "0xE85018")]
		public static void AddGrabbable(IGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xE85360", Offset = "0xE85360", VA = "0xE85360")]
		public int GetGrabbablesInRange(Vector3 startPos, Transform handPointDirection, ref OptimizedCollection<PotentialGrabbable> grabbablesOut, bool drawGizmos = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xE85864", Offset = "0xE85864", VA = "0xE85864")]
		public int CalculateScoreForPotentialGrabbable(PotentialGrabbable obj, Vector3 handPosition, Vector3 pointDirection, bool drawGizmos = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xE856FC", Offset = "0xE856FC", VA = "0xE856FC")]
		private void FindGrabbablesInCapsule(Vector3 pos1, Vector3 pos2, float radius, ref OptimizedCollection<PotentialGrabbable> grabbablesOut)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xE85EC8", Offset = "0xE85EC8", VA = "0xE85EC8")]
		private void AddGrabbableIfNeeded(IGrabbable grabbable, Collider collider, ref OptimizedCollection<PotentialGrabbable> grabbablesOut)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xE85C6C", Offset = "0xE85C6C", VA = "0xE85C6C")]
		private static IGrabbable GetGrabbableForCollider(Collider c)
		{
			return null;
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xE85FB8", Offset = "0xE85FB8", VA = "0xE85FB8")]
		public GrabbableTracker()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class EndGameSequence : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000381")]
		public enum EndGameState
		{
			[Token(Token = "0x4001520")]
			None,
			[Token(Token = "0x4001521")]
			TriggeredFirstAnimation,
			[Token(Token = "0x4001522")]
			SpawnedFlower,
			[Token(Token = "0x4001523")]
			PlayerGrabbedBracelet,
			[Token(Token = "0x4001524")]
			ShowedCredits
		}

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC308", Offset = "0x9FC308")]
		private sealed class <ActivateLaserAfterDelay>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EndGameSequence <>4__this;

			[Token(Token = "0x17000212")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001539")]
				[Address(RVA = "0xD6E718", Offset = "0xD6E718", VA = "0xD6E718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000213")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600153B")]
				[Address(RVA = "0xD6E780", Offset = "0xD6E780", VA = "0xD6E780", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001536")]
			[Address(RVA = "0xD6DE1C", Offset = "0xD6DE1C", VA = "0xD6DE1C")]
			[DebuggerHidden]
			public <ActivateLaserAfterDelay>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6001537")]
			[Address(RVA = "0xD6E610", Offset = "0xD6E610", VA = "0xD6E610", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001538")]
			[Address(RVA = "0xD6E614", Offset = "0xD6E614", VA = "0xD6E614", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600153A")]
			[Address(RVA = "0xD6E720", Offset = "0xD6E720", VA = "0xD6E720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator godsAnimator;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator ringsAnimator;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject coffin;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GodFlower godFlowerStatic;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject playerBeacon;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject biome1Beacon;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject biome2Beacon;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject biome3Beacon;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject laserBeam;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float delayBeforeTriggeringLaser;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CreditsHandler credits;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private EnvironmentPreset m_endGameOverridePreset;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EndGameState currentState;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool canCompleteGame;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool didAddListener;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int IntroStateHash;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int OutroStateHash;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int ActivatedSpotHash;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int GrabbedBraceletHash;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int GoDirectlyToLoopHash;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int HideDoorHash;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xD6D654", Offset = "0xD6D654", VA = "0xD6D654", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xD6D6BC", Offset = "0xD6D6BC", VA = "0xD6D6BC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xD6D890", Offset = "0xD6D890", VA = "0xD6D890")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xD6D95C", Offset = "0xD6D95C", VA = "0xD6D95C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xD6DB78", Offset = "0xD6DB78", VA = "0xD6DB78")]
		private void SetEnvironmentPreset()
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xD6DDB4", Offset = "0xD6DDB4", VA = "0xD6DDB4")]
		private void ResetEnvironmentPreset()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xD6DBEC", Offset = "0xD6DBEC", VA = "0xD6DBEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13368", Offset = "0xA13368")]
		private IEnumerator ActivateLaserAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xD6DE48", Offset = "0xD6DE48", VA = "0xD6DE48")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xD6DF40", Offset = "0xD6DF40", VA = "0xD6DF40")]
		private void OnAnimationStateExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xD6DC78", Offset = "0xD6DC78", VA = "0xD6DC78")]
		public void TriggerSecondPartOfAnimation()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xD6E1D4", Offset = "0xD6E1D4", VA = "0xD6E1D4")]
		public void TriggerDoorOutroAnimation()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xD6E204", Offset = "0xD6E204", VA = "0xD6E204")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xD6E530", Offset = "0xD6E530", VA = "0xD6E530")]
		public EndGameSequence()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class TriggerEndGameAnimationState : ComponentState
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int endGameState;

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xD8DDD8", Offset = "0xD8DDD8", VA = "0xD8DDD8")]
		public TriggerEndGameAnimationState(EndGameSequence.EndGameState endGameState)
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class GodIslandLowRes : MonoBehaviour
	{
		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC318", Offset = "0x9FC318")]
		private sealed class <AnimateReveal>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400153A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GodIslandLowRes <>4__this;

			[Token(Token = "0x400153B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x400153C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <startPos>5__3;

			[Token(Token = "0x400153D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <distanceToMove>5__4;

			[Token(Token = "0x400153E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <didTriggerHaptics>5__5;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600154C")]
				[Address(RVA = "0xE844F4", Offset = "0xE844F4", VA = "0xE844F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600154E")]
				[Address(RVA = "0xE8455C", Offset = "0xE8455C", VA = "0xE8455C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0xE8405C", Offset = "0xE8405C", VA = "0xE8405C")]
			[DebuggerHidden]
			public <AnimateReveal>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600154A")]
			[Address(RVA = "0xE84104", Offset = "0xE84104", VA = "0xE84104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600154B")]
			[Address(RVA = "0xE84108", Offset = "0xE84108", VA = "0xE84108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600154D")]
			[Address(RVA = "0xE844FC", Offset = "0xE844FC", VA = "0xE844FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WorldZone worldZone;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject rings;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject door;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject biome1Beacon;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject biome2Beacon;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject biome3Beacon;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04114", Offset = "0xA04114")]
		[SerializeField]
		private AnimationCurve revealAnimationX;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve revealAnimationY;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimationCurve revealAnimationZ;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float delayBeforeReveal;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float revealAnimationDuration;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float delayBeforeRevealHaptics;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float defaultYPosition;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string skipTutorialEvent;

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xE83644", Offset = "0xE83644", VA = "0xE83644")]
		private void Start()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xE83A1C", Offset = "0xE83A1C", VA = "0xE83A1C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xE83B24", Offset = "0xE83B24", VA = "0xE83B24")]
		public void OnLowResVersionToggled(bool lodVisible)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xE838E8", Offset = "0xE838E8", VA = "0xE838E8")]
		private void UpdateBeaconVisibility()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xE83D04", Offset = "0xE83D04", VA = "0xE83D04")]
		public void OnTutorialSkipped(QuestEvent e)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xE83EB0", Offset = "0xE83EB0", VA = "0xE83EB0")]
		public void OnMilestoneCompleted(MilestoneEvent e)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xE8383C", Offset = "0xE8383C", VA = "0xE8383C")]
		private void HideUnderWater()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xE83C5C", Offset = "0xE83C5C", VA = "0xE83C5C")]
		private void RevealImmediately()
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xE83FB4", Offset = "0xE83FB4", VA = "0xE83FB4")]
		public void AnimateGodIslandReveal()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xE83FE0", Offset = "0xE83FE0", VA = "0xE83FE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1341C", Offset = "0xA1341C")]
		private IEnumerator AnimateReveal()
		{
			return null;
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xE84088", Offset = "0xE84088", VA = "0xE84088")]
		public GodIslandLowRes()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class CoralGemImpostor : ImportantItemImpostor
	{
		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_ghostIndex;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_didAddListener;

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x11056A8", Offset = "0x11056A8", VA = "0x11056A8", Slot = "22")]
		protected override void FindImportantItem()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1105988", Offset = "0x1105988", VA = "0x1105988", Slot = "24")]
		public override void AssignConnectedItem(ImportantItem newItem)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1105A84", Offset = "0x1105A84", VA = "0x1105A84")]
		private void OnPlaformFinished(PlatformFinishedEvent e)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1105B98", Offset = "0x1105B98", VA = "0x1105B98", Slot = "23")]
		protected override void RemoveEventListeners()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1105C64", Offset = "0x1105C64", VA = "0x1105C64")]
		public CoralGemImpostor()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class ImportantItem : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000388")]
		public enum ItemType
		{
			[Token(Token = "0x4001547")]
			None,
			[Token(Token = "0x4001548")]
			Biome2Gem,
			[Token(Token = "0x4001549")]
			Biome3Gem,
			[Token(Token = "0x400154A")]
			BeaconMap,
			[Token(Token = "0x400154B")]
			NUM_TYPES
		}

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ItemType m_itemType;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Grabbable m_grabbable;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Rigidbody m_rigidbody;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected ImportantItemImpostor m_currentImpostor;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SaveID m_impostorSaveID;

		[Token(Token = "0x17000216")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0xD25C00", Offset = "0xD25C00", VA = "0xD25C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public Rigidbody RB
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0xD25C08", Offset = "0xD25C08", VA = "0xD25C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public ItemType Type
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0xD25C10", Offset = "0xD25C10", VA = "0xD25C10")]
			get
			{
				return default(ItemType);
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xD25C18", Offset = "0xD25C18", VA = "0xD25C18", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xD25D30", Offset = "0xD25D30", VA = "0xD25D30")]
		public void AssignNewImpostor(ImportantItemImpostor newImpostor)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xD25E20", Offset = "0xD25E20", VA = "0xD25E20")]
		public bool IsAssignedToImpostor(ImportantItemImpostor impostor)
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xD25F6C", Offset = "0xD25F6C", VA = "0xD25F6C", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xD26410", Offset = "0xD26410", VA = "0xD26410")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xD266F4", Offset = "0xD266F4", VA = "0xD266F4")]
		public ImportantItem()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class ImportantItemCoralGem : ImportantItem
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_ghostIndex;

		[Token(Token = "0x17000219")]
		public int GhostIndex
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xD266FC", Offset = "0xD266FC", VA = "0xD266FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xD26704", Offset = "0xD26704", VA = "0xD26704")]
		public void SetGhostIndex(int index)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xD2670C", Offset = "0xD2670C", VA = "0xD2670C")]
		public ImportantItemCoralGem()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class ImportantItemImpostor : GrabbableImpostor
	{
		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ImportantItem.ItemType m_itemType;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_prefab;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected GameObject m_imposterMesh;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SaveObjectBase m_saveObject;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ImportantItem m_connectedItem;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isSnapped;

		[Token(Token = "0x1700021A")]
		public SaveObjectBase SaveObj
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xD2671C", Offset = "0xD2671C", VA = "0xD2671C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public ImportantItem ConnectedItem
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xD26724", Offset = "0xD26724", VA = "0xD26724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xD2672C", Offset = "0xD2672C", VA = "0xD2672C", Slot = "16")]
		public override Grabbable GetRealGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xD26858", Offset = "0xD26858", VA = "0xD26858", Slot = "17")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xD26AF8", Offset = "0xD26AF8", VA = "0xD26AF8", Slot = "22")]
		protected virtual void FindImportantItem()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xD26FBC", Offset = "0xD26FBC", VA = "0xD26FBC")]
		private void OnItemUsed(ImportantItemUsedEvent e)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xD271B0", Offset = "0xD271B0", VA = "0xD271B0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xD272F4", Offset = "0xD272F4", VA = "0xD272F4")]
		private void SnapToPosition()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xD274E8", Offset = "0xD274E8", VA = "0xD274E8", Slot = "20")]
		public override bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xD27524", Offset = "0xD27524", VA = "0xD27524")]
		private bool RealObjectCanBeGrabbed()
		{
			return default(bool);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xD26940", Offset = "0xD26940", VA = "0xD26940")]
		public void SpawnItem()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xD275E0", Offset = "0xD275E0", VA = "0xD275E0")]
		public void OnGrabbableSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xD276BC", Offset = "0xD276BC", VA = "0xD276BC")]
		public void OnGrabbablePickedUp(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xD27834", Offset = "0xD27834", VA = "0xD27834")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xD27A18", Offset = "0xD27A18", VA = "0xD27A18")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xD27B24", Offset = "0xD27B24", VA = "0xD27B24", Slot = "23")]
		protected virtual void RemoveEventListeners()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xD26258", Offset = "0xD26258", VA = "0xD26258")]
		public bool HasConnectedItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xD27BCC", Offset = "0xD27BCC", VA = "0xD27BCC", Slot = "24")]
		public virtual void AssignConnectedItem(ImportantItem newItem)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xD27D84", Offset = "0xD27D84", VA = "0xD27D84", Slot = "18")]
		public override int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xD27D8C", Offset = "0xD27D8C", VA = "0xD27D8C")]
		public ImportantItemImpostor()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class ImportantItemsManager : MonoBehaviour
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ImportantItemsManager Instance;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ImportantItem> m_items;

		[Token(Token = "0x1700021C")]
		public static List<ImportantItem> Items
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0xD26EC0", Offset = "0xD26EC0", VA = "0xD26EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xD27D94", Offset = "0xD27D94", VA = "0xD27D94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xD262C8", Offset = "0xD262C8", VA = "0xD262C8")]
		public static void RegisterItem(ImportantItem item)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xD265AC", Offset = "0xD265AC", VA = "0xD265AC")]
		public static void DeregisterItem(ImportantItem item)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xD27E04", Offset = "0xD27E04", VA = "0xD27E04")]
		public ImportantItemsManager()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class AnimationUtils : MonoBehaviour
	{
		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC328", Offset = "0x9FC328")]
		private sealed class <MoveGrabbableAlongBezierCurve>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001556")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable grabbable;

			[Token(Token = "0x4001559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x400155A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x400155B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BezierCurve bezier;

			[Token(Token = "0x400155C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Rigidbody <rb>5__2;

			[Token(Token = "0x400155D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x400155E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <progress>5__4;

			[Token(Token = "0x400155F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <done>5__5;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001587")]
				[Address(RVA = "0x110502C", Offset = "0x110502C", VA = "0x110502C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001589")]
				[Address(RVA = "0x1105094", Offset = "0x1105094", VA = "0x1105094", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001584")]
			[Address(RVA = "0x110499C", Offset = "0x110499C", VA = "0x110499C")]
			[DebuggerHidden]
			public <MoveGrabbableAlongBezierCurve>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001585")]
			[Address(RVA = "0x1104D3C", Offset = "0x1104D3C", VA = "0x1104D3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001586")]
			[Address(RVA = "0x1104D40", Offset = "0x1104D40", VA = "0x1104D40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001588")]
			[Address(RVA = "0x1105034", Offset = "0x1105034", VA = "0x1105034", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC338", Offset = "0x9FC338")]
		private sealed class <RotateBackAndForth>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001561")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001562")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable grabbable;

			[Token(Token = "0x4001563")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float degrees;

			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform obj;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float duration;

			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float maxSpeed;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float speed;

			[Token(Token = "0x4001568")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <currentAngle>5__3;

			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <dir>5__4;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600158D")]
				[Address(RVA = "0x110541C", Offset = "0x110541C", VA = "0x110541C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600158F")]
				[Address(RVA = "0x1105484", Offset = "0x1105484", VA = "0x1105484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600158A")]
			[Address(RVA = "0x1104D04", Offset = "0x1104D04", VA = "0x1104D04")]
			[DebuggerHidden]
			public <RotateBackAndForth>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600158B")]
			[Address(RVA = "0x110509C", Offset = "0x110509C", VA = "0x110509C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600158C")]
			[Address(RVA = "0x11050A0", Offset = "0x11050A0", VA = "0x11050A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600158E")]
			[Address(RVA = "0x1105424", Offset = "0x1105424", VA = "0x1105424", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AnimationUtils Instance;

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x1104750", Offset = "0x1104750", VA = "0x1104750")]
		private void Awake()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x11047C0", Offset = "0x11047C0", VA = "0x11047C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x11047C8", Offset = "0x11047C8", VA = "0x11047C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x11047D0", Offset = "0x11047D0", VA = "0x11047D0")]
		public static void MoveGrabbableAlongCurve(Grabbable grabbable, BezierCurve bezier, float delay, float duration)
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x11048F0", Offset = "0x11048F0", VA = "0x11048F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA134D0", Offset = "0xA134D0")]
		private IEnumerator MoveGrabbableAlongBezierCurve(Grabbable grabbable, BezierCurve bezier, float delay, float duration)
		{
			return null;
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x11049C8", Offset = "0x11049C8", VA = "0x11049C8")]
		public static Coroutine RotateGrabbableBackAndForthAroundZ(Grabbable grabbable, float degrees, float duration, float speed)
		{
			return null;
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1104BC8", Offset = "0x1104BC8", VA = "0x1104BC8")]
		public static Coroutine RotateBackAndForthAroundZ(Transform obj, float degrees, float duration, float speed, float maxSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1104B04", Offset = "0x1104B04", VA = "0x1104B04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13534", Offset = "0xA13534")]
		private IEnumerator RotateBackAndForth(Transform obj, float degrees, float duration, float speed, float maxSpeed, [Optional] Grabbable grabbable)
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1104D30", Offset = "0x1104D30", VA = "0x1104D30")]
		public AnimationUtils()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class ConsoleCommand
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string command;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;
	}
	[Token(Token = "0x2000390")]
	public class DebugConsole : MonoBehaviour
	{
		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static DebugConsole Instance;

		[Token(Token = "0x17000221")]
		public static bool ConsoleEnabled
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xD6D308", Offset = "0xD6D308", VA = "0xD6D308")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xD6D310", Offset = "0xD6D310", VA = "0xD6D310")]
		public static void PrintMessage(string msg)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xD6D314", Offset = "0xD6D314", VA = "0xD6D314")]
		public DebugConsole()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class DebugInput
	{
		[Token(Token = "0x6001594")]
		[Address(RVA = "0xD6D320", Offset = "0xD6D320", VA = "0xD6D320")]
		public static bool GetKey(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xD6D388", Offset = "0xD6D388", VA = "0xD6D388")]
		public static bool GetKeyDown(KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xD6D3F0", Offset = "0xD6D3F0", VA = "0xD6D3F0")]
		public static bool GetLeftMouseButton()
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xD6D3FC", Offset = "0xD6D3FC", VA = "0xD6D3FC")]
		public static float GetMouseScrollDelta()
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000392")]
	public class DisableInLimitedBuild : MonoBehaviour
	{
		[Token(Token = "0x6001598")]
		[Address(RVA = "0xD6D418", Offset = "0xD6D418", VA = "0xD6D418")]
		public DisableInLimitedBuild()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public static class EasingUtils
	{
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float HALF_PI;

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xD6D420", Offset = "0xD6D420", VA = "0xD6D420")]
		public static float EaseInOutSine(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xD6D4B0", Offset = "0xD6D4B0", VA = "0xD6D4B0")]
		public static float EaseInSine(float t)
		{
			return default(float);
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xD6D560", Offset = "0xD6D560", VA = "0xD6D560")]
		public static float EaseOutSine(float t)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000394")]
	public interface IValidate
	{
	}
	[Token(Token = "0x2000395")]
	public interface IValidateCustom : IValidate
	{
	}
	[Token(Token = "0x2000396")]
	public class SetScaleOnInitialize : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Stashable m_stashable;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_scale;

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xD8B818", Offset = "0xD8B818", VA = "0xD8B818", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xD8B8B4", Offset = "0xD8B8B4", VA = "0xD8B8B4")]
		public SetScaleOnInitialize()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class SpawnPrefab : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference m_prefabToSpawn;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_onlySpawnOnce;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xD8C70C", Offset = "0xD8C70C", VA = "0xD8C70C", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xD8C820", Offset = "0xD8C820", VA = "0xD8C820")]
		public SpawnPrefab()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class AnimateMaterialEmissiveness : MonoBehaviour
	{
		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC348", Offset = "0x9FC348")]
		private sealed class <AnimateMaterial>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimateMaterialEmissiveness <>4__this;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <progress>5__3;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <curveDuration>5__4;

			[Token(Token = "0x17000222")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015AB")]
				[Address(RVA = "0x11028E8", Offset = "0x11028E8", VA = "0x11028E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000223")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015AD")]
				[Address(RVA = "0x1102950", Offset = "0x1102950", VA = "0x1102950", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x1102360", Offset = "0x1102360", VA = "0x1102360")]
			[DebuggerHidden]
			public <AnimateMaterial>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x11025E4", Offset = "0x11025E4", VA = "0x11025E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x11025E8", Offset = "0x11025E8", VA = "0x11025E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x11028F0", Offset = "0x11028F0", VA = "0x11028F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playOnEnable;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04290", Offset = "0xA04290")]
		[SerializeField]
		private Renderer rendererToAnimate;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA042DC", Offset = "0xA042DC")]
		[SerializeField]
		private int materialIndex;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04328", Offset = "0xA04328")]
		[SerializeField]
		private bool useEmissiveColor;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color emissiveColor;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private bool resetWhenDone;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MaterialPropertyBlock[] originalMpbs;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int DiffuseReductionId;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int ShadowReductionId;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int EmissiveColorId;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int EmissiveId;

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x11020DC", Offset = "0x11020DC", VA = "0x11020DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x11020EC", Offset = "0x11020EC", VA = "0x11020EC")]
		public void StartAnimation()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x11022E4", Offset = "0x11022E4", VA = "0x11022E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13638", Offset = "0xA13638")]
		private IEnumerator AnimateMaterial()
		{
			return null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x110238C", Offset = "0x110238C", VA = "0x110238C")]
		private void ApplyPropertyBlock(ref MaterialPropertyBlock propBlock)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x1102424", Offset = "0x1102424", VA = "0x1102424")]
		private void ResetAllPropertyBlocks()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x11024B0", Offset = "0x11024B0", VA = "0x11024B0")]
		public AnimateMaterialEmissiveness()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class AnimateScale : MonoBehaviour
	{
		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC358", Offset = "0x9FC358")]
		private sealed class <Animate>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400158E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400158F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimateScale <>4__this;

			[Token(Token = "0x4001591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x4001592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <progress>5__3;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015B5")]
				[Address(RVA = "0x1102D54", Offset = "0x1102D54", VA = "0x1102D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015B7")]
				[Address(RVA = "0x1102DBC", Offset = "0x1102DBC", VA = "0x1102DBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x1102A78", Offset = "0x1102A78", VA = "0x1102A78")]
			[DebuggerHidden]
			public <Animate>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x1102B34", Offset = "0x1102B34", VA = "0x1102B34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x1102B38", Offset = "0x1102B38", VA = "0x1102B38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x1102D5C", Offset = "0x1102D5C", VA = "0x1102D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve scaleCurveX;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve scaleCurveY;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve scaleCurveZ;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 startScale;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 targetScale;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool isAnimating;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x1102958", Offset = "0x1102958", VA = "0x1102958")]
		public void SetInitialScale()
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x1102990", Offset = "0x1102990", VA = "0x1102990")]
		public void TriggerAnimation()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x11029FC", Offset = "0x11029FC", VA = "0x11029FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA136EC", Offset = "0xA136EC")]
		private IEnumerator Animate()
		{
			return null;
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x1102AA4", Offset = "0x1102AA4", VA = "0x1102AA4")]
		public AnimateScale()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class PlatformGlow : MonoBehaviour
	{
		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer platformGlowRenderer;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int materialIndex;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MaterialPropertyBlock mpb;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool HasPropertyBlock;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int minId;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int maxId;

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xD9493C", Offset = "0xD9493C", VA = "0xD9493C")]
		public void SetEmissive(bool emissive)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xD94950", Offset = "0xD94950", VA = "0xD94950")]
		public void SetEmissiveness(float amount)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xD94ACC", Offset = "0xD94ACC", VA = "0xD94ACC")]
		public PlatformGlow()
		{
		}
	}
}
namespace NeatCorp.LOD
{
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC368", Offset = "0x9FC368")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9FC368", Offset = "0x9FC368")]
	public class LODData : ScriptableObject
	{
		[Token(Token = "0x4001599")]
		public const int MaxLOD = 7;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer[] lod0;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer[] lod1;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer[] lod2;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer[] lod3;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer[] lod4;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Renderer[] lod5;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Renderer[] lod6;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Renderer[] lod7;

		[Token(Token = "0x17000226")]
		public Renderer[] Item
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xD31AB8", Offset = "0xD31AB8", VA = "0xD31AB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xD31B1C", Offset = "0xD31B1C", VA = "0xD31B1C")]
			set
			{
			}
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xD31B9C", Offset = "0xD31B9C", VA = "0xD31B9C")]
		public LODData()
		{
		}
	}
}
namespace NeatCorp.Attributes
{
	[Token(Token = "0x200039E")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x1105584", Offset = "0x1105584", VA = "0x1105584")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class BeginReadOnlyGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1105574", Offset = "0x1105574", VA = "0x1105574")]
		public BeginReadOnlyGroupAttribute()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class EndReadOnlyGroupAttribute : PropertyAttribute
	{
		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x110557C", Offset = "0x110557C", VA = "0x110557C")]
		public EndReadOnlyGroupAttribute()
		{
		}
	}
}
namespace NeatCorp.Settings
{
	[Token(Token = "0x20003A1")]
	public class GameSettings
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool useLeftHandedButtonMapping;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		private bool useSmoothLocomotion;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int movementSpeed;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool acceleration;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int turningSpeed;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int language;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int indexControllerGrabMode;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int height;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int DEFAULT_TURNING_SPEED_INDEX;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int DEFAULT_MOVEMENT_SPEED_INDEX;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float ACCELERATION;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static float SNAPTURN;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] RotationSpeedIntervals;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float[] MovementSpeedIntervals;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameSettingId, GameSettingEntry> settings;

		[Token(Token = "0x17000227")]
		public bool UseLeftHandedButtonMapping
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xD8B97C", Offset = "0xD8B97C", VA = "0xD8B97C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000228")]
		public bool UseFreeLocomotion
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xD8B9E4", Offset = "0xD8B9E4", VA = "0xD8B9E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000229")]
		public bool UseSnapTurning
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xD8BA4C", Offset = "0xD8BA4C", VA = "0xD8BA4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700022A")]
		public float Acceleration
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xD8BB0C", Offset = "0xD8BB0C", VA = "0xD8BB0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xD8BBAC", Offset = "0xD8BBAC", VA = "0xD8BBAC")]
		public float GetRotationSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xD8BCFC", Offset = "0xD8BCFC", VA = "0xD8BCFC")]
		public float GetMovementSpeed()
		{
			return default(float);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xD8BE4C", Offset = "0xD8BE4C", VA = "0xD8BE4C")]
		public void InitSettings()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xD8C1E4", Offset = "0xD8C1E4", VA = "0xD8C1E4")]
		public void SaveSettings()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xD8C330", Offset = "0xD8C330", VA = "0xD8C330")]
		public bool GetOnOffSetting(GameSettingId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xD8C3A4", Offset = "0xD8C3A4", VA = "0xD8C3A4")]
		public void ChangeOnOffSetting(GameSettingId id, bool value)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xD8C464", Offset = "0xD8C464", VA = "0xD8C464")]
		public int GetIntervalSetting(GameSettingId id)
		{
			return default(int);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xD8C4D8", Offset = "0xD8C4D8", VA = "0xD8C4D8")]
		public void ChangeIntervalSetting(GameSettingId id, int value)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xD8C550", Offset = "0xD8C550", VA = "0xD8C550")]
		public GameSettings()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class GameSettingEntry
	{
		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameSettingId id;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool boolValue;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int intValue;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xD8B92C", Offset = "0xD8B92C", VA = "0xD8B92C")]
		public GameSettingEntry(GameSettingId id, bool boolValue = false, int intValue = 0)
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public enum GameSettingId
	{
		[Token(Token = "0x40015B5")]
		LeftHandMode,
		[Token(Token = "0x40015B6")]
		SmoothLocomotion,
		[Token(Token = "0x40015B7")]
		Acceleration,
		[Token(Token = "0x40015B8")]
		MovementSpeed,
		[Token(Token = "0x40015B9")]
		TurningSpeed,
		[Token(Token = "0x40015BA")]
		Language,
		[Token(Token = "0x40015BB")]
		IndexControllerGrabMode,
		[Token(Token = "0x40015BC")]
		HeightAdjustment,
		[Token(Token = "0x40015BD")]
		Undefined
	}
}
namespace NeatCorp.Quest.Boat
{
	[Token(Token = "0x20003A4")]
	public class DispatchBoatQuestEvent : MonoBehaviour
	{
		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoatQuestEventType m_type;

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xD80BB8", Offset = "0xD80BB8", VA = "0xD80BB8")]
		public void Dispatch()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xD80C90", Offset = "0xD80C90", VA = "0xD80C90")]
		public DispatchBoatQuestEvent()
		{
		}
	}
}
namespace NeatCorp.Puzzles
{
	[Serializable]
	[Token(Token = "0x20003A5")]
	public class GemAltartSlotState : ComponentState
	{
		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasShard;

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xD78870", Offset = "0xD78870", VA = "0xD78870")]
		public GemAltartSlotState(bool hasShard)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class GemAltarSlot : SaveableComponent, IInitializable
	{
		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GemType m_gemType;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_slotIndex;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_shardObject;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_shardPreVis;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_hasShard;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_shardTransform;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GloveGem m_gemShard;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action<int, bool> m_onSlotInitialized;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action<int> m_onStartCrystalPlacement;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<int> m_onFinishedCrystalPlacement;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasPlacedShard;

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xDA6704", Offset = "0xDA6704", VA = "0xDA6704")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xDA680C", Offset = "0xDA680C", VA = "0xDA680C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xDA6914", Offset = "0xDA6914", VA = "0xDA6914", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xDA6A38", Offset = "0xDA6A38", VA = "0xDA6A38", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xD9FF44", Offset = "0xD9FF44", VA = "0xD9FF44")]
		public void RegisterCallbacks(Action<int, bool> onSlotInitialized, Action<int> onStartCrystalPlacement, Action<int> onFinishedCrystalPlacement)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xDA6AA0", Offset = "0xDA6AA0", VA = "0xDA6AA0")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xDA6C20", Offset = "0xDA6C20", VA = "0xDA6C20")]
		private void OnGemGrabbed(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xDA6C68", Offset = "0xDA6C68", VA = "0xDA6C68")]
		private void OnGemDropped(GemDroppedEvent e)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xDA6AB0", Offset = "0xDA6AB0", VA = "0xDA6AB0")]
		private void TryAddShard(Collider other)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xDA6E10", Offset = "0xDA6E10", VA = "0xDA6E10")]
		private void OnInfusionCompleted(GemType gemType)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xDA69D8", Offset = "0xDA69D8", VA = "0xDA69D8")]
		private void SetShardActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xDA6FC0", Offset = "0xDA6FC0", VA = "0xDA6FC0")]
		public GemAltarSlot()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class CraftingMachineBeacon : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC3F8", Offset = "0x9FC3F8")]
		private sealed class <AnimateDeactivation>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CraftingMachineBeacon <>4__this;

			[Token(Token = "0x40015D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <originalYScale>5__2;

			[Token(Token = "0x40015D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015E9")]
				[Address(RVA = "0xDA644C", Offset = "0xDA644C", VA = "0xDA644C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015EB")]
				[Address(RVA = "0xDA64B4", Offset = "0xDA64B4", VA = "0xDA64B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xDA6148", Offset = "0xDA6148", VA = "0xDA6148")]
			[DebuggerHidden]
			public <AnimateDeactivation>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60015E7")]
			[Address(RVA = "0xDA61A8", Offset = "0xDA61A8", VA = "0xDA61A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015E8")]
			[Address(RVA = "0xDA61AC", Offset = "0xDA61AC", VA = "0xDA61AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015EA")]
			[Address(RVA = "0xDA6454", Offset = "0xDA6454", VA = "0xDA6454", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC408", Offset = "0x9FC408")]
		private sealed class <RemoveAfterDelay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CraftingMachineBeacon <>4__this;

			[Token(Token = "0x40015D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x1700022D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015EF")]
				[Address(RVA = "0xDA6694", Offset = "0xDA6694", VA = "0xDA6694", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015F1")]
				[Address(RVA = "0xDA66FC", Offset = "0xDA66FC", VA = "0xDA66FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015EC")]
			[Address(RVA = "0xDA6174", Offset = "0xDA6174", VA = "0xDA6174")]
			[DebuggerHidden]
			public <RemoveAfterDelay>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60015ED")]
			[Address(RVA = "0xDA64BC", Offset = "0xDA64BC", VA = "0xDA64BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015EE")]
			[Address(RVA = "0xDA64C0", Offset = "0xDA64C0", VA = "0xDA64C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015F0")]
			[Address(RVA = "0xDA669C", Offset = "0xDA669C", VA = "0xDA669C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_beaconEffect;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_deactivationEffect;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_initialized;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_deactivated;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool m_didSendEvent;

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xDA5AE8", Offset = "0xDA5AE8", VA = "0xDA5AE8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xDA5BD0", Offset = "0xDA5BD0", VA = "0xDA5BD0", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xDA5D4C", Offset = "0xDA5D4C", VA = "0xDA5D4C")]
		public void Update()
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xDA60CC", Offset = "0xDA60CC", VA = "0xDA60CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA137A0", Offset = "0xA137A0")]
		private IEnumerator AnimateDeactivation()
		{
			return null;
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xDA5CC0", Offset = "0xDA5CC0", VA = "0xDA5CC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13804", Offset = "0xA13804")]
		private IEnumerator RemoveAfterDelay(float delay)
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xDA61A0", Offset = "0xDA61A0", VA = "0xDA61A0")]
		public CraftingMachineBeacon()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class CraftingMachineBeaconState : ComponentState
	{
		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_shouldBeActive;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_shouldBeRemoved;

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xDA5B8C", Offset = "0xDA5B8C", VA = "0xDA5B8C")]
		public CraftingMachineBeaconState(bool active, bool toBeRemoved)
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class HomelandAltar : MonoBehaviour
	{
		[Token(Token = "0x20003AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC418", Offset = "0x9FC418")]
		private sealed class <SendEventAfterDelay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomelandAltar <>4__this;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001601")]
				[Address(RVA = "0xD798BC", Offset = "0xD798BC", VA = "0xD798BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001603")]
				[Address(RVA = "0xD79924", Offset = "0xD79924", VA = "0xD79924", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xD78F04", Offset = "0xD78F04", VA = "0xD78F04")]
			[DebuggerHidden]
			public <SendEventAfterDelay>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xD797B4", Offset = "0xD797B4", VA = "0xD797B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001600")]
			[Address(RVA = "0xD797B8", Offset = "0xD797B8", VA = "0xD797B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001602")]
			[Address(RVA = "0xD798C4", Offset = "0xD798C4", VA = "0xD798C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC428", Offset = "0x9FC428")]
		private sealed class <AnimateCrystal>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomelandAltar <>4__this;

			[Token(Token = "0x40015ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40015EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x40015EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startRotY>5__4;

			[Token(Token = "0x40015F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <startPos>5__5;

			[Token(Token = "0x40015F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <distanceY>5__6;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001607")]
				[Address(RVA = "0xD79744", Offset = "0xD79744", VA = "0xD79744", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001609")]
				[Address(RVA = "0xD797AC", Offset = "0xD797AC", VA = "0xD797AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001604")]
			[Address(RVA = "0xD78F30", Offset = "0xD78F30", VA = "0xD78F30")]
			[DebuggerHidden]
			public <AnimateCrystal>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001605")]
			[Address(RVA = "0xD79468", Offset = "0xD79468", VA = "0xD79468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001606")]
			[Address(RVA = "0xD7946C", Offset = "0xD7946C", VA = "0xD7946C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001608")]
			[Address(RVA = "0xD7974C", Offset = "0xD7974C", VA = "0xD7974C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC438", Offset = "0x9FC438")]
		private sealed class <AnimateAltarGlow>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomelandAltar <>4__this;

			[Token(Token = "0x40015F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x40015F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <dir>5__3;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600160D")]
				[Address(RVA = "0xD793F8", Offset = "0xD793F8", VA = "0xD793F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600160F")]
				[Address(RVA = "0xD79460", Offset = "0xD79460", VA = "0xD79460", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600160A")]
			[Address(RVA = "0xD79030", Offset = "0xD79030", VA = "0xD79030")]
			[DebuggerHidden]
			public <AnimateAltarGlow>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600160B")]
			[Address(RVA = "0xD79120", Offset = "0xD79120", VA = "0xD79120", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600160C")]
			[Address(RVA = "0xD79124", Offset = "0xD79124", VA = "0xD79124", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600160E")]
			[Address(RVA = "0xD79400", Offset = "0xD79400", VA = "0xD79400", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GemAltarSlot[] m_gemSlots;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformGlow[] m_altarGlowSlots;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_gemToAnimate;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SendQuestEvent m_sendOnCompletion;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_delayBeforeSecondLaser;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SendQuestEvent m_sendAfterDelay;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject[] m_fires;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_altarGlowPulseDuration;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem m_altarGlowParticles;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_crystalsPlaced;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_altarGlowRoutine;

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xD788A0", Offset = "0xD788A0", VA = "0xD788A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xD78A4C", Offset = "0xD78A4C", VA = "0xD78A4C")]
		private void OnSlotInitialized(int slotIndex, bool hasCrystal)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xD78DD4", Offset = "0xD78DD4", VA = "0xD78DD4")]
		private void OnStartCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xD78DD8", Offset = "0xD78DD8", VA = "0xD78DD8")]
		private void OnFinishedCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xD78A88", Offset = "0xD78A88", VA = "0xD78A88")]
		private void LightUpAltarSlot(int index)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xD78BD0", Offset = "0xD78BD0", VA = "0xD78BD0")]
		private void CheckPuzzleCompletion(bool checkFromSaveState = false)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xD78E88", Offset = "0xD78E88", VA = "0xD78E88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13908", Offset = "0xA13908")]
		private IEnumerator SendEventAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xD78E0C", Offset = "0xD78E0C", VA = "0xD78E0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1396C", Offset = "0xA1396C")]
		private IEnumerator AnimateCrystal()
		{
			return null;
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xD78F5C", Offset = "0xD78F5C", VA = "0xD78F5C")]
		public void StartAltarGlow()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xD78FB4", Offset = "0xD78FB4", VA = "0xD78FB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA139D0", Offset = "0xA139D0")]
		private IEnumerator AnimateAltarGlow()
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xD7905C", Offset = "0xD7905C", VA = "0xD7905C")]
		public HomelandAltar()
		{
		}
	}
}
namespace NeatCorp.Puzzles.Resonation
{
	[Token(Token = "0x20003AF")]
	public struct EmissiveResonationMaterialData
	{
		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045C4", Offset = "0xA045C4")]
		private Coroutine <PlatformMaterialAnimationRoutine>k__BackingField;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045D4", Offset = "0xA045D4")]
		private float <CurrentMinVal>k__BackingField;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045E4", Offset = "0xA045E4")]
		private float <CurrentMaxVal>k__BackingField;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA045F4", Offset = "0xA045F4")]
		private EmissiveResonationMaterialState <State>k__BackingField;

		[Token(Token = "0x17000235")]
		public Coroutine PlatformMaterialAnimationRoutine
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0xAD74C0", Offset = "0xAD74C0", VA = "0xAD74C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B24", Offset = "0xA13B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xAD74C8", Offset = "0xAD74C8", VA = "0xAD74C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B34", Offset = "0xA13B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public float CurrentMinVal
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xAD74D0", Offset = "0xAD74D0", VA = "0xAD74D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B44", Offset = "0xA13B44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001613")]
			[Address(RVA = "0xAD74D8", Offset = "0xAD74D8", VA = "0xAD74D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B54", Offset = "0xA13B54")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public float CurrentMaxVal
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xAD74E0", Offset = "0xAD74E0", VA = "0xAD74E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B64", Offset = "0xA13B64")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xAD74E8", Offset = "0xAD74E8", VA = "0xAD74E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B74", Offset = "0xA13B74")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public EmissiveResonationMaterialState State
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xAD74F0", Offset = "0xAD74F0", VA = "0xAD74F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B84", Offset = "0xA13B84")]
			get
			{
				return default(EmissiveResonationMaterialState);
			}
			[Token(Token = "0x6001617")]
			[Address(RVA = "0xAD74F8", Offset = "0xAD74F8", VA = "0xAD74F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13B94", Offset = "0xA13B94")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20003B0")]
	public enum EmissiveResonationMaterialState
	{
		[Token(Token = "0x40015FC")]
		Unlit,
		[Token(Token = "0x40015FD")]
		LightingUp,
		[Token(Token = "0x40015FE")]
		Lit,
		[Token(Token = "0x40015FF")]
		ShuttingDown
	}
	[Token(Token = "0x20003B1")]
	public class GodAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResonationPuzzle m_resonationPuzzle;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SphereCollider m_godReactionToPlayerCollider;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue reactToPlayerCue;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue waveCue;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue summonFlowerCue;

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xD7996C", Offset = "0xD7996C", VA = "0xD7996C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xD79A9C", Offset = "0xD79A9C", VA = "0xD79A9C")]
		public void EnablePlayerInteraction()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xD79ABC", Offset = "0xD79ABC", VA = "0xD79ABC")]
		public void SummonFlower()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xD79AF4", Offset = "0xD79AF4", VA = "0xD79AF4")]
		public void RaiseArms()
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xD79BC8", Offset = "0xD79BC8", VA = "0xD79BC8")]
		public void Wave()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xD79C9C", Offset = "0xD79C9C", VA = "0xD79C9C")]
		public void ReactToPlayer()
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xD79D70", Offset = "0xD79D70", VA = "0xD79D70")]
		public void TriggerSoilModifiers()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xD79DF8", Offset = "0xD79DF8", VA = "0xD79DF8")]
		public void SpawnGrabbableCrystal()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xD79E80", Offset = "0xD79E80", VA = "0xD79E80")]
		public void DisableGod()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xD79EA8", Offset = "0xD79EA8", VA = "0xD79EA8")]
		public GodAnimation()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class LaserSocket : MonoBehaviour
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_emissiveCrystal;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_beamConnectedParticle;

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xD79EB0", Offset = "0xD79EB0", VA = "0xD79EB0")]
		public void SetSolved(bool shouldBeSolved, bool showParticle)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xD79EF8", Offset = "0xD79EF8", VA = "0xD79EF8")]
		public void StopEffect()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xD79F68", Offset = "0xD79F68", VA = "0xD79F68")]
		public LaserSocket()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class ResonanceSystem : MonoBehaviour
	{
		[Token(Token = "0x4001608")]
		private const int PentatonicNotesNum = 5;

		[Token(Token = "0x4001609")]
		private const int MaxVerticalResolution = 10;

		[Token(Token = "0x400160A")]
		private const int MaxHorizontalResolution = 5;

		[Token(Token = "0x400160B")]
		private const float SnapDistance = 0.25f;

		[Token(Token = "0x400160C")]
		private const float PentatonicNotePitchStep = 0.0016666667f;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA04684", Offset = "0xA04684")]
		private float m_radius;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA046C4", Offset = "0xA046C4")]
		[SerializeField]
		private int m_verticalResolution;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA04704", Offset = "0xA04704")]
		private int m_horizontalResolution;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_verticalThreshold;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector2 m_current2DResonation;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_crystalHeight;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_updateInterval;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] m_pedestalSockets;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_facingTarget;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_updateDuration;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_isHoldingPedestal;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OptimizedCollection<CrystalPedestal> m_heldPedestals;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_callbackIndex;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<int, Vector3, TwoDimensionalResonance> m_pitchChangeCallback;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Action<int> m_resonanceSystemEmptyCallback;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<ResonatorSystemPosition> m_harmonizedResonatorPositions;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_sqrRadius;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047A4", Offset = "0xA047A4")]
		private Vector3 <FacingDirection>k__BackingField;

		[Token(Token = "0x17000239")]
		public float Radius
		{
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xD79F70", Offset = "0xD79F70", VA = "0xD79F70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023A")]
		public Vector3 CrystalPosition
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xD79F78", Offset = "0xD79F78", VA = "0xD79F78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700023B")]
		private Vector3 FacingDirection
		{
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xD7A024", Offset = "0xD7A024", VA = "0xD7A024")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13BA4", Offset = "0xA13BA4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xD7A030", Offset = "0xD7A030", VA = "0xD7A030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13BB4", Offset = "0xA13BB4")]
			set
			{
			}
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xD7A03C", Offset = "0xD7A03C", VA = "0xD7A03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xD7A178", Offset = "0xD7A178", VA = "0xD7A178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xD7A3A0", Offset = "0xD7A3A0", VA = "0xD7A3A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xD7A5C8", Offset = "0xD7A5C8", VA = "0xD7A5C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xD7A618", Offset = "0xD7A618", VA = "0xD7A618")]
		private void UpdateSnapping()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xD7AA80", Offset = "0xD7AA80", VA = "0xD7AA80")]
		private void UpdateSystemPositions()
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xD7B08C", Offset = "0xD7B08C", VA = "0xD7B08C")]
		public void RegisterPitchChangeCallback(int callbackIndex, Action<int, Vector3, TwoDimensionalResonance> pollAction, Action<int> stopAction)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xD7B0C8", Offset = "0xD7B0C8", VA = "0xD7B0C8")]
		private void UpdateResonation(InstrumentResonator resonator)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xD7B2E4", Offset = "0xD7B2E4", VA = "0xD7B2E4")]
		private void TryRemoveResonator(InstrumentResonator resonator)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xD7A6B8", Offset = "0xD7A6B8", VA = "0xD7A6B8")]
		private void TrySnapToSocket(CrystalPedestal pedestal)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xD7B59C", Offset = "0xD7B59C", VA = "0xD7B59C")]
		private void OnPedestalDropped(PedestalDroppedEvent e)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xD7B710", Offset = "0xD7B710", VA = "0xD7B710")]
		private void OnPedestalGrabbed(PedestalGrabbedEvent e)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xD7B87C", Offset = "0xD7B87C", VA = "0xD7B87C")]
		private void AddHeldPedestal(CrystalPedestal pedestal)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xD7B69C", Offset = "0xD7B69C", VA = "0xD7B69C")]
		private void RemoveHeldPedestal(CrystalPedestal pedestal)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xD7B8F4", Offset = "0xD7B8F4", VA = "0xD7B8F4")]
		private void OnPedestalStashed(PedestalStashedEvent e)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xD7BA4C", Offset = "0xD7BA4C", VA = "0xD7BA4C")]
		private void OnPedestalResonated(ResonatedEvent e)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xD7BB38", Offset = "0xD7BB38", VA = "0xD7BB38")]
		private void OnPedestalDeresonated(DeresonatedEvent e)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xD7B3C4", Offset = "0xD7B3C4", VA = "0xD7B3C4")]
		private bool TryGetSystemPositionFromResonator(InstrumentResonator resonator, out ResonatorSystemPosition systemPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xD7ABFC", Offset = "0xD7ABFC", VA = "0xD7ABFC")]
		private bool UpdateResonatorPosition(ResonatorSystemPosition systemPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xD7ADE8", Offset = "0xD7ADE8", VA = "0xD7ADE8")]
		private void InvokeSystemCallback(ResonatorSystemPosition systemPosition, bool doProximityCheck)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xD7BEC0", Offset = "0xD7BEC0", VA = "0xD7BEC0")]
		public void SetNearestResonatorPitch(float pitch)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xD7B538", Offset = "0xD7B538", VA = "0xD7B538")]
		private void InvokeResonanceSystemEmpty()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xD7AC04", Offset = "0xD7AC04", VA = "0xD7AC04")]
		private bool TryGetClosestPositionInCollection(ResonatorSystemPosition[] positions, out ResonatorSystemPosition closestPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xD7BF10", Offset = "0xD7BF10", VA = "0xD7BF10")]
		private bool TryGetClosestHarmonizedResonatorPosition(out ResonatorSystemPosition closestPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xD7BD08", Offset = "0xD7BD08", VA = "0xD7BD08")]
		private bool IsClosest(ResonatorSystemPosition resonatorSystemPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xD7BF84", Offset = "0xD7BF84", VA = "0xD7BF84")]
		private float GetPitchOffsetFromPlacement(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xD7C220", Offset = "0xD7C220", VA = "0xD7C220")]
		public ResonanceSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003B4")]
	public struct ResonanceSystemData
	{
		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResonanceSystem ResonanceSystem;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TwoDimensionalResonance Resonance2d;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA047B4", Offset = "0xA047B4")]
		private float <DistanceToCrystal>k__BackingField;
	}
	[Token(Token = "0x20003B5")]
	public class ResonationPuzzle : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC448", Offset = "0x9FC448")]
		private sealed class <MaterialPropertyAnimation>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400164E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400164F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x4001651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startMinProperty;

			[Token(Token = "0x4001652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startMaxProperty;

			[Token(Token = "0x4001653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float target;

			[Token(Token = "0x4001654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int rendererIndex;

			[Token(Token = "0x4001655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateEmissiveResonationMaterialData;

			[Token(Token = "0x4001656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <firstProperty>5__2;

			[Token(Token = "0x4001657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <secondProperty>5__3;

			[Token(Token = "0x4001658")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <firstPropertyId>5__4;

			[Token(Token = "0x4001659")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <secondPropertyId>5__5;

			[Token(Token = "0x400165A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <change>5__6;

			[Token(Token = "0x400165B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__7;

			[Token(Token = "0x1700023C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001676")]
				[Address(RVA = "0xD7F398", Offset = "0xD7F398", VA = "0xD7F398", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001678")]
				[Address(RVA = "0xD7F400", Offset = "0xD7F400", VA = "0xD7F400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001673")]
			[Address(RVA = "0xD7E8B4", Offset = "0xD7E8B4", VA = "0xD7E8B4")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6001674")]
			[Address(RVA = "0xD7EFE0", Offset = "0xD7EFE0", VA = "0xD7EFE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001675")]
			[Address(RVA = "0xD7EFE4", Offset = "0xD7EFE4", VA = "0xD7EFE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001677")]
			[Address(RVA = "0xD7F3A0", Offset = "0xD7F3A0", VA = "0xD7F3A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC458", Offset = "0x9FC458")]
		private sealed class <MaterialPropertyAnimation>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400165C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400165D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400165E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x400165F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int rendererIndex;

			[Token(Token = "0x4001660")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float target;

			[Token(Token = "0x1700023E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600167C")]
				[Address(RVA = "0xD7F4B0", Offset = "0xD7F4B0", VA = "0xD7F4B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600167E")]
				[Address(RVA = "0xD7F518", Offset = "0xD7F518", VA = "0xD7F518", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001679")]
			[Address(RVA = "0xD7E8E0", Offset = "0xD7E8E0", VA = "0xD7E8E0")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x600167A")]
			[Address(RVA = "0xD7F408", Offset = "0xD7F408", VA = "0xD7F408", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600167B")]
			[Address(RVA = "0xD7F40C", Offset = "0xD7F40C", VA = "0xD7F40C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600167D")]
			[Address(RVA = "0xD7F4B8", Offset = "0xD7F4B8", VA = "0xD7F4B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC468", Offset = "0x9FC468")]
		private sealed class <StatueAnimationRoutine>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x17000240")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001682")]
				[Address(RVA = "0xD7F730", Offset = "0xD7F730", VA = "0xD7F730", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000241")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001684")]
				[Address(RVA = "0xD7F798", Offset = "0xD7F798", VA = "0xD7F798", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600167F")]
			[Address(RVA = "0xD7E90C", Offset = "0xD7E90C", VA = "0xD7E90C")]
			[DebuggerHidden]
			public <StatueAnimationRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6001680")]
			[Address(RVA = "0xD7F520", Offset = "0xD7F520", VA = "0xD7F520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001681")]
			[Address(RVA = "0xD7F524", Offset = "0xD7F524", VA = "0xD7F524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001683")]
			[Address(RVA = "0xD7F738", Offset = "0xD7F738", VA = "0xD7F738", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC478", Offset = "0x9FC478")]
		private sealed class <FadeByDistance>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001664")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001665")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001666")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationPuzzle <>4__this;

			[Token(Token = "0x4001667")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startVol>5__2;

			[Token(Token = "0x17000242")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001688")]
				[Address(RVA = "0xD7EF70", Offset = "0xD7EF70", VA = "0xD7EF70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000243")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600168A")]
				[Address(RVA = "0xD7EFD8", Offset = "0xD7EFD8", VA = "0xD7EFD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001685")]
			[Address(RVA = "0xD7E9F0", Offset = "0xD7E9F0", VA = "0xD7E9F0")]
			[DebuggerHidden]
			public <FadeByDistance>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x6001686")]
			[Address(RVA = "0xD7ECFC", Offset = "0xD7ECFC", VA = "0xD7ECFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001687")]
			[Address(RVA = "0xD7ED00", Offset = "0xD7ED00", VA = "0xD7ED00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001689")]
			[Address(RVA = "0xD7EF78", Offset = "0xD7EF78", VA = "0xD7EF78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001622")]
		private const int DefaultSystemsNum = 3;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int rayLengthId;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int correctnessId;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int minId;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int maxId;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int LookingAroundLoopId;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ResonanceSystemData[] m_resonanceSystemData;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA047D4", Offset = "0xA047D4")]
		private int m_tempoResolution;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LaserSocket[] m_laserSockets;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04824", Offset = "0xA04824")]
		[SerializeField]
		private AnimationCurve m_rayLengthCurve;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_rayCylinderPrefab;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_statueTransformationParticles;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04890", Offset = "0xA04890")]
		[SerializeField]
		private AudioSource godTransformSound;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioMusicalPitch[] m_godSounds;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioMusicalPitch[] m_platformSounds;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioPlayer[] m_solveSounds;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource finishedMusicPlayer;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioPlayer finishedChoirHarp;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer solveSound;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioSource m_poolSound;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0494C", Offset = "0xA0494C")]
		private GameObject m_godStatueObject;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GameObject m_godObject;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Animator m_godAnimator;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Animator m_statueAnimator;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject m_flowerObject;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GodFlower m_godFlower;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Renderer[] m_platformRenderers;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform[] m_beamCylinders;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private OptimizedCollection<int> m_correctSystems;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int[] m_godPitches;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int[] m_systemPitches;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float[] m_systemTempos;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_horizontalStep;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_isRegistered;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool m_isSolved;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool m_firstSolveSound;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private MaterialPropertyBlock[] m_beamMaterialPropertyBlocks;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Renderer[] m_beamRenderers;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private MaterialPropertyBlock m_currentEmissiveMaterialPropertyBlock;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool m_initialized;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ResonationPuzzleState m_currentState;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Coroutine m_statueAnimationRoutine;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private EmissiveResonationMaterialData[] m_emissiveResonationMaterialData;

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xD7C350", Offset = "0xD7C350", VA = "0xD7C350")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xD7C968", Offset = "0xD7C968", VA = "0xD7C968")]
		private void Start()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xD7CA10", Offset = "0xD7CA10", VA = "0xD7CA10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xD7CB10", Offset = "0xD7CB10", VA = "0xD7CB10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xD7CDD4", Offset = "0xD7CDD4", VA = "0xD7CDD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xD7CDDC", Offset = "0xD7CDDC", VA = "0xD7CDDC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xD7CEA8", Offset = "0xD7CEA8", VA = "0xD7CEA8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xD7CF34", Offset = "0xD7CF34", VA = "0xD7CF34", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xD7D060", Offset = "0xD7D060", VA = "0xD7D060", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xD7CA18", Offset = "0xD7CA18", VA = "0xD7CA18")]
		private void SetEmmissivePlatformMaterial(float val)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xD7D348", Offset = "0xD7D348", VA = "0xD7D348")]
		private void SetPropertyBlockForAll()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xD7D3D0", Offset = "0xD7D3D0", VA = "0xD7D3D0")]
		private void SetPropertyBlockForRenderer(int rendererIndex)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xD7D180", Offset = "0xD7D180", VA = "0xD7D180")]
		private void TryActivateFlower()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xD7D234", Offset = "0xD7D234", VA = "0xD7D234")]
		private void ResolveSystemFromState()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xD7C3E8", Offset = "0xD7C3E8", VA = "0xD7C3E8")]
		private void RoundSystemResonations()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xD7CB24", Offset = "0xD7CB24", VA = "0xD7CB24")]
		private void SetAudioActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xD7C500", Offset = "0xD7C500", VA = "0xD7C500")]
		private void RegisterWithResonationSystems()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xD7C658", Offset = "0xD7C658", VA = "0xD7C658")]
		private void CreateRayCylinders()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xD7D420", Offset = "0xD7D420", VA = "0xD7D420")]
		private float GetPitchOffset(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
			return default(float);
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xD7DC08", Offset = "0xD7DC08", VA = "0xD7DC08")]
		public void SetRayOrigin(int index, Vector3 origin)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xD7DC4C", Offset = "0xD7DC4C", VA = "0xD7DC4C")]
		private void StopResonanceSystem(int index)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xD7D694", Offset = "0xD7D694", VA = "0xD7D694")]
		private void SetRayCylinderProperties(int index, Vector3 pos, float correctness)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xD7DD28", Offset = "0xD7DD28", VA = "0xD7DD28")]
		private void CheckPuzzleCombinationFromAudioEvent(int index, bool setInactive = false)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xD7D9F8", Offset = "0xD7D9F8", VA = "0xD7D9F8")]
		private void CheckPuzzleCombination(int index, float correctness, bool setInactive = false)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xD7DFC4", Offset = "0xD7DFC4", VA = "0xD7DFC4")]
		private void StartPlatformMaterialAnimationRoutine(int index, float target)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xD7E4B4", Offset = "0xD7E4B4", VA = "0xD7E4B4")]
		public void RouteNoteOn(ReactionalTimeline timeline, double beat, int sink, int output, int instrument, int voice, float pitch, float velocity)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xD7E220", Offset = "0xD7E220", VA = "0xD7E220")]
		public void PlaySolveSound()
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xD7E080", Offset = "0xD7E080", VA = "0xD7E080")]
		public void PartSolveSound(int index)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xD7D948", Offset = "0xD7D948", VA = "0xD7D948")]
		public void UpdatePlatformSound(int platform, float x, float y, bool active)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xD7DCCC", Offset = "0xD7DCCC", VA = "0xD7DCCC")]
		public void StopPlatformSound(int platform)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xD7E1C8", Offset = "0xD7E1C8", VA = "0xD7E1C8")]
		private void ShowSolvedAnimation()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xD7E7F8", Offset = "0xD7E7F8", VA = "0xD7E7F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13BC4", Offset = "0xA13BC4")]
		private IEnumerator MaterialPropertyAnimation(float startMinProperty, float startMaxProperty, int rendererIndex, float target, bool updateEmissiveResonationMaterialData)
		{
			return null;
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xD7E418", Offset = "0xD7E418", VA = "0xD7E418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13C28", Offset = "0xA13C28")]
		private IEnumerator MaterialPropertyAnimation(int rendererIndex, float target)
		{
			return null;
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xD7E77C", Offset = "0xD7E77C", VA = "0xD7E77C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13C8C", Offset = "0xA13C8C")]
		private IEnumerator StatueAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xD7E938", Offset = "0xD7E938", VA = "0xD7E938")]
		private bool IsAllPlatformsLit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xD7DF78", Offset = "0xD7DF78", VA = "0xD7DF78")]
		private bool HasPlatformStartedLightingUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xD7E174", Offset = "0xD7E174", VA = "0xD7E174")]
		private bool HasPlatformStartedShuttingDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xD7E988", Offset = "0xD7E988", VA = "0xD7E988")]
		private bool IsPlatformFullyLit(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xD7E9D0", Offset = "0xD7E9D0", VA = "0xD7E9D0")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xD7D144", Offset = "0xD7D144", VA = "0xD7D144")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xD79984", Offset = "0xD79984", VA = "0xD79984")]
		public void GodReactsToPlayer()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xD79AD4", Offset = "0xD79AD4", VA = "0xD79AD4")]
		public void ShowFlower()
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xD7C994", Offset = "0xD7C994", VA = "0xD7C994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13CF0", Offset = "0xA13CF0")]
		private IEnumerator FadeByDistance()
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xD7EA1C", Offset = "0xD7EA1C", VA = "0xD7EA1C")]
		public ResonationPuzzle()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xD7ECF4", Offset = "0xD7ECF4", VA = "0xD7ECF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13D54", Offset = "0xA13D54")]
		private void <RegisterWithResonationSystems>b__60_0(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xD7ECF8", Offset = "0xD7ECF8", VA = "0xD7ECF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13D64", Offset = "0xA13D64")]
		private void <RegisterWithResonationSystems>b__60_1(int index)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BA")]
	public class ResonationPuzzleState : ComponentState
	{
		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] SolvedPlatformIndexes;

		[Token(Token = "0x17000244")]
		public bool IsSolved
		{
			[Token(Token = "0x600168B")]
			[Address(RVA = "0xD7CE84", Offset = "0xD7CE84", VA = "0xD7CE84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xD7CFB0", Offset = "0xD7CFB0", VA = "0xD7CFB0")]
		public ResonationPuzzleState(int[] solvedPlatformIndexes)
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class ResonationTempleDoor : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC488", Offset = "0x9FC488")]
		private sealed class <OpeningRoutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationTempleDoor <>4__this;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <min>5__2;

			[Token(Token = "0x400168C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <max>5__3;

			[Token(Token = "0x400168D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__4;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016AB")]
				[Address(RVA = "0xD80AE8", Offset = "0xD80AE8", VA = "0xD80AE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016AD")]
				[Address(RVA = "0xD80B50", Offset = "0xD80B50", VA = "0xD80B50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016A8")]
			[Address(RVA = "0xD806E0", Offset = "0xD806E0", VA = "0xD806E0")]
			[DebuggerHidden]
			public <OpeningRoutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60016A9")]
			[Address(RVA = "0xD808C4", Offset = "0xD808C4", VA = "0xD808C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016AA")]
			[Address(RVA = "0xD808C8", Offset = "0xD808C8", VA = "0xD808C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xD80AF0", Offset = "0xD80AF0", VA = "0xD80AF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float SlideDuration;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int rayLengthId;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int correctnessId;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int minId;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int maxId;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA049F8", Offset = "0xA049F8")]
		[SerializeField]
		private ResonanceSystemData m_resonanceSystemData;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04A44", Offset = "0xA04A44")]
		[SerializeField]
		private LaserSocket m_laserSocket;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_rayCylinderPrefab;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_rayLengthCurve;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04AB0", Offset = "0xA04AB0")]
		private Transform m_leftDoorTransform;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_rightDoorTransform;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_doorSlideDistance;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject m_blockingVolume;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer[] m_platformRenderers;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer socketAudioPlayer;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue doorsOpeningSound;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MaterialPropertyBlock m_platformEmissiveMaterialPropertyBlock;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform m_beamCylinder;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock m_beamMaterialPropertyBlock;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Renderer m_beamRenderer;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ResonationTempleDoorState m_currentState;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_initialized;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool m_isOpen;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private bool m_isRegistered;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine m_doorAnimationRoutine;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 m_leftDoorClosedLocalPos;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 m_rightDoorClosedLocalPos;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 m_leftDoorOpenLocalPos;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 m_rightDoorOpenLocalPos;

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xD7F7A0", Offset = "0xD7F7A0", VA = "0xD7F7A0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xD7F838", Offset = "0xD7F838", VA = "0xD7F838")]
		private void Awake()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xD7FC60", Offset = "0xD7FC60", VA = "0xD7FC60", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xD7FA84", Offset = "0xD7FA84", VA = "0xD7FA84")]
		private void CreateRayCylinder()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xD7FD64", Offset = "0xD7FD64", VA = "0xD7FD64")]
		private void SetEmmissivePlatformMaterial(float val)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xD7FE5C", Offset = "0xD7FE5C", VA = "0xD7FE5C")]
		private void SetPropertyBlockForPlatforms()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xD7F994", Offset = "0xD7F994", VA = "0xD7F994")]
		private void RegisterWithResonationSystems()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xD7FEE4", Offset = "0xD7FEE4", VA = "0xD7FEE4")]
		private float GetPitchOffset(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
			return default(float);
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xD80280", Offset = "0xD80280", VA = "0xD80280")]
		private void UpdatePlatformSound()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xD80284", Offset = "0xD80284", VA = "0xD80284")]
		private void StopSoundHere()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xD7FFF4", Offset = "0xD7FFF4", VA = "0xD7FFF4")]
		private void SetRayCylinderProperties(Vector3 pos, float correctness)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xD80288", Offset = "0xD80288", VA = "0xD80288")]
		public void SetRayOrigin(int index, Vector3 origin)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xD802A4", Offset = "0xD802A4", VA = "0xD802A4")]
		private void StopResonanceSystem()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xD7FD2C", Offset = "0xD7FD2C", VA = "0xD7FD2C")]
		private void SetDoorsOpen()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xD802F0", Offset = "0xD802F0", VA = "0xD802F0")]
		private void SetBlockingVolume(bool shouldBeActive)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xD80310", Offset = "0xD80310", VA = "0xD80310")]
		public void SetDoorsOpenPosition()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xD80370", Offset = "0xD80370", VA = "0xD80370")]
		public void AnimateDoorsOpening()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xD804E0", Offset = "0xD804E0", VA = "0xD804E0")]
		private void AnimateDoorsClosing()
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xD80228", Offset = "0xD80228", VA = "0xD80228")]
		private void TryStartOpeningRoutine()
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xD80698", Offset = "0xD80698", VA = "0xD80698")]
		private void TryStartClosing()
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xD8061C", Offset = "0xD8061C", VA = "0xD8061C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13EB4", Offset = "0xA13EB4")]
		private IEnumerator OpeningRoutine()
		{
			return null;
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xD8070C", Offset = "0xD8070C", VA = "0xD8070C")]
		private void OnOpeningAnimComplete()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xD80744", Offset = "0xD80744", VA = "0xD80744")]
		private void OnClosingAnimComplete()
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xD80764", Offset = "0xD80764", VA = "0xD80764")]
		public ResonationTempleDoor()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xD808BC", Offset = "0xD808BC", VA = "0xD808BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13F18", Offset = "0xA13F18")]
		private void <RegisterWithResonationSystems>b__37_0(int index, Vector3 pos, TwoDimensionalResonance resonance)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xD808C0", Offset = "0xD808C0", VA = "0xD808C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13F28", Offset = "0xA13F28")]
		private void <RegisterWithResonationSystems>b__37_1(int index)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003BD")]
	public class ResonationTempleDoorState : ComponentState
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsOpen;

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xD7F808", Offset = "0xD7F808", VA = "0xD7F808")]
		public ResonationTempleDoorState(bool isOpen)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public struct ResonatorSystemPosition
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B6C", Offset = "0xA04B6C")]
		private InstrumentResonator <Resonator>k__BackingField;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA04B7C", Offset = "0xA04B7C")]
		private Vector3 <RegisteredPosition>k__BackingField;

		[Token(Token = "0x17000247")]
		public InstrumentResonator Resonator
		{
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0xAD7578", Offset = "0xAD7578", VA = "0xAD7578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13F88", Offset = "0xA13F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0xAD7580", Offset = "0xAD7580", VA = "0xAD7580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13F98", Offset = "0xA13F98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public Vector3 RegisteredPosition
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xAD7588", Offset = "0xAD7588", VA = "0xAD7588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13FA8", Offset = "0xA13FA8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0xAD7594", Offset = "0xAD7594", VA = "0xAD7594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA13FB8", Offset = "0xA13FB8")]
			set
			{
			}
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xAD75A0", Offset = "0xAD75A0", VA = "0xAD75A0")]
		public ResonatorSystemPosition(ref InstrumentResonator resonator)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xAD75A8", Offset = "0xAD75A8", VA = "0xAD75A8")]
		public bool HasPositionChangedSinceLastCheck()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003BF")]
	public class StatueAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResonationPuzzle m_resonationPuzzle;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xD80B80", Offset = "0xD80B80", VA = "0xD80B80")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xD80B98", Offset = "0xD80B98", VA = "0xD80B98")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xD80BB0", Offset = "0xD80BB0", VA = "0xD80BB0")]
		public StatueAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C0")]
	public struct TwoDimensionalResonance
	{
		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA04B9C", Offset = "0xA04B9C")]
		public float X;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA04BB4", Offset = "0xA04BB4")]
		public float Y;

		[Token(Token = "0x17000249")]
		public float Magnitude
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0xAD75B8", Offset = "0xAD75B8", VA = "0xAD75B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xAD75B0", Offset = "0xAD75B0", VA = "0xAD75B0")]
		public TwoDimensionalResonance(float x, float y)
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xD7D5F0", Offset = "0xD7D5F0", VA = "0xD7D5F0")]
		public static TwoDimensionalResonance operator -(TwoDimensionalResonance a, TwoDimensionalResonance b)
		{
			return default(TwoDimensionalResonance);
		}
	}
}
namespace NeatCorp.Puzzles.Coral
{
	[Token(Token = "0x20003C1")]
	public class CoralAltar : MonoBehaviour
	{
		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC498", Offset = "0x9FC498")]
		private sealed class <MaterialPropertyAnimation>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralAltar <>4__this;

			[Token(Token = "0x40016AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int emissiveIndex;

			[Token(Token = "0x40016AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float target;

			[Token(Token = "0x1700024A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016DC")]
				[Address(RVA = "0xDA1CFC", Offset = "0xDA1CFC", VA = "0xDA1CFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016DE")]
				[Address(RVA = "0xDA1D64", Offset = "0xDA1D64", VA = "0xDA1D64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xDA1660", Offset = "0xDA1660", VA = "0xDA1660")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xDA1C54", Offset = "0xDA1C54", VA = "0xDA1C54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xDA1C58", Offset = "0xDA1C58", VA = "0xDA1C58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xDA1D04", Offset = "0xDA1D04", VA = "0xDA1D04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC4A8", Offset = "0x9FC4A8")]
		private sealed class <MaterialPropertyAnimation>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralAltar <>4__this;

			[Token(Token = "0x40016B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startMinProperty;

			[Token(Token = "0x40016B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startMaxProperty;

			[Token(Token = "0x40016B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float target;

			[Token(Token = "0x40016B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int emissiveIndex;

			[Token(Token = "0x40016B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateEmissiveResonationMaterialData;

			[Token(Token = "0x40016B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <firstProperty>5__2;

			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <secondProperty>5__3;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <firstPropertyId>5__4;

			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <secondPropertyId>5__5;

			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <change>5__6;

			[Token(Token = "0x40016BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <i>5__7;

			[Token(Token = "0x1700024C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E2")]
				[Address(RVA = "0xDA2124", Offset = "0xDA2124", VA = "0xDA2124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E4")]
				[Address(RVA = "0xDA218C", Offset = "0xDA218C", VA = "0xDA218C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xDA1748", Offset = "0xDA1748", VA = "0xDA1748")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xDA1D6C", Offset = "0xDA1D6C", VA = "0xDA1D6C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xDA1D70", Offset = "0xDA1D70", VA = "0xDA1D70", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xDA212C", Offset = "0xDA212C", VA = "0xDA212C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC4B8", Offset = "0x9FC4B8")]
		private sealed class <StatueAnimationRoutine>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralAltar <>4__this;

			[Token(Token = "0x1700024E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E8")]
				[Address(RVA = "0xDA2300", Offset = "0xDA2300", VA = "0xDA2300", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016EA")]
				[Address(RVA = "0xDA2368", Offset = "0xDA2368", VA = "0xDA2368", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xDA1774", Offset = "0xDA1774", VA = "0xDA1774")]
			[DebuggerHidden]
			public <StatueAnimationRoutine>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xDA2194", Offset = "0xDA2194", VA = "0xDA2194", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xDA2198", Offset = "0xDA2198", VA = "0xDA2198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E9")]
			[Address(RVA = "0xDA2308", Offset = "0xDA2308", VA = "0xDA2308", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int LookingAroundLoopId;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int minId;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int maxId;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GemAltarSlot[] m_coralAltarSlots;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04BDC", Offset = "0xA04BDC")]
		[SerializeField]
		private ParticleSystem m_statueTransformationParticles;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04C28", Offset = "0xA04C28")]
		[SerializeField]
		private NeatAudioPlayer godTransformSound;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioPlayer energySound;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<NeatAudioPlayer> energyHum;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04C94", Offset = "0xA04C94")]
		[SerializeField]
		private GameObject m_godStatueObject;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_godObject;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Animator m_godAnimator;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Animator m_statueAnimator;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flowerObject;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GodFlower m_godFlower;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer[] m_platformRenderers;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_crystalsPlaced;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MaterialPropertyBlock m_currentEmissiveMaterialPropertyBlock;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EmissiveResonationMaterialData[] m_emissiveResonationMaterialData;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_statueAnimationRoutine;

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xDA0C04", Offset = "0xDA0C04", VA = "0xDA0C04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xDA0DA4", Offset = "0xDA0DA4", VA = "0xDA0DA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xDA0DF0", Offset = "0xDA0DF0", VA = "0xDA0DF0")]
		private void OnSlotInitialized(int slotIndex, bool hasCrystal)
		{
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xDA10B8", Offset = "0xDA10B8", VA = "0xDA10B8")]
		private void OnStartCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xDA10BC", Offset = "0xDA10BC", VA = "0xDA10BC")]
		private void OnFinishedCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xDA0F78", Offset = "0xDA0F78", VA = "0xDA0F78")]
		private void CheckPuzzleCompletion(bool checkFromSaveState = false)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xDA12DC", Offset = "0xDA12DC", VA = "0xDA12DC")]
		private void ShowAsCompleted()
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xDA12D8", Offset = "0xDA12D8", VA = "0xDA12D8")]
		public void PlaySolveSound()
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xDA1280", Offset = "0xDA1280", VA = "0xDA1280")]
		private void ShowSolvedAnimation()
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xDA14D8", Offset = "0xDA14D8", VA = "0xDA14D8")]
		private bool IsAllPlatformsLit()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xDA1178", Offset = "0xDA1178", VA = "0xDA1178")]
		private bool HasPlatformStartedLightingUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xDA1570", Offset = "0xDA1570", VA = "0xDA1570")]
		private bool HasPlatformStartedShuttingDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xDA1528", Offset = "0xDA1528", VA = "0xDA1528")]
		private bool IsPlatformFullyLit(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xDA11C4", Offset = "0xDA11C4", VA = "0xDA11C4")]
		private void StartPlatformMaterialAnimationRoutine(int emissiveIndex, float target)
		{
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xDA15C4", Offset = "0xDA15C4", VA = "0xDA15C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA13FC8", Offset = "0xA13FC8")]
		private IEnumerator MaterialPropertyAnimation(int emissiveIndex, float target)
		{
			return null;
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xDA168C", Offset = "0xDA168C", VA = "0xDA168C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1502C", Offset = "0xA1502C")]
		private IEnumerator MaterialPropertyAnimation(float startMinProperty, float startMaxProperty, int emissiveIndex, float target, bool updateEmissiveResonationMaterialData)
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xDA145C", Offset = "0xDA145C", VA = "0xDA145C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15090", Offset = "0xA15090")]
		private IEnumerator StatueAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xDA17A0", Offset = "0xDA17A0", VA = "0xDA17A0")]
		private void SetPropertyBlockEmissiveValue(float val)
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xDA0E34", Offset = "0xDA0E34", VA = "0xDA0E34")]
		private void SetEmissivePlatformMaterialForRenderer(int emissiveIndex, bool shouldBeLit)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xDA0DCC", Offset = "0xDA0DCC", VA = "0xDA0DCC")]
		private void SetEmmissivePlatformMaterialForAll(float val)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xDA18E4", Offset = "0xDA18E4", VA = "0xDA18E4")]
		private void SetPropertyBlockForAll()
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xDA188C", Offset = "0xDA188C", VA = "0xDA188C")]
		private void SetPropertyBlockForRenderer(int emissiveIndex)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xDA1974", Offset = "0xDA1974", VA = "0xDA1974")]
		private int GetMaterialSlotIndex(int emissiveIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xDA13A8", Offset = "0xDA13A8", VA = "0xDA13A8")]
		private void TryActivateFlower()
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xDA1980", Offset = "0xDA1980", VA = "0xDA1980")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xDA1388", Offset = "0xDA1388", VA = "0xDA1388")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xDA1A14", Offset = "0xDA1A14", VA = "0xDA1A14")]
		public void GodReactsToPlayer()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xDA1A98", Offset = "0xDA1A98", VA = "0xDA1A98")]
		public void ShowFlower()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xDA1AB8", Offset = "0xDA1AB8", VA = "0xDA1AB8")]
		public CoralAltar()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class CoralCollectionActivator : MonoBehaviour
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_coralBall;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_coralCone;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_coralSpike;

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xDA2380", Offset = "0xDA2380", VA = "0xDA2380")]
		public void ActivateCoralByIndex(int coralIndex)
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xDA23D4", Offset = "0xDA23D4", VA = "0xDA23D4")]
		public CoralCollectionActivator()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class CoralGodAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CoralAltar m_coralAltarPuzzle;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SphereCollider m_godReactionToPlayerCollider;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue reactToPlayerCue;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue waveCue;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue summonFlowerCue;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_waterEffects;

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xDA23DC", Offset = "0xDA23DC", VA = "0xDA23DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xDA23F4", Offset = "0xDA23F4", VA = "0xDA23F4")]
		public void EnablePlayerInteraction()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xDA2414", Offset = "0xDA2414", VA = "0xDA2414")]
		public void SummonFlower()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xDA242C", Offset = "0xDA242C", VA = "0xDA242C")]
		public void WaterEffects()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xDA244C", Offset = "0xDA244C", VA = "0xDA244C")]
		public void RaiseArms()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xDA2520", Offset = "0xDA2520", VA = "0xDA2520")]
		public void Wave()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xDA25F4", Offset = "0xDA25F4", VA = "0xDA25F4")]
		public void ReactToPlayer()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xDA26C8", Offset = "0xDA26C8", VA = "0xDA26C8")]
		public void TriggerCoralTreeBud()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xDA2750", Offset = "0xDA2750", VA = "0xDA2750")]
		public void SpawnGrabbableCrystal()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xDA27D8", Offset = "0xDA27D8", VA = "0xDA27D8")]
		public void DisableGod()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xDA287C", Offset = "0xDA287C", VA = "0xDA287C")]
		public CoralGodAnimation()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class CoralStatueAnimation : MonoBehaviour
	{
		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CoralAltar m_coralAltar;

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xDA3180", Offset = "0xDA3180", VA = "0xDA3180")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xDA3198", Offset = "0xDA3198", VA = "0xDA3198")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xDA31B0", Offset = "0xDA31B0", VA = "0xDA31B0")]
		public CoralStatueAnimation()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class GhostAnimController : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_ghostId;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_isMommy;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_poofEffect;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int SadLayerIndex;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int BaseLayerIndex;

		[Token(Token = "0x17000250")]
		public int GhostId
		{
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xDA3210", Offset = "0xDA3210", VA = "0xDA3210")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public bool IsMommy
		{
			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xDA3218", Offset = "0xDA3218", VA = "0xDA3218")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xDA3220", Offset = "0xDA3220", VA = "0xDA3220", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xDA348C", Offset = "0xDA348C", VA = "0xDA348C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xDA3530", Offset = "0xDA3530", VA = "0xDA3530")]
		public Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xDA3538", Offset = "0xDA3538", VA = "0xDA3538")]
		public void OnPoofsAway()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xDA36A4", Offset = "0xDA36A4", VA = "0xDA36A4")]
		public GhostAnimController()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class GhostFamilyController : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC4C8", Offset = "0x9FC4C8")]
		private sealed class <GhostsDisappearing>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GhostFamilyController <>4__this;

			[Token(Token = "0x17000252")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001713")]
				[Address(RVA = "0xDA4918", Offset = "0xDA4918", VA = "0xDA4918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001715")]
				[Address(RVA = "0xDA4980", Offset = "0xDA4980", VA = "0xDA4980", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001710")]
			[Address(RVA = "0xDA44A0", Offset = "0xDA44A0", VA = "0xDA44A0")]
			[DebuggerHidden]
			public <GhostsDisappearing>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0xDA4618", Offset = "0xDA4618", VA = "0xDA4618", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001712")]
			[Address(RVA = "0xDA461C", Offset = "0xDA461C", VA = "0xDA461C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xDA4920", Offset = "0xDA4920", VA = "0xDA4920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int m_ghostsInitialized;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GhostFamilyController sm_instance;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int PoofsAwayParameterId;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int ApplauseParameterId;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int ShoutParameterId;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CoralCollectionActivator m_mommyCoralCollection;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_mommyGhostAnimator;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator[] m_childGhostAnimators;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OptimizedCollection<int> m_ghostsCollected;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_ghostsDisappearingRoutine;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_initialized;

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xDA3A84", Offset = "0xDA3A84", VA = "0xDA3A84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xDA3B00", Offset = "0xDA3B00", VA = "0xDA3B00", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xDA3284", Offset = "0xDA3284", VA = "0xDA3284")]
		public static void RegisterGhost(GhostAnimController ghostAnimController)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xDA3C24", Offset = "0xDA3C24", VA = "0xDA3C24")]
		private void TryInitializeGhostAnimations()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xDA3E94", Offset = "0xDA3E94", VA = "0xDA3E94", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xDA3F54", Offset = "0xDA3F54", VA = "0xDA3F54")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xDA405C", Offset = "0xDA405C", VA = "0xDA405C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xDA4164", Offset = "0xDA4164", VA = "0xDA4164")]
		private void OnPlaformFinished(PlatformFinishedEvent e)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xDA3CB0", Offset = "0xDA3CB0", VA = "0xDA3CB0")]
		private void InitializeGhostAnimations()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xDA4340", Offset = "0xDA4340", VA = "0xDA4340")]
		private void SetBaseAnimationLayerPlayback(bool shouldPlay)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xDA43C0", Offset = "0xDA43C0", VA = "0xDA43C0")]
		public void OnGodAppearing(GodAppearingEvent e)
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xDA4424", Offset = "0xDA4424", VA = "0xDA4424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA151E4", Offset = "0xA151E4")]
		private IEnumerator GhostsDisappearing()
		{
			return null;
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xDA44CC", Offset = "0xDA44CC", VA = "0xDA44CC")]
		public GhostFamilyController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CB")]
	public class GhostFamilyControllerState : ComponentState
	{
		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] GhostsCollected;

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xDA3F20", Offset = "0xDA3F20", VA = "0xDA3F20")]
		public GhostFamilyControllerState(int[] ghostsCollected)
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class GodAppearingEvent : GameEvent
	{
		[Token(Token = "0x6001717")]
		[Address(RVA = "0xDA0470", Offset = "0xDA0470", VA = "0xDA0470")]
		public GodAppearingEvent()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public enum CoralBudType
	{
		[Token(Token = "0x40016DF")]
		Ball,
		[Token(Token = "0x40016E0")]
		Cone,
		[Token(Token = "0x40016E1")]
		Crystal,
		[Token(Token = "0x40016E2")]
		Pipe,
		[Token(Token = "0x40016E3")]
		Spikey
	}
	[Token(Token = "0x20003CE")]
	public class CoralBud : MonoBehaviour
	{
		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CoralBudType m_coralBudType;

		[Token(Token = "0x17000254")]
		public CoralBudType BudType
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xDA2370", Offset = "0xDA2370", VA = "0xDA2370")]
			get
			{
				return default(CoralBudType);
			}
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xDA2378", Offset = "0xDA2378", VA = "0xDA2378")]
		public CoralBud()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class CoralPlatformPuzzle : SaveableComponent, IInitializable
	{
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int StageParameterId;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly int FullyGrownStateNameHash;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_platformIndex;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private CraftingSystem.ResourceType m_coralResourceType;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_coralAnimator;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_fishParticles;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PlantPositionProxy> m_coralsPlanted;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OptimizedCollection<PlantPositionProxy> m_coralsGrown;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_initialized;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isSolved;

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xDA2884", Offset = "0xDA2884", VA = "0xDA2884", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xDA291C", Offset = "0xDA291C", VA = "0xDA291C", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xDA2ACC", Offset = "0xDA2ACC", VA = "0xDA2ACC")]
		public void OnTriggerUpdated(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xDA2AF0", Offset = "0xDA2AF0", VA = "0xDA2AF0")]
		private void UpdatePlantsRegistry(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xDA2EEC", Offset = "0xDA2EEC", VA = "0xDA2EEC")]
		private void ClearRemovedComponents(OptimizedCollection<Component> currentComponentCollection)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xDA2D40", Offset = "0xDA2D40", VA = "0xDA2D40")]
		public void CheckPlantsGrowth()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xDA29BC", Offset = "0xDA29BC", VA = "0xDA29BC")]
		public void CompletePuzzle()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xDA3094", Offset = "0xDA3094", VA = "0xDA3094")]
		public CoralPlatformPuzzle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	public class CoralPlatformPuzzleState : ComponentState
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsSolved;

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xDA28EC", Offset = "0xDA28EC", VA = "0xDA28EC")]
		public CoralPlatformPuzzleState(bool isSolved)
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class GhostCoralBubbleController : MonoBehaviour
	{
		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC4D8", Offset = "0x9FC4D8")]
		private sealed class <ShowBubbleForDuration>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GhostCoralBubbleController <>4__this;

			[Token(Token = "0x17000255")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600172C")]
				[Address(RVA = "0xDA3A14", Offset = "0xDA3A14", VA = "0xDA3A14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600172E")]
				[Address(RVA = "0xDA3A7C", Offset = "0xDA3A7C", VA = "0xDA3A7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001729")]
			[Address(RVA = "0xDA3880", Offset = "0xDA3880", VA = "0xDA3880")]
			[DebuggerHidden]
			public <ShowBubbleForDuration>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600172A")]
			[Address(RVA = "0xDA3970", Offset = "0xDA3970", VA = "0xDA3970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600172B")]
			[Address(RVA = "0xDA3974", Offset = "0xDA3974", VA = "0xDA3974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600172D")]
			[Address(RVA = "0xDA3A1C", Offset = "0xDA3A1C", VA = "0xDA3A1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly WaitForSeconds m_waitForDurationInstruction;

		[Token(Token = "0x40016F1")]
		private const int MaxCoralsNum = 3;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_bubbleObject;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_coralIcons;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_alwaysShowBubble;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_bubbleRoutine;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_numberOfCorals;

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xDA36AC", Offset = "0xDA36AC", VA = "0xDA36AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xDA3774", Offset = "0xDA3774", VA = "0xDA3774")]
		public void OnCoralNumberChanged(int numberOfCorals)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xDA36BC", Offset = "0xDA36BC", VA = "0xDA36BC")]
		public void ShowBubble()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xDA3804", Offset = "0xDA3804", VA = "0xDA3804")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15298", Offset = "0xA15298")]
		private IEnumerator ShowBubbleForDuration()
		{
			return null;
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xDA38AC", Offset = "0xDA38AC", VA = "0xDA38AC")]
		public void HideBubble()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xDA38CC", Offset = "0xDA38CC", VA = "0xDA38CC")]
		public GhostCoralBubbleController()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class GhostNoGrabReaction : MonoBehaviour
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GhostPlatformInteraction m_ghostPlatformInteraction;

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xDA4988", Offset = "0xDA4988", VA = "0xDA4988")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xDA4AAC", Offset = "0xDA4AAC", VA = "0xDA4AAC")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xDA4AC8", Offset = "0xDA4AC8", VA = "0xDA4AC8")]
		public GhostNoGrabReaction()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class GhostPlatformInteraction : MonoBehaviour
	{
		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC4E8", Offset = "0x9FC4E8")]
		private sealed class <ReactionRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400170B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GhostPlatformInteraction <>4__this;

			[Token(Token = "0x17000257")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001747")]
				[Address(RVA = "0xDA59B4", Offset = "0xDA59B4", VA = "0xDA59B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000258")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001749")]
				[Address(RVA = "0xDA5A1C", Offset = "0xDA5A1C", VA = "0xDA5A1C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0xDA51B4", Offset = "0xDA51B4", VA = "0xDA51B4")]
			[DebuggerHidden]
			public <ReactionRoutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0xDA580C", Offset = "0xDA580C", VA = "0xDA580C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001746")]
			[Address(RVA = "0xDA5810", Offset = "0xDA5810", VA = "0xDA5810", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001748")]
			[Address(RVA = "0xDA59BC", Offset = "0xDA59BC", VA = "0xDA59BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016FB")]
		private const float WaveInterval = 30f;

		[Token(Token = "0x40016FC")]
		private const float ReactInterval = 2.5f;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WaveParamId;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int PoofsAwayParamId;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ApplauseParamId;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int DontTouchCrystalParamId;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WaitForSeconds m_reationDelayInstruction;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_platformIndex;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_ghostAnimator;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GhostCoralBubbleController m_ghostCoralBubbleController;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AttachSlot m_ghostCrystalAttatchSlot;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Grabbable m_ghostCrystalGrabbable;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastWaveTime;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_reactionRoutine;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_shouldReact;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_lastReactTime;

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xDA4AD0", Offset = "0xDA4AD0", VA = "0xDA4AD0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xDA4CB0", Offset = "0xDA4CB0", VA = "0xDA4CB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xDA4E18", Offset = "0xDA4E18", VA = "0xDA4E18")]
		private void OnCrystalAttached(PlatformCrystalAttatchedEvent e)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xDA4F5C", Offset = "0xDA4F5C", VA = "0xDA4F5C")]
		public void PlayWaveAnim()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xDA501C", Offset = "0xDA501C", VA = "0xDA501C")]
		public void OnPointsDown()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xDA5020", Offset = "0xDA5020", VA = "0xDA5020")]
		public void PlayApplauseAnim()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xDA50A0", Offset = "0xDA50A0", VA = "0xDA50A0")]
		public void PlayFinishAnim()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xDA49A4", Offset = "0xDA49A4", VA = "0xDA49A4")]
		public void ReactToPlayerGrabbingGem(bool shouldReact)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xDA5138", Offset = "0xDA5138", VA = "0xDA5138")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1534C", Offset = "0xA1534C")]
		private IEnumerator ReactionRoutine()
		{
			return null;
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xDA51E0", Offset = "0xDA51E0", VA = "0xDA51E0")]
		public void OnPoofsAway()
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xDA5374", Offset = "0xDA5374", VA = "0xDA5374")]
		public void DropCrystal()
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xDA5554", Offset = "0xDA5554", VA = "0xDA5554")]
		private bool IsCorrectPlatform(int platformIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xDA5564", Offset = "0xDA5564", VA = "0xDA5564")]
		private void OnCoralPlanted(CoralPlantedEvent e)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xDA558C", Offset = "0xDA558C", VA = "0xDA558C")]
		private void OnCoralFullyGrown(CoralFullyGrownEvent e)
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xDA55C8", Offset = "0xDA55C8", VA = "0xDA55C8")]
		private void OnPlatformFinished(PlatformFinishedEvent e)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xDA55F0", Offset = "0xDA55F0", VA = "0xDA55F0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xDA56D0", Offset = "0xDA56D0", VA = "0xDA56D0")]
		public GhostPlatformInteraction()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class PlatformGhostAttachSlotEventDispatcher : AttachSlotEventDispatcher
	{
		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_platformIndex;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xDA5A24", Offset = "0xDA5A24", VA = "0xDA5A24", Slot = "4")]
		protected override void OnAttached(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xDA5AE0", Offset = "0xDA5AE0", VA = "0xDA5AE0")]
		public PlatformGhostAttachSlotEventDispatcher()
		{
		}
	}
}
namespace NeatCorp.Puzzles.Coral.Events
{
	[Token(Token = "0x20003D7")]
	public class CoralFullyGrownEvent : GameEvent
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NumberOfCoralsGrown;

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xDA3030", Offset = "0xDA3030", VA = "0xDA3030")]
		public CoralFullyGrownEvent(int platformIndex, int numberOfCoralsGrown)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class CoralPlantedEvent : GameEvent
	{
		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xDA3004", Offset = "0xDA3004", VA = "0xDA3004")]
		public CoralPlantedEvent(int platformIndex)
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class PlatformCrystalAttatchedEvent : GameEvent
	{
		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable GrabbableCrystal;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttachSlot AttachSlot;

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xDA31B8", Offset = "0xDA31B8", VA = "0xDA31B8")]
		public PlatformCrystalAttatchedEvent(int platformIndex, Grabbable grabbableCrystal, AttachSlot attachSlot)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class PlatformFinishedEvent : GameEvent
	{
		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int PlatformIndex;

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xDA3068", Offset = "0xDA3068", VA = "0xDA3068")]
		public PlatformFinishedEvent(int platformIndex)
		{
		}
	}
}
namespace NeatCorp.Puzzles.BambooIsland
{
	[Token(Token = "0x20003DB")]
	public class BambooIslandAltar : MonoBehaviour
	{
		[Token(Token = "0x20003DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC4F8", Offset = "0x9FC4F8")]
		private sealed class <StatueAnimationRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001724")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001725")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001726")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BambooIslandAltar <>4__this;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001764")]
				[Address(RVA = "0xDA0754", Offset = "0xDA0754", VA = "0xDA0754", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001766")]
				[Address(RVA = "0xDA07BC", Offset = "0xDA07BC", VA = "0xDA07BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001761")]
			[Address(RVA = "0xDA03B0", Offset = "0xDA03B0", VA = "0xDA03B0")]
			[DebuggerHidden]
			public <StatueAnimationRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001762")]
			[Address(RVA = "0xDA0628", Offset = "0xDA0628", VA = "0xDA0628", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001763")]
			[Address(RVA = "0xDA062C", Offset = "0xDA062C", VA = "0xDA062C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001765")]
			[Address(RVA = "0xDA075C", Offset = "0xDA075C", VA = "0xDA075C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int LookingAroundLoopId;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GemAltarSlot[] m_coralAltarSlots;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlatformGlow[] m_altarGlowSlots;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04F20", Offset = "0xA04F20")]
		private ParticleSystem m_statueTransformationParticles;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04F6C", Offset = "0xA04F6C")]
		private NeatAudioPlayer godTransformSound;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA04FB8", Offset = "0xA04FB8")]
		[SerializeField]
		private GameObject m_godStatueObject;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_godObject;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Animator m_godAnimator;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Animator m_statueAnimator;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_flowerObject;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GodFlower m_godFlower;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_crystalsPlaced;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_statueAnimationRoutine;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string AllGemsInsertedEvent;

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xD9FDF0", Offset = "0xD9FDF0", VA = "0xD9FDF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xD9FF94", Offset = "0xD9FF94", VA = "0xD9FF94")]
		private void OnSlotInitialized(int slotIndex, bool hasCrystal)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xDA0134", Offset = "0xDA0134", VA = "0xDA0134")]
		private void OnStartCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xDA0138", Offset = "0xDA0138", VA = "0xDA0138")]
		private void OnFinishedCrystalPlacement(int slotIndex)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xD9FFD0", Offset = "0xD9FFD0", VA = "0xD9FFD0")]
		private void LightUpAltarSlot(int index)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xDA0030", Offset = "0xDA0030", VA = "0xDA0030")]
		private void CheckPuzzleCompletion(bool checkFromSaveState = false)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xDA01C8", Offset = "0xDA01C8", VA = "0xDA01C8")]
		private void ShowAsCompleted()
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xDA01C4", Offset = "0xDA01C4", VA = "0xDA01C4")]
		public void PlaySolveSound()
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xDA016C", Offset = "0xDA016C", VA = "0xDA016C")]
		private void ShowSolvedAnimation()
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xDA0334", Offset = "0xDA0334", VA = "0xDA0334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15400", Offset = "0xA15400")]
		private IEnumerator StatueAnimationRoutine()
		{
			return null;
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xDA0280", Offset = "0xDA0280", VA = "0xDA0280")]
		private void TryActivateFlower()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xDA03DC", Offset = "0xDA03DC", VA = "0xDA03DC")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xDA0260", Offset = "0xDA0260", VA = "0xDA0260")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xDA0478", Offset = "0xDA0478", VA = "0xDA0478")]
		public void GodReactsToPlayer()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xDA04FC", Offset = "0xDA04FC", VA = "0xDA04FC")]
		public void ShowFlower()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xDA051C", Offset = "0xDA051C", VA = "0xDA051C")]
		public BambooIslandAltar()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class BambooIslandGodAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BambooIslandAltar m_Altar;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SphereCollider m_godReactionToPlayerCollider;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue reactToPlayerCue;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue waveCue;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue summonFlowerCue;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xDA07C4", Offset = "0xDA07C4", VA = "0xDA07C4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xDA07DC", Offset = "0xDA07DC", VA = "0xDA07DC")]
		public void EnablePlayerInteraction()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xDA07FC", Offset = "0xDA07FC", VA = "0xDA07FC")]
		public void SummonFlower()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xDA0814", Offset = "0xDA0814", VA = "0xDA0814")]
		public void WaterEffects()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xDA0818", Offset = "0xDA0818", VA = "0xDA0818")]
		public void RaiseArms()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xDA08EC", Offset = "0xDA08EC", VA = "0xDA08EC")]
		public void Wave()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xDA09C0", Offset = "0xDA09C0", VA = "0xDA09C0")]
		public void ReactToPlayer()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xDA0A94", Offset = "0xDA0A94", VA = "0xDA0A94")]
		public void TriggerCoralTreeBud()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xDA0A98", Offset = "0xDA0A98", VA = "0xDA0A98")]
		public void SpawnGrabbableCrystal()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xDA0B20", Offset = "0xDA0B20", VA = "0xDA0B20")]
		public void DisableGod()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xDA0BC4", Offset = "0xDA0BC4", VA = "0xDA0BC4")]
		public BambooIslandGodAnimation()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class BambooIslandStatueAnimation : MonoBehaviour
	{
		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BambooIslandAltar m_altar;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xDA0BCC", Offset = "0xDA0BCC", VA = "0xDA0BCC")]
		public void ShowGod()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xDA0BE4", Offset = "0xDA0BE4", VA = "0xDA0BE4")]
		public void HideStatue()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xDA0BFC", Offset = "0xDA0BFC", VA = "0xDA0BFC")]
		public BambooIslandStatueAnimation()
		{
		}
	}
}
namespace NeatCorp.Player.MovingPlafrom
{
	[Token(Token = "0x20003DF")]
	public interface IMovingPlatform
	{
		[Token(Token = "0x6001775")]
		Vector3 GetVelocity();
	}
}
namespace NeatCorp.Player.Glove
{
	[Token(Token = "0x20003E0")]
	public class GloveGem : SaveableComponent, IInitializable, IGloveBlobReactable
	{
		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC508", Offset = "0x9FC508")]
		private sealed class <MoveToInfusePosition>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001740")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GloveGem <>4__this;

			[Token(Token = "0x4001741")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool playSound;

			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Rigidbody <rigidbody>5__2;

			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <maxFuseTime>5__3;

			[Token(Token = "0x17000262")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600178D")]
				[Address(RVA = "0xD9A1C4", Offset = "0xD9A1C4", VA = "0xD9A1C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000263")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600178F")]
				[Address(RVA = "0xD9A22C", Offset = "0xD9A22C", VA = "0xD9A22C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600178A")]
			[Address(RVA = "0xD99A04", Offset = "0xD99A04", VA = "0xD99A04")]
			[DebuggerHidden]
			public <MoveToInfusePosition>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x600178B")]
			[Address(RVA = "0xD99A64", Offset = "0xD99A64", VA = "0xD99A64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600178C")]
			[Address(RVA = "0xD99A68", Offset = "0xD99A68", VA = "0xD99A68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600178E")]
			[Address(RVA = "0xD9A1CC", Offset = "0xD9A1CC", VA = "0xD9A1CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400172E")]
		private const float FuseDistance = 0.01f;

		[Token(Token = "0x400172F")]
		private const float FuseSqrDistance = 0.0001f;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Stashable m_stashable;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve m_animationCurve;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_fuseHandClip;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip m_fuseClip;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_resetPositionAfterDelay;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_infuseRoutine;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_infusionTransform;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Action<GemType> m_onInfusionCompleted;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_fuseTime;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_isFusing;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool m_wasGrabbed;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OrientedPoint m_spawnPoint;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05124", Offset = "0xA05124")]
		private readonly GemType <AssociatedGemType>k__BackingField;

		[Token(Token = "0x1700025B")]
		public GemType GemType
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0xD99124", Offset = "0xD99124", VA = "0xD99124")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x1700025C")]
		public bool IsFusing
		{
			[Token(Token = "0x6001777")]
			[Address(RVA = "0xD99130", Offset = "0xD99130", VA = "0xD99130")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025D")]
		public bool IsHeld
		{
			[Token(Token = "0x6001778")]
			[Address(RVA = "0xD99138", Offset = "0xD99138", VA = "0xD99138")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025E")]
		public bool IsStashed
		{
			[Token(Token = "0x6001779")]
			[Address(RVA = "0xD99154", Offset = "0xD99154", VA = "0xD99154")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0xD98314", Offset = "0xD98314", VA = "0xD98314")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public bool ResetPositionAfterDelay
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0xD99170", Offset = "0xD99170", VA = "0xD99170")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000261")]
		protected virtual GemType AssociatedGemType
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0xD99178", Offset = "0xD99178", VA = "0xD99178", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA154B4", Offset = "0xA154B4")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xD99180", Offset = "0xD99180", VA = "0xD99180")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xD992C8", Offset = "0xD992C8", VA = "0xD992C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xD99410", Offset = "0xD99410", VA = "0xD99410")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xD994D0", Offset = "0xD994D0", VA = "0xD994D0")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xD99584", Offset = "0xD99584", VA = "0xD99584", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xD99790", Offset = "0xD99790", VA = "0xD99790", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xD998A8", Offset = "0xD998A8", VA = "0xD998A8")]
		public bool TryToInfuseInto(ref Transform infusionTransform, Action<GemType> OnInfusionCompleted)
		{
			return default(bool);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xD98248", Offset = "0xD98248", VA = "0xD98248")]
		public bool TryToInfuseIntoGlove(bool isRightHand, ref Transform gloveGemTransform, Action<GemType> OnInfusionCompleted)
		{
			return default(bool);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xD99974", Offset = "0xD99974", VA = "0xD99974")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA154C4", Offset = "0xA154C4")]
		private IEnumerator MoveToInfusePosition(bool playSound = false)
		{
			return null;
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xD99A30", Offset = "0xD99A30", VA = "0xD99A30", Slot = "6")]
		public Grabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xD99A4C", Offset = "0xD99A4C", VA = "0xD99A4C", Slot = "7")]
		public GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xD99A54", Offset = "0xD99A54", VA = "0xD99A54", Slot = "10")]
		public virtual GloveBlobReactionColors GetReactionColors()
		{
			return default(GloveBlobReactionColors);
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xD96DD0", Offset = "0xD96DD0", VA = "0xD96DD0")]
		public GloveGem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E2")]
	public class GloveGemState : ComponentState
	{
		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPointSerializable spawnPoint;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shouldResetPositionOnLoad;

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xD9970C", Offset = "0xD9970C", VA = "0xD9970C")]
		public GloveGemState(OrientedPoint point, bool resetPosition)
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class Glove : MonoBehaviour
	{
		[Token(Token = "0x20003E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC518", Offset = "0x9FC518")]
		private sealed class <InfuseAnimationRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001758")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001759")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400175A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GemType gemType;

			[Token(Token = "0x400175B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Glove <>4__this;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017AF")]
				[Address(RVA = "0xD990B4", Offset = "0xD990B4", VA = "0xD990B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017B1")]
				[Address(RVA = "0xD9911C", Offset = "0xD9911C", VA = "0xD9911C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xD98C28", Offset = "0xD98C28", VA = "0xD98C28")]
			[DebuggerHidden]
			public <InfuseAnimationRoutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x60017AD")]
			[Address(RVA = "0xD98E28", Offset = "0xD98E28", VA = "0xD98E28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xD98E2C", Offset = "0xD98E2C", VA = "0xD98E2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xD990BC", Offset = "0xD990BC", VA = "0xD990BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001746")]
		private const float InfuseAnimationDuration = 1f;

		[Token(Token = "0x4001747")]
		public const int AbilityCount = 1;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MAX_INFUSE_DISTANCE;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float MAX_INFUSE_REACTION_DISTANCE;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FastTravel m_fastTravel;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_gemTransform;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandAnimator m_playerHandAnimator;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GloveAbility> m_gloveAbilities;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GloveGem m_hoveringGem;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly WaitForSeconds m_waitForInfuseAnimationInstruction;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_infuseAnimationRoutine;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_hasPlacementFeedback;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05164", Offset = "0xA05164")]
		private bool <IsRight>k__BackingField;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05174", Offset = "0xA05174")]
		private GemType <GemShape>k__BackingField;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05184", Offset = "0xA05184")]
		private GloveAbility <Ability>k__BackingField;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerHand PlacementReactionHand;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IGloveBlobReactable PlacementReactionObject;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve GemPlacementFeedbackCurve;

		[Token(Token = "0x17000264")]
		public bool IsRight
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xD9775C", Offset = "0xD9775C", VA = "0xD9775C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15578", Offset = "0xA15578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xD97764", Offset = "0xD97764", VA = "0xD97764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15588", Offset = "0xA15588")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public GemType GemShape
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xD97770", Offset = "0xD97770", VA = "0xD97770")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15598", Offset = "0xA15598")]
			get
			{
				return default(GemType);
			}
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xD97778", Offset = "0xD97778", VA = "0xD97778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA155A8", Offset = "0xA155A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public GloveAbility Ability
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0xD97780", Offset = "0xD97780", VA = "0xD97780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA155B8", Offset = "0xA155B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001796")]
			[Address(RVA = "0xD97788", Offset = "0xD97788", VA = "0xD97788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA155C8", Offset = "0xA155C8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xD97790", Offset = "0xD97790", VA = "0xD97790")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xD978F8", Offset = "0xD978F8", VA = "0xD978F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xD97A60", Offset = "0xD97A60", VA = "0xD97A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xD97ABC", Offset = "0xD97ABC", VA = "0xD97ABC")]
		private void OnGemGrabbedEvent(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xD97D6C", Offset = "0xD97D6C", VA = "0xD97D6C")]
		private void OnGemDroppedEvent(GemDroppedEvent e)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xD98048", Offset = "0xD98048", VA = "0xD98048")]
		public static bool ReactibleCloseEnoughForInfuse(IGloveBlobReactable inReactable, Glove targetGlove)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xD97C18", Offset = "0xD97C18", VA = "0xD97C18")]
		public void StartPlacementFeedback(PlayerHand playerHand, IGloveBlobReactable inReactable)
		{
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xD98428", Offset = "0xD98428", VA = "0xD98428")]
		private void LoopPlacementFeedback(PlayerHand playerHand, IGloveBlobReactable inGem)
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xD986B4", Offset = "0xD986B4", VA = "0xD986B4")]
		public void PlacementFeedbackCallback()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xD98330", Offset = "0xD98330", VA = "0xD98330")]
		public void StopPlacementFeedback(PlayerHand playerHand, bool updateAnimation = true)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xD9874C", Offset = "0xD9874C", VA = "0xD9874C")]
		private void OnGemInfused(GemInfusedEvent e)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xD98790", Offset = "0xD98790", VA = "0xD98790")]
		public void SetGloveType(GemType gemShape, bool isEquippedInRightGlove)
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xD987E0", Offset = "0xD987E0", VA = "0xD987E0")]
		public void SetAbility(GloveAbility ability, bool isEquippedInRightGlove = true)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xD98938", Offset = "0xD98938", VA = "0xD98938")]
		private bool IsAbilityActive(GemType gemType)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xD989E4", Offset = "0xD989E4", VA = "0xD989E4")]
		public bool OnInputActionPressed(NeatVR_Controller.InputAction inputAction)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xD98A98", Offset = "0xD98A98", VA = "0xD98A98")]
		private void OnInfusionCompleted(GemType gemType)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xD98B9C", Offset = "0xD98B9C", VA = "0xD98B9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA155D8", Offset = "0xA155D8")]
		private IEnumerator InfuseAnimationRoutine(GemType gemType)
		{
			return null;
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xD98C54", Offset = "0xD98C54", VA = "0xD98C54")]
		public bool OnInputActionReleased(NeatVR_Controller.InputAction inputAction)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xD98D08", Offset = "0xD98D08", VA = "0xD98D08")]
		public Transform GetGemTransform()
		{
			return null;
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xD98D10", Offset = "0xD98D10", VA = "0xD98D10")]
		public Glove()
		{
		}
	}
}
namespace NeatCorp.Player.Glove.Gems
{
	[Token(Token = "0x20003E5")]
	public class BambooShard : GloveGem
	{
		[Token(Token = "0x400175C")]
		private const GemType GemTypeConstant = GemType.Bamboo;

		[Token(Token = "0x17000269")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0xD96DC0", Offset = "0xD96DC0", VA = "0xD96DC0", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xD96DC8", Offset = "0xD96DC8", VA = "0xD96DC8")]
		public BambooShard()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class CoralShard : GloveGem
	{
		[Token(Token = "0x400175D")]
		private const GemType GemTypeConstant = GemType.Coral;

		[Token(Token = "0x1700026A")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0xD96DD8", Offset = "0xD96DD8", VA = "0xD96DD8", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xD96DE0", Offset = "0xD96DE0", VA = "0xD96DE0")]
		public CoralShard()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class CrystalShard : GloveGem
	{
		[Token(Token = "0x400175E")]
		private const GemType GemTypeConstant = GemType.Crystal;

		[Token(Token = "0x1700026B")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xD96DE8", Offset = "0xD96DE8", VA = "0xD96DE8", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xD96DF0", Offset = "0xD96DF0", VA = "0xD96DF0")]
		public CrystalShard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003E8")]
	public enum GemType
	{
		[Token(Token = "0x4001760")]
		Defualt,
		[Token(Token = "0x4001761")]
		Crystal,
		[Token(Token = "0x4001762")]
		Coral,
		[Token(Token = "0x4001763")]
		Bamboo,
		[Token(Token = "0x4001764")]
		Tutorial,
		[Token(Token = "0x4001765")]
		Teleport,
		[Token(Token = "0x4001766")]
		Homeland
	}
	[Token(Token = "0x20003E9")]
	public class Gem
	{
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xD96DF8", Offset = "0xD96DF8", VA = "0xD96DF8")]
		public static bool CanBeInfusedInGlove(GemType gemType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003EA")]
	public class HomelandShard : GloveGem
	{
		[Token(Token = "0x4001767")]
		private const GemType GemTypeConstant = GemType.Homeland;

		[Token(Token = "0x1700026C")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0xD96E08", Offset = "0xD96E08", VA = "0xD96E08", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xD96E10", Offset = "0xD96E10", VA = "0xD96E10")]
		public HomelandShard()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class InfusableShard : GloveGem
	{
		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MeshRenderer shardRenderer;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Color m_centerColor;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color m_innerColor;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Color m_outerColor;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int CenterColorId;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int InnerColorId;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int OuterColorId;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x1700026D")]
		public Color CenterColor
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0xD96E18", Offset = "0xD96E18", VA = "0xD96E18")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700026E")]
		public Color InnerColor
		{
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0xD96E24", Offset = "0xD96E24", VA = "0xD96E24")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700026F")]
		public Color OuterColor
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0xD96E30", Offset = "0xD96E30", VA = "0xD96E30")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xD96E3C", Offset = "0xD96E3C", VA = "0xD96E3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xD96FF8", Offset = "0xD96FF8", VA = "0xD96FF8")]
		public void SetTarget(Vector3 targetLocation, float attractStateVal)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xD972F8", Offset = "0xD972F8", VA = "0xD972F8")]
		public void ResetTarget()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xD97450", Offset = "0xD97450", VA = "0xD97450", Slot = "10")]
		public override GloveBlobReactionColors GetReactionColors()
		{
			return default(GloveBlobReactionColors);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xD97468", Offset = "0xD97468", VA = "0xD97468")]
		public InfusableShard()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class LoopGemPlacementFeedback : GameEvent
	{
		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand hand;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticCurve;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xD97560", Offset = "0xD97560", VA = "0xD97560")]
		public LoopGemPlacementFeedback(PlayerHand hand, float amplitude, float duration, AnimationCurve hapticCurve, Action callback)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class StartGemPlacementFeedback : GameEvent
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand hand;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float amplitude;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve hapticCurve;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xD975D8", Offset = "0xD975D8", VA = "0xD975D8")]
		public StartGemPlacementFeedback(PlayerHand hand, float amplitude, float duration, AnimationCurve hapticCurve, Action callback)
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class StopGemPlacementFeedback : GameEvent
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerHand hand;

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xD97650", Offset = "0xD97650", VA = "0xD97650")]
		public StopGemPlacementFeedback(PlayerHand hand)
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class TeleportShard : InfusableShard
	{
		[Token(Token = "0x400177C")]
		private const GemType GemTypeConstant = GemType.Teleport;

		[Token(Token = "0x17000270")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xD97684", Offset = "0xD97684", VA = "0xD97684", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xD9768C", Offset = "0xD9768C", VA = "0xD9768C")]
		public TeleportShard()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class TutorialShard : InfusableShard
	{
		[Token(Token = "0x400177D")]
		private const GemType GemTypeConstant = GemType.Tutorial;

		[Token(Token = "0x17000271")]
		protected override GemType AssociatedGemType
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0xD976F0", Offset = "0xD976F0", VA = "0xD976F0", Slot = "9")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xD976F8", Offset = "0xD976F8", VA = "0xD976F8")]
		public TutorialShard()
		{
		}
	}
}
namespace NeatCorp.Player.Glove.Ability
{
	[Token(Token = "0x20003F1")]
	public class FastTravel : GloveAbility
	{
		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC528", Offset = "0x9FC528")]
		private sealed class <ReactToBeacon>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400179F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastTravel <>4__this;

			[Token(Token = "0x17000274")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F8")]
				[Address(RVA = "0xD96D40", Offset = "0xD96D40", VA = "0xD96D40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000275")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FA")]
				[Address(RVA = "0xD96DA8", Offset = "0xD96DA8", VA = "0xD96DA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xD9693C", Offset = "0xD9693C", VA = "0xD9693C")]
			[DebuggerHidden]
			public <ReactToBeacon>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xD96CC0", Offset = "0xD96CC0", VA = "0xD96CC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xD96CC4", Offset = "0xD96CC4", VA = "0xD96CC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xD96D48", Offset = "0xD96D48", VA = "0xD96D48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC538", Offset = "0x9FC538")]
		private sealed class <ChargingRoutine>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FastTravel <>4__this;

			[Token(Token = "0x17000276")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017FE")]
				[Address(RVA = "0xD96C50", Offset = "0xD96C50", VA = "0xD96C50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000277")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001800")]
				[Address(RVA = "0xD96CB8", Offset = "0xD96CB8", VA = "0xD96CB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0xD96A2C", Offset = "0xD96A2C", VA = "0xD96A2C")]
			[DebuggerHidden]
			public <ChargingRoutine>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x60017FC")]
			[Address(RVA = "0xD96B78", Offset = "0xD96B78", VA = "0xD96B78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0xD96B7C", Offset = "0xD96B7C", VA = "0xD96B7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0xD96C58", Offset = "0xD96C58", VA = "0xD96C58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400177E")]
		private const float FullyChargedDuration = 0.25f;

		[Token(Token = "0x400177F")]
		private const float AimActivationTolerance = 0.45f;

		[Token(Token = "0x4001780")]
		private const float FOVActivationTolerance = 0.45f;

		[Token(Token = "0x4001781")]
		private const float LockTolerance = 0.25f;

		[Token(Token = "0x4001782")]
		private const float ReactionTime = 0.15f;

		[Token(Token = "0x4001783")]
		private const float MaxPitchOffset = 0.1f;

		[Token(Token = "0x4001784")]
		private const float PitchFactor = 10f;

		[Token(Token = "0x4001785")]
		public const float MaxAimDistance = 100f;

		[Token(Token = "0x4001786")]
		public const float MinTargetingSqrDistance = 25f;

		[Token(Token = "0x4001787")]
		public const float MaxTargetingSqrDistance = 10000f;

		[Token(Token = "0x4001788")]
		public const GemType AbilityGemeType = GemType.Teleport;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_aimDirection;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandAnimator m_playerHandAnimator;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_teleportSoundClip;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_chargingParticleSystem;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CrystalBeacon> m_beacons;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CrystalBeacon m_lastSelectedBeacon;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CrystalBeacon m_selectedBeacon;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_wasArcVisible;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_hasSelectedBeacon;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool m_hasChangedSelection;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		private bool m_isSelectionLocked;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int currentlyTestedBeaconIndex;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private OptimizedCollection<CrystalBeacon> m_beaconsWithinTarget;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OptimizedCollection<CrystalBeacon> m_beaconsToRegister;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_chargeDuration;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isButtonDown;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool m_isWaitingForReaction;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CrystalBeacon m_reactingToBeacon;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_chargingRoutine;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_reactionRoutine;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly WaitForSeconds m_waitForReactionDuration;

		[Token(Token = "0x17000272")]
		public Ray AimRay
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0xD94B58", Offset = "0xD94B58", VA = "0xD94B58")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x17000273")]
		public override GemType AssociatedGemType
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0xD94BE4", Offset = "0xD94BE4", VA = "0xD94BE4", Slot = "4")]
			get
			{
				return default(GemType);
			}
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xD94BEC", Offset = "0xD94BEC", VA = "0xD94BEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xD94CF4", Offset = "0xD94CF4", VA = "0xD94CF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xD94DFC", Offset = "0xD94DFC", VA = "0xD94DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xD95374", Offset = "0xD95374", VA = "0xD95374")]
		private void OnCrystalBeaconEnabled(CrystalBeaconEnabledEvent e)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xD953EC", Offset = "0xD953EC", VA = "0xD953EC")]
		private void OnCrystalBeaconDisabled(CrystalBeaconDisabledEvent e)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xD954D8", Offset = "0xD954D8", VA = "0xD954D8", Slot = "5")]
		public override void Activate(bool isEquippedInRightGlove)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xD955F8", Offset = "0xD955F8", VA = "0xD955F8", Slot = "6")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xD94F48", Offset = "0xD94F48", VA = "0xD94F48")]
		private void ResetEvaluation()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xD956F4", Offset = "0xD956F4", VA = "0xD956F4")]
		private void SnapLocomotionArcToSelected()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xD95840", Offset = "0xD95840", VA = "0xD95840")]
		private void ResetLocomotionArc(bool shouldHide = false)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xD94F50", Offset = "0xD94F50", VA = "0xD94F50")]
		private void FindSelectedBeacon()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xD96088", Offset = "0xD96088", VA = "0xD96088")]
		private void SetSelectedBeacon(CrystalBeacon beacon, bool hasSelection)
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xD94F18", Offset = "0xD94F18", VA = "0xD94F18")]
		private void ClearSelected()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xD94EA0", Offset = "0xD94EA0", VA = "0xD94EA0")]
		private void ClearSelectedBeacon()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xD95A64", Offset = "0xD95A64", VA = "0xD95A64")]
		private bool IsWithinTargetingDistance(Vector3 originToBeacon)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xD95AB0", Offset = "0xD95AB0", VA = "0xD95AB0")]
		private bool IsWithinSightDirection(Vector3 originToBeacon, float tolerance = 0.45f)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xD96188", Offset = "0xD96188", VA = "0xD96188")]
		private bool IsWithinAimDirection(CrystalBeacon beacon, float tolerance = 0.45f)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xD95BB0", Offset = "0xD95BB0", VA = "0xD95BB0")]
		private bool IsWithinAimDirection(Vector3 originToBeacon, float tolerance = 0.45f)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xD96084", Offset = "0xD96084", VA = "0xD96084")]
		private void UpdateBeaconRegistry()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xD95CB4", Offset = "0xD95CB4", VA = "0xD95CB4")]
		private void EvaluateTargetedBeacons()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xD95E1C", Offset = "0xD95E1C", VA = "0xD95E1C")]
		private void UpdateBeaconSelection()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xD9538C", Offset = "0xD9538C", VA = "0xD9538C")]
		public void RegisterBeacon(CrystalBeacon beacon)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xD95404", Offset = "0xD95404", VA = "0xD95404")]
		public void UnregisterBeacon(CrystalBeacon beacon)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xD96310", Offset = "0xD96310", VA = "0xD96310")]
		private void AddRegisteredBeacons()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xD95970", Offset = "0xD95970", VA = "0xD95970")]
		private void ClearOutOldBeacons()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xD94B5C", Offset = "0xD94B5C", VA = "0xD94B5C")]
		private Ray GetAimRay()
		{
			return default(Ray);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xD9525C", Offset = "0xD9525C", VA = "0xD9525C")]
		private bool ValidateLock()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xD9657C", Offset = "0xD9657C", VA = "0xD9657C", Slot = "7")]
		public override bool OnTeleportPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xD952F4", Offset = "0xD952F4", VA = "0xD952F4")]
		private void OnTeleportUpdate()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xD9672C", Offset = "0xD9672C", VA = "0xD9672C", Slot = "8")]
		public override bool OnTeleportReleased()
		{
			return default(bool);
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xD96598", Offset = "0xD96598", VA = "0xD96598")]
		private void UpdateButtonState(bool shouldBeDown)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xD96438", Offset = "0xD96438", VA = "0xD96438")]
		private void StartReactionRoutine(CrystalBeacon beacon)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xD968C0", Offset = "0xD968C0", VA = "0xD968C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1568C", Offset = "0xA1568C")]
		private IEnumerator ReactToBeacon()
		{
			return null;
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xD95F2C", Offset = "0xD95F2C", VA = "0xD95F2C")]
		private void EvaluateReaction()
		{
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xD96648", Offset = "0xD96648", VA = "0xD96648")]
		private void TryStartCharging()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xD964A0", Offset = "0xD964A0", VA = "0xD964A0")]
		private void TryStopCharging()
		{
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xD96968", Offset = "0xD96968", VA = "0xD96968")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA156F0", Offset = "0xA156F0")]
		private IEnumerator ChargingRoutine()
		{
			return null;
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xD96878", Offset = "0xD96878", VA = "0xD96878")]
		private void StopParticleSystem(ParticleSystem system)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xD969E4", Offset = "0xD969E4", VA = "0xD969E4")]
		private void PlayParticleSystem(ParticleSystem system)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xD96A58", Offset = "0xD96A58", VA = "0xD96A58")]
		public FastTravel()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class FastTravelAbilityActivated : GameEvent
	{
		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastTravel FastTravel;

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xD955C4", Offset = "0xD955C4", VA = "0xD955C4")]
		public FastTravelAbilityActivated(FastTravel fastTravel)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class FastTravelAbilityDeactivated : GameEvent
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastTravel FastTravel;

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xD956C0", Offset = "0xD956C0", VA = "0xD956C0")]
		public FastTravelAbilityDeactivated(FastTravel fastTravel)
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public abstract class GloveAbility : MonoBehaviour
	{
		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool m_isEquippedInRightGlove;

		[Token(Token = "0x17000278")]
		public abstract GemType AssociatedGemType
		{
			[Token(Token = "0x6001803")]
			get;
		}

		[Token(Token = "0x6001804")]
		public abstract void Activate(bool isEquippedInRightGlove);

		[Token(Token = "0x6001805")]
		public abstract void Deactivate();

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xD96DB0", Offset = "0xD96DB0", VA = "0xD96DB0", Slot = "7")]
		public virtual bool OnTeleportPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xD96DB8", Offset = "0xD96DB8", VA = "0xD96DB8", Slot = "8")]
		public virtual bool OnTeleportReleased()
		{
			return default(bool);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xD96B70", Offset = "0xD96B70", VA = "0xD96B70")]
		protected GloveAbility()
		{
		}
	}
}
namespace NeatCorp.Player.PlayerDebug
{
	[Token(Token = "0x20003F7")]
	public class DebugInputControllerUI : MonoBehaviour
	{
		[Token(Token = "0x40017A8")]
		private const float WIDTH = 200f;

		[Token(Token = "0x40017A9")]
		private const float HEIGHT = 500f;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_isRightHand;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_posx;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_posy;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NeatVR_Controller m_controller;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05204", Offset = "0xA05204")]
		private bool <ShouldShow>k__BackingField;

		[Token(Token = "0x17000279")]
		public bool ShouldShow
		{
			[Token(Token = "0x6001809")]
			[Address(RVA = "0xD9A234", Offset = "0xD9A234", VA = "0xD9A234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA157F4", Offset = "0xA157F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180A")]
			[Address(RVA = "0xD9A23C", Offset = "0xD9A23C", VA = "0xD9A23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15804", Offset = "0xA15804")]
			set
			{
			}
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xD9A248", Offset = "0xD9A248", VA = "0xD9A248")]
		public void Initialize(NeatVR_Controller controller, bool isRightHand)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xD9A2C8", Offset = "0xD9A2C8", VA = "0xD9A2C8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xD9A80C", Offset = "0xD9A80C", VA = "0xD9A80C")]
		public DebugInputControllerUI()
		{
		}
	}
}
namespace NeatCorp.Utility
{
	[Token(Token = "0x20003F8")]
	public class FollowCamera : MonoBehaviour
	{
		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_cameraTransform;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xE1CC30", Offset = "0xE1CC30", VA = "0xE1CC30")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xE1CDB0", Offset = "0xE1CDB0", VA = "0xE1CDB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xE1CFCC", Offset = "0xE1CFCC", VA = "0xE1CFCC")]
		public FollowCamera()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public class SerializableDictionary<TKey, TValue> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TKey> keys;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TValue> values;

		[Token(Token = "0x6001811")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001812")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001813")]
		public SerializableDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class SerializableSystemType
	{
		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_Name;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_AssemblyQualifiedName;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_AssemblyName;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type m_SystemType;

		[Token(Token = "0x1700027A")]
		public Type SystemType
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0xE1D1DC", Offset = "0xE1D1DC", VA = "0xE1D1DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xE1D260", Offset = "0xE1D260", VA = "0xE1D260")]
		private void GetSystemType()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xE1D2F4", Offset = "0xE1D2F4", VA = "0xE1D2F4")]
		public bool Equals(SerializableSystemType _Object)
		{
			return default(bool);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xE1D344", Offset = "0xE1D344", VA = "0xE1D344")]
		public static bool operator ==(SerializableSystemType a, SerializableSystemType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003FB")]
	public class SoilHelper : MonoBehaviour
	{
		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_disableOnSoilBake;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_enableOnSoilBake;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool m_previouslyActive;

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xE1D370", Offset = "0xE1D370", VA = "0xE1D370")]
		public SoilHelper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FC")]
	public struct SplinePoint
	{
		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 m_position;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 m_tangent;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 m_inverseTangent;

		[Token(Token = "0x1700027B")]
		public Vector3 Position
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xAD8F0C", Offset = "0xAD8F0C", VA = "0xAD8F0C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xAD8F18", Offset = "0xAD8F18", VA = "0xAD8F18")]
			set
			{
			}
		}

		[Token(Token = "0x1700027C")]
		public Vector3 Tangent
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xAD8F24", Offset = "0xAD8F24", VA = "0xAD8F24")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xAD8F30", Offset = "0xAD8F30", VA = "0xAD8F30")]
			set
			{
			}
		}

		[Token(Token = "0x1700027D")]
		public Vector3 InverseTangent
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xAD8F44", Offset = "0xAD8F44", VA = "0xAD8F44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xAD8F50", Offset = "0xAD8F50", VA = "0xAD8F50")]
		public SplinePoint(Vector3 position, Vector3 tangent)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xAD8F58", Offset = "0xAD8F58", VA = "0xAD8F58")]
		public void Set(Vector3 position, Vector3 tangent)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xAD8F6C", Offset = "0xAD8F6C", VA = "0xAD8F6C")]
		public void SetPosition(Vector3 val)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xAD8F78", Offset = "0xAD8F78", VA = "0xAD8F78")]
		public void SetTangent(Vector3 val)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xAD8F8C", Offset = "0xAD8F8C", VA = "0xAD8F8C")]
		private void SetInverseTangent()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class Spline : MonoBehaviour
	{
		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SplinePoint[] points;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_simulate;

		[Token(Token = "0x1700027E")]
		public bool Simulate
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0xE1D378", Offset = "0xE1D378", VA = "0xE1D378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027F")]
		public int ControlPointCount
		{
			[Token(Token = "0x6001824")]
			[Address(RVA = "0xE1D380", Offset = "0xE1D380", VA = "0xE1D380")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xE1D398", Offset = "0xE1D398", VA = "0xE1D398")]
		public SplinePoint GetControlPoint(int index)
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xE1D5BC", Offset = "0xE1D5BC", VA = "0xE1D5BC")]
		public int GetNextPointIndex(int i)
		{
			return default(int);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xE1D5D8", Offset = "0xE1D5D8", VA = "0xE1D5D8")]
		public Vector3 GetVelocity(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xE1D888", Offset = "0xE1D888", VA = "0xE1D888")]
		public Vector3 GetPoint(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xE1D86C", Offset = "0xE1D86C", VA = "0xE1D86C")]
		public SplinePoint GetEndPoint()
		{
			return default(SplinePoint);
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xE1DA88", Offset = "0xE1DA88", VA = "0xE1DA88")]
		public Vector3 GetInverseTangent(Vector3 end, Vector3 tangent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xE1DB50", Offset = "0xE1DB50", VA = "0xE1DB50")]
		public Vector3 GetDirection(float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xE1DB80", Offset = "0xE1DB80", VA = "0xE1DB80")]
		public void AddControlPoint()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xE1DC68", Offset = "0xE1DC68", VA = "0xE1DC68")]
		public void AddControlPointAt(Vector3 pos)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xE1DF7C", Offset = "0xE1DF7C", VA = "0xE1DF7C")]
		public void SetControlPoint(int index, Vector3 pos)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xE1DFCC", Offset = "0xE1DFCC", VA = "0xE1DFCC")]
		public void SetControlTangent(int index, Vector3 pos)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xE1E020", Offset = "0xE1E020", VA = "0xE1E020")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xE1E074", Offset = "0xE1E074", VA = "0xE1E074")]
		public Spline()
		{
		}
	}
}
namespace NeatCorp.Utility.Phsyics
{
	[Token(Token = "0x20003FE")]
	public struct LayerData
	{
		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform Transform;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA052C4", Offset = "0xA052C4")]
		private int <Layer>k__BackingField;

		[Token(Token = "0x17000280")]
		public int Layer
		{
			[Token(Token = "0x6001832")]
			[Address(RVA = "0xAD8EC8", Offset = "0xAD8EC8", VA = "0xAD8EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15814", Offset = "0xA15814")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001833")]
			[Address(RVA = "0xAD8ED0", Offset = "0xAD8ED0", VA = "0xAD8ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15824", Offset = "0xA15824")]
			private set
			{
			}
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xAD8ED8", Offset = "0xAD8ED8", VA = "0xAD8ED8")]
		public void Set(ref Transform transform, int layer)
		{
		}
	}
}
namespace NeatCorp.Utility.Navigation
{
	[Token(Token = "0x20003FF")]
	public class ActivateWhenBakingNavMesh : MonoBehaviour
	{
		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool gameObjectWasActive;

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xE1CFDC", Offset = "0xE1CFDC", VA = "0xE1CFDC")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xE1D044", Offset = "0xE1D044", VA = "0xE1D044")]
		public ActivateWhenBakingNavMesh()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public enum NavMeshHelperType
	{
		[Token(Token = "0x40017C3")]
		UseExistingMesh,
		[Token(Token = "0x40017C4")]
		GenerateMeshFromCollider
	}
	[Token(Token = "0x2000401")]
	[ExecuteInEditMode]
	public class NavMeshHelper : MonoBehaviour
	{
		[Token(Token = "0x40017C5")]
		private const string GeneratedMeshObjectName = "NavMeshHelper";

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshHelperType m_helperMethod;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_meshObject;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SerializableMeshData m_meshData;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh m_generatedMesh;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_rendererEnabledBeforeBuild;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_needsUpdate;

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xE1D04C", Offset = "0xE1D04C", VA = "0xE1D04C")]
		private void OnAwake()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xE1D054", Offset = "0xE1D054", VA = "0xE1D054")]
		private void SetRendererEnabled(bool shouldBeEnabled)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xE1D0FC", Offset = "0xE1D0FC", VA = "0xE1D0FC")]
		public NavMeshHelper()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class SerializableMeshData : MonoBehaviour
	{
		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] Verticies;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] Triangles;

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xE1D10C", Offset = "0xE1D10C", VA = "0xE1D10C")]
		public SerializableMeshData()
		{
		}
	}
}
namespace NeatCorp.Utility.AnimationCurve
{
	[Token(Token = "0x2000403")]
	public static class AnimationCurveExtensions
	{
		[Token(Token = "0x600183B")]
		[Address(RVA = "0xE1CBDC", Offset = "0xE1CBDC", VA = "0xE1CBDC")]
		public static float GetStepChange(this UnityEngine.AnimationCurve curve, float beginTime, float endTime)
		{
			return default(float);
		}
	}
}
namespace NeatCorp.Merchant
{
	[Token(Token = "0x2000404")]
	public class Calendar : MonoBehaviour
	{
		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_crosses;

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xD34D88", Offset = "0xD34D88", VA = "0xD34D88")]
		public void UpdateCrossedDays(int dayCount)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xD34E1C", Offset = "0xD34E1C", VA = "0xD34E1C")]
		public Calendar()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public enum PurchasableUpgradeType
	{
		[Token(Token = "0x40017D3")]
		Undefined = 10,
		[Token(Token = "0x40017D4")]
		WaterCan = 0,
		[Token(Token = "0x40017D5")]
		FishingRod = 4,
		[Token(Token = "0x40017D6")]
		Axe = 7,
		[Token(Token = "0x40017D7")]
		Hoe = 1
	}
	[Token(Token = "0x2000406")]
	public class ToolsUpgradeMerchantBehavior : MerchantBehavior
	{
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC568", Offset = "0x9FC568")]
		private sealed class <SelectUpgrade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x40017E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PurchaseableToolUpgrade toolUpgrade;

			[Token(Token = "0x40017E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CurrencyCost cost;

			[Token(Token = "0x40017E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <origScale>5__2;

			[Token(Token = "0x40017E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x40017E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <targetScale>5__4;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001854")]
				[Address(RVA = "0xD37434", Offset = "0xD37434", VA = "0xD37434", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001856")]
				[Address(RVA = "0xD3749C", Offset = "0xD3749C", VA = "0xD3749C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001851")]
			[Address(RVA = "0xD352E0", Offset = "0xD352E0", VA = "0xD352E0")]
			[DebuggerHidden]
			public <SelectUpgrade>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0xD36DEC", Offset = "0xD36DEC", VA = "0xD36DEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001853")]
			[Address(RVA = "0xD36DF0", Offset = "0xD36DF0", VA = "0xD36DF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0xD3743C", Offset = "0xD3743C", VA = "0xD3743C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC578", Offset = "0x9FC578")]
		private sealed class <PerformToolUpgradeAnimation>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <origBubbleScale>5__2;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <bubbleScale>5__3;

			[Token(Token = "0x40017EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <timeElapsed>5__4;

			[Token(Token = "0x40017EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <targetScale>5__5;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185A")]
				[Address(RVA = "0xD36D7C", Offset = "0xD36D7C", VA = "0xD36D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185C")]
				[Address(RVA = "0xD36DE4", Offset = "0xD36DE4", VA = "0xD36DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001857")]
			[Address(RVA = "0xD353DC", Offset = "0xD353DC", VA = "0xD353DC")]
			[DebuggerHidden]
			public <PerformToolUpgradeAnimation>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0xD36724", Offset = "0xD36724", VA = "0xD36724", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001859")]
			[Address(RVA = "0xD36728", Offset = "0xD36728", VA = "0xD36728", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0xD36D84", Offset = "0xD36D84", VA = "0xD36D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC588", Offset = "0x9FC588")]
		private sealed class <DeselectUpgrade>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x40017F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Purchaseable thing;

			[Token(Token = "0x40017F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <bubbleScale>5__2;

			[Token(Token = "0x40017F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <timeElapsed>5__3;

			[Token(Token = "0x40017F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <targetScale>5__4;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001860")]
				[Address(RVA = "0xD366B4", Offset = "0xD366B4", VA = "0xD366B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001862")]
				[Address(RVA = "0xD3671C", Offset = "0xD3671C", VA = "0xD3671C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185D")]
			[Address(RVA = "0xD35408", Offset = "0xD35408", VA = "0xD35408")]
			[DebuggerHidden]
			public <DeselectUpgrade>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0xD36030", Offset = "0xD36030", VA = "0xD36030", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185F")]
			[Address(RVA = "0xD36034", Offset = "0xD36034", VA = "0xD36034", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001861")]
			[Address(RVA = "0xD366BC", Offset = "0xD366BC", VA = "0xD366BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC598", Offset = "0x9FC598")]
		private sealed class <TryShowBubble>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40017F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40017F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40017F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool shouldShow;

			[Token(Token = "0x40017FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ToolsUpgradeMerchantBehavior <>4__this;

			[Token(Token = "0x40017FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timeElapsed>5__2;

			[Token(Token = "0x40017FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <targetScale>5__3;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001866")]
				[Address(RVA = "0xD37934", Offset = "0xD37934", VA = "0xD37934", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001868")]
				[Address(RVA = "0xD3799C", Offset = "0xD3799C", VA = "0xD3799C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001863")]
			[Address(RVA = "0xD354C4", Offset = "0xD354C4", VA = "0xD354C4")]
			[DebuggerHidden]
			public <TryShowBubble>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0xD374A4", Offset = "0xD374A4", VA = "0xD374A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001865")]
			[Address(RVA = "0xD374A8", Offset = "0xD374A8", VA = "0xD374A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001867")]
			[Address(RVA = "0xD3793C", Offset = "0xD3793C", VA = "0xD3793C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ToolsUpgradeMerchantSpeechBubble[] m_speechBubbles;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ToolsUpgradeMerchantSpeechBubble m_currentSpeechBubble;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ObjectContainer m_container;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_hasTool;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Tool_Base m_toolToUpgrade;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PurchaseableToolUpgrade m_currentlyDisplayedUpgrade;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_isPerformingToolUpgrade;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool m_shouldTryShowBubbledObject;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine m_tryShowBubbleRoutine;

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xD34E24", Offset = "0xD34E24", VA = "0xD34E24")]
		private void Awake()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xD34E94", Offset = "0xD34E94", VA = "0xD34E94", Slot = "7")]
		public override void PlayerPointedAtThing(Purchaseable upgrade, CurrencyCost cost, bool canAffordThing)
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xD35240", Offset = "0xD35240", VA = "0xD35240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15844", Offset = "0xA15844")]
		private IEnumerator SelectUpgrade(PurchaseableToolUpgrade toolUpgrade, CurrencyCost cost)
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xD3530C", Offset = "0xD3530C", VA = "0xD3530C")]
		public void PerformUpgrade()
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xD35360", Offset = "0xD35360", VA = "0xD35360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA158A8", Offset = "0xA158A8")]
		private IEnumerator PerformToolUpgradeAnimation()
		{
			return null;
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xD351A8", Offset = "0xD351A8", VA = "0xD351A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1590C", Offset = "0xA1590C")]
		private IEnumerator DeselectUpgrade(Purchaseable thing)
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xD35434", Offset = "0xD35434", VA = "0xD35434")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15970", Offset = "0xA15970")]
		private IEnumerator TryShowBubble(bool shouldShow)
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xD354F0", Offset = "0xD354F0", VA = "0xD354F0")]
		private bool TryShowSpeechBubbleForUpgrade(PurchaseableToolUpgrade upgrade)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xD35708", Offset = "0xD35708", VA = "0xD35708")]
		private void ResetSpeechBubbleAndUpgrade()
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xD35664", Offset = "0xD35664", VA = "0xD35664")]
		private void HideCurrentSpeechBubble()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xD35590", Offset = "0xD35590", VA = "0xD35590")]
		private bool TryGetSpeechBubbleForUpgrade(PurchasableUpgradeType type, int level, out ToolsUpgradeMerchantSpeechBubble bubble)
		{
			return default(bool);
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xD35744", Offset = "0xD35744", VA = "0xD35744", Slot = "8")]
		public override void SetPaymentStatus(bool b)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xD357F0", Offset = "0xD357F0", VA = "0xD357F0", Slot = "11")]
		public override bool HasQualifiedPayment()
		{
			return default(bool);
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xD357F8", Offset = "0xD357F8", VA = "0xD357F8", Slot = "6")]
		public override void SetInsufficientPayement()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xD357FC", Offset = "0xD357FC", VA = "0xD357FC", Slot = "5")]
		protected override void ResetOnLeftBoat()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xD35A3C", Offset = "0xD35A3C", VA = "0xD35A3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xD35DA4", Offset = "0xD35DA4", VA = "0xD35DA4")]
		private bool IsMatchingDisplayedUpgrade(ITool tool)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xD35EF0", Offset = "0xD35EF0", VA = "0xD35EF0", Slot = "10")]
		public override void FinishAnyPendingPurchase()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xD35FA4", Offset = "0xD35FA4", VA = "0xD35FA4")]
		public ToolsUpgradeMerchantBehavior()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040B")]
	public class UpgradeToolsStockState : ComponentState
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReferenceSerializable[] UpgradeItems;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int LastRestockDay;

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xD91C70", Offset = "0xD91C70", VA = "0xD91C70")]
		public UpgradeToolsStockState()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xD91B4C", Offset = "0xD91B4C", VA = "0xD91B4C")]
		public UpgradeToolsStockState(AssetReference[] merchandiseItems, int lastRestockDay)
		{
		}
	}
	[Token(Token = "0x200040C")]
	public enum MerchantType
	{
		[Token(Token = "0x4001800")]
		General,
		[Token(Token = "0x4001801")]
		Tools,
		[Token(Token = "0x4001802")]
		Seed,
		[Token(Token = "0x4001803")]
		Furniture
	}
}
namespace NeatCorp.Merchant.Trading
{
	[Token(Token = "0x200040D")]
	public struct ItemProbability
	{
		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int StartIndex;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Range;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Key;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xAD6D7C", Offset = "0xAD6D7C", VA = "0xAD6D7C")]
		public ItemProbability(int startIndex, int range, string key)
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class MerchantSpeechBubbleBase : MonoBehaviour
	{
		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Color defaultTextColor;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Color paidTextColor;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Color paidIconColor;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected float showBubbleDuration;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		protected float hideBubbleDuration;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected AnimationCurve showBubbleAnimationCurveXAxis;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected AnimationCurve hideBubbleAnimationCurveXAxis;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected AnimationCurve showBubbleAnimationCurveYAxis;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected AnimationCurve hideBubbleAnimationCurveYAxis;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Color defaultIconColor;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool initialized;

		[Token(Token = "0x17000289")]
		public AnimationCurve ShowBubbleCurveX
		{
			[Token(Token = "0x600186C")]
			[Address(RVA = "0xD38088", Offset = "0xD38088", VA = "0xD38088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		public AnimationCurve HideBubbleCurveX
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0xD38090", Offset = "0xD38090", VA = "0xD38090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028B")]
		public AnimationCurve ShowBubbleCurveY
		{
			[Token(Token = "0x600186E")]
			[Address(RVA = "0xD38098", Offset = "0xD38098", VA = "0xD38098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public AnimationCurve HideBubbleCurveY
		{
			[Token(Token = "0x600186F")]
			[Address(RVA = "0xD380A0", Offset = "0xD380A0", VA = "0xD380A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028D")]
		public float ShowBubbleDuration
		{
			[Token(Token = "0x6001870")]
			[Address(RVA = "0xD380A8", Offset = "0xD380A8", VA = "0xD380A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028E")]
		public float HideBubbleDuration
		{
			[Token(Token = "0x6001871")]
			[Address(RVA = "0xD380B0", Offset = "0xD380B0", VA = "0xD380B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xD380B8", Offset = "0xD380B8", VA = "0xD380B8", Slot = "4")]
		public virtual void ShowBubble()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xD381DC", Offset = "0xD381DC", VA = "0xD381DC", Slot = "5")]
		public virtual void HideBubble()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xD38220", Offset = "0xD38220", VA = "0xD38220", Slot = "6")]
		public virtual void ResetPricesPaid()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xD38280", Offset = "0xD38280", VA = "0xD38280")]
		public MerchantSpeechBubbleBase()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class MerchantStockManager : StockManagerBase
	{
		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC5A8", Offset = "0x9FC5A8")]
		private sealed class <RestockRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001820")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MerchantStockManager <>4__this;

			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int dayCount;

			[Token(Token = "0x17000290")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001897")]
				[Address(RVA = "0xD8F998", Offset = "0xD8F998", VA = "0xD8F998", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000291")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001899")]
				[Address(RVA = "0xD8FA00", Offset = "0xD8FA00", VA = "0xD8FA00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0xD8F8D0", Offset = "0xD8F8D0", VA = "0xD8F8D0")]
			[DebuggerHidden]
			public <RestockRoutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001895")]
			[Address(RVA = "0xD8F8FC", Offset = "0xD8F8FC", VA = "0xD8F8FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001896")]
			[Address(RVA = "0xD8F900", Offset = "0xD8F900", VA = "0xD8F900", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001898")]
			[Address(RVA = "0xD8F9A0", Offset = "0xD8F9A0", VA = "0xD8F9A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int RestockDayInterval;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Merchandise m_merchandise;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MerchantStock m_merchantStock;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Calendar m_calendar;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05424", Offset = "0xA05424")]
		private Transform[] m_largePositions;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform[] m_smallPositions;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int m_lastRestockDay;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_smallItemStockSize;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_largeItemStockSize;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OptimizedCollection<MerchandiseItem> m_generatedSmallMerchandiseItems;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OptimizedCollection<MerchandiseItem> m_generatedLargeMerchandiseItems;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private DateTime lastTimeStockWasRandomized;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_waitingForRestock;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine m_restockRoutine;

		[Token(Token = "0x1700028F")]
		public bool AllowedRestock
		{
			[Token(Token = "0x6001876")]
			[Address(RVA = "0xD385E8", Offset = "0xD385E8", VA = "0xD385E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xD3865C", Offset = "0xD3865C", VA = "0xD3865C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xD3874C", Offset = "0xD3874C", VA = "0xD3874C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xD38848", Offset = "0xD38848", VA = "0xD38848", Slot = "15")]
		protected override void TryInitializeSlots()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xD38920", Offset = "0xD38920", VA = "0xD38920", Slot = "7")]
		protected override void SetGeneratedMerchandiseSize()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xD389DC", Offset = "0xD389DC", VA = "0xD389DC")]
		private void OnNewDay(int dayCount)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xD38A98", Offset = "0xD38A98", VA = "0xD38A98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15B14", Offset = "0xA15B14")]
		private IEnumerator RestockRoutine(int dayCount)
		{
			return null;
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xD38B24", Offset = "0xD38B24", VA = "0xD38B24", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xD38C18", Offset = "0xD38C18", VA = "0xD38C18", Slot = "8")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xD39120", Offset = "0xD39120", VA = "0xD39120")]
		private void RestockOnRealTime(MerchantStockState currentState)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xD38F4C", Offset = "0xD38F4C", VA = "0xD38F4C")]
		private AssetReference[] GetAllAvailableStockFromState(MerchantStockState currentState)
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xD38DD0", Offset = "0xD38DD0", VA = "0xD38DD0")]
		private void MoveMerchantGoods()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xD39224", Offset = "0xD39224", VA = "0xD39224", Slot = "12")]
		public override void GenerateNewStock()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xD3927C", Offset = "0xD3927C", VA = "0xD3927C")]
		private void RandomizeCurrentStock()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xD39564", Offset = "0xD39564", VA = "0xD39564")]
		private MerchandiseItem GetGeneratedItemByProbability(bool isLargeItem, int totalItemProbabilityAmount, List<ItemProbability> itemProbabilities)
		{
			return default(MerchandiseItem);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xD397B8", Offset = "0xD397B8", VA = "0xD397B8", Slot = "13")]
		protected override void InstantiateGeneratedStock()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xD39948", Offset = "0xD39948", VA = "0xD39948", Slot = "14")]
		protected override void HandleStockInstantiation(AssetReference[] items)
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xD39C00", Offset = "0xD39C00", VA = "0xD39C00")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA15B78", Offset = "0xA15B78")]
		private void EditorInstatiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xD399EC", Offset = "0xD399EC", VA = "0xD399EC")]
		private void RuntimeInstantiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xD39C04", Offset = "0xD39C04", VA = "0xD39C04", Slot = "18")]
		protected override void OnPostObjectsSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xD39FB4", Offset = "0xD39FB4", VA = "0xD39FB4")]
		private bool TryAddGeneratedItemToStock(bool isLarge, AssetReference assetRef)
		{
			return default(bool);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xD3A08C", Offset = "0xD3A08C", VA = "0xD3A08C")]
		private bool TryGetItemFromMerchandise(bool isLarge, AssetReference assetRef, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xD3A0F4", Offset = "0xD3A0F4", VA = "0xD3A0F4", Slot = "20")]
		protected override void StockGenerationCompleted()
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xD39620", Offset = "0xD39620", VA = "0xD39620")]
		private bool TryGetRandomItemByProbability(bool isLargeItem, int totalAmount, List<ItemProbability> itemProbabilities, out MerchandiseItem randomizedItem)
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xD3A160", Offset = "0xD3A160", VA = "0xD3A160")]
		private bool ItemIsUnlocked(MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xD3A228", Offset = "0xD3A228", VA = "0xD3A228", Slot = "21")]
		public override ItemCost GetPriceForItem(Purchaseable p)
		{
			return default(ItemCost);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xD3A3C4", Offset = "0xD3A3C4", VA = "0xD3A3C4", Slot = "23")]
		public override void RemoveItemFromStock(Purchaseable p)
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xD3A54C", Offset = "0xD3A54C", VA = "0xD3A54C")]
		private bool TryRemoveAssetReferenceFromCollection(ref OptimizedCollection<MerchandiseItem> items, AssetReference assetRef)
		{
			return default(bool);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xD3A65C", Offset = "0xD3A65C", VA = "0xD3A65C", Slot = "24")]
		public override bool IsStockEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xD3A738", Offset = "0xD3A738", VA = "0xD3A738")]
		public MerchantStockManager()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class StockManagerBase : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001824")]
		private const int StockSize = 4;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_initialized;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<GameObject> m_spawnedObjects;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Transform[] m_slots;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int m_currentStockSize;

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xD8FC88", Offset = "0xD8FC88", VA = "0xD8FC88", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xD8FDDC", Offset = "0xD8FDDC", VA = "0xD8FDDC", Slot = "7")]
		protected virtual void SetGeneratedMerchandiseSize()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xD8FE3C", Offset = "0xD8FE3C", VA = "0xD8FE3C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xD8FEA8", Offset = "0xD8FEA8", VA = "0xD8FEA8", Slot = "8")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xD8FEC0", Offset = "0xD8FEC0", VA = "0xD8FEC0", Slot = "9")]
		protected virtual Merchandise GetMerchandise()
		{
			return null;
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xD8FF2C", Offset = "0xD8FF2C", VA = "0xD8FF2C", Slot = "10")]
		protected virtual BaseStock GetStock()
		{
			return null;
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xD8FF98", Offset = "0xD8FF98", VA = "0xD8FF98", Slot = "11")]
		protected unsafe virtual ref OptimizedCollection<MerchandiseItem> GetGeneratedMerchandiseItems()
		{
			return ref *(OptimizedCollection<MerchandiseItem>*)null;
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xD90004", Offset = "0xD90004", VA = "0xD90004", Slot = "12")]
		public virtual void GenerateNewStock()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xD90014", Offset = "0xD90014", VA = "0xD90014", Slot = "13")]
		protected virtual void InstantiateGeneratedStock()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xD90140", Offset = "0xD90140", VA = "0xD90140", Slot = "14")]
		protected virtual void HandleStockInstantiation(AssetReference[] items)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xD903C0", Offset = "0xD903C0", VA = "0xD903C0", Slot = "15")]
		protected virtual void TryInitializeSlots()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xD9043C", Offset = "0xD9043C", VA = "0xD9043C", Slot = "16")]
		protected virtual bool TryGetPurPurchaseable(GameObject spawnedItem, out Purchaseable purchaseable)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xD904DC", Offset = "0xD904DC", VA = "0xD904DC", Slot = "17")]
		protected virtual void ClearMerchendiseItems()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xD9053C", Offset = "0xD9053C", VA = "0xD9053C")]
		protected void PlaceItemBasedOnStashableBounds(Purchaseable spawnedPurchasable)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xD8FCC8", Offset = "0xD8FCC8", VA = "0xD8FCC8")]
		protected void RemoveSlotChildren()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xD901B0", Offset = "0xD901B0", VA = "0xD901B0")]
		private void RuntimeInstantiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xD907F0", Offset = "0xD907F0", VA = "0xD907F0", Slot = "18")]
		protected virtual void OnPostObjectsSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xD90B20", Offset = "0xD90B20", VA = "0xD90B20", Slot = "19")]
		protected virtual void AddGeneratedItemToStock(AssetReference assetRef)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xD90BFC", Offset = "0xD90BFC", VA = "0xD90BFC", Slot = "20")]
		protected virtual void StockGenerationCompleted()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xD90C5C", Offset = "0xD90C5C", VA = "0xD90C5C")]
		private bool ItemIsUnlocked(MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xD90D24", Offset = "0xD90D24", VA = "0xD90D24", Slot = "21")]
		public virtual ItemCost GetPriceForItem(Purchaseable p)
		{
			return default(ItemCost);
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xD90D30", Offset = "0xD90D30", VA = "0xD90D30", Slot = "22")]
		public virtual CurrencyCost GetCurrencyPriceForItem(Purchaseable p)
		{
			return default(CurrencyCost);
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD90D54", Offset = "0xD90D54", VA = "0xD90D54", Slot = "23")]
		public virtual void RemoveItemFromStock(Purchaseable p)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD90F90", Offset = "0xD90F90", VA = "0xD90F90", Slot = "24")]
		public virtual bool IsStockEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xD9071C", Offset = "0xD9071C", VA = "0xD9071C")]
		public void RemoveSpawnedObjects()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xD9103C", Offset = "0xD9103C", VA = "0xD9103C")]
		public StockManagerBase()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class ToolsUpgradeMerchantSpeechBubble : MerchantSpeechBubbleBase
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TextMeshPro currencyAmount;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SpriteRenderer currencyIcon;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SpriteRenderer toolIcon;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PurchasableUpgradeType m_upgradeType;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private int m_upgradeLevel;

		[Token(Token = "0x17000292")]
		public PurchasableUpgradeType UpgradeType
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xD91448", Offset = "0xD91448", VA = "0xD91448")]
			get
			{
				return default(PurchasableUpgradeType);
			}
		}

		[Token(Token = "0x17000293")]
		public int UpgradeLevel
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xD91450", Offset = "0xD91450", VA = "0xD91450")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xD91458", Offset = "0xD91458", VA = "0xD91458")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xD91468", Offset = "0xD91468", VA = "0xD91468")]
		private void Init()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xD914A8", Offset = "0xD914A8", VA = "0xD914A8", Slot = "4")]
		public override void ShowBubble()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xD915E4", Offset = "0xD915E4", VA = "0xD915E4", Slot = "5")]
		public override void HideBubble()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xD91640", Offset = "0xD91640", VA = "0xD91640")]
		public void SetPrice(CurrencyCost cost)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xD916DC", Offset = "0xD916DC", VA = "0xD916DC")]
		public void SetPricesPaid(bool currencyPaid = false, bool toolPaid = false)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xD917D0", Offset = "0xD917D0", VA = "0xD917D0", Slot = "6")]
		public override void ResetPricesPaid()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xD917DC", Offset = "0xD917DC", VA = "0xD917DC")]
		public ToolsUpgradeMerchantSpeechBubble()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class BaseStock : ScriptableObject
	{
		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xD379A4", Offset = "0xD379A4", VA = "0xD379A4", Slot = "4")]
		public virtual AssetReference[] GetAllStockAssetReferences(bool includeEmptySlots)
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xD37A04", Offset = "0xD37A04", VA = "0xD37A04", Slot = "5")]
		public virtual bool HasValidStock()
		{
			return default(bool);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD37A64", Offset = "0xD37A64", VA = "0xD37A64", Slot = "6")]
		public virtual AssetReference GetStockAssetReferenceAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD37AC4", Offset = "0xD37AC4", VA = "0xD37AC4")]
		public void SetCurrentStock(MerchandiseItem[] content)
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD37B24", Offset = "0xD37B24", VA = "0xD37B24")]
		public BaseStock()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	public struct CurrencyCost
	{
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Value;

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xAD6CD4", Offset = "0xAD6CD4", VA = "0xAD6CD4")]
		public CurrencyCost(int value)
		{
		}
	}
	[Token(Token = "0x2000415")]
	public enum CurrencyType
	{
		[Token(Token = "0x4001830")]
		Flower,
		[Token(Token = "0x4001831")]
		Vegetable,
		[Token(Token = "0x4001832")]
		Fruit,
		[Token(Token = "0x4001833")]
		None
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	public struct ItemCost
	{
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Petals;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Greens;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Fruit;
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC5B8", Offset = "0x9FC5B8")]
	public class Merchandise : MerchandiseBase
	{
		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string MerchantType;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MerchandiseItemDictionary m_merchandiseSmall;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MerchandiseItemDictionary m_merchandiseLarge;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<ItemProbability> m_smallItemProbabilities;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ItemProbability> m_largeItemProbabilities;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05500", Offset = "0xA05500")]
		private int <TotalProbabilityAmount>k__BackingField;

		[Token(Token = "0x17000294")]
		public int TotalProbabilityAmount
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xD37B44", Offset = "0xD37B44", VA = "0xD37B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15C00", Offset = "0xA15C00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0xD37B4C", Offset = "0xD37B4C", VA = "0xD37B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15C10", Offset = "0xA15C10")]
			set
			{
			}
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD37B54", Offset = "0xD37B54", VA = "0xD37B54")]
		private void UpdateProbablilities(MerchandiseItemDictionary merchandise, List<ItemProbability> itemProbabilities)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD37C84", Offset = "0xD37C84", VA = "0xD37C84")]
		public int GetSmallItemProbabilities(out List<ItemProbability> itemProbabilities)
		{
			return default(int);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xD37D20", Offset = "0xD37D20", VA = "0xD37D20")]
		public int GetLargeItemProbabilities(out List<ItemProbability> itemProbabilities)
		{
			return default(int);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xD37DBC", Offset = "0xD37DBC", VA = "0xD37DBC")]
		public bool TryGetSmallMerchandiseItemByKey(string key, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xD37E2C", Offset = "0xD37E2C", VA = "0xD37E2C")]
		public bool TryGetLargeMerchandiseItemByKey(string key, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xD37E9C", Offset = "0xD37E9C", VA = "0xD37E9C")]
		public bool TryGetMerchandiseItemByKey(bool isLargeItem, string key, out MerchandiseItem item)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xD37EB8", Offset = "0xD37EB8", VA = "0xD37EB8")]
		public Merchandise()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class MerchandiseBase : ScriptableObject
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected StringBuilder m_stringBuilder;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_hasUpdatedDictionary;

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xD38008", Offset = "0xD38008", VA = "0xD38008")]
		protected void TryInitializeDebug()
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xD38000", Offset = "0xD38000", VA = "0xD38000")]
		public MerchandiseBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public enum UnlockEvent
	{
		[Token(Token = "0x4001840")]
		None,
		[Token(Token = "0x4001841")]
		HouseUpgrade1,
		[Token(Token = "0x4001842")]
		HouseUpgrade2,
		[Token(Token = "0x4001843")]
		NumEvents
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public struct MerchandiseItem
	{
		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly MerchandiseItem Nonexisting;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public AssetReference AssetReference;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Purchaseable Purchaseable;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Probability;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ItemCost ItemCost;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnlockEvent UnlockEventRequired;
	}
	[Serializable]
	[Token(Token = "0x200041B")]
	public class MerchandiseItemDictionary : SerializableDictionary<string, MerchandiseItem>
	{
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xD37FB0", Offset = "0xD37FB0", VA = "0xD37FB0")]
		public MerchandiseItemDictionary()
		{
		}
	}
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC624", Offset = "0x9FC624")]
	public class MerchantStock : BaseStock
	{
		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MerchandiseItem[] m_smallMerchandiseItems;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MerchandiseItem[] m_largeMerchandiseItems;

		[Token(Token = "0x17000295")]
		public MerchandiseItem[] CurrentSmallItemStock
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0xD382F4", Offset = "0xD382F4", VA = "0xD382F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		public MerchandiseItem[] CurrentLargeItemStock
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xD382FC", Offset = "0xD382FC", VA = "0xD382FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xD38304", Offset = "0xD38304", VA = "0xD38304")]
		public void SetCurrentStock(MerchandiseItem[] newSmallMerchandiseItems, MerchandiseItem[] newLargeMerrchandiseItem)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xD38338", Offset = "0xD38338", VA = "0xD38338")]
		public AssetReference[] GetAllSmallStockAssetReferences(bool includeEmptySlots = false)
		{
			return null;
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xD38474", Offset = "0xD38474", VA = "0xD38474")]
		public AssetReference[] GetAllLargeStockAssetReferences(bool includeEmptySlots = false)
		{
			return null;
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xD385B0", Offset = "0xD385B0", VA = "0xD385B0", Slot = "5")]
		public override bool HasValidStock()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xD385E0", Offset = "0xD385E0", VA = "0xD385E0")]
		public MerchantStock()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public class MerchantStockState : ComponentState
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReferenceSerializable[] SmallMerchandiseItems;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AssetReferenceSerializable[] LargeMerchandiseItems;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long lastRestockTime;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int LastRestockDay;

		[Token(Token = "0x17000297")]
		public DateTime LastRestockTime
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xD8FA08", Offset = "0xD8FA08", VA = "0xD8FA08")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xD8FA74", Offset = "0xD8FA74", VA = "0xD8FA74")]
		public MerchantStockState()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xD8FAAC", Offset = "0xD8FAAC", VA = "0xD8FAAC")]
		public MerchantStockState(AssetReference[] smallMerchandiseItems, AssetReference[] largeMerchandiseItems, DateTime lastRestockTime, int lastRestockDay)
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC690", Offset = "0x9FC690")]
	public class ToolUpgradeStock : BaseStock
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UpgradeMerchandiseItem[] m_merchandiseItems;

		[Token(Token = "0x17000298")]
		public UpgradeMerchandiseItem[] CurrentMerchandiseItems
		{
			[Token(Token = "0x60018DA")]
			[Address(RVA = "0xD910C4", Offset = "0xD910C4", VA = "0xD910C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xD910CC", Offset = "0xD910CC", VA = "0xD910CC")]
		public void SetCurrentStock(UpgradeMerchandiseItem[] newMerchandiseItems)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xD910D4", Offset = "0xD910D4", VA = "0xD910D4", Slot = "4")]
		public override AssetReference[] GetAllStockAssetReferences(bool includeEmptySlots)
		{
			return null;
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xD91210", Offset = "0xD91210", VA = "0xD91210", Slot = "5")]
		public override bool HasValidStock()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xD91230", Offset = "0xD91230", VA = "0xD91230", Slot = "6")]
		public override AssetReference GetStockAssetReferenceAtIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xD91270", Offset = "0xD91270", VA = "0xD91270")]
		public ToolUpgradeStock()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC6FC", Offset = "0x9FC6FC")]
	public class ToolsUpgradeMerchandise : MerchandiseBase
	{
		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UpgradeMerchandiseItemDictionary m_merchandise;

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD91278", Offset = "0xD91278", VA = "0xD91278")]
		public UpgradeMerchandiseItem GetMerchandiseItemByKey(string key)
		{
			return default(UpgradeMerchandiseItem);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xD91320", Offset = "0xD91320", VA = "0xD91320")]
		public UpgradeMerchandiseItem[] GetAllMerchandiseItems()
		{
			return null;
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD91388", Offset = "0xD91388", VA = "0xD91388")]
		public ToolsUpgradeMerchandise()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000420")]
	public struct UpgradeMerchandiseItem
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly UpgradeMerchandiseItem Nonexisting;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[HideInInspector]
		public string Name;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public AssetReference AssetReference;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PurchaseableToolUpgrade Purchaseable;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrencyCost CurrencyCost;
	}
	[Serializable]
	[Token(Token = "0x2000421")]
	public class UpgradeMerchandiseItemDictionary : SerializableDictionary<string, UpgradeMerchandiseItem>
	{
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xD913F8", Offset = "0xD913F8", VA = "0xD913F8")]
		public UpgradeMerchandiseItemDictionary()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class UpgradeToolsStockManager : StockManagerBase
	{
		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC768", Offset = "0x9FC768")]
		private sealed class <RestockRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001866")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001867")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001868")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UpgradeToolsStockManager <>4__this;

			[Token(Token = "0x4001869")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int dayCount;

			[Token(Token = "0x1700029A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001902")]
				[Address(RVA = "0xD93694", Offset = "0xD93694", VA = "0xD93694", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001904")]
				[Address(RVA = "0xD936FC", Offset = "0xD936FC", VA = "0xD936FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xD92150", Offset = "0xD92150", VA = "0xD92150")]
			[DebuggerHidden]
			public <RestockRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0xD93600", Offset = "0xD93600", VA = "0xD93600", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0xD93604", Offset = "0xD93604", VA = "0xD93604", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001903")]
			[Address(RVA = "0xD9369C", Offset = "0xD9369C", VA = "0xD9369C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001858")]
		private const int StockSize = 3;

		[Token(Token = "0x4001859")]
		private const int RestockDayInterval = 1;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ToolsUpgradeMerchandise m_merchandise;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ToolUpgradeStock m_merchantStock;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA055B0", Offset = "0xA055B0")]
		private Transform m_topLeftShelf;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_topRightShelf;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_bottomLeftShelf;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform m_bottomRightShelf;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private OptimizedCollection<UpgradeMerchandiseItem> m_generatedMerchandiseItems;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_indexToReplace;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_shouldReplaceUpgradeItem;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_lastRestockDay;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool m_waitingForRestock;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_restockRoutine;

		[Token(Token = "0x17000299")]
		public bool AllowedRestock
		{
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xD917F0", Offset = "0xD917F0", VA = "0xD917F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xD91864", Offset = "0xD91864", VA = "0xD91864")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xD91954", Offset = "0xD91954", VA = "0xD91954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xD91A50", Offset = "0xD91A50", VA = "0xD91A50", Slot = "7")]
		protected override void SetGeneratedMerchandiseSize()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xD91A5C", Offset = "0xD91A5C", VA = "0xD91A5C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xD91CA8", Offset = "0xD91CA8", VA = "0xD91CA8", Slot = "8")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xD9201C", Offset = "0xD9201C", VA = "0xD9201C")]
		private void OnNewDay(int dayCount)
		{
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xD920C4", Offset = "0xD920C4", VA = "0xD920C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15C20", Offset = "0xA15C20")]
		private IEnumerator RestockRoutine(int dayCount)
		{
			return null;
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD9217C", Offset = "0xD9217C", VA = "0xD9217C", Slot = "12")]
		public override void GenerateNewStock()
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xD9240C", Offset = "0xD9240C", VA = "0xD9240C", Slot = "24")]
		public override bool IsStockEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xD924A8", Offset = "0xD924A8", VA = "0xD924A8", Slot = "16")]
		protected override bool TryGetPurPurchaseable(GameObject spawnedItem, out Purchaseable purchaseable)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xD92300", Offset = "0xD92300", VA = "0xD92300")]
		private bool ShouldShowUpgrade(PurchaseableToolUpgrade toolUpgrade)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xD92548", Offset = "0xD92548", VA = "0xD92548", Slot = "17")]
		protected override void ClearMerchendiseItems()
		{
		}

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD9259C", Offset = "0xD9259C", VA = "0xD9259C", Slot = "15")]
		protected override void TryInitializeSlots()
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD91DB0", Offset = "0xD91DB0", VA = "0xD91DB0")]
		private void MoveMerchantGoods()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD91F0C", Offset = "0xD91F0C", VA = "0xD91F0C")]
		private AssetReference[] GetAllAvailableStockFromState(UpgradeToolsStockState currentState)
		{
			return null;
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD92704", Offset = "0xD92704", VA = "0xD92704", Slot = "10")]
		protected override BaseStock GetStock()
		{
			return null;
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD9270C", Offset = "0xD9270C", VA = "0xD9270C")]
		private void RuntimeInstantiation(AssetReference[] refs)
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xD9291C", Offset = "0xD9291C", VA = "0xD9291C", Slot = "18")]
		protected override void OnPostObjectsSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xD92C3C", Offset = "0xD92C3C", VA = "0xD92C3C")]
		private void OnPostObjectSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xD93070", Offset = "0xD93070", VA = "0xD93070", Slot = "19")]
		protected override void AddGeneratedItemToStock(AssetReference assetRef)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xD92F60", Offset = "0xD92F60", VA = "0xD92F60")]
		private void ReplaceMerchandiseItemAtIndex(int index, AssetReference assetRef)
		{
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xD93118", Offset = "0xD93118", VA = "0xD93118", Slot = "20")]
		protected override void StockGenerationCompleted()
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xD9316C", Offset = "0xD9316C", VA = "0xD9316C", Slot = "22")]
		public override CurrencyCost GetCurrencyPriceForItem(Purchaseable p)
		{
			return default(CurrencyCost);
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xD9323C", Offset = "0xD9323C", VA = "0xD9323C", Slot = "23")]
		public override void RemoveItemFromStock(Purchaseable p)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD93454", Offset = "0xD93454", VA = "0xD93454")]
		private bool TryReplaceBoughtMerchandiseItem(UpgradeMerchandiseItem itemToReplace, out UpgradeMerchandiseItem replacementItem)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD93574", Offset = "0xD93574", VA = "0xD93574")]
		public UpgradeToolsStockManager()
		{
		}
	}
}
namespace NeatCorp.Locomotion
{
	[Token(Token = "0x2000424")]
	public class FreeLocomotion : MonoBehaviour
	{
		[Token(Token = "0x400186A")]
		private const float MaxSampleDistance = 0.2f;

		[Token(Token = "0x400186B")]
		private const float AccelerationTargetThershold = 0.01f;

		[Token(Token = "0x400186C")]
		private const float HitDistanceTolerance = 0.01f;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NavMeshQueryFilter NavMeshQueryFilter;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_hasGameSettings;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameSettings m_gameSettings;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_playerOriginTransform;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static FreeLocomotion Instance;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 m_targetInputDirection;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_currentInputDirection;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_validNavmeshPosition;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_hasPendingMovement;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_horizontalRotationDelta;

		[Token(Token = "0x1700029C")]
		public bool UseLeftHandedInput
		{
			[Token(Token = "0x6001905")]
			[Address(RVA = "0xD33AB0", Offset = "0xD33AB0", VA = "0xD33AB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029D")]
		public bool UseSmoothTurning
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xD33ADC", Offset = "0xD33ADC", VA = "0xD33ADC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029E")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xD33B10", Offset = "0xD33B10", VA = "0xD33B10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD33BDC", Offset = "0xD33BDC", VA = "0xD33BDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD33C4C", Offset = "0xD33C4C", VA = "0xD33C4C")]
		private void Start()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD33D2C", Offset = "0xD33D2C", VA = "0xD33D2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD33DD4", Offset = "0xD33DD4", VA = "0xD33DD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD33E7C", Offset = "0xD33E7C", VA = "0xD33E7C")]
		private void OnPlayerTeleported(PlayerTeleportEvent e)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD33EA0", Offset = "0xD33EA0", VA = "0xD33EA0")]
		public static void MovePlayerToNavmesh()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD341E4", Offset = "0xD341E4", VA = "0xD341E4")]
		public void StopMoving()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xD33F14", Offset = "0xD33F14", VA = "0xD33F14")]
		private void MoveToSampledPosition(float tolerance = 1f)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD3425C", Offset = "0xD3425C", VA = "0xD3425C")]
		public static Vector3 GetClosestPositionOnNavmesh(Vector3 playerOrigin, float tolerance = 1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xD343C0", Offset = "0xD343C0", VA = "0xD343C0")]
		public void UpdateMovement(Vector2 movementInput)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD344C8", Offset = "0xD344C8", VA = "0xD344C8")]
		public void UpdateRotation(Vector2 rotationInput)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD3452C", Offset = "0xD3452C", VA = "0xD3452C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD345E8", Offset = "0xD345E8", VA = "0xD345E8")]
		private void UpdateMovementDirection()
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD34AA8", Offset = "0xD34AA8", VA = "0xD34AA8")]
		private bool TrySampleFullLengthPosition(Vector3 originPosition, out NavMeshHit navMeshHit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD347A0", Offset = "0xD347A0", VA = "0xD347A0")]
		private void MovePlayer()
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD34990", Offset = "0xD34990", VA = "0xD34990")]
		private void RotatePlayer()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD34D2C", Offset = "0xD34D2C", VA = "0xD34D2C")]
		public bool AllowedToRotate(bool isRightHand)
		{
			return default(bool);
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD34D7C", Offset = "0xD34D7C", VA = "0xD34D7C")]
		public FreeLocomotion()
		{
		}
	}
}
namespace NeatCorp.Localization
{
	[Token(Token = "0x2000425")]
	public class SetLanguageController : MonoBehaviour
	{
		[Token(Token = "0x4001877")]
		public const GameSettingId SettingId = GameSettingId.Language;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] m_languageDisplayNames;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PrevNextButton m_nextButton;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PrevNextButton m_prevButton;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLanguageIndex;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject m_currentlyDisplayedLanguage;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LanguageManager manager;

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xD33344", Offset = "0xD33344", VA = "0xD33344")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD33694", Offset = "0xD33694", VA = "0xD33694")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xD334C4", Offset = "0xD334C4", VA = "0xD334C4")]
		private void HideAllLanguageDisplayNames()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xD337C4", Offset = "0xD337C4", VA = "0xD337C4")]
		private void SetInitLanguageIndex()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD33554", Offset = "0xD33554", VA = "0xD33554")]
		private void TryDisplayLanguage(bool setActive = true)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xD338D0", Offset = "0xD338D0", VA = "0xD338D0")]
		public void NextLanguage(PushButton button)
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xD339CC", Offset = "0xD339CC", VA = "0xD339CC")]
		public void PreviousLanguage(PushButton button)
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xD335E8", Offset = "0xD335E8", VA = "0xD335E8")]
		private void ApplyLanguage()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xD33948", Offset = "0xD33948", VA = "0xD33948")]
		private void ChangeSetting()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xD33A44", Offset = "0xD33A44", VA = "0xD33A44")]
		public SetLanguageController()
		{
		}
	}
}
namespace NeatCorp.Loading
{
	[Token(Token = "0x2000426")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x2000427")]
		public enum LoadingStateType
		{
			[Token(Token = "0x400188F")]
			None,
			[Token(Token = "0x4001890")]
			FadeIn,
			[Token(Token = "0x4001891")]
			Loading,
			[Token(Token = "0x4001892")]
			FadeOut
		}

		[Token(Token = "0x2000428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC778", Offset = "0x9FC778")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001893")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x4001894")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6001935")]
			[Address(RVA = "0xD325E8", Offset = "0xD325E8", VA = "0xD325E8")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0xD325F0", Offset = "0xD325F0", VA = "0xD325F0")]
			internal void <DoShow>b__2()
			{
			}

			[Token(Token = "0x6001937")]
			[Address(RVA = "0xD32658", Offset = "0xD32658", VA = "0xD32658")]
			internal void <DoShow>b__3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC788", Offset = "0x9FC788")]
		private sealed class <>c
		{
			[Token(Token = "0x4001895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static DOGetter<float> <>9__35_0;

			[Token(Token = "0x4001897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static DOSetter<float> <>9__35_1;

			[Token(Token = "0x4001898")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static DOGetter<float> <>9__36_0;

			[Token(Token = "0x4001899")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static DOSetter<float> <>9__36_1;

			[Token(Token = "0x6001939")]
			[Address(RVA = "0xD325C0", Offset = "0xD325C0", VA = "0xD325C0")]
			public <>c()
			{
			}

			[Token(Token = "0x600193A")]
			[Address(RVA = "0xD325C8", Offset = "0xD325C8", VA = "0xD325C8")]
			internal float <DoShow>b__35_0()
			{
				return default(float);
			}

			[Token(Token = "0x600193B")]
			[Address(RVA = "0xD325D0", Offset = "0xD325D0", VA = "0xD325D0")]
			internal void <DoShow>b__35_1(float vol)
			{
			}

			[Token(Token = "0x600193C")]
			[Address(RVA = "0xD325D8", Offset = "0xD325D8", VA = "0xD325D8")]
			internal float <DoHide>b__36_0()
			{
				return default(float);
			}

			[Token(Token = "0x600193D")]
			[Address(RVA = "0xD325E0", Offset = "0xD325E0", VA = "0xD325E0")]
			internal void <DoHide>b__36_1(float vol)
			{
			}
		}

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC798", Offset = "0x9FC798")]
		private sealed class <DoShow>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400189A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400189B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400189C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x400189D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x400189E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onAfterFade;

			[Token(Token = "0x400189F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass35_0 <>8__1;

			[Token(Token = "0x170002A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001941")]
				[Address(RVA = "0xD332D4", Offset = "0xD332D4", VA = "0xD332D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001943")]
				[Address(RVA = "0xD3333C", Offset = "0xD3333C", VA = "0xD3333C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600193E")]
			[Address(RVA = "0xD324EC", Offset = "0xD324EC", VA = "0xD324EC")]
			[DebuggerHidden]
			public <DoShow>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600193F")]
			[Address(RVA = "0xD32D38", Offset = "0xD32D38", VA = "0xD32D38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001940")]
			[Address(RVA = "0xD32D3C", Offset = "0xD32D3C", VA = "0xD32D3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001942")]
			[Address(RVA = "0xD332DC", Offset = "0xD332DC", VA = "0xD332DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC7A8", Offset = "0x9FC7A8")]
		private sealed class <DoHide>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40018A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onBeforeFade;

			[Token(Token = "0x40018A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onComplete;

			[Token(Token = "0x40018A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x170002A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001947")]
				[Address(RVA = "0xD32CC8", Offset = "0xD32CC8", VA = "0xD32CC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001949")]
				[Address(RVA = "0xD32D30", Offset = "0xD32D30", VA = "0xD32D30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001944")]
			[Address(RVA = "0xD32518", Offset = "0xD32518", VA = "0xD32518")]
			[DebuggerHidden]
			public <DoHide>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001945")]
			[Address(RVA = "0xD326D8", Offset = "0xD326D8", VA = "0xD326D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001946")]
			[Address(RVA = "0xD326DC", Offset = "0xD326DC", VA = "0xD326DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001948")]
			[Address(RVA = "0xD32CD0", Offset = "0xD32CD0", VA = "0xD32CD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400187E")]
		private const float FadeTime = 0.5f;

		[Token(Token = "0x400187F")]
		private const float TargetFps = 90f;

		[Token(Token = "0x4001880")]
		private const float FadeOutSoundTime = 0.5f;

		[Token(Token = "0x4001881")]
		private const float FadeInSoundTime = 1f;

		[Token(Token = "0x4001882")]
		private const float sharpness = 0.01f;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0566C", Offset = "0xA0566C")]
		private static LoadingStateType <LoadingState>k__BackingField;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer m_sprite;

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SpriteRenderer m_bg;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_minDisplayTime;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CameraClearFlags m_originalClearFlags;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_originalFarClipDist;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_fadeTween;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_startTime;

		[Token(Token = "0x1700029F")]
		public static LoadingStateType LoadingState
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xD31BA4", Offset = "0xD31BA4", VA = "0xD31BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15CD4", Offset = "0xA15CD4")]
			get
			{
				return default(LoadingStateType);
			}
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xD31BF4", Offset = "0xD31BF4", VA = "0xD31BF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15CE4", Offset = "0xA15CE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002A0")]
		public static bool IsShowing
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xD31C48", Offset = "0xD31C48", VA = "0xD31C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A1")]
		public static bool HasInitiatedLoading
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xD31CA0", Offset = "0xD31CA0", VA = "0xD31CA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A2")]
		public float TimeDisplayed
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xD31CFC", Offset = "0xD31CFC", VA = "0xD31CFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A3")]
		public float Distance
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xD31D28", Offset = "0xD31D28", VA = "0xD31D28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xD31D30", Offset = "0xD31D30", VA = "0xD31D30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xD31F38", Offset = "0xD31F38", VA = "0xD31F38")]
		private void Update()
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xD322D4", Offset = "0xD322D4", VA = "0xD322D4")]
		public YieldInstruction Show()
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xD323B4", Offset = "0xD323B4", VA = "0xD323B4")]
		public YieldInstruction Hide()
		{
			return null;
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xD32494", Offset = "0xD32494", VA = "0xD32494")]
		public void Show(Action onCompleted, [Optional] Action onAfterFade)
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xD324C0", Offset = "0xD324C0", VA = "0xD324C0")]
		public void Hide(Action onCompleted, [Optional] Action onBeforeFade)
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xD32154", Offset = "0xD32154", VA = "0xD32154")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD32308", Offset = "0xD32308", VA = "0xD32308")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15CF4", Offset = "0xA15CF4")]
		private IEnumerator DoShow(Action onComplete, [Optional] Action onAfterFade)
		{
			return null;
		}

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xD323E8", Offset = "0xD323E8", VA = "0xD323E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15D58", Offset = "0xA15D58")]
		private IEnumerator DoHide(Action onComplete, [Optional] Action onBeforeFade)
		{
			return null;
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xD32544", Offset = "0xD32544", VA = "0xD32544")]
		public LoadingScreen()
		{
		}
	}
}
namespace NeatCorp.Scripts.Utils
{
	[Token(Token = "0x200042C")]
	public class Colors
	{
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int TintColorPropertyID;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ColorPropertyID;
	}
}
namespace NeatCorp.Scripts.Fade
{
	[Token(Token = "0x200042D")]
	public class FadeHandler : MonoBehaviour
	{
		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC7B8", Offset = "0x9FC7B8")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40018B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TweenCallback onComplete;

			[Token(Token = "0x40018B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FadeHandler <>4__this;

			[Token(Token = "0x600195C")]
			[Address(RVA = "0xD8B498", Offset = "0xD8B498", VA = "0xD8B498")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x600195D")]
			[Address(RVA = "0xD8B550", Offset = "0xD8B550", VA = "0xD8B550")]
			internal void <FadeInInternal>b__0()
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC7C8", Offset = "0x9FC7C8")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40018B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FadeHandler <>4__this;

			[Token(Token = "0x40018B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TweenCallback onComplete;

			[Token(Token = "0x600195E")]
			[Address(RVA = "0xD8B4A0", Offset = "0xD8B4A0", VA = "0xD8B4A0")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x600195F")]
			[Address(RVA = "0xD8B5BC", Offset = "0xD8B5BC", VA = "0xD8B5BC")]
			internal void <FadeOutInternal>b__0()
			{
			}

			[Token(Token = "0x6001960")]
			[Address(RVA = "0xD8B5E8", Offset = "0xD8B5E8", VA = "0xD8B5E8")]
			internal void <FadeOutInternal>b__1()
			{
			}
		}

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CameraClearFlags m_cameraClearFlags;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_autoFadeInOnStart;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener m_fadeTweener;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color m_cameraClearColor;

		[Token(Token = "0x40018AE")]
		public const float DefaultFadeTime = 0f;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FadeHandler Instance;

		[Token(Token = "0x1400001C")]
		public event Action OnBeforeFadeOut
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xD8AB90", Offset = "0xD8AB90", VA = "0xD8AB90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15E5C", Offset = "0xA15E5C")]
			add
			{
			}
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xD8AC34", Offset = "0xD8AC34", VA = "0xD8AC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15E6C", Offset = "0xA15E6C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action OnAfterFadeIn
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0xD8ACD8", Offset = "0xD8ACD8", VA = "0xD8ACD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15E7C", Offset = "0xA15E7C")]
			add
			{
			}
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xD8AD7C", Offset = "0xD8AD7C", VA = "0xD8AD7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15E8C", Offset = "0xA15E8C")]
			remove
			{
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xD8AE20", Offset = "0xD8AE20", VA = "0xD8AE20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xD8AE78", Offset = "0xD8AE78", VA = "0xD8AE78")]
		private void Start()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xD8B080", Offset = "0xD8B080", VA = "0xD8B080")]
		public static YieldInstruction FadeIn(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xD8B108", Offset = "0xD8B108", VA = "0xD8B108")]
		public static YieldInstruction FadeOut(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD8B350", Offset = "0xD8B350", VA = "0xD8B350")]
		public static void FadeIn()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD8B3B0", Offset = "0xD8B3B0", VA = "0xD8B3B0")]
		public static void FadeIn(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD8B420", Offset = "0xD8B420", VA = "0xD8B420")]
		public static void FadeOut(TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD8B428", Offset = "0xD8B428", VA = "0xD8B428")]
		public static void FadeOut(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD8AED0", Offset = "0xD8AED0", VA = "0xD8AED0")]
		private void FadeInInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD8B190", Offset = "0xD8B190", VA = "0xD8B190")]
		private void FadeOutInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD8B4A8", Offset = "0xD8B4A8", VA = "0xD8B4A8")]
		private void SetCameraClearColorToBlack()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD8B4F4", Offset = "0xD8B4F4", VA = "0xD8B4F4")]
		private void ResetCameraClearFlags()
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD8B53C", Offset = "0xD8B53C", VA = "0xD8B53C")]
		public FadeHandler()
		{
		}
	}
}
namespace NeatCorp.Polaroid
{
	[Token(Token = "0x2000430")]
	public class PolaroidPicture : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC7D8", Offset = "0x9FC7D8")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PolaroidPicture <>4__this;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onMoveOutCompleted;

			[Token(Token = "0x6001977")]
			[Address(RVA = "0xD9BB80", Offset = "0xD9BB80", VA = "0xD9BB80")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0xD9C374", Offset = "0xD9C374", VA = "0xD9C374")]
			internal void <MoveOutOfCamera>b__0()
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC7E8", Offset = "0x9FC7E8")]
		private sealed class <RemoveFadeAfterDuration>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PolaroidPicture <>4__this;

			[Token(Token = "0x170002A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600197C")]
				[Address(RVA = "0xD9C46C", Offset = "0xD9C46C", VA = "0xD9C46C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600197E")]
				[Address(RVA = "0xD9C4D4", Offset = "0xD9C4D4", VA = "0xD9C4D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0xD9BD2C", Offset = "0xD9BD2C", VA = "0xD9BD2C")]
			[DebuggerHidden]
			public <RemoveFadeAfterDuration>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x600197A")]
			[Address(RVA = "0xD9C3DC", Offset = "0xD9C3DC", VA = "0xD9C3DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600197B")]
			[Address(RVA = "0xD9C3E0", Offset = "0xD9C3E0", VA = "0xD9C3E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600197D")]
			[Address(RVA = "0xD9C474", Offset = "0xD9C474", VA = "0xD9C474", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018B6")]
		private const float MoveOutDuration = 0.4f;

		[Token(Token = "0x40018B7")]
		private const float FadeDuration = 3f;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer m_frameRenderer;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MeshRenderer m_photoRenderer;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ShareUIController m_shareUIController;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PushMeshButton m_shareButton;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer m_fadeRenderer;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Sequence m_sequence;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_initialized;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PolaroidPictureState m_currentState;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isAttached;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool m_delayDetachment;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Texture2D m_photoTexture;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_photoWidth;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_photoHeight;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string m_highResFilePath;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private YieldInstruction m_fadeDelayInstruction;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock fade_mpb;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int ShaderTextureId;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int FadeStartTimeId;

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD9B1A4", Offset = "0xD9B1A4", VA = "0xD9B1A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD9B34C", Offset = "0xD9B34C", VA = "0xD9B34C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD9B4F4", Offset = "0xD9B4F4", VA = "0xD9B4F4", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD9B858", Offset = "0xD9B858", VA = "0xD9B858")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD9B89C", Offset = "0xD9B89C", VA = "0xD9B89C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD9B8E0", Offset = "0xD9B8E0", VA = "0xD9B8E0")]
		public void AssignPhotoTexture(Texture2D polaroidTexture, int width, int height)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD9B91C", Offset = "0xD9B91C", VA = "0xD9B91C")]
		public void AssignPath(string path)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD9B6AC", Offset = "0xD9B6AC", VA = "0xD9B6AC")]
		private void SetUpPhotoTexture()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD9B924", Offset = "0xD9B924", VA = "0xD9B924")]
		public void MoveOutOfCamera(Transform movingOutEndTrans, Action onMoveOutCompleted)
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD9BB88", Offset = "0xD9BB88", VA = "0xD9BB88")]
		private void EnableFade()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD9BBB8", Offset = "0xD9BBB8", VA = "0xD9BBB8")]
		private void StartFade()
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD9BCB0", Offset = "0xD9BCB0", VA = "0xD9BCB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15E9C", Offset = "0xA15E9C")]
		private IEnumerator RemoveFadeAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD9BD58", Offset = "0xD9BD58", VA = "0xD9BD58")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD9BE20", Offset = "0xD9BE20", VA = "0xD9BE20")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD9BE3C", Offset = "0xD9BE3C", VA = "0xD9BE3C")]
		public void DetachFromCamera(Tool_PolaroidCamera cam)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD9C088", Offset = "0xD9C088", VA = "0xD9C088")]
		private void DelayedDetachement()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD9BF44", Offset = "0xD9BF44", VA = "0xD9BF44")]
		private void Detach()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD9C0CC", Offset = "0xD9C0CC", VA = "0xD9C0CC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD9C160", Offset = "0xD9C160", VA = "0xD9C160")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD9C274", Offset = "0xD9C274", VA = "0xD9C274")]
		public void SharePicture(PushMeshButton _)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD9C278", Offset = "0xD9C278", VA = "0xD9C278")]
		public PolaroidPicture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000433")]
	public class PolaroidPictureState : ComponentStateWithBinaryData
	{
		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_width;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_height;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string m_highResFilePath;

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD9C4DC", Offset = "0xD9C4DC", VA = "0xD9C4DC", Slot = "4")]
		public override string GetFilenameExtension()
		{
			return null;
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD9C158", Offset = "0xD9C158", VA = "0xD9C158")]
		public PolaroidPictureState()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class ShareUIController : MonoBehaviour
	{
		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PushMeshButton m_shareButton;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PushMeshButton m_facebookButton;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PushMeshButton m_cancelButton;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 m_facebookOpenPos;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Sequence m_buttonAnimSequence;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD9C524", Offset = "0xD9C524", VA = "0xD9C524")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD9C6AC", Offset = "0xD9C6AC", VA = "0xD9C6AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD9C834", Offset = "0xD9C834", VA = "0xD9C834")]
		private void OnButtonPushed(PushMeshButton button)
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD9C948", Offset = "0xD9C948", VA = "0xD9C948")]
		private void SetSubMenuButtonsActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD9CA0C", Offset = "0xD9CA0C", VA = "0xD9CA0C")]
		private void AnimateButton(Transform trans, Vector3 targetPos)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD9BE1C", Offset = "0xD9BE1C", VA = "0xD9BE1C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD9BE38", Offset = "0xD9BE38", VA = "0xD9BE38")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD9CBBC", Offset = "0xD9CBBC", VA = "0xD9CBBC")]
		public ShareUIController()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class Tool_PolaroidCamera : Tool_Base, ITool, IInitializable
	{
		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC7F8", Offset = "0x9FC7F8")]
		private sealed class <CopyRenderTextureAfterDelay>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001908")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001909")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400190A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tool_PolaroidCamera <>4__this;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B2")]
				[Address(RVA = "0xD9F524", Offset = "0xD9F524", VA = "0xD9F524", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019B4")]
				[Address(RVA = "0xD9F58C", Offset = "0xD9F58C", VA = "0xD9F58C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019AF")]
			[Address(RVA = "0xD9E614", Offset = "0xD9E614", VA = "0xD9E614")]
			[DebuggerHidden]
			public <CopyRenderTextureAfterDelay>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x60019B0")]
			[Address(RVA = "0xD9F070", Offset = "0xD9F070", VA = "0xD9F070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019B1")]
			[Address(RVA = "0xD9F074", Offset = "0xD9F074", VA = "0xD9F074", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B3")]
			[Address(RVA = "0xD9F52C", Offset = "0xD9F52C", VA = "0xD9F52C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018DB")]
		private const float ConstantUpdateInterval = 0.5f;

		[Token(Token = "0x40018DC")]
		private const float MinPreviewSqrDistance = 0.2f;

		[Token(Token = "0x40018DD")]
		private const float MaxPreviewSqrDistance = 1f;

		[Token(Token = "0x40018DE")]
		private const int WatermarkPosX = 500;

		[Token(Token = "0x40018DF")]
		private const int WatermarkPosY = -400;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA057DC", Offset = "0xA057DC")]
		private bool m_usePrefabCameraProjection;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Camera m_prefabCamera;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_resWidth;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_resHeight;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer m_cameraMeshRenderer;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Texture2D m_logoOverlayTexture;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05878", Offset = "0xA05878")]
		[SerializeField]
		private MeshFilter m_displayMeshFilter;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MeshRenderer m_displayMeshRenderer;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject m_displayTurnedOff;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject m_cameraLens;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_useDynamicFramerate;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05904", Offset = "0xA05904")]
		[SerializeField]
		private AssetReference m_polaroidAsset;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform m_pictureMovingOutStartTransform;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform m_pictureMovingOutEndTransform;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05970", Offset = "0xA05970")]
		[SerializeField]
		private PhotographTargetFinder m_photographTargetFinder;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA059BC", Offset = "0xA059BC")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SendQuestEvent m_cameraFoundEvent;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05A18", Offset = "0xA05A18")]
		[SerializeField]
		private ParticleSystem m_flashParticle;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05A64", Offset = "0xA05A64")]
		[SerializeField]
		private AudioSource m_cameraPressedSound;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private PlayerHand m_heldByHand;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture m_renderTexture;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture m_renderTextureHalf;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture m_previewRenderTexture;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Texture2D m_polaroidTexture;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Texture2D m_saveToFileTexture;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Rect m_rect;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Rect m_previewRect;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float m_previewUpdateInterval;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float m_timeSinceLastPreviewUpdate;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool m_isSetUp;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		private bool m_isActive;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		private bool m_isOnDelay;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		private bool m_hasPendingCapture;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private PolaroidPicture m_attachedPolaroid;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string m_polaroidFilePath;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_hasWatermark;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Color[] sm_watermarkPixels;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_usePreviewScreen;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05AB0", Offset = "0xA05AB0")]
		private static int <PictureWidth>k__BackingField;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05AC0", Offset = "0xA05AC0")]
		private static int <PictureHeight>k__BackingField;

		[Token(Token = "0x170002AA")]
		private Camera m_camera
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0xD9CC20", Offset = "0xD9CC20", VA = "0xD9CC20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public static int PictureWidth
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0xD9CC9C", Offset = "0xD9CC9C", VA = "0xD9CC9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15F50", Offset = "0xA15F50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600198B")]
			[Address(RVA = "0xD9CCEC", Offset = "0xD9CCEC", VA = "0xD9CCEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15F60", Offset = "0xA15F60")]
			set
			{
			}
		}

		[Token(Token = "0x170002AC")]
		public static int PictureHeight
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0xD9CD40", Offset = "0xD9CD40", VA = "0xD9CD40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15F70", Offset = "0xA15F70")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600198D")]
			[Address(RVA = "0xD9CD90", Offset = "0xD9CD90", VA = "0xD9CD90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA15F80", Offset = "0xA15F80")]
			set
			{
			}
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD9CDE4", Offset = "0xD9CDE4", VA = "0xD9CDE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD9CE8C", Offset = "0xD9CE8C", VA = "0xD9CE8C", Slot = "21")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD9D228", Offset = "0xD9D228", VA = "0xD9D228", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD9CF78", Offset = "0xD9CF78", VA = "0xD9CF78")]
		private bool TrySetupCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD9D25C", Offset = "0xD9D25C", VA = "0xD9D25C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD9D4B0", Offset = "0xD9D4B0", VA = "0xD9D4B0", Slot = "12")]
		public override void StartUsing(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD9D66C", Offset = "0xD9D66C", VA = "0xD9D66C", Slot = "13")]
		public override void StopUsing(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD9D77C", Offset = "0xD9D77C", VA = "0xD9D77C", Slot = "14")]
		public override void WhileHeld(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD9DB48", Offset = "0xD9DB48", VA = "0xD9DB48", Slot = "19")]
		public ToolType GetToolType()
		{
			return default(ToolType);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD9DB50", Offset = "0xD9DB50", VA = "0xD9DB50", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD9D850", Offset = "0xD9D850", VA = "0xD9D850")]
		private void UpdateCameraAndHandPositions()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD9D630", Offset = "0xD9D630", VA = "0xD9D630")]
		private void ActivateCamera()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD9D6C0", Offset = "0xD9D6C0", VA = "0xD9D6C0")]
		private void DeactivateCamera()
		{
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD9DC44", Offset = "0xD9DC44", VA = "0xD9DC44")]
		private void OnCameraPreRender(Camera cam)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD9D2DC", Offset = "0xD9D2DC", VA = "0xD9D2DC")]
		private void RenderCamera()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD9DD4C", Offset = "0xD9DD4C", VA = "0xD9DD4C")]
		private void OnCameraPostRender(Camera cam)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD9DBAC", Offset = "0xD9DBAC", VA = "0xD9DBAC")]
		private void SetCameraPowerOn(bool shouldBeOn)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD9D2FC", Offset = "0xD9D2FC", VA = "0xD9D2FC")]
		private void UpdatePreview()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD9D9D8", Offset = "0xD9D9D8", VA = "0xD9D9D8")]
		private void ActivatePictureCapture()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD9DE5C", Offset = "0xD9DE5C", VA = "0xD9DE5C")]
		private void TakePicture()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD9E554", Offset = "0xD9E554", VA = "0xD9E554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA15F90", Offset = "0xA15F90")]
		private IEnumerator CopyRenderTextureAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD9E5D0", Offset = "0xD9E5D0", VA = "0xD9E5D0")]
		private void PlayEffectsAndSpawnPolaroid()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD9E824", Offset = "0xD9E824", VA = "0xD9E824")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA15FF4", Offset = "0xA15FF4")]
		private void DrawWorldTestLines(Vector3[] positions)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD9E828", Offset = "0xD9E828", VA = "0xD9E828")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA1602C", Offset = "0xA1602C")]
		private void DrawScreenTestLines(Vector3[] positions, Rect r)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD9DFE0", Offset = "0xD9DFE0", VA = "0xD9DFE0")]
		private bool GetScreenPreviewRect(out Rect r)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD9E82C", Offset = "0xD9E82C", VA = "0xD9E82C")]
		private Vector3 GetTopLeftOrientation(Vector3 screenCoord, float screenHeight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD9E640", Offset = "0xD9E640", VA = "0xD9E640")]
		private void SpawnPolaroid()
		{
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD9E93C", Offset = "0xD9E93C", VA = "0xD9E93C")]
		private void PrePolaroidSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD9EB8C", Offset = "0xD9EB8C", VA = "0xD9EB8C")]
		private void PostPolaroidSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD9ECB4", Offset = "0xD9ECB4", VA = "0xD9ECB4")]
		private void OnPictureMoveOutCompleted()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD9ECBC", Offset = "0xD9ECBC", VA = "0xD9ECBC")]
		private void OnPolaroidGrabbed(PolaroidGrabbedFromCameraEvent e)
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD9ED8C", Offset = "0xD9ED8C", VA = "0xD9ED8C")]
		private static void AddWatermark(Texture2D texture, Texture2D watermarkTexture)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD9F048", Offset = "0xD9F048", VA = "0xD9F048")]
		public Tool_PolaroidCamera()
		{
		}
	}
}
namespace NeatCorp.UI
{
	[Token(Token = "0x2000437")]
	public class PushButton : UIButton, IGrabbable
	{
		[Token(Token = "0x2000438")]
		public delegate void PushButtonDelegate(PushButton button);

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PushButtonDelegate OnStartGrabbing;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PushButtonDelegate OnStopGrabbing;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PushButtonDelegate OnUpdateGrabbing;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PushButtonDelegate OnPressButton;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PushButtonDelegate OnHoverOver;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PushButtonDelegate OnHoverOut;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NeatAudioCue onGrabSoundCue;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NeatAudioPlayer neatAudioPlayer;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PlayerHand heldByHand;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color defaultColor;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color selectedColor;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Color highlightedColor;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Color disabledColor;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Image buttonImage;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Image selectedButtonImage;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private bool enableChildrenWhenSelected;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Color disabledTextColor;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TextMeshPro buttonText;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PushButton[] childButtons;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool isSelected;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		protected bool isHighlighted;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		protected bool buttonIsEnabled;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDB")]
		protected bool initialized;

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xE1AFE0", Offset = "0xE1AFE0", VA = "0xE1AFE0", Slot = "21")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xE1B288", Offset = "0xE1B288", VA = "0xE1B288")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xE1B4E8", Offset = "0xE1B4E8", VA = "0xE1B4E8")]
		private void UpdateImage()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xE1B5F8", Offset = "0xE1B5F8", VA = "0xE1B5F8", Slot = "10")]
		public int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xE1B600", Offset = "0xE1B600", VA = "0xE1B600", Slot = "22")]
		public PlayerHand GetHeldByHand()
		{
			return null;
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xE1B608", Offset = "0xE1B608", VA = "0xE1B608", Slot = "7")]
		public override void PressButton(PlayerHand hand)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xE1BA44", Offset = "0xE1BA44", VA = "0xE1BA44", Slot = "4")]
		public override void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xE1BA58", Offset = "0xE1BA58", VA = "0xE1BA58", Slot = "6")]
		public override void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xE1BA6C", Offset = "0xE1BA6C", VA = "0xE1BA6C", Slot = "5")]
		public override void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xE1BA80", Offset = "0xE1BA80", VA = "0xE1BA80", Slot = "9")]
		public override bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xE1BABC", Offset = "0xE1BABC", VA = "0xE1BABC", Slot = "23")]
		public bool HaveChildGrabbables()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xE1BAC4", Offset = "0xE1BAC4", VA = "0xE1BAC4", Slot = "17")]
		public bool ShouldConsumeGrab(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xE1BACC", Offset = "0xE1BACC", VA = "0xE1BACC", Slot = "18")]
		public void Touch()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xE1BAD0", Offset = "0xE1BAD0", VA = "0xE1BAD0", Slot = "8")]
		public override void SetIsHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xE1BB4C", Offset = "0xE1BB4C", VA = "0xE1BB4C")]
		public void SetIsSelected(bool selected)
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xE1B180", Offset = "0xE1B180", VA = "0xE1B180")]
		private void ToggleChildren(bool enable)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xE1BB98", Offset = "0xE1BB98", VA = "0xE1BB98")]
		public void SetIsEnabled(bool shouldBeEnabled)
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xE1BC8C", Offset = "0xE1BC8C", VA = "0xE1BC8C")]
		public void DisableAndDeselect()
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xE1BCBC", Offset = "0xE1BCBC", VA = "0xE1BCBC", Slot = "11")]
		public bool IsExtraSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xE1BCC4", Offset = "0xE1BCC4", VA = "0xE1BCC4", Slot = "12")]
		public GrabbableOutline GetOutline()
		{
			return null;
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xE1BCCC", Offset = "0xE1BCCC", VA = "0xE1BCCC", Slot = "19")]
		public float GetDelayBeforeGrab()
		{
			return default(float);
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xE1BCD4", Offset = "0xE1BCD4", VA = "0xE1BCD4", Slot = "20")]
		public Collider[] GetColliders()
		{
			return null;
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xE1BCDC", Offset = "0xE1BCDC", VA = "0xE1BCDC")]
		public PushButton()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class PushMeshButton : UIButton, IGrabbable
	{
		[Token(Token = "0x200043A")]
		public delegate void PushButtonDelegate(PushMeshButton button);

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PushButtonDelegate OnStartGrabbing;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PushButtonDelegate OnStopGrabbing;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PushButtonDelegate OnUpdateGrabbing;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PushButtonDelegate OnPressButton;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue m_pressSoundCue;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioPlayer m_neatAudioPlayer;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_defaultState;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_highlightedState;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_selectedState;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_disabledState;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool m_enableChildrenWhenSelected;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshPro m_buttonText;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerHand m_heldByHand;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PushMeshButton[] m_childButtons;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject m_currentState;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject[] m_buttonStates;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool m_isSelected;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		protected bool m_isHighlighted;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		protected bool m_buttonIsEnabled;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
		protected bool m_initialized;

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xE1BE1C", Offset = "0xE1BE1C", VA = "0xE1BE1C", Slot = "21")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xE1C0EC", Offset = "0xE1C0EC", VA = "0xE1C0EC")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xE1C2A0", Offset = "0xE1C2A0", VA = "0xE1C2A0")]
		private void SetActiveState()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xE1C3C8", Offset = "0xE1C3C8", VA = "0xE1C3C8", Slot = "10")]
		public int GetCurrentPriority()
		{
			return default(int);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xE1C3D0", Offset = "0xE1C3D0", VA = "0xE1C3D0", Slot = "22")]
		public PlayerHand GetHeldByHand()
		{
			return null;
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xE1C3D8", Offset = "0xE1C3D8", VA = "0xE1C3D8", Slot = "7")]
		public override void PressButton(PlayerHand hand)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xE1C814", Offset = "0xE1C814", VA = "0xE1C814", Slot = "4")]
		public override void StartGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint handAttachPoint)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xE1C828", Offset = "0xE1C828", VA = "0xE1C828", Slot = "6")]
		public override void StopGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xE1C83C", Offset = "0xE1C83C", VA = "0xE1C83C", Slot = "5")]
		public override void UpdateGrabbing(PlayerHand hand, Vector3 grabPositionOnItem, OrientedPoint attachPoint)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xE1C850", Offset = "0xE1C850", VA = "0xE1C850", Slot = "9")]
		public override bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xE1C88C", Offset = "0xE1C88C", VA = "0xE1C88C", Slot = "23")]
		public bool HaveChildGrabbables()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xE1C894", Offset = "0xE1C894", VA = "0xE1C894", Slot = "17")]
		public bool ShouldConsumeGrab(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xE1C89C", Offset = "0xE1C89C", VA = "0xE1C89C", Slot = "18")]
		public void Touch()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xE1C8A0", Offset = "0xE1C8A0", VA = "0xE1C8A0", Slot = "8")]
		public override void SetIsHighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xE1C8AC", Offset = "0xE1C8AC", VA = "0xE1C8AC")]
		public void SetIsSelected(bool selected)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xE1BFE4", Offset = "0xE1BFE4", VA = "0xE1BFE4")]
		private void ToggleChildren(bool enable)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xE1C8F0", Offset = "0xE1C8F0", VA = "0xE1C8F0")]
		public void SetIsEnabled(bool shouldBeEnabled)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xE1C8FC", Offset = "0xE1C8FC", VA = "0xE1C8FC")]
		public void DisableAndDeselect()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xE1C928", Offset = "0xE1C928", VA = "0xE1C928", Slot = "11")]
		public bool IsExtraSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xE1C930", Offset = "0xE1C930", VA = "0xE1C930", Slot = "12")]
		public GrabbableOutline GetOutline()
		{
			return null;
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xE1C938", Offset = "0xE1C938", VA = "0xE1C938", Slot = "19")]
		public float GetDelayBeforeGrab()
		{
			return default(float);
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xE1C940", Offset = "0xE1C940", VA = "0xE1C940", Slot = "20")]
		public Collider[] GetColliders()
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xE1C948", Offset = "0xE1C948", VA = "0xE1C948")]
		public PushMeshButton()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class HeightAdjustmentControl : NumberStepControl
	{
		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xE1A550", Offset = "0xE1A550", VA = "0xE1A550")]
		public void SetHeightAdjustment()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xE1A814", Offset = "0xE1A814", VA = "0xE1A814")]
		public static float GetCurrentHeightAdjustment()
		{
			return default(float);
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xE1A88C", Offset = "0xE1A88C", VA = "0xE1A88C")]
		public HeightAdjustmentControl()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class NumberStepControl : MonoBehaviour
	{
		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected NumberStepController m_numberStepController;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberStepControl m_instance;

		[Token(Token = "0x170002AF")]
		protected static NumberStepController sm_numberStepController
		{
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xE1A830", Offset = "0xE1A830", VA = "0xE1A830")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xE1A890", Offset = "0xE1A890", VA = "0xE1A890")]
		public NumberStepControl()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class NumberStepController : MonoBehaviour
	{
		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PrevNextButton m_prevButton;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PrevNextButton m_nextButton;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameSettingId m_settingId;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_textField;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05C30", Offset = "0xA05C30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05C30", Offset = "0xA05C30")]
		private string m_format;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA05CA0", Offset = "0xA05CA0")]
		private bool m_applyFormat;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05CEC", Offset = "0xA05CEC")]
		[SerializeField]
		private UnityEvent m_onValueChanged;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA05D38", Offset = "0xA05D38")]
		[SerializeField]
		private bool m_loopValues;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float[] m_numberSteps;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_currentStepIndex;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_hasInitialized;

		[Token(Token = "0x170002B0")]
		public int CurrentStepIndex
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xE1A984", Offset = "0xE1A984", VA = "0xE1A984")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xE1A98C", Offset = "0xE1A98C", VA = "0xE1A98C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xE1ACB0", Offset = "0xE1ACB0", VA = "0xE1ACB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xE1AAE4", Offset = "0xE1AAE4", VA = "0xE1AAE4")]
		private void TrySetValueFromSettings()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xE1ADF8", Offset = "0xE1ADF8", VA = "0xE1ADF8")]
		public void Next(PushButton button)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xE1AEE4", Offset = "0xE1AEE4", VA = "0xE1AEE4")]
		public void Previous(PushButton button)
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xE1ABC0", Offset = "0xE1ABC0", VA = "0xE1ABC0")]
		private void SetText()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xE1AE50", Offset = "0xE1AE50", VA = "0xE1AE50")]
		private void ChangeSetting()
		{
		}

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xE1A5D0", Offset = "0xE1A5D0", VA = "0xE1A5D0")]
		public float GetCurrentStepValue()
		{
			return default(float);
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xE1AF48", Offset = "0xE1AF48", VA = "0xE1AF48")]
		public NumberStepController()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class UIButton : MonoBehaviour
	{
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xE1C99C", Offset = "0xE1C99C", VA = "0xE1C99C", Slot = "4")]
		public virtual void StartGrabbing(PlayerHand playerHand, Vector3 point, OrientedPoint grabPoint)
		{
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xE1C9FC", Offset = "0xE1C9FC", VA = "0xE1C9FC", Slot = "5")]
		public virtual void UpdateGrabbing(PlayerHand playerHand, Vector3 point, OrientedPoint grabPoint)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xE1CA5C", Offset = "0xE1CA5C", VA = "0xE1CA5C", Slot = "6")]
		public virtual void StopGrabbing(PlayerHand playerHand, Vector3 point, OrientedPoint grabPoint)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xE1CABC", Offset = "0xE1CABC", VA = "0xE1CABC", Slot = "7")]
		public virtual void PressButton(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xE1CB1C", Offset = "0xE1CB1C", VA = "0xE1CB1C", Slot = "8")]
		public virtual void SetIsHighlighted(bool v)
		{
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xE1CB7C", Offset = "0xE1CB7C", VA = "0xE1CB7C", Slot = "9")]
		public virtual bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xE1BDE4", Offset = "0xE1BDE4", VA = "0xE1BDE4")]
		public UIButton()
		{
		}
	}
}
namespace NeatCorp.UI.Collection
{
	[Token(Token = "0x200043F")]
	public enum AnimalCategory
	{
		[Token(Token = "0x4001944")]
		Creature,
		[Token(Token = "0x4001945")]
		Fish,
		[Token(Token = "0x4001946")]
		Bird
	}
	[Token(Token = "0x2000440")]
	public class AnimalCategoryPage : CategoryPage
	{
		[Token(Token = "0x4001947")]
		private const int AnimalEntriesPerFold = 4;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BookIllustration[] m_illustrations;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<AnimalCollectionItem> m_unlockedAnimals;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasInitializedEventListeners;

		[Token(Token = "0x170002B1")]
		public List<AnimalCollectionItem> UnlockedAnimals
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0xD8E030", Offset = "0xD8E030", VA = "0xD8E030")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xD8E038", Offset = "0xD8E038", VA = "0xD8E038")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xD8E040", Offset = "0xD8E040", VA = "0xD8E040")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xD8E0E8", Offset = "0xD8E0E8", VA = "0xD8E0E8")]
		public void RegisterBase(AnimalCollectionPage recipeCollectionPage, AnimalCollectionSaveData[] unlockedAnimals)
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xD8E2F0", Offset = "0xD8E2F0", VA = "0xD8E2F0")]
		private void OnAnimalUnlocked(UnlockCollectableAnimalEvent e)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xD8E4C4", Offset = "0xD8E4C4", VA = "0xD8E4C4")]
		private void TryUnlockAnimal(AnimalCollectionItemData item, bool isNew = true)
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xD8E1C8", Offset = "0xD8E1C8", VA = "0xD8E1C8")]
		private void UnlockAll(AnimalCollectionSaveData[] allUnlockedItems)
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xD8E614", Offset = "0xD8E614", VA = "0xD8E614")]
		private bool IsAlreadyUnlocked(PhotographTargetType photographTargetType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xD8E964", Offset = "0xD8E964", VA = "0xD8E964", Slot = "6")]
		protected override int GetEntriesPerFold()
		{
			return default(int);
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xD8E96C", Offset = "0xD8E96C", VA = "0xD8E96C", Slot = "7")]
		protected override void ShowEntriesAtPage()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xD8EB04", Offset = "0xD8EB04", VA = "0xD8EB04")]
		private void MakeAnimalItemAsNonNew(BookIllustration illustration)
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xD8ED40", Offset = "0xD8ED40", VA = "0xD8ED40", Slot = "9")]
		protected override int GetItemsTotal()
		{
			return default(int);
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xD8E6D4", Offset = "0xD8E6D4", VA = "0xD8E6D4")]
		private bool TryGetIllustration(PhotographTargetType targetType, out BookIllustration illustration)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xD8ED5C", Offset = "0xD8ED5C", VA = "0xD8ED5C", Slot = "10")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xD8EE14", Offset = "0xD8EE14", VA = "0xD8EE14")]
		public AnimalCategoryPage()
		{
		}
	}
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC808", Offset = "0x9FC808")]
	public class AnimalCollection : Collection
	{
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AnimalCategory m_category;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<AnimalCollectionItemData> m_items;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xD8EE90", Offset = "0xD8EE90", VA = "0xD8EE90")]
		private bool GetTargetForMatchingCategory(CollectableData collectable, out PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xD8EF60", Offset = "0xD8EF60", VA = "0xD8EF60")]
		private bool IsMatchingCategory(PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xD8E3AC", Offset = "0xD8E3AC", VA = "0xD8E3AC")]
		public bool TryGetDataFromTarget(PhotographTarget target, out AnimalCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xD8E868", Offset = "0xD8E868", VA = "0xD8E868")]
		public bool TryGetDataFromTargetType(PhotographTargetType targetType, out AnimalCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xD8EFC4", Offset = "0xD8EFC4", VA = "0xD8EFC4")]
		private bool CollectionContainsType(PhotographTargetType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xD8F07C", Offset = "0xD8F07C", VA = "0xD8F07C")]
		public AnimalCollection()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public struct AnimalCollectionItem
	{
		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AnimalCollectionItemData ItemData;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsNew;

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xAD774C", Offset = "0xAD774C", VA = "0xAD774C")]
		public AnimalCollectionItem(AnimalCollectionItemData itemData, bool isNew = true)
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xD8ED08", Offset = "0xD8ED08", VA = "0xD8ED08")]
		public static AnimalCollectionItem MakeNonNew(AnimalCollectionItem item)
		{
			return default(AnimalCollectionItem);
		}
	}
	[Serializable]
	[Token(Token = "0x2000443")]
	public struct AnimalCollectionItemData
	{
		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public PhotographTargetType PhotographTargetType;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AnimalCategory Category;
	}
	[Token(Token = "0x2000444")]
	public class AnimalCollectionPage : CollectionPage, IInitializable
	{
		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_creatureCategory;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_fishCategory;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PushButton m_creatureCategoryButton;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PushButton m_fishCategoryButton;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimalCategoryPage m_creatureCategoryPage;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimalCategoryPage m_fishCategoryPage;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private AnimalCategoryPage[] m_allCategories;

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xD8F0F8", Offset = "0xD8F0F8", VA = "0xD8F0F8", Slot = "10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xD8F1F0", Offset = "0xD8F1F0", VA = "0xD8F1F0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xD8F404", Offset = "0xD8F404", VA = "0xD8F404", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xD8F540", Offset = "0xD8F540", VA = "0xD8F540", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xD8F67C", Offset = "0xD8F67C", VA = "0xD8F67C")]
		private void CreaturesCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xD8F6C0", Offset = "0xD8F6C0", VA = "0xD8F6C0")]
		private void FishCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xD8F704", Offset = "0xD8F704", VA = "0xD8F704", Slot = "8")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xD8F784", Offset = "0xD8F784", VA = "0xD8F784", Slot = "9")]
		public override void UpdateCategoryNewEffects()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xD8F804", Offset = "0xD8F804", VA = "0xD8F804")]
		public AnimalCollectionPage()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class AnimalCollectionPageState : ComponentState
	{
		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimalCollectionSaveData[] unlockedAnimals;

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD8F2E0", Offset = "0xD8F2E0", VA = "0xD8F2E0")]
		public AnimalCollectionPageState(List<AnimalCollectionItem> animals)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000446")]
	public struct AnimalCollectionSaveData
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PhotographTargetType PhotographTargetType;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsNew;

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xAD77BC", Offset = "0xAD77BC", VA = "0xAD77BC")]
		public AnimalCollectionSaveData(AnimalCollectionItemData animalData, bool isNew)
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class PhotographTarget : MonoBehaviour
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider[] m_colliders;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimalCategory m_category;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private PhotographTargetType m_targetType;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_ignoreCollectable;

		[Token(Token = "0x170002B2")]
		public bool IgnoreCollectable
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xE1854C", Offset = "0xE1854C", VA = "0xE1854C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B3")]
		public AnimalCategory AnimalCategory
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0xE18554", Offset = "0xE18554", VA = "0xE18554")]
			get
			{
				return default(AnimalCategory);
			}
		}

		[Token(Token = "0x170002B4")]
		public PhotographTargetType TargetType
		{
			[Token(Token = "0x6001A25")]
			[Address(RVA = "0xE1855C", Offset = "0xE1855C", VA = "0xE1855C")]
			get
			{
				return default(PhotographTargetType);
			}
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xE18564", Offset = "0xE18564", VA = "0xE18564")]
		public bool HitTestColliders(Vector3 origin, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xE187E8", Offset = "0xE187E8", VA = "0xE187E8")]
		public PhotographTarget()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class PhotographTargetFinder : MonoBehaviour
	{
		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SphereCollider m_collider;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<PhotographTarget> m_animalTargets;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05EAC", Offset = "0xA05EAC")]
		private bool <HasAnimalTargets>k__BackingField;

		[Token(Token = "0x170002B5")]
		public bool HasAnimalTargets
		{
			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xE187F0", Offset = "0xE187F0", VA = "0xE187F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA160B4", Offset = "0xA160B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xE187F8", Offset = "0xE187F8", VA = "0xE187F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA160C4", Offset = "0xA160C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xE18804", Offset = "0xE18804", VA = "0xE18804")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xE18994", Offset = "0xE18994", VA = "0xE18994")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xE18938", Offset = "0xE18938", VA = "0xE18938")]
		private void UpdateHasTarget()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xE18A34", Offset = "0xE18A34", VA = "0xE18A34")]
		public void OnPhotoTaken()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xE188A0", Offset = "0xE188A0", VA = "0xE188A0")]
		private bool TryGetPhotographTargetUpwards(Transform tf, int upwardLevels, out PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xE18B8C", Offset = "0xE18B8C", VA = "0xE18B8C")]
		private bool TryGetPhotographTarget(Transform tf, out PhotographTarget target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xE18BF4", Offset = "0xE18BF4", VA = "0xE18BF4")]
		private bool TryGetNextParent(ref Transform tf)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xE18CB0", Offset = "0xE18CB0", VA = "0xE18CB0")]
		public void StartUsing()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xE18CD8", Offset = "0xE18CD8", VA = "0xE18CD8")]
		public void StopUsing()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xE18D4C", Offset = "0xE18D4C", VA = "0xE18D4C")]
		public PhotographTargetFinder()
		{
		}
	}
	[Token(Token = "0x2000449")]
	public enum PhotographTargetType
	{
		[Token(Token = "0x4001964")]
		Undefined,
		[Token(Token = "0x4001965")]
		Puffkin,
		[Token(Token = "0x4001966")]
		ManateeCow,
		[Token(Token = "0x4001967")]
		Moleseal,
		[Token(Token = "0x4001968")]
		Ghost,
		[Token(Token = "0x4001969")]
		Dragonsheep,
		[Token(Token = "0x400196A")]
		Blowbird,
		[Token(Token = "0x400196B")]
		Seagull,
		[Token(Token = "0x400196C")]
		Bullfink,
		[Token(Token = "0x400196D")]
		Owl,
		[Token(Token = "0x400196E")]
		Raven,
		[Token(Token = "0x400196F")]
		Duck,
		[Token(Token = "0x4001970")]
		BlobFish,
		[Token(Token = "0x4001971")]
		BunnyFish,
		[Token(Token = "0x4001972")]
		CuttleFish,
		[Token(Token = "0x4001973")]
		GoldFish,
		[Token(Token = "0x4001974")]
		JellyFish,
		[Token(Token = "0x4001975")]
		LurkerFish,
		[Token(Token = "0x4001976")]
		PufferFish,
		[Token(Token = "0x4001977")]
		SpikeFish,
		[Token(Token = "0x4001978")]
		TadpoleFish,
		[Token(Token = "0x4001979")]
		TongueFish,
		[Token(Token = "0x400197A")]
		TubeFish,
		[Token(Token = "0x400197B")]
		PotpotFlippy,
		[Token(Token = "0x400197C")]
		PotpotLinnea,
		[Token(Token = "0x400197D")]
		PotpotLeo,
		[Token(Token = "0x400197E")]
		FurnitureMerchant,
		[Token(Token = "0x400197F")]
		GeneralMerchant,
		[Token(Token = "0x4001980")]
		SeedMerchant,
		[Token(Token = "0x4001981")]
		ToolsMerchant,
		[Token(Token = "0x4001982")]
		GodBiome1,
		[Token(Token = "0x4001983")]
		GodBiome2,
		[Token(Token = "0x4001984")]
		GodBiome3,
		[Token(Token = "0x4001985")]
		Whale
	}
	[Token(Token = "0x200044A")]
	public class BookIllustration : MonoBehaviour
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_rendered;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_silhouette;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_newEffect;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PhotographTargetType[] m_representingTypes;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05EFC", Offset = "0xA05EFC")]
		private bool <IsUnlocked>k__BackingField;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05F0C", Offset = "0xA05F0C")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x170002B6")]
		public bool IsUnlocked
		{
			[Token(Token = "0x6001A34")]
			[Address(RVA = "0xD8F81C", Offset = "0xD8F81C", VA = "0xD8F81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA160D4", Offset = "0xA160D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xD8F824", Offset = "0xD8F824", VA = "0xD8F824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA160E4", Offset = "0xA160E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public bool IsNew
		{
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xD8F830", Offset = "0xD8F830", VA = "0xD8F830")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA160F4", Offset = "0xA160F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A37")]
			[Address(RVA = "0xD8F838", Offset = "0xD8F838", VA = "0xD8F838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16104", Offset = "0xA16104")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xD8E7F4", Offset = "0xD8E7F4", VA = "0xD8E7F4")]
		public void Unlock(bool isNew = false)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD8F844", Offset = "0xD8F844", VA = "0xD8F844")]
		public void Lock()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xD8ECB8", Offset = "0xD8ECB8", VA = "0xD8ECB8")]
		public bool IsRepresenting(PhotographTargetType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD8EA6C", Offset = "0xD8EA6C", VA = "0xD8EA6C")]
		public void Show()
		{
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD8EC3C", Offset = "0xD8EC3C", VA = "0xD8EC3C")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD8F8C8", Offset = "0xD8F8C8", VA = "0xD8F8C8")]
		public BookIllustration()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class BookRecipeSprite : MonoBehaviour
	{
		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_newEffect;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05F3C", Offset = "0xA05F3C")]
		private bool <IsUnlocked>k__BackingField;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA05F4C", Offset = "0xA05F4C")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x170002B8")]
		public bool IsUnlocked
		{
			[Token(Token = "0x6001A3E")]
			[Address(RVA = "0xE166AC", Offset = "0xE166AC", VA = "0xE166AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16114", Offset = "0xA16114")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xE166B4", Offset = "0xE166B4", VA = "0xE166B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16124", Offset = "0xA16124")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool IsNew
		{
			[Token(Token = "0x6001A40")]
			[Address(RVA = "0xE166C0", Offset = "0xE166C0", VA = "0xE166C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16134", Offset = "0xA16134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xE166C8", Offset = "0xE166C8", VA = "0xE166C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16144", Offset = "0xA16144")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xE166D4", Offset = "0xE166D4", VA = "0xE166D4")]
		public void Show(Sprite sprite, bool isNew)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xE167D0", Offset = "0xE167D0", VA = "0xE167D0")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xE1684C", Offset = "0xE1684C", VA = "0xE1684C")]
		public BookRecipeSprite()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class BookmarkHandler : MonoBehaviour
	{
		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuBookmark m_homeBookmark;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MenuBookmark m_recipeBookmark;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MenuBookmark m_creatureBookmark;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CollectionPage m_recipeCollectionPage;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CollectionPage m_creatureCollectionPage;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xE16854", Offset = "0xE16854", VA = "0xE16854")]
		public void UpdateNotifications()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xE16920", Offset = "0xE16920", VA = "0xE16920")]
		public BookmarkHandler()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class CategoryPage : MonoBehaviour
	{
		[Token(Token = "0x4001995")]
		private const int DefaultEntriesPerFold = 4;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Collection m_collection;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PushButton m_nextPageButton;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PushButton m_prevPageButton;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MenuCategoryTab m_tab;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_leftPageNumber;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_rightPageNumber;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_unlockedItemsNum;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected int m_currentPageIndex;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected int m_maxPages;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected CollectionPage m_collectionPage;

		[Token(Token = "0x170002BA")]
		protected int EntriesPerFold
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xE16928", Offset = "0xE16928", VA = "0xE16928")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xE16934", Offset = "0xE16934", VA = "0xE16934", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xE16AA0", Offset = "0xE16AA0", VA = "0xE16AA0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xE16BE8", Offset = "0xE16BE8", VA = "0xE16BE8", Slot = "6")]
		protected virtual int GetEntriesPerFold()
		{
			return default(int);
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xE16BF0", Offset = "0xE16BF0", VA = "0xE16BF0")]
		public void OnNextPageButtonPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xE16C2C", Offset = "0xE16C2C", VA = "0xE16C2C")]
		public void OnPrevPageButtonPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xE16CE8", Offset = "0xE16CE8", VA = "0xE16CE8", Slot = "7")]
		protected virtual void ShowEntriesAtPage()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xE16CEC", Offset = "0xE16CEC", VA = "0xE16CEC")]
		protected void UpdateMaxPages()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xE16D98", Offset = "0xE16D98", VA = "0xE16D98", Slot = "8")]
		protected virtual Sprite GetCollectionSprite(int i)
		{
			return null;
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xE16DA0", Offset = "0xE16DA0", VA = "0xE16DA0", Slot = "9")]
		protected virtual int GetItemsTotal()
		{
			return default(int);
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xE16DA8", Offset = "0xE16DA8", VA = "0xE16DA8", Slot = "10")]
		public virtual bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xE16DB0", Offset = "0xE16DB0", VA = "0xE16DB0")]
		public void UpdateNewEffectPlayback()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xE16F20", Offset = "0xE16F20", VA = "0xE16F20")]
		protected void UpdatePageNumbers()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xE16F80", Offset = "0xE16F80", VA = "0xE16F80")]
		private string GetPageNumberText(bool isLeftPage)
		{
			return null;
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xE17074", Offset = "0xE17074", VA = "0xE17074")]
		public CategoryPage()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public struct CollectableData
	{
		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject Prefab;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference AssetReference;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string GUID;
	}
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC874", Offset = "0x9FC874")]
	public class Collection : ScriptableObject
	{
		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xE1707C", Offset = "0xE1707C", VA = "0xE1707C")]
		public Collection()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public abstract class CollectionPage : SaveableComponent
	{
		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue m_unlockSound;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MenuBookmark m_bookmark;

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xE17084", Offset = "0xE17084", VA = "0xE17084", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xE17090", Offset = "0xE17090", VA = "0xE17090", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xE17094", Offset = "0xE17094", VA = "0xE17094", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xE170F4", Offset = "0xE170F4", VA = "0xE170F4")]
		public int GetCollectionIds()
		{
			return default(int);
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xE170FC", Offset = "0xE170FC", VA = "0xE170FC")]
		public int GetCollectionId()
		{
			return default(int);
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xE17104", Offset = "0xE17104", VA = "0xE17104", Slot = "7")]
		public virtual void PlayUnlockSound()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xE17198", Offset = "0xE17198", VA = "0xE17198", Slot = "8")]
		public virtual bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xE16E6C", Offset = "0xE16E6C", VA = "0xE16E6C")]
		public void TryShowBookmarkNewEffect()
		{
		}

		[Token(Token = "0x6001A5F")]
		public abstract void UpdateCategoryNewEffects();

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xE16ED4", Offset = "0xE16ED4", VA = "0xE16ED4")]
		public void TryStopBookmarkNewEffect()
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xE171A0", Offset = "0xE171A0", VA = "0xE171A0")]
		protected CollectionPage()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class MenuBookmark : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC8E0", Offset = "0x9FC8E0")]
		private sealed class <UpdateWiggleRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MenuBookmark <>4__this;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001A75")]
				[Address(RVA = "0xE17CB0", Offset = "0xE17CB0", VA = "0xE17CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A77")]
				[Address(RVA = "0xE17D18", Offset = "0xE17D18", VA = "0xE17D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A72")]
			[Address(RVA = "0xE17900", Offset = "0xE17900", VA = "0xE17900")]
			[DebuggerHidden]
			public <UpdateWiggleRoutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xE17C18", Offset = "0xE17C18", VA = "0xE17C18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A74")]
			[Address(RVA = "0xE17C1C", Offset = "0xE17C1C", VA = "0xE17C1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A76")]
			[Address(RVA = "0xE17CB8", Offset = "0xE17CB8", VA = "0xE17CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PushButton m_button;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_visual;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3 m_hoverOffset;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly Vector3 m_selectedOffset;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isWiggling;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_wiggleTween;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_updateWiggleRoutine;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private YieldInstruction m_waitForNextWiggle;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_startLocalPosition;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_isSelected;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_isHovered;

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xE171A8", Offset = "0xE171A8", VA = "0xE171A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xE172E4", Offset = "0xE172E4", VA = "0xE172E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xE173B0", Offset = "0xE173B0", VA = "0xE173B0")]
		private void OnBookmarkSelected(BookmarkSelectedEvent e)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xE1745C", Offset = "0xE1745C", VA = "0xE1745C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xE17618", Offset = "0xE17618", VA = "0xE17618")]
		private void TryStartWiggleRoutine()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xE176F4", Offset = "0xE176F4", VA = "0xE176F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xE178B8", Offset = "0xE178B8", VA = "0xE178B8")]
		private void TryStopWigglingRoutine()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xE16900", Offset = "0xE16900", VA = "0xE16900")]
		public void TryShowNotification()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xE16910", Offset = "0xE16910", VA = "0xE16910")]
		public void TryStopNotification()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xE17678", Offset = "0xE17678", VA = "0xE17678")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16154", Offset = "0xA16154")]
		private IEnumerator UpdateWiggleRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xE1792C", Offset = "0xE1792C", VA = "0xE1792C")]
		private void OnPointerOver(PushButton button)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xE17A58", Offset = "0xE17A58", VA = "0xE17A58")]
		private void OnPointerOut(PushButton button)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xE17A60", Offset = "0xE17A60", VA = "0xE17A60")]
		private void OnSelected(PushButton button)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xE17454", Offset = "0xE17454", VA = "0xE17454")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xE17938", Offset = "0xE17938", VA = "0xE17938")]
		private void MoveVisualToPosition()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xE17AFC", Offset = "0xE17AFC", VA = "0xE17AFC")]
		public MenuBookmark()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class MenuCategoryTab : MonoBehaviour
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PushButton m_button;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_visual;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_newEffect;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 m_hoverOffset;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly Vector3 m_selectedOffset;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_startLocalScale;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_isSelected;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_isHovered;

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xE17D20", Offset = "0xE17D20", VA = "0xE17D20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xE17DC8", Offset = "0xE17DC8", VA = "0xE17DC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xE17E70", Offset = "0xE17E70", VA = "0xE17E70")]
		private void OnTabSelected(CategoryTabSelectedEvent e)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xE17F1C", Offset = "0xE17F1C", VA = "0xE17F1C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xE180D8", Offset = "0xE180D8", VA = "0xE180D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xE16E1C", Offset = "0xE16E1C", VA = "0xE16E1C")]
		public void TryShowNotification()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xE16EB8", Offset = "0xE16EB8", VA = "0xE16EB8")]
		public void TryStopNotification()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xE18294", Offset = "0xE18294", VA = "0xE18294")]
		private void OnPointerOver(PushButton button)
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xE183BC", Offset = "0xE183BC", VA = "0xE183BC")]
		private void OnPointerOut(PushButton button)
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xE183C4", Offset = "0xE183C4", VA = "0xE183C4")]
		private void OnSelected(PushButton button)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xE17F14", Offset = "0xE17F14", VA = "0xE17F14")]
		private void Deselect()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xE182A0", Offset = "0xE182A0", VA = "0xE182A0")]
		private void UpdateVisualScale()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xE18460", Offset = "0xE18460", VA = "0xE18460")]
		public MenuCategoryTab()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class PlantsCollectionPage : CollectionPage
	{
		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xE18DC8", Offset = "0xE18DC8", VA = "0xE18DC8", Slot = "9")]
		public override void UpdateCategoryNewEffects()
		{
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xE18E28", Offset = "0xE18E28", VA = "0xE18E28")]
		public PlantsCollectionPage()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public enum RecipeCategory
	{
		[Token(Token = "0x40019BD")]
		Crafting,
		[Token(Token = "0x40019BE")]
		Cooking
	}
	[Token(Token = "0x2000456")]
	public class RecipeCategoryPage : CategoryPage
	{
		[Token(Token = "0x40019BF")]
		private const int RecipeEntriesPerFold = 8;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BookRecipeSprite[] m_recipeSprites;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RecipeCollectionItem> m_unlockedRecipes;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasInitializedEventListeners;

		[Token(Token = "0x170002BD")]
		public List<RecipeCollectionItem> UnlockedRecipes
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0xE18E30", Offset = "0xE18E30", VA = "0xE18E30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xE18E38", Offset = "0xE18E38", VA = "0xE18E38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xE18EE8", Offset = "0xE18EE8", VA = "0xE18EE8")]
		public void RegisterBase(RecipeCollectionPage recipeCollectionPage, RecipeCollectionSaveData[] m_unlockedRecipes)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xE19118", Offset = "0xE19118", VA = "0xE19118")]
		private void OnRecipeUnlocked(UnlockCollectableRecipeEvent e)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xE19360", Offset = "0xE19360", VA = "0xE19360")]
		private void TryUnlockRecipe(RecipeCollectionItemData item, bool isNew = true)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xE18FC8", Offset = "0xE18FC8", VA = "0xE18FC8")]
		private void UnlockAllRecipes(RecipeCollectionSaveData[] allUnlockedItems)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xE19458", Offset = "0xE19458", VA = "0xE19458")]
		private bool IsAlreadyUnlocked(string assetGuid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xE1967C", Offset = "0xE1967C", VA = "0xE1967C", Slot = "7")]
		protected override void ShowEntriesAtPage()
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xE198F4", Offset = "0xE198F4", VA = "0xE198F4", Slot = "6")]
		protected override int GetEntriesPerFold()
		{
			return default(int);
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xE198FC", Offset = "0xE198FC", VA = "0xE198FC", Slot = "8")]
		protected override Sprite GetCollectionSprite(int i)
		{
			return null;
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xE1997C", Offset = "0xE1997C", VA = "0xE1997C", Slot = "10")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xE19A34", Offset = "0xE19A34", VA = "0xE19A34")]
		public RecipeCategoryPage()
		{
		}
	}
	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FC8F0", Offset = "0x9FC8F0")]
	public class RecipeCollection : Collection
	{
		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected RecipeCategory m_category;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<RecipeCollectionItemData> m_items;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xE19AB0", Offset = "0xE19AB0", VA = "0xE19AB0")]
		private bool GetMatchingCategory(CollectableData collectable, out CraftingRecipe recipe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xE19BC8", Offset = "0xE19BC8", VA = "0xE19BC8")]
		private bool IsMatchingCategory(CraftingRecipe recipe)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xE191EC", Offset = "0xE191EC", VA = "0xE191EC")]
		public bool TryGetDataFromRecipe(CraftingRecipe recipe, out RecipeCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xE1955C", Offset = "0xE1955C", VA = "0xE1955C")]
		public bool TryGetDataFromGUID(string guid, out RecipeCollectionItemData recipeCollectionItem)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xE19C54", Offset = "0xE19C54", VA = "0xE19C54")]
		private Sprite GetCombinedSpriteAsset(CollectableData collectable)
		{
			return null;
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xE19D34", Offset = "0xE19D34", VA = "0xE19D34")]
		public RecipeCollection()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public struct RecipeCollectionItem
	{
		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RecipeCollectionItemData ItemData;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsNew;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xAD8D30", Offset = "0xAD8D30", VA = "0xAD8D30")]
		public RecipeCollectionItem(RecipeCollectionItemData itemData, bool isNew = true)
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xE198B4", Offset = "0xE198B4", VA = "0xE198B4")]
		public static RecipeCollectionItem MakeNonNew(RecipeCollectionItem item)
		{
			return default(RecipeCollectionItem);
		}
	}
	[Serializable]
	[Token(Token = "0x2000459")]
	public struct RecipeCollectionItemData
	{
		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string AssetGUID;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AssetReference AssetRef;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CraftingRecipe Recipe;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite Sprite;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RecipeCategory Category;
	}
	[Token(Token = "0x200045A")]
	public class RecipeCollectionPage : CollectionPage, IInitializable
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_craftingCategory;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_cookingCategory;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PushButton m_craftingCategoryButton;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PushButton m_cookingCategoryButton;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RecipeCategoryPage m_crafringCategoryPage;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RecipeCategoryPage m_cookingCategoryPage;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private RecipeCategoryPage[] m_allCategories;

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xE19DB0", Offset = "0xE19DB0", VA = "0xE19DB0", Slot = "10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xE19EA8", Offset = "0xE19EA8", VA = "0xE19EA8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xE1A0F0", Offset = "0xE1A0F0", VA = "0xE1A0F0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xE1A248", Offset = "0xE1A248", VA = "0xE1A248", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xE1A390", Offset = "0xE1A390", VA = "0xE1A390")]
		private void CraftingCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xE1A3D4", Offset = "0xE1A3D4", VA = "0xE1A3D4")]
		private void CookingCategoryPressed(PushButton button)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xE1A418", Offset = "0xE1A418", VA = "0xE1A418", Slot = "8")]
		public override bool HasNewlyUnlockedItems()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xE1A498", Offset = "0xE1A498", VA = "0xE1A498", Slot = "9")]
		public override void UpdateCategoryNewEffects()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xE1A514", Offset = "0xE1A514", VA = "0xE1A514")]
		public RecipeCollectionPage()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class RecipeCollectionPageState : ComponentState
	{
		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecipeCollectionSaveData[] unlockedRecipes;

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xE19F98", Offset = "0xE19F98", VA = "0xE19F98")]
		public RecipeCollectionPageState(List<RecipeCollectionItem> recipes)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045C")]
	public struct RecipeCollectionSaveData
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string AssetGUID;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsNew;

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xAD8E54", Offset = "0xAD8E54", VA = "0xAD8E54")]
		public RecipeCollectionSaveData(RecipeCollectionItemData recipeData, bool isNew)
		{
		}
	}
}
namespace NeatCorp.Fishing
{
	[Serializable]
	[Token(Token = "0x200045D")]
	public struct FishStruggleStats
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static FishStruggleStats Default;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Speed;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Strength;

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xADB57C", Offset = "0xADB57C", VA = "0xADB57C")]
		public FishStruggleStats(float speed, float strength)
		{
		}
	}
}
namespace NeatCorp.Interaction.Volumes
{
	[Serializable]
	[Token(Token = "0x200045E")]
	public class ComponentTrackingEvent : UnityEvent<Component[]>
	{
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD30D04", Offset = "0xD30D04", VA = "0xD30D04")]
		public ComponentTrackingEvent()
		{
		}
	}
	[Token(Token = "0x200045F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FC95C", Offset = "0x9FC95C")]
	public class ComponentTrackingTrigger : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FC9C0", Offset = "0x9FC9C0")]
		private sealed class <UpdateContiniously>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40019E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40019E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40019E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ComponentTrackingTrigger <>4__this;

			[Token(Token = "0x170002BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001AB7")]
				[Address(RVA = "0xD314BC", Offset = "0xD314BC", VA = "0xD314BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001AB9")]
				[Address(RVA = "0xD31524", Offset = "0xD31524", VA = "0xD31524", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001AB4")]
			[Address(RVA = "0xD31294", Offset = "0xD31294", VA = "0xD31294")]
			[DebuggerHidden]
			public <UpdateContiniously>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001AB5")]
			[Address(RVA = "0xD31438", Offset = "0xD31438", VA = "0xD31438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001AB6")]
			[Address(RVA = "0xD3143C", Offset = "0xD3143C", VA = "0xD3143C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xD314C4", Offset = "0xD314C4", VA = "0xD314C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SphereCollider m_trigger;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private SerializableSystemType m_type;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask m_layerMask;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private QueryTriggerInteraction m_queryTriggerInteraction;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_runOnInitialize;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_triggeredByPlayerProximity;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		private bool m_updateContinuously;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA061EC", Offset = "0xA061EC")]
		[SerializeField]
		private ComponentTrackingEvent OnUpdated;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OptimizedCollection<Component> m_overlappingComponents;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] m_overlappingColliders;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaitForSeconds m_waitForOneSecondInstruction;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_continuousUpdateRoutine;

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD30D54", Offset = "0xD30D54", VA = "0xD30D54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xD30DA0", Offset = "0xD30DA0", VA = "0xD30DA0", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xD30DE0", Offset = "0xD30DE0", VA = "0xD30DE0")]
		private void TrackOverlappingComponents()
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xD31094", Offset = "0xD31094", VA = "0xD31094")]
		public Component[] GetComponentsInVolume()
		{
			return null;
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xD310E0", Offset = "0xD310E0", VA = "0xD310E0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xD3117C", Offset = "0xD3117C", VA = "0xD3117C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD30D58", Offset = "0xD30D58", VA = "0xD30D58")]
		private void TryStopContinuousUpdate()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD31024", Offset = "0xD31024", VA = "0xD31024")]
		private void StartContinuousUpdate()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD31218", Offset = "0xD31218", VA = "0xD31218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16208", Offset = "0xA16208")]
		private IEnumerator UpdateContiniously()
		{
			return null;
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xD312C0", Offset = "0xD312C0", VA = "0xD312C0")]
		public bool TryGetComponentsInTrigger(out Component[] components)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xD31358", Offset = "0xD31358", VA = "0xD31358")]
		public ComponentTrackingTrigger()
		{
		}
	}
}
namespace NeatCorp.Interaction.Water
{
	[Token(Token = "0x2000461")]
	public enum WaterType
	{
		[Token(Token = "0x40019EA")]
		Normal,
		[Token(Token = "0x40019EB")]
		Humming
	}
	[Token(Token = "0x2000462")]
	public class WaterSource : MonoBehaviour
	{
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterType m_waterType;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float splashParticleMaxDistance;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource waterSound;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tool_WateringCan m_wateringCan;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody m_wateringCanRb;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_hasInitializedWateringCan;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float lastSplashTime;

		[Token(Token = "0x170002C0")]
		public WaterType WaterType
		{
			[Token(Token = "0x6001ABA")]
			[Address(RVA = "0xD3152C", Offset = "0xD3152C", VA = "0xD3152C")]
			get
			{
				return default(WaterType);
			}
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xD31534", Offset = "0xD31534", VA = "0xD31534")]
		private void PlayWaterSplash(Transform t)
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xD31748", Offset = "0xD31748", VA = "0xD31748")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xD31AA8", Offset = "0xD31AA8", VA = "0xD31AA8")]
		public WaterSource()
		{
		}
	}
}
namespace NeatCorp.Interaction.Tools.WateringCan
{
	[Token(Token = "0x2000463")]
	public class Tool_WateringCan : Tool_Base, ITool, IInitializable
	{
		[Token(Token = "0x40019F3")]
		private const float WATER_PER_SECOND = 1f;

		[Token(Token = "0x40019F4")]
		private const float WATERING_RADIUS = 0.75f;

		[Token(Token = "0x40019F5")]
		private const float WATERING_MAX_DISTANCE = 3f;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private WaterConeEmitter waterBeam;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatValueContainer container;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject waterSplashParticlePrefab;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MeshRenderer waterMeterRnd;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MaterialPropertyBlock waterMeterMpb;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MeshRenderer[] m_waterMeters;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06288", Offset = "0xA06288")]
		private NeatAudioPlayer pourSound;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer groundSound;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioPlayer waterEmptyAudio;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int shaderPropWaterMeter;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParticleSystem waterSplash;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WateringCanDroppedEvent droppedEvent;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_canPlayOutOfWaterSound;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int WaterCanLevel;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA062F4", Offset = "0xA062F4")]
		private bool <IsWatering>k__BackingField;

		[Token(Token = "0x170002C1")]
		private float FillPercent
		{
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0xD2FB70", Offset = "0xD2FB70", VA = "0xD2FB70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C2")]
		private bool HasWaterLeft
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xD2FB90", Offset = "0xD2FB90", VA = "0xD2FB90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C3")]
		private bool IsAtPourAngle
		{
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0xD2FBC0", Offset = "0xD2FBC0", VA = "0xD2FBC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		public bool IsWatering
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0xD2FCB4", Offset = "0xD2FCB4", VA = "0xD2FCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA162BC", Offset = "0xA162BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xD2FCBC", Offset = "0xD2FCBC", VA = "0xD2FCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA162CC", Offset = "0xA162CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C5")]
		private bool FXActive
		{
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0xD30C54", Offset = "0xD30C54", VA = "0xD30C54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0xD300C0", Offset = "0xD300C0", VA = "0xD300C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD2FC90", Offset = "0xD2FC90", VA = "0xD2FC90", Slot = "19")]
		public ToolType GetToolType()
		{
			return default(ToolType);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xD2FC98", Offset = "0xD2FC98", VA = "0xD2FC98", Slot = "15")]
		public override void OnSnapTurnWhileHeld()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xD2FCC8", Offset = "0xD2FCC8", VA = "0xD2FCC8", Slot = "6")]
		public override void Init()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xD2FD40", Offset = "0xD2FD40", VA = "0xD2FD40", Slot = "21")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xD30030", Offset = "0xD30030", VA = "0xD30030", Slot = "13")]
		public override void StopUsing(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD30210", Offset = "0xD30210", VA = "0xD30210", Slot = "14")]
		public override void WhileHeld(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xD302A8", Offset = "0xD302A8", VA = "0xD302A8")]
		private void DoWatering(float deltaWater)
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xD30968", Offset = "0xD30968", VA = "0xD30968")]
		public void FillCan(WaterType waterType = WaterType.Normal)
		{
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xD3099C", Offset = "0xD3099C", VA = "0xD3099C")]
		public void TryAddContent(float amount, WaterType waterType = WaterType.Normal)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xD2FF6C", Offset = "0xD2FF6C", VA = "0xD2FF6C")]
		private void UpdateMeter()
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xD309D0", Offset = "0xD309D0", VA = "0xD309D0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xD30A5C", Offset = "0xD30A5C", VA = "0xD30A5C", Slot = "17")]
		public override void SetToolUpgradeLevel(int upgradeLevel)
		{
		}

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xD307EC", Offset = "0xD307EC", VA = "0xD307EC")]
		private void ShowSplashParticle(Vector3 pos, Vector3 normal)
		{
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD30C0C", Offset = "0xD30C0C", VA = "0xD30C0C")]
		private void HideSplashParticle()
		{
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD30C80", Offset = "0xD30C80", VA = "0xD30C80")]
		public Tool_WateringCan()
		{
		}
	}
}
namespace NeatCorp.Interaction.Audio
{
	[Token(Token = "0x2000464")]
	public class Rotatable2Audio : MonoBehaviour
	{
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rotatable2 m_rotatable;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_triggerSoundSteps;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_minStepDelay;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue m_stepSound;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue m_minStepSound;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue m_maxStepSound;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_totalRotationRange;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_currentStep;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NeatAudioCue m_currentAudioCue;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_delay;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_active;

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD27E84", Offset = "0xD27E84", VA = "0xD27E84")]
		public void ActivateAudio()
		{
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD27E90", Offset = "0xD27E90", VA = "0xD27E90")]
		public void DeactivateAudio()
		{
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD27E98", Offset = "0xD27E98", VA = "0xD27E98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xD2801C", Offset = "0xD2801C", VA = "0xD2801C")]
		public Rotatable2Audio()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class RotatableAudio : MonoBehaviour
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rotatable m_rotatable;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_triggerSoundSteps;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_minStepDelay;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_audioPlayer;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioCue m_stepSound;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioCue m_minStepSound;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NeatAudioCue m_maxStepSound;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_totalRotationRange;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_currentStep;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NeatAudioCue m_currentAudioCue;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_delay;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_active;

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xD28034", Offset = "0xD28034", VA = "0xD28034")]
		public void ActivateAudio()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xD28040", Offset = "0xD28040", VA = "0xD28040")]
		public void DeactivateAudio()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xD28048", Offset = "0xD28048", VA = "0xD28048")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xD281C0", Offset = "0xD281C0", VA = "0xD281C0")]
		public RotatableAudio()
		{
		}
	}
}
namespace NeatCorp.Interaction.Bubble
{
	[Token(Token = "0x2000466")]
	public class MoodBubbleController : MonoBehaviour
	{
		[Token(Token = "0x4001A1D")]
		private const float PopOutDuration = 0.75f;

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD281D8", Offset = "0xD281D8", VA = "0xD281D8")]
		public void Remove()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD282BC", Offset = "0xD282BC", VA = "0xD282BC")]
		private void OnBubbleRemoved()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xD28380", Offset = "0xD28380", VA = "0xD28380")]
		public MoodBubbleController()
		{
		}
	}
}
namespace NeatCorp.Interaction.Instrument
{
	[Token(Token = "0x2000467")]
	public class DeresonatedEvent : GameEvent
	{
		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06404", Offset = "0xA06404")]
		private InstrumentResonator <Resonator>k__BackingField;

		[Token(Token = "0x170002C6")]
		public InstrumentResonator Resonator
		{
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0xD29C18", Offset = "0xD29C18", VA = "0xD29C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA162DC", Offset = "0xA162DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0xD29C20", Offset = "0xD29C20", VA = "0xD29C20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA162EC", Offset = "0xA162EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xD29C28", Offset = "0xD29C28", VA = "0xD29C28")]
		public DeresonatedEvent(InstrumentResonator resonator)
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class InstrumentGrabbedEvent : GameEvent
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06414", Offset = "0xA06414")]
		private ResonationInstrument <Instrument>k__BackingField;

		[Token(Token = "0x170002C7")]
		private ResonationInstrument Instrument
		{
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0xD29C5C", Offset = "0xD29C5C", VA = "0xD29C5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA162FC", Offset = "0xA162FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD29C64", Offset = "0xD29C64", VA = "0xD29C64")]
		public InstrumentGrabbedEvent(ResonationInstrument instrument)
		{
		}
	}
	[Token(Token = "0x2000469")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9FC9D0", Offset = "0x9FC9D0")]
	public class InstrumentResonator : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCA34", Offset = "0x9FCA34")]
		private sealed class <NotifyPlayer>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument instrument;

			[Token(Token = "0x4001A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayerHand hand;

			[Token(Token = "0x4001A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InstrumentResonator <>4__this;

			[Token(Token = "0x4001A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <didOpenInventory>5__2;

			[Token(Token = "0x4001A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Coroutine <rotateAnim>5__3;

			[Token(Token = "0x170002CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B12")]
				[Address(RVA = "0xD2C408", Offset = "0xD2C408", VA = "0xD2C408", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B14")]
				[Address(RVA = "0xD2C470", Offset = "0xD2C470", VA = "0xD2C470", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B0F")]
			[Address(RVA = "0xD2B1D4", Offset = "0xD2B1D4", VA = "0xD2B1D4")]
			[DebuggerHidden]
			public <NotifyPlayer>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xD2BE20", Offset = "0xD2BE20", VA = "0xD2BE20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B11")]
			[Address(RVA = "0xD2BE24", Offset = "0xD2BE24", VA = "0xD2BE24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B13")]
			[Address(RVA = "0xD2C410", Offset = "0xD2C410", VA = "0xD2C410", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A20")]
		private const float HarmonizationDuration = 2f;

		[Token(Token = "0x4001A21")]
		private const float HarmonizationThreshold = 0.0005f;

		[Token(Token = "0x4001A22")]
		private const float UpdateInterval = 0.1f;

		[Token(Token = "0x4001A23")]
		private const float DefaultTunedFalloffTime = 900f;

		[Token(Token = "0x4001A24")]
		private const float DefaultUnTunedFalloffTime = 30f;

		[Token(Token = "0x4001A25")]
		private const float DefaultIdleVolume = 0.05f;

		[Token(Token = "0x4001A26")]
		private const float HalfVolume = 0.5f;

		[Token(Token = "0x4001A27")]
		private const float HarmonizationFalloffFactor = 0.1f;

		[Token(Token = "0x4001A28")]
		private const float MaxVolumeChangeDuration = 30f;

		[Token(Token = "0x4001A29")]
		private const float MaxVolumeChangeFactor = 0.0033333334f;

		[Token(Token = "0x4001A2A")]
		private const float ResonationTargetTolerance = 0.05f;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_trigger;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_root;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_idleVolume;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_baseSoilFactor;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int midiPitch;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int midiTarget;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve m_tunedVolumeFalloff;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve m_untunedVolumeFalloff;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SoilModifierComponent m_soilModifier;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ParticleSystem m_resonationEffect;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticleSystem m_resonationEffectTargetReached;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform m_scaleableEffect;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ParticleSystem m_extraEffect;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue soilGrowing;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NeatAudioCue soilShrinking;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06534", Offset = "0xA06534")]
		public UnityEvent OnStartingToResonate;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UnityEvent OnReachedMaxResonation;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public int[] m_pitchlist;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SoilDataType[] m_soilDataToModify;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_resonationAmount;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_currentUpdateDuration;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_volumeFalloffTime;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_harmonizedDuration;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_harmonizedAmountDuration;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_targetResonation;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_currentResonation;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_notePosition;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float m_maxVolume;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float m_currentMaxVolume;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float m_systemMaxVolume;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float m_normalMaxVolume;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0657C", Offset = "0xA0657C")]
		private bool <IsHarmonized>k__BackingField;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0658C", Offset = "0xA0658C")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<ResonanceSystem> m_resonatingSystems;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool isStashed;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool isHeld;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine notifyPlayer;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string instrumentTag;

		[Token(Token = "0x170002C8")]
		public Vector3 RootPosition
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0xD29C98", Offset = "0xD29C98", VA = "0xD29C98")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C9")]
		public bool IsHarmonized
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0xD29CB4", Offset = "0xD29CB4", VA = "0xD29CB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1630C", Offset = "0xA1630C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0xD29CBC", Offset = "0xD29CBC", VA = "0xD29CBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1631C", Offset = "0xA1631C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CA")]
		public bool IsInitialized
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0xD29CC8", Offset = "0xD29CC8", VA = "0xD29CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1632C", Offset = "0xA1632C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xD29CD0", Offset = "0xD29CD0", VA = "0xD29CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1633C", Offset = "0xA1633C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002CB")]
		private bool ShouldUpdate
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xD29CDC", Offset = "0xD29CDC", VA = "0xD29CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xD29D3C", Offset = "0xD29D3C", VA = "0xD29D3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xD29E7C", Offset = "0xD29E7C", VA = "0xD29E7C", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xD2A230", Offset = "0xD2A230", VA = "0xD2A230")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xD2A3CC", Offset = "0xD2A3CC", VA = "0xD2A3CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xD2A4F0", Offset = "0xD2A4F0", VA = "0xD2A4F0")]
		public void UpdateResonation(float targetResonation)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xD2A7C8", Offset = "0xD2A7C8", VA = "0xD2A7C8")]
		public void OnStoppedResonatingWithInstrument()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xD2A8F8", Offset = "0xD2A8F8", VA = "0xD2A8F8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xD2B06C", Offset = "0xD2B06C", VA = "0xD2B06C")]
		public void NotifyPlayerAboutInstrumentInInventory(PlayerHand hand, ResonationInstrument instrument)
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xD2B128", Offset = "0xD2B128", VA = "0xD2B128")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1634C", Offset = "0xA1634C")]
		private IEnumerator NotifyPlayer(PlayerHand hand, ResonationInstrument instrument)
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xD2B200", Offset = "0xD2B200", VA = "0xD2B200")]
		public bool IsWithinRange(Vector3 otherPosition, float otherRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xD2B358", Offset = "0xD2B358", VA = "0xD2B358")]
		public void SetIsHarmonized(bool sendEvent = true)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xD2B43C", Offset = "0xD2B43C", VA = "0xD2B43C")]
		public void SetIsDeresonated()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xD29F24", Offset = "0xD29F24", VA = "0xD29F24")]
		private void UpdateResonationEffect()
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xD2B4F4", Offset = "0xD2B4F4", VA = "0xD2B4F4")]
		private void StopAllEffects()
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xD2B66C", Offset = "0xD2B66C", VA = "0xD2B66C")]
		public void PlayTargetReachedEffect()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xD2B700", Offset = "0xD2B700", VA = "0xD2B700")]
		public void SetPitch(float newPitch)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xD2B71C", Offset = "0xD2B71C", VA = "0xD2B71C")]
		public void SetMidiPitch(float newPitch)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xD2A6F0", Offset = "0xD2A6F0", VA = "0xD2A6F0")]
		private void SetResonationAmount(float newVolume)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xD2B7B4", Offset = "0xD2B7B4", VA = "0xD2B7B4")]
		public void SetSystemVolume()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD2B7C0", Offset = "0xD2B7C0", VA = "0xD2B7C0")]
		public void SetNormalVolume()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD299E0", Offset = "0xD299E0", VA = "0xD299E0")]
		public void StopResonation()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xD2B7CC", Offset = "0xD2B7CC", VA = "0xD2B7CC")]
		public void AddResonatingSystem(ResonanceSystem system)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xD2B850", Offset = "0xD2B850", VA = "0xD2B850")]
		public void RemoveResonatingSystem(ResonanceSystem system)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD2A2B4", Offset = "0xD2A2B4", VA = "0xD2A2B4")]
		private void UpdateResonationVolume()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD2B8D4", Offset = "0xD2B8D4", VA = "0xD2B8D4")]
		private void SetAudioSourceVolume(float newVolume)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD2A3A8", Offset = "0xD2A3A8", VA = "0xD2A3A8")]
		private void UpdateVolumeFalloff(float updateDeltaTime)
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xD2B98C", Offset = "0xD2B98C", VA = "0xD2B98C")]
		private void UpdateByFixedCurveStep(ref float value, AnimationCurve curve, ref float time, float updateDeltaTime)
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xD2BAE0", Offset = "0xD2BAE0", VA = "0xD2BAE0")]
		private void UpdateByCurve(ref float value, AnimationCurve curve, ref float time, float updateDeltaTime)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xD2BB40", Offset = "0xD2BB40", VA = "0xD2BB40", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD291D4", Offset = "0xD291D4", VA = "0xD291D4")]
		public void OnGrabbed()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD2936C", Offset = "0xD2936C", VA = "0xD2936C")]
		public void OnDropped()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD29128", Offset = "0xD29128", VA = "0xD29128")]
		public void OnStashed()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD29670", Offset = "0xD29670", VA = "0xD29670")]
		public void OnActivated()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD2BBF8", Offset = "0xD2BBF8", VA = "0xD2BBF8")]
		public int GetPitchAtIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD2BC3C", Offset = "0xD2BC3C", VA = "0xD2BC3C")]
		public InstrumentResonator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200046B")]
	public class InstrumentResonatorState : ComponentState
	{
		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ResonationAmount;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsHarmonized;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD2BBB8", Offset = "0xD2BBB8", VA = "0xD2BBB8")]
		public InstrumentResonatorState(float resonation, bool harmonized)
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class ResonatedEvent : GameEvent
	{
		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0659C", Offset = "0xA0659C")]
		private InstrumentResonator <Resonator>k__BackingField;

		[Token(Token = "0x170002CE")]
		public InstrumentResonator Resonator
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0xD2C478", Offset = "0xD2C478", VA = "0xD2C478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16400", Offset = "0xA16400")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0xD2C480", Offset = "0xD2C480", VA = "0xD2C480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16410", Offset = "0xA16410")]
			private set
			{
			}
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD2B408", Offset = "0xD2B408", VA = "0xD2B408")]
		public ResonatedEvent(InstrumentResonator resonator)
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class ResonationInstrument : MonoBehaviour
	{
		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCA44", Offset = "0x9FCA44")]
		private sealed class <AnimateSongFinish>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001A99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001A9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001A9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument <>4__this;

			[Token(Token = "0x4001A9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <rotationSpeed>5__2;

			[Token(Token = "0x4001A9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <rotVec>5__3;

			[Token(Token = "0x4001A9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <timeLeft>5__4;

			[Token(Token = "0x4001A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private bool <outerRingDone>5__5;

			[Token(Token = "0x4001AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			private bool <middleRingDone>5__6;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B49")]
				[Address(RVA = "0xD2F518", Offset = "0xD2F518", VA = "0xD2F518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B4B")]
				[Address(RVA = "0xD2F580", Offset = "0xD2F580", VA = "0xD2F580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xD2E35C", Offset = "0xD2E35C", VA = "0xD2E35C")]
			[DebuggerHidden]
			public <AnimateSongFinish>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xD2EFF8", Offset = "0xD2EFF8", VA = "0xD2EFF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xD2EFFC", Offset = "0xD2EFFC", VA = "0xD2EFFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B4A")]
			[Address(RVA = "0xD2F520", Offset = "0xD2F520", VA = "0xD2F520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCA54", Offset = "0x9FCA54")]
		private sealed class <MaterialPropertyAnimation>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument <>4__this;

			[Token(Token = "0x4001AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float startMinProperty;

			[Token(Token = "0x4001AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float startMaxProperty;

			[Token(Token = "0x4001AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int rendererIndex;

			[Token(Token = "0x4001AA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float target;

			[Token(Token = "0x4001AA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool updateEmissiveResonationMaterialData;

			[Token(Token = "0x4001AA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <firstProperty>5__2;

			[Token(Token = "0x4001AAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <secondProperty>5__3;

			[Token(Token = "0x4001AAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <firstPropertyId>5__4;

			[Token(Token = "0x4001AAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <secondPropertyId>5__5;

			[Token(Token = "0x4001AAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <change>5__6;

			[Token(Token = "0x4001AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <iterations>5__7;

			[Token(Token = "0x4001AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <i>5__8;

			[Token(Token = "0x170002D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B4F")]
				[Address(RVA = "0xD2FB00", Offset = "0xD2FB00", VA = "0xD2FB00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B51")]
				[Address(RVA = "0xD2FB68", Offset = "0xD2FB68", VA = "0xD2FB68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0xD2EB50", Offset = "0xD2EB50", VA = "0xD2EB50")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6001B4D")]
			[Address(RVA = "0xD2F6A0", Offset = "0xD2F6A0", VA = "0xD2F6A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0xD2F6A4", Offset = "0xD2F6A4", VA = "0xD2F6A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xD2FB08", Offset = "0xD2FB08", VA = "0xD2FB08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCA64", Offset = "0x9FCA64")]
		private sealed class <MaterialPropertyAnimation>d__100 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ResonationInstrument <>4__this;

			[Token(Token = "0x4001AB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int rendererIndex;

			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float target;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B55")]
				[Address(RVA = "0xD2F630", Offset = "0xD2F630", VA = "0xD2F630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B57")]
				[Address(RVA = "0xD2F698", Offset = "0xD2F698", VA = "0xD2F698", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xD2EC58", Offset = "0xD2EC58", VA = "0xD2EC58")]
			[DebuggerHidden]
			public <MaterialPropertyAnimation>d__100(int <>1__state)
			{
			}

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xD2F588", Offset = "0xD2F588", VA = "0xD2F588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0xD2F58C", Offset = "0xD2F58C", VA = "0xD2F58C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0xD2F638", Offset = "0xD2F638", VA = "0xD2F638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int minId;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int maxId;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int grooveSelectorId;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int NumInstrumentsInInventory;

		[Token(Token = "0x4001A61")]
		public const float MinMidiPitch = 60f;

		[Token(Token = "0x4001A62")]
		public const float MaxMidiPitch = 72f;

		[Token(Token = "0x4001A63")]
		public const float PitchFactor = 0.05f;

		[Token(Token = "0x4001A64")]
		private const float VolumeIncreaseFactor = 0.005f;

		[Token(Token = "0x4001A65")]
		private const float RotationFactor = 0.1f;

		[Token(Token = "0x4001A66")]
		private const float DefaultVolumeFalloffTime = 25f;

		[Token(Token = "0x4001A67")]
		private const float DotDistance = 0.55f;

		[Token(Token = "0x4001A68")]
		private const float MinResonanceVolume = 0.05f;

		[Token(Token = "0x4001A69")]
		private const float PitchDeltaTolerance = 0.25f;

		[Token(Token = "0x4001A6A")]
		private const int NumberOfAnimatedProperties = 2;

		[Token(Token = "0x4001A6B")]
		private const float MaterialAnimationUpdatesPerSecond = 20f;

		[Token(Token = "0x4001A6C")]
		private const float MaterialAnimationDuration = 0.5f;

		[Token(Token = "0x4001A6D")]
		private const float MaterialAnimationAmount = 0.2f;

		[Token(Token = "0x4001A6E")]
		private const float AnimationAmountThreshold = 0.001f;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rotatable2 m_rotatable;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AnimationCurve m_volumeFalloffCurve;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GestrumentMonophonic m_gestrumentMonophonic;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject[] m_indicators;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem[] m_indicatorEffects;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0660C", Offset = "0xA0660C")]
		[SerializeField]
		private ParticleSystem m_instrumentPlayingEffect;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem m_harmonizationParticle;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform outerRing;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform middleRing;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer m_instrumentBaseRenderer;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Renderer m_knobRenderer;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer m_outerRingRenderer;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Renderer m_innerRingRenderer;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InstrumentCrystalAnimation middleCrystal;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private InstrumentCrystalAnimation handleCrystal;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform rootObject;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private NeatAudioCue instrumentSoundCue;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int SPEED;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int STATE;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int RATTLE;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int PROGRESS;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MaterialPropertyBlock m_currentEmissiveMaterialPropertyBlock;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_pitch;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float m_volume;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private InstrumentResonator m_resonator;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float sqrDistancePlayerToResonator;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_lastRotation;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_volumeFalloffTime;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool m_isBeingUsed;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float currentTargetRotation;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int numIndicatorsActivated;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int currentTargetGroove;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool isAnimatingSongFinish;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private YieldInstruction m_waitForOneThenth;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine animateSongFinish;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<InstrumentResonator> allResonatorsInRange;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private EmissiveResonationMaterialData[] m_emissiveResonationMaterialData;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Renderer[] m_instrumentRenderers;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float timeLeftToHoldStill;

		[Token(Token = "0x4001A98")]
		private const float timeRequiredToHoldStill = 0.8f;

		[Token(Token = "0x170002CF")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0xD2C488", Offset = "0xD2C488", VA = "0xD2C488")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public bool IsHeld
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xD2C3A0", Offset = "0xD2C3A0", VA = "0xD2C3A0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xD2C490", Offset = "0xD2C490", VA = "0xD2C490")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD2C718", Offset = "0xD2C718", VA = "0xD2C718")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xD2C964", Offset = "0xD2C964", VA = "0xD2C964")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xD2CF40", Offset = "0xD2CF40", VA = "0xD2CF40")]
		private void OnStartedPlaying()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xD2DD8C", Offset = "0xD2DD8C", VA = "0xD2DD8C")]
		private void RandomizeNextTarget()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xD2DFAC", Offset = "0xD2DFAC", VA = "0xD2DFAC")]
		private void ResetTimeToHold()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xD2D4C8", Offset = "0xD2D4C8", VA = "0xD2D4C8")]
		private float GetProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD2D67C", Offset = "0xD2D67C", VA = "0xD2D67C")]
		private void CheckIfTargetIsReached()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD2E0AC", Offset = "0xD2E0AC", VA = "0xD2E0AC")]
		private void OnFinishedPlaying()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD2E2E0", Offset = "0xD2E2E0", VA = "0xD2E2E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16420", Offset = "0xA16420")]
		private IEnumerator AnimateSongFinish()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD2DFBC", Offset = "0xD2DFBC", VA = "0xD2DFBC")]
		private void LockRingIntoPlace()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD2E170", Offset = "0xD2E170", VA = "0xD2E170")]
		private void ResetRings(bool resetRotation)
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD2CE28", Offset = "0xD2CE28", VA = "0xD2CE28")]
		private void OnDroppedInstrument()
		{
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD2DCCC", Offset = "0xD2DCCC", VA = "0xD2DCCC")]
		private void StartSound()
		{
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD2D5A4", Offset = "0xD2D5A4", VA = "0xD2D5A4")]
		private void UpdateVolume(float rotationAmount)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD2C2C4", Offset = "0xD2C2C4", VA = "0xD2C2C4")]
		public void StartInstrumentPlayingEffect(float emissionRate)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xD2C3BC", Offset = "0xD2C3BC", VA = "0xD2C3BC")]
		public void StopInstrumentPlayingEffect()
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD2D1B8", Offset = "0xD2D1B8", VA = "0xD2D1B8")]
		private void UpdateInstrumentPlayingEffect(float speed)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD2DCA8", Offset = "0xD2DCA8", VA = "0xD2DCA8")]
		private void UpdateVolumeFalloff()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD2E520", Offset = "0xD2E520", VA = "0xD2E520")]
		private void UpdateByFixedCurveStep(ref float value, AnimationCurve curve, ref float time)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xD2E448", Offset = "0xD2E448", VA = "0xD2E448")]
		private void ResetAllIndicators()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xD2E388", Offset = "0xD2E388", VA = "0xD2E388")]
		private void StopSound()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xD2DCC8", Offset = "0xD2DCC8", VA = "0xD2DCC8")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xD2CF74", Offset = "0xD2CF74", VA = "0xD2CF74")]
		private void CheckIfResonatorIsStillInRange()
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD2D350", Offset = "0xD2D350", VA = "0xD2D350")]
		private bool HasResonator()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD2ADCC", Offset = "0xD2ADCC", VA = "0xD2ADCC")]
		public void RegisterResonator(InstrumentResonator instrumentResonator)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD2E5E8", Offset = "0xD2E5E8", VA = "0xD2E5E8")]
		public void OnAddedToInventory()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD2E658", Offset = "0xD2E658", VA = "0xD2E658")]
		public void OnRemovedFromInventory()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD2E6C8", Offset = "0xD2E6C8", VA = "0xD2E6C8")]
		private void SetGlowingMaterialProperties(float val)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD2E788", Offset = "0xD2E788", VA = "0xD2E788")]
		private void SetPropertyBlockForAll()
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD2E804", Offset = "0xD2E804", VA = "0xD2E804")]
		private void SetPropertyBlockForRenderer(int rendererIndex)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD2D40C", Offset = "0xD2D40C", VA = "0xD2D40C")]
		private void StartMaterialAnimationRoutine(int index, float target)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD2E8F0", Offset = "0xD2E8F0", VA = "0xD2E8F0")]
		private void StopMaterialEmissionImmediately(int index)
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD2EA94", Offset = "0xD2EA94", VA = "0xD2EA94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16484", Offset = "0xA16484")]
		private IEnumerator MaterialPropertyAnimation(float startMinProperty, float startMaxProperty, int rendererIndex, float target, bool updateEmissiveResonationMaterialData)
		{
			return null;
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD2DC14", Offset = "0xD2DC14", VA = "0xD2DC14")]
		private void ShutDownAllMaterialEmission(bool animate = true)
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD2EBD0", Offset = "0xD2EBD0", VA = "0xD2EBD0")]
		private void StartAllMaterialEmission()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD2E854", Offset = "0xD2E854", VA = "0xD2E854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA164E8", Offset = "0xA164E8")]
		private IEnumerator MaterialPropertyAnimation(int rendererIndex, float target)
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD2D3C0", Offset = "0xD2D3C0", VA = "0xD2D3C0")]
		private bool IsLitOrLightingUp(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD2EB7C", Offset = "0xD2EB7C", VA = "0xD2EB7C")]
		private bool IsUnlitOrShuttingDown(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD2EC84", Offset = "0xD2EC84", VA = "0xD2EC84")]
		private bool IsFullyLit(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD2ECCC", Offset = "0xD2ECCC", VA = "0xD2ECCC")]
		public void OnHandleSnapped(Rotatable2 rotatable)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD2EDAC", Offset = "0xD2EDAC", VA = "0xD2EDAC")]
		public ResonationInstrument()
		{
		}
	}
}
namespace NeatCorp.Interaction.Crystals
{
	[Token(Token = "0x2000471")]
	public class CrystalPedestal : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCA74", Offset = "0x9FCA74")]
		private sealed class <WaitForInitialization>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InstrumentResonator resonator;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CrystalPedestal <>4__this;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B72")]
				[Address(RVA = "0xD29BA8", Offset = "0xD29BA8", VA = "0xD29BA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B74")]
				[Address(RVA = "0xD29C10", Offset = "0xD29C10", VA = "0xD29C10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xD28C10", Offset = "0xD28C10", VA = "0xD28C10")]
			[DebuggerHidden]
			public <WaitForInitialization>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xD29AA4", Offset = "0xD29AA4", VA = "0xD29AA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xD29AA8", Offset = "0xD29AA8", VA = "0xD29AA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xD29BB0", Offset = "0xD29BB0", VA = "0xD29BB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_crystalObject;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_crystalPreVis;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_shardReference;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CrystalBeacon m_beacon;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InstrumentResonator m_resonator;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_hasCrystal;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isLeftHandRegistered;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_isRightHandRegistered;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PlayerHand m_leftHand;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayerHand m_rightHand;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private PlayerHand m_assignableHand;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CrystalShard m_crystalShard;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_crystalTransform;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isTryingToGrabCrystal;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ResonanceSystem m_snappedToSystem;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isSnappedIntoPosition;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xD28388", Offset = "0xD28388", VA = "0xD28388")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xD287C4", Offset = "0xD287C4", VA = "0xD287C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD289A0", Offset = "0xD289A0", VA = "0xD289A0", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xD28B78", Offset = "0xD28B78", VA = "0xD28B78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1663C", Offset = "0xA1663C")]
		private IEnumerator WaitForInitialization(InstrumentResonator resonator)
		{
			return null;
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xD28C3C", Offset = "0xD28C3C", VA = "0xD28C3C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xD28D74", Offset = "0xD28D74", VA = "0xD28D74")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xD28E7C", Offset = "0xD28E7C", VA = "0xD28E7C")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xD28624", Offset = "0xD28624", VA = "0xD28624")]
		private void OnStashed()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xD286D0", Offset = "0xD286D0", VA = "0xD286D0")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xD29278", Offset = "0xD29278", VA = "0xD29278")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xD2941C", Offset = "0xD2941C", VA = "0xD2941C")]
		private void OnGemGrabbed(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xD29460", Offset = "0xD29460", VA = "0xD29460")]
		private void OnGemDropped(GemDroppedEvent e)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xD28C70", Offset = "0xD28C70", VA = "0xD28C70")]
		private void TryRegisterHand(Collider other)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xD28D78", Offset = "0xD28D78", VA = "0xD28D78")]
		private void TryUnregisterHand(Collider other)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xD29010", Offset = "0xD29010", VA = "0xD29010")]
		private void TryAddCrystal(Collider other)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD295DC", Offset = "0xD295DC", VA = "0xD295DC")]
		public Vector3 GetPrevisPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD295F8", Offset = "0xD295F8", VA = "0xD295F8")]
		private void OnInfusionCompleted(GemType gemType)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD28AD0", Offset = "0xD28AD0", VA = "0xD28AD0")]
		private void SetCrystalActive(bool shoudBeActive)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD28EE0", Offset = "0xD28EE0", VA = "0xD28EE0")]
		private void TryGrabShard(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD29728", Offset = "0xD29728", VA = "0xD29728")]
		public void SetShouldSnapIntoPosition(bool shouldSnap, ResonanceSystem resonanceSystem, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD298C4", Offset = "0xD298C4", VA = "0xD298C4")]
		private void OnShardSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD29A04", Offset = "0xD29A04", VA = "0xD29A04", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD29A9C", Offset = "0xD29A9C", VA = "0xD29A9C")]
		public CrystalPedestal()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000473")]
	public class CrystalPedestalState : ComponentState
	{
		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool hasCrystal;

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xD29A6C", Offset = "0xD29A6C", VA = "0xD29A6C")]
		public CrystalPedestalState(bool hasCrystal)
		{
		}
	}
}
namespace NeatCorp.Gradient
{
	[Token(Token = "0x2000474")]
	public class ColorState : ComponentState
	{
		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color32Serializable Dark;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Color32Serializable Mid;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32Serializable Bright;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xE86144", Offset = "0xE86144", VA = "0xE86144")]
		public ColorState(PlantColors colors)
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class SaveColorState : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GradientColorer m_gradientColorer;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color32 m_dark;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color32 m_mid;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color32 m_bright;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xE861F8", Offset = "0xE861F8", VA = "0xE861F8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xE86280", Offset = "0xE86280", VA = "0xE86280", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xE86414", Offset = "0xE86414", VA = "0xE86414")]
		public SaveColorState()
		{
		}
	}
}
namespace NeatCorp.Gardening
{
	[Token(Token = "0x2000476")]
	public interface ISoilManipulator
	{
		[Token(Token = "0x6001B7A")]
		void OnSoilManipulation(Vector3 pos);
	}
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCA84", Offset = "0x9FCA84")]
	public class TillableMaterials : ScriptableObject
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material[] Materials;

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xE824AC", Offset = "0xE824AC", VA = "0xE824AC")]
		public bool IsTillable(Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xE825C0", Offset = "0xE825C0", VA = "0xE825C0")]
		public TillableMaterials()
		{
		}
	}
}
namespace NeatCorp.Gardening.WaterPump
{
	[Token(Token = "0x2000478")]
	public class WaterStream : MonoBehaviour
	{
		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Tool_WateringCan m_wateringCan;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody m_wateringCanRb;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_hasInitializedWateringCan;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isWateringCanAvailable;

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xE825C8", Offset = "0xE825C8", VA = "0xE825C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xE825E8", Offset = "0xE825E8", VA = "0xE825E8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xE82848", Offset = "0xE82848", VA = "0xE82848")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xE82768", Offset = "0xE82768", VA = "0xE82768")]
		private void TryAddCan(Collider other)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xE8284C", Offset = "0xE8284C", VA = "0xE8284C")]
		private void TryRemoveCan(Collider other)
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xE825D8", Offset = "0xE825D8", VA = "0xE825D8")]
		private void TryRemoveCan()
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xE82900", Offset = "0xE82900", VA = "0xE82900")]
		public void TryFillingWaterCan(float amount, WaterType waterType)
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xE82928", Offset = "0xE82928", VA = "0xE82928")]
		public WaterStream()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class Waterpump : MonoBehaviour
	{
		[Token(Token = "0x4001AD7")]
		private const float WateringMaxDistance = 2f;

		[Token(Token = "0x4001AD8")]
		private const float WateringRadius = 0.75f;

		[Token(Token = "0x4001AD9")]
		private const float WaterflowFalloff = 0.005f;

		[Token(Token = "0x4001ADA")]
		private const float MaxWaterBeamWidth = 0.05f;

		[Token(Token = "0x4001ADB")]
		private const float MaxWaterBeamAngle = 30f;

		[Token(Token = "0x4001ADC")]
		private const float RotationFlowFactor = 0.2f;

		[Token(Token = "0x4001ADD")]
		private const float FillInterval = 0.5f;

		[Token(Token = "0x4001ADE")]
		private const float FillMultiplier = 4f;

		[Token(Token = "0x4001ADF")]
		private const float MaxWaterFlow = 5f;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WaterStream m_waterStream;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rotatable m_rotatable;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WaterConeEmitter m_waterConeEmitter;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_waterBeamWidthCurve;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve m_motionForceCurve;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioPlayer m_pourSound;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioPlayer m_groundSound;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_downwardMotion;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isStreamActive;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_shouldUpdate;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_downwardMotionDuration;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_lastRotation;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_durationSinceLastFill;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaterType m_extractedWaterType;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float WaterFlow;

		[Token(Token = "0x170002D9")]
		public WaterType WaterType
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xE82930", Offset = "0xE82930", VA = "0xE82930")]
			get
			{
				return default(WaterType);
			}
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xE82938", Offset = "0xE82938", VA = "0xE82938")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xE82B98", Offset = "0xE82B98", VA = "0xE82B98")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xE82D1C", Offset = "0xE82D1C", VA = "0xE82D1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xE82E54", Offset = "0xE82E54", VA = "0xE82E54")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xE82EB0", Offset = "0xE82EB0", VA = "0xE82EB0")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xE82F2C", Offset = "0xE82F2C", VA = "0xE82F2C")]
		private void OnStashed()
		{
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xE82E80", Offset = "0xE82E80", VA = "0xE82E80")]
		private void SetHandleActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xE82EA8", Offset = "0xE82EA8", VA = "0xE82EA8")]
		private void StopWaterFlow()
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xE8309C", Offset = "0xE8309C", VA = "0xE8309C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xE830F4", Offset = "0xE830F4", VA = "0xE830F4")]
		private void UpdatePumpMotion()
		{
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xE83200", Offset = "0xE83200", VA = "0xE83200")]
		private void UpdateWaterflowFalloff()
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xE82F34", Offset = "0xE82F34", VA = "0xE82F34")]
		private void UpdateWaterStream()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xE8329C", Offset = "0xE8329C", VA = "0xE8329C")]
		private void DoWatering(float deltaWater)
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xE83634", Offset = "0xE83634", VA = "0xE83634")]
		public Waterpump()
		{
		}
	}
}
namespace NeatCorp.Gardening.Compost
{
	[Token(Token = "0x200047A")]
	public class Compost : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCAF0", Offset = "0x9FCAF0")]
		private sealed class <>c__DisplayClass80_0
		{
			[Token(Token = "0x4001B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody rb;

			[Token(Token = "0x4001B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 compostToPlayerDirection;

			[Token(Token = "0x4001B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BirdBehavior birdBehavior;

			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xE7F298", Offset = "0xE7F298", VA = "0xE7F298")]
			public <>c__DisplayClass80_0()
			{
			}

			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0xE80714", Offset = "0xE80714", VA = "0xE80714")]
			internal void <MoveObjectOutOfBin>b__0()
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB00", Offset = "0x9FCB00")]
		private sealed class <RemoveAllDelayed>d__82 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BC7")]
				[Address(RVA = "0xE80DA4", Offset = "0xE80DA4", VA = "0xE80DA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BC9")]
				[Address(RVA = "0xE80E0C", Offset = "0xE80E0C", VA = "0xE80E0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xE7F338", Offset = "0xE7F338", VA = "0xE7F338")]
			[DebuggerHidden]
			public <RemoveAllDelayed>d__82(int <>1__state)
			{
			}

			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0xE80C10", Offset = "0xE80C10", VA = "0xE80C10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0xE80C14", Offset = "0xE80C14", VA = "0xE80C14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0xE80DAC", Offset = "0xE80DAC", VA = "0xE80DAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB10", Offset = "0x9FCB10")]
		private sealed class <DestroyObject>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform obj;

			[Token(Token = "0x4001B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Compost <>4__this;

			[Token(Token = "0x4001B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <startScale>5__2;

			[Token(Token = "0x4001B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <distance>5__3;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BCD")]
				[Address(RVA = "0xE80BA0", Offset = "0xE80BA0", VA = "0xE80BA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BCF")]
				[Address(RVA = "0xE80C08", Offset = "0xE80C08", VA = "0xE80C08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xE7F364", Offset = "0xE7F364", VA = "0xE7F364")]
			[DebuggerHidden]
			public <DestroyObject>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xE807D8", Offset = "0xE807D8", VA = "0xE807D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0xE807DC", Offset = "0xE807DC", VA = "0xE807DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xE80BA8", Offset = "0xE80BA8", VA = "0xE80BA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB20", Offset = "0x9FCB20")]
		private sealed class <WaitForProcessing>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x4001B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <durationAfterDelay>5__2;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD3")]
				[Address(RVA = "0xE80FF4", Offset = "0xE80FF4", VA = "0xE80FF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD5")]
				[Address(RVA = "0xE8105C", Offset = "0xE8105C", VA = "0xE8105C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xE7F7B4", Offset = "0xE7F7B4", VA = "0xE7F7B4")]
			[DebuggerHidden]
			public <WaitForProcessing>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xE80E14", Offset = "0xE80E14", VA = "0xE80E14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xE80E18", Offset = "0xE80E18", VA = "0xE80E18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0xE80FFC", Offset = "0xE80FFC", VA = "0xE80FFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB30", Offset = "0x9FCB30")]
		private sealed class <WaitUntilTrayOpen>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD9")]
				[Address(RVA = "0xE813C0", Offset = "0xE813C0", VA = "0xE813C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BDB")]
				[Address(RVA = "0xE81428", Offset = "0xE81428", VA = "0xE81428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xE7F898", Offset = "0xE7F898", VA = "0xE7F898")]
			[DebuggerHidden]
			public <WaitUntilTrayOpen>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xE81274", Offset = "0xE81274", VA = "0xE81274", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xE81278", Offset = "0xE81278", VA = "0xE81278", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xE813C8", Offset = "0xE813C8", VA = "0xE813C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB40", Offset = "0x9FCB40")]
		private sealed class <WaitUntilLidOpen>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Compost <>4__this;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BDF")]
				[Address(RVA = "0xE81204", Offset = "0xE81204", VA = "0xE81204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0xE8126C", Offset = "0xE8126C", VA = "0xE8126C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xE7F940", Offset = "0xE7F940", VA = "0xE7F940")]
			[DebuggerHidden]
			public <WaitUntilLidOpen>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDD")]
			[Address(RVA = "0xE81064", Offset = "0xE81064", VA = "0xE81064", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xE81068", Offset = "0xE81068", VA = "0xE81068", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xE8120C", Offset = "0xE8120C", VA = "0xE8120C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AF0")]
		private const int MaxContentLevel = 10;

		[Token(Token = "0x4001AF1")]
		private const int MinContentLevel = 0;

		[Token(Token = "0x4001AF2")]
		private const float RemovalWaitDuration = 1f;

		[Token(Token = "0x4001AF3")]
		private const float TrayOpenAngle = 15f;

		[Token(Token = "0x4001AF4")]
		private const float OffsetDistance = 0.06f;

		[Token(Token = "0x4001AF5")]
		private const float DelayProcessingStart = 1.5f;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Vector3 VerticalOffset;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly int m_compostOnId;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly int m_compostDoneId;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int m_fertGrabbedId;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int m_lidUpStateNameId;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int m_openTrayStateNameId;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly YieldInstruction m_waitBeforeRemovalInstruction;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly YieldInstruction m_waitBeforeProcessStart;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CompostTrigger m_entryTrigger;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_poof;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_fallSpeed;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve m_curve;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Stashable m_stashable;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AssetReference m_compostProducePrefab;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_maxProcessTime;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve m_proccesTimeMultiplierCurve;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06898", Offset = "0xA06898")]
		private Transform m_needle;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private CompostLever m_lever;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Transform m_meterIndicator;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06904", Offset = "0xA06904")]
		private int ContentLevel;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private CompostTrigger m_compostTrigger;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform m_contentTransform;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform m_minContentPosition;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform m_maxContentPosition;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06990", Offset = "0xA06990")]
		private Transform m_trayTransform;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Rotatable m_trayRotator;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Transform m_produceSpawnPoint;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA069FC", Offset = "0xA069FC")]
		[SerializeField]
		private NeatAudioPlayer m_soundPlayer;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private NeatAudioCue m_compostLoopCue;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private NeatAudioCue m_compostDoneCue;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private NeatAudioCue m_trayCloseCue;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private NeatAudioCue m_resetCue;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private NeatAudioCue m_produceAddedCue;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private NeatAudioCue m_materialRejectedCue;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private OptimizedCollection<Transform> m_objectsEnteringBin;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private OptimizedCollection<Transform> m_objectsExitingBin;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private OptimizedCollection<Transform> m_objectsBeingConsumed;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private OptimizedCollection<CompostProduce> m_produceInTray;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private CompostState m_currentState;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Transform[] m_meterIndicators;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool m_initialized;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool m_updateTrayAngle;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		private bool m_isTrayOpen;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x183")]
		private bool m_isHoldingTray;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Coroutine m_delayedRemovalRoutine;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private bool m_isProcessing;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Coroutine m_waitForProcessingRoutine;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Coroutine m_waitUntilTrayOpenRoutine;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Coroutine m_waitUntilLidOpenRoutine;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int m_initializedProduce;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool m_animateNeedle;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float m_needleTargetDuration;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private float m_needleAnimDuration;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private int m_animTargetContentLevel;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float m_needleDeltaAngle;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private NeatAudioPlayer m_poofAudio;

		[Token(Token = "0x170002DA")]
		public bool Initialized
		{
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xE7D3DC", Offset = "0xE7D3DC", VA = "0xE7D3DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xE7D3E4", Offset = "0xE7D3E4", VA = "0xE7D3E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xE7D738", Offset = "0xE7D738", VA = "0xE7D738")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xE7DB0C", Offset = "0xE7DB0C", VA = "0xE7DB0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xE7DBF0", Offset = "0xE7DBF0", VA = "0xE7DBF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xE7DE3C", Offset = "0xE7DE3C", VA = "0xE7DE3C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xE7DECC", Offset = "0xE7DECC", VA = "0xE7DECC")]
		private int[] GetSerializableProduceInTray()
		{
			return null;
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xE7E008", Offset = "0xE7E008", VA = "0xE7E008", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xE7E2A8", Offset = "0xE7E2A8", VA = "0xE7E2A8")]
		private void SpawnProduceInTrayOnInitialize()
		{
		}

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xE7E450", Offset = "0xE7E450", VA = "0xE7E450")]
		private void OpenTray()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xE7DDAC", Offset = "0xE7DDAC", VA = "0xE7DDAC")]
		private void UpdateTrayAngle()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xE7E494", Offset = "0xE7E494", VA = "0xE7E494")]
		private void SetTrayStateOpen(bool shouldBeOpen)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xE7E4B8", Offset = "0xE7E4B8", VA = "0xE7E4B8")]
		private void UpdateTrayGrabbables()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xE7E60C", Offset = "0xE7E60C", VA = "0xE7E60C")]
		private void OnEnterEntryTrigger(Transform other, ICompostable compostable)
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xE7E7A8", Offset = "0xE7E7A8", VA = "0xE7E7A8")]
		private void OnExitEntryTrigger(Transform other)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xE7E908", Offset = "0xE7E908", VA = "0xE7E908")]
		public void OnEnterCompostTrigger(Transform otherRoot, ICompostable compostable)
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xE7EAB8", Offset = "0xE7EAB8", VA = "0xE7EAB8")]
		private void MoveObjectOutOfBin(Transform objTransform, bool teleport = false)
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xE7F08C", Offset = "0xE7F08C", VA = "0xE7F08C")]
		private void ConsumeCompostable(Transform objTransform, ICompostable compostable)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xE7E88C", Offset = "0xE7E88C", VA = "0xE7E88C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA166F0", Offset = "0xA166F0")]
		private IEnumerator RemoveAllDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xE7F2A0", Offset = "0xE7F2A0", VA = "0xE7F2A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16754", Offset = "0xA16754")]
		private IEnumerator DestroyObject(Transform obj)
		{
			return null;
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xE7E0D8", Offset = "0xE7E0D8", VA = "0xE7E0D8")]
		private void UpdateContentLevel(int change, bool animate = false)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xE7DBC0", Offset = "0xE7DBC0", VA = "0xE7DBC0")]
		private void TryActivateLever(bool animate = false)
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xE7F688", Offset = "0xE7F688", VA = "0xE7F688")]
		private void OnLeverPulled()
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xE7F738", Offset = "0xE7F738", VA = "0xE7F738")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA167B8", Offset = "0xA167B8")]
		private IEnumerator WaitForProcessing()
		{
			return null;
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xE7F7E0", Offset = "0xE7F7E0", VA = "0xE7F7E0")]
		public void OnTrayAnimationEnter(OnAnimationStateEnterEvent e)
		{
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xE7F81C", Offset = "0xE7F81C", VA = "0xE7F81C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1681C", Offset = "0xA1681C")]
		private IEnumerator WaitUntilTrayOpen()
		{
			return null;
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xE7F8C4", Offset = "0xE7F8C4", VA = "0xE7F8C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16880", Offset = "0xA16880")]
		private IEnumerator WaitUntilLidOpen()
		{
			return null;
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xE7F96C", Offset = "0xE7F96C", VA = "0xE7F96C")]
		private void UpdateContentEffects()
		{
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xE7E184", Offset = "0xE7E184", VA = "0xE7E184")]
		private void UpdateContentGraphics()
		{
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xE7F390", Offset = "0xE7F390", VA = "0xE7F390")]
		private void UpdateMeter(bool animate = true, int targetContentLevel = -1, float duration = 0.5f)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xE7FADC", Offset = "0xE7FADC", VA = "0xE7FADC")]
		private void StartNeedleAnimation(int targetContentLevel, float duration)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xE7DC30", Offset = "0xE7DC30", VA = "0xE7DC30")]
		private void UpdateNeedleAnimation()
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xE7E2F4", Offset = "0xE7E2F4", VA = "0xE7E2F4")]
		private void SpawnProduce()
		{
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xE7FC6C", Offset = "0xE7FC6C", VA = "0xE7FC6C")]
		private void PostProduceSpawned(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xE8011C", Offset = "0xE8011C", VA = "0xE8011C")]
		private int GetUninitializedFertilizerValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xE7FF0C", Offset = "0xE7FF0C", VA = "0xE7FF0C")]
		private Vector3 GetOffsetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xE801E4", Offset = "0xE801E4", VA = "0xE801E4")]
		private void OnProduceRemovedFromBin(ProduceRemovedFromBinEvent e)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xE80274", Offset = "0xE80274", VA = "0xE80274")]
		public void OnGrabTray()
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xE80280", Offset = "0xE80280", VA = "0xE80280")]
		public void OnDropTray()
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xE7E708", Offset = "0xE7E708", VA = "0xE7E708")]
		public bool IsCompostStashedOrHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xE80288", Offset = "0xE80288", VA = "0xE80288")]
		private void OnStashed()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xE8034C", Offset = "0xE8034C", VA = "0xE8034C")]
		private void OnPreGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xE80354", Offset = "0xE80354", VA = "0xE80354")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xE802C4", Offset = "0xE802C4", VA = "0xE802C4")]
		private void TrySetInteractive(bool value)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xE80390", Offset = "0xE80390", VA = "0xE80390")]
		private void SetPhysicsForAllContent(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xE804EC", Offset = "0xE804EC", VA = "0xE804EC")]
		public Compost()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class CompostLever : MonoBehaviour
	{
		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB50", Offset = "0x9FCB50")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CompostLever <>4__this;

			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool shouldBePullable;

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xE814D4", Offset = "0xE814D4", VA = "0xE814D4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xE815B8", Offset = "0xE815B8", VA = "0xE815B8")]
			internal void <SetLeverPullable>b__0()
			{
			}
		}

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float RotationDuration;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rotatable m_lever;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isPullable;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_isHolding;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private readonly Vector3 m_localUpRotation;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06AB8", Offset = "0xA06AB8")]
		private Action <OnLeverPulled>k__BackingField;

		[Token(Token = "0x170002E5")]
		public Action OnLeverPulled
		{
			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xE81430", Offset = "0xE81430", VA = "0xE81430")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16A74", Offset = "0xA16A74")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xE81438", Offset = "0xE81438", VA = "0xE81438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16A84", Offset = "0xA16A84")]
			set
			{
			}
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xE81440", Offset = "0xE81440", VA = "0xE81440")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xE814B8", Offset = "0xE814B8", VA = "0xE814B8")]
		public void OnLeverGrabbed()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xE814CC", Offset = "0xE814CC", VA = "0xE814CC")]
		public void OnLeverDropped()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xE7F478", Offset = "0xE7F478", VA = "0xE7F478")]
		public void SetLeverPullable(bool shouldBePullable, bool animate = false)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xE814DC", Offset = "0xE814DC", VA = "0xE814DC")]
		private void SetPullableProperties(bool shouldBePullable, bool waitForAnimation)
		{
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xE81500", Offset = "0xE81500", VA = "0xE81500")]
		private void SetLeverInteraction(bool enableInteraction)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xE81548", Offset = "0xE81548", VA = "0xE81548")]
		public CompostLever()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class CompostProduce : MonoBehaviour
	{
		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB60", Offset = "0x9FCB60")]
		private sealed class <CheckDistanceRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CompostProduce <>4__this;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C00")]
				[Address(RVA = "0xE81E30", Offset = "0xE81E30", VA = "0xE81E30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C02")]
				[Address(RVA = "0xE81E98", Offset = "0xE81E98", VA = "0xE81E98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xE81D28", Offset = "0xE81D28", VA = "0xE81D28")]
			[DebuggerHidden]
			public <CheckDistanceRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xE81D84", Offset = "0xE81D84", VA = "0xE81D84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xE81D88", Offset = "0xE81D88", VA = "0xE81D88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xE81E38", Offset = "0xE81E38", VA = "0xE81E38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B4D")]
		private const float RemovedThreshold = 0.15f;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntValueContainer m_container;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SaveObjectSpawnable m_saveObject;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_trayTransform;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_removedFromBin;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine m_distanceRoutine;

		[Token(Token = "0x170002E6")]
		public int FertilizerValue
		{
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xE7DFEC", Offset = "0xE7DFEC", VA = "0xE7DFEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xE815E4", Offset = "0xE815E4", VA = "0xE815E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xE81768", Offset = "0xE81768", VA = "0xE81768")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xE818EC", Offset = "0xE818EC", VA = "0xE818EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xE80170", Offset = "0xE80170", VA = "0xE80170")]
		public void SetFertilizerValue(int value)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xE80194", Offset = "0xE80194", VA = "0xE80194")]
		public void SpawnFromTray(Transform trayTransform)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xE81A24", Offset = "0xE81A24", VA = "0xE81A24")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xE819C0", Offset = "0xE819C0", VA = "0xE819C0")]
		private void TryStartDistanceCheck()
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xE81AA4", Offset = "0xE81AA4", VA = "0xE81AA4")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xE81AF0", Offset = "0xE81AF0", VA = "0xE81AF0")]
		private bool IsOutsideRadius(Grabbable grabbable, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xE81A28", Offset = "0xE81A28", VA = "0xE81A28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16A94", Offset = "0xA16A94")]
		private IEnumerator CheckDistanceRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xE81D54", Offset = "0xE81D54", VA = "0xE81D54")]
		private void OnStashedItem()
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xE81C14", Offset = "0xE81C14", VA = "0xE81C14")]
		public void SetRemoved(bool clearParent = false, bool activatePhysics = false)
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xE7E5B8", Offset = "0xE7E5B8", VA = "0xE7E5B8")]
		public void SetGrabbableActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xE804A0", Offset = "0xE804A0", VA = "0xE804A0")]
		public void SetPhysicsActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xE81D74", Offset = "0xE81D74", VA = "0xE81D74")]
		public CompostProduce()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000485")]
	public class CompostState : ComponentState
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ContentLevel;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] ProduceInTray;

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xE7DFA8", Offset = "0xE7DFA8", VA = "0xE7DFA8")]
		public CompostState(int contentLevel, int[] produceInTray)
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class CompostTrigger : MonoBehaviour
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action<Transform, ICompostable> EnterTriggerDelegate;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action<Transform> ExitTriggerDelegate;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Compost m_compost;

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xE7D6E8", Offset = "0xE7D6E8", VA = "0xE7D6E8")]
		public void InitializeTrigger(Compost compost, Action<Transform, ICompostable> enterAction, Action<Transform> exitAction)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xE7DA34", Offset = "0xE7DA34", VA = "0xE7DA34")]
		public void RemoveDelegates(Action<Transform, ICompostable> enterAction, Action<Transform> exitAction)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xE81EA0", Offset = "0xE81EA0", VA = "0xE81EA0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xE82100", Offset = "0xE82100", VA = "0xE82100")]
		private Grabbable GetGrabbableFromCollider(Collider other)
		{
			return null;
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xE82178", Offset = "0xE82178", VA = "0xE82178")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xE822A0", Offset = "0xE822A0", VA = "0xE822A0")]
		public CompostTrigger()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class Compostable : MonoBehaviour, ICompostable
	{
		[Token(Token = "0x4001B5D")]
		public const int DefaultCompostValue = 1;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int CompostValue;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xE822A8", Offset = "0xE822A8", VA = "0xE822A8", Slot = "4")]
		public int GetCompostContentValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xE822B0", Offset = "0xE822B0", VA = "0xE822B0")]
		public Compostable()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class FertilizerBall : MonoBehaviour, ISoilManipulator, ICompostable
	{
		[Token(Token = "0x4001B5F")]
		private const float DefaultFertilizedSoilRadius = 0.5f;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_fertilizedSoilRadius;

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xE822C0", Offset = "0xE822C0", VA = "0xE822C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xE82324", Offset = "0xE82324", VA = "0xE82324")]
		private bool TryFertilizeAtPosition(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xE82490", Offset = "0xE82490", VA = "0xE82490", Slot = "5")]
		public int GetCompostContentValue()
		{
			return default(int);
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xE82498", Offset = "0xE82498", VA = "0xE82498", Slot = "4")]
		public void OnSoilManipulation(Vector3 pos)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xE8249C", Offset = "0xE8249C", VA = "0xE8249C")]
		public FertilizerBall()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public interface ICompostable
	{
		[Token(Token = "0x6001C11")]
		int GetCompostContentValue();
	}
}
namespace NeatCorp.Environment
{
	[Serializable]
	[Token(Token = "0x200048A")]
	public enum ActiveStateType
	{
		[Token(Token = "0x4001B62")]
		Enabled,
		[Token(Token = "0x4001B63")]
		Disabled
	}
	[Token(Token = "0x200048B")]
	public class OnActiveStateChange : MonoBehaviour
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ActiveStateType m_activationState;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_event;

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xE78678", Offset = "0xE78678", VA = "0xE78678")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xE78694", Offset = "0xE78694", VA = "0xE78694")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xE786B4", Offset = "0xE786B4", VA = "0xE786B4")]
		public OnActiveStateChange()
		{
		}
	}
}
namespace NeatCorp.Environment.Teleportation
{
	[Token(Token = "0x200048C")]
	[ExecuteInEditMode]
	public class CrystalBeacon : MonoBehaviour
	{
		[Token(Token = "0x200048D")]
		private enum LitState
		{
			[Token(Token = "0x4001B88")]
			Unlit,
			[Token(Token = "0x4001B89")]
			Resonating,
			[Token(Token = "0x4001B8A")]
			Lit,
			[Token(Token = "0x4001B8B")]
			Deresonating
		}

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB80", Offset = "0x9FCB80")]
		private sealed class <StartUp>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrystalBeacon <>4__this;

			[Token(Token = "0x170002F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C3F")]
				[Address(RVA = "0xE7C4A4", Offset = "0xE7C4A4", VA = "0xE7C4A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C41")]
				[Address(RVA = "0xE7C50C", Offset = "0xE7C50C", VA = "0xE7C50C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xE7B34C", Offset = "0xE7B34C", VA = "0xE7B34C")]
			[DebuggerHidden]
			public <StartUp>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xE7C3D0", Offset = "0xE7C3D0", VA = "0xE7C3D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xE7C3D4", Offset = "0xE7C3D4", VA = "0xE7C3D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xE7C4AC", Offset = "0xE7C4AC", VA = "0xE7C4AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCB90", Offset = "0x9FCB90")]
		private sealed class <ShutDown>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrystalBeacon <>4__this;

			[Token(Token = "0x170002F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C45")]
				[Address(RVA = "0xE7C360", Offset = "0xE7C360", VA = "0xE7C360", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C47")]
				[Address(RVA = "0xE7C3C8", Offset = "0xE7C3C8", VA = "0xE7C3C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xE7B378", Offset = "0xE7B378", VA = "0xE7B378")]
			[DebuggerHidden]
			public <ShutDown>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6001C43")]
			[Address(RVA = "0xE7C248", Offset = "0xE7C248", VA = "0xE7C248", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xE7C24C", Offset = "0xE7C24C", VA = "0xE7C24C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xE7C368", Offset = "0xE7C368", VA = "0xE7C368", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCBA0", Offset = "0x9FCBA0")]
		private sealed class <Cooldown>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001B93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001B94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrystalBeacon <>4__this;

			[Token(Token = "0x170002F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C4B")]
				[Address(RVA = "0xE7C1D8", Offset = "0xE7C1D8", VA = "0xE7C1D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C4D")]
				[Address(RVA = "0xE7C240", Offset = "0xE7C240", VA = "0xE7C240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xE7B3A4", Offset = "0xE7B3A4", VA = "0xE7B3A4")]
			[DebuggerHidden]
			public <Cooldown>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001C49")]
			[Address(RVA = "0xE7C104", Offset = "0xE7C104", VA = "0xE7C104", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xE7C108", Offset = "0xE7C108", VA = "0xE7C108", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xE7C1E0", Offset = "0xE7C1E0", VA = "0xE7C1E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B66")]
		private const float FullResonationTime = 1f;

		[Token(Token = "0x4001B67")]
		private const float FullDeresonateTime = 0.5f;

		[Token(Token = "0x4001B68")]
		private const float MaxColliderSqrDistance = 225f;

		[Token(Token = "0x4001B69")]
		private const float CoolDownTime = 0.5f;

		[Token(Token = "0x4001B6A")]
		private const float MinActivationTolerance = 0.005f;

		[Token(Token = "0x4001B6B")]
		private const float MaxActivationTolerance = 0.009f;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly float MaxAimSqrDistance;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06B48", Offset = "0xA06B48")]
		private CapsuleCollider m_capsuleCollider;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06B94", Offset = "0xA06B94")]
		private Transform m_teleportLocation;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3[] ValidTeleportLocations;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 LastPrecomputeLocation;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_proximityRadius;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA06C00", Offset = "0xA06C00")]
		private bool m_useLocationProximity;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool UsePrecomputedTeleportLocations;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06C4C", Offset = "0xA06C4C")]
		[SerializeField]
		private GameObject m_lightCircleEffect;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private InstrumentResonator m_resonator;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_resonationSound;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int PITCH;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int m_musicalPitch;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OptimizedCollection<FastTravel> m_fastTravelAbilities;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_activationTolerance;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_resonationPitch;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_resonationAmount;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isSelectedByLeftHand;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool m_isSelectedByRightHand;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int MaxNumTeleportLocations;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float TeleportLocationCenterOffset;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06CC8", Offset = "0xA06CC8")]
		private bool <IsOnCooldown>k__BackingField;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06CD8", Offset = "0xA06CD8")]
		private bool <IsAbilityActive>k__BackingField;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private LitState m_litState;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Ray m_currentAimRay;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine m_resonateRoutine;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine m_cooldownRoutine;

		[Token(Token = "0x170002E9")]
		public CapsuleCollider Collider
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0xE7A4F4", Offset = "0xE7A4F4", VA = "0xE7A4F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public Vector3 CentrePosition
		{
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xE7A4FC", Offset = "0xE7A4FC", VA = "0xE7A4FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EB")]
		private Vector3 OriginToCentre
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xE7A570", Offset = "0xE7A570", VA = "0xE7A570")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EC")]
		private Vector3 OriginToTargetLocation
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xE7A634", Offset = "0xE7A634", VA = "0xE7A634")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002ED")]
		public bool IsOnCooldown
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xE7A6F8", Offset = "0xE7A6F8", VA = "0xE7A6F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16B48", Offset = "0xA16B48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xE7A700", Offset = "0xE7A700", VA = "0xE7A700")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16B58", Offset = "0xA16B58")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EE")]
		public bool IsAbilityActive
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xE7A70C", Offset = "0xE7A70C", VA = "0xE7A70C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16B68", Offset = "0xA16B68")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xE7A714", Offset = "0xE7A714", VA = "0xE7A714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16B78", Offset = "0xA16B78")]
			private set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public float ResonationPitch
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xE7A720", Offset = "0xE7A720", VA = "0xE7A720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xE7A728", Offset = "0xE7A728", VA = "0xE7A728")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public bool IsSelectedByAnyHand
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xE7A7BC", Offset = "0xE7A7BC", VA = "0xE7A7BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F1")]
		public bool IsLit
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xE7A7DC", Offset = "0xE7A7DC", VA = "0xE7A7DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xE7A7EC", Offset = "0xE7A7EC", VA = "0xE7A7EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xE7A978", Offset = "0xE7A978", VA = "0xE7A978")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xE7AB04", Offset = "0xE7AB04", VA = "0xE7AB04")]
		private void OnFastTravelActivated(FastTravelAbilityActivated e)
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xE7AB94", Offset = "0xE7AB94", VA = "0xE7AB94")]
		private void OnFastTravelDeactivated(FastTravelAbilityDeactivated e)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xE7A500", Offset = "0xE7A500", VA = "0xE7A500")]
		private Vector3 GetCentrePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xE7A574", Offset = "0xE7A574", VA = "0xE7A574")]
		private Vector3 GetOriginToCenter()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xE7A638", Offset = "0xE7A638", VA = "0xE7A638")]
		private Vector3 GetOriginToTargetLocation()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xE7AC24", Offset = "0xE7AC24", VA = "0xE7AC24")]
		private Vector3 GetClosestColliderPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xE7AC8C", Offset = "0xE7AC8C", VA = "0xE7AC8C")]
		public float GetAlignment(Ray aimRay)
		{
			return default(float);
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xE7AD78", Offset = "0xE7AD78", VA = "0xE7AD78")]
		public bool IsAimingAt(Ray aimRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xE7AFE4", Offset = "0xE7AFE4", VA = "0xE7AFE4")]
		private bool HasLineOfSightTo(float rayDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xE7B02C", Offset = "0xE7B02C", VA = "0xE7B02C")]
		public void UpdateSelection(bool shouldBeSelected, bool updateRightHand)
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xE7B04C", Offset = "0xE7B04C", VA = "0xE7B04C")]
		private void TrySetLit()
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xE7B138", Offset = "0xE7B138", VA = "0xE7B138")]
		private void TrySetUnlit()
		{
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xE7B1D8", Offset = "0xE7B1D8", VA = "0xE7B1D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16B88", Offset = "0xA16B88")]
		private IEnumerator StartUp()
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xE7B2D0", Offset = "0xE7B2D0", VA = "0xE7B2D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16BEC", Offset = "0xA16BEC")]
		private IEnumerator ShutDown()
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xE7B254", Offset = "0xE7B254", VA = "0xE7B254")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16C50", Offset = "0xA16C50")]
		private IEnumerator Cooldown()
		{
			return null;
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xE7B3D0", Offset = "0xE7B3D0", VA = "0xE7B3D0")]
		public bool CanLockAt()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xE7B3E0", Offset = "0xE7B3E0", VA = "0xE7B3E0")]
		public void SetupTeleportLocations()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xE7B9E8", Offset = "0xE7B9E8", VA = "0xE7B9E8")]
		public bool TryTeleportTo()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xE7BDD0", Offset = "0xE7BDD0", VA = "0xE7BDD0")]
		public void OnPressed()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xE7BE38", Offset = "0xE7BE38", VA = "0xE7BE38")]
		public void OnReleased()
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xE7BEA0", Offset = "0xE7BEA0", VA = "0xE7BEA0")]
		public void OnGrabbed()
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xE7BEA8", Offset = "0xE7BEA8", VA = "0xE7BEA8")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xE7BEB0", Offset = "0xE7BEB0", VA = "0xE7BEB0")]
		public void UpdateResonationPitch(int beaconIndex)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xE7BF94", Offset = "0xE7BF94", VA = "0xE7BF94")]
		public CrystalBeacon()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class CrystalBeaconDisabledEvent : GameEvent
	{
		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06CE8", Offset = "0xA06CE8")]
		private CrystalBeacon <Beacon>k__BackingField;

		[Token(Token = "0x170002F8")]
		public CrystalBeacon Beacon
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xE7C514", Offset = "0xE7C514", VA = "0xE7C514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16DA4", Offset = "0xA16DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xE7C51C", Offset = "0xE7C51C", VA = "0xE7C51C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16DB4", Offset = "0xA16DB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xE7AAD0", Offset = "0xE7AAD0", VA = "0xE7AAD0")]
		public CrystalBeaconDisabledEvent(CrystalBeacon beacon)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class CrystalBeaconEnabledEvent : GameEvent
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA06CF8", Offset = "0xA06CF8")]
		private CrystalBeacon <Beacon>k__BackingField;

		[Token(Token = "0x170002F9")]
		public CrystalBeacon Beacon
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xE7C524", Offset = "0xE7C524", VA = "0xE7C524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16DC4", Offset = "0xA16DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xE7C52C", Offset = "0xE7C52C", VA = "0xE7C52C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA16DD4", Offset = "0xA16DD4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xE7A944", Offset = "0xE7A944", VA = "0xE7A944")]
		public CrystalBeaconEnabledEvent(CrystalBeacon beacon)
		{
		}
	}
}
namespace NeatCorp.Environment.Plants
{
	[Token(Token = "0x2000493")]
	public class CrystalFlower : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCBB0", Offset = "0x9FCBB0")]
		private sealed class <ActivateFastTravelAbilityAfterDelay>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170002FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C61")]
				[Address(RVA = "0xE793A0", Offset = "0xE793A0", VA = "0xE793A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C63")]
				[Address(RVA = "0xE79408", Offset = "0xE79408", VA = "0xE79408", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xE7915C", Offset = "0xE7915C", VA = "0xE7915C")]
			[DebuggerHidden]
			public <ActivateFastTravelAbilityAfterDelay>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xE791F4", Offset = "0xE791F4", VA = "0xE791F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xE791F8", Offset = "0xE791F8", VA = "0xE791F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xE793A8", Offset = "0xE793A8", VA = "0xE793A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int StateNameHash;

		[Token(Token = "0x4001B98")]
		private const int AnimationLayer = 0;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float GrowthTime;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_growth;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_shardTransform;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AssetReference m_grabbableCrystal;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private InstrumentResonator resonator;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioCue flowerGrowingSound;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue crystalGemSpawnedSound;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_shouldRespawnCrystal;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_initialized;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool m_isHarvested;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int m_dayHarvested;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CrystalFlowerState m_state;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SaveObjectBase spawnedShard;

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xE786BC", Offset = "0xE786BC", VA = "0xE786BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xE78AE0", Offset = "0xE78AE0", VA = "0xE78AE0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xE78BAC", Offset = "0xE78BAC", VA = "0xE78BAC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xE788EC", Offset = "0xE788EC", VA = "0xE788EC")]
		private void SpawnShard()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xE78E2C", Offset = "0xE78E2C", VA = "0xE78E2C")]
		private void OnShardSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xE78A94", Offset = "0xE78A94", VA = "0xE78A94")]
		private void SetAnimationTime()
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xE78858", Offset = "0xE78858", VA = "0xE78858")]
		private void UpdateGrowthAnimation()
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xE78FEC", Offset = "0xE78FEC", VA = "0xE78FEC")]
		public void OnShardGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xE78DCC", Offset = "0xE78DCC", VA = "0xE78DCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16DE4", Offset = "0xA16DE4")]
		private IEnumerator ActivateFastTravelAbilityAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xE79188", Offset = "0xE79188", VA = "0xE79188")]
		public CrystalFlower()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000495")]
	public class CrystalFlowerState : ComponentState
	{
		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsHarvested;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Growth;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DayHarvested;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xE78B5C", Offset = "0xE78B5C", VA = "0xE78B5C")]
		public CrystalFlowerState(bool isHarvested, float growth, int dayHarvested)
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class GodFlower : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCBC0", Offset = "0x9FCBC0")]
		private sealed class <AnimateRewardAppearing>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Grabbable grabbable;

			[Token(Token = "0x4001BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GodFlower <>4__this;

			[Token(Token = "0x4001BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <rewardTransform>5__2;

			[Token(Token = "0x4001BBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <finalScale>5__3;

			[Token(Token = "0x4001BBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <initialScale>5__4;

			[Token(Token = "0x4001BBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__5;

			[Token(Token = "0x4001BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <timeElapsed>5__6;

			[Token(Token = "0x4001BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Vector3 <dir>5__7;

			[Token(Token = "0x4001BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <progress>5__8;

			[Token(Token = "0x4001BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <currTime>5__9;

			[Token(Token = "0x4001BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <startPosY>5__10;

			[Token(Token = "0x4001BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <startRotY>5__11;

			[Token(Token = "0x170002FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C71")]
				[Address(RVA = "0xE7A484", Offset = "0xE7A484", VA = "0xE7A484", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C73")]
				[Address(RVA = "0xE7A4EC", Offset = "0xE7A4EC", VA = "0xE7A4EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xE79C24", Offset = "0xE79C24", VA = "0xE79C24")]
			[DebuggerHidden]
			public <AnimateRewardAppearing>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xE79DA4", Offset = "0xE79DA4", VA = "0xE79DA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xE79DA8", Offset = "0xE79DA8", VA = "0xE79DA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xE7A48C", Offset = "0xE7A48C", VA = "0xE7A48C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform rewardSpawnTransform;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform rewardTargetTransform;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem rewardSpawnEffect;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference rewardPrefab;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float rewardScale;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA06DF8", Offset = "0xA06DF8")]
		[SerializeField]
		private Collider teleportBlocker;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SendMilestoneEvent triggerMilestone;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer rewardSoundPlayer;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHarvested;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private DateTime lastTimeFlowerWasHarvested;

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xE79410", Offset = "0xE79410", VA = "0xE79410", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xE79770", Offset = "0xE79770", VA = "0xE79770")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xE79778", Offset = "0xE79778", VA = "0xE79778")]
		public void TriggerFlower()
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xE795C8", Offset = "0xE795C8", VA = "0xE795C8")]
		private void SpawnReward()
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xE79824", Offset = "0xE79824", VA = "0xE79824")]
		private void OnRewardSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xE79AB8", Offset = "0xE79AB8", VA = "0xE79AB8")]
		private void OnRewardGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xE79A20", Offset = "0xE79A20", VA = "0xE79A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16E98", Offset = "0xA16E98")]
		private IEnumerator AnimateRewardAppearing(Grabbable grabbable)
		{
			return null;
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0xE79C50", Offset = "0xE79C50", VA = "0xE79C50", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xE79D24", Offset = "0xE79D24", VA = "0xE79D24")]
		public GodFlower()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000498")]
	public class GodFlowerState : ComponentState
	{
		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool harvested;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long lastHarvest;

		[Token(Token = "0x170002FE")]
		public DateTime LastTimeHarvested
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xE7955C", Offset = "0xE7955C", VA = "0xE7955C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xE79CD8", Offset = "0xE79CD8", VA = "0xE79CD8")]
		public GodFlowerState(bool harvested, DateTime lastTimeHarvested)
		{
		}
	}
}
namespace NeatCorp.Environment.OceanContent
{
	[Token(Token = "0x2000499")]
	public class FishingSpotReward : OceanContentRewardWithId
	{
		[Token(Token = "0x200049A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCBD0", Offset = "0x9FCBD0")]
		private sealed class <DespawnFallback>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitSeconds;

			[Token(Token = "0x4001BD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FishingSpotReward <>4__this;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C89")]
				[Address(RVA = "0xD70518", Offset = "0xD70518", VA = "0xD70518", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8B")]
				[Address(RVA = "0xD70580", Offset = "0xD70580", VA = "0xD70580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xD6FF54", Offset = "0xD6FF54", VA = "0xD6FF54")]
			[DebuggerHidden]
			public <DespawnFallback>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xD70434", Offset = "0xD70434", VA = "0xD70434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xD70438", Offset = "0xD70438", VA = "0xD70438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0xD70520", Offset = "0xD70520", VA = "0xD70520", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int m_buoySinkStateId;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int m_buoySinkTriggerParamId;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FishRegion m_fishRegion;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_buoyAnimation;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_buoySplashParticleSystem;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem m_oceanBubblesParticleSystem;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA06EA4", Offset = "0xA06EA4")]
		[SerializeField]
		private NeatAudioPlayer m_longRangeAudioPlayer;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioPlayer m_loopAudioPlayer;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioCue m_spawnAudioCue;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_despawnAudioCue;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_despawnFallbackCoroutine;

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xD6F26C", Offset = "0xD6F26C", VA = "0xD6F26C", Slot = "6")]
		public override void Spawn()
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xD6F98C", Offset = "0xD6F98C", VA = "0xD6F98C", Slot = "7")]
		public override void Despawn()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xD6FD88", Offset = "0xD6FD88", VA = "0xD6FD88", Slot = "8")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xD6F63C", Offset = "0xD6F63C", VA = "0xD6F63C")]
		public void SetFishRegionItems(AssetReference[] rewardItemReferences)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xD6F500", Offset = "0xD6F500", VA = "0xD6F500")]
		private void ResetAllEvents()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xD6FEC8", Offset = "0xD6FEC8", VA = "0xD6FEC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA16F4C", Offset = "0xA16F4C")]
		private IEnumerator DespawnFallback(float waitSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xD6FC4C", Offset = "0xD6FC4C", VA = "0xD6FC4C")]
		private void StartDespawnFallbackCoroutine()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xD6F878", Offset = "0xD6F878", VA = "0xD6F878")]
		private void PlaySpawnAndLoopAudio()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xD6FB24", Offset = "0xD6FB24", VA = "0xD6FB24")]
		private void PlayDespawnAudio()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xD6FF80", Offset = "0xD6FF80", VA = "0xD6FF80")]
		private void StopAllSounds()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xD70088", Offset = "0xD70088", VA = "0xD70088")]
		private void OnFishSpawned()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xD6FCA8", Offset = "0xD6FCA8", VA = "0xD6FCA8")]
		private void OnReadyForDespawn()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xD702F0", Offset = "0xD702F0", VA = "0xD702F0")]
		private void OnAnimationStateExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xD6F76C", Offset = "0xD6F76C", VA = "0xD6F76C")]
		private void SetFishingRegionEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xD703A0", Offset = "0xD703A0", VA = "0xD703A0")]
		public FishingSpotReward()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class ManateeCowFollowEvent : GameEvent
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool CanFollow;

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xD70588", Offset = "0xD70588", VA = "0xD70588")]
		public ManateeCowFollowEvent(bool canFollow)
		{
		}
	}
	[Token(Token = "0x200049C")]
	public class ManateeCowFollowerUpdater : MonoBehaviour
	{
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCBE0", Offset = "0x9FCBE0")]
		private sealed class <CleanUpAfterDuration>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ManateeCowFollowerUpdater <>4__this;

			[Token(Token = "0x4001BDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <tries>5__2;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C95")]
				[Address(RVA = "0xD70AA0", Offset = "0xD70AA0", VA = "0xD70AA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C97")]
				[Address(RVA = "0xD70B08", Offset = "0xD70B08", VA = "0xD70B08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xD708EC", Offset = "0xD708EC", VA = "0xD708EC")]
			[DebuggerHidden]
			public <CleanUpAfterDuration>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xD70990", Offset = "0xD70990", VA = "0xD70990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xD70994", Offset = "0xD70994", VA = "0xD70994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xD70AA8", Offset = "0xD70AA8", VA = "0xD70AA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Boat m_boat;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ManateeCowFollowers m_followers;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_cleanupRoutine;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldInstruction m_waitForTwoSeconds;

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xD705B8", Offset = "0xD705B8", VA = "0xD705B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0xD705E8", Offset = "0xD705E8", VA = "0xD705E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xD70818", Offset = "0xD70818", VA = "0xD70818")]
		public void StartCleanup()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xD70870", Offset = "0xD70870", VA = "0xD70870")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17000", Offset = "0xA17000")]
		private IEnumerator CleanUpAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0xD70918", Offset = "0xD70918", VA = "0xD70918")]
		public ManateeCowFollowerUpdater()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class ManateeCowFollowers : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCBF0", Offset = "0x9FCBF0")]
		private sealed class <StopAfterDuration>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int diff;

			[Token(Token = "0x4001BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ManateeCowFollowers <>4__this;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA7")]
				[Address(RVA = "0xD71258", Offset = "0xD71258", VA = "0xD71258", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA9")]
				[Address(RVA = "0xD712C0", Offset = "0xD712C0", VA = "0xD712C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xD710C0", Offset = "0xD710C0", VA = "0xD710C0")]
			[DebuggerHidden]
			public <StopAfterDuration>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xD71198", Offset = "0xD71198", VA = "0xD71198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xD7119C", Offset = "0xD7119C", VA = "0xD7119C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xD71260", Offset = "0xD71260", VA = "0xD71260", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BDF")]
		private const float DefaultMinFollowChance = 0.1f;

		[Token(Token = "0x4001BE0")]
		private const float DefaultMaxFollowChance = 0.9f;

		[Token(Token = "0x4001BE1")]
		private const float MaxFollowWaitDuration = 2880f;

		[Token(Token = "0x4001BE2")]
		private const float DefaultMinFollowDuration = 12f;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sm_followParam;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int sm_entryStateParam;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_manateeContainer;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06F60", Offset = "0xA06F60")]
		private float m_minChanceToFollow;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06FA0", Offset = "0xA06FA0")]
		private float m_maxChanceToFollow;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA06FE0", Offset = "0xA06FE0")]
		[SerializeField]
		private float m_minFollowDuration;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ManateeCowFollowerUpdater m_updater;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_currentFollowChance;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_lastFollowTimeStamp;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isFollowing;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_stopAfterDurationRoutine;

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xD70B10", Offset = "0xD70B10", VA = "0xD70B10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xD70C1C", Offset = "0xD70C1C", VA = "0xD70C1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xD70D28", Offset = "0xD70D28", VA = "0xD70D28")]
		private void OnManateeCowFollowEvent(ManateeCowFollowEvent e)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xD70D48", Offset = "0xD70D48", VA = "0xD70D48")]
		private void TryStartFollowing()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xD70E90", Offset = "0xD70E90", VA = "0xD70E90")]
		private void StopFollowing()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xD70764", Offset = "0xD70764", VA = "0xD70764")]
		public void SetStopFollowParam()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xD71034", Offset = "0xD71034", VA = "0xD71034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA170B4", Offset = "0xA170B4")]
		private IEnumerator StopAfterDuration(int diff)
		{
			return null;
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xD70F84", Offset = "0xD70F84", VA = "0xD70F84")]
		private void UpdateFollowChance(int minuteTimestamp)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xD710EC", Offset = "0xD710EC", VA = "0xD710EC")]
		private void OnManateeCowStopFollow(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xD70A5C", Offset = "0xD70A5C", VA = "0xD70A5C")]
		public void StopAnimatorAndSetInactive()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xD710F0", Offset = "0xD710F0", VA = "0xD710F0")]
		public ManateeCowFollowers()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class OceanContentManager : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004A1")]
		private delegate bool TryGetSpawnPointCallback(out OceanContentSpawnPoint spawnPoint);

		[Token(Token = "0x20004A2")]
		private struct SpawnedRewardRecord
		{
			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string RewardId;

			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string SpawnId;

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xAD7434", Offset = "0xAD7434", VA = "0xAD7434")]
			public SpawnedRewardRecord(string rewardId, string spawnId)
			{
			}

			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xAD7468", Offset = "0xAD7468", VA = "0xAD7468")]
			public bool IsValid()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC00", Offset = "0x9FCC00")]
		private sealed class <>c
		{
			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__44_0;

			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<bool> <>9__44_1;

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xD769D8", Offset = "0xD769D8", VA = "0xD769D8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xD769E0", Offset = "0xD769E0", VA = "0xD769E0")]
			internal bool <OnSpawnPointExit>b__44_0()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0xD769E8", Offset = "0xD769E8", VA = "0xD769E8")]
			internal bool <OnSpawnPointExit>b__44_1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC10", Offset = "0x9FCC10")]
		private sealed class <PlayWhaleRandomWhaleSong>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OceanContentManager <>4__this;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CED")]
				[Address(RVA = "0xD76C74", Offset = "0xD76C74", VA = "0xD76C74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEF")]
				[Address(RVA = "0xD76CDC", Offset = "0xD76CDC", VA = "0xD76CDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0xD75360", Offset = "0xD75360", VA = "0xD75360")]
			[DebuggerHidden]
			public <PlayWhaleRandomWhaleSong>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xD76A5C", Offset = "0xD76A5C", VA = "0xD76A5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xD76A60", Offset = "0xD76A60", VA = "0xD76A60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xD76C7C", Offset = "0xD76C7C", VA = "0xD76C7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC20", Offset = "0x9FCC20")]
		private sealed class <WaitAndSubscribeToOnNewDay>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OceanContentManager <>4__this;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF3")]
				[Address(RVA = "0xD76FE8", Offset = "0xD76FE8", VA = "0xD76FE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0xD77050", Offset = "0xD77050", VA = "0xD77050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xD755D8", Offset = "0xD755D8", VA = "0xD755D8")]
			[DebuggerHidden]
			public <WaitAndSubscribeToOnNewDay>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xD76E48", Offset = "0xD76E48", VA = "0xD76E48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xD76E4C", Offset = "0xD76E4C", VA = "0xD76E4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xD76FF0", Offset = "0xD76FF0", VA = "0xD76FF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC30", Offset = "0x9FCC30")]
		private sealed class <StartWhaleApperanceAfterInitialize>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OceanContentManager <>4__this;

			[Token(Token = "0x17000309")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF9")]
				[Address(RVA = "0xD76DD8", Offset = "0xD76DD8", VA = "0xD76DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFB")]
				[Address(RVA = "0xD76E40", Offset = "0xD76E40", VA = "0xD76E40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xD75970", Offset = "0xD75970", VA = "0xD75970")]
			[DebuggerHidden]
			public <StartWhaleApperanceAfterInitialize>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xD76CE4", Offset = "0xD76CE4", VA = "0xD76CE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xD76CE8", Offset = "0xD76CE8", VA = "0xD76CE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xD76DE0", Offset = "0xD76DE0", VA = "0xD76DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC40", Offset = "0x9FCC40")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001C1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool shouldEnable;

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xD75A58", Offset = "0xD75A58", VA = "0xD75A58")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xD769F0", Offset = "0xD769F0", VA = "0xD769F0")]
			internal bool <ReplaceAllInvalidClaimedSpawnPoints>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC50", Offset = "0x9FCC50")]
		private sealed class <>c__DisplayClass60_1
		{
			[Token(Token = "0x4001C1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool shouldEnable;

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xD75A60", Offset = "0xD75A60", VA = "0xD75A60")]
			public <>c__DisplayClass60_1()
			{
			}

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xD769F8", Offset = "0xD769F8", VA = "0xD769F8")]
			internal bool <ReplaceAllInvalidClaimedSpawnPoints>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC60", Offset = "0x9FCC60")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OceanContentSpawnPoint whaleSpawnPoint;

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xD75A68", Offset = "0xD75A68", VA = "0xD75A68")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xD76A00", Offset = "0xD76A00", VA = "0xD76A00")]
			internal bool <ReShuffleAllOveragedSpawnPoints>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC70", Offset = "0x9FCC70")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x4001C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OceanContentSpawnPoint rewardSpawnPoint;

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xD75A70", Offset = "0xD75A70", VA = "0xD75A70")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xD76A1C", Offset = "0xD76A1C", VA = "0xD76A1C")]
			internal bool <ReShuffleAllOveragedSpawnPoints>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCC80", Offset = "0x9FCC80")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OceanContentRewardWithId reward;

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xD76784", Offset = "0xD76784", VA = "0xD76784")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xD76A38", Offset = "0xD76A38", VA = "0xD76A38")]
			internal bool <RemoveRewardFromSpawnedRecord>b__0(SpawnedRewardRecord record)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BF3")]
		private const float WhaleSongChance = 0.35f;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_waitForTODMInstanceRoutine;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_waitForWhaleInstaneRoutine;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaitForSeconds m_waitForSevenSeconds;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07030", Offset = "0xA07030")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07030", Offset = "0xA07030")]
		private int DaysFromWhaleRelease;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_nextWhaleAppearanceDay;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioPlayer m_whaleSongPlayer;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_hasSpawnedWhale;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Whale Whale;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_whaleSongRoutine;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_shouldPlayWhaleSong;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA070B4", Offset = "0xA070B4")]
		[SerializeField]
		private RewardData m_raftRewardData;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RewardData m_fishingSpotRewardData;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07110", Offset = "0xA07110")]
		private int m_maxClaimedRewardsPerDay;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[NeatCorp.Attributes.ReadOnly]
		[SerializeField]
		private int m_remainingRewardSpawnsToday;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private SpawnedRewardRecord[] m_spawnedRewards;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static OceanContentRewardPool RewardPool;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07188", Offset = "0xA07188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07188", Offset = "0xA07188")]
		[SerializeField]
		private int m_maxSimultaneousWhaleSpawns;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA071EC", Offset = "0xA071EC")]
		private int m_maxSimultaneousRewardSpawns;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0722C", Offset = "0xA0722C")]
		private int m_maxActiveSpawnDayAge;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private string[] m_activeWhaleSpawnPointIds;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string[] m_claimedRewardSpawnPointIds;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0726C", Offset = "0xA0726C")]
		[SerializeField]
		[BeginReadOnlyGroup]
		private OceanContentSpawnPoint[] m_allSpawnPointsCache;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[BeginReadOnlyGroup]
		private OceanContentSpawnPoint[] m_allWhaleSpawnPointsCache;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[BeginReadOnlyGroup]
		private OceanContentSpawnPoint[] m_allRewardSpawnPointsCache;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[EndReadOnlyGroup]
		private string[] m_allSpawnPointIdsCache;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private OceanContentSpawnPoint m_currentWhaleSpawnPoint;

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xD712C8", Offset = "0xD712C8", VA = "0xD712C8")]
		private bool shouldShowWhale()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xD71360", Offset = "0xD71360", VA = "0xD71360")]
		private bool shouldEnableNextRewardSpawn()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xD714A4", Offset = "0xD714A4", VA = "0xD714A4")]
		public OceanContentSpawnPoint[] GetAllClaimedSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xD71594", Offset = "0xD71594", VA = "0xD71594")]
		public OceanContentSpawnPoint[] GetAllWhaleSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xD71724", Offset = "0xD71724", VA = "0xD71724")]
		public OceanContentSpawnPoint[] GetAllActiveWhaleSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xD71848", Offset = "0xD71848", VA = "0xD71848")]
		public OceanContentSpawnPoint[] GetAllRewardSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xD71398", Offset = "0xD71398", VA = "0xD71398")]
		public OceanContentSpawnPoint[] GetAllClaimedAndEnabledRewardSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xD71A24", Offset = "0xD71A24", VA = "0xD71A24")]
		public OceanContentSpawnPoint[] GetAllActiveSpawnPoints()
		{
			return null;
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xD71B28", Offset = "0xD71B28", VA = "0xD71B28", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xD72080", Offset = "0xD72080", VA = "0xD72080")]
		public static void TrySetWhale(Whale whale)
		{
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xD720D8", Offset = "0xD720D8", VA = "0xD720D8")]
		public static void SetRewardPool(OceanContentRewardPool pool)
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xD72130", Offset = "0xD72130", VA = "0xD72130", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xD728E4", Offset = "0xD728E4", VA = "0xD728E4")]
		private void TryStartWhaleApperanceFromInitialize(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xD734B8", Offset = "0xD734B8", VA = "0xD734B8")]
		public void OnSpawnPointEnter(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xD73C68", Offset = "0xD73C68", VA = "0xD73C68")]
		public void OnSpawnPointExit(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xD74444", Offset = "0xD74444", VA = "0xD74444")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xD746D0", Offset = "0xD746D0", VA = "0xD746D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xD74978", Offset = "0xD74978", VA = "0xD74978")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xD74D94", Offset = "0xD74D94", VA = "0xD74D94")]
		private void OnWorldZoneChanged(WorldZone newWorldZone)
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xD74E58", Offset = "0xD74E58", VA = "0xD74E58")]
		private void OnNewDay(int dayCount)
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xD73024", Offset = "0xD73024", VA = "0xD73024")]
		private void ReEvaluateAllClaimedSpawnPointEnabledStates()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xD752E4", Offset = "0xD752E4", VA = "0xD752E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17168", Offset = "0xA17168")]
		private IEnumerator PlayWhaleRandomWhaleSong()
		{
			return null;
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xD7538C", Offset = "0xD7538C", VA = "0xD7538C")]
		private bool TryGetClosestWhaleSpawnPointPos(out Vector3 closestSpawnPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xD748FC", Offset = "0xD748FC", VA = "0xD748FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA171CC", Offset = "0xA171CC")]
		private IEnumerator WaitAndSubscribeToOnNewDay()
		{
			return null;
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xD727F8", Offset = "0xD727F8", VA = "0xD727F8")]
		private bool TryClaimSpawnPoint(OceanContentSpawnPoint spawnPoint, bool reset = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xD7316C", Offset = "0xD7316C", VA = "0xD7316C")]
		private void PopulateAllAvailableSpawnSlots()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xD7343C", Offset = "0xD7343C", VA = "0xD7343C")]
		private void StartWhaleFromWithinSpawnPoint(OceanContentSpawnPoint whaleSpawnPoint)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xD758F4", Offset = "0xD758F4", VA = "0xD758F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17230", Offset = "0xA17230")]
		private IEnumerator StartWhaleApperanceAfterInitialize()
		{
			return null;
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xD7527C", Offset = "0xD7527C", VA = "0xD7527C")]
		private void ActivateWhaleSong()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xD72E44", Offset = "0xD72E44", VA = "0xD72E44")]
		private void ResetAllUnclaimedSpawnPoints(bool includeCurrentlyTriggereing = false)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xD72AA4", Offset = "0xD72AA4", VA = "0xD72AA4")]
		private void ReplaceAllInvalidClaimedSpawnPoints()
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xD74C74", Offset = "0xD74C74", VA = "0xD74C74")]
		private void ReleaseAllSpawnPoints()
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0xD74F18", Offset = "0xD74F18", VA = "0xD74F18")]
		private void ReShuffleAllOveragedSpawnPoints()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xD74E8C", Offset = "0xD74E8C", VA = "0xD74E8C")]
		private void BumpAllActiveAndEnabledSpawnPointAges()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xD75A88", Offset = "0xD75A88", VA = "0xD75A88")]
		private bool TrySelectRandomSpawnPoint(OceanContentSpawnPoint[] spawnPointList, out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xD757BC", Offset = "0xD757BC", VA = "0xD757BC")]
		private bool TryGetRandomRewardSpawnPoint(out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xD75684", Offset = "0xD75684", VA = "0xD75684")]
		private bool TryGetRandomWhaleSpawnPoint(out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xD742E0", Offset = "0xD742E0", VA = "0xD742E0")]
		private OceanContentSpawnPoint ReleaseAndSelectNewSpawnPoint(OceanContentSpawnPoint oldSpawnPoint, TryGetSpawnPointCallback TryGetSpawnPoint, [Optional] Func<bool> shouldEnable, bool reuseExistingSpawnPointAsFallback = true)
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xD735EC", Offset = "0xD735EC", VA = "0xD735EC")]
		private void TryShowWhaleAt(OceanContentSpawnPoint spawnPoint, bool facePlayer = false)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xD740AC", Offset = "0xD740AC", VA = "0xD740AC")]
		private bool WhaleIsAtSpawnPoint(OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xD74218", Offset = "0xD74218", VA = "0xD74218")]
		private void TryHideWhale()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xD7388C", Offset = "0xD7388C", VA = "0xD7388C")]
		private void TrySpawnRewardAt(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xD76520", Offset = "0xD76520", VA = "0xD76520")]
		private void OnRewardItemSpawned()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xD73F98", Offset = "0xD73F98", VA = "0xD73F98")]
		private void TryDespawnRewardAt(OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xD729A0", Offset = "0xD729A0", VA = "0xD729A0")]
		private void AddRewardToSpawnedRecord(OceanContentRewardWithId reward, OceanContentSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xD76634", Offset = "0xD76634", VA = "0xD76634")]
		private void RemoveRewardFromSpawnedRecord(OceanContentRewardWithId reward)
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xD7678C", Offset = "0xD7678C", VA = "0xD7678C")]
		private void OnWhaleReleased(WhaleReleasedEvent e)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xD76810", Offset = "0xD76810", VA = "0xD76810")]
		private void TrySetNextWhaleApperanceData(int nextWhaleAppearanceDay)
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xD768B8", Offset = "0xD768B8", VA = "0xD768B8")]
		private void OnSetNextApperance(NextWhaleApperanceEvent e)
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xD72674", Offset = "0xD72674", VA = "0xD72674")]
		public bool TryGetSpawnPointById(string spawnGuid, out OceanContentSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xD76530", Offset = "0xD76530", VA = "0xD76530")]
		private bool TryGetRewardAtSpawnPoint(OceanContentSpawnPoint spawnPoint, out OceanContentRewardWithId reward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xD73560", Offset = "0xD73560", VA = "0xD73560")]
		private bool SpawnPointIdIsActiveWhalePoint(string spawnId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xD73800", Offset = "0xD73800", VA = "0xD73800")]
		private bool SpawnPointIdIsClaimedRewardPoint(string spawnId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xD768D8", Offset = "0xD768D8", VA = "0xD768D8")]
		public OceanContentManager()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public class OceanContentManagerState : ComponentState
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NextWhaleAppearanceDay;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int RemainingRewardSpawnsToday;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OceanContentSpawnState[] ActiveSpawnStates;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OceanContentRewardState[] ActiveRewardStates;

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xD7201C", Offset = "0xD7201C", VA = "0xD7201C")]
		public OceanContentManagerState(int nextWhaleAppearanceDay, int remainingRewardSpawnsToday, [Optional] OceanContentSpawnState[] activeSpawnStates, [Optional] OceanContentRewardState[] activeRewardStates)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004AD")]
	public struct OceanContentSpawnState
	{
		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string SpawnId;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool WasEnabled;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int AgeAtSave;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HadBeenTriggered;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PlayerWasInside;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool WasClaimed;

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xADB50C", Offset = "0xADB50C", VA = "0xADB50C")]
		public OceanContentSpawnState(string spawnId, bool isEnabled, int currentAge, bool hasBeenTriggered, bool playerIsInside, bool isClaimed = false)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004AE")]
	public struct OceanContentRewardState
	{
		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RewardId;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string SpawnId;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OrientedPoint RewardTransformAtSave;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AssetReference RewardItemAssetReference;

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xAD74AC", Offset = "0xAD74AC", VA = "0xAD74AC")]
		public OceanContentRewardState(string rewardId, string spawnId, Transform currentRewardTransform, AssetReference rewardItemAssetReference)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	public class OceanContentRewardWithId : MonoBehaviour
	{
		[Token(Token = "0x20004B0")]
		public delegate void OnRewardItemSpawnedCallback();

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		public string RewardId;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AssetReference m_rewardItem;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnRewardItemSpawnedCallback OnRewardItemSpawned;

		[Token(Token = "0x1700030B")]
		public AssetReference RewardItem
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xD77198", Offset = "0xD77198", VA = "0xD77198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public bool HasValidId
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0xD763F4", Offset = "0xD763F4", VA = "0xD763F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xD771A0", Offset = "0xD771A0", VA = "0xD771A0", Slot = "4")]
		public virtual void SpawnWithItemAt(AssetReference itemRef, OrientedPoint orientedPoint)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xD77208", Offset = "0xD77208", VA = "0xD77208", Slot = "5")]
		public virtual void SpawnAt(OrientedPoint orientedPoint)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xD6F850", Offset = "0xD6F850", VA = "0xD6F850", Slot = "6")]
		public virtual void Spawn()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xD702C8", Offset = "0xD702C8", VA = "0xD702C8", Slot = "7")]
		public virtual void Despawn()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xD6FE7C", Offset = "0xD6FE7C", VA = "0xD6FE7C", Slot = "8")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xD7725C", Offset = "0xD7725C", VA = "0xD7725C")]
		public void UnsetRewardItem()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xD77268", Offset = "0xD77268", VA = "0xD77268", Slot = "9")]
		public virtual void LoadState(OceanContentRewardState state)
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xD77324", Offset = "0xD77324", VA = "0xD77324")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xD703A8", Offset = "0xD703A8", VA = "0xD703A8")]
		public OceanContentRewardWithId()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public class OceanContentRewardPool : MonoBehaviour
	{
		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[NeatCorp.Attributes.ReadOnly]
		[SerializeField]
		private RaftReward[] m_raftRewardPool;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		private FishingSpotReward[] m_fishingSpotRewardPool;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OceanContentRewardWithId[] m_allRewardsCache;

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xD770B8", Offset = "0xD770B8", VA = "0xD770B8")]
		public OceanContentRewardWithId[] GetAllRewards()
		{
			return null;
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xD76300", Offset = "0xD76300", VA = "0xD76300")]
		public bool TryGetRaftReward(out RaftReward raftReward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xD7642C", Offset = "0xD7642C", VA = "0xD7642C")]
		public bool TryGetFishingSpotReward(out FishingSpotReward fishingSpotReward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xD71EA4", Offset = "0xD71EA4", VA = "0xD71EA4")]
		public bool TryGetRewardById(string id, out OceanContentRewardWithId reward)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xD7710C", Offset = "0xD7710C", VA = "0xD7710C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xD77138", Offset = "0xD77138", VA = "0xD77138")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xD77190", Offset = "0xD77190", VA = "0xD77190")]
		public OceanContentRewardPool()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public enum SpawnType
	{
		[Token(Token = "0x4001C36")]
		FishingReward = 10,
		[Token(Token = "0x4001C37")]
		RubbleReward = 20,
		[Token(Token = "0x4001C38")]
		Whale = 30
	}
	[Token(Token = "0x20004B3")]
	[Flags]
	public enum SpawnTypeFlag
	{
		[Token(Token = "0x4001C3A")]
		None = 0,
		[Token(Token = "0x4001C3B")]
		Everything = 0x40100400,
		[Token(Token = "0x4001C3C")]
		AllRewards = 0x100400,
		[Token(Token = "0x4001C3D")]
		FishingReward = 0x400,
		[Token(Token = "0x4001C3E")]
		RubbleReward = 0x100000,
		[Token(Token = "0x4001C3F")]
		Whale = 0x40000000
	}
	[Token(Token = "0x20004B4")]
	public class OceanContentSpawnPoint : MonoBehaviour
	{
		[Token(Token = "0x20004B5")]
		public delegate void OnPlayerEnterCallback(OceanContentSpawnPoint spawnPoint);

		[Token(Token = "0x20004B6")]
		public delegate void OnPlayerExitCallback(OceanContentSpawnPoint spawnPoint);

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[NeatCorp.Attributes.ReadOnly]
		private string m_spawnId;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[NeatCorp.Attributes.ReadOnly]
		[SerializeField]
		private int m_age;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private SpawnTypeFlag m_enabledSpawnTypes;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07470", Offset = "0xA07470")]
		private float m_triggerRadius;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA074B4", Offset = "0xA074B4")]
		[SerializeField]
		private float m_despawnDeadzoneRadius;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isClaimed;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasBeenTriggered;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		[SerializeField]
		private SphereCollider m_trigger;

		[Token(Token = "0x4001C48")]
		private const float m_oceanSurfaceHeight = 0f;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OnPlayerEnterCallback OnPlayerEnter;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OnPlayerExitCallback OnPlayerExit;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_playerIsInside;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private OrientedPoint m_originalOrientedPoint;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool m_transformWasOverridden;

		[Token(Token = "0x1700030D")]
		public string SpawnId
		{
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xD77368", Offset = "0xD77368", VA = "0xD77368")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030E")]
		public int Age
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xD77370", Offset = "0xD77370", VA = "0xD77370")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030F")]
		public bool IsClaimed
		{
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xD77378", Offset = "0xD77378", VA = "0xD77378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000310")]
		public bool IsClaimedAndEnabled
		{
			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xD71830", Offset = "0xD71830", VA = "0xD71830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000311")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xD75654", Offset = "0xD75654", VA = "0xD75654")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000312")]
		public bool HasBeenTriggered
		{
			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xD77380", Offset = "0xD77380", VA = "0xD77380")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000313")]
		public bool PlayerIsInside
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xD77388", Offset = "0xD77388", VA = "0xD77388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xD77390", Offset = "0xD77390", VA = "0xD77390")]
			private set
			{
			}
		}

		[Token(Token = "0x17000314")]
		public bool IsRewardSpawnType
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xD71940", Offset = "0xD71940", VA = "0xD71940")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000315")]
		public bool IsWhaleSpawnType
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xD7168C", Offset = "0xD7168C", VA = "0xD7168C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xD752D8", Offset = "0xD752D8", VA = "0xD752D8")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xD75A78", Offset = "0xD75A78", VA = "0xD75A78")]
		public void IncreaseAge()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xD72904", Offset = "0xD72904", VA = "0xD72904")]
		public void SetTemporaryTransformOverride(OrientedPoint transformOverride)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xD75D7C", Offset = "0xD75D7C", VA = "0xD75D7C")]
		public bool TryGetTypeToSpawn(out SpawnType spawnType, SpawnTypeFlag allowedSpawnTypes = SpawnTypeFlag.Everything)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xD75604", Offset = "0xD75604", VA = "0xD75604")]
		public bool TryClaim(bool reset = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xD73C04", Offset = "0xD73C04", VA = "0xD73C04")]
		public void Release()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xD7599C", Offset = "0xD7599C", VA = "0xD7599C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xD71E00", Offset = "0xD71E00", VA = "0xD71E00")]
		public OceanContentSpawnState GetCurrentState(OceanContentManager manager)
		{
			return default(OceanContentSpawnState);
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xD72730", Offset = "0xD72730", VA = "0xD72730")]
		public void LoadState(OceanContentSpawnState spawnPointState)
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xD774CC", Offset = "0xD774CC", VA = "0xD774CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xD775B0", Offset = "0xD775B0", VA = "0xD775B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xD77648", Offset = "0xD77648", VA = "0xD77648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xD773D8", Offset = "0xD773D8", VA = "0xD773D8")]
		private void HandlePlayerEnter()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xD7742C", Offset = "0xD7742C", VA = "0xD7742C")]
		private void HandlePlayerExit()
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xD776DC", Offset = "0xD776DC", VA = "0xD776DC")]
		private void OnTriggerEnter(Collider o)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xD77794", Offset = "0xD77794", VA = "0xD77794")]
		private void OnTriggerExit(Collider o)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xD77498", Offset = "0xD77498", VA = "0xD77498")]
		private void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xD77850", Offset = "0xD77850", VA = "0xD77850")]
		public OceanContentSpawnPoint()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class RaftItemTracker : MonoBehaviour
	{
		[Token(Token = "0x20004B8")]
		public delegate void OnItemPutOnRaftCallback(Grabbable grabbableItem);

		[Token(Token = "0x20004B9")]
		public delegate void OnItemRemovedFromRaftCallback(Grabbable grabbableItem);

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Grabbable> m_grabbableItemsOnRaft;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnItemPutOnRaftCallback OnItemPutOnRaft;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OnItemRemovedFromRaftCallback OnItemRemovedFromRaft;

		[Token(Token = "0x17000316")]
		public List<Grabbable> GrabbableItemsOnRaft
		{
			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xE75514", Offset = "0xE75514", VA = "0xE75514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xE7551C", Offset = "0xE7551C", VA = "0xE7551C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xE75590", Offset = "0xE75590", VA = "0xE75590")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xE75730", Offset = "0xE75730", VA = "0xE75730")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xE7567C", Offset = "0xE7567C", VA = "0xE7567C")]
		private void AddObjectToItemArray(Grabbable grabbableObject)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xE7581C", Offset = "0xE7581C", VA = "0xE7581C")]
		private void RemoveObjectFromItemArray(Grabbable grabbableObject)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xE76000", Offset = "0xE76000", VA = "0xE76000")]
		public RaftItemTracker()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class RaftReward : OceanContentRewardWithId
	{
		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCCA0", Offset = "0x9FCCA0")]
		private sealed class <OnAnimatorReady>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaftReward <>4__this;

			[Token(Token = "0x17000318")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0xE781AC", Offset = "0xE781AC", VA = "0xE781AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000319")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0xE78214", Offset = "0xE78214", VA = "0xE78214", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xE774AC", Offset = "0xE774AC", VA = "0xE774AC")]
			[DebuggerHidden]
			public <OnAnimatorReady>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xE780A4", Offset = "0xE780A4", VA = "0xE780A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xE780A8", Offset = "0xE780A8", VA = "0xE780A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xE781B4", Offset = "0xE781B4", VA = "0xE781B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCCB0", Offset = "0x9FCCB0")]
		private sealed class <DespawnFallback>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float waitSeconds;

			[Token(Token = "0x4001C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RaftReward <>4__this;

			[Token(Token = "0x1700031A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D74")]
				[Address(RVA = "0xE78034", Offset = "0xE78034", VA = "0xE78034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D76")]
				[Address(RVA = "0xE7809C", Offset = "0xE7809C", VA = "0xE7809C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xE77564", Offset = "0xE77564", VA = "0xE77564")]
			[DebuggerHidden]
			public <DespawnFallback>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xE77F50", Offset = "0xE77F50", VA = "0xE77F50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xE77F54", Offset = "0xE77F54", VA = "0xE77F54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xE7803C", Offset = "0xE7803C", VA = "0xE7803C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int m_raftSinkTriggerParamId;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_rewardSpawnPoint;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Animator m_raftAnimation;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MeshRenderer m_raftMeshRenderer;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem m_raftSplashParticleSystem;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private RaftItemTracker m_raftItemTracker;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0757C", Offset = "0xA0757C")]
		private NeatAudioPlayer m_longRangeAudioPlayer;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_loopAudioPlayer;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_spawnAudioCue;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioCue m_despawnAudioCue;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject m_spawnedRewardItem;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isDespawning;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool m_hasReachedIdle;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Grabbable> m_itemsToParentToRaftOnIdle;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> m_itemsToDestroyOnDespawn;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine m_onAnimatorReadyCoroutine;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Coroutine m_onRaftIsIdleCoroutine;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine m_despawnFallbackCoroutine;

		[Token(Token = "0x17000317")]
		public GameObject SpawnedRewardItem
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0xE76108", Offset = "0xE76108", VA = "0xE76108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xE76110", Offset = "0xE76110", VA = "0xE76110", Slot = "6")]
		public override void Spawn()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xE76810", Offset = "0xE76810", VA = "0xE76810", Slot = "7")]
		public override void Despawn()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xE76F3C", Offset = "0xE76F3C", VA = "0xE76F3C", Slot = "8")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xE77034", Offset = "0xE77034", VA = "0xE77034")]
		public void PreInitSpawnRewardItem(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xE771F8", Offset = "0xE771F8", VA = "0xE771F8")]
		public void PostInitSpawnRewardItem(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xE77340", Offset = "0xE77340", VA = "0xE77340")]
		public void OnRewardItemFirstGrab(Grabbable rewardItem)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xE76580", Offset = "0xE76580", VA = "0xE76580")]
		private void ResetAllEvents()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xE77430", Offset = "0xE77430", VA = "0xE77430")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17384", Offset = "0xA17384")]
		private IEnumerator OnAnimatorReady()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xE767B8", Offset = "0xE767B8", VA = "0xE767B8")]
		private void StartOnAnimatorReadyCoroutine()
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xE774D8", Offset = "0xE774D8", VA = "0xE774D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA173E8", Offset = "0xA173E8")]
		private IEnumerator DespawnFallback(float waitSeconds)
		{
			return null;
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xE76CF4", Offset = "0xE76CF4", VA = "0xE76CF4")]
		private void StartDespawnFallbackCoroutine()
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xE77590", Offset = "0xE77590", VA = "0xE77590")]
		private void PlaySpawnAndLoopAudio()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xE776A4", Offset = "0xE776A4", VA = "0xE776A4")]
		private void PlayDespawnAudio()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xE777CC", Offset = "0xE777CC", VA = "0xE777CC")]
		private void StopAllSounds()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xE778D4", Offset = "0xE778D4", VA = "0xE778D4")]
		private void TrySetRaftAsItemParent(Grabbable grabbableItem, bool shouldParent)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xE76908", Offset = "0xE76908", VA = "0xE76908")]
		private void OnWillDespawn()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xE76D84", Offset = "0xE76D84", VA = "0xE76D84")]
		public void OnReadyForDespawn()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xE77B48", Offset = "0xE77B48", VA = "0xE77B48")]
		private void OnRaftHasSunkAnimationExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xE77B4C", Offset = "0xE77B4C", VA = "0xE77B4C")]
		private void OnRaftIsIdleAnimationEnter(OnAnimationStateEnterEvent e)
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xE77B58", Offset = "0xE77B58", VA = "0xE77B58")]
		private void OnRaftIsIdle()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xE77D0C", Offset = "0xE77D0C", VA = "0xE77D0C")]
		private void OnItemPutOnRaft(Grabbable grabbableItem)
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xE77DAC", Offset = "0xE77DAC", VA = "0xE77DAC")]
		private void OnItemRemovedFromRaft(Grabbable grabbableItem)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xE77E34", Offset = "0xE77E34", VA = "0xE77E34")]
		public RaftReward()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCCC0", Offset = "0x9FCCC0")]
	public class RewardData : ScriptableObject
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference[] m_rewards;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07608", Offset = "0xA07608")]
		[SerializeField]
		private float[] m_weights;

		[Token(Token = "0x1700031C")]
		public AssetReference[] AllAvailableRewards
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xE7821C", Offset = "0xE7821C", VA = "0xE7821C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xE78224", Offset = "0xE78224", VA = "0xE78224")]
		public AssetReference GetRandomReward()
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xE7834C", Offset = "0xE7834C", VA = "0xE7834C")]
		public bool TryGetRandomReward(out AssetReference rewardAssetReference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xE78388", Offset = "0xE78388", VA = "0xE78388")]
		private int GetRandomWeightedIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xE782AC", Offset = "0xE782AC", VA = "0xE782AC")]
		private bool TryGetRandomWeightedIndex(out int randomIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xE784FC", Offset = "0xE784FC", VA = "0xE784FC")]
		private void UpdateWeightsToMatchRewards()
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xE7860C", Offset = "0xE7860C", VA = "0xE7860C")]
		public RewardData()
		{
		}
	}
}
namespace NeatCorp.Environment.Lighting
{
	[Token(Token = "0x20004BE")]
	public class LightAltarFire : MonoBehaviour
	{
		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IslandType m_islandType;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnvironmentLight[] m_environmentLights;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_startLit;

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xD6F02C", Offset = "0xD6F02C", VA = "0xD6F02C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xD6F180", Offset = "0xD6F180", VA = "0xD6F180")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xD6F228", Offset = "0xD6F228", VA = "0xD6F228")]
		private void OnIslandStateEvent(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xD6F0E0", Offset = "0xD6F0E0", VA = "0xD6F0E0")]
		private void SetLight(bool shouldBeLit)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xD6F264", Offset = "0xD6F264", VA = "0xD6F264")]
		public LightAltarFire()
		{
		}
	}
}
namespace NeatCorp.Environment.Islands
{
	[Token(Token = "0x20004BF")]
	public enum IslandState
	{
		[Token(Token = "0x4001C70")]
		Undiscovered,
		[Token(Token = "0x4001C71")]
		Visited,
		[Token(Token = "0x4001C72")]
		CurrentlyCompleted,
		[Token(Token = "0x4001C73")]
		PreviouslyCompleted
	}
	[Token(Token = "0x20004C0")]
	public enum IslandType
	{
		[Token(Token = "0x4001C75")]
		Homeland,
		[Token(Token = "0x4001C76")]
		Crystal,
		[Token(Token = "0x4001C77")]
		Coral,
		[Token(Token = "0x4001C78")]
		Bamboo,
		[Token(Token = "0x4001C79")]
		GodIsland
	}
}
namespace NeatCorp.Environment.CoralIsland
{
	[Token(Token = "0x20004C1")]
	public class CoralTreeFlower : MonoBehaviour
	{
		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCD2C", Offset = "0x9FCD2C")]
		private sealed class <StartOpeningDelayed>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CoralTreeFlower <>4__this;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D8F")]
				[Address(RVA = "0xD6EDB0", Offset = "0xD6EDB0", VA = "0xD6EDB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D91")]
				[Address(RVA = "0xD6EE18", Offset = "0xD6EE18", VA = "0xD6EE18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0xD6EC20", Offset = "0xD6EC20", VA = "0xD6EC20")]
			[DebuggerHidden]
			public <StartOpeningDelayed>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xD6ED30", Offset = "0xD6ED30", VA = "0xD6ED30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xD6ED34", Offset = "0xD6ED34", VA = "0xD6ED34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xD6EDB8", Offset = "0xD6EDB8", VA = "0xD6EDB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_flowerOpenStateId;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_flowerClosed;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_flowerOpen;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldInstruction m_waitForUntilOpeningDuration;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine m_openFlowerRoutine;

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xD6E788", Offset = "0xD6E788", VA = "0xD6E788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xD6E830", Offset = "0xD6E830", VA = "0xD6E830")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xD6E8D8", Offset = "0xD6E8D8", VA = "0xD6E8D8")]
		private void OnIslandStateEvent(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xD6EA00", Offset = "0xD6EA00", VA = "0xD6EA00")]
		private void HandleOpening(bool startOpen, float speed = 1f, float duration = 1f)
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xD6EBD0", Offset = "0xD6EBD0", VA = "0xD6EBD0")]
		private void OpenManually(IslandStateEvent e, float speed = 1f)
		{
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xD6EB54", Offset = "0xD6EB54", VA = "0xD6EB54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA174EC", Offset = "0xA174EC")]
		private IEnumerator StartOpeningDelayed()
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xD6EC4C", Offset = "0xD6EC4C", VA = "0xD6EC4C")]
		public void Open(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xD6EC54", Offset = "0xD6EC54", VA = "0xD6EC54")]
		public CoralTreeFlower()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	public class LightParticlesFlower : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_lightParticles;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CoralTreeFlower m_openableFlower;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isOpen;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_hasInitialized;

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xD6EE20", Offset = "0xD6EE20", VA = "0xD6EE20", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xD6EF78", Offset = "0xD6EF78", VA = "0xD6EF78", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xD6F010", Offset = "0xD6F010", VA = "0xD6F010")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xD6EEC4", Offset = "0xD6EEC4", VA = "0xD6EEC4")]
		public void Open(bool shouldStartOpen)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xD6F024", Offset = "0xD6F024", VA = "0xD6F024")]
		public LightParticlesFlower()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004C4")]
	public class LightParticlesFlowerState : ComponentState
	{
		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsOpen;

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xD6EFE0", Offset = "0xD6EFE0", VA = "0xD6EFE0")]
		public LightParticlesFlowerState(bool isOpen)
		{
		}
	}
}
namespace NeatCorp.Text.Credits
{
	[Token(Token = "0x20004C5")]
	public class CreditsHandler : MonoBehaviour
	{
		[Token(Token = "0x20004C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCD3C", Offset = "0x9FCD3C")]
		private sealed class <ShowCreditsRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CreditsHandler <>4__this;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA7")]
				[Address(RVA = "0xD8D7F4", Offset = "0xD8D7F4", VA = "0xD8D7F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA9")]
				[Address(RVA = "0xD8D85C", Offset = "0xD8D85C", VA = "0xD8D85C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xD8CA18", Offset = "0xD8CA18", VA = "0xD8CA18")]
			[DebuggerHidden]
			public <ShowCreditsRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0xD8D3A8", Offset = "0xD8D3A8", VA = "0xD8D3A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xD8D3AC", Offset = "0xD8D3AC", VA = "0xD8D3AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0xD8D7FC", Offset = "0xD8D7FC", VA = "0xD8D7FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCD4C", Offset = "0x9FCD4C")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreditsHandler <>4__this;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text textField;

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0xD8CDF8", Offset = "0xD8CDF8", VA = "0xD8CDF8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0xD8D364", Offset = "0xD8D364", VA = "0xD8D364")]
			internal void <FadeOut>b__0()
			{
			}
		}

		[Token(Token = "0x20004C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCD5C", Offset = "0x9FCD5C")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreditsHandler <>4__this;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TMP_Text[] textFields;

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xD8D11C", Offset = "0xD8D11C", VA = "0xD8D11C")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0xD8D384", Offset = "0xD8D384", VA = "0xD8D384")]
			internal void <FadeOutSequence>b__0()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCD6C", Offset = "0x9FCD6C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__31_0;

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xD8D358", Offset = "0xD8D358", VA = "0xD8D358")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xD8D360", Offset = "0xD8D360", VA = "0xD8D360")]
			internal void <.ctor>b__31_0()
			{
			}
		}

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text[] m_firstFields;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text[] m_secondFields;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text[] m_thirdFields;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text[] m_fourthFields;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_scrollView;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_scrollSpeed;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_messageFadeTime;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_textFadeTime;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_fadeInPos;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_fadeOutPos;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TMP_Text[] m_fields;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_numberOfFields;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[HideInInspector]
		private List<TMP_Text> m_fieldsList;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Action OnComplete;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_shouldScroll;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int m_nextToFadeIn;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_nextToFadeOut;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_scrollDelta;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Tween m_currentTween;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_isCompleted;

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xD8C830", Offset = "0xD8C830", VA = "0xD8C830")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xD8C880", Offset = "0xD8C880", VA = "0xD8C880")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xD8C834", Offset = "0xD8C834", VA = "0xD8C834")]
		public void ShowCredits()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xD8C99C", Offset = "0xD8C99C", VA = "0xD8C99C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA175A0", Offset = "0xA175A0")]
		private IEnumerator ShowCreditsRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xD8CA44", Offset = "0xD8CA44", VA = "0xD8CA44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xD8CC70", Offset = "0xD8CC70", VA = "0xD8CC70")]
		private Tween FadeIn(TMP_Text textField, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xD8CCF4", Offset = "0xD8CCF4", VA = "0xD8CCF4")]
		private Tween FadeOut(TMP_Text textField, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xD8CE00", Offset = "0xD8CE00", VA = "0xD8CE00")]
		private void OnTextFieldFadeOut(TMP_Text textField)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xD8CE7C", Offset = "0xD8CE7C", VA = "0xD8CE7C")]
		private Tween FadeInSequence(TMP_Text[] textField, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xD8CF98", Offset = "0xD8CF98", VA = "0xD8CF98")]
		private Tween FadeOutSequence(TMP_Text[] textFields, float fadeTime = 0f)
		{
			return null;
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xD8C8D0", Offset = "0xD8C8D0", VA = "0xD8C8D0")]
		private void SetFieldsActive(TMP_Text[] textFields, bool shouldBeActive, float alpha = -1f)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xD8D124", Offset = "0xD8D124", VA = "0xD8D124")]
		public CreditsHandler()
		{
		}
	}
}
namespace NeatCorp.Creatures
{
	[Token(Token = "0x20004CA")]
	public class CreatureBase : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool m_initialized;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected CreatureState m_currentState;

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xD6075C", Offset = "0xD6075C", VA = "0xD6075C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xD607C0", Offset = "0xD607C0", VA = "0xD607C0", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xD60858", Offset = "0xD60858", VA = "0xD60858")]
		public CreatureBase()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class CreatureMoveToPointerTest : MonoBehaviour
	{
		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xD60860", Offset = "0xD60860", VA = "0xD60860")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xD60914", Offset = "0xD60914", VA = "0xD60914")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xD60B6C", Offset = "0xD60B6C", VA = "0xD60B6C")]
		public CreatureMoveToPointerTest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004CC")]
	public struct CreaturePopulation
	{
		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA077D0", Offset = "0xA077D0")]
		public int MaxTotalCreatures;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA077E8", Offset = "0xA077E8")]
		public int MaxVisitingCreatures;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07800", Offset = "0xA07800")]
		public int MaxVisitingDays;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07818", Offset = "0xA07818")]
		public int DaysSpawnInterval;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int FirstSpawnDay;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA07830", Offset = "0xA07830")]
		private int <Visiting>k__BackingField;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA07840", Offset = "0xA07840")]
		private int <LastSpawnDay>k__BackingField;

		[Token(Token = "0x17000321")]
		public int Visiting
		{
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0xAD7078", Offset = "0xAD7078", VA = "0xAD7078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17654", Offset = "0xA17654")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xAD7080", Offset = "0xAD7080", VA = "0xAD7080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17664", Offset = "0xA17664")]
			set
			{
			}
		}

		[Token(Token = "0x17000322")]
		public int LastSpawnDay
		{
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0xAD7088", Offset = "0xAD7088", VA = "0xAD7088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17674", Offset = "0xA17674")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xAD7090", Offset = "0xAD7090", VA = "0xAD7090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17684", Offset = "0xA17684")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20004CD")]
	public enum CreatureType
	{
		[Token(Token = "0x4001CB0")]
		Undefined,
		[Token(Token = "0x4001CB1")]
		ManateeCow,
		[Token(Token = "0x4001CB2")]
		Puffkin,
		[Token(Token = "0x4001CB3")]
		Moleseal,
		[Token(Token = "0x4001CB4")]
		DragonSheep,
		[Token(Token = "0x4001CB5")]
		NumTypes
	}
	[Token(Token = "0x20004CE")]
	[Flags]
	public enum CreatureTypeFlag
	{
		[Token(Token = "0x4001CB7")]
		ManateeCow = 2,
		[Token(Token = "0x4001CB8")]
		Puffkin = 4,
		[Token(Token = "0x4001CB9")]
		Moleseal = 8,
		[Token(Token = "0x4001CBA")]
		DragonSheep = 0x10
	}
	[Token(Token = "0x20004CF")]
	public static class CreatureTypeExtensions
	{
		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xD60B94", Offset = "0xD60B94", VA = "0xD60B94")]
		public static CreatureTypeFlag AsFlag(this CreatureType ct)
		{
			return default(CreatureTypeFlag);
		}
	}
	[Token(Token = "0x20004D0")]
	public class DragonSheepDebug : MonoBehaviour
	{
		[Token(Token = "0x20004D1")]
		public enum DragonSheepState
		{
			[Token(Token = "0x4001CC4")]
			Default,
			[Token(Token = "0x4001CC5")]
			FollowingPlayer,
			[Token(Token = "0x4001CC6")]
			StayingAtLocation
		}

		[Token(Token = "0x20004D2")]
		public struct DragonSheepDebugInfo
		{
			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public DragonSheepState DebugState;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public ManualMovementType ManualMovement;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public CreatureBehaviour.CreatureAction CreatureAction;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public CreatureBehaviour.CreatureAction SpecialActionOverride;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CreatureMovement.CreatureMovementState CreatureMovementState;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 Velocity;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float VelocitySqrMagnitude;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string DebugText;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool IsVelocityBlocked;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool CloseToTarget;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 MovementHelperDirection;

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xAD71F4", Offset = "0xAD71F4", VA = "0xAD71F4")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text m_DebugStateText;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text m_velocity;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TMP_Text m_ManualMovementText;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TMP_Text m_CreatureActionText;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TMP_Text m_SpecialActionOverrideText;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_Text m_CreatureMovementStateText;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_Text m_debugText;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private DragonSheepDebugInfo m_debugInfo;

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD60BA0", Offset = "0xD60BA0", VA = "0xD60BA0")]
		public void UpdateDebugInfo(DragonSheepDebugInfo info)
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xD60BF0", Offset = "0xD60BF0", VA = "0xD60BF0")]
		public void UpdateDebugText()
		{
		}

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xD60EEC", Offset = "0xD60EEC", VA = "0xD60EEC")]
		private void RotateText()
		{
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xD60FF0", Offset = "0xD60FF0", VA = "0xD60FF0")]
		public DragonSheepDebug()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public enum ManualMovementType
	{
		[Token(Token = "0x4001CD3")]
		None,
		[Token(Token = "0x4001CD4")]
		InitialRotation,
		[Token(Token = "0x4001CD5")]
		Moving,
		[Token(Token = "0x4001CD6")]
		EndRotation,
		[Token(Token = "0x4001CD7")]
		AdjustHeight
	}
	[Token(Token = "0x20004D4")]
	public enum MovementResult
	{
		[Token(Token = "0x4001CD9")]
		Moving,
		[Token(Token = "0x4001CDA")]
		Finished,
		[Token(Token = "0x4001CDB")]
		Failed
	}
	[Token(Token = "0x20004D5")]
	public class DragonSheepMovement : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCD9C", Offset = "0x9FCD9C")]
		private sealed class <UnlockWhenFacing>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DragonSheepMovement <>4__this;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF7")]
				[Address(RVA = "0xD651A0", Offset = "0xD651A0", VA = "0xD651A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF9")]
				[Address(RVA = "0xD65208", Offset = "0xD65208", VA = "0xD65208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xD61548", Offset = "0xD61548", VA = "0xD61548")]
			[DebuggerHidden]
			public <UnlockWhenFacing>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xD64FE0", Offset = "0xD64FE0", VA = "0xD64FE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xD64FE4", Offset = "0xD64FE4", VA = "0xD64FE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xD651A8", Offset = "0xD651A8", VA = "0xD651A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int StayAtLocationParamId;

		[Token(Token = "0x4001CDD")]
		private const float BaseOffsetTargetTolerance = 0.005f;

		[Token(Token = "0x4001CDE")]
		private const float CheckPlayerPositionInterval = 6f;

		[Token(Token = "0x4001CDF")]
		private const float TargetRotationTolerance = 1.5f;

		[Token(Token = "0x4001CE0")]
		private const float TargetSqareDistanceTolerance = 0.0001f;

		[Token(Token = "0x4001CE1")]
		private const float MaxSpeedDistance = 40f;

		[Token(Token = "0x4001CE2")]
		private const float MaxCatchUpSpeed = 3f;

		[Token(Token = "0x4001CE3")]
		private const float FailedMovementDuration = 5f;

		[Token(Token = "0x4001CE4")]
		private const float MaxWaitingForPathDuration = 30f;

		[Token(Token = "0x4001CE5")]
		private const float CollisionRadius = 0.25f;

		[Token(Token = "0x4001CE6")]
		private const float LowestAltitude = 0.5f;

		[Token(Token = "0x4001CE7")]
		private const float ChangeCheckPositionTheshold = 10f;

		[Token(Token = "0x4001CE8")]
		private const float MaxHeightAdjustmentToNavmesh = 5f;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CreatureBehaviour m_behaviour;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CapsuleCollider m_pettableTrigger;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_verticalSpeed;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_minPitchDuration;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_maxPitchDuration;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_minFollowPlayerInterval;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_maxFollowPlayerInterval;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_offNavmeshMinFollowInterval;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_offNavmeshMaxFollowInterval;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SaveObjectBase m_saveObjectBase;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_showDebugInfo;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_debugPrefab;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_targetBaseOffset;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_timeUntilNewHeight;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_timeUntilNewFollowPosition;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		[SerializeField]
		private float m_halfAgentHeight;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_tryingToFollowPlayer;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_timeUntilFollowPositionUpdate;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ManualMovementType m_manualMovement;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 m_followPlayerPosition;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private NavMeshPath m_path;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Scene m_scene;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 m_velocity;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 m_targetVelocity;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_isUnlocked;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool m_initialized;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool m_tryingToReachNavigationTarget;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float m_failedToMoveTowardsTarget;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_idlePathDuration;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform m_stayPosition;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_hasStayPosition;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool m_isAtStayLocation;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		private bool m_hasReachedStayLocation;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA079D8", Offset = "0xA079D8")]
		private static DragonSheepMovement <Instance>k__BackingField;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA079E8", Offset = "0xA079E8")]
		private static Transform <TempStayPosition>k__BackingField;

		[Token(Token = "0x17000323")]
		public static DragonSheepMovement Instance
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xD60FF8", Offset = "0xD60FF8", VA = "0xD60FF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA176A4", Offset = "0xA176A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xD61060", Offset = "0xD61060", VA = "0xD61060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA176B4", Offset = "0xA176B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public static Transform TempStayPosition
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xD610D0", Offset = "0xD610D0", VA = "0xD610D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA176C4", Offset = "0xA176C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xD61138", Offset = "0xD61138", VA = "0xD61138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA176D4", Offset = "0xA176D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xD611A8", Offset = "0xD611A8", VA = "0xD611A8")]
		private void InitializeSettings()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xD61268", Offset = "0xD61268", VA = "0xD61268")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xD61324", Offset = "0xD61324", VA = "0xD61324")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xD613CC", Offset = "0xD613CC", VA = "0xD613CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xD61474", Offset = "0xD61474", VA = "0xD61474")]
		private void OnIslandStateEvent(IslandStateEvent e)
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xD614CC", Offset = "0xD614CC", VA = "0xD614CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA176E4", Offset = "0xA176E4")]
		private IEnumerator UnlockWhenFacing()
		{
			return null;
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xD61574", Offset = "0xD61574", VA = "0xD61574")]
		public static Transform GetStayPosition()
		{
			return null;
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xD61728", Offset = "0xD61728", VA = "0xD61728", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xD61F40", Offset = "0xD61F40", VA = "0xD61F40", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xD61FF8", Offset = "0xD61FF8", VA = "0xD61FF8")]
		private void UpdateBaseOffset()
		{
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xD62268", Offset = "0xD62268", VA = "0xD62268")]
		private void UpdateFollowBehavior()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xD62594", Offset = "0xD62594", VA = "0xD62594")]
		private void MoveToAndStayAtPosition(Transform stayLocation)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xD624CC", Offset = "0xD624CC", VA = "0xD624CC")]
		private void SetStayAtLocationState(bool shouldStay)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xD6303C", Offset = "0xD6303C", VA = "0xD6303C")]
		private bool ShouldMoveTowardsTemporaryTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xD63010", Offset = "0xD63010", VA = "0xD63010")]
		private void SetTimeUntilNewFollowDuration()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xD62FB4", Offset = "0xD62FB4", VA = "0xD62FB4")]
		private void TryAdjustFollowIntervalWhileOffNavmesh()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xD6262C", Offset = "0xD6262C", VA = "0xD6262C")]
		private bool TryGetPlayerFollowPosition(ref Vector3 checkOnPlayerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xD63308", Offset = "0xD63308", VA = "0xD63308")]
		private bool GetPositionOutsideCollision(ref Vector3 updatedPosition, Vector3 targetPosition, Vector3 playerPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xD62CD4", Offset = "0xD62CD4", VA = "0xD62CD4")]
		private bool TryReachDestination(Vector3 pos, CreatureBehaviour.CreatureAction creatureAction, bool skipHeightAdjustment = false, bool skipEndRotation = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xD63650", Offset = "0xD63650", VA = "0xD63650")]
		private bool IsCloseEnough(Vector3 pos, bool skipEndRotation = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xD6354C", Offset = "0xD6354C", VA = "0xD6354C")]
		private bool IsWithinDistanceTo(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xD638C8", Offset = "0xD638C8", VA = "0xD638C8")]
		private bool IsWithinGeneralDirection(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xD64148", Offset = "0xD64148", VA = "0xD64148")]
		private bool TryMoveToNavmesh(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xD63150", Offset = "0xD63150", VA = "0xD63150")]
		private bool RotateTo(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xD636D0", Offset = "0xD636D0", VA = "0xD636D0")]
		private bool RotateTowards(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xD64484", Offset = "0xD64484", VA = "0xD64484")]
		private bool IsAlreadyAtStayLocation(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xD63A00", Offset = "0xD63A00", VA = "0xD63A00")]
		private void MoveTowards(Vector3 pos, out MovementResult result)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xD6469C", Offset = "0xD6469C", VA = "0xD6469C")]
		private Vector3 TryGetValidVelocityDirection(Vector3 targetVelocity, float targetDistance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xD62174", Offset = "0xD62174", VA = "0xD62174")]
		private float GetVerticalMovementTarget()
		{
			return default(float);
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xD649E4", Offset = "0xD649E4", VA = "0xD649E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xD61DAC", Offset = "0xD61DAC", VA = "0xD61DAC")]
		private bool TryMoveToPersistantScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xD61974", Offset = "0xD61974", VA = "0xD61974")]
		public void Unlock()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xD61A34", Offset = "0xD61A34", VA = "0xD61A34")]
		public static void SetStayPosition(Transform stayPosition)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xD64A28", Offset = "0xD64A28", VA = "0xD64A28")]
		public static void ResetStayPosition()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xD64D28", Offset = "0xD64D28", VA = "0xD64D28")]
		private void TryMoveToClosestNavmesh()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xD64EAC", Offset = "0xD64EAC", VA = "0xD64EAC")]
		public void CallDragonSheep()
		{
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xD64F30", Offset = "0xD64F30", VA = "0xD64F30")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17748", Offset = "0xA17748")]
		private void UpdateDebugInfo()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xD64F34", Offset = "0xD64F34", VA = "0xD64F34")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17780", Offset = "0xA17780")]
		private void DrawCheckOnInitialTarget(Vector3 checkOnPlayerPosition)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xD64F38", Offset = "0xD64F38", VA = "0xD64F38")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA177B8", Offset = "0xA177B8")]
		private void DrawNavmeshCheckPositionInfo(Vector3 checkOnPlayerPosition, NavMeshHit hit)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xD64F3C", Offset = "0xD64F3C", VA = "0xD64F3C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA177F0", Offset = "0xA177F0")]
		private void DrawTargetOutsideCollision(Vector3 checkOnPlayerPosition)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xD64F40", Offset = "0xD64F40", VA = "0xD64F40")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17828", Offset = "0xA17828")]
		private void DrawCheckPositionCollisionInfo(Vector3 updatedPosition, bool collisionResult, float distance, Ray ray)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xD64F44", Offset = "0xD64F44", VA = "0xD64F44")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17860", Offset = "0xA17860")]
		private void SetDebugNotWithinCloseDistanceInfo()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xD64F48", Offset = "0xD64F48", VA = "0xD64F48")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17898", Offset = "0xA17898")]
		private void SetDebugMovementHelperDirection(Vector3 frameMovementToTarget)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xD64F4C", Offset = "0xD64F4C", VA = "0xD64F4C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA178D0", Offset = "0xA178D0")]
		private void SetDebugIsCloseToTarget()
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xD64F50", Offset = "0xD64F50", VA = "0xD64F50")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17908", Offset = "0xA17908")]
		private void SetDebugVelocity(Vector3 velocity)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xD64F54", Offset = "0xD64F54", VA = "0xD64F54")]
		public DragonSheepMovement()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class DragonSheepMovementState : ComponentState
	{
		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsUnlocked;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeUntilFollowPlayer;

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xD61FB8", Offset = "0xD61FB8", VA = "0xD61FB8")]
		public DragonSheepMovementState(bool isUnlocked, float timeUntilFollowPlayer)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public class DragonSheepStayLocation : MonoBehaviour
	{
		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_stayPosition;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xD65210", Offset = "0xD65210", VA = "0xD65210")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xD652B8", Offset = "0xD652B8", VA = "0xD652B8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xD653B4", Offset = "0xD653B4", VA = "0xD653B4")]
		public DragonSheepStayLocation()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public class EyeExpression : MonoBehaviour
	{
		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CreatureBehaviour m_behaviour;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_eyeExpressionJoint;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer m_eyeRenderer;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer[] m_eyeRendererLods;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_materialIndex;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private int m_eyeTextureCols;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private int m_eyeTextureRows;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_lastY;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_lastX;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_hasPropertyBlock;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_offsetV;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_offsetH;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_hasNeutralExpression;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int cols;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int rows;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int offsetH;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int offsetV;

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xD65A44", Offset = "0xD65A44", VA = "0xD65A44")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xD65C38", Offset = "0xD65C38", VA = "0xD65C38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0xD65CB4", Offset = "0xD65CB4", VA = "0xD65CB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0xD65D00", Offset = "0xD65D00", VA = "0xD65D00")]
		private bool IsCloseToPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xD65E04", Offset = "0xD65E04", VA = "0xD65E04")]
		private void UpdateEyeExpressions()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xD66108", Offset = "0xD66108", VA = "0xD66108")]
		private void SetNeutralExpression()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xD661D4", Offset = "0xD661D4", VA = "0xD661D4")]
		private void SetPropertyBlocks()
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xD66274", Offset = "0xD66274", VA = "0xD66274")]
		public EyeExpression()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	public class VisitingAnimalSpawnLocation : MonoBehaviour
	{
		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureTypeFlag creatureTypeFlag;

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xD66E90", Offset = "0xD66E90", VA = "0xD66E90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xD66EF8", Offset = "0xD66EF8", VA = "0xD66EF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xD66F60", Offset = "0xD66F60", VA = "0xD66F60")]
		public VisitingAnimalSpawnLocation()
		{
		}
	}
}
namespace NeatCorp.Creatures.Whale
{
	[Token(Token = "0x20004DB")]
	public class NextWhaleApperanceEvent : GameEvent
	{
		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int NextAppeingDay;

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xD67010", Offset = "0xD67010", VA = "0xD67010")]
		public NextWhaleApperanceEvent(int nextAppeingDay)
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class Whale : SaveableComponent, IInitializable
	{
		[Token(Token = "0x20004DD")]
		public enum WhaleAction
		{
			[Token(Token = "0x4001D60")]
			Undefined,
			[Token(Token = "0x4001D61")]
			Idle,
			[Token(Token = "0x4001D62")]
			TryToEatFromHand,
			[Token(Token = "0x4001D63")]
			EatFromHand,
			[Token(Token = "0x4001D64")]
			Full,
			[Token(Token = "0x4001D65")]
			Petted,
			[Token(Token = "0x4001D66")]
			Dive,
			[Token(Token = "0x4001D67")]
			Disappear,
			[Token(Token = "0x4001D68")]
			HappyReaction,
			[Token(Token = "0x4001D69")]
			NumActions
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCDAC", Offset = "0x9FCDAC")]
		private sealed class <CleanUpAfterDuration>d__88 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Whale <>4__this;

			[Token(Token = "0x4001D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <times>5__2;

			[Token(Token = "0x1700032A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E44")]
				[Address(RVA = "0xD69610", Offset = "0xD69610", VA = "0xD69610", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xD69678", Offset = "0xD69678", VA = "0xD69678", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xD68794", Offset = "0xD68794", VA = "0xD68794")]
			[DebuggerHidden]
			public <CleanUpAfterDuration>d__88(int <>1__state)
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xD69544", Offset = "0xD69544", VA = "0xD69544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xD69548", Offset = "0xD69548", VA = "0xD69548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xD69618", Offset = "0xD69618", VA = "0xD69618", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D28")]
		private const string creatureTypeString = "Whale";

		[Token(Token = "0x4001D29")]
		private const float LongSqrDistanceToPlayer = 900f;

		[Token(Token = "0x4001D2A")]
		private const float MidDistanceToPlayer = 225f;

		[Token(Token = "0x4001D2B")]
		private const float MinLookDistance = 5.5f;

		[Token(Token = "0x4001D2C")]
		private const float MaxLookDistance = 12f;

		[Token(Token = "0x4001D2D")]
		private const float MinRandomSwimingDuration = 5f;

		[Token(Token = "0x4001D2E")]
		private const float MaxRanodomSwimingDuration = 15f;

		[Token(Token = "0x4001D2F")]
		private const int StartHungerLevel = 2;

		[Token(Token = "0x4001D30")]
		private const float MinActionDuration = 1f;

		[Token(Token = "0x4001D31")]
		private const float MaxActionDuration = 3f;

		[Token(Token = "0x4001D32")]
		private const float PettingTimeNeeded = 1f;

		[Token(Token = "0x4001D33")]
		private const int MinScaleValue = 10;

		[Token(Token = "0x4001D34")]
		private const int MaxGrowthLevel = 50;

		[Token(Token = "0x4001D35")]
		private const int TotalGrowthLevels = 40;

		[Token(Token = "0x4001D36")]
		private const float MinFeedTriggerSize = 0.05f;

		[Token(Token = "0x4001D37")]
		private const float MaxFeedTriggerSize = 0.14f;

		[Token(Token = "0x4001D38")]
		private const int WhaleApperanceInterval = 1;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WhaleEmoteController m_emoteController;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_heartParticles;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WhaleAnimation m_whaleAnimation;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SphereCollider m_feedTrigger;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FLookAnimator m_lookAtAnimator;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LookAtPlayer m_lookAtPlayer;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_shouldMoveInDistance;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve m_hungerCurve;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private SaveObjectBase m_saveObjectBase;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07B58", Offset = "0xA07B58")]
		private WhaleAudioController m_audioController;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_growthLevel;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int m_nextApperanceDay;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WhaleBehaviorState m_currentBehaviorState;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_randSwimmingDuration;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_swimingDuration;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isTurning;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool m_canBeFed;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CreatureInteractionEvent interactionEvent;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreatureFedEvent fedEvent;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_timeSpentBeingPetted;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_timeLeftDoingCurrentAction;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_initialized;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private WhaleAction m_currentAction;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WhaleAction m_nextAction;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private WhaleAction m_previousAction;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private WhaleAction m_specialActionOverride;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int m_currentHunger;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_currentHungerIncrement;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private bool m_hasGreetedPlayer;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC5")]
		private bool m_wantsToDive;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_diveDuration;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool m_shouldDisappear;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 m_directionToPlayer;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Scene m_scene;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_isCloseToPlayer;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine m_cleanupRoutine;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private YieldInstruction m_waitForFiveSeconds;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_canInteract;

		[Token(Token = "0x17000327")]
		public WhaleAction CurrentBehavior
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xD6703C", Offset = "0xD6703C", VA = "0xD6703C")]
			get
			{
				return default(WhaleAction);
			}
		}

		[Token(Token = "0x17000328")]
		public bool IsCloseToPlayer
		{
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xD6706C", Offset = "0xD6706C", VA = "0xD6706C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000329")]
		public bool IsShowing
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xD67074", Offset = "0xD67074", VA = "0xD67074")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xD67058", Offset = "0xD67058", VA = "0xD67058")]
		private bool HasSpecialActionOverride()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xD6707C", Offset = "0xD6707C", VA = "0xD6707C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xD67334", Offset = "0xD67334", VA = "0xD67334")]
		private void OnDiveAnimationExit(OnAnimationStateExitEvent e)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xD6733C", Offset = "0xD6733C", VA = "0xD6733C")]
		private void TryStopAnimationAndHide(bool forceStop = false)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xD673CC", Offset = "0xD673CC", VA = "0xD673CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xD6769C", Offset = "0xD6769C", VA = "0xD6769C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xD67760", Offset = "0xD67760", VA = "0xD67760", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xD67984", Offset = "0xD67984", VA = "0xD67984")]
		private bool TryMoveToPersistantScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xD67974", Offset = "0xD67974", VA = "0xD67974")]
		private void ResetWhaleActions()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xD67B18", Offset = "0xD67B18", VA = "0xD67B18")]
		private void WhaleLevelUp()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xD67CB0", Offset = "0xD67CB0", VA = "0xD67CB0")]
		public void StartApperance()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xD67900", Offset = "0xD67900", VA = "0xD67900")]
		private void SetNewApperanceByLevel()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xD68018", Offset = "0xD68018", VA = "0xD68018")]
		private void SetAudioParams(float growthLevel01)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xD68000", Offset = "0xD68000", VA = "0xD68000")]
		private void SetAnimationSpeed(float growthLevel01)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xD67F70", Offset = "0xD67F70", VA = "0xD67F70")]
		private void SetFLookDistance(float growthLevel01)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xD67E18", Offset = "0xD67E18", VA = "0xD67E18")]
		private void SetScale()
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xD67ED0", Offset = "0xD67ED0", VA = "0xD67ED0")]
		private void SetFeedTriggerSize(float growthLevel01)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xD67BF8", Offset = "0xD67BF8", VA = "0xD67BF8")]
		private void SetNewHungerLevel()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xD67EB8", Offset = "0xD67EB8", VA = "0xD67EB8")]
		public float GetGrowth01()
		{
			return default(float);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xD680C8", Offset = "0xD680C8", VA = "0xD680C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xD6829C", Offset = "0xD6829C", VA = "0xD6829C")]
		public void StartTryingToEatFromHand()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xD682B0", Offset = "0xD682B0", VA = "0xD682B0")]
		public void StopTryingToEatFromHand()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xD682F0", Offset = "0xD682F0", VA = "0xD682F0")]
		public void OnObjectReceived(PlayerHand hand, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xD685DC", Offset = "0xD685DC", VA = "0xD685DC")]
		public void OnPettingStart()
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xD6866C", Offset = "0xD6866C", VA = "0xD6866C")]
		public void OnPettingEnd()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xD68690", Offset = "0xD68690", VA = "0xD68690")]
		public void DiveBackIntoOcean()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xD68718", Offset = "0xD68718", VA = "0xD68718")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17990", Offset = "0xA17990")]
		private IEnumerator CleanUpAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xD673A4", Offset = "0xD673A4", VA = "0xD673A4")]
		public void HideWhale()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xD68100", Offset = "0xD68100", VA = "0xD68100")]
		private void SetDistanceBehavior()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xD687C0", Offset = "0xD687C0", VA = "0xD687C0")]
		public void SetBehaviorState(WhaleBehaviorState state)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xD67D48", Offset = "0xD67D48", VA = "0xD67D48")]
		private void ResetAllStateDurations()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xD67D50", Offset = "0xD67D50", VA = "0xD67D50")]
		private void ResetAllAnimParams()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xD68274", Offset = "0xD68274", VA = "0xD68274")]
		private void UpdateBehavior(float dt)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xD688B0", Offset = "0xD688B0", VA = "0xD688B0")]
		private void LongDistanceBehavior(float dt)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xD68A7C", Offset = "0xD68A7C", VA = "0xD68A7C")]
		private void MidDistanceBehavior(float dt)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xD68FF0", Offset = "0xD68FF0", VA = "0xD68FF0")]
		private void OnTurnComplete()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0xD68FAC", Offset = "0xD68FAC", VA = "0xD68FAC")]
		private void TryWaveToPlayer()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xD68D84", Offset = "0xD68D84", VA = "0xD68D84")]
		private void TryTurnTowardsPlayer()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xD68C58", Offset = "0xD68C58", VA = "0xD68C58")]
		private bool IsFacingPlayer()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xD69000", Offset = "0xD69000", VA = "0xD69000")]
		public Vector3 GetDirectionToPlayer()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xD68B08", Offset = "0xD68B08", VA = "0xD68B08")]
		private void ShortDistanceBehavior(float dt)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xD6910C", Offset = "0xD6910C", VA = "0xD6910C")]
		private void UpdatePlayerInteraction(float dt)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xD68C34", Offset = "0xD68C34", VA = "0xD68C34")]
		private void DoSpecialActionOverride(float dt)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xD6858C", Offset = "0xD6858C", VA = "0xD6858C")]
		private void TrySetFeedingTriggerActive(bool shouldBeActive)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xD69474", Offset = "0xD69474", VA = "0xD69474")]
		public void SetSpecialActionOverride(WhaleAction action)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xD682D0", Offset = "0xD682D0", VA = "0xD682D0")]
		public void ClearSpecialActionOverride(WhaleAction action)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xD67D38", Offset = "0xD67D38", VA = "0xD67D38")]
		public void ClearCurrentSpecialActionOverride()
		{
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xD68454", Offset = "0xD68454", VA = "0xD68454")]
		private void DoAction(WhaleAction action, float duration = -1f)
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xD693E8", Offset = "0xD693E8", VA = "0xD693E8")]
		private void UpdateAction(WhaleAction action, float dt)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xD694B8", Offset = "0xD694B8", VA = "0xD694B8")]
		public void SetNextApperanceDay(int nextWhaleAppearanceDay)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xD694C0", Offset = "0xD694C0", VA = "0xD694C0")]
		public Whale()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	public class WhaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x20004E0")]
		public enum WhaleAnim
		{
			[Token(Token = "0x4001D7D")]
			HoldingFood,
			[Token(Token = "0x4001D7E")]
			HappyReact,
			[Token(Token = "0x4001D7F")]
			Diving,
			[Token(Token = "0x4001D80")]
			Petting,
			[Token(Token = "0x4001D81")]
			Wave,
			[Token(Token = "0x4001D82")]
			Burp,
			[Token(Token = "0x4001D83")]
			Eating,
			[Token(Token = "0x4001D84")]
			SprayWater,
			[Token(Token = "0x4001D85")]
			None
		}

		[Token(Token = "0x20004E1")]
		public enum TriggerAnims
		{
			[Token(Token = "0x4001D87")]
			SprayWater = 7
		}

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int IdleStateNameHash;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int ResurfaceStateNameHash;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int HoldingFoodParam;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int HappyReactParam;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int DivingParam;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int PettingParam;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int WaveParam;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int BurpParam;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int EatingParam;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int IsCloseToPlayerParam;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int SprayWaterParam;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] animIds;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isCloseToPlayer;

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xD69680", Offset = "0xD69680", VA = "0xD69680")]
		private void PlayAnimation(WhaleAnim anim, bool resetOtherAnimations = true)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xD69738", Offset = "0xD69738", VA = "0xD69738")]
		private bool IsTriggerParam(WhaleAnim anim)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xD69A34", Offset = "0xD69A34", VA = "0xD69A34")]
		private bool IsTriggerParam(int animIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xD687EC", Offset = "0xD687EC", VA = "0xD687EC")]
		public void ResetParameters(WhaleAnim exclude = WhaleAnim.None)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xD68C4C", Offset = "0xD68C4C", VA = "0xD68C4C")]
		public void Dive()
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xD6947C", Offset = "0xD6947C", VA = "0xD6947C")]
		public void TryToEatFromHand()
		{
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xD69488", Offset = "0xD69488", VA = "0xD69488")]
		public void EatFromHand()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xD69494", Offset = "0xD69494", VA = "0xD69494")]
		public void Full()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xD694AC", Offset = "0xD694AC", VA = "0xD694AC")]
		public void Petted()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xD68FF4", Offset = "0xD68FF4", VA = "0xD68FF4")]
		public void WaveToPlayer()
		{
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xD694A0", Offset = "0xD694A0", VA = "0xD694A0")]
		public void HappyReaction()
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xD68B78", Offset = "0xD68B78", VA = "0xD68B78")]
		public void IsCloseToPlayer(bool isClose)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xD67D6C", Offset = "0xD67D6C", VA = "0xD67D6C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xD67384", Offset = "0xD67384", VA = "0xD67384")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xD68034", Offset = "0xD68034", VA = "0xD68034")]
		public void SetAnimationSpeed(float growthLevel01)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xD69D30", Offset = "0xD69D30", VA = "0xD69D30")]
		public WhaleAnimation()
		{
		}
	}
	[Token(Token = "0x20004E2")]
	public class WhaleAudioController : MonoBehaviour
	{
		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SizeParamId;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07BB4", Offset = "0xA07BB4")]
		[SerializeField]
		private NeatAudioPlayer m_loopingAudio;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NeatAudioPlayer m_longRangeAudio;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NeatAudioPlayer m_midRangeAudio;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NeatAudioPlayer m_shortRangeAudio;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NeatAudioPlayer m_mouthAudio;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07C40", Offset = "0xA07C40")]
		private NeatAudioCue m_burpCue;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioCue m_diveCue;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioCue m_eatCue;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioCue m_happyReactCue;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioCue m_inhaleCue;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_openMouthCue;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioCue m_pettingCue;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NeatAudioCue m_reactToPlayerCue;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioCue m_resurfaceCue;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioCue m_ringsCue;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue m_whaleSongCue;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NeatAudioCue m_splashCue;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NeatAudioCue m_sprayWaterCue;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_sizeLevel01;

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xD6A044", Offset = "0xD6A044", VA = "0xD6A044")]
		public void SetParam(float param01)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xD6A04C", Offset = "0xD6A04C", VA = "0xD6A04C")]
		private void AssignAndPlayCue(NeatAudioPlayer player, NeatAudioCue cue)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xD6A0F8", Offset = "0xD6A0F8", VA = "0xD6A0F8")]
		public void Burp()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xD6A100", Offset = "0xD6A100", VA = "0xD6A100")]
		public void Dive()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xD6A10C", Offset = "0xD6A10C", VA = "0xD6A10C")]
		public void Eat()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xD6A118", Offset = "0xD6A118", VA = "0xD6A118")]
		public void HappyReaction()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xD6A124", Offset = "0xD6A124", VA = "0xD6A124")]
		public void Inhale()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xD6A130", Offset = "0xD6A130", VA = "0xD6A130")]
		public void OpenMouth()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xD6A13C", Offset = "0xD6A13C", VA = "0xD6A13C")]
		public void Petting()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xD6A148", Offset = "0xD6A148", VA = "0xD6A148")]
		public void ReactToPlayerInDistance()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xD6A154", Offset = "0xD6A154", VA = "0xD6A154")]
		public void Resurface()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xD6A160", Offset = "0xD6A160", VA = "0xD6A160")]
		public void Rings()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xD6A16C", Offset = "0xD6A16C", VA = "0xD6A16C")]
		public void Song()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xD6A178", Offset = "0xD6A178", VA = "0xD6A178")]
		public void Splash()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xD6A184", Offset = "0xD6A184", VA = "0xD6A184")]
		public void Spray()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xD6A190", Offset = "0xD6A190", VA = "0xD6A190")]
		public void SetLoopingWaves(int shouldPlay)
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xD6A254", Offset = "0xD6A254", VA = "0xD6A254")]
		public WhaleAudioController()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public enum WhaleBehaviorState
	{
		[Token(Token = "0x4001D9D")]
		LongDistance,
		[Token(Token = "0x4001D9E")]
		MidDistance,
		[Token(Token = "0x4001D9F")]
		ShortDistance
	}
	[Token(Token = "0x20004E4")]
	public class WhaleEffectController : MonoBehaviour
	{
		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07D4C", Offset = "0xA07D4C")]
		[SerializeField]
		private ParticleSystem m_surfacedParticleSystem;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_splashParticleSystem;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_sprayParticleSystem;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_ringsParticleSystem;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07DC8", Offset = "0xA07DC8")]
		private WhaleAudioController m_whaleAudioController;

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xD6A2C0", Offset = "0xD6A2C0", VA = "0xD6A2C0")]
		public void Spray()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xD6A348", Offset = "0xD6A348", VA = "0xD6A348")]
		public void Splash()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xD6A350", Offset = "0xD6A350", VA = "0xD6A350")]
		public void Rings()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xD6A358", Offset = "0xD6A358", VA = "0xD6A358")]
		public void Surfaced(int b)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xD6A2C8", Offset = "0xD6A2C8", VA = "0xD6A2C8")]
		private void PlayParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xD6A374", Offset = "0xD6A374", VA = "0xD6A374")]
		private void StopParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xD6A3CC", Offset = "0xD6A3CC", VA = "0xD6A3CC")]
		public WhaleEffectController()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public class WhaleEmoteController : MonoBehaviour
	{
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCDBC", Offset = "0x9FCDBC")]
		private sealed class <ShowEmoteForDuration>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WhaleEmoteController <>4__this;

			[Token(Token = "0x1700032E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7C")]
				[Address(RVA = "0xD6A954", Offset = "0xD6A954", VA = "0xD6A954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7E")]
				[Address(RVA = "0xD6A9BC", Offset = "0xD6A9BC", VA = "0xD6A9BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xD6A744", Offset = "0xD6A744", VA = "0xD6A744")]
			[DebuggerHidden]
			public <ShowEmoteForDuration>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xD6A830", Offset = "0xD6A830", VA = "0xD6A830", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0xD6A834", Offset = "0xD6A834", VA = "0xD6A834", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0xD6A95C", Offset = "0xD6A95C", VA = "0xD6A95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DA5")]
		private const float ScaleDuration = 0.3f;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private WhaleEmoteDictionary m_emotes;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteRenderer m_spriteRenderer;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_showForDurationRoutine;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WhaleEmoteType m_currentEmoteType;

		[Token(Token = "0x1700032C")]
		public WhaleEmoteType CurrentEmoteType
		{
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0xD6A3D4", Offset = "0xD6A3D4", VA = "0xD6A3D4")]
			get
			{
				return default(WhaleEmoteType);
			}
		}

		[Token(Token = "0x1700032D")]
		public bool IsActive
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xD6A3DC", Offset = "0xD6A3DC", VA = "0xD6A3DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xD6A400", Offset = "0xD6A400", VA = "0xD6A400")]
		public void SetActive(bool shouldShow)
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xD6A434", Offset = "0xD6A434", VA = "0xD6A434")]
		public void ShowEmote(WhaleEmoteType type)
		{
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xD6A64C", Offset = "0xD6A64C", VA = "0xD6A64C")]
		public void ShowEmoteForDuration(WhaleEmoteType type, float duration)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xD6A6B8", Offset = "0xD6A6B8", VA = "0xD6A6B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17A44", Offset = "0xA17A44")]
		private IEnumerator ShowEmoteForDuration(float duration)
		{
			return null;
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xD6A4DC", Offset = "0xD6A4DC", VA = "0xD6A4DC")]
		private void ScaleBubble(bool shouldShow)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xD6A770", Offset = "0xD6A770", VA = "0xD6A770")]
		public WhaleEmoteController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E7")]
	public class WhaleEmoteDictionary : SerializableDictionary<WhaleEmoteType, Sprite>
	{
		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xD6A7E0", Offset = "0xD6A7E0", VA = "0xD6A7E0")]
		public WhaleEmoteDictionary()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	public enum WhaleEmoteType
	{
		[Token(Token = "0x4001DAF")]
		Undefined,
		[Token(Token = "0x4001DB0")]
		Ocean,
		[Token(Token = "0x4001DB1")]
		Heart
	}
	[Token(Token = "0x20004E9")]
	public class WhaleFish : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001DB2")]
		private const float MaxScale = 2.5f;

		[Token(Token = "0x4001DB3")]
		private const float GrowthDurationinGameMinutes = 2880f;

		[Token(Token = "0x4001DB4")]
		private const float GrowthFractionPerRealTimeSecond = 0.00034722223f;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WhaleEmoteController m_emoteController;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Fish m_fishComponent;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_startGrowingTimestamp;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_currentScaleValue;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_updateDelta;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_pondInitTimes;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_needsPondInitialization;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_hasInitializedInPond;

		[Token(Token = "0x17000330")]
		public bool IsFullyGrown
		{
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0xD6A9C4", Offset = "0xD6A9C4", VA = "0xD6A9C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xD6A9D8", Offset = "0xD6A9D8", VA = "0xD6A9D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xD6AAA8", Offset = "0xD6AAA8", VA = "0xD6AAA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xD6AB78", Offset = "0xD6AB78", VA = "0xD6AB78")]
		private void OnDropped(Grabbable obj)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xD6AC28", Offset = "0xD6AC28", VA = "0xD6AC28", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xD6ACCC", Offset = "0xD6ACCC", VA = "0xD6ACCC", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xD6ADCC", Offset = "0xD6ADCC", VA = "0xD6ADCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xD6ADBC", Offset = "0xD6ADBC", VA = "0xD6ADBC")]
		private void ResetPondInitialization()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xD6AEC0", Offset = "0xD6AEC0", VA = "0xD6AEC0")]
		private void CheckPondInitialization()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xD6AFC8", Offset = "0xD6AFC8", VA = "0xD6AFC8")]
		private void SetGrowthInPondWhileAway()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xD6AF1C", Offset = "0xD6AF1C", VA = "0xD6AF1C")]
		private void TryUpdateScaleValue()
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xD6B0B8", Offset = "0xD6B0B8", VA = "0xD6B0B8")]
		private void TryShowOceanEmote()
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xD6AB80", Offset = "0xD6AB80", VA = "0xD6AB80")]
		private void UpdateScale(float newScale)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xD6B0E4", Offset = "0xD6B0E4", VA = "0xD6B0E4")]
		private void OnReleasedInOcean()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xD6B184", Offset = "0xD6B184", VA = "0xD6B184")]
		public WhaleFish()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class WhaleFishState : ComponentState
	{
		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int StartGrowingTimeStamp;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Scale;

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xD6AC90", Offset = "0xD6AC90", VA = "0xD6AC90")]
		public WhaleFishState(int startGrowingTimeStamp, float currentScale)
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class WhaleReleasedEvent : GameEvent
	{
		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xD6B17C", Offset = "0xD6B17C", VA = "0xD6B17C")]
		public WhaleReleasedEvent()
		{
		}
	}
	[Token(Token = "0x20004EC")]
	public class WhaleState : ComponentState
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Level;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int NextApperanceDay;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int CurrentHunger;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HungerIncrement;

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xD67710", Offset = "0xD67710", VA = "0xD67710")]
		public WhaleState(int level, int nextApperanceDay, int currentHunger, float hungerIncrement)
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class FollowerEffectController : MonoBehaviour
	{
		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem m_rightCowFrontSplash;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_rightCowBackSplash;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_leftCowFrontSplash;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem m_leftCowBackSplash;

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xD66F68", Offset = "0xD66F68", VA = "0xD66F68")]
		public void RightCowFrontSplash()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xD66FF0", Offset = "0xD66FF0", VA = "0xD66FF0")]
		public void RightCowBackSplash()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xD66FF8", Offset = "0xD66FF8", VA = "0xD66FF8")]
		public void LeftCowFrontSplash()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xD67000", Offset = "0xD67000", VA = "0xD67000")]
		public void LeftCowBackSplash()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xD66F70", Offset = "0xD66F70", VA = "0xD66F70")]
		private void PlayParticleSystem(ParticleSystem particleSystem)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xD67008", Offset = "0xD67008", VA = "0xD67008")]
		public FollowerEffectController()
		{
		}
	}
}
namespace NeatCorp.Creatures.Serialization
{
	[Token(Token = "0x20004EE")]
	public class BarnQuestSave : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_intactBarnObject;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_brokenBarnObject;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isInitialized;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isCompleted;

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xD66CB8", Offset = "0xD66CB8", VA = "0xD66CB8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xD66D50", Offset = "0xD66D50", VA = "0xD66D50", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xD66E34", Offset = "0xD66E34", VA = "0xD66E34")]
		public void BuildBarn()
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xD66DF0", Offset = "0xD66DF0", VA = "0xD66DF0")]
		public void SetBarnActive()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xD66E40", Offset = "0xD66E40", VA = "0xD66E40")]
		public BarnQuestSave()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004EF")]
	public class BarnQuestState : ComponentState
	{
		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsCompleted;

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xD66D20", Offset = "0xD66D20", VA = "0xD66D20")]
		public BarnQuestState(bool isCompleted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F0")]
	public class BreedableCreatureState : CreatureState
	{
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint Seed;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Age;

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xD66E48", Offset = "0xD66E48", VA = "0xD66E48")]
		public BreedableCreatureState(uint seed, CreatureType creatureType, float age)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F1")]
	public class CreatureState : ComponentState
	{
		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xD607B8", Offset = "0xD607B8", VA = "0xD607B8")]
		public CreatureState()
		{
		}
	}
}
namespace NeatCorp.Creatures.Potpots
{
	[Serializable]
	[Token(Token = "0x20004F2")]
	public struct PotpotData
	{
		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PotpotType Type;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject Prefab;
	}
	[Token(Token = "0x20004F3")]
	public class PotpotReplacer : MonoBehaviour
	{
		[Token(Token = "0x4001DD2")]
		private const string UNDO_STR_SWAP_WITH_PREFAB = "swap potpot type";

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_potpot;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PotpotType m_type;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PotpotVariants m_variants;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PotpotAnimationController m_animations;

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xD66C14", Offset = "0xD66C14", VA = "0xD66C14")]
		public PotpotReplacer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F4")]
	public enum PotpotType
	{
		[Token(Token = "0x4001DD8")]
		Flippy,
		[Token(Token = "0x4001DD9")]
		Linnea,
		[Token(Token = "0x4001DDA")]
		Leo
	}
	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCDCC", Offset = "0x9FCDCC")]
	public class PotpotVariants : ScriptableObject
	{
		[Token(Token = "0x4001DDB")]
		public const string DefaultLocation = "Assets/Data/Potpots/Potpot Variants.asset";

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PotpotData[] m_variants;

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xD66C1C", Offset = "0xD66C1C", VA = "0xD66C1C")]
		public bool TryGetAssetOfType(PotpotType type, out GameObject match)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xD66CB0", Offset = "0xD66CB0", VA = "0xD66CB0")]
		public PotpotVariants()
		{
		}
	}
}
namespace NeatCorp.Creatures.Edibles
{
	[Token(Token = "0x20004F6")]
	public class CookedDish : Edible
	{
		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xD653BC", Offset = "0xD653BC", VA = "0xD653BC")]
		public CookedDish()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class Edible
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Edible CookedDish;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Edible Veggie;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Edible Fruit;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Edible[] All;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<CraftingSystem.ResourceType> ResourceTypes;

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xD654E8", Offset = "0xD654E8", VA = "0xD654E8")]
		public bool Contains(CraftingSystem.ResourceType resourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xD65590", Offset = "0xD65590", VA = "0xD65590")]
		public static bool FoundInEdibleTypes(CraftingSystem.ResourceType resourceType, Edible[] edibleTypes)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xD654E0", Offset = "0xD654E0", VA = "0xD654E0")]
		public Edible()
		{
		}
	}
	[Token(Token = "0x20004F8")]
	public class Fruit : Edible
	{
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xD65940", Offset = "0xD65940", VA = "0xD65940")]
		public Fruit()
		{
		}
	}
	[Token(Token = "0x20004F9")]
	public class Veggie : Edible
	{
		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xD657EC", Offset = "0xD657EC", VA = "0xD657EC")]
		public Veggie()
		{
		}
	}
}
namespace NeatCorp.Creatures.Gifting
{
	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCE38", Offset = "0x9FCE38")]
	public class CreatureBreedingItemsRequestAsset : CreatureRequestAsset
	{
		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xD66348", Offset = "0xD66348", VA = "0xD66348")]
		public CreatureBreedingItemsRequestAsset()
		{
		}
	}
	[Token(Token = "0x20004FB")]
	public class CreatureGiftSystem : ScriptableObject
	{
		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CreatureItemRequestAsset> CreatureRequestAssets;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<CreatureRewardAsset> CreatureRewardAssets;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA07F24", Offset = "0xA07F24")]
		private CreatureBreedingItemsRequestAsset ManateeCowBreedingItems;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CreatureBreedingItemsRequestAsset PuffkinBreedingItems;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CreatureBreedingItemsRequestAsset MoleSealBreedingItems;

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xD66358", Offset = "0xD66358", VA = "0xD66358")]
		public CreatureNestRequest GetCreatureNestItemRequest(CreatureType creatureType)
		{
			return null;
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xD663AC", Offset = "0xD663AC", VA = "0xD663AC")]
		public CreatureBarnSpotRequest GetCreatureBarnSpotRequest(CreatureType creatureType)
		{
			return null;
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xD66400", Offset = "0xD66400", VA = "0xD66400")]
		public CreatureItemRequest GetRandomCreatureRequest(CreatureType creatureType, uint minTamenessLevel = 0u, uint maxTamenessLevel = 0u)
		{
			return null;
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xD66658", Offset = "0xD66658", VA = "0xD66658")]
		public CreatureReward GetRandomCreatureRewardByProbability(CreatureType creatureType, GrowthStateType growthStateType)
		{
			return default(CreatureReward);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xD66474", Offset = "0xD66474", VA = "0xD66474")]
		public CreatureItemRequest GetCreatureRequestFromSeed(uint seed, CreatureType creatureType, uint minTamenessLevel = 0u, uint maxTamenessLevel = 0u)
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xD666BC", Offset = "0xD666BC", VA = "0xD666BC")]
		public CreatureReward GetCreatureRewardFromSeed(uint seed, CreatureType creatureType, GrowthStateType growthStateType)
		{
			return default(CreatureReward);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xD66984", Offset = "0xD66984", VA = "0xD66984")]
		private int[] GetIndexCollection(int index, uint count)
		{
			return null;
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xD66A2C", Offset = "0xD66A2C", VA = "0xD66A2C")]
		public CreatureGiftSystem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FC")]
	public class CreatureItemRequest : CreatureRequest
	{
		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07F90", Offset = "0xA07F90")]
		public uint RequieredTamenessLevel;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07FA8", Offset = "0xA07FA8")]
		public float TamenessIncrement;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA07FC0", Offset = "0xA07FC0")]
		private uint <Seed>k__BackingField;

		[Token(Token = "0x17000331")]
		public uint Seed
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xD66AE4", Offset = "0xD66AE4", VA = "0xD66AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17AF8", Offset = "0xA17AF8")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xD66AEC", Offset = "0xD66AEC", VA = "0xD66AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17B08", Offset = "0xA17B08")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCEA4", Offset = "0x9FCEA4")]
	public class CreatureItemRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureItemRequest Request;

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xD66AF4", Offset = "0xD66AF4", VA = "0xD66AF4")]
		public CreatureItemRequestAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004FE")]
	public class CreatureRequest
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreatureTypeFlag CreatureTypes;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite Sprite;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CraftingSystem.ResourceTypeEnum ResourceType;
	}
	[Serializable]
	[Token(Token = "0x20004FF")]
	public class CreatureNestRequest : CreatureRequest
	{
	}
	[Serializable]
	[Token(Token = "0x2000500")]
	public class CreatureBarnSpotRequest : CreatureRequest
	{
	}
	[Token(Token = "0x2000501")]
	public class CreatureRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureNestRequest NestRequestAsset;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreatureBarnSpotRequest BarnSpotRequestAsset;

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xD66350", Offset = "0xD66350", VA = "0xD66350")]
		public CreatureRequestAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000502")]
	public struct CreatureReward
	{
		[Token(Token = "0x4001DF0")]
		private const uint DefaultProbability = 10u;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreatureTypeFlag CreatureType;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public GrowthStateTypeFlag GrowthStateType;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AssetReference RewardAsset;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA07FD0", Offset = "0xA07FD0")]
		public uint Probability;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA07FEC", Offset = "0xA07FEC")]
		private uint <Seed>k__BackingField;

		[Token(Token = "0x17000332")]
		public uint Seed
		{
			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xAD7238", Offset = "0xAD7238", VA = "0xAD7238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17B18", Offset = "0xA17B18")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xAD7240", Offset = "0xAD7240", VA = "0xAD7240")]
		public CreatureReward(CreatureTypeFlag creatureType, GrowthStateTypeFlag growthStateType, AssetReference rewardAsset, uint probability)
		{
		}
	}
	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCF10", Offset = "0x9FCF10")]
	public class CreatureRewardAsset : ScriptableObject
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureReward Reward;

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xD66BAC", Offset = "0xD66BAC", VA = "0xD66BAC")]
		public CreatureRewardAsset()
		{
		}
	}
}
namespace NeatCorp.Creatures.Breeding
{
	[Token(Token = "0x2000504")]
	public class BreedableCreature : CreatureBase
	{
		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GradientColorer gradientColorer;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PatternController m_patternController;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SkinnedMeshRenderer m_skinnedMeshRenderer;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0802C", Offset = "0xA0802C")]
		[SerializeField]
		private Transform m_body;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_head;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_leftEye;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_rightEye;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BreedVariation m_breedVariation;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CreatureGrowthData m_growthData;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool m_hasGrowthData;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool m_hasInitializedBreedProperties;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_age;

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x110DDC0", Offset = "0x110DDC0", VA = "0x110DDC0", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x110DE48", Offset = "0x110DE48", VA = "0x110DE48", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x110E028", Offset = "0x110E028", VA = "0x110E028", Slot = "7")]
		protected virtual void TrySetStateProperties()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x110E274", Offset = "0x110E274", VA = "0x110E274")]
		public void SetSpawnedBreedProperties(BreedVariation breedVariation, bool spawnFullyGrown)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x110DF84", Offset = "0x110DF84", VA = "0x110DF84")]
		private void TryInitializeBreedProperties(BreedVariation breedVariation)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x110E1A0", Offset = "0x110E1A0", VA = "0x110E1A0")]
		private void SetGrowthData(float age, bool startAtMatureAge = false)
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x110E964", Offset = "0x110E964", VA = "0x110E964")]
		public GrowthStateType UpdateGrowth(float deltaTime, out float updatedScale)
		{
			return default(GrowthStateType);
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x110E704", Offset = "0x110E704", VA = "0x110E704")]
		private float SetGrowth(CreatureGrowthData growthData, float age = 0f)
		{
			return default(float);
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x110E2F0", Offset = "0x110E2F0", VA = "0x110E2F0")]
		protected void TrySetCreaturePattern(BreedVariation currentBreedVariation)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x110E478", Offset = "0x110E478", VA = "0x110E478")]
		protected void TrySetCreatureColors(BreedVariation currentBreedVariation)
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x110E5F8", Offset = "0x110E5F8", VA = "0x110E5F8")]
		private void TrySetExpressionTexture(BreedVariation currentBreedVariation)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x110E9D0", Offset = "0x110E9D0", VA = "0x110E9D0")]
		public PlantColors GetCurrentColors()
		{
			return default(PlantColors);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x110EA84", Offset = "0x110EA84", VA = "0x110EA84")]
		public BreedableCreature()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class BreedingManager : MonoBehaviour
	{
		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BreedingVariationManager m_breedingVariationManager;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_spawnLocation;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_useRandomSpawnOffset;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA080D8", Offset = "0xA080D8")]
		private AssetReference PuffkinAsset;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference ManateeCowAsset;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference MolesealAsset;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08144", Offset = "0xA08144")]
		private AssetReference PuffkinEggAsset;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AssetReference ManateeCowEggAsset;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AssetReference MolesealEggAsset;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BreedingManager sm_instance;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BreedVariation m_currentBreedVariation;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NavMeshAgent m_currentNavMeshAgent;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_spawnAsVisitor;

		[Token(Token = "0x17000333")]
		public Transform SpawnLocation
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x110EA8C", Offset = "0x110EA8C", VA = "0x110EA8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x110EA94", Offset = "0x110EA94", VA = "0x110EA94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x110EAEC", Offset = "0x110EAEC", VA = "0x110EAEC")]
		public static void SpawnBreedOfType(CreatureType creatureType, Transform spawnLocation, [Optional] Action<SpawnOperationCallbackData> OnCreatureSpawnedCallback, bool isDomestic = true)
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x110E110", Offset = "0x110E110", VA = "0x110E110")]
		public static BreedVariation GetCreatureVariationFromSeed(CreatureType cretureType, uint seed, bool isDomestic = true)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x110E8F8", Offset = "0x110E8F8", VA = "0x110E8F8")]
		public static CreatureGrowthData GetCreatureGrowthData(CreatureType creatureType)
		{
			return null;
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x110F2A0", Offset = "0x110F2A0", VA = "0x110F2A0")]
		public static void SpawnEggOfType(CreatureType cretureType, OrientedPoint spawnLocation, [Optional] Action<SpawnOperationCallbackData> OnEggSpawnedCallback)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x110F3D8", Offset = "0x110F3D8", VA = "0x110F3D8")]
		private void OnCreaturePreInitCallback(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x110F5C4", Offset = "0x110F5C4", VA = "0x110F5C4")]
		public BreedingManager()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class Egg : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000507")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FCF7C", Offset = "0x9FCF7C")]
		private sealed class <RemoveAfterDelay>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Egg <>4__this;

			[Token(Token = "0x17000334")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDC")]
				[Address(RVA = "0xD5FBEC", Offset = "0xD5FBEC", VA = "0xD5FBEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000335")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDE")]
				[Address(RVA = "0xD5FC54", Offset = "0xD5FC54", VA = "0xD5FC54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xD5FAAC", Offset = "0xD5FAAC", VA = "0xD5FAAC")]
			[DebuggerHidden]
			public <RemoveAfterDelay>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xD5FAD8", Offset = "0xD5FAD8", VA = "0xD5FAD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xD5FADC", Offset = "0xD5FADC", VA = "0xD5FADC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xD5FBF4", Offset = "0xD5FBF4", VA = "0xD5FBF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int DELAY_BEFORE_HATCHING;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float DELAY_BEFORE_REMOVAL;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CreatureType creatureType;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject wholeEgg;

		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject eggTop;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject eggBottom;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NeatAudioPlayer audioPlayer;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NeatAudioCue eggSpawnedSound;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioCue eggHatchedSound;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timeUntilHatching;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float timeUntilRemoval;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool didHatch;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool initialized;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int creationTimestamp;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool didSignUpForCallback;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action<SpawnOperationCallbackData> CreatureSpawnedCallback;

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x110F7C4", Offset = "0x110F7C4", VA = "0x110F7C4")]
		public void RequestCallbackOnHatch(Action<SpawnOperationCallbackData> callback)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x110F7CC", Offset = "0x110F7CC", VA = "0x110F7CC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0x110F910", Offset = "0x110F910", VA = "0x110F910", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x110FD1C", Offset = "0x110FD1C", VA = "0x110FD1C")]
		public void OnEggReadyToHatch()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x110FCA0", Offset = "0x110FCA0", VA = "0x110FCA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17B28", Offset = "0xA17B28")]
		private IEnumerator RemoveAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x110FB14", Offset = "0x110FB14", VA = "0x110FB14")]
		private void Hatch(bool onlyShowEggPieces = false)
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x110FE08", Offset = "0x110FE08", VA = "0x110FE08")]
		public void PlayEggSpawnedEffect()
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x110FEE4", Offset = "0x110FEE4", VA = "0x110FEE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x110FFB0", Offset = "0x110FFB0", VA = "0x110FFB0")]
		public Egg()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000508")]
	public class EggState : ComponentState
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeUntilHatching;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeUntilRemoval;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool DidHatch;

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xD5FC5C", Offset = "0xD5FC5C", VA = "0xD5FC5C")]
		public EggState(CreatureType creatureType, float timeUntilHatching, float timeUntilRemoval, bool didHatch)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000509")]
	public struct BreedVariation
	{
		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CreaturePattern Pattern;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreatureColors Colors;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExpressionSet EyeExpressions;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float VoicePitch;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA08220", Offset = "0xA08220")]
		private uint <Seed>k__BackingField;

		[Token(Token = "0x17000336")]
		public uint Seed
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xAE6DA4", Offset = "0xAE6DA4", VA = "0xAE6DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17BDC", Offset = "0xA17BDC")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xAE6DAC", Offset = "0xAE6DAC", VA = "0xAE6DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17BEC", Offset = "0xA17BEC")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xAE6DB4", Offset = "0xAE6DB4", VA = "0xAE6DB4")]
		public BreedVariation(uint seed, CreatureType creatureType, CreaturePattern creaturePattern, CreatureColors colors, ExpressionSet eyeExpressions, float pitch)
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class BreedingVariationManager : ScriptableObject
	{
		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08230", Offset = "0xA08230")]
		private PuffkinBreedData DomesticPuffkinVariations;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PuffkinBreedData WildPuffkinVariations;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0828C", Offset = "0xA0828C")]
		[SerializeField]
		private ManateeCowBreedData DomesticManateeCowVariations;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ManateeCowBreedData WildManateeCowVariations;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA082E8", Offset = "0xA082E8")]
		[SerializeField]
		private MolesealBreedData DomesticMolesealVariations;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private MolesealBreedData WildMolesealVariations;

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x110EF30", Offset = "0x110EF30", VA = "0x110EF30")]
		public BreedVariation GenerateNewBreedVariation(CreatureType creatureType, bool isDomestic = true)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x110F074", Offset = "0x110F074", VA = "0x110F074")]
		public BreedVariation GenerateBreedVariationFromSeed(CreatureType creatureType, uint seed, bool isDomestic = true)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x110F19C", Offset = "0x110F19C", VA = "0x110F19C")]
		public CreatureGrowthData GetCreatureGrowthData(CreatureType creatureType, bool isDomestic = true)
		{
			return null;
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x110F5D4", Offset = "0x110F5D4", VA = "0x110F5D4")]
		private CreatureBreedData GetCreatureBreedData(CreatureType creatureType, bool isDomestic = true)
		{
			return null;
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x110F630", Offset = "0x110F630", VA = "0x110F630")]
		public BreedingVariationManager()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public abstract class CreatureBreedData : ScriptableObject
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureType CreatureType;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool IsDomestic;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08344", Offset = "0xA08344")]
		public List<EyeExpressionSet> EyeExpressions;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0837C", Offset = "0xA0837C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0837C", Offset = "0xA0837C")]
		public float DownPitchRange;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA083D4", Offset = "0xA083D4")]
		public float UpPitchRange;

		[Token(Token = "0x6001EE8")]
		public abstract BreedVariation GetSeedVariation(uint seed);

		[Token(Token = "0x6001EE9")]
		public abstract CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand);

		[Token(Token = "0x6001EEA")]
		public abstract CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand);

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x110F660", Offset = "0x110F660", VA = "0x110F660")]
		public ExpressionSet GetRandomEyes(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x110F6FC", Offset = "0x110F6FC", VA = "0x110F6FC")]
		public float GetRandomPitch(ref Unity.Mathematics.Random rand)
		{
			return default(float);
		}

		[Token(Token = "0x6001EED")]
		public abstract CreatureGrowthData GetGrowthData();

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x110F744", Offset = "0x110F744", VA = "0x110F744")]
		protected CreatureBreedData()
		{
		}
	}
	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCF8C", Offset = "0x9FCF8C")]
	public class ManateeCowBreedData : CreatureBreedData
	{
		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA083F0", Offset = "0xA083F0")]
		public List<ManateeCowPattern> Patterns;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<ManateeCowColorSet> ColorVariations;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08428", Offset = "0xA08428")]
		public ManateeCowGrowthData GrowthData;

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xD5FE34", Offset = "0xD5FE34", VA = "0xD5FE34")]
		public ManateeCowBreedData()
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xD5FEF8", Offset = "0xD5FEF8", VA = "0xD5FEF8", Slot = "4")]
		public override BreedVariation GetSeedVariation(uint seed)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xD5FFC0", Offset = "0xD5FFC0", VA = "0xD5FFC0", Slot = "5")]
		public override CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xD6005C", Offset = "0xD6005C", VA = "0xD6005C", Slot = "6")]
		public override CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xD60100", Offset = "0xD60100", VA = "0xD60100", Slot = "7")]
		public override CreatureGrowthData GetGrowthData()
		{
			return null;
		}
	}
	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FCFF8", Offset = "0x9FCFF8")]
	public class MolesealBreedData : CreatureBreedData
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08460", Offset = "0xA08460")]
		public List<MolesealPattern> Patterns;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<MolesealColorSet> ColorVariations;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08498", Offset = "0xA08498")]
		public MolesealGrowthData GrowthData;

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xD60108", Offset = "0xD60108", VA = "0xD60108")]
		public MolesealBreedData()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xD601CC", Offset = "0xD601CC", VA = "0xD601CC", Slot = "4")]
		public override BreedVariation GetSeedVariation(uint seed)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xD60294", Offset = "0xD60294", VA = "0xD60294", Slot = "5")]
		public override CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xD60330", Offset = "0xD60330", VA = "0xD60330", Slot = "6")]
		public override CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xD603D4", Offset = "0xD603D4", VA = "0xD603D4", Slot = "7")]
		public override CreatureGrowthData GetGrowthData()
		{
			return null;
		}
	}
	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD064", Offset = "0x9FD064")]
	public class PuffkinBreedData : CreatureBreedData
	{
		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA084D0", Offset = "0xA084D0")]
		public List<PuffkinPattern> Patterns;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PuffkinColorSet> ColorVariations;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08508", Offset = "0xA08508")]
		public PuffkinGrowthData GrowthData;

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xD60488", Offset = "0xD60488", VA = "0xD60488")]
		public PuffkinBreedData()
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xD6054C", Offset = "0xD6054C", VA = "0xD6054C", Slot = "4")]
		public override BreedVariation GetSeedVariation(uint seed)
		{
			return default(BreedVariation);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xD60614", Offset = "0xD60614", VA = "0xD60614", Slot = "5")]
		public override CreaturePattern GetRandomPattern(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xD606B0", Offset = "0xD606B0", VA = "0xD606B0", Slot = "6")]
		public override CreatureColors GetRandomColor(ref Unity.Mathematics.Random rand)
		{
			return null;
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xD60754", Offset = "0xD60754", VA = "0xD60754", Slot = "7")]
		public override CreatureGrowthData GetGrowthData()
		{
			return null;
		}
	}
}
namespace NeatCorp.Creatures.Breeding.Pattern
{
	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD0D0", Offset = "0x9FD0D0")]
	public class ManateeCowPattern : CreaturePattern
	{
		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xD60458", Offset = "0xD60458", VA = "0xD60458")]
		public ManateeCowPattern()
		{
		}
	}
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD13C", Offset = "0x9FD13C")]
	public class MolesealPattern : CreaturePattern
	{
		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xD6045C", Offset = "0xD6045C", VA = "0xD6045C")]
		public MolesealPattern()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class CreaturePattern : ScriptableObject
	{
		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsDomestic;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 UV;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Strength;

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xD603DC", Offset = "0xD603DC", VA = "0xD603DC")]
		public CreaturePattern()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class PatternController : MonoBehaviour
	{
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GradientColorer m_gradientColorer;

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xD60460", Offset = "0xD60460", VA = "0xD60460")]
		public void SetPattern(CreaturePattern pattern, [Optional] Color color)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xD6047C", Offset = "0xD6047C", VA = "0xD6047C")]
		public PatternController()
		{
		}
	}
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD1A8", Offset = "0x9FD1A8")]
	public class PuffkinPattern : CreaturePattern
	{
		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xD60484", Offset = "0xD60484", VA = "0xD60484")]
		public PuffkinPattern()
		{
		}
	}
}
namespace NeatCorp.Creatures.Breeding.Expression
{
	[Token(Token = "0x2000514")]
	public enum AesteticsType
	{
		[Token(Token = "0x4001E46")]
		Eyes,
		[Token(Token = "0x4001E47")]
		Mouth,
		[Token(Token = "0x4001E48")]
		Forehead
	}
	[Token(Token = "0x2000515")]
	public class ExpressionSet : ScriptableObject
	{
		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CreatureTypeFlag CreatureTypes;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D Texture;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA08550", Offset = "0xA08550")]
		private AesteticsType <AesteticsType>k__BackingField;

		[Token(Token = "0x17000337")]
		public AesteticsType AesteticsType
		{
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0xD5FCB0", Offset = "0xD5FCB0", VA = "0xD5FCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17BFC", Offset = "0xA17BFC")]
			get
			{
				return default(AesteticsType);
			}
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0xD5FCB8", Offset = "0xD5FCB8", VA = "0xD5FCB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17C0C", Offset = "0xA17C0C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xD5FCC0", Offset = "0xD5FCC0", VA = "0xD5FCC0")]
		public ExpressionSet()
		{
		}
	}
	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD214", Offset = "0x9FD214")]
	public class EyeExpressionSet : ExpressionSet
	{
		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xD5FCC8", Offset = "0xD5FCC8", VA = "0xD5FCC8")]
		public EyeExpressionSet()
		{
		}
	}
	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD280", Offset = "0x9FD280")]
	public class ForeheadExpressionSet : ExpressionSet
	{
		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xD5FCF0", Offset = "0xD5FCF0", VA = "0xD5FCF0")]
		public ForeheadExpressionSet()
		{
		}
	}
	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD2EC", Offset = "0x9FD2EC")]
	public class MouthExpressionSet : ExpressionSet
	{
		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xD5FD1C", Offset = "0xD5FD1C", VA = "0xD5FD1C")]
		public MouthExpressionSet()
		{
		}
	}
}
namespace NeatCorp.Creatures.Breeding.ColorSet
{
	[Token(Token = "0x2000519")]
	public class CreatureColorSet : ScriptableObject
	{
		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsDomestic;

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x110F638", Offset = "0x110F638", VA = "0x110F638")]
		public CreatureColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051A")]
	public class CreatureColors
	{
		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color PatternColor;

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x110F640", Offset = "0x110F640", VA = "0x110F640")]
		public CreatureColors()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051B")]
	public struct GradientColors
	{
		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color Bright;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Mid;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color Dark;
	}
	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD358", Offset = "0x9FD358")]
	public class ManateeCowColorSet : CreatureColorSet
	{
		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ManateeCowColors Colors;

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x110F648", Offset = "0x110F648", VA = "0x110F648")]
		public ManateeCowColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051D")]
	public class ManateeCowColors : CreatureColors
	{
		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColors GradientColors;
	}
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD3C4", Offset = "0x9FD3C4")]
	public class MolesealColorSet : CreatureColorSet
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MolesealColors Colors;

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x110F650", Offset = "0x110F650", VA = "0x110F650")]
		public MolesealColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051F")]
	public class MolesealColors : CreatureColors
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColors GradientColors;
	}
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD430", Offset = "0x9FD430")]
	public class PuffkinColorSet : CreatureColorSet
	{
		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuffkinColors Colors;

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x110F658", Offset = "0x110F658", VA = "0x110F658")]
		public PuffkinColorSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000521")]
	public class PuffkinColors : CreatureColors
	{
		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColors GradientColors;
	}
}
namespace NeatCorp.Creatures.Breeding.Growth
{
	[Token(Token = "0x2000522")]
	public class CreatureGrowthData : ScriptableObject
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrowthState[] GrowthStates;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08560", Offset = "0xA08560")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA08560", Offset = "0xA08560")]
		public float Body;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA085B8", Offset = "0xA085B8")]
		public float Head;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA085D4", Offset = "0xA085D4")]
		public float Eyes;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public uint TotalGrowthDuration;

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xD5FD48", Offset = "0xD5FD48", VA = "0xD5FD48")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xD5FD94", Offset = "0xD5FD94", VA = "0xD5FD94")]
		public GrowthStateType GetGrowthStateType(float age)
		{
			return default(GrowthStateType);
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xD5FDFC", Offset = "0xD5FDFC", VA = "0xD5FDFC")]
		public CreatureGrowthData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000523")]
	public struct GrowthState
	{
		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GrowthStateType StateType;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint StateDuration;
	}
	[Token(Token = "0x2000524")]
	public enum GrowthStateType
	{
		[Token(Token = "0x4001E5F")]
		Infant,
		[Token(Token = "0x4001E60")]
		Child,
		[Token(Token = "0x4001E61")]
		Teen,
		[Token(Token = "0x4001E62")]
		Mature
	}
	[Token(Token = "0x2000525")]
	[Flags]
	public enum GrowthStateTypeFlag
	{
		[Token(Token = "0x4001E64")]
		Infant = 1,
		[Token(Token = "0x4001E65")]
		Child = 2,
		[Token(Token = "0x4001E66")]
		Teen = 4,
		[Token(Token = "0x4001E67")]
		Mature = 8
	}
	[Token(Token = "0x2000526")]
	public static class CreatureGrowthStateTypeMask
	{
		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xD5FE04", Offset = "0xD5FE04", VA = "0xD5FE04")]
		public static bool ContainsFlag(this int mask, GrowthStateTypeFlag flag)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000527")]
	public static class GrowthStateTypeExtensions
	{
		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xD5FE10", Offset = "0xD5FE10", VA = "0xD5FE10")]
		public static GrowthStateTypeFlag AsFlag(this GrowthStateType type)
		{
			return default(GrowthStateTypeFlag);
		}
	}
	[Token(Token = "0x2000528")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD4CC", Offset = "0x9FD4CC")]
	public class ManateeCowGrowthData : CreatureGrowthData
	{
		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xD5FE1C", Offset = "0xD5FE1C", VA = "0xD5FE1C")]
		public ManateeCowGrowthData()
		{
		}
	}
	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD538", Offset = "0x9FD538")]
	public class MolesealGrowthData : CreatureGrowthData
	{
		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xD5FE24", Offset = "0xD5FE24", VA = "0xD5FE24")]
		public MolesealGrowthData()
		{
		}
	}
	[Token(Token = "0x200052A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD5A4", Offset = "0x9FD5A4")]
	public class PuffkinGrowthData : CreatureGrowthData
	{
		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xD5FE2C", Offset = "0xD5FE2C", VA = "0xD5FE2C")]
		public PuffkinGrowthData()
		{
		}
	}
}
namespace NeatCorp.Creatures.Birds
{
	[Token(Token = "0x200052B")]
	public static class BirdAnimation
	{
		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int IdleParamId;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int EatingParamId;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static int FlappingParamId;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int HoveringParamId;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static int HeldParamId;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int FallingParamId;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int PoofedUpParamId;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static int PickedUpParamId;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static int PettingParamId;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static int StartledParamId;
	}
	[Token(Token = "0x200052C")]
	public class BirdBehavior : MonoBehaviour, IBird
	{
		[Token(Token = "0x4001E72")]
		private const float DefaultFlightSpeed = 1.1f;

		[Token(Token = "0x4001E73")]
		private const float DefaultLandingSpeed = 0.8f;

		[Token(Token = "0x4001E74")]
		private const float DefaultRotationSpeed = 2f;

		[Token(Token = "0x4001E75")]
		private const float GroundProjectionDistance = 0.3f;

		[Token(Token = "0x4001E76")]
		private const float MinLandingVelocity = 4.0000004E-06f;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected BirdType m_birdType;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Animator m_animator;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Collider m_collider;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float m_flightSpeed;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected float m_landingSpeed;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float m_rotationSpeed;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private BirdBehaviorState m_currentState;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BirdInterestPoint m_occupiedInterestPoint;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RaycastHit m_hitInfo;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_randomOffset;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_startPos;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_targetPos;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_randomIdleWaitTime;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_distanceLeftToTarget;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Pettable[] m_pettables;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_randomGroundTime;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 m_dirToTarget;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float m_flightPathDistance;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private BezierData m_flightPath;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_distanceTraveled;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected BirdSpawnPoint m_currentSpawnPoint;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected bool m_isGrabbable;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected Grabbable m_grabbable;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected float m_randomEatTime;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		protected float m_timeInCurrentState;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected Collider m_birdCollider;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Vector3 m_currentTargetPoint;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool m_shouldEatAfterLanding;

		[Token(Token = "0x17000338")]
		public BirdType BirdType
		{
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x11062F8", Offset = "0x11062F8", VA = "0x11062F8")]
			get
			{
				return default(BirdType);
			}
		}

		[Token(Token = "0x17000339")]
		public Animator Animator
		{
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x1106300", Offset = "0x1106300", VA = "0x1106300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public BirdBehaviorState CurrentState
		{
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x1106308", Offset = "0x1106308", VA = "0x1106308")]
			get
			{
				return default(BirdBehaviorState);
			}
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x1106310", Offset = "0x1106310", VA = "0x1106310")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x1106318", Offset = "0x1106318", VA = "0x1106318", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x11063F8", Offset = "0x11063F8", VA = "0x11063F8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1106404", Offset = "0x1106404", VA = "0x1106404", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1106408", Offset = "0x1106408", VA = "0x1106408", Slot = "7")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x11064FC", Offset = "0x11064FC", VA = "0x11064FC")]
		public void SetSpawnPoint(BirdSpawnPoint spawnPoint)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x11065F8", Offset = "0x11065F8", VA = "0x11065F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x1108088", Offset = "0x1108088", VA = "0x1108088")]
		public bool TrySetFlightTargetToCurrentSpawnPoint()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1108178", Offset = "0x1108178", VA = "0x1108178", Slot = "8")]
		public virtual void SwitchToState(BirdBehaviorState state)
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x1107B00", Offset = "0x1107B00", VA = "0x1107B00")]
		private void SetFlightPath()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0x1107DA0", Offset = "0x1107DA0", VA = "0x1107DA0")]
		private void UpdateAnimationState()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x1108034", Offset = "0x1108034", VA = "0x1108034")]
		private void UpdatePhysicsState()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x1108388", Offset = "0x1108388", VA = "0x1108388")]
		private void CheckGroundDistance()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x1108654", Offset = "0x1108654", VA = "0x1108654", Slot = "4")]
		public BirdBehavior GetBehaviorComponent()
		{
			return null;
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x1108658", Offset = "0x1108658", VA = "0x1108658")]
		public BirdBehavior()
		{
		}
	}
	[Token(Token = "0x200052D")]
	public enum BirdBehaviorState
	{
		[Token(Token = "0x4001E94")]
		Idle,
		[Token(Token = "0x4001E95")]
		Flying,
		[Token(Token = "0x4001E96")]
		Landing,
		[Token(Token = "0x4001E97")]
		HasPointOfInterest,
		[Token(Token = "0x4001E98")]
		OnGround,
		[Token(Token = "0x4001E99")]
		Held,
		[Token(Token = "0x4001E9A")]
		Floating,
		[Token(Token = "0x4001E9B")]
		Falling,
		[Token(Token = "0x4001E9C")]
		Flee,
		[Token(Token = "0x4001E9D")]
		NumStates
	}
	[Token(Token = "0x200052E")]
	public class BirdFlightBehavior : MonoBehaviour
	{
		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD610", Offset = "0x9FD610")]
		private sealed class <TryToLandAfterDuration>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BirdFlightBehavior <>4__this;

			[Token(Token = "0x1700033B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F35")]
				[Address(RVA = "0x1109138", Offset = "0x1109138", VA = "0x1109138", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700033C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F37")]
				[Address(RVA = "0x11091A0", Offset = "0x11091A0", VA = "0x11091A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x1108F34", Offset = "0x1108F34", VA = "0x1108F34")]
			[DebuggerHidden]
			public <TryToLandAfterDuration>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x1108FEC", Offset = "0x1108FEC", VA = "0x1108FEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x1108FF0", Offset = "0x1108FF0", VA = "0x1108FF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x1109140", Offset = "0x1109140", VA = "0x1109140", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E9E")]
		private const float DefaultMinFlightDuration = 3f;

		[Token(Token = "0x4001E9F")]
		private const float DefaultMaxFlightDuration = 5f;

		[Token(Token = "0x4001EA0")]
		private const float DefaultMaxTeleportReaction = 1f;

		[Token(Token = "0x4001EA1")]
		private const float DefaultMaxSneakTeleportRange = 1.5f;

		[Token(Token = "0x4001EA2")]
		private const float DefaultMaxVelocity = 9f;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FlyingBirdBehavior m_flightBirdBehavior;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_maxTeleportReaction;

		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_maxSneakTeleportRange;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_maxSneakVelocity;

		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_minFlightDuration;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_maxFlightDuration;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Vector3 m_flightDirection;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine m_landingRoutine;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider m_colliderInsideTrigger;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isPlayerWithinRange;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isFleeing;

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x1108730", Offset = "0x1108730", VA = "0x1108730")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0x1108738", Offset = "0x1108738", VA = "0x1108738")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0x1108A4C", Offset = "0x1108A4C", VA = "0x1108A4C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0x1108B0C", Offset = "0x1108B0C", VA = "0x1108B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x1108B1C", Offset = "0x1108B1C", VA = "0x1108B1C")]
		private void UpdateStartledBehavior()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x110882C", Offset = "0x110882C", VA = "0x110882C")]
		private void Flee()
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x1108EB8", Offset = "0x1108EB8", VA = "0x1108EB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17C3C", Offset = "0xA17C3C")]
		private IEnumerator TryToLandAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x1108F60", Offset = "0x1108F60", VA = "0x1108F60")]
		public BirdFlightBehavior()
		{
		}
	}
	[Token(Token = "0x2000530")]
	public class BirdInterestPoint : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdType[] m_attractedBirds;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_range;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool randomizeOffset;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA086F0", Offset = "0xA086F0")]
		private bool <IsOccupied>k__BackingField;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool initialized;

		[Token(Token = "0x1700033D")]
		public bool IsOccupied
		{
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x11091A8", Offset = "0x11091A8", VA = "0x11091A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17CF0", Offset = "0xA17CF0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x11091B0", Offset = "0x11091B0", VA = "0x11091B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17D00", Offset = "0xA17D00")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033E")]
		public bool HasBeenInitialized
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x11091BC", Offset = "0x11091BC", VA = "0x11091BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700033F")]
		public float Range
		{
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x11091C4", Offset = "0x11091C4", VA = "0x11091C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000340")]
		public BirdType[] AttractedBirdTypes
		{
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x11091CC", Offset = "0x11091CC", VA = "0x11091CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x11091D4", Offset = "0x11091D4", VA = "0x11091D4", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x11065E0", Offset = "0x11065E0", VA = "0x11065E0")]
		public void Occupy(bool occupied)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x11092C8", Offset = "0x11092C8", VA = "0x11092C8")]
		public BirdInterestPoint()
		{
		}
	}
	[Token(Token = "0x2000531")]
	public class BirdSpawnPoint : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdType m_birdType;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool spawnBirdOnStart;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA08720", Offset = "0xA08720")]
		private bool <IsOccupied>k__BackingField;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool initialized;

		[Token(Token = "0x17000341")]
		public bool IsOccupied
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x110933C", Offset = "0x110933C", VA = "0x110933C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17D10", Offset = "0xA17D10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x1109344", Offset = "0x1109344", VA = "0x1109344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA17D20", Offset = "0xA17D20")]
			private set
			{
			}
		}

		[Token(Token = "0x17000342")]
		public BirdType BirdType
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x1109350", Offset = "0x1109350", VA = "0x1109350")]
			get
			{
				return default(BirdType);
			}
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0x1109358", Offset = "0x1109358", VA = "0x1109358", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1109570", Offset = "0x1109570", VA = "0x1109570")]
		public void OnBirdSpawned(SpawnOperationCallbackData data)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0x11065EC", Offset = "0x11065EC", VA = "0x11065EC")]
		public void Occupy(bool occupied)
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x1109880", Offset = "0x1109880", VA = "0x1109880")]
		public BirdSpawnPoint()
		{
		}
	}
	[Token(Token = "0x2000532")]
	public class BirdSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD620", Offset = "0x9FD620")]
		private sealed class <WaitForDependenciesInit>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BirdSpawner <>4__this;

			[Token(Token = "0x17000343")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F6F")]
				[Address(RVA = "0x110BE9C", Offset = "0x110BE9C", VA = "0x110BE9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000344")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F71")]
				[Address(RVA = "0x110BF04", Offset = "0x110BF04", VA = "0x110BF04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x1109A14", Offset = "0x1109A14", VA = "0x1109A14")]
			[DebuggerHidden]
			public <WaitForDependenciesInit>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x110BCC0", Offset = "0x110BCC0", VA = "0x110BCC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x110BCC4", Offset = "0x110BCC4", VA = "0x110BCC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x110BEA4", Offset = "0x110BEA4", VA = "0x110BEA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EBA")]
		public const float TemporaryStayDuration = 30f;

		[Token(Token = "0x4001EBB")]
		private const float MaxDistance = 20f;

		[Token(Token = "0x4001EBC")]
		private const float RemovalSqrDistance = 100f;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BirdSpawner Instance;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference m_blowBirbPrefab;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReference m_bullfinkPrefab;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference m_owlBirdPrefab;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssetReference m_ravenPrefab;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_duckPrefab;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BirdType[] m_dayBirds;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int m_targetNumberOfDayBirds;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BirdType[] m_nightBirds;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int m_targetNumberOfNightBirds;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool m_printDebug;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpawnedBirdsData m_spawnedBlowBirbs;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SpawnedBirdsData m_spawnedBullfinks;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private SpawnedBirdsData m_spawnedOwls;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SpawnedBirdsData m_spawnedRavens;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private SpawnedBirdsData m_spawnedDucks;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private SpawnedBirdsData m_undefinedBirds;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<BirdSpawnPoint> m_spawnPoints;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<BirdInterestPoint> m_interestPoints;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private WorldZoneID m_currentWorldZoneId;

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x1109890", Offset = "0x1109890", VA = "0x1109890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x1109998", Offset = "0x1109998", VA = "0x1109998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17D30", Offset = "0xA17D30")]
		private IEnumerator WaitForDependenciesInit()
		{
			return null;
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x1109A40", Offset = "0x1109A40", VA = "0x1109A40")]
		private void OnWorldZoneChanged(WorldZone newWorldZone)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x1109B3C", Offset = "0x1109B3C", VA = "0x1109B3C")]
		private void InitializeTimeOfDayEvents()
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x1109ED8", Offset = "0x1109ED8", VA = "0x1109ED8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x110A09C", Offset = "0x110A09C", VA = "0x110A09C")]
		private void OnNewHourOfDay(int hour)
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x1109C54", Offset = "0x1109C54", VA = "0x1109C54")]
		private bool IsNight(int hour)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x1109C64", Offset = "0x1109C64", VA = "0x1109C64")]
		private void UpdateTimeSpecificBirds(bool isNight)
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x1109940", Offset = "0x1109940", VA = "0x1109940")]
		private void CheckAsset(ref AssetReference asset, int num)
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x110A0FC", Offset = "0x110A0FC", VA = "0x110A0FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x110A248", Offset = "0x110A248", VA = "0x110A248")]
		private bool TryUpdateBirdSpawn(ref SpawnedBirdsData data)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x110A9D4", Offset = "0x110A9D4", VA = "0x110A9D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17D94", Offset = "0xA17D94")]
		private void DebugPrintAllBirds()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x110A9D8", Offset = "0x110A9D8", VA = "0x110A9D8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xA17DCC", Offset = "0xA17DCC")]
		private void DebugPrintBirdType(SpawnedBirdsData data)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x110A9DC", Offset = "0x110A9DC", VA = "0x110A9DC")]
		public void ResetSystem()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x11094A0", Offset = "0x11094A0", VA = "0x11094A0")]
		public void AddSpawnPoint(BirdSpawnPoint point)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x110AA4C", Offset = "0x110AA4C", VA = "0x110AA4C")]
		public void RemoveSpawnPoint(BirdSpawnPoint point)
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x1109260", Offset = "0x1109260", VA = "0x1109260")]
		public void AddInterestPoint(BirdInterestPoint point)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x110AAB4", Offset = "0x110AAB4", VA = "0x110AAB4")]
		public void RemoveInterestPoint(BirdInterestPoint point)
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x110A390", Offset = "0x110A390", VA = "0x110A390")]
		private bool TryGetAnyAvailableSpawnPoint(BirdType birdType, out BirdSpawnPoint availablePoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x1109508", Offset = "0x1109508", VA = "0x1109508")]
		public void SpawnBirdAtPoint(BirdSpawnPoint point, BirdType birdType)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x110AB1C", Offset = "0x110AB1C", VA = "0x110AB1C")]
		private int GetNumberOfBirdsSpawnsOfTypeInRange(BirdType birdType, Vector3 point, float maxDistance)
		{
			return default(int);
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x1107830", Offset = "0x1107830", VA = "0x1107830")]
		public BirdInterestPoint OccupyInterestingPointInRange(Vector3 point, float maxDistance)
		{
			return null;
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x110AD1C", Offset = "0x110AD1C", VA = "0x110AD1C")]
		public bool TryToSpawnBirdNearPoint(BirdType birdType, Vector3 point, float maxDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x110A814", Offset = "0x110A814", VA = "0x110A814")]
		private bool TryDespawnBird(BirdType birdType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x110B0E8", Offset = "0x110B0E8", VA = "0x110B0E8")]
		private bool CanRemoveBirdAtPos(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1109AE0", Offset = "0x1109AE0", VA = "0x1109AE0")]
		private void RemoveAllDestroyedBirds(bool reset = false)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x110B23C", Offset = "0x110B23C", VA = "0x110B23C")]
		private void RemoveDestroyedBirds(ref SpawnedBirdsData data, bool reset)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x110A500", Offset = "0x110A500", VA = "0x110A500")]
		private bool TrySpawnBird(BirdType birdType, BirdSpawnPoint spawnPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x110B4C8", Offset = "0x110B4C8", VA = "0x110B4C8")]
		private bool TryFindInactiveBird(BirdType birdType, out GameObject birdObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x110B67C", Offset = "0x110B67C", VA = "0x110B67C")]
		private GameObject FindReusableBirdOfType(BirdType birdType)
		{
			return null;
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x110B398", Offset = "0x110B398", VA = "0x110B398")]
		private bool CanSpawnBirdAtThisTime(BirdType birdType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1109624", Offset = "0x1109624", VA = "0x1109624")]
		public void SetupSpawnedBird(GameObject birdObject, BirdSpawnPoint spawnPoint, bool isNew = false)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x110A0AC", Offset = "0x110A0AC", VA = "0x110A0AC")]
		private unsafe ref SpawnedBirdsData GetSpawnedBirdsDataFromType(BirdType birdType)
		{
			return ref *(SpawnedBirdsData*)null;
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x110B344", Offset = "0x110B344", VA = "0x110B344")]
		private AssetReference GetBirdAssetFromType(BirdType birdType)
		{
			return null;
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x1108C10", Offset = "0x1108C10", VA = "0x1108C10")]
		public bool TryGetFreeBirdSpawnPointsNearTarget(BirdType birdType, Vector3 targetPos, out BirdSpawnPoint closestSpawnPoint, float overrideMaxDistance = 0f)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x110B98C", Offset = "0x110B98C", VA = "0x110B98C")]
		public BirdSpawner()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public enum BirdType
	{
		[Token(Token = "0x4001ED5")]
		Undefined,
		[Token(Token = "0x4001ED6")]
		Blowbirb,
		[Token(Token = "0x4001ED7")]
		Seagull,
		[Token(Token = "0x4001ED8")]
		Bullfink,
		[Token(Token = "0x4001ED9")]
		Owl,
		[Token(Token = "0x4001EDA")]
		Raven,
		[Token(Token = "0x4001EDB")]
		Duck
	}
	[Token(Token = "0x2000535")]
	public class BlowbirdBehavior : BirdBehavior
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private FloatAfterThrowing m_floatAfterThrowing;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Collider m_normalCollider;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Collider m_poofedUpCollider;

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x110BF0C", Offset = "0x110BF0C", VA = "0x110BF0C", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x110BF38", Offset = "0x110BF38", VA = "0x110BF38", Slot = "6")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x110BF3C", Offset = "0x110BF3C", VA = "0x110BF3C")]
		private void SetPoofedUpCollider(bool isPoofedUp)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x110BFA8", Offset = "0x110BFA8", VA = "0x110BFA8", Slot = "8")]
		public override void SwitchToState(BirdBehaviorState state)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x110C228", Offset = "0x110C228", VA = "0x110C228", Slot = "7")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x110C264", Offset = "0x110C264", VA = "0x110C264")]
		public BlowbirdBehavior()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class FloatAfterThrowing : MonoBehaviour
	{
		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD630", Offset = "0x9FD630")]
		private sealed class <StartFloatingRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FloatAfterThrowing <>4__this;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Grabbable grabbable;

			[Token(Token = "0x17000346")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F8A")]
				[Address(RVA = "0x110CFA8", Offset = "0x110CFA8", VA = "0x110CFA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000347")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F8C")]
				[Address(RVA = "0x110D010", Offset = "0x110D010", VA = "0x110D010", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x110C92C", Offset = "0x110C92C", VA = "0x110C92C")]
			[DebuggerHidden]
			public <StartFloatingRoutine>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x110CD4C", Offset = "0x110CD4C", VA = "0x110CD4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x110CD50", Offset = "0x110CD50", VA = "0x110CD50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x110CFB0", Offset = "0x110CFB0", VA = "0x110CFB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EDF")]
		private const float SqrVelocityThreshold = 4f;

		[Token(Token = "0x4001EE0")]
		private const float VerticalMovementScale = 0.1f;

		[Token(Token = "0x4001EE1")]
		private const float DampeningFactor = 0.6f;

		[Token(Token = "0x4001EE2")]
		private const float MinVelocity = 0.5f;

		[Token(Token = "0x4001EE3")]
		private const float UpwardsSpeed = 0.005f;

		[Token(Token = "0x4001EE4")]
		private const float OscillationSpeed = 0.1f;

		[Token(Token = "0x4001EE5")]
		private const float InclineIncrement = 0.1f;

		[Token(Token = "0x4001EE6")]
		private const float MaxAltitude = 60f;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdBehavior m_birdBehavior;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve m_oscillationCurve;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isFloating;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_interpTime;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion m_randomRotation;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private YieldInstruction m_waitForFloatingInstruction;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine m_startFloatingRoutine;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_inclineMotion;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_inclineVal;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_originalAngularDrag;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_originalDrag;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_originalSleepThreshold;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private RigidbodyConstraints m_originalConstraints;

		[Token(Token = "0x17000345")]
		public bool IsFloating
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x110C268", Offset = "0x110C268", VA = "0x110C268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x110C270", Offset = "0x110C270", VA = "0x110C270")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x110C328", Offset = "0x110C328", VA = "0x110C328")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x110C3F8", Offset = "0x110C3F8", VA = "0x110C3F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x110C4C8", Offset = "0x110C4C8", VA = "0x110C4C8")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x110C894", Offset = "0x110C894", VA = "0x110C894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17E54", Offset = "0xA17E54")]
		private IEnumerator StartFloatingRoutine(Grabbable grabbable)
		{
			return null;
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x110C634", Offset = "0x110C634", VA = "0x110C634")]
		private float GetLerpedTorqueForce(float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x110C70C", Offset = "0x110C70C", VA = "0x110C70C")]
		private void AddRandomTorque(float forceMultiplier)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x110C958", Offset = "0x110C958", VA = "0x110C958")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x110CAC8", Offset = "0x110CAC8", VA = "0x110CAC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x110C968", Offset = "0x110C968", VA = "0x110C968")]
		private void UpdateFloatingPhysics()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x110CBAC", Offset = "0x110CBAC", VA = "0x110CBAC")]
		private void UpdateFloatingMovement()
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x110CB30", Offset = "0x110CB30", VA = "0x110CB30")]
		private void RemoveFromView()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x110C170", Offset = "0x110C170", VA = "0x110C170")]
		public void ResetPhysics()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x110CD38", Offset = "0x110CD38", VA = "0x110CD38")]
		public FloatAfterThrowing()
		{
		}
	}
	[Token(Token = "0x2000538")]
	public class FlyingBirdBehavior : BirdBehavior
	{
		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x1108EB4", Offset = "0x1108EB4", VA = "0x1108EB4")]
		public void FleeToLocation(BirdSpawnPoint point)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x110D018", Offset = "0x110D018", VA = "0x110D018")]
		public FlyingBirdBehavior()
		{
		}
	}
	[Token(Token = "0x2000539")]
	public class GrabbableBird : MonoBehaviour
	{
		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdBehavior m_birdBehavior;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x110D01C", Offset = "0x110D01C", VA = "0x110D01C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x110D154", Offset = "0x110D154", VA = "0x110D154")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x110D28C", Offset = "0x110D28C", VA = "0x110D28C")]
		private void OnGrabbed(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x110D3D4", Offset = "0x110D3D4", VA = "0x110D3D4")]
		private void OnDropped(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x110D480", Offset = "0x110D480", VA = "0x110D480")]
		public Grabbable GetGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x110D488", Offset = "0x110D488", VA = "0x110D488")]
		public GrabbableBird()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public interface IBird
	{
		[Token(Token = "0x6001F95")]
		BirdBehavior GetBehaviorComponent();
	}
	[Token(Token = "0x200053B")]
	public class PettableBird : MonoBehaviour
	{
		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BirdBehavior m_birdBehavior;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Pettable[] m_pettables;

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x110D490", Offset = "0x110D490", VA = "0x110D490")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x110D5D8", Offset = "0x110D5D8", VA = "0x110D5D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x110D6EC", Offset = "0x110D6EC", VA = "0x110D6EC")]
		private void OnPettingStart()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x110D794", Offset = "0x110D794", VA = "0x110D794")]
		private void OnPettingEnd()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x110D820", Offset = "0x110D820", VA = "0x110D820")]
		public PettableBird()
		{
		}
	}
	[Token(Token = "0x200053C")]
	public struct SpawnedBirdsData
	{
		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int MaxNumberOfBirds;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public BirdType BirdType;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<BirdBehavior> Birds;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int TargetCount;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeUntilNextSpawn;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeUntilTempBirdsDespawn;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int UninitializedBirds;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ActiveBirdsCount;

		[Token(Token = "0x17000348")]
		public int Count
		{
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0xAE6D58", Offset = "0xAE6D58", VA = "0xAE6D58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xAE6D60", Offset = "0xAE6D60", VA = "0xAE6D60")]
		public SpawnedBirdsData(BirdType birdType, int maxNumberOfBirds)
		{
		}
	}
	[Token(Token = "0x200053D")]
	public class TriggerBirdSpawning : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numberOfBirdsToSpawn;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable grabbable;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BirdInterestPoint[] interestPoints;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x110D828", Offset = "0x110D828", VA = "0x110D828", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x110DAF0", Offset = "0x110DAF0", VA = "0x110DAF0")]
		public void Trigger(Grabbable grabbable)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x110D968", Offset = "0x110D968", VA = "0x110D968")]
		private bool SpawningIsAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x110DA3C", Offset = "0x110DA3C", VA = "0x110DA3C")]
		private void Spawn()
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x110DBE8", Offset = "0x110DBE8", VA = "0x110DBE8")]
		private void SpawnBirdsNearPoint(BirdInterestPoint point)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x110DCD0", Offset = "0x110DCD0", VA = "0x110DCD0")]
		public TriggerBirdSpawning()
		{
		}
	}
}
namespace NeatCorp.Quests
{
	[Token(Token = "0x200053E")]
	public class QuestBubble : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD640", Offset = "0x9FD640")]
		private sealed class <ActivateLinkedQuestRoutine>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestBubble <>4__this;

			[Token(Token = "0x17000349")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FB2")]
				[Address(RVA = "0xD87F28", Offset = "0xD87F28", VA = "0xD87F28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FB4")]
				[Address(RVA = "0xD87F90", Offset = "0xD87F90", VA = "0xD87F90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0xD87D34", Offset = "0xD87D34", VA = "0xD87D34")]
			[DebuggerHidden]
			public <ActivateLinkedQuestRoutine>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0xD87E34", Offset = "0xD87E34", VA = "0xD87E34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0xD87E38", Offset = "0xD87E38", VA = "0xD87E38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0xD87F30", Offset = "0xD87F30", VA = "0xD87F30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD650", Offset = "0x9FD650")]
		private sealed class <RemoveRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public QuestBubble <>4__this;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x1700034B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FB8")]
				[Address(RVA = "0xD881A0", Offset = "0xD881A0", VA = "0xD881A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FBA")]
				[Address(RVA = "0xD88208", Offset = "0xD88208", VA = "0xD88208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0xD87D60", Offset = "0xD87D60", VA = "0xD87D60")]
			[DebuggerHidden]
			public <RemoveRoutine>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0xD87F98", Offset = "0xD87F98", VA = "0xD87F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0xD87F9C", Offset = "0xD87F9C", VA = "0xD87F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0xD881A8", Offset = "0xD881A8", VA = "0xD881A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F0B")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA088D0", Offset = "0xA088D0")]
		[SerializeField]
		private UnityEvent OnRewardRecieved;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent OnRewardPreviouslySpawned;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent OnPreviouslyCompleted;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0893C", Offset = "0xA0893C")]
		[SerializeField]
		private SendQuestEvent m_activateQuestEvent;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private CraftingBubble m_craftingBubble;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		[SerializeField]
		private CraftingMachine m_craftingMachine;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isCompleted;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_rewardRecieved;

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xD872B8", Offset = "0xD872B8", VA = "0xD872B8", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xD87364", Offset = "0xD87364", VA = "0xD87364", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xD8769C", Offset = "0xD8769C", VA = "0xD8769C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xD877B4", Offset = "0xD877B4", VA = "0xD877B4")]
		public void OnRecipeCompleted()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xD875B8", Offset = "0xD875B8", VA = "0xD875B8")]
		private void TryAddRewardRecievedEvent()
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xD877DC", Offset = "0xD877DC", VA = "0xD877DC")]
		public void OnRewardRecievedCallback()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xD877F0", Offset = "0xD877F0", VA = "0xD877F0")]
		public void RemoveBubble()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xD87B94", Offset = "0xD87B94", VA = "0xD87B94")]
		private void OnBubbleRemoved()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xD87CB8", Offset = "0xD87CB8", VA = "0xD87CB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17F08", Offset = "0xA17F08")]
		private IEnumerator ActivateLinkedQuestRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xD87B18", Offset = "0xD87B18", VA = "0xD87B18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA17F6C", Offset = "0xA17F6C")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xD874DC", Offset = "0xD874DC", VA = "0xD874DC")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xD87D8C", Offset = "0xD87D8C", VA = "0xD87D8C")]
		public QuestBubble()
		{
		}
	}
	[Token(Token = "0x2000541")]
	public class QuestBubbleState : ComponentState
	{
		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsCompleted;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool RewardRecieved;

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xD87320", Offset = "0xD87320", VA = "0xD87320")]
		public QuestBubbleState(bool isCompleted, bool rewardRecieved)
		{
		}
	}
	[Token(Token = "0x2000542")]
	public enum TutorialQuestProgress
	{
		[Token(Token = "0x4001F25")]
		None,
		[Token(Token = "0x4001F26")]
		HasCraftedItem,
		[Token(Token = "0x4001F27")]
		HasGrabbedOrb,
		[Token(Token = "0x4001F28")]
		HasInfusedOrb,
		[Token(Token = "0x4001F29")]
		HasPlaceGemOnAltar,
		[Token(Token = "0x4001F2A")]
		MAX_NUM
	}
	[Token(Token = "0x2000543")]
	public class TutorialQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD660", Offset = "0x9FD660")]
		private sealed class <WaitForGameToFinishLoading>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialQuest <>4__this;

			[Token(Token = "0x1700034D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FCC")]
				[Address(RVA = "0xD896B8", Offset = "0xD896B8", VA = "0xD896B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700034E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FCE")]
				[Address(RVA = "0xD89720", Offset = "0xD89720", VA = "0xD89720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0xD890E0", Offset = "0xD890E0", VA = "0xD890E0")]
			[DebuggerHidden]
			public <WaitForGameToFinishLoading>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0xD8950C", Offset = "0xD8950C", VA = "0xD8950C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0xD89510", Offset = "0xD89510", VA = "0xD89510", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0xD896C0", Offset = "0xD896C0", VA = "0xD896C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private QuestBubble questBubble;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PotpotAnimationController potpot;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject openInventoryMoodBubble;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SendQuestEvent sendOnCompletion;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Stashable gemToPutInInventory;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TutorialQuestProgress currentProgress;

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xD888CC", Offset = "0xD888CC", VA = "0xD888CC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xD88960", Offset = "0xD88960", VA = "0xD88960", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xD88C3C", Offset = "0xD88C3C", VA = "0xD88C3C")]
		public void OnOrbCrafted()
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xD88C48", Offset = "0xD88C48", VA = "0xD88C48")]
		public void OnOrbGrabbed()
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xD88A78", Offset = "0xD88A78", VA = "0xD88A78")]
		public void OnOrbInfused()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xD88C88", Offset = "0xD88C88", VA = "0xD88C88")]
		public void OnInventoryOpened(PlayerHand hand, Transform inventoryPosition)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xD88E14", Offset = "0xD88E14", VA = "0xD88E14")]
		public void OnCrystalGemGrabbed(GemGrabbedEvent e)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xD88FB8", Offset = "0xD88FB8", VA = "0xD88FB8")]
		public void CompleteQuest()
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xD8904C", Offset = "0xD8904C", VA = "0xD8904C")]
		public void OnQuestCompletelyDone()
		{
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xD88BC0", Offset = "0xD88BC0", VA = "0xD88BC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18070", Offset = "0xA18070")]
		private IEnumerator WaitForGameToFinishLoading()
		{
			return null;
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xD8910C", Offset = "0xD8910C", VA = "0xD8910C")]
		public void OnTutorialSkipped(QuestEvent e)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xD8930C", Offset = "0xD8930C", VA = "0xD8930C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xD89504", Offset = "0xD89504", VA = "0xD89504")]
		public TutorialQuest()
		{
		}
	}
	[Token(Token = "0x2000545")]
	public class TutorialQuestState : ComponentState
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentProgress;

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0xD89728", Offset = "0xD89728", VA = "0xD89728")]
		public TutorialQuestProgress GetCurrentProgress()
		{
			return default(TutorialQuestProgress);
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0xD88934", Offset = "0xD88934", VA = "0xD88934")]
		public TutorialQuestState(TutorialQuestProgress progress)
		{
		}
	}
	[Token(Token = "0x2000546")]
	public class ChopTrunksQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD670", Offset = "0x9FD670")]
		private sealed class <RemoveRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ChopTrunksQuest <>4__this;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x1700034F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FDA")]
				[Address(RVA = "0xD82084", Offset = "0xD82084", VA = "0xD82084", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000350")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FDC")]
				[Address(RVA = "0xD820EC", Offset = "0xD820EC", VA = "0xD820EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0xD81DA0", Offset = "0xD81DA0", VA = "0xD81DA0")]
			[DebuggerHidden]
			public <RemoveRoutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0xD81E7C", Offset = "0xD81E7C", VA = "0xD81E7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0xD81E80", Offset = "0xD81E80", VA = "0xD81E80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0xD8208C", Offset = "0xD8208C", VA = "0xD8208C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F35")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_trunksToRemove;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PotpotAnimationController m_potpotController;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnlockMerchantEventDispatcher m_eventDispatcher;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_trunksRemoved;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_isQuestCompleted;

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0xD81894", Offset = "0xD81894", VA = "0xD81894", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0xD8190C", Offset = "0xD8190C", VA = "0xD8190C", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0xD81C28", Offset = "0xD81C28", VA = "0xD81C28")]
		public void OnTrunkRemoved()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0xD81A0C", Offset = "0xD81A0C", VA = "0xD81A0C")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0xD81D24", Offset = "0xD81D24", VA = "0xD81D24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18124", Offset = "0xA18124")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0xD81DCC", Offset = "0xD81DCC", VA = "0xD81DCC")]
		public ChopTrunksQuest()
		{
		}
	}
	[Token(Token = "0x2000548")]
	public class ChopTrunkQuestState : ComponentState
	{
		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsQuestCompleted;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TrunksRemoved;

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xD81854", Offset = "0xD81854", VA = "0xD81854")]
		public ChopTrunkQuestState(bool isQuestCompleted, int trunksRemoved)
		{
		}
	}
	[Token(Token = "0x2000549")]
	public class UnlockMerchantEventDispatcher : MonoBehaviour
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MerchantType m_merchantType;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xD81C8C", Offset = "0xD81C8C", VA = "0xD81C8C")]
		public void DispatchMerchantUnlockEvent(bool isUnlocked)
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xD89730", Offset = "0xD89730", VA = "0xD89730")]
		public UnlockMerchantEventDispatcher()
		{
		}
	}
	[Token(Token = "0x200054A")]
	public class UnlockMerchantQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD680", Offset = "0x9FD680")]
		private sealed class <WaitForDependenciesInit>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockMerchantQuest <>4__this;

			[Token(Token = "0x17000351")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF3")]
				[Address(RVA = "0xD8A91C", Offset = "0xD8A91C", VA = "0xD8A91C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000352")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FF5")]
				[Address(RVA = "0xD8A984", Offset = "0xD8A984", VA = "0xD8A984", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xD89930", Offset = "0xD89930", VA = "0xD89930")]
			[DebuggerHidden]
			public <WaitForDependenciesInit>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xD8A74C", Offset = "0xD8A74C", VA = "0xD8A74C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xD8A750", Offset = "0xD8A750", VA = "0xD8A750", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xD8A924", Offset = "0xD8A924", VA = "0xD8A924", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD690", Offset = "0x9FD690")]
		private sealed class <RemoveRoutine>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockMerchantQuest <>4__this;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000353")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FF9")]
				[Address(RVA = "0xD8A6DC", Offset = "0xD8A6DC", VA = "0xD8A6DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000354")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001FFB")]
				[Address(RVA = "0xD8A744", Offset = "0xD8A744", VA = "0xD8A744", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xD8A198", Offset = "0xD8A198", VA = "0xD8A198")]
			[DebuggerHidden]
			public <RemoveRoutine>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0xD8A4D4", Offset = "0xD8A4D4", VA = "0xD8A4D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xD8A4D8", Offset = "0xD8A4D8", VA = "0xD8A4D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xD8A6E4", Offset = "0xD8A6E4", VA = "0xD8A6E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD6A0", Offset = "0x9FD6A0")]
		private sealed class <PlayCompleteSoundRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnlockMerchantQuest <>4__this;

			[Token(Token = "0x17000355")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001FFF")]
				[Address(RVA = "0xD8A464", Offset = "0xD8A464", VA = "0xD8A464", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000356")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002001")]
				[Address(RVA = "0xD8A4CC", Offset = "0xD8A4CC", VA = "0xD8A4CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xD8A1C4", Offset = "0xD8A1C4", VA = "0xD8A1C4")]
			[DebuggerHidden]
			public <PlayCompleteSoundRoutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0xD8A324", Offset = "0xD8A324", VA = "0xD8A324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xD8A328", Offset = "0xD8A328", VA = "0xD8A328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002000")]
			[Address(RVA = "0xD8A46C", Offset = "0xD8A46C", VA = "0xD8A46C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F48")]
		public const string TradingPostActive = "TradingPostActive";

		[Token(Token = "0x4001F49")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MerchantBoat m_merchantBoat;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SendQuestEvent m_questEventDispatcher;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TradingPostQuest m_tradingPostQuest;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject[] m_itemsToInactivate;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private NeatAudioPlayer[] m_neatAudioPlayers;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NeatAudioPlayer m_musicAudiPlayer;

		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private NeatAudioCue m_flagRaised;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private NeatAudioCue m_fireworksLaunched;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NeatAudioCue m_fireworksExplosion;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int m_alternatingAudioPlayerIndex;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_isQuestCompleted;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool m_shouldShowMerchantBoat;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0xD89738", Offset = "0xD89738", VA = "0xD89738")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xD897E0", Offset = "0xD897E0", VA = "0xD897E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0xD89888", Offset = "0xD89888", VA = "0xD89888")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xD89764", Offset = "0xD89764", VA = "0xD89764")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA181D8", Offset = "0xA181D8")]
		private IEnumerator WaitForDependenciesInit()
		{
			return null;
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xD8995C", Offset = "0xD8995C", VA = "0xD8995C")]
		private void OnUnlocked(UnlockMerchantEvent e)
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xD89A3C", Offset = "0xD89A3C", VA = "0xD89A3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xD89BA4", Offset = "0xD89BA4", VA = "0xD89BA4", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xD89D00", Offset = "0xD89D00", VA = "0xD89D00")]
		private void SetMerchantActive(bool shouldShowMerchant)
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xD8A03C", Offset = "0xD8A03C", VA = "0xD8A03C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xD8A0E8", Offset = "0xD8A0E8", VA = "0xD8A0E8")]
		private void OnPlayerLeftWorldZone(WorldZone leftWorldZone)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xD89E20", Offset = "0xD89E20", VA = "0xD89E20")]
		private void RemoveQuest()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xD8A11C", Offset = "0xD8A11C", VA = "0xD8A11C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1823C", Offset = "0xA1823C")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xD899C0", Offset = "0xD899C0", VA = "0xD899C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA182A0", Offset = "0xA182A0")]
		private IEnumerator PlayCompleteSoundRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xD8A1F0", Offset = "0xD8A1F0", VA = "0xD8A1F0")]
		private void PlayAudioCue(NeatAudioCue cue)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xD8A268", Offset = "0xD8A268", VA = "0xD8A268")]
		private void PlayMusic()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xD8A284", Offset = "0xD8A284", VA = "0xD8A284")]
		public UnlockMerchantQuest()
		{
		}
	}
	[Token(Token = "0x200054E")]
	public class UnlockMerchantQuestState : ComponentState
	{
		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsQuestCompleted;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool ShouldShowMerchantBoat;

		[Token(Token = "0x6002002")]
		[Address(RVA = "0xD8A0A4", Offset = "0xD8A0A4", VA = "0xD8A0A4")]
		public UnlockMerchantQuestState(bool isQuestCompleted, bool shouldShowMerchantBoat)
		{
		}
	}
}
namespace NeatCorp.Quests.MissionBeacon
{
	[Token(Token = "0x200054F")]
	public interface IExcavatable
	{
		[Token(Token = "0x6002003")]
		void Dig(int hoeLevel);

		[Token(Token = "0x6002004")]
		bool CanBeExcavated();
	}
	[Token(Token = "0x2000550")]
	public class MissionBeacon : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD6B0", Offset = "0x9FD6B0")]
		private sealed class <CheckForBracelet>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionBeacon <>4__this;

			[Token(Token = "0x17000357")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002027")]
				[Address(RVA = "0xD85638", Offset = "0xD85638", VA = "0xD85638", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000358")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002029")]
				[Address(RVA = "0xD856A0", Offset = "0xD856A0", VA = "0xD856A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002024")]
			[Address(RVA = "0xD83B10", Offset = "0xD83B10", VA = "0xD83B10")]
			[DebuggerHidden]
			public <CheckForBracelet>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6002025")]
			[Address(RVA = "0xD853D0", Offset = "0xD853D0", VA = "0xD853D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002026")]
			[Address(RVA = "0xD853D4", Offset = "0xD853D4", VA = "0xD853D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002028")]
			[Address(RVA = "0xD85640", Offset = "0xD85640", VA = "0xD85640", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD6C0", Offset = "0x9FD6C0")]
		private sealed class <OpenedBeaconAudio>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionBeacon <>4__this;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <loopCueTimer>5__2;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600202D")]
				[Address(RVA = "0xD859C4", Offset = "0xD859C4", VA = "0xD859C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600202F")]
				[Address(RVA = "0xD85A2C", Offset = "0xD85A2C", VA = "0xD85A2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600202A")]
			[Address(RVA = "0xD83DB8", Offset = "0xD83DB8", VA = "0xD83DB8")]
			[DebuggerHidden]
			public <OpenedBeaconAudio>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x600202B")]
			[Address(RVA = "0xD858F8", Offset = "0xD858F8", VA = "0xD858F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600202C")]
			[Address(RVA = "0xD858FC", Offset = "0xD858FC", VA = "0xD858FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600202E")]
			[Address(RVA = "0xD859CC", Offset = "0xD859CC", VA = "0xD859CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD6D0", Offset = "0x9FD6D0")]
		private sealed class <Illuminate>d__60 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MissionBeacon <>4__this;

			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float TargetIllumination;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <currentIlluminationFadeTime>5__2;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002033")]
				[Address(RVA = "0xD85888", Offset = "0xD85888", VA = "0xD85888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002035")]
				[Address(RVA = "0xD858F0", Offset = "0xD858F0", VA = "0xD858F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002030")]
			[Address(RVA = "0xD85248", Offset = "0xD85248", VA = "0xD85248")]
			[DebuggerHidden]
			public <Illuminate>d__60(int <>1__state)
			{
			}

			[Token(Token = "0x6002031")]
			[Address(RVA = "0xD856A8", Offset = "0xD856A8", VA = "0xD856A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002032")]
			[Address(RVA = "0xD856AC", Offset = "0xD856AC", VA = "0xD856AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002034")]
			[Address(RVA = "0xD85890", Offset = "0xD85890", VA = "0xD85890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MissionBeaconAnimation BeaconAnimation;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform BeaconActivationLocation;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float OpenDistance;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float CloseDistance;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference MapToSpawn;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform MapSpawnTransform;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MissionBeaconMapType MapTypeToSpawn;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Sprite MapSprite;

		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SkinnedMeshRenderer MissionBeaconRenderer;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MissionBeaconMapImpostor MapImpostor;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RotateObjectSlowly m_hoveringMapLocation;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08C28", Offset = "0xA08C28")]
		[SerializeField]
		private NeatAudioPlayer MissionBeaconOpenAudioPlayer;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private NeatAudioPlayer MissionBeaconLoopAudioPlayer;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private NeatAudioPlayer MissionBeaconCloseAudioPlayer;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private NeatAudioCue MissionBeaconOpenCue;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private NeatAudioCue MissionBeaconLoopCue;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private NeatAudioCue MissionBeaconCloseCue;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float LoopCueDelay;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool BeaconOpened;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private PlayerHand TrackedHand;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject SpawnedMap;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool MapHasBeenGrabbed;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock MissionBeaconPropertyBlock;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float CurrentIllumination;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float IlluminationFadeDuration;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine BraceletCheckRoutine;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine AudioRoutine;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool CloseAnimationBegunPlaying;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Sequence m_mapSpawnSequence;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool m_sequenceCreated;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 m_origHoverLocalPos;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3 m_origHoverLocalScale;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private bool m_hasCachedOriginalHover;

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xD834A0", Offset = "0xD834A0", VA = "0xD834A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xD83528", Offset = "0xD83528", VA = "0xD83528", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xD838B4", Offset = "0xD838B4", VA = "0xD838B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xD83ABC", Offset = "0xD83ABC", VA = "0xD83ABC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xD834D8", Offset = "0xD834D8", VA = "0xD834D8")]
		private void CleanUpTweenSequence()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xD83838", Offset = "0xD83838", VA = "0xD83838")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA183F4", Offset = "0xA183F4")]
		private IEnumerator CheckForBracelet()
		{
			return null;
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xD83A24", Offset = "0xD83A24", VA = "0xD83A24")]
		public void OpenBeacon()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xD83A74", Offset = "0xD83A74", VA = "0xD83A74")]
		public void CloseBeacon()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xD83CA4", Offset = "0xD83CA4", VA = "0xD83CA4")]
		public void BeginSpinUp()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xD83D5C", Offset = "0xD83D5C", VA = "0xD83D5C")]
		public void BeginClosing()
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xD83CE0", Offset = "0xD83CE0", VA = "0xD83CE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18458", Offset = "0xA18458")]
		private IEnumerator OpenedBeaconAudio()
		{
			return null;
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xD83DE4", Offset = "0xD83DE4", VA = "0xD83DE4")]
		public void OnBeaconFinishedOpen()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xD84224", Offset = "0xD84224", VA = "0xD84224")]
		public void OnBeaconBeginClose()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xD83EB4", Offset = "0xD83EB4", VA = "0xD83EB4")]
		public void SpawnMap()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xD8439C", Offset = "0xD8439C", VA = "0xD8439C")]
		private void OnMapSpawnedPreInit(SpawnOperationCallbackData spawnCallback)
		{
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xD8459C", Offset = "0xD8459C", VA = "0xD8459C")]
		private void OnMapSpawnedPostInit(SpawnOperationCallbackData spawnCallback)
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xD847E4", Offset = "0xD847E4", VA = "0xD847E4")]
		private void ResetHoverLocation()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xD8432C", Offset = "0xD8432C", VA = "0xD8432C")]
		private void TryPlaySequence(bool playBackwards = false)
		{
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xD848A8", Offset = "0xD848A8", VA = "0xD848A8")]
		private void TryCreateSequence()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xD84B70", Offset = "0xD84B70", VA = "0xD84B70")]
		private void OnMapAnimationFinishedForwards()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xD84DB8", Offset = "0xD84DB8", VA = "0xD84DB8")]
		private void OnMapAnimationFinishedBackwards()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0xD844D0", Offset = "0xD844D0", VA = "0xD844D0")]
		private void InitializeMap()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xD840D4", Offset = "0xD840D4", VA = "0xD840D4")]
		private void TryUpdateMissionBeaconMapState()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0xD84EFC", Offset = "0xD84EFC", VA = "0xD84EFC")]
		private void OnMapPreGrab(Grabbable obj)
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0xD84FE4", Offset = "0xD84FE4", VA = "0xD84FE4")]
		private void OnMapGrabbed(Grabbable mapGrabbable)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0xD83BC0", Offset = "0xD83BC0", VA = "0xD83BC0")]
		public void ShowIllumination()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0xD83C74", Offset = "0xD83C74", VA = "0xD83C74")]
		public void HideIllumination()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0xD851BC", Offset = "0xD851BC", VA = "0xD851BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA184BC", Offset = "0xA184BC")]
		public IEnumerator Illuminate(float TargetIllumination)
		{
			return null;
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xD85274", Offset = "0xD85274", VA = "0xD85274")]
		public void ForceIllumination(float inIllumination)
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0xD85318", Offset = "0xD85318", VA = "0xD85318", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xD853B0", Offset = "0xD853B0", VA = "0xD853B0")]
		public MissionBeacon()
		{
		}
	}
	[Token(Token = "0x2000554")]
	public class MissionBeaconState : ComponentState
	{
		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool MapHasBeenGrabbed;

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xD85380", Offset = "0xD85380", VA = "0xD85380")]
		public MissionBeaconState(bool inMapHasBeenGrabbed)
		{
		}
	}
	[Token(Token = "0x2000555")]
	public class MissionBeaconActiveStateBehaviour : StateMachineBehaviour
	{
		[Token(Token = "0x6002037")]
		[Address(RVA = "0xD85A34", Offset = "0xD85A34", VA = "0xD85A34", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0xD85B20", Offset = "0xD85B20", VA = "0xD85B20", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xD85C0C", Offset = "0xD85C0C", VA = "0xD85C0C")]
		public MissionBeaconActiveStateBehaviour()
		{
		}
	}
	[Token(Token = "0x2000556")]
	public class MissionBeaconAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int ActiveParamName;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int OpenParamName;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x600203A")]
		[Address(RVA = "0xD85C14", Offset = "0xD85C14", VA = "0xD85C14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xD85CCC", Offset = "0xD85CCC", VA = "0xD85CCC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xD83B3C", Offset = "0xD83B3C", VA = "0xD83B3C")]
		public void Open()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xD83BF0", Offset = "0xD83BF0", VA = "0xD83BF0")]
		public void Close()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xD85D84", Offset = "0xD85D84", VA = "0xD85D84")]
		public void Activate()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xD85E08", Offset = "0xD85E08", VA = "0xD85E08")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0xD85E8C", Offset = "0xD85E8C", VA = "0xD85E8C")]
		private void OnBeaconEvent(MissionBeaconDeactivateEvent e)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xD85EAC", Offset = "0xD85EAC", VA = "0xD85EAC")]
		public MissionBeaconAnimation()
		{
		}
	}
	[Token(Token = "0x2000557")]
	public class MissionBeaconDeactivateEvent : GameEvent
	{
	}
	[Token(Token = "0x2000558")]
	public class MissionBeaconMap : ImportantItem
	{
		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MeshRenderer MapRenderer;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MissionBeaconMapType MapType;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Sprite[] MapTypeSprites;

		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock RendererPropertyBlock;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int MainTexId;

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xD85F38", Offset = "0xD85F38", VA = "0xD85F38", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xD84EF4", Offset = "0xD84EF4", VA = "0xD84EF4")]
		public void SetMapType(MissionBeaconMapType newMapType)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xD86190", Offset = "0xD86190", VA = "0xD86190")]
		public MissionBeaconMapType GetMapType()
		{
			return default(MissionBeaconMapType);
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0xD85FE4", Offset = "0xD85FE4", VA = "0xD85FE4")]
		public void UpdateMapSprite()
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xD86198", Offset = "0xD86198", VA = "0xD86198", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0xD862D8", Offset = "0xD862D8", VA = "0xD862D8")]
		public MissionBeaconMap()
		{
		}
	}
	[Token(Token = "0x2000559")]
	public class MissionBeaconMapComponentState : ImportantItemState
	{
		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MissionBeaconMapType MapType;

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xD862A4", Offset = "0xD862A4", VA = "0xD862A4")]
		public MissionBeaconMapComponentState(MissionBeaconMapType inMaptype, SaveID impostorId)
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class MissionBeaconMapImpostor : ImportantItemImpostor
	{
		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public MissionBeaconMapType MapType;

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xD863A8", Offset = "0xD863A8", VA = "0xD863A8", Slot = "16")]
		public override Grabbable GetRealGrabbable()
		{
			return null;
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xD86434", Offset = "0xD86434", VA = "0xD86434", Slot = "17")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xD8402C", Offset = "0xD8402C", VA = "0xD8402C")]
		public void TryFindAndAssignMap()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xD86438", Offset = "0xD86438", VA = "0xD86438", Slot = "22")]
		protected override void FindImportantItem()
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0xD866C4", Offset = "0xD866C4", VA = "0xD866C4")]
		public MissionBeaconMapImpostor()
		{
		}
	}
	[Token(Token = "0x200055B")]
	public class TotemDirtPile : SaveableComponent, IExcavatable, IInitializable
	{
		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AttachSlot m_attatchSlot;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int m_requieredHoeLevel;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08D34", Offset = "0xA08D34")]
		[SerializeField]
		private UnityEvent m_onDig;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onDigFail;

		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA08D90", Offset = "0xA08D90")]
		private Tool_Axe.AxeLevelType m_requieredAxeLevel;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Grabbable m_attatchedGrabbable;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MissionBeaconMapType MapForActivation;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ParticleSystem DugUpEffect;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform TotemHeadDugUpTargetTransform;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Renderer DirtMeshRenderer;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool HaveBeenDugUp;

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xD866CC", Offset = "0xD866CC", VA = "0xD866CC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xD8672C", Offset = "0xD8672C", VA = "0xD8672C", Slot = "7")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xD86B84", Offset = "0xD86B84", VA = "0xD86B84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0xD86C78", Offset = "0xD86C78", VA = "0xD86C78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0xD86D6C", Offset = "0xD86D6C", VA = "0xD86D6C")]
		private void OnAttatched(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0xD86DB0", Offset = "0xD86DB0", VA = "0xD86DB0")]
		private void OnMapStateUpdatedEvent(MissionBeaconMapStateUpdateEvent e)
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0xD86DE8", Offset = "0xD86DE8", VA = "0xD86DE8", Slot = "5")]
		public void Dig(int hoeLevel)
		{
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0xD870AC", Offset = "0xD870AC", VA = "0xD870AC", Slot = "6")]
		public bool CanBeExcavated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002058")]
		[Address(RVA = "0xD86A30", Offset = "0xD86A30", VA = "0xD86A30")]
		public void ShowAndActivate()
		{
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xD868DC", Offset = "0xD868DC", VA = "0xD868DC")]
		public void HideAndDeactivate()
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0xD867D0", Offset = "0xD867D0", VA = "0xD867D0")]
		public bool ShouldBeVisibleAndActive()
		{
			return default(bool);
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0xD870E4", Offset = "0xD870E4", VA = "0xD870E4")]
		private GameObject[] GetAllChildObjects()
		{
			return null;
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0xD87214", Offset = "0xD87214", VA = "0xD87214", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0xD872A8", Offset = "0xD872A8", VA = "0xD872A8")]
		public TotemDirtPile()
		{
		}
	}
	[Token(Token = "0x200055C")]
	public class TotemDirtPileState : ComponentState
	{
		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MissionBeaconMapType MapForActivation;

		[Token(Token = "0x600205E")]
		[Address(RVA = "0xD8727C", Offset = "0xD8727C", VA = "0xD8727C")]
		public TotemDirtPileState(MissionBeaconMapType inMapForActivation)
		{
		}
	}
}
namespace NeatCorp.Quests.Cultivation
{
	[Token(Token = "0x200055D")]
	public enum CheckPlantPart
	{
		[Token(Token = "0x4001FAC")]
		Head,
		[Token(Token = "0x4001FAD")]
		Body,
		[Token(Token = "0x4001FAE")]
		Any
	}
	[Token(Token = "0x200055E")]
	public class GrowPlantsQuest : SaveableComponent, IInitializable
	{
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD6E0", Offset = "0x9FD6E0")]
		private sealed class <ActivateLinkedQuestRoutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrowPlantsQuest <>4__this;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002075")]
				[Address(RVA = "0xD831B8", Offset = "0xD831B8", VA = "0xD831B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002077")]
				[Address(RVA = "0xD83220", Offset = "0xD83220", VA = "0xD83220", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002072")]
			[Address(RVA = "0xD82FB8", Offset = "0xD82FB8", VA = "0xD82FB8")]
			[DebuggerHidden]
			public <ActivateLinkedQuestRoutine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002073")]
			[Address(RVA = "0xD830C4", Offset = "0xD830C4", VA = "0xD830C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002074")]
			[Address(RVA = "0xD830C8", Offset = "0xD830C8", VA = "0xD830C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002076")]
			[Address(RVA = "0xD831C0", Offset = "0xD831C0", VA = "0xD831C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD6F0", Offset = "0x9FD6F0")]
		private sealed class <RemoveRoutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GrowPlantsQuest <>4__this;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600207B")]
				[Address(RVA = "0xD83430", Offset = "0xD83430", VA = "0xD83430", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600207D")]
				[Address(RVA = "0xD83498", Offset = "0xD83498", VA = "0xD83498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002078")]
			[Address(RVA = "0xD82FE4", Offset = "0xD82FE4", VA = "0xD82FE4")]
			[DebuggerHidden]
			public <RemoveRoutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002079")]
			[Address(RVA = "0xD83228", Offset = "0xD83228", VA = "0xD83228", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600207A")]
			[Address(RVA = "0xD8322C", Offset = "0xD8322C", VA = "0xD8322C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600207C")]
			[Address(RVA = "0xD83438", Offset = "0xD83438", VA = "0xD83438", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FAF")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CraftingSystem.ResourceType m_resourceType;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int m_number;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CheckPlantPart m_checkPart;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CraftingCanvas m_connectedCanvas;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08E4C", Offset = "0xA08E4C")]
		public UnityEvent OnPlanted;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent OnGrown;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnFinished;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<PlantPositionProxy> m_plantsPlanted;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private OptimizedCollection<PlantPositionProxy> m_plantsGrown;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_initialized;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_isSolved;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08E84", Offset = "0xA08E84")]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08EF0", Offset = "0xA08EF0")]
		[SerializeField]
		private SendQuestEvent m_activateQuestEvent;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x600205F")]
		[Address(RVA = "0xD820F4", Offset = "0xD820F4", VA = "0xD820F4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0xD821C8", Offset = "0xD821C8", VA = "0xD821C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002061")]
		[Address(RVA = "0xD820F8", Offset = "0xD820F8", VA = "0xD820F8")]
		private void TryInitializeCollections()
		{
		}

		[Token(Token = "0x6002062")]
		[Address(RVA = "0xD821CC", Offset = "0xD821CC", VA = "0xD821CC", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002063")]
		[Address(RVA = "0xD82264", Offset = "0xD82264", VA = "0xD82264", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002064")]
		[Address(RVA = "0xD82370", Offset = "0xD82370", VA = "0xD82370")]
		public void OnTriggerUpdated(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xD82394", Offset = "0xD82394", VA = "0xD82394")]
		private void UpdatePlantsRegistry(Component[] updatedComponents)
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xD82830", Offset = "0xD82830", VA = "0xD82830")]
		private bool HasMatchingResourceType(PlantPositionProxy plantPositionProxy)
		{
			return default(bool);
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xD82834", Offset = "0xD82834", VA = "0xD82834")]
		private bool HasMatchingResourceType(PlantPositionProxy plantPositionProxy, CraftingSystem.ResourceType resourceType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xD82718", Offset = "0xD82718", VA = "0xD82718")]
		private void ClearRemovedComponents(OptimizedCollection<Component> currentComponentCollection)
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xD82584", Offset = "0xD82584", VA = "0xD82584")]
		public void CheckPlantsGrowth()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0xD828B4", Offset = "0xD828B4", VA = "0xD828B4")]
		private void TryUpdateConnectedCanvas(PlantPositionProxy[] plants)
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0xD82304", Offset = "0xD82304", VA = "0xD82304")]
		public void CompleteQuest()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0xD82C2C", Offset = "0xD82C2C", VA = "0xD82C2C")]
		public void RemoveItems()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xD82E88", Offset = "0xD82E88", VA = "0xD82E88")]
		private void OnItemsRemoved()
		{
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0xD82F3C", Offset = "0xD82F3C", VA = "0xD82F3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18610", Offset = "0xA18610")]
		private IEnumerator ActivateLinkedQuestRoutine()
		{
			return null;
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xD82E0C", Offset = "0xD82E0C", VA = "0xD82E0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18674", Offset = "0xA18674")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xD82BA8", Offset = "0xD82BA8", VA = "0xD82BA8")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xD83010", Offset = "0xD83010", VA = "0xD83010")]
		public GrowPlantsQuest()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public class GrowPlantsQuestState : ComponentState
	{
		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsSolved;

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xD82234", Offset = "0xD82234", VA = "0xD82234")]
		public GrowPlantsQuestState(bool isSolved)
		{
		}
	}
}
namespace NeatCorp.Quests.Boat
{
	[Token(Token = "0x2000562")]
	public class BoatBubbleController : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD700", Offset = "0x9FD700")]
		private sealed class <RemoveRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BoatBubbleController <>4__this;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <length>5__2;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000361")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600208D")]
				[Address(RVA = "0xD817E4", Offset = "0xD817E4", VA = "0xD817E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600208F")]
				[Address(RVA = "0xD8184C", Offset = "0xD8184C", VA = "0xD8184C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600208A")]
			[Address(RVA = "0xD81508", Offset = "0xD81508", VA = "0xD81508")]
			[DebuggerHidden]
			public <RemoveRoutine>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600208B")]
			[Address(RVA = "0xD815DC", Offset = "0xD815DC", VA = "0xD815DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600208C")]
			[Address(RVA = "0xD815E0", Offset = "0xD815E0", VA = "0xD815E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600208E")]
			[Address(RVA = "0xD817EC", Offset = "0xD817EC", VA = "0xD817EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FCB")]
		private const float PopOutDuration = 1f;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CraftingCanvasSprite m_top;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private CraftingCanvasSprite m_wheel;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CraftingCanvasSprite m_engine;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CraftingCanvasSprite m_hull;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] m_itemsToRemove;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_questRoot;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_removeOnCompleted;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA08FBC", Offset = "0xA08FBC")]
		[SerializeField]
		private UnityEvent OnPartCompleted;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private UnityEvent OnFinished;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private YieldInstruction m_delayInstruction;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_initialized;

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xD80C98", Offset = "0xD80C98", VA = "0xD80C98", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xD80E0C", Offset = "0xD80E0C", VA = "0xD80E0C", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0xD80D98", Offset = "0xD80D98", VA = "0xD80D98")]
		private void SetPartsActive(BoatBubbleControllerState s)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xD80F24", Offset = "0xD80F24", VA = "0xD80F24")]
		private void OnBoatPartCompleted(BoatQuestEvent e)
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0xD80FEC", Offset = "0xD80FEC", VA = "0xD80FEC")]
		private bool CheckIfFinished()
		{
			return default(bool);
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xD8104C", Offset = "0xD8104C", VA = "0xD8104C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xD81130", Offset = "0xD81130", VA = "0xD81130")]
		public void RemoveBubble()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0xD813D4", Offset = "0xD813D4", VA = "0xD813D4")]
		private void OnBubbleRemoved()
		{
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0xD81358", Offset = "0xD81358", VA = "0xD81358")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18778", Offset = "0xA18778")]
		private IEnumerator RemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002088")]
		[Address(RVA = "0xD81484", Offset = "0xD81484", VA = "0xD81484")]
		public void RemoveQuest()
		{
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xD81534", Offset = "0xD81534", VA = "0xD81534")]
		public BoatBubbleController()
		{
		}
	}
	[Token(Token = "0x2000564")]
	public class BoatBubbleControllerState : ComponentState
	{
		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasTop;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool HasWheel;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool HasEngine;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool HasHull;

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xD80EC0", Offset = "0xD80EC0", VA = "0xD80EC0")]
		public BoatBubbleControllerState(bool hasTop, bool hasWheel, bool hasEngine, bool hasHull)
		{
		}
	}
	[Token(Token = "0x2000565")]
	public enum BoatQuestEventType
	{
		[Token(Token = "0x4001FE2")]
		Top,
		[Token(Token = "0x4001FE3")]
		Wheel,
		[Token(Token = "0x4001FE4")]
		Engine,
		[Token(Token = "0x4001FE5")]
		Hull
	}
	[Token(Token = "0x2000566")]
	public class BoatQuestEvent : GameEvent
	{
		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoatQuestEventType Part;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Completed;

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xD80C50", Offset = "0xD80C50", VA = "0xD80C50")]
		public BoatQuestEvent(BoatQuestEventType part, bool completed)
		{
		}
	}
}
namespace NeatCorp.Quests.Trading
{
	[Token(Token = "0x2000567")]
	public class TradingPostQuest : MonoBehaviour
	{
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD710", Offset = "0x9FD710")]
		private sealed class <PlayFireworksAfterDuration>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TradingPostQuest <>4__this;

			[Token(Token = "0x17000363")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020A0")]
				[Address(RVA = "0xD8885C", Offset = "0xD8885C", VA = "0xD8885C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020A2")]
				[Address(RVA = "0xD888C4", Offset = "0xD888C4", VA = "0xD888C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600209D")]
			[Address(RVA = "0xD88660", Offset = "0xD88660", VA = "0xD88660")]
			[DebuggerHidden]
			public <PlayFireworksAfterDuration>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600209E")]
			[Address(RVA = "0xD8879C", Offset = "0xD8879C", VA = "0xD8879C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600209F")]
			[Address(RVA = "0xD887A0", Offset = "0xD887A0", VA = "0xD887A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020A1")]
			[Address(RVA = "0xD88864", Offset = "0xD88864", VA = "0xD88864", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int m_flagPoleActiveParamaId;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int m_flagPoleTriggerParamId;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MerchantType m_merchantType;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject[] m_objectsToActivate;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_objectsToRemove;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem m_fireworks;

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xD88210", Offset = "0xD88210", VA = "0xD88210")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xD882B8", Offset = "0xD882B8", VA = "0xD882B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xD88360", Offset = "0xD88360", VA = "0xD88360")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xD88368", Offset = "0xD88368", VA = "0xD88368")]
		private void OnUnlocked(UnlockMerchantEvent e)
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xD88544", Offset = "0xD88544", VA = "0xD88544")]
		private void PlayTradingPostAnimations()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xD885E4", Offset = "0xD885E4", VA = "0xD885E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1882C", Offset = "0xA1882C")]
		private IEnumerator PlayFireworksAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xD883C4", Offset = "0xD883C4", VA = "0xD883C4")]
		private void ActivateDynamicObjects()
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xD88448", Offset = "0xD88448", VA = "0xD88448")]
		private void RemoveDynamicObjects()
		{
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xD8868C", Offset = "0xD8868C", VA = "0xD8868C")]
		public void SetFlagRaised()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xD88710", Offset = "0xD88710", VA = "0xD88710")]
		public TradingPostQuest()
		{
		}
	}
}
namespace NeatCorp.Home
{
	[Token(Token = "0x2000569")]
	public class HomeUpgradeObjective : CraftItemObjective
	{
		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject[] m_enableOnComplete;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject[] m_disableOnComplete;

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xE8A8EC", Offset = "0xE8A8EC", VA = "0xE8A8EC", Slot = "6")]
		public override void OnCraftedItem()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xE8AA50", Offset = "0xE8AA50", VA = "0xE8AA50")]
		private void EnableObjectsOnComplete()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xE8A9C0", Offset = "0xE8A9C0", VA = "0xE8A9C0")]
		private void DisableObjectsOnComplete()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xE8AAE0", Offset = "0xE8AAE0", VA = "0xE8AAE0")]
		private void SetChildrenActive(Transform parent, bool shouldBeActive)
		{
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xE8AB84", Offset = "0xE8AB84", VA = "0xE8AB84")]
		public HomeUpgradeObjective()
		{
		}
	}
	[Token(Token = "0x200056A")]
	public class HomeManager : MonoBehaviour
	{
		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HomeType m_currentHomeType;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HomeDictionary m_homes;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference[] m_homeAssetRefs;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA090B8", Offset = "0xA090B8")]
		[SerializeField]
		private Animator m_upgradeAnimation;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationPlayback m_animationPlayback;

		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimatorPlaybackData m_emptyToTentData;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimatorPlaybackData m_tentToHouseData;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimatorPlaybackData m_houseToMansionData;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AnimatorPlaybackData m_mansionToEndGameData;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private int m_totalAnimationFrames;

		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<HomeType, AssetReference> m_homeRefsDict;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Home m_currentHome;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Home m_homeToReplace;

		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Home m_newHome;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_hasInitialized;

		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private HouseholdObjectLocations m_initialObjectLocations;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HomeManager sm_instance;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private HomeUpgradePhysics m_upgradePhysics;

		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private AnimatorPlaybackData m_currentAnimatorData;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private AnimatorPlaybackData[] m_animatorPlaybackData;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static HouseholdObject[] sm_householdObjects;

		[Token(Token = "0x17000365")]
		public static HomeManager Instance
		{
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0xE88FB0", Offset = "0xE88FB0", VA = "0xE88FB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public static HomeType CurrentHomeType
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0xE88E54", Offset = "0xE88E54", VA = "0xE88E54")]
			get
			{
				return default(HomeType);
			}
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xE890F0", Offset = "0xE890F0", VA = "0xE890F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xE89228", Offset = "0xE89228", VA = "0xE89228")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xE892E4", Offset = "0xE892E4", VA = "0xE892E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xE89018", Offset = "0xE89018", VA = "0xE89018")]
		private static HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xE89454", Offset = "0xE89454", VA = "0xE89454")]
		private void TempBrokenUpgradeFix()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xE86480", Offset = "0xE86480", VA = "0xE86480")]
		public static void RegisterCurrentHome(Home home)
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xE89628", Offset = "0xE89628", VA = "0xE89628")]
		public static void PrepareToRegisterHouseholdObject(HouseholdObject householdObject)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xE896F0", Offset = "0xE896F0", VA = "0xE896F0")]
		private void RegisterHouseholdObjects()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xE89518", Offset = "0xE89518", VA = "0xE89518")]
		private void HandleInitialization()
		{
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xE89838", Offset = "0xE89838", VA = "0xE89838")]
		private void UnlockAchievementsRetroactivly()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xE89A30", Offset = "0xE89A30", VA = "0xE89A30")]
		private bool TryIncreaseHomeLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xE89B48", Offset = "0xE89B48", VA = "0xE89B48")]
		public void UpgradeHome()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xE89DF8", Offset = "0xE89DF8", VA = "0xE89DF8")]
		private AnimatorPlaybackData GetAnimatorPlaybackData(int level)
		{
			return null;
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xE8A228", Offset = "0xE8A228", VA = "0xE8A228")]
		private void OnAnimationPlaybackEvent(AnimationPlaybackEvent e)
		{
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xE8A25C", Offset = "0xE8A25C", VA = "0xE8A25C")]
		private void OnPreInitializeHome(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xE8A3AC", Offset = "0xE8A3AC", VA = "0xE8A3AC")]
		private void OnInitialObjectsSpawned()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xE8A3F8", Offset = "0xE8A3F8", VA = "0xE8A3F8")]
		private void OnRequieredObjectsPreInit()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xE8A558", Offset = "0xE8A558", VA = "0xE8A558")]
		private void OnRequieredObjectsPostInit()
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xE8A5F0", Offset = "0xE8A5F0", VA = "0xE8A5F0")]
		public void OnPostCollisionHandling()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xE8A60C", Offset = "0xE8A60C", VA = "0xE8A60C")]
		public HomeManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056B")]
	public class HomeState : ComponentState
	{
		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasInitializedHouseholdObjects;

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xE87088", Offset = "0xE87088", VA = "0xE87088")]
		public HomeState(bool hasInitializedHouseholdObjects)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200056C")]
	public enum HomeType
	{
		[Token(Token = "0x400200B")]
		Unset,
		[Token(Token = "0x400200C")]
		Camp,
		[Token(Token = "0x400200D")]
		Tent,
		[Token(Token = "0x400200E")]
		House,
		[Token(Token = "0x400200F")]
		Mansion,
		[Token(Token = "0x4002010")]
		EndGame
	}
	[Token(Token = "0x200056D")]
	public struct HouseholdCollision
	{
		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Collider Collider;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Grabbable Grabbable;

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xAD6C4C", Offset = "0xAD6C4C", VA = "0xAD6C4C")]
		public HouseholdCollision(Collider householdObject, Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x200056E")]
	public struct GrabbablePhysicsState
	{
		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Grabbable Grabbable;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool KinematicState;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float MaxDepenetrationVelocity;

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xADB5C0", Offset = "0xADB5C0", VA = "0xADB5C0")]
		public GrabbablePhysicsState(Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x200056F")]
	public class HomeUpgradePhysics
	{
		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD720", Offset = "0x9FD720")]
		private sealed class <HandleCollisions>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeUpgradePhysics <>4__this;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Home newHome;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020DB")]
				[Address(RVA = "0xE8CA44", Offset = "0xE8CA44", VA = "0xE8CA44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020DD")]
				[Address(RVA = "0xE8CAAC", Offset = "0xE8CAAC", VA = "0xE8CAAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xE8B438", Offset = "0xE8B438", VA = "0xE8B438")]
			[DebuggerHidden]
			public <HandleCollisions>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60020D9")]
			[Address(RVA = "0xE8C8C4", Offset = "0xE8C8C4", VA = "0xE8C8C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xE8C8C8", Offset = "0xE8C8C8", VA = "0xE8C8C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020DC")]
			[Address(RVA = "0xE8CA4C", Offset = "0xE8CA4C", VA = "0xE8CA4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD730", Offset = "0x9FD730")]
		private sealed class <HandleGrabbableCollision>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeUpgradePhysics <>4__this;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HouseholdCollision[] objectCollisions;

			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 homePosition;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <collidingObjectsCount>5__2;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020E1")]
				[Address(RVA = "0xD23550", Offset = "0xD23550", VA = "0xD23550", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020E3")]
				[Address(RVA = "0xD235B8", Offset = "0xD235B8", VA = "0xD235B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020DE")]
			[Address(RVA = "0xD23414", Offset = "0xD23414", VA = "0xD23414")]
			[DebuggerHidden]
			public <HandleGrabbableCollision>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60020DF")]
			[Address(RVA = "0xD23440", Offset = "0xD23440", VA = "0xD23440", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020E0")]
			[Address(RVA = "0xD23444", Offset = "0xD23444", VA = "0xD23444", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020E2")]
			[Address(RVA = "0xD23558", Offset = "0xD23558", VA = "0xD23558", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int MaxIterations;

		[Token(Token = "0x4002017")]
		private const bool PlaceWallObjectsInChest = true;

		[Token(Token = "0x4002018")]
		private const float NegativeThreshold = -0.1f;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HomeManager m_targetBehaviour;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider[] m_overlapColliders;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_handleGrabbableCollisionRoutine;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_handleCollisionIterationRoutine;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<HouseholdCollision> m_collidingGrabbablesForHouseholdObject;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_successfulCollisionIteration;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_isDepenetratingColliders;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool m_isCollisionsResolved;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Stashable> m_wallObjects;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GrabbablePhysicsState> m_grabbablesInHouse;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<Grabbable> m_collidingGrabbables;

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xE893B0", Offset = "0xE893B0", VA = "0xE893B0")]
		public void ShutDown(MonoBehaviour behaviour)
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xE8AE1C", Offset = "0xE8AE1C", VA = "0xE8AE1C")]
		private Bounds GetHouseBounds(Home homeToReplace)
		{
			return default(Bounds);
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xE89FD8", Offset = "0xE89FD8", VA = "0xE89FD8")]
		public void PrepareForUpgrade(Home currentHome, Home homeToReplace)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xE8A578", Offset = "0xE8A578", VA = "0xE8A578")]
		public void PlaceWallObjectsInStorage(Home newHome)
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xE8B050", Offset = "0xE8B050", VA = "0xE8B050")]
		public void SetGrabbablePhysics(Grabbable grabbable, bool shouldBeKinematic, float depenetrationVelocityMultiplier)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xE8B200", Offset = "0xE8B200", VA = "0xE8B200")]
		private void WakeAllGrabbables()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xE8AC0C", Offset = "0xE8AC0C", VA = "0xE8AC0C")]
		public void ResetAllGrabbablesKinematic()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xE8AD14", Offset = "0xE8AD14", VA = "0xE8AD14")]
		private void ResetDepenetrationVelocity()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xE8B3A0", Offset = "0xE8B3A0", VA = "0xE8B3A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA188E0", Offset = "0xA188E0")]
		private IEnumerator HandleCollisions(Home newHome)
		{
			return null;
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xE8B464", Offset = "0xE8B464", VA = "0xE8B464")]
		private Coroutine HandleObjectCollision(Home home)
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xE8B5B8", Offset = "0xE8B5B8", VA = "0xE8B5B8")]
		private void AddHouseholdObjectCollisions(Home home)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xE8B7E4", Offset = "0xE8B7E4", VA = "0xE8B7E4")]
		private void AddPrefabCollidersCollisions(Home home)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xE8A4D0", Offset = "0xE8A4D0", VA = "0xE8A4D0")]
		public void StartCollisionHandling(HomeManager behaviour, Home newHome)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xE8BB1C", Offset = "0xE8BB1C", VA = "0xE8BB1C")]
		private Grabbable[] GetCollisionsForObject(Collider householdObjectCollider)
		{
			return null;
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xE8BD90", Offset = "0xE8BD90", VA = "0xE8BD90")]
		private void GetOverlapBoxProperties(BoxCollider boxCollider, out Vector3 origin, out Vector3 halfExtents)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xE8C19C", Offset = "0xE8C19C", VA = "0xE8C19C")]
		private Grabbable[] GetCollisionsForBounds(Bounds bounds, Vector3 scale, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xE8BFC0", Offset = "0xE8BFC0", VA = "0xE8BFC0")]
		private Grabbable[] GetOverlapBoxCollisions(Vector3 center, Vector3 size, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xE8BA60", Offset = "0xE8BA60", VA = "0xE8BA60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18944", Offset = "0xA18944")]
		private IEnumerator HandleGrabbableCollision(Vector3 homePosition, HouseholdCollision[] objectCollisions)
		{
			return null;
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xE8C240", Offset = "0xE8C240", VA = "0xE8C240")]
		private bool TryMoveOutOfCollision(Vector3 homePosition, Collider collider, Grabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xE8C498", Offset = "0xE8C498", VA = "0xE8C498")]
		private bool ReversedBoxcast(Vector3 origin, Vector3 houseCentreDirection, Collider[] grabbableColliders, out Vector3 depenetration)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xE8B0F0", Offset = "0xE8B0F0", VA = "0xE8B0F0")]
		private void AddObjectToStorageInventory(Home currentHome, List<Stashable> wallObjects)
		{
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xE8A72C", Offset = "0xE8A72C", VA = "0xE8A72C")]
		public HomeUpgradePhysics()
		{
		}
	}
	[Token(Token = "0x2000572")]
	public class HomeUpgradeQuestState : ComponentState
	{
		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HomeType HomeType;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xD235C0", Offset = "0xD235C0", VA = "0xD235C0")]
		public HomeUpgradeQuestState(HomeType homeType)
		{
		}
	}
	[Token(Token = "0x2000573")]
	public class HomeUpgradeQuests : SaveableComponent, IInitializable
	{
		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD740", Offset = "0x9FD740")]
		private sealed class <ShowNewQuestAfterDelay>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HomeUpgradeQuests <>4__this;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60020EE")]
				[Address(RVA = "0xD23C68", Offset = "0xD23C68", VA = "0xD23C68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60020F0")]
				[Address(RVA = "0xD23CD0", Offset = "0xD23CD0", VA = "0xD23CD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60020EB")]
			[Address(RVA = "0xD23AA0", Offset = "0xD23AA0", VA = "0xD23AA0")]
			[DebuggerHidden]
			public <ShowNewQuestAfterDelay>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xD23B8C", Offset = "0xD23B8C", VA = "0xD23B8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60020ED")]
			[Address(RVA = "0xD23B90", Offset = "0xD23B90", VA = "0xD23B90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60020EF")]
			[Address(RVA = "0xD23C70", Offset = "0xD23C70", VA = "0xD23C70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_upgradeQuests;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] m_glitterParticles;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PotpotAnimationController m_potpotController;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SendQuestEvent m_questEvent;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HomeType m_currentHomeType;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_initialized;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private WaitForSeconds m_waitForPopOutInstruction;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine m_showNewQuestRoutine;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_previousHouseUpgradeLevel;

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xD235EC", Offset = "0xD235EC", VA = "0xD235EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xD236D4", Offset = "0xD236D4", VA = "0xD236D4", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xD2373C", Offset = "0xD2373C", VA = "0xD2373C", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xD2382C", Offset = "0xD2382C", VA = "0xD2382C")]
		public void Performupgrade()
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xD23A24", Offset = "0xD23A24", VA = "0xD23A24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18A48", Offset = "0xA18A48")]
		private IEnumerator ShowNewQuestAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xD23ACC", Offset = "0xD23ACC", VA = "0xD23ACC")]
		public HomeUpgradeQuests()
		{
		}
	}
	[Token(Token = "0x2000575")]
	public class Camp : Home
	{
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xE8641C", Offset = "0xE8641C", VA = "0xE8641C", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xE867F8", Offset = "0xE867F8", VA = "0xE867F8", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xE86800", Offset = "0xE86800", VA = "0xE86800")]
		public Camp()
		{
		}
	}
	[Token(Token = "0x2000576")]
	public class EndGameHome : Home
	{
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xE868A8", Offset = "0xE868A8", VA = "0xE868A8", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xE8690C", Offset = "0xE8690C", VA = "0xE8690C", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xE86914", Offset = "0xE86914", VA = "0xE86914")]
		public EndGameHome()
		{
		}
	}
	[Token(Token = "0x2000577")]
	public enum HouseholdObjectType
	{
		[Token(Token = "0x400203C")]
		Stove,
		[Token(Token = "0x400203D")]
		CraftingMachine,
		[Token(Token = "0x400203E")]
		Chest,
		[Token(Token = "0x400203F")]
		Clipboard,
		[Token(Token = "0x4002040")]
		Mailbox,
		[Token(Token = "0x4002041")]
		Workbench,
		[Token(Token = "0x4002042")]
		AdvancedStove,
		[Token(Token = "0x4002043")]
		RecipeBoard
	}
	[Serializable]
	[Token(Token = "0x2000578")]
	public abstract class Home : SaveableComponent, IInitializable
	{
		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_stoveLocation;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_craftingMachineLocation;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_chestLocation;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_clipboardLocation;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_mailboxLocation;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_workbenchLocation;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_advancedStoveLocation;

		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_recipeBoardLocation;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int m_overrideHomeLevel;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected RequieredHouseholdObjects m_requieredHouseholdObjects;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Collider[] m_prefabColliders;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Storage m_storage;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private HomeState m_currentState;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_hasInitializedHouseholdObjects;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_initialized;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<HouseholdObjectType> m_spawnedObjectTypes;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Action m_objectsPreInitCompleteAction;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Action m_objectsPostInitiCompleteAction;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MeshRenderer[] disabledRenderers;

		[Token(Token = "0x1700036D")]
		public HomeType HomeType
		{
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0xE8697C", Offset = "0xE8697C", VA = "0xE8697C")]
			get
			{
				return default(HomeType);
			}
		}

		[Token(Token = "0x1700036E")]
		public Storage Storage
		{
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0xE86988", Offset = "0xE86988", VA = "0xE86988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public Vector3 StorageFullPosition
		{
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0xE86990", Offset = "0xE86990", VA = "0xE86990")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000370")]
		public bool HasInitializedHouseholdObjects
		{
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0xE86A90", Offset = "0xE86A90", VA = "0xE86A90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000371")]
		public HomeState State
		{
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0xE86AF8", Offset = "0xE86AF8", VA = "0xE86AF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public Collider[] PrefabColliders
		{
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0xE86B00", Offset = "0xE86B00", VA = "0xE86B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public int OverrideHomeLevel
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0xE86B08", Offset = "0xE86B08", VA = "0xE86B08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020FE")]
		protected abstract HomeType GetHomeType();

		[Token(Token = "0x60020FF")]
		public abstract void OnInitialized();

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xE86B10", Offset = "0xE86B10", VA = "0xE86B10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xE86F04", Offset = "0xE86F04", VA = "0xE86F04")]
		public void EnableRenderers()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xE86E34", Offset = "0xE86E34", VA = "0xE86E34")]
		public void DisableRenderers()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xE87018", Offset = "0xE87018", VA = "0xE87018", Slot = "4")]
		public override ComponentState CreateState()
		{
			return null;
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xE870B8", Offset = "0xE870B8", VA = "0xE870B8")]
		public void SetStateProperties(HomeState previousHomeState, bool setStateProperties = true)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xE870E4", Offset = "0xE870E4", VA = "0xE870E4", Slot = "5")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xE86AC4", Offset = "0xE86AC4", VA = "0xE86AC4")]
		private bool GetHasInitializedHouseholdObjects()
		{
			return default(bool);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xE871AC", Offset = "0xE871AC", VA = "0xE871AC")]
		private void SetHouseHoldObjectsInitialized()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xE871D0", Offset = "0xE871D0", VA = "0xE871D0")]
		public bool TrySetStorage()
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xE872D8", Offset = "0xE872D8", VA = "0xE872D8")]
		public void RegisterHouseHoldObject(HouseholdObjectType type, Transform houseHoldObjectTransform)
		{
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xE86994", Offset = "0xE86994", VA = "0xE86994")]
		private Vector3 GetAboveChestFront()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xE8735C", Offset = "0xE8735C", VA = "0xE8735C")]
		public void SpawnInitialObjects(RequieredHouseholdObjects newRequieredObjects, Action objectsPreInitializeAction)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xE87778", Offset = "0xE87778", VA = "0xE87778")]
		private void RemoveHouseholdObject(HouseholdObjectType type)
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xE878E0", Offset = "0xE878E0", VA = "0xE878E0")]
		private bool ShouldRemoveHouseholdObject(AssetReference oldObj, AssetReference newObj)
		{
			return default(bool);
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xE87984", Offset = "0xE87984", VA = "0xE87984")]
		private bool ShouldSpawnHouseholdObject(AssetReference oldObj, AssetReference newObj)
		{
			return default(bool);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xE87A28", Offset = "0xE87A28", VA = "0xE87A28")]
		public void RemoveDeletedObjects(RequieredHouseholdObjects newRequieredObjects)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xE87B78", Offset = "0xE87B78", VA = "0xE87B78")]
		public void SpawnMissingObjects(RequieredHouseholdObjects newRequieredObjects, Action objectsPreInitializeAction, Action objectsPostInitializeAction)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xE87FCC", Offset = "0xE87FCC", VA = "0xE87FCC")]
		private void SpawnUpgradeGifts(RequieredHouseholdObjects newRequieredObjects)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xE880F8", Offset = "0xE880F8", VA = "0xE880F8")]
		private void OnPreInitializeObjects(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xE8828C", Offset = "0xE8828C", VA = "0xE8828C")]
		private void OnPostInitializeObjects(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xE882A0", Offset = "0xE882A0", VA = "0xE882A0")]
		private void OnPostInitializeGifts(SpawnOperationCallbackData obj)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xE88208", Offset = "0xE88208", VA = "0xE88208")]
		private void SetLocationReference(HouseholdObjectType type, Transform spawnedObjectTransform)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xE87874", Offset = "0xE87874", VA = "0xE87874")]
		private Transform GetLocationReference(HouseholdObjectType type)
		{
			return null;
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xE86B34", Offset = "0xE86B34", VA = "0xE86B34")]
		public void RemovePlaceHolderObjects()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xE88330", Offset = "0xE88330", VA = "0xE88330")]
		private void RemoveNonTransformComponents(GameObject go)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0xE88448", Offset = "0xE88448", VA = "0xE88448")]
		public void PlaceObjectsAtLocations(HouseholdObjectLocations newHouseLocations)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xE886AC", Offset = "0xE886AC", VA = "0xE886AC")]
		public void ReplaceObjectLocations(HouseholdObjectLocations oldHouseLocations)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0xE887EC", Offset = "0xE887EC", VA = "0xE887EC")]
		public RequieredHouseholdObjects GetRequieredObjects()
		{
			return null;
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xE88588", Offset = "0xE88588", VA = "0xE88588")]
		public Transform GetAssignedTransform(Transform target, Transform placeholder)
		{
			return null;
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xE88A6C", Offset = "0xE88A6C", VA = "0xE88A6C")]
		public void PreUpgrade()
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xE88CC0", Offset = "0xE88CC0", VA = "0xE88CC0")]
		public void PostCollisionHandling()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xE882A4", Offset = "0xE882A4", VA = "0xE882A4")]
		private void OnUpgradeCompleted()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xE88B38", Offset = "0xE88B38", VA = "0xE88B38")]
		private void PreUpgrade(Transform target)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xE88CC8", Offset = "0xE88CC8", VA = "0xE88CC8")]
		private void PostUpgrade(Transform target)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xE887F4", Offset = "0xE887F4", VA = "0xE887F4")]
		private void PreMove(IHouseholdMovable[] movables)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xE88930", Offset = "0xE88930", VA = "0xE88930")]
		private void PostMove(IHouseholdMovable[] movables)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xE88EB0", Offset = "0xE88EB0", VA = "0xE88EB0")]
		public void DisableCollision()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xE88AF8", Offset = "0xE88AF8", VA = "0xE88AF8")]
		public HouseholdObjectLocations GetHouseholdObjectLocations()
		{
			return default(HouseholdObjectLocations);
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xE86804", Offset = "0xE86804", VA = "0xE86804")]
		protected Home()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000579")]
	public class HomeDictionary : SerializableDictionary<HomeType, GameObject>
	{
		[Token(Token = "0x6002127")]
		[Address(RVA = "0xE88F60", Offset = "0xE88F60", VA = "0xE88F60")]
		public HomeDictionary()
		{
		}
	}
	[Token(Token = "0x200057A")]
	public class House : Home
	{
		[Token(Token = "0x6002128")]
		[Address(RVA = "0xD23CD8", Offset = "0xD23CD8", VA = "0xD23CD8", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xD23D40", Offset = "0xD23D40", VA = "0xD23D40", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xD23D48", Offset = "0xD23D48", VA = "0xD23D48")]
		public House()
		{
		}
	}
	[Token(Token = "0x200057B")]
	public class Mansion : Home
	{
		[Token(Token = "0x600212B")]
		[Address(RVA = "0xD25008", Offset = "0xD25008", VA = "0xD25008", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xD25070", Offset = "0xD25070", VA = "0xD25070", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0xD25078", Offset = "0xD25078", VA = "0xD25078")]
		public Mansion()
		{
		}
	}
	[Token(Token = "0x200057C")]
	public class Tent : Home
	{
		[Token(Token = "0x600212E")]
		[Address(RVA = "0xD259FC", Offset = "0xD259FC", VA = "0xD259FC", Slot = "7")]
		public override void OnInitialized()
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0xD25A64", Offset = "0xD25A64", VA = "0xD25A64", Slot = "6")]
		protected override HomeType GetHomeType()
		{
			return default(HomeType);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0xD25A6C", Offset = "0xD25A6C", VA = "0xD25A6C")]
		public Tent()
		{
		}
	}
	[Token(Token = "0x200057D")]
	public class HouseholdObject : MonoBehaviour
	{
		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HouseholdObjectType m_householdObjectType;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider m_householdObjectCollider;

		[Token(Token = "0x17000374")]
		public Collider HouseholdObjectCollider
		{
			[Token(Token = "0x6002131")]
			[Address(RVA = "0xD23D84", Offset = "0xD23D84", VA = "0xD23D84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public HouseholdObjectType Type
		{
			[Token(Token = "0x6002132")]
			[Address(RVA = "0xD23D8C", Offset = "0xD23D8C", VA = "0xD23D8C")]
			get
			{
				return default(HouseholdObjectType);
			}
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xD23D94", Offset = "0xD23D94", VA = "0xD23D94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xD23DFC", Offset = "0xD23DFC", VA = "0xD23DFC")]
		public HouseholdObject()
		{
		}
	}
	[Token(Token = "0x200057E")]
	public struct HouseholdObjectLocations
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform StoveLocation;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform CraftingMachineLocation;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform ChestLocation;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ClipboardLocation;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform MailboxLocation;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform WorkbenchLocation;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform AdvancedStoveLocation;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform RecipeBoardLocation;

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xAD6CBC", Offset = "0xAD6CBC", VA = "0xAD6CBC")]
		public HouseholdObjectLocations(Transform stoveLocation, Transform craftingMachineLocation, Transform chestLocation, Transform clipboardLocation, Transform mailboxLocation, Transform workbenchLocation, Transform advancedStoveLocation, Transform recipeBoardLocation)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xAD6CCC", Offset = "0xAD6CCC", VA = "0xAD6CCC")]
		public Transform[] GetObjectsAsArray()
		{
			return null;
		}
	}
	[Token(Token = "0x200057F")]
	public interface IHouseholdMovable
	{
		[Token(Token = "0x6002137")]
		void OnPreUpgrade(int homeLevel);

		[Token(Token = "0x6002138")]
		void OnPostUpgrade(int homeLevel);

		[Token(Token = "0x6002139")]
		void OnBeforeMove(int homeLevel);

		[Token(Token = "0x600213A")]
		void OnMoved(int homeLevel);
	}
	[Token(Token = "0x2000580")]
	public class MailBox : MonoBehaviour, IHouseholdMovable
	{
		[Token(Token = "0x2000581")]
		private enum FlagState
		{
			[Token(Token = "0x400206B")]
			Empty,
			[Token(Token = "0x400206C")]
			GotMail
		}

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_upRotation;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 m_downRotation;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_flag;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoxCollider m_boxTrigger;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FlagState m_currentFlagState;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<Grabbable, Collider> m_objectsInBox;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] m_overlappingColliders;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3[] m_positionOffsets;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform[] m_transformRefs;

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xD24110", Offset = "0xD24110", VA = "0xD24110", Slot = "4")]
		public void OnPreUpgrade(int homeLevel)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xD2459C", Offset = "0xD2459C", VA = "0xD2459C", Slot = "6")]
		public void OnBeforeMove(int homeLevel)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xD248AC", Offset = "0xD248AC", VA = "0xD248AC", Slot = "7")]
		public void OnMoved(int homeLevel)
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0xD24A78", Offset = "0xD24A78", VA = "0xD24A78", Slot = "5")]
		public void OnPostUpgrade(int homeLevel)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0xD24BDC", Offset = "0xD24BDC", VA = "0xD24BDC")]
		private bool TryAddGrabbableFromCollider(Collider other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0xD244E0", Offset = "0xD244E0", VA = "0xD244E0")]
		private bool TryAddGrabbableFromCollider(Collider other, out Grabbable grabbable)
		{
			return default(bool);
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0xD24C98", Offset = "0xD24C98", VA = "0xD24C98")]
		private bool TryGetGrabbableFromCollider(Collider other, out Grabbable grabbable, bool includeInactive = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0xD24DBC", Offset = "0xD24DBC", VA = "0xD24DBC")]
		private void UpdateFlagState()
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0xD242B0", Offset = "0xD242B0", VA = "0xD242B0")]
		private void GetOverlapBoxProperties(BoxCollider boxCollider, out Vector3 origin, out Vector3 halfExtents)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xD24EAC", Offset = "0xD24EAC", VA = "0xD24EAC")]
		public MailBox()
		{
		}
	}
	[Token(Token = "0x2000582")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FD750", Offset = "0x9FD750")]
	public class RequieredHouseholdObjects : ScriptableObject
	{
		[Token(Token = "0x400206D")]
		public const int Count = 8;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AssetReference m_stove;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AssetReference m_craftingMachine;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AssetReference m_chest;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AssetReference m_clipboard;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AssetReference m_mailbox;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AssetReference m_workbench;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AssetReference m_advancedStove;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AssetReference m_recipeBoard;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA09314", Offset = "0xA09314")]
		[SerializeField]
		private AssetReference m_upgradeGifts;

		[Token(Token = "0x17000376")]
		public AssetReference Stove
		{
			[Token(Token = "0x6002145")]
			[Address(RVA = "0xD25080", Offset = "0xD25080", VA = "0xD25080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000377")]
		public AssetReference CraftingMachine
		{
			[Token(Token = "0x6002146")]
			[Address(RVA = "0xD25088", Offset = "0xD25088", VA = "0xD25088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000378")]
		public AssetReference Chest
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xD25090", Offset = "0xD25090", VA = "0xD25090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public AssetReference Clipboard
		{
			[Token(Token = "0x6002148")]
			[Address(RVA = "0xD25098", Offset = "0xD25098", VA = "0xD25098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		public AssetReference Mailbox
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xD250A0", Offset = "0xD250A0", VA = "0xD250A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037B")]
		public AssetReference Workbench
		{
			[Token(Token = "0x600214A")]
			[Address(RVA = "0xD250A8", Offset = "0xD250A8", VA = "0xD250A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037C")]
		public AssetReference AdvancedStove
		{
			[Token(Token = "0x600214B")]
			[Address(RVA = "0xD250B0", Offset = "0xD250B0", VA = "0xD250B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public AssetReference UpgradeGifts
		{
			[Token(Token = "0x600214C")]
			[Address(RVA = "0xD250B8", Offset = "0xD250B8", VA = "0xD250B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037E")]
		public AssetReference RecipeBoard
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0xD250C0", Offset = "0xD250C0", VA = "0xD250C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xD250C8", Offset = "0xD250C8", VA = "0xD250C8")]
		public AssetReference[] GetAllObjects()
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0xD25308", Offset = "0xD25308", VA = "0xD25308")]
		public RequieredHouseholdObjects()
		{
		}
	}
	[Token(Token = "0x2000583")]
	public class StickyNotePosition : MonoBehaviour
	{
		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private StickyNote currentSticky;

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xD25310", Offset = "0xD25310", VA = "0xD25310")]
		public void Init()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xD255BC", Offset = "0xD255BC", VA = "0xD255BC")]
		public void SetSticky(StickyNote sticky)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xD25778", Offset = "0xD25778", VA = "0xD25778")]
		private void OnStickyGrabbed()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xD25874", Offset = "0xD25874", VA = "0xD25874")]
		public bool HasSticky()
		{
			return default(bool);
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xD258F0", Offset = "0xD258F0", VA = "0xD258F0")]
		public void OnMoved()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xD259F4", Offset = "0xD259F4", VA = "0xD259F4")]
		public StickyNotePosition()
		{
		}
	}
}
namespace NeatCorp.Core
{
	[Token(Token = "0x2000584")]
	public class AttachSlotEventDispatcher : MonoBehaviour
	{
		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected AttachSlot m_attachSlot;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool m_dispatchOnAttached;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		protected bool m_dispatchOnDetached;

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1105C74", Offset = "0x1105C74", VA = "0x1105C74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1105D48", Offset = "0x1105D48", VA = "0x1105D48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1105E1C", Offset = "0x1105E1C", VA = "0x1105E1C", Slot = "4")]
		protected virtual void OnAttached(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1105F14", Offset = "0x1105F14", VA = "0x1105F14", Slot = "5")]
		protected virtual void OnDetached(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x1105ED4", Offset = "0x1105ED4", VA = "0x1105ED4")]
		protected bool TryGetValidInstance(out EventManager instance)
		{
			return default(bool);
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1105FCC", Offset = "0x1105FCC", VA = "0x1105FCC")]
		public AttachSlotEventDispatcher()
		{
		}
	}
	[Token(Token = "0x2000585")]
	public enum HMDActivityStatusType
	{
		[Token(Token = "0x400207C")]
		Aquired,
		[Token(Token = "0x400207D")]
		Lost
	}
	[Token(Token = "0x2000586")]
	public enum HMDMountStatusType
	{
		[Token(Token = "0x400207F")]
		Mounted,
		[Token(Token = "0x4002080")]
		Unmounted
	}
}
namespace NeatCorp.Core.Platform
{
	[Token(Token = "0x2000587")]
	public class DefaultPlatform : VRPlatform
	{
		[Token(Token = "0x600215C")]
		[Address(RVA = "0x1105FD4", Offset = "0x1105FD4", VA = "0x1105FD4", Slot = "4")]
		protected override void OnInitialized()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x1105FDC", Offset = "0x1105FDC", VA = "0x1105FDC", Slot = "5")]
		protected override void OnShutDown()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x1105FE0", Offset = "0x1105FE0", VA = "0x1105FE0", Slot = "6")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x1105FE4", Offset = "0x1105FE4", VA = "0x1105FE4")]
		public DefaultPlatform()
		{
		}
	}
	[Token(Token = "0x2000588")]
	public abstract class VRPlatform
	{
		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static VRPlatform Instance;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA093A0", Offset = "0xA093A0")]
		private bool <ShouldUpdate>k__BackingField;

		[Token(Token = "0x1700037F")]
		public bool ShouldUpdate
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x1105FF4", Offset = "0x1105FF4", VA = "0x1105FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18AFC", Offset = "0xA18AFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002161")]
			[Address(RVA = "0x1105FFC", Offset = "0x1105FFC", VA = "0x1105FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18B0C", Offset = "0xA18B0C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x1106008", Offset = "0x1106008", VA = "0x1106008")]
		public static void Initilize()
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x11060A0", Offset = "0x11060A0", VA = "0x11060A0")]
		public static void ShutDown()
		{
		}

		[Token(Token = "0x6002164")]
		protected abstract void OnInitialized();

		[Token(Token = "0x6002165")]
		protected abstract void OnShutDown();

		[Token(Token = "0x6002166")]
		public abstract void OnUpdate();

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x1105FEC", Offset = "0x1105FEC", VA = "0x1105FEC")]
		protected VRPlatform()
		{
		}
	}
}
namespace NeatCorp.Audio
{
	[Token(Token = "0x2000589")]
	public class ResonanceCoreInitializer : MonoBehaviour
	{
		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GestrumentCore m_core;

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x110558C", Offset = "0x110558C", VA = "0x110558C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x1105644", Offset = "0x1105644", VA = "0x1105644")]
		public ResonanceCoreInitializer()
		{
		}
	}
}
namespace NeatCorp.Animation
{
	[Token(Token = "0x200058A")]
	public class AnimationPlaybackEventDispatcher
	{
		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected AnimationPlaybackEvent m_stopEvent;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected AnimationPlaybackEvent m_playEvent;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA093C0", Offset = "0xA093C0")]
		private bool <HasStopEvent>k__BackingField;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA093D0", Offset = "0xA093D0")]
		private bool <HasPlayEvent>k__BackingField;

		[Token(Token = "0x17000380")]
		public bool HasStopEvent
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0x1102DC4", Offset = "0x1102DC4", VA = "0x1102DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18B1C", Offset = "0xA18B1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000381")]
		public bool HasPlayEvent
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0x1102DCC", Offset = "0x1102DCC", VA = "0x1102DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18B2C", Offset = "0xA18B2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x1102DD4", Offset = "0x1102DD4", VA = "0x1102DD4")]
		public void DispatchPlayEvent(Animator animator)
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x1102EA0", Offset = "0x1102EA0", VA = "0x1102EA0")]
		public void DispatchStopEvent(Animator animator)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x1102F6C", Offset = "0x1102F6C", VA = "0x1102F6C")]
		public AnimationPlaybackEventDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058B")]
	public enum AnimationPlaybackEventType
	{
		[Token(Token = "0x4002089")]
		OnPlay,
		[Token(Token = "0x400208A")]
		OnStop
	}
	[Token(Token = "0x200058C")]
	public class AnimationStateEventDispatcher
	{
		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected StateMachineBehaviourEvent m_event;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AnimationStateEventType m_eventType;

		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_hasEvent;

		[Token(Token = "0x17000382")]
		public bool HasEvent
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x1102F74", Offset = "0x1102F74", VA = "0x1102F74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x1102FB4", Offset = "0x1102FB4", VA = "0x1102FB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1102FC0", Offset = "0x1102FC0", VA = "0x1102FC0")]
		public void CreateEvent(StateMachineBehaviourEvent e)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x1103000", Offset = "0x1103000", VA = "0x1103000")]
		public void UpdateEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x1103088", Offset = "0x1103088", VA = "0x1103088")]
		private void Dispatch()
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x1102F94", Offset = "0x1102F94", VA = "0x1102F94")]
		private bool CheckEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x11030E0", Offset = "0x11030E0", VA = "0x11030E0")]
		public AnimationStateEventDispatcher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200058D")]
	public enum AnimationStateEventType
	{
		[Token(Token = "0x400208F")]
		OnEnter,
		[Token(Token = "0x4002090")]
		OnUpdate,
		[Token(Token = "0x4002091")]
		OnExit
	}
	[Token(Token = "0x200058E")]
	public enum ParticleSystemPlaybackType
	{
		[Token(Token = "0x4002093")]
		Unchanged,
		[Token(Token = "0x4002094")]
		Play,
		[Token(Token = "0x4002095")]
		Pause,
		[Token(Token = "0x4002096")]
		Stop
	}
	[Token(Token = "0x200058F")]
	public enum ParticleObjectActivation
	{
		[Token(Token = "0x4002098")]
		Unchanged,
		[Token(Token = "0x4002099")]
		Enable,
		[Token(Token = "0x400209A")]
		Disable
	}
	[Serializable]
	[Token(Token = "0x2000590")]
	public struct AnimationEffectData
	{
		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Index;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ParticleObjectActivation Activation;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ParticleSystemPlaybackType Playback;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem ParticleSystem;
	}
	[Token(Token = "0x2000591")]
	public class PlayEffectFromAnimation : MonoBehaviour
	{
		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationEffectData[] m_effects;

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x110324C", Offset = "0x110324C", VA = "0x110324C")]
		public void TriggerEffect(int index)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x1103344", Offset = "0x1103344", VA = "0x1103344")]
		public PlayEffectFromAnimation()
		{
		}
	}
}
namespace NeatCorp.Animation.HandAnimation
{
	[Token(Token = "0x2000592")]
	public class HandAnimatorHash
	{
		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int Teleporting;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int TeleportInvalid;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int ChargingUp;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int CancelChargingUp;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int TriggerReaction;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int TeleportSuccessful;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int CrystalGrabbed;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int CrystalReadyToInsert;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int CrystalDroppedIn;
	}
}
namespace NeatCorp.Animation.Potpots
{
	[Token(Token = "0x2000593")]
	public class PotpotAnimationController : MonoBehaviour
	{
		[Token(Token = "0x2000594")]
		public enum PointDirection
		{
			[Token(Token = "0x40020C9")]
			None,
			[Token(Token = "0x40020CA")]
			Up,
			[Token(Token = "0x40020CB")]
			Down
		}

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD7BC", Offset = "0x9FD7BC")]
		private sealed class <PlayPoofAndRemoveRoutine>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PotpotAnimationController <>4__this;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600218F")]
				[Address(RVA = "0x11040D4", Offset = "0x11040D4", VA = "0x11040D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002191")]
				[Address(RVA = "0x110413C", Offset = "0x110413C", VA = "0x110413C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600218C")]
			[Address(RVA = "0x1103B58", Offset = "0x1103B58", VA = "0x1103B58")]
			[DebuggerHidden]
			public <PlayPoofAndRemoveRoutine>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600218D")]
			[Address(RVA = "0x1103F00", Offset = "0x1103F00", VA = "0x1103F00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600218E")]
			[Address(RVA = "0x1103F04", Offset = "0x1103F04", VA = "0x1103F04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002190")]
			[Address(RVA = "0x11040DC", Offset = "0x11040DC", VA = "0x11040DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD7CC", Offset = "0x9FD7CC")]
		private sealed class <PlayTeleportRoutine>d__44 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PotpotAnimationController <>4__this;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002195")]
				[Address(RVA = "0x11043F4", Offset = "0x11043F4", VA = "0x11043F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002197")]
				[Address(RVA = "0x110445C", Offset = "0x110445C", VA = "0x110445C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0x1103CC8", Offset = "0x1103CC8", VA = "0x1103CC8")]
			[DebuggerHidden]
			public <PlayTeleportRoutine>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0x1104144", Offset = "0x1104144", VA = "0x1104144", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002194")]
			[Address(RVA = "0x1104148", Offset = "0x1104148", VA = "0x1104148", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002196")]
			[Address(RVA = "0x11043FC", Offset = "0x11043FC", VA = "0x11043FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD7DC", Offset = "0x9FD7DC")]
		private sealed class <WaitForLookAt>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PotpotAnimationController <>4__this;

			[Token(Token = "0x17000387")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600219B")]
				[Address(RVA = "0x110455C", Offset = "0x110455C", VA = "0x110455C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600219D")]
				[Address(RVA = "0x11045C4", Offset = "0x11045C4", VA = "0x11045C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1103D70", Offset = "0x1103D70", VA = "0x1103D70")]
			[DebuggerHidden]
			public <WaitForLookAt>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6002199")]
			[Address(RVA = "0x1104464", Offset = "0x1104464", VA = "0x1104464", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1104468", Offset = "0x1104468", VA = "0x1104468", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600219C")]
			[Address(RVA = "0x1104564", Offset = "0x1104564", VA = "0x1104564", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020A9")]
		private const float NotificationInterval = 30f;

		[Token(Token = "0x40020AA")]
		private const float MinPointInterval = 5f;

		[Token(Token = "0x40020AB")]
		private const float MaxPointInterval = 15f;

		[Token(Token = "0x40020AC")]
		private const string RootJointName = "potpot_ROOT_jnt";

		[Token(Token = "0x40020AD")]
		private const float MinPointDuration = 1f;

		[Token(Token = "0x40020AE")]
		private const float MinNotifyDuration = 1f;

		[Token(Token = "0x40020AF")]
		private const float MinLookAtFromDistanceDuration = 7f;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rootJoint;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LookAtPlayer m_lookAtPlayer;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float CloseProximity;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_canPoint;

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PointDirection m_pointDirection;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool m_canWave;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onRemoved;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_timeSinceNotified;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_timeSincePointed;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isPlayerNear;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isPlayerClose;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_currentPointingInterval;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_pointDirectionParam;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WaitForSeconds m_delayDisappearAnim;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private WaitForSeconds m_waitForDisappearAnim;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WaitForSeconds m_waitForLookAtDuration;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WaitForSeconds m_waitForHappyAnim;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WaitForSeconds m_waitForTeleport;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool m_isNotifing;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool m_isPointing;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine m_lookAtRoutine;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_isWaving;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool m_lookingAtPlayer;

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x11033B0", Offset = "0x11033B0", VA = "0x11033B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x1103450", Offset = "0x1103450", VA = "0x1103450")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0x1103458", Offset = "0x1103458", VA = "0x1103458")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0x1103538", Offset = "0x1103538", VA = "0x1103538")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0x1103614", Offset = "0x1103614", VA = "0x1103614")]
		private void Update()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0x1103678", Offset = "0x1103678", VA = "0x1103678")]
		private void UpdateCloseProximity()
		{
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0x11038B8", Offset = "0x11038B8", VA = "0x11038B8")]
		private void UpdateWaving()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0x1103788", Offset = "0x1103788", VA = "0x1103788")]
		private void UpdatePointing()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1103AB0", Offset = "0x1103AB0", VA = "0x1103AB0")]
		public void Disappear()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x1103ADC", Offset = "0x1103ADC", VA = "0x1103ADC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18B3C", Offset = "0xA18B3C")]
		private IEnumerator PlayPoofAndRemoveRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x1103B84", Offset = "0x1103B84", VA = "0x1103B84")]
		public void PlayHappyReaction()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x1103C04", Offset = "0x1103C04", VA = "0x1103C04")]
		public void TeleportToPosition(Transform target)
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x1103C30", Offset = "0x1103C30", VA = "0x1103C30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18BA0", Offset = "0xA18BA0")]
		private IEnumerator PlayTeleportRoutine(Transform target)
		{
			return null;
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x1103A30", Offset = "0x1103A30", VA = "0x1103A30")]
		public void LookAtPlayer()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x1103CF4", Offset = "0x1103CF4", VA = "0x1103CF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA18C04", Offset = "0xA18C04")]
		private IEnumerator WaitForLookAt()
		{
			return null;
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x1103880", Offset = "0x1103880", VA = "0x1103880")]
		public void StopLookingAtPlayer()
		{
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1103D9C", Offset = "0x1103D9C", VA = "0x1103D9C")]
		public void SetCanWave(bool b)
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1103DA8", Offset = "0x1103DA8", VA = "0x1103DA8")]
		public void SetCanPoint(bool b)
		{
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1103DB4", Offset = "0x1103DB4", VA = "0x1103DB4")]
		public PotpotAnimationController()
		{
		}
	}
	[Token(Token = "0x2000598")]
	public static class PotpotAnimations
	{
		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int SpeedParam;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int MovingParam;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int BubbleThingsParam;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly int WavingParam;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly int PointingUpParam;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly int PointingDownParam;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly int DisappearingParam;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static readonly int PoofOut;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly int ForceIdleParam;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly int HappyReactionParam;
	}
}
namespace NeatCorp.Events
{
	[Token(Token = "0x2000599")]
	public class ImportantItemUsedEvent : GameEvent
	{
		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ImportantItem ItemRef;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable GrabbableRef;

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xE7D280", Offset = "0xE7D280", VA = "0xE7D280")]
		public ImportantItemUsedEvent(ImportantItem itemRef, Grabbable grabbableRef)
		{
		}
	}
	[Token(Token = "0x200059A")]
	public class UnlockMerchantEvent : GameEvent
	{
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MerchantType MerchantType;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsQuestCompleted;

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xE7D340", Offset = "0xE7D340", VA = "0xE7D340")]
		public UnlockMerchantEvent(MerchantType merchantType, bool isQuestCompleted)
		{
		}
	}
	[Token(Token = "0x200059B")]
	public class AttachSlotEvent : GameEvent
	{
		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveObjectBase SaveObject;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Grabbable Grabbable;

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xE7CF30", Offset = "0xE7CF30", VA = "0xE7CF30")]
		public AttachSlotEvent(SaveObjectBase saveObject, Grabbable grabbable)
		{
		}
	}
	[Token(Token = "0x200059C")]
	public class AttachSlotDetachedEvent : AttachSlotEvent
	{
		[Token(Token = "0x60021A2")]
		[Address(RVA = "0xE7CF2C", Offset = "0xE7CF2C", VA = "0xE7CF2C")]
		public AttachSlotDetachedEvent(SaveObjectBase saveObj, Grabbable grabbable)
		{
		}
	}
}
namespace NeatCorp.Events.Settings
{
	[Token(Token = "0x200059D")]
	public class SettingsChangedEvent : GameEvent
	{
		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameSettingId Setting;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsOn;

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xE7D300", Offset = "0xE7D300", VA = "0xE7D300")]
		public SettingsChangedEvent(GameSettingId setting, bool isOn)
		{
		}
	}
}
namespace NeatCorp.Events.Environment
{
	[Token(Token = "0x200059E")]
	public class IslandStateEvent : GameEvent
	{
		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IslandType IslandType;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IslandState IslandState;

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0xE7D11C", Offset = "0xE7D11C", VA = "0xE7D11C")]
		public IslandStateEvent(IslandType islandType, IslandState islandState)
		{
		}
	}
	[Token(Token = "0x200059F")]
	public class RecoverEvent : GameEvent
	{
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RecoverIfLost Recoverable;

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xE7D154", Offset = "0xE7D154", VA = "0xE7D154")]
		public RecoverEvent(RecoverIfLost recoverable)
		{
		}
	}
}
namespace NeatCorp.Events.Puzzles
{
	[Token(Token = "0x20005A0")]
	public class GodStatueStartSpinningEvent : GameEvent
	{
		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xE7D2F8", Offset = "0xE7D2F8", VA = "0xE7D2F8")]
		public GodStatueStartSpinningEvent()
		{
		}
	}
}
namespace NeatCorp.Events.Glove
{
	[Token(Token = "0x20005A1")]
	public class GemInfusedEvent : GameEvent
	{
		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GemType GemType;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsEquippedInRightGlove;

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xE7D240", Offset = "0xE7D240", VA = "0xE7D240")]
		public GemInfusedEvent(GemType gemType, bool isEquippedInRightGlove)
		{
		}
	}
}
namespace NeatCorp.Events.Glove.GemEvents
{
	[Token(Token = "0x20005A2")]
	public class GemDroppedEvent : GameEvent
	{
		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GemType GemType;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GloveGem GemReference;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Grabbable GemGrabbable;

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xE7D190", Offset = "0xE7D190", VA = "0xE7D190")]
		public GemDroppedEvent(GemType gemType, GloveGem gemReference, Grabbable gemGrabbable)
		{
		}
	}
	[Token(Token = "0x20005A3")]
	public class GemGrabbedEvent : GameEvent
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GemType GemType;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerHand PlayerHand;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GloveGem GemReference;

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xE7D1E8", Offset = "0xE7D1E8", VA = "0xE7D1E8")]
		public GemGrabbedEvent(GemType gemType, PlayerHand playerHand, GloveGem gemReference)
		{
		}
	}
}
namespace NeatCorp.Events.Collection
{
	[Token(Token = "0x20005A4")]
	public class UnlockCollectableAnimalEvent : GameEvent
	{
		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhotographTarget Target;

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xE7CFE8", Offset = "0xE7CFE8", VA = "0xE7CFE8")]
		public UnlockCollectableAnimalEvent(PhotographTarget target)
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class BookmarkSelectedEvent : GameEvent
	{
		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuBookmark Bookmark;

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0xE7CF80", Offset = "0xE7CF80", VA = "0xE7CF80")]
		public BookmarkSelectedEvent(MenuBookmark bookmark)
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public class CategoryTabSelectedEvent : GameEvent
	{
		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MenuCategoryTab Tab;

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xE7CFB4", Offset = "0xE7CFB4", VA = "0xE7CFB4")]
		public CategoryTabSelectedEvent(MenuCategoryTab tab)
		{
		}
	}
	[Token(Token = "0x20005A7")]
	public class UnlockCollectableRecipeEvent : GameEvent
	{
		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingRecipe Recipe;

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0xE7D01C", Offset = "0xE7D01C", VA = "0xE7D01C")]
		public UnlockCollectableRecipeEvent(CraftingRecipe craftingRecipe)
		{
		}
	}
}
namespace NeatCorp.Events.PolaroidEvents
{
	[Token(Token = "0x20005A8")]
	public class PolaroidGrabbedFromCameraEvent : GameEvent
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PolaroidPicture Polaroid;

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xE7D2F0", Offset = "0xE7D2F0", VA = "0xE7D2F0")]
		public PolaroidGrabbedFromCameraEvent()
		{
		}
	}
}
namespace NeatCorp.Events.Crystals
{
	[Token(Token = "0x20005A9")]
	public class PedestalDroppedEvent : GameEvent
	{
		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09470", Offset = "0xA09470")]
		private CrystalPedestal <Pedestal>k__BackingField;

		[Token(Token = "0x17000389")]
		public CrystalPedestal Pedestal
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0xE7D050", Offset = "0xE7D050", VA = "0xE7D050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18D58", Offset = "0xA18D58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0xE7D058", Offset = "0xE7D058", VA = "0xE7D058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18D68", Offset = "0xA18D68")]
			private set
			{
			}
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xE7D060", Offset = "0xE7D060", VA = "0xE7D060")]
		public PedestalDroppedEvent(CrystalPedestal pedestal)
		{
		}
	}
	[Token(Token = "0x20005AA")]
	public class PedestalGrabbedEvent : GameEvent
	{
		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09480", Offset = "0xA09480")]
		private CrystalPedestal <Pedestal>k__BackingField;

		[Token(Token = "0x1700038A")]
		public CrystalPedestal Pedestal
		{
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0xE7D094", Offset = "0xE7D094", VA = "0xE7D094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18D78", Offset = "0xA18D78")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0xE7D09C", Offset = "0xE7D09C", VA = "0xE7D09C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18D88", Offset = "0xA18D88")]
			private set
			{
			}
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xE7D0A4", Offset = "0xE7D0A4", VA = "0xE7D0A4")]
		public PedestalGrabbedEvent(CrystalPedestal pedestal)
		{
		}
	}
	[Token(Token = "0x20005AB")]
	public class PedestalStashedEvent : GameEvent
	{
		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09490", Offset = "0xA09490")]
		private CrystalPedestal <Pedestal>k__BackingField;

		[Token(Token = "0x1700038B")]
		public CrystalPedestal Pedestal
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0xE7D0D8", Offset = "0xE7D0D8", VA = "0xE7D0D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18D98", Offset = "0xA18D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0xE7D0E0", Offset = "0xE7D0E0", VA = "0xE7D0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18DA8", Offset = "0xA18DA8")]
			private set
			{
			}
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xE7D0E8", Offset = "0xE7D0E8", VA = "0xE7D0E8")]
		public PedestalStashedEvent(CrystalPedestal pedestal)
		{
		}
	}
}
namespace NeatCorp.Events.Gardening.Compost
{
	[Token(Token = "0x20005AC")]
	public class ProduceRemovedFromBinEvent : GameEvent
	{
		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompostProduce Produce;

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xE7D188", Offset = "0xE7D188", VA = "0xE7D188")]
		public ProduceRemovedFromBinEvent()
		{
		}
	}
}
namespace NeatCorp.Events.PlatformEvents
{
	[Token(Token = "0x20005AD")]
	public class HMDActivityStatusChangedEvent : GameEvent
	{
		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA094A0", Offset = "0xA094A0")]
		private HMDActivityStatusType <HMDActivityStatus>k__BackingField;

		[Token(Token = "0x1700038C")]
		public HMDActivityStatusType HMDActivityStatus
		{
			[Token(Token = "0x60021B9")]
			[Address(RVA = "0xE7D2D0", Offset = "0xE7D2D0", VA = "0xE7D2D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18DB8", Offset = "0xA18DB8")]
			set
			{
			}
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0xE7D2D8", Offset = "0xE7D2D8", VA = "0xE7D2D8")]
		public HMDActivityStatusChangedEvent()
		{
		}
	}
	[Token(Token = "0x20005AE")]
	internal class HMDMountStatusChangedEvent : GameEvent
	{
		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA094B0", Offset = "0xA094B0")]
		private HMDMountStatusType <HMDMountStatus>k__BackingField;

		[Token(Token = "0x1700038D")]
		public HMDMountStatusType HMDMountStatus
		{
			[Token(Token = "0x60021BB")]
			[Address(RVA = "0xE7D2E0", Offset = "0xE7D2E0", VA = "0xE7D2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18DC8", Offset = "0xA18DC8")]
			set
			{
			}
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0xE7D2E8", Offset = "0xE7D2E8", VA = "0xE7D2E8")]
		public HMDMountStatusChangedEvent()
		{
		}
	}
}
namespace NeatCorp.Events.Animation
{
	[Token(Token = "0x20005AF")]
	public class AnimationEvent : GameEvent
	{
		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator Animator;

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xE7C534", Offset = "0xE7C534", VA = "0xE7C534")]
		public AnimationEvent()
		{
		}
	}
	[Token(Token = "0x20005B0")]
	public class AnimationPlaybackEvent : AnimationEvent
	{
		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA094C0", Offset = "0xA094C0")]
		private AnimationPlaybackEventType <AnimationEventType>k__BackingField;

		[Token(Token = "0x1700038E")]
		public AnimationPlaybackEventType AnimationEventType
		{
			[Token(Token = "0x60021BE")]
			[Address(RVA = "0xE7C8FC", Offset = "0xE7C8FC", VA = "0xE7C8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18DD8", Offset = "0xA18DD8")]
			get
			{
				return default(AnimationPlaybackEventType);
			}
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0xE7C904", Offset = "0xE7C904", VA = "0xE7C904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18DE8", Offset = "0xA18DE8")]
			protected set
			{
			}
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0xE7C90C", Offset = "0xE7C90C", VA = "0xE7C90C")]
		public AnimationPlaybackEvent(Animator animator, AnimationPlaybackEventType type)
		{
		}
	}
	[Token(Token = "0x20005B1")]
	public class StateMachineBehaviourEvent : AnimationEvent
	{
		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatorStateInfo StateInfo;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int LayerIndex;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA094D0", Offset = "0xA094D0")]
		private AnimationStateEventType <AnimationEventType>k__BackingField;

		[Token(Token = "0x1700038F")]
		public AnimationStateEventType AnimationEventType
		{
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0xE7CF1C", Offset = "0xE7CF1C", VA = "0xE7CF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18DF8", Offset = "0xA18DF8")]
			get
			{
				return default(AnimationStateEventType);
			}
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xE7CF24", Offset = "0xE7CF24", VA = "0xE7CF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18E08", Offset = "0xA18E08")]
			protected set
			{
			}
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0xE7C9C8", Offset = "0xE7C9C8", VA = "0xE7C9C8")]
		public StateMachineBehaviourEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x20005B2")]
	public class OnAnimationStateEnterEvent : StateMachineBehaviourEvent
	{
		[Token(Token = "0x60021C4")]
		[Address(RVA = "0xE7C954", Offset = "0xE7C954", VA = "0xE7C954")]
		public OnAnimationStateEnterEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x20005B3")]
	public class OnAnimationStateUpdateEvent : StateMachineBehaviourEvent
	{
		[Token(Token = "0x60021C5")]
		[Address(RVA = "0xE7CA9C", Offset = "0xE7CA9C", VA = "0xE7CA9C")]
		public OnAnimationStateUpdateEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x20005B4")]
	public class OnAnimationStateExitEvent : StateMachineBehaviourEvent
	{
		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xE7CA24", Offset = "0xE7CA24", VA = "0xE7CA24")]
		public OnAnimationStateExitEvent(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class AnimationPlayback : MonoBehaviour
	{
		[Token(Token = "0x4002103")]
		private const float MinEventDuration = 0.1f;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationPlaybackEventDispatcher m_animationEventDispatcher;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_wasRecentlyStarted;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_normalizedStartTime;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLayer;

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xE7C53C", Offset = "0xE7C53C", VA = "0xE7C53C")]
		public void Activate()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xE7C56C", Offset = "0xE7C56C", VA = "0xE7C56C")]
		public void Deactivate(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x60021C9")]
		[Address(RVA = "0xE7C65C", Offset = "0xE7C65C", VA = "0xE7C65C")]
		public void PlayFromTime(int hash, int layer, float time)
		{
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xE7C68C", Offset = "0xE7C68C", VA = "0xE7C68C")]
		public void ActivateAndPlayFromTime(int hash, int layer, float time)
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0xE7C6D8", Offset = "0xE7C6D8", VA = "0xE7C6D8")]
		public void ActivateAndPlayFromTimeDispatcher(int hash, int layer, float time)
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0xE7C750", Offset = "0xE7C750", VA = "0xE7C750")]
		public void Stop(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0xE7C7A0", Offset = "0xE7C7A0", VA = "0xE7C7A0")]
		public void StopAndDeactivate(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0xE7C7EC", Offset = "0xE7C7EC", VA = "0xE7C7EC")]
		public void StopAndDeactivateDispatcher()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0xE7C83C", Offset = "0xE7C83C", VA = "0xE7C83C")]
		public void DispatchStopEvent(bool shouldCheckEvaluation = true)
		{
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0xE7C72C", Offset = "0xE7C72C", VA = "0xE7C72C")]
		public void DispatchPlayEvent()
		{
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0xE7C5C4", Offset = "0xE7C5C4", VA = "0xE7C5C4")]
		private bool ShouldEvaluateEvent()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xE7C888", Offset = "0xE7C888", VA = "0xE7C888")]
		public AnimationPlayback()
		{
		}
	}
}
namespace NeatCorp.Events.Animation.StateEvents
{
	[Token(Token = "0x20005B6")]
	public class AnimationStateEvent : StateMachineBehaviour
	{
		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationStateEventType m_eventType;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AnimationStateEventDispatcher m_eventDispatcher;

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xE7CB14", Offset = "0xE7CB14", VA = "0xE7CB14", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xE7CC40", Offset = "0xE7CC40", VA = "0xE7CC40", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xE7CD74", Offset = "0xE7CD74", VA = "0xE7CD74", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xE7CEA8", Offset = "0xE7CEA8", VA = "0xE7CEA8")]
		public AnimationStateEvent()
		{
		}
	}
}
namespace NeatCorp.Achievements
{
	[Token(Token = "0x20005B7")]
	public class AchievementProgress
	{
		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsUnlocked;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime UnlockTime;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ulong Count;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Bitfield;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1101238", Offset = "0x1101238", VA = "0x1101238")]
		public AchievementProgress(string name, bool isUnlocked, [Optional] DateTime unlockTime, ulong count = 0uL, [Optional] string bitfield)
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public class GotS_Achievements
	{
		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformAchievements sm_instance;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<int, string> AchievementIds;

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x11012A8", Offset = "0x11012A8", VA = "0x11012A8")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x1101390", Offset = "0x1101390", VA = "0x1101390")]
		public static void LoadAllAchievementProgress()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1101538", Offset = "0x1101538", VA = "0x1101538")]
		public static void SetUnlockableAchievement(string identifier, bool shouldBeUnlocked)
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x110143C", Offset = "0x110143C", VA = "0x110143C")]
		private static void RegisterEvents()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x11016A0", Offset = "0x11016A0", VA = "0x11016A0")]
		private static void OnMilestoneEvent(MilestoneEvent e)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x11017CC", Offset = "0x11017CC", VA = "0x11017CC")]
		public static void CheckMilestoneAchievements(Milestone[] milestones)
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x1101B00", Offset = "0x1101B00", VA = "0x1101B00")]
		private static void OnQuestEvent(QuestEvent e)
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1101BA0", Offset = "0x1101BA0", VA = "0x1101BA0")]
		public static void UpgradeHomeAchievement(HomeType upgradeLevel)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x1101968", Offset = "0x1101968", VA = "0x1101968")]
		public static void UnlockRetroactivly(string identifier, bool shouldBeUnlocked)
		{
		}
	}
	[Token(Token = "0x20005B9")]
	public abstract class PlatformAchievements
	{
		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<int, UserAchievementData> UserAchievementData;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, int> AchievmentKeys;

		[Token(Token = "0x60021E2")]
		public abstract void LoadAllAchievementProgress();

		[Token(Token = "0x60021E3")]
		public abstract void SetUnlockableAchievement(int key, bool shouldBeUnlocked);

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1101E24", Offset = "0x1101E24", VA = "0x1101E24")]
		protected void SetAchievementData(int key, UserAchievementData achievementData)
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1101EF0", Offset = "0x1101EF0", VA = "0x1101EF0")]
		protected void SetAchievementKeyPair(string key, int value)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x1101630", Offset = "0x1101630", VA = "0x1101630")]
		public bool TryGetKeyFromIdentifier(string identifier, out int key)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1101FAC", Offset = "0x1101FAC", VA = "0x1101FAC")]
		protected PlatformAchievements()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	public class UserAchievementData
	{
		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Identifier;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Text;

		[Token(Token = "0x4002116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AchievementProgress Progress;

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x110205C", Offset = "0x110205C", VA = "0x110205C")]
		public UserAchievementData(string identifier, string text, string description, AchievementProgress progress)
		{
		}
	}
}
namespace Reactional
{
	[Token(Token = "0x20005BB")]
	public class ReactionalDispatcher : MonoBehaviour
	{
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ReactionalDispatcher instance;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasLookedForInstance;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReactionalTimeline m_timeline;

		[Token(Token = "0x17000390")]
		public static ReactionalDispatcher Instance
		{
			[Token(Token = "0x60021E9")]
			[Address(RVA = "0xC6E49C", Offset = "0xC6E49C", VA = "0xC6E49C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000391")]
		public static ReactionalTimeline Timeline
		{
			[Token(Token = "0x60021EC")]
			[Address(RVA = "0xC6E430", Offset = "0xC6E430", VA = "0xC6E430")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0xC6E504", Offset = "0xC6E504", VA = "0xC6E504")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xC6E670", Offset = "0xC6E670", VA = "0xC6E670")]
		public static ReactionalDispatcher TryFindInstance()
		{
			return null;
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xC6E778", Offset = "0xC6E778", VA = "0xC6E778")]
		public ReactionalDispatcher()
		{
		}
	}
	[Token(Token = "0x20005BC")]
	public static class Get
	{
		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xC6E3C4", Offset = "0xC6E3C4", VA = "0xC6E3C4")]
		public static Context Context()
		{
			return null;
		}
	}
	[Token(Token = "0x20005BD")]
	public static class Set
	{
		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xC6E784", Offset = "0xC6E784", VA = "0xC6E784")]
		public static void Scrub(int laneID, double normPos, int quant, int phase, double fromPos)
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xC6E828", Offset = "0xC6E828", VA = "0xC6E828")]
		public static void Cursor(int sinkID, int cursorID, double beat, bool gate, double x, double y, double z)
		{
		}
	}
}
namespace Gestrument.Timeline
{
	[Token(Token = "0x20005BE")]
	public class Context
	{
		[Token(Token = "0x20005BF")]
		public enum LogLevel
		{
			[Token(Token = "0x4002121")]
			None,
			[Token(Token = "0x4002122")]
			Critical,
			[Token(Token = "0x4002123")]
			Error,
			[Token(Token = "0x4002124")]
			Warning,
			[Token(Token = "0x4002125")]
			Info,
			[Token(Token = "0x4002126")]
			Debug,
			[Token(Token = "0x4002127")]
			Max
		}

		[Token(Token = "0x20005C0")]
		public delegate void LogCallback(string message);

		[Token(Token = "0x20005C1")]
		public delegate void InternalLogCallback(IntPtr logger, IntPtr message, int size);

		[Token(Token = "0x400211B")]
		public const string DLL_NAME = "ge_timeline";

		[Token(Token = "0x400211C")]
		public const int ERROR_BUG = -666;

		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IntPtr _contextPtr;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static LogCallback logCallback;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] buffer;

		[PreserveSig]
		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1095440", Offset = "0x1095440", VA = "0x1095440")]
		public static extern void ge_timeline_logger_set_log_level(int log_level);

		[PreserveSig]
		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x10954C0", Offset = "0x10954C0", VA = "0x10954C0")]
		public static extern void ge_timeline_logger_set_log_callback(InternalLogCallback callback);

		[PreserveSig]
		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x1095544", Offset = "0x1095544", VA = "0x1095544")]
		public static extern IntPtr ge_timeline_context_new();

		[PreserveSig]
		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x10955B4", Offset = "0x10955B4", VA = "0x10955B4")]
		public static extern void ge_timeline_context_free(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x1095634", Offset = "0x1095634", VA = "0x1095634")]
		public static extern int ge_timeline_context_process(IntPtr context, long system_time);

		[PreserveSig]
		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x10956C4", Offset = "0x10956C4", VA = "0x10956C4")]
		public static extern void ge_timeline_context_start(IntPtr context, long system_time);

		[PreserveSig]
		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1095754", Offset = "0x1095754", VA = "0x1095754")]
		public static extern void ge_timeline_context_stop(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x10957D4", Offset = "0x10957D4", VA = "0x10957D4")]
		public static extern long ge_timeline_context_get_current_beat(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1095854", Offset = "0x1095854", VA = "0x1095854")]
		public static extern IntPtr ge_timeline_context_get_clock(IntPtr context);

		[PreserveSig]
		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x10958D4", Offset = "0x10958D4", VA = "0x10958D4")]
		public static extern IntPtr ge_timeline_get_state(IntPtr context, bool pretty);

		[PreserveSig]
		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1095964", Offset = "0x1095964", VA = "0x1095964")]
		public static extern int ge_timeline_set_state(IntPtr context, string state);

		[PreserveSig]
		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1095A10", Offset = "0x1095A10", VA = "0x1095A10")]
		public static extern int ge_timeline_context_push_osc_complete(IntPtr context, int size, byte[] data, long offset);

		[PreserveSig]
		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x1095AC0", Offset = "0x1095AC0", VA = "0x1095AC0")]
		public static extern int ge_timeline_context_poll_osc_complete(IntPtr context, int size, byte[] data, ref long offset);

		[PreserveSig]
		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1095B70", Offset = "0x1095B70", VA = "0x1095B70")]
		public static extern double ge_timeline_clock_get_tempo_bpm(IntPtr clock);

		[PreserveSig]
		[Token(Token = "0x6002200")]
		[Address(RVA = "0x1095BF0", Offset = "0x1095BF0", VA = "0x1095BF0")]
		public static extern void ge_timeline_free(IntPtr mem);

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x10953A8", Offset = "0x10953A8", VA = "0x10953A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA18E18", Offset = "0xA18E18")]
		protected static void StaticLogCallback(IntPtr logger, IntPtr message, int size)
		{
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1096004", Offset = "0x1096004", VA = "0x1096004")]
		public Context()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x10960C4", Offset = "0x10960C4", VA = "0x10960C4", Slot = "1")]
		~Context()
		{
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x109616C", Offset = "0x109616C", VA = "0x109616C")]
		public static void SetLogLevel(LogLevel log_level)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1096170", Offset = "0x1096170", VA = "0x1096170")]
		public static void SetLogCallback(LogCallback callback)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1096228", Offset = "0x1096228", VA = "0x1096228")]
		public int Process(long system_time = -1L)
		{
			return default(int);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x10962A4", Offset = "0x10962A4", VA = "0x10962A4")]
		public int StartPlaying(long systemTime = -1L)
		{
			return default(int);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x109631C", Offset = "0x109631C", VA = "0x109631C")]
		public int StopPlaying()
		{
			return default(int);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1096384", Offset = "0x1096384", VA = "0x1096384")]
		public long GetCurrentBeat()
		{
			return default(long);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x10963EC", Offset = "0x10963EC", VA = "0x10963EC")]
		public double GetTempoBPM()
		{
			return default(double);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x1096474", Offset = "0x1096474", VA = "0x1096474")]
		public int PushMessage(OSCMessage message, long offset = -1L)
		{
			return default(int);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1097274", Offset = "0x1097274", VA = "0x1097274")]
		public int PollMessage(ref OSCMessage message)
		{
			return default(int);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x1097B1C", Offset = "0x1097B1C", VA = "0x1097B1C")]
		public string GetState(bool pretty = true)
		{
			return null;
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x1097BE8", Offset = "0x1097BE8", VA = "0x1097BE8")]
		public int SetState(string state)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005C2")]
	public class OSCMessage
	{
		[Token(Token = "0x20005C3")]
		protected struct MIDIValue
		{
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte byte1;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte byte2;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte byte3;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte byte4;
		}

		[Token(Token = "0x20005C4")]
		protected struct StringValue
		{
			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int size;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr ptr;
		}

		[Token(Token = "0x20005C5")]
		protected struct BLOBValue
		{
			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int size;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IntPtr ptr;
		}

		[StructLayout(2)]
		[Token(Token = "0x20005C6")]
		protected struct ValueUnion
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float f;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public StringValue s;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public BLOBValue b;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long h;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ulong t;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double d;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte c;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint r;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MIDIValue m;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool TF;
		}

		[Token(Token = "0x20005C7")]
		public class Symbol
		{
			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string str;

			[Token(Token = "0x6002221")]
			[Address(RVA = "0xDFCD40", Offset = "0xDFCD40", VA = "0xDFCD40")]
			public Symbol(string s = "")
			{
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0xDFCDC0", Offset = "0xDFCDC0", VA = "0xDFCDC0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C8")]
		public class MIDI
		{
			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public uint Data;

			[Token(Token = "0x6002223")]
			[Address(RVA = "0xDFCB18", Offset = "0xDFCB18", VA = "0xDFCB18")]
			public MIDI(byte byte1, byte byte2, byte byte3, byte byte4)
			{
			}

			[Token(Token = "0x6002224")]
			[Address(RVA = "0xDFCB6C", Offset = "0xDFCB6C", VA = "0xDFCB6C", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C9")]
		public class Infinitum
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xDFCAC8", Offset = "0xDFCAC8", VA = "0xDFCAC8", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6002226")]
			[Address(RVA = "0xDFCB10", Offset = "0xDFCB10", VA = "0xDFCB10")]
			public Infinitum()
			{
			}
		}

		[Token(Token = "0x4002128")]
		private const int ERROR_OSC_VALUES = -56;

		[Token(Token = "0x4002129")]
		private const int DEFAULT_MAX_VALUES = 16;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ValueUnion[] valueUnions;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string address;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<object> Values;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long Offset;

		[Token(Token = "0x17000392")]
		public string Address
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0x10981F4", Offset = "0x10981F4", VA = "0x10981F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600221A")]
			[Address(RVA = "0x10981FC", Offset = "0x10981FC", VA = "0x10981FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000393")]
		public string Typetag
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0x109826C", Offset = "0x109826C", VA = "0x109826C")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002217")]
		[Address(RVA = "0x109800C", Offset = "0x109800C", VA = "0x109800C")]
		protected static extern int ge_timeline_osc_message_encode(IntPtr data, int size, string address, int address_size, string typetag, int typetag_size, IntPtr values, ref int num_values);

		[PreserveSig]
		[Token(Token = "0x6002218")]
		[Address(RVA = "0x1098114", Offset = "0x1098114", VA = "0x1098114")]
		protected static extern int ge_timeline_osc_message_decode(IntPtr data, int size, ref IntPtr address, ref int address_size, ref IntPtr typetag, ref int typetag_size, int max_values, IntPtr values, ref int num_values);

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x1098350", Offset = "0x1098350", VA = "0x1098350")]
		public static char GetOSCTypeFromObject(object obj)
		{
			return default(char);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x10987DC", Offset = "0x10987DC", VA = "0x10987DC")]
		public OSCMessage(string address = "", [Optional] List<object> values)
		{
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x10988D4", Offset = "0x10988D4", VA = "0x10988D4")]
		public void AddValues(object obj)
		{
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x1096520", Offset = "0x1096520", VA = "0x1096520")]
		public int Encode(byte[] buffer)
		{
			return default(int);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x109732C", Offset = "0x109732C", VA = "0x109732C")]
		public int Decode(byte[] buffer, int max_values = 16)
		{
			return default(int);
		}
	}
}
namespace GE_Core
{
	[Token(Token = "0x20005CA")]
	public class GE_Control
	{
		[Token(Token = "0x20005CB")]
		public enum GenType
		{
			[Token(Token = "0x4002144")]
			None,
			[Token(Token = "0x4002145")]
			Pulse,
			[Token(Token = "0x4002146")]
			Pitch
		}
	}
	[Token(Token = "0x20005CC")]
	public class GE_Engine
	{
		[Token(Token = "0x20005CD")]
		public enum PulsePlayMode
		{
			[Token(Token = "0x400214D")]
			None,
			[Token(Token = "0x400214E")]
			Always,
			[Token(Token = "0x400214F")]
			GateOn,
			[Token(Token = "0x4002150")]
			GateStep
		}

		[Token(Token = "0x20005CE")]
		public enum PulseGenType
		{
			[Token(Token = "0x4002152")]
			defaultpulsegen,
			[Token(Token = "0x4002153")]
			patternpulsegen,
			[Token(Token = "0x4002154")]
			seqpulsegen
		}

		[Token(Token = "0x20005CF")]
		public enum PitchGenType
		{
			[Token(Token = "0x4002156")]
			defaultpitchgen,
			[Token(Token = "0x4002157")]
			chordpitchgen,
			[Token(Token = "0x4002158")]
			seqpitchgen,
			[Token(Token = "0x4002159")]
			relpitchgen
		}

		[Token(Token = "0x20005D0")]
		public delegate void OnNoteOn(GE_Engine engine, int instrument, int voice, double beat, float pitch, float velocity);

		[Token(Token = "0x20005D1")]
		public delegate void OnNoteOff(GE_Engine engine, int instrument, int voice, double beat);

		[Token(Token = "0x20005D2")]
		public delegate void OnControlChange(GE_Engine engine, int instrument, int soundControl, int index, double newValue, double oldValue);

		[Token(Token = "0x20005D3")]
		private delegate void GE_StartNotePtr(IntPtr engine, int instrument, int voice, double beat, float pitch, float velocity);

		[Token(Token = "0x20005D4")]
		private delegate void GE_StopNotePtr(IntPtr engine, int instrument, int voice, double beat);

		[Token(Token = "0x20005D5")]
		private delegate void GE_SoundControlPtr(IntPtr engine, int instrument, int soundControl, int index, double newValue, double oldValue);

		[Token(Token = "0x4002147")]
		public const string DLL_NAME = "GE_Core";

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IntPtr cPointer;

		[Token(Token = "0x17000394")]
		public int NumInstruments
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0x1087F4C", Offset = "0x1087F4C", VA = "0x1087F4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002259")]
			[Address(RVA = "0x1087F54", Offset = "0x1087F54", VA = "0x1087F54")]
			set
			{
			}
		}

		[Token(Token = "0x17000395")]
		public int NumCursors
		{
			[Token(Token = "0x600225A")]
			[Address(RVA = "0x1087F5C", Offset = "0x1087F5C", VA = "0x1087F5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600225B")]
			[Address(RVA = "0x1087F64", Offset = "0x1087F64", VA = "0x1087F64")]
			set
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event OnNoteOn onNoteOn
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x1085640", Offset = "0x1085640", VA = "0x1085640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18E7C", Offset = "0xA18E7C")]
			add
			{
			}
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x10856E4", Offset = "0x10856E4", VA = "0x10856E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18E8C", Offset = "0xA18E8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event OnNoteOff onNoteOff
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0x1085788", Offset = "0x1085788", VA = "0x1085788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18E9C", Offset = "0xA18E9C")]
			add
			{
			}
			[Token(Token = "0x600222A")]
			[Address(RVA = "0x108582C", Offset = "0x108582C", VA = "0x108582C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18EAC", Offset = "0xA18EAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event OnControlChange onControlChange
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x10858D0", Offset = "0x10858D0", VA = "0x10858D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18EBC", Offset = "0xA18EBC")]
			add
			{
			}
			[Token(Token = "0x600222C")]
			[Address(RVA = "0x1085974", Offset = "0x1085974", VA = "0x1085974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA18ECC", Offset = "0xA18ECC")]
			remove
			{
			}
		}

		[PreserveSig]
		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1085A18", Offset = "0x1085A18", VA = "0x1085A18")]
		public static extern IntPtr GE_Component_GetRef(IntPtr component);

		[PreserveSig]
		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1085A98", Offset = "0x1085A98", VA = "0x1085A98")]
		public static extern void GE_Component_SetRef(IntPtr component, IntPtr refptr);

		[PreserveSig]
		[Token(Token = "0x600222F")]
		[Address(RVA = "0x1085B28", Offset = "0x1085B28", VA = "0x1085B28")]
		private static extern IntPtr GE_Engine_New(IntPtr config);

		[PreserveSig]
		[Token(Token = "0x6002230")]
		[Address(RVA = "0x1085BA8", Offset = "0x1085BA8", VA = "0x1085BA8")]
		private static extern void GE_Engine_Free(IntPtr engine);

		[PreserveSig]
		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1085C28", Offset = "0x1085C28", VA = "0x1085C28")]
		private static extern int GE_Engine_GetNumInstruments(IntPtr engine);

		[PreserveSig]
		[Token(Token = "0x6002232")]
		[Address(RVA = "0x1085CA8", Offset = "0x1085CA8", VA = "0x1085CA8")]
		private static extern void GE_Engine_SetNumInstruments(IntPtr engine, int num);

		[PreserveSig]
		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1085D38", Offset = "0x1085D38", VA = "0x1085D38")]
		private static extern IntPtr GE_Engine_GetInstrument(IntPtr engine, int index);

		[PreserveSig]
		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1085DC8", Offset = "0x1085DC8", VA = "0x1085DC8")]
		private static extern int GE_Engine_GetNumCursors(IntPtr engine);

		[PreserveSig]
		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1085E48", Offset = "0x1085E48", VA = "0x1085E48")]
		private static extern void GE_Engine_SetNumCursors(IntPtr engine, int num);

		[PreserveSig]
		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1085ED8", Offset = "0x1085ED8", VA = "0x1085ED8")]
		private static extern IntPtr GE_Engine_GetCursor(IntPtr engine, int index);

		[PreserveSig]
		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1085F68", Offset = "0x1085F68", VA = "0x1085F68")]
		private static extern int GE_Engine_FindControlSource(IntPtr engine, string sourceName);

		[PreserveSig]
		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1086014", Offset = "0x1086014", VA = "0x1086014")]
		private static extern IntPtr GE_Engine_GetControlSource(IntPtr engine, int index);

		[PreserveSig]
		[Token(Token = "0x6002239")]
		[Address(RVA = "0x10860A4", Offset = "0x10860A4", VA = "0x10860A4")]
		private static extern void GE_Engine_SetStartNoteCallback(IntPtr engine, GE_StartNotePtr callback);

		[PreserveSig]
		[Token(Token = "0x600223A")]
		[Address(RVA = "0x108613C", Offset = "0x108613C", VA = "0x108613C")]
		private static extern void GE_Engine_SetStopNoteCallback(IntPtr engine, GE_StopNotePtr callback);

		[PreserveSig]
		[Token(Token = "0x600223B")]
		[Address(RVA = "0x10861D4", Offset = "0x10861D4", VA = "0x10861D4")]
		private static extern void GE_Engine_SetSoundControlCallback(IntPtr engine, GE_SoundControlPtr callback);

		[PreserveSig]
		[Token(Token = "0x600223C")]
		[Address(RVA = "0x108626C", Offset = "0x108626C", VA = "0x108626C")]
		public static extern bool GE_Engine_Render(IntPtr engine, double sampleRate, int numFrames);

		[PreserveSig]
		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1086314", Offset = "0x1086314", VA = "0x1086314")]
		public static extern void GE_Engine_SetPlaying(IntPtr engine, bool playing);

		[PreserveSig]
		[Token(Token = "0x600223E")]
		[Address(RVA = "0x10863A4", Offset = "0x10863A4", VA = "0x10863A4")]
		public static extern bool GE_Engine_LoadG2Preset(IntPtr engine, string path);

		[PreserveSig]
		[Token(Token = "0x600223F")]
		[Address(RVA = "0x1086454", Offset = "0x1086454", VA = "0x1086454")]
		private static extern IntPtr GE_Instrument_GetCursor(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x6002240")]
		[Address(RVA = "0x10864D4", Offset = "0x10864D4", VA = "0x10864D4")]
		private static extern void GE_Instrument_SetCursor(IntPtr instrument, IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x6002241")]
		[Address(RVA = "0x1086564", Offset = "0x1086564", VA = "0x1086564")]
		private static extern IntPtr GE_Instrument_GetPulseGen(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x6002242")]
		[Address(RVA = "0x10865E4", Offset = "0x10865E4", VA = "0x10865E4")]
		private static extern IntPtr GE_Instrument_SetPulseGen(IntPtr instrument, string genspec);

		[PreserveSig]
		[Token(Token = "0x6002243")]
		[Address(RVA = "0x1086690", Offset = "0x1086690", VA = "0x1086690")]
		private static extern IntPtr GE_Instrument_GetPitchGen(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x6002244")]
		[Address(RVA = "0x1086710", Offset = "0x1086710", VA = "0x1086710")]
		private static extern IntPtr GE_Instrument_SetPitchGen(IntPtr instrument, string genspec);

		[PreserveSig]
		[Token(Token = "0x6002245")]
		[Address(RVA = "0x10867BC", Offset = "0x10867BC", VA = "0x10867BC")]
		private static extern IntPtr GE_Instrument_GetTitle(IntPtr instrument);

		[PreserveSig]
		[Token(Token = "0x6002246")]
		[Address(RVA = "0x108683C", Offset = "0x108683C", VA = "0x108683C")]
		private static extern bool GE_Cursor_GetGate(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x6002247")]
		[Address(RVA = "0x10868C4", Offset = "0x10868C4", VA = "0x10868C4")]
		private static extern double GE_Cursor_GetX(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x6002248")]
		[Address(RVA = "0x1086944", Offset = "0x1086944", VA = "0x1086944")]
		private static extern double GE_Cursor_GetY(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x6002249")]
		[Address(RVA = "0x10869C4", Offset = "0x10869C4", VA = "0x10869C4")]
		private static extern double GE_Cursor_GetZ(IntPtr cursor);

		[PreserveSig]
		[Token(Token = "0x600224A")]
		[Address(RVA = "0x1086A44", Offset = "0x1086A44", VA = "0x1086A44")]
		private static extern IntPtr GE_Generator_GetTypeName(IntPtr generator);

		[PreserveSig]
		[Token(Token = "0x600224B")]
		[Address(RVA = "0x1086AC4", Offset = "0x1086AC4", VA = "0x1086AC4")]
		private static extern IntPtr GE_Generator_GetControlInput(IntPtr generator, int index);

		[PreserveSig]
		[Token(Token = "0x600224C")]
		[Address(RVA = "0x1086B54", Offset = "0x1086B54", VA = "0x1086B54")]
		private static extern int GE_Generator_FindControlInput(IntPtr generator, string inputName);

		[PreserveSig]
		[Token(Token = "0x600224D")]
		[Address(RVA = "0x1086C00", Offset = "0x1086C00", VA = "0x1086C00")]
		private static extern void GE_PulseGen_SetPlayMode(IntPtr generator, int playMode);

		[PreserveSig]
		[Token(Token = "0x600224E")]
		[Address(RVA = "0x1086C90", Offset = "0x1086C90", VA = "0x1086C90")]
		private static extern double GE_ControlSource_GetValue(IntPtr control);

		[PreserveSig]
		[Token(Token = "0x600224F")]
		[Address(RVA = "0x1086D10", Offset = "0x1086D10", VA = "0x1086D10")]
		private static extern void GE_ControlSource_SetValue(IntPtr control, double value);

		[PreserveSig]
		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1086DA0", Offset = "0x1086DA0", VA = "0x1086DA0")]
		private static extern void GE_ControlInput_SetSource(IntPtr input, IntPtr source);

		[PreserveSig]
		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1086E30", Offset = "0x1086E30", VA = "0x1086E30")]
		private static extern int GE_SeqPulseGen_ReadMIDIPath(IntPtr generator, string path);

		[PreserveSig]
		[Token(Token = "0x6002252")]
		[Address(RVA = "0x1086EDC", Offset = "0x1086EDC", VA = "0x1086EDC")]
		private static extern int GE_SeqPitchGen_ReadMIDIPath(IntPtr generator, string path);

		[Token(Token = "0x6002253")]
		[Address(RVA = "0x108531C", Offset = "0x108531C", VA = "0x108531C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA18EDC", Offset = "0xA18EDC")]
		private static void StartNoteCallback(IntPtr engine, int instrument, int voice, double beat, float pitch, float velocity)
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x1085430", Offset = "0x1085430", VA = "0x1085430")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA18F40", Offset = "0xA18F40")]
		private static void StopNoteCallback(IntPtr engine, int instrument, int voice, double beat)
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0x108552C", Offset = "0x108552C", VA = "0x108552C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xA18FA4", Offset = "0xA18FA4")]
		private static void SoundControlCallback(IntPtr engine, int instrument, int soundControl, int index, double newValue, double oldValue)
		{
		}

		[Token(Token = "0x6002256")]
		[Address(RVA = "0x1087D44", Offset = "0x1087D44", VA = "0x1087D44")]
		public GE_Engine()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x1087EE0", Offset = "0x1087EE0", VA = "0x1087EE0", Slot = "1")]
		~GE_Engine()
		{
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x1087F6C", Offset = "0x1087F6C", VA = "0x1087F6C")]
		public int SetInstrumentCursor(int instrument, int cursor)
		{
			return default(int);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x108801C", Offset = "0x108801C", VA = "0x108801C")]
		public string GetInstrumentTitle(int instrument)
		{
			return null;
		}

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x10880DC", Offset = "0x10880DC", VA = "0x10880DC")]
		public string GetPulseGen(int instrument)
		{
			return null;
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x10881C4", Offset = "0x10881C4", VA = "0x10881C4")]
		public int SetPulseGen(int instrument, string genspec)
		{
			return default(int);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x1088260", Offset = "0x1088260", VA = "0x1088260")]
		public string GetPitchGen(int instrument)
		{
			return null;
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x1088348", Offset = "0x1088348", VA = "0x1088348")]
		public int SetPitchGen(int instrument, string genspec)
		{
			return default(int);
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0x10883E4", Offset = "0x10883E4", VA = "0x10883E4")]
		public double GetEngineSourceValue(int index)
		{
			return default(double);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0x1088468", Offset = "0x1088468", VA = "0x1088468")]
		public bool SetInputValue(int instrument, GE_Control.GenType generator, int index, double val)
		{
			return default(bool);
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0x1088560", Offset = "0x1088560", VA = "0x1088560")]
		public bool GetCursorGate(int cursor)
		{
			return default(bool);
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x10885E4", Offset = "0x10885E4", VA = "0x10885E4")]
		public double GetCursorX(int cursor)
		{
			return default(double);
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x1088668", Offset = "0x1088668", VA = "0x1088668")]
		public double GetCursorY(int cursor)
		{
			return default(double);
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x10886EC", Offset = "0x10886EC", VA = "0x10886EC")]
		public double GetCursorZ(int cursor)
		{
			return default(double);
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0x1088770", Offset = "0x1088770", VA = "0x1088770")]
		public bool Render(double sampleRate, int numFrames)
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x1088778", Offset = "0x1088778", VA = "0x1088778")]
		private int SeqGenLoadMIDI(int instrument, GE_Control.GenType generator, string path)
		{
			return default(int);
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0x10888C0", Offset = "0x10888C0", VA = "0x10888C0")]
		public int LoadPulseMIDI(int instrument, string path)
		{
			return default(int);
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x10888CC", Offset = "0x10888CC", VA = "0x10888CC")]
		public int LoadPitchMIDI(int instrument, string path)
		{
			return default(int);
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x10888D8", Offset = "0x10888D8", VA = "0x10888D8")]
		public bool SetInputSource(int instrument, GE_Control.GenType genType, string input, string source)
		{
			return default(bool);
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x1088A00", Offset = "0x1088A00", VA = "0x1088A00")]
		public bool SetPulseInputSource(int instrument, string input, string source)
		{
			return default(bool);
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1088A10", Offset = "0x1088A10", VA = "0x1088A10")]
		public bool SetPitchInputSource(int instrument, string input, string source)
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1088A20", Offset = "0x1088A20", VA = "0x1088A20")]
		public void SetPlaying(bool playing)
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0x1088A2C", Offset = "0x1088A2C", VA = "0x1088A2C")]
		public bool LoadG2Preset(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1088A34", Offset = "0x1088A34", VA = "0x1088A34")]
		public bool SetPulsePlayMode(int instrument, PulsePlayMode playMode)
		{
			return default(bool);
		}
	}
}
namespace FIMSpace
{
	[Token(Token = "0x20005D6")]
	public static class FEngineering
	{
		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Plane axis2DProjection;

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x137F638", Offset = "0x137F638", VA = "0x137F638")]
		public static bool VIsZero(this Vector3 vec)
		{
			return default(bool);
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x137F66C", Offset = "0x137F66C", VA = "0x137F66C")]
		public static bool VIsSame(this Vector3 vec1, Vector3 vec2)
		{
			return default(bool);
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x137F690", Offset = "0x137F690", VA = "0x137F690")]
		public static Vector3 TransformVector(this Quaternion parentRot, Vector3 parentLossyScale, Vector3 childLocalPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x137F794", Offset = "0x137F794", VA = "0x137F794")]
		public static Vector3 VAxis2DLimit(this Transform parent, Vector3 parentPos, Vector3 childPos, int axis = 3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x137F8F0", Offset = "0x137F8F0", VA = "0x137F8F0")]
		public static Quaternion QToLocal(this Quaternion parentRotation, Quaternion worldRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x137F9B8", Offset = "0x137F9B8", VA = "0x137F9B8")]
		public static Quaternion QToWorld(this Quaternion parentRotation, Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x137FA78", Offset = "0x137FA78", VA = "0x137FA78")]
		public static bool QIsZero(this Quaternion rot)
		{
			return default(bool);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x137FA9C", Offset = "0x137FA9C", VA = "0x137FA9C")]
		public static bool QIsSame(this Quaternion rot1, Quaternion rot2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x137FAC8", Offset = "0x137FAC8", VA = "0x137FAC8")]
		public static Quaternion SmoothDampRotation(this Quaternion current, Quaternion target, ref Quaternion velocityRef, float duration, float delta)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x137FAFC", Offset = "0x137FAFC", VA = "0x137FAFC")]
		public static Quaternion SmoothDampRotation(this Quaternion current, Quaternion target, ref Quaternion velocityRef, float duration, float maxSpeed, float delta)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x20005D7")]
	public static class FLogicMethods
	{
		[Token(Token = "0x6002294")]
		[Address(RVA = "0x1387C18", Offset = "0x1387C18", VA = "0x1387C18")]
		public static float WrapAngle(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005D8")]
	public abstract class FImp_ColliderData_Base
	{
		[Token(Token = "0x20005D9")]
		public enum EFColliderType
		{
			[Token(Token = "0x4002165")]
			Box,
			[Token(Token = "0x4002166")]
			Sphere,
			[Token(Token = "0x4002167")]
			Capsule,
			[Token(Token = "0x4002168")]
			Mesh,
			[Token(Token = "0x4002169")]
			Terrain
		}

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09540", Offset = "0xA09540")]
		private Transform <Transform>k__BackingField;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09550", Offset = "0xA09550")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09560", Offset = "0xA09560")]
		private Collider2D <Collider2D>k__BackingField;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Is2D;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09570", Offset = "0xA09570")]
		private bool <IsStatic>k__BackingField;

		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09580", Offset = "0xA09580")]
		private EFColliderType <ColliderType>k__BackingField;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Vector3 previousPosition;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Quaternion previousRotation;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Vector3 previousScale;

		[Token(Token = "0x17000396")]
		public Transform Transform
		{
			[Token(Token = "0x6002295")]
			[Address(RVA = "0x137FD80", Offset = "0x137FD80", VA = "0x137FD80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA190A8", Offset = "0xA190A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002296")]
			[Address(RVA = "0x137FD88", Offset = "0x137FD88", VA = "0x137FD88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA190B8", Offset = "0xA190B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public Collider Collider
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0x137FD90", Offset = "0x137FD90", VA = "0x137FD90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA190C8", Offset = "0xA190C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x137FD98", Offset = "0x137FD98", VA = "0x137FD98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA190D8", Offset = "0xA190D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public Collider2D Collider2D
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x137FDA0", Offset = "0x137FDA0", VA = "0x137FDA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA190E8", Offset = "0xA190E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600229A")]
			[Address(RVA = "0x137FDA8", Offset = "0x137FDA8", VA = "0x137FDA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA190F8", Offset = "0xA190F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public bool IsStatic
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0x137FDB0", Offset = "0x137FDB0", VA = "0x137FDB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19108", Offset = "0xA19108")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600229C")]
			[Address(RVA = "0x137FDB8", Offset = "0x137FDB8", VA = "0x137FDB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19118", Offset = "0xA19118")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		protected EFColliderType ColliderType
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0x137FDC4", Offset = "0x137FDC4", VA = "0x137FDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19128", Offset = "0xA19128")]
			set
			{
			}
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x137FDCC", Offset = "0x137FDCC", VA = "0x137FDCC")]
		public static FImp_ColliderData_Base GetColliderDataFor(Collider collider)
		{
			return null;
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x13804C0", Offset = "0x13804C0", VA = "0x13804C0")]
		public static FImp_ColliderData_Base GetColliderDataFor(Collider2D collider)
		{
			return null;
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x1380A64", Offset = "0x1380A64", VA = "0x1380A64", Slot = "4")]
		public virtual void RefreshColliderData()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x1380AA8", Offset = "0x1380AA8", VA = "0x1380AA8", Slot = "5")]
		public virtual bool PushIfInside(ref Vector3 point, float pointRadius, Vector3 pointOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x1380B98", Offset = "0x1380B98", VA = "0x1380B98")]
		protected FImp_ColliderData_Base()
		{
		}
	}
	[Token(Token = "0x20005DA")]
	public class FImp_ColliderData_Box : FImp_ColliderData_Base
	{
		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09590", Offset = "0xA09590")]
		private BoxCollider <Box>k__BackingField;

		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA095A0", Offset = "0xA095A0")]
		private BoxCollider2D <Box2D>k__BackingField;

		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 boxCenter;

		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 right;

		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 up;

		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 forward;

		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 rightN;

		[Token(Token = "0x4002171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 upN;

		[Token(Token = "0x4002172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 forwardN;

		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 scales;

		[Token(Token = "0x1700039B")]
		public BoxCollider Box
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x1380C50", Offset = "0x1380C50", VA = "0x1380C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19138", Offset = "0xA19138")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x1380C58", Offset = "0x1380C58", VA = "0x1380C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19148", Offset = "0xA19148")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public BoxCollider2D Box2D
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x1380C60", Offset = "0x1380C60", VA = "0x1380C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19158", Offset = "0xA19158")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x1380C68", Offset = "0x1380C68", VA = "0x1380C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19168", Offset = "0xA19168")]
			private set
			{
			}
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x1380208", Offset = "0x1380208", VA = "0x1380208")]
		public FImp_ColliderData_Box(BoxCollider collider)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x1380808", Offset = "0x1380808", VA = "0x1380808")]
		public FImp_ColliderData_Box(BoxCollider2D collider2D)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1380C70", Offset = "0x1380C70", VA = "0x1380C70", Slot = "4")]
		public override void RefreshColliderData()
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x13814C8", Offset = "0x13814C8", VA = "0x13814C8", Slot = "5")]
		public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x13825DC", Offset = "0x13825DC", VA = "0x13825DC")]
		public static void PushOutFromBoxCollider(BoxCollider box, Collision collision, float segmentColliderRadius, ref Vector3 segmentPosition, bool is2D = false)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x1382EFC", Offset = "0x1382EFC", VA = "0x1382EFC")]
		public static void PushOutFromBoxCollider(BoxCollider box, float segmentColliderRadius, ref Vector3 segmentPosition, bool is2D = false)
		{
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x13829C0", Offset = "0x13829C0", VA = "0x13829C0")]
		public static void PushOutFromBoxCollider(BoxCollider box, Collision collision, float segmentColliderRadius, ref Vector3 pos, Vector3 right, Vector3 up, Vector3 forward, Vector3 scales, bool is2D = false)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x1382100", Offset = "0x1382100", VA = "0x1382100")]
		private Vector3 GetNearestPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x13839FC", Offset = "0x13839FC", VA = "0x13839FC")]
		private static Vector3 GetNearestPoint(Vector3 point, Vector3 boxCenter, Vector3 right, Vector3 up, Vector3 forward, bool is2D = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1381CC8", Offset = "0x1381CC8", VA = "0x1381CC8")]
		private static float PlaneDistance(Vector3 planeCenter, Vector3 planeNormal, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1384574", Offset = "0x1384574", VA = "0x1384574")]
		private static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 point, float distance)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022B2")]
		[Address(RVA = "0x1381D94", Offset = "0x1381D94", VA = "0x1381D94")]
		private static bool SphereInsidePlane(float planeDistance, float pointRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x1381DA4", Offset = "0x1381DA4", VA = "0x1381DA4")]
		private static bool SphereIntersectsPlane(float planeDistance, float pointRadius)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x1381E1C", Offset = "0x1381E1C", VA = "0x1381E1C")]
		public static bool IsInsideBoxCollider(BoxCollider collider, Vector3 point, bool is2D = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x1381F9C", Offset = "0x1381F9C", VA = "0x1381F9C")]
		public static bool IsInsideBoxCollider(BoxCollider2D collider, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x1383F8C", Offset = "0x1383F8C", VA = "0x1383F8C")]
		protected static float GetBoxAverageScale(BoxCollider box)
		{
			return default(float);
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x13812A0", Offset = "0x13812A0", VA = "0x13812A0")]
		protected static Vector3 GetBoxCenter(BoxCollider box)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x1381398", Offset = "0x1381398", VA = "0x1381398")]
		protected static Vector3 GetBoxCenter(BoxCollider2D box)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x1384078", Offset = "0x1384078", VA = "0x1384078")]
		protected static Vector3 GetTargetPlaneNormal(BoxCollider boxCollider, Vector3 point, Vector3 right, Vector3 up, Vector3 forward, Vector3 scales, bool is2D = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x13843BC", Offset = "0x13843BC", VA = "0x13843BC")]
		protected static Vector3 GetIntersectOnBoxFromInside(BoxCollider boxCollider, Vector3 from, Vector3 to, Vector3 planeNormal)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005DB")]
	public class FImp_ColliderData_Capsule : FImp_ColliderData_Base
	{
		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA095B0", Offset = "0xA095B0")]
		private CapsuleCollider <Capsule>k__BackingField;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA095C0", Offset = "0xA095C0")]
		private CapsuleCollider2D <Capsule2D>k__BackingField;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 Top;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 Bottom;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 Direction;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float radius;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float scaleFactor;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float preRadius;

		[Token(Token = "0x1700039D")]
		public CapsuleCollider Capsule
		{
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x1384660", Offset = "0x1384660", VA = "0x1384660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19178", Offset = "0xA19178")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x1384668", Offset = "0x1384668", VA = "0x1384668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19188", Offset = "0xA19188")]
			private set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public CapsuleCollider2D Capsule2D
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x1384670", Offset = "0x1384670", VA = "0x1384670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19198", Offset = "0xA19198")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x1384678", Offset = "0x1384678", VA = "0x1384678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191A8", Offset = "0xA191A8")]
			private set
			{
			}
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1380148", Offset = "0x1380148", VA = "0x1380148")]
		public FImp_ColliderData_Capsule(CapsuleCollider collider)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x1380744", Offset = "0x1380744", VA = "0x1380744")]
		public FImp_ColliderData_Capsule(CapsuleCollider2D collider)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1384A74", Offset = "0x1384A74", VA = "0x1384A74", Slot = "4")]
		public override void RefreshColliderData()
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x13852F0", Offset = "0x13852F0", VA = "0x13852F0", Slot = "5")]
		public override bool PushIfInside(ref Vector3 point, float pointRadius, Vector3 pointOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x138580C", Offset = "0x138580C", VA = "0x138580C")]
		public static bool PushOutFromCapsuleCollider(CapsuleCollider capsule, float segmentColliderRadius, ref Vector3 pos, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1385340", Offset = "0x1385340", VA = "0x1385340")]
		public static bool PushOutFromCapsuleCollider(float segmentColliderRadius, ref Vector3 segmentPos, Vector3 capSphereCenter1, Vector3 capSphereCenter2, float capsuleRadius, Vector3 segmentOffset, bool is2D = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x1384680", Offset = "0x1384680", VA = "0x1384680")]
		protected static void CalculateCapsuleParameters(CapsuleCollider capsule, ref Vector3 direction, ref float trueRadius, ref float scalerFactor)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x1384C9C", Offset = "0x1384C9C", VA = "0x1384C9C")]
		private static float GetCapsule2DRadius(CapsuleCollider2D capsule)
		{
			return default(float);
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x1385980", Offset = "0x1385980", VA = "0x1385980")]
		private static float GetCapsule2DHeight(CapsuleCollider2D capsule)
		{
			return default(float);
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x13848B4", Offset = "0x13848B4", VA = "0x13848B4")]
		protected static void CalculateCapsuleParameters(CapsuleCollider2D capsule, ref Vector3 direction, ref float trueRadius, ref float scalerFactor)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x1384CE8", Offset = "0x1384CE8", VA = "0x1384CE8")]
		protected static void GetCapsuleHeadsPositions(CapsuleCollider capsule, ref Vector3 upper, ref Vector3 bottom, Vector3 direction, float radius, float scalerFactor)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x1384FD8", Offset = "0x1384FD8", VA = "0x1384FD8")]
		protected static void GetCapsuleHeadsPositions(CapsuleCollider2D capsule, ref Vector3 upper, ref Vector3 bottom, Vector3 direction, float radius, float scalerFactor)
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class FImp_ColliderData_Mesh : FImp_ColliderData_Base
	{
		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA095D0", Offset = "0xA095D0")]
		private MeshCollider <Mesh>k__BackingField;

		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA095E0", Offset = "0xA095E0")]
		private PolygonCollider2D <Poly2D>k__BackingField;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ContactFilter2D filter;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RaycastHit2D[] r;

		[Token(Token = "0x1700039F")]
		public MeshCollider Mesh
		{
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0x13859CC", Offset = "0x13859CC", VA = "0x13859CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191B8", Offset = "0xA191B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x13859D4", Offset = "0x13859D4", VA = "0x13859D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191C8", Offset = "0xA191C8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A0")]
		public PolygonCollider2D Poly2D
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x13859DC", Offset = "0x13859DC", VA = "0x13859DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191D8", Offset = "0xA191D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x13859E4", Offset = "0x13859E4", VA = "0x13859E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191E8", Offset = "0xA191E8")]
			private set
			{
			}
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x138038C", Offset = "0x138038C", VA = "0x138038C")]
		public FImp_ColliderData_Mesh(MeshCollider collider)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x1380990", Offset = "0x1380990", VA = "0x1380990")]
		public FImp_ColliderData_Mesh(PolygonCollider2D collider)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x13859EC", Offset = "0x13859EC", VA = "0x13859EC", Slot = "5")]
		public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x1386848", Offset = "0x1386848", VA = "0x1386848")]
		public static void PushOutFromMeshCollider(MeshCollider mesh, Collision collision, float segmentColliderRadius, ref Vector3 pos)
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public class FImp_ColliderData_Sphere : FImp_ColliderData_Base
	{
		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA095F0", Offset = "0xA095F0")]
		private SphereCollider <Sphere>k__BackingField;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09600", Offset = "0xA09600")]
		private CircleCollider2D <Sphere2D>k__BackingField;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float SphereRadius;

		[Token(Token = "0x170003A1")]
		public SphereCollider Sphere
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x1386C80", Offset = "0x1386C80", VA = "0x1386C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA191F8", Offset = "0xA191F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x1386C88", Offset = "0x1386C88", VA = "0x1386C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19208", Offset = "0xA19208")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public CircleCollider2D Sphere2D
		{
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0x1386C90", Offset = "0x1386C90", VA = "0x1386C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19218", Offset = "0xA19218")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x1386C98", Offset = "0x1386C98", VA = "0x1386C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19228", Offset = "0xA19228")]
			private set
			{
			}
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x13800C8", Offset = "0x13800C8", VA = "0x13800C8")]
		public FImp_ColliderData_Sphere(SphereCollider collider)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x13806BC", Offset = "0x13806BC", VA = "0x13806BC")]
		public FImp_ColliderData_Sphere(CircleCollider2D collider)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x1386CA0", Offset = "0x1386CA0", VA = "0x1386CA0", Slot = "4")]
		public override void RefreshColliderData()
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x1386E60", Offset = "0x1386E60", VA = "0x1386E60", Slot = "5")]
		public override bool PushIfInside(ref Vector3 point, float pointRadius, Vector3 pointOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x13873BC", Offset = "0x13873BC", VA = "0x13873BC")]
		public static bool PushOutFromSphereCollider(SphereCollider sphere, float segmentColliderRadius, ref Vector3 segmentPos, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1386E94", Offset = "0x1386E94", VA = "0x1386E94")]
		public static bool PushOutFromSphereCollider(SphereCollider sphere, float segmentColliderRadius, ref Vector3 segmentPos, float collidingSphereRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x1387100", Offset = "0x1387100", VA = "0x1387100")]
		public static bool PushOutFromSphereCollider(CircleCollider2D sphere, float segmentColliderRadius, ref Vector3 segmentPos, float collidingSphereRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x138741C", Offset = "0x138741C", VA = "0x138741C")]
		public static float CalculateTrueRadiusOfSphereCollider(SphereCollider sphere)
		{
			return default(float);
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x1386D94", Offset = "0x1386D94", VA = "0x1386D94")]
		public static float CalculateTrueRadiusOfSphereCollider(Transform transform, float componentRadius)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005DE")]
	public class FImp_ColliderData_Terrain : FImp_ColliderData_Base
	{
		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09610", Offset = "0xA09610")]
		private TerrainCollider <TerrCollider>k__BackingField;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09620", Offset = "0xA09620")]
		private Terrain <TerrainComponent>k__BackingField;

		[Token(Token = "0x170003A3")]
		public TerrainCollider TerrCollider
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0x138745C", Offset = "0x138745C", VA = "0x138745C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19238", Offset = "0xA19238")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0x1387464", Offset = "0x1387464", VA = "0x1387464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19248", Offset = "0xA19248")]
			private set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public Terrain TerrainComponent
		{
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0x138746C", Offset = "0x138746C", VA = "0x138746C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19258", Offset = "0xA19258")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0x1387474", Offset = "0x1387474", VA = "0x1387474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19268", Offset = "0xA19268")]
			private set
			{
			}
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x1380400", Offset = "0x1380400", VA = "0x1380400")]
		public FImp_ColliderData_Terrain(TerrainCollider collider)
		{
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x138747C", Offset = "0x138747C", VA = "0x138747C", Slot = "5")]
		public override bool PushIfInside(ref Vector3 segmentPosition, float segmentRadius, Vector3 segmentOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1387848", Offset = "0x1387848", VA = "0x1387848")]
		public static void PushOutFromTerrain(TerrainCollider terrainCollider, float segmentRadius, ref Vector3 point)
		{
		}
	}
}
namespace FIMSpace.FTools
{
	[Serializable]
	[Token(Token = "0x20005DF")]
	public abstract class FIK_ProcessorBase
	{
		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09630", Offset = "0xA09630")]
		public float IKWeight;

		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 IKTargetPosition;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion IKTargetRotation;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 LastLocalDirection;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 LocalDirection;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float fullLength;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09648", Offset = "0xA09648")]
		private bool <Initialized>k__BackingField;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09658", Offset = "0xA09658")]
		private FIK_IKBoneBase[] <Bones>k__BackingField;

		[Token(Token = "0x170003A5")]
		public bool Initialized
		{
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0x13797EC", Offset = "0x13797EC", VA = "0x13797EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19278", Offset = "0xA19278")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0x13797F4", Offset = "0x13797F4", VA = "0x13797F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19288", Offset = "0xA19288")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public FIK_IKBoneBase[] Bones
		{
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0x1379800", Offset = "0x1379800", VA = "0x1379800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19298", Offset = "0xA19298")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0x1379808", Offset = "0x1379808", VA = "0x1379808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA192A8", Offset = "0xA192A8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003A7")]
		public FIK_IKBoneBase StartBone
		{
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0x1378C88", Offset = "0x1378C88", VA = "0x1378C88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A8")]
		public FIK_IKBoneBase EndBone
		{
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x137752C", Offset = "0x137752C", VA = "0x137752C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1379810", Offset = "0x1379810", VA = "0x1379810", Slot = "4")]
		public virtual void Init(Transform root)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1379814", Offset = "0x1379814", VA = "0x1379814", Slot = "5")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x1377488", Offset = "0x1377488", VA = "0x1377488")]
		protected FIK_ProcessorBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E0")]
	public abstract class FIK_IKBoneBase
	{
		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09668", Offset = "0xA09668")]
		private FIK_IKBoneBase <Child>k__BackingField;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09678", Offset = "0xA09678")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BoneLength;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MotionWeight;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 InitialLocalPosition;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Quaternion InitialLocalRotation;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion LastKeyLocalRotation;

		[Token(Token = "0x170003A9")]
		private FIK_IKBoneBase Child
		{
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x13797D4", Offset = "0x13797D4", VA = "0x13797D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA192B8", Offset = "0xA192B8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public Transform transform
		{
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x13797DC", Offset = "0x13797DC", VA = "0x13797DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA192C8", Offset = "0xA192C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x13797E4", Offset = "0x13797E4", VA = "0x13797E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA192D8", Offset = "0xA192D8")]
			protected set
			{
			}
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x1378F90", Offset = "0x1378F90", VA = "0x1378F90")]
		public FIK_IKBoneBase(Transform t)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x1379030", Offset = "0x1379030", VA = "0x1379030", Slot = "4")]
		public virtual void SetChild(FIK_IKBoneBase child)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E1")]
	public class FIK_CCDProcessor : FIK_ProcessorBase
	{
		[Serializable]
		[Token(Token = "0x20005E2")]
		public class CCDIKBone : FIK_IKBoneBase
		{
			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA096F8", Offset = "0xA096F8")]
			private CCDIKBone <IKParent>k__BackingField;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09708", Offset = "0xA09708")]
			private CCDIKBone <IKChild>k__BackingField;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09718", Offset = "0xA09718")]
			public float AngleLimit;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09734", Offset = "0xA09734")]
			public float TwistAngleLimit;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector3 ForwardOrientation;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public float FrameWorldLength;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Vector2 HingeLimits;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public Quaternion PreviousHingeRotation;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float PreviousHingeAngle;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public Vector3 LastIKLocPosition;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Quaternion LastIKLocRotation;

			[Token(Token = "0x170003AC")]
			public CCDIKBone IKParent
			{
				[Token(Token = "0x6002301")]
				[Address(RVA = "0x1378F70", Offset = "0x1378F70", VA = "0x1378F70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19308", Offset = "0xA19308")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002302")]
				[Address(RVA = "0x1378F78", Offset = "0x1378F78", VA = "0x1378F78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19318", Offset = "0xA19318")]
				private set
				{
				}
			}

			[Token(Token = "0x170003AD")]
			public CCDIKBone IKChild
			{
				[Token(Token = "0x6002303")]
				[Address(RVA = "0x1378F80", Offset = "0x1378F80", VA = "0x1378F80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19328", Offset = "0xA19328")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002304")]
				[Address(RVA = "0x1378F88", Offset = "0x1378F88", VA = "0x1378F88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19338", Offset = "0xA19338")]
				private set
				{
				}
			}

			[Token(Token = "0x6002305")]
			[Address(RVA = "0x1377498", Offset = "0x1377498", VA = "0x1377498")]
			public CCDIKBone(Transform t)
			{
			}

			[Token(Token = "0x6002306")]
			[Address(RVA = "0x1377924", Offset = "0x1377924", VA = "0x1377924")]
			public void Init(CCDIKBone child, CCDIKBone parent)
			{
			}

			[Token(Token = "0x6002307")]
			[Address(RVA = "0x137902C", Offset = "0x137902C", VA = "0x137902C", Slot = "4")]
			public override void SetChild(FIK_IKBoneBase child)
			{
			}

			[Token(Token = "0x6002308")]
			[Address(RVA = "0x13789EC", Offset = "0x13789EC", VA = "0x13789EC")]
			public void AngleLimiting()
			{
			}

			[Token(Token = "0x6002309")]
			[Address(RVA = "0x137914C", Offset = "0x137914C", VA = "0x137914C")]
			private Quaternion LimitSpherical(Quaternion rotation)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600230A")]
			[Address(RVA = "0x13792FC", Offset = "0x13792FC", VA = "0x13792FC")]
			private Quaternion LimitZ(Quaternion currentRotation)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600230B")]
			[Address(RVA = "0x1379524", Offset = "0x1379524", VA = "0x1379524")]
			private Quaternion LimitHinge(Quaternion rotation)
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CCDIKBone[] IKBones;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool ContinousSolving;

		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09688", Offset = "0xA09688")]
		public float SyncWithAnimator;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA096A0", Offset = "0xA096A0")]
		public int ReactionQuality;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA096B8", Offset = "0xA096B8")]
		public float Smoothing;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA096D0", Offset = "0xA096D0")]
		public float MaxStretching;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve StretchCurve;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool Use2D;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA096E8", Offset = "0xA096E8")]
		private float <ActiveLength>k__BackingField;

		[Token(Token = "0x170003AB")]
		public float ActiveLength
		{
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x1377478", Offset = "0x1377478", VA = "0x1377478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA192E8", Offset = "0xA192E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x1377480", Offset = "0x1377480", VA = "0x1377480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA192F8", Offset = "0xA192F8")]
			private set
			{
			}
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x136A214", Offset = "0x136A214", VA = "0x136A214")]
		public FIK_CCDProcessor(Transform[] bonesChain)
		{
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x137756C", Offset = "0x137756C", VA = "0x137756C", Slot = "4")]
		public override void Init(Transform root)
		{
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x13779A0", Offset = "0x13779A0", VA = "0x13779A0", Slot = "5")]
		public override void Update()
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x137850C", Offset = "0x137850C", VA = "0x137850C")]
		protected Vector3 GetGoalPivotOffset()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x1378CBC", Offset = "0x1378CBC", VA = "0x1378CBC")]
		private bool GoalPivotOffsetDetected()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x13788AC", Offset = "0x13788AC", VA = "0x13788AC")]
		private Vector3 RefreshLocalDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x1378804", Offset = "0x1378804", VA = "0x1378804")]
		private float GetVelocityDifference()
		{
			return default(float);
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x136A5EC", Offset = "0x136A5EC", VA = "0x136A5EC")]
		public void AutoLimitAngle(float angleLimit = 60f, float twistAngleLimit = 50f)
		{
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x136A464", Offset = "0x136A464", VA = "0x136A464")]
		public void AutoWeightBones(float baseValue = 1f)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x136A4EC", Offset = "0x136A4EC", VA = "0x136A4EC")]
		public void AutoWeightBones(AnimationCurve weightCurve)
		{
		}
	}
}
namespace FIMSpace.Basics
{
	[Token(Token = "0x20005E3")]
	public class FBasic_FreeCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA09750", Offset = "0xA09750")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09750", Offset = "0xA09750")]
		public float SpeedMultiplier;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA097B0", Offset = "0xA097B0")]
		public float AccelerationSmothnessValue;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA097E8", Offset = "0xA097E8")]
		public float RotationSmothnessValue;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MouseSensitivity;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool NeedRMB;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float turboModeMultiply;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 speeds;

		[Token(Token = "0x40021AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float ySpeed;

		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 rotation;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float turbo;

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x137EEB8", Offset = "0x137EEB8", VA = "0x137EEB8")]
		private void Start()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x137EF70", Offset = "0x137EF70", VA = "0x137EF70")]
		private void Update()
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x137F5A4", Offset = "0x137F5A4", VA = "0x137F5A4")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x137F60C", Offset = "0x137F60C", VA = "0x137F60C")]
		public FBasic_FreeCameraBehaviour()
		{
		}
	}
}
namespace FIMSpace.FTail
{
	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9FD80C", Offset = "0x9FD80C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD80C", Offset = "0x9FD80C")]
	public class TailAnimator2 : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Serializable]
		[Token(Token = "0x20005E5")]
		public class TailSegment
		{
			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B120", Offset = "0xA0B120")]
			private TailSegment <ParentBone>k__BackingField;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B130", Offset = "0xA0B130")]
			private TailSegment <ChildBone>k__BackingField;

			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B140", Offset = "0xA0B140")]
			private Transform <transform>k__BackingField;

			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B150", Offset = "0xA0B150")]
			private int <Index>k__BackingField;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B160", Offset = "0xA0B160")]
			private float <IndexOverlLength>k__BackingField;

			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 ProceduralPosition;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 ProceduralPositionWeightBlended;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion TrueTargetRotation;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion PosRefRotation;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Quaternion PreviousPosReferenceRotation;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Vector3 PreviousPosition;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float BlendValue;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B170", Offset = "0xA0B170")]
			private float <BoneLength>k__BackingField;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			public Vector3 BoneDimensionsScaled;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public float BoneLengthScaled;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
			public Vector3 InitialLocalPosition;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public Vector3 LocalOffset;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
			public Quaternion InitialLocalRotation;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			public float ColliderRadius;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public bool CollisionContactFlag;

			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public float CollisionContactRelevancy;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Collision collisionContacts;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Vector3 VelocityHelper;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Quaternion QVelocityHelper;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			public Vector3 PreviousPush;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public Quaternion Curving;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public Vector3 Gravity;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			public Vector3 GravityLookOffset;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public float LengthMultiplier;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			public float PositionSpeed;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			public float RotationSpeed;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
			public float Springiness;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public float Slithery;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
			public float Curling;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			public float Slippery;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B180", Offset = "0xA0B180")]
			private TailCollisionHelper <CollisionHelper>k__BackingField;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B190", Offset = "0xA0B190")]
			private Vector3 <LastFinalPosition>k__BackingField;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B1A0", Offset = "0xA0B1A0")]
			private Quaternion <LastFinalRotation>k__BackingField;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B1B0", Offset = "0xA0B1B0")]
			private float <DeflectionFactor>k__BackingField;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B1C0", Offset = "0xA0B1C0")]
			private Vector3 <Deflection>k__BackingField;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B1D0", Offset = "0xA0B1D0")]
			private float <DeflectionSmooth>k__BackingField;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			private float deflectionSmoothVelo;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B1E0", Offset = "0xA0B1E0")]
			private Vector3 <DeflectionWorldPosition>k__BackingField;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B1F0", Offset = "0xA0B1F0")]
			private int <DeflectionRelevancy>k__BackingField;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B200", Offset = "0xA0B200")]
			private FImp_ColliderData_Base <LatestSelectiveCollision>k__BackingField;

			[Token(Token = "0x170003B4")]
			public TailSegment ParentBone
			{
				[Token(Token = "0x6002385")]
				[Address(RVA = "0x137556C", Offset = "0x137556C", VA = "0x137556C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1940C", Offset = "0xA1940C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002386")]
				[Address(RVA = "0x1375574", Offset = "0x1375574", VA = "0x1375574")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1941C", Offset = "0xA1941C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003B5")]
			public TailSegment ChildBone
			{
				[Token(Token = "0x6002387")]
				[Address(RVA = "0x137557C", Offset = "0x137557C", VA = "0x137557C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1942C", Offset = "0xA1942C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002388")]
				[Address(RVA = "0x1375584", Offset = "0x1375584", VA = "0x1375584")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1943C", Offset = "0xA1943C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003B6")]
			public Transform transform
			{
				[Token(Token = "0x6002389")]
				[Address(RVA = "0x137558C", Offset = "0x137558C", VA = "0x137558C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1944C", Offset = "0xA1944C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600238A")]
				[Address(RVA = "0x1375594", Offset = "0x1375594", VA = "0x1375594")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1945C", Offset = "0xA1945C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003B7")]
			public int Index
			{
				[Token(Token = "0x600238B")]
				[Address(RVA = "0x137559C", Offset = "0x137559C", VA = "0x137559C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1946C", Offset = "0xA1946C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600238C")]
				[Address(RVA = "0x13755A4", Offset = "0x13755A4", VA = "0x13755A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1947C", Offset = "0xA1947C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003B8")]
			public float IndexOverlLength
			{
				[Token(Token = "0x600238D")]
				[Address(RVA = "0x13755AC", Offset = "0x13755AC", VA = "0x13755AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1948C", Offset = "0xA1948C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x600238E")]
				[Address(RVA = "0x13755B4", Offset = "0x13755B4", VA = "0x13755B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1949C", Offset = "0xA1949C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003B9")]
			public float BoneLength
			{
				[Token(Token = "0x600238F")]
				[Address(RVA = "0x13755BC", Offset = "0x13755BC", VA = "0x13755BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA194AC", Offset = "0xA194AC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002390")]
				[Address(RVA = "0x13755C4", Offset = "0x13755C4", VA = "0x13755C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA194BC", Offset = "0xA194BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003BA")]
			public TailCollisionHelper CollisionHelper
			{
				[Token(Token = "0x6002391")]
				[Address(RVA = "0x13755CC", Offset = "0x13755CC", VA = "0x13755CC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA194CC", Offset = "0xA194CC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002392")]
				[Address(RVA = "0x13755D4", Offset = "0x13755D4", VA = "0x13755D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA194DC", Offset = "0xA194DC")]
				internal set
				{
				}
			}

			[Token(Token = "0x170003BB")]
			public Quaternion LastKeyframeLocalRotation
			{
				[Token(Token = "0x600239C")]
				[Address(RVA = "0x13706EC", Offset = "0x13706EC", VA = "0x13706EC")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x170003BC")]
			public Vector3 LastKeyframeLocalPosition
			{
				[Token(Token = "0x600239D")]
				[Address(RVA = "0x136BF10", Offset = "0x136BF10", VA = "0x136BF10")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170003BD")]
			public Vector3 LastFinalPosition
			{
				[Token(Token = "0x600239E")]
				[Address(RVA = "0x13757F0", Offset = "0x13757F0", VA = "0x13757F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA194EC", Offset = "0xA194EC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x600239F")]
				[Address(RVA = "0x1375800", Offset = "0x1375800", VA = "0x1375800")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA194FC", Offset = "0xA194FC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003BE")]
			public Quaternion LastFinalRotation
			{
				[Token(Token = "0x60023A0")]
				[Address(RVA = "0x1375810", Offset = "0x1375810", VA = "0x1375810")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1950C", Offset = "0xA1950C")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x60023A1")]
				[Address(RVA = "0x1375824", Offset = "0x1375824", VA = "0x1375824")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1951C", Offset = "0xA1951C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003BF")]
			public float DeflectionFactor
			{
				[Token(Token = "0x60023A5")]
				[Address(RVA = "0x13758F4", Offset = "0x13758F4", VA = "0x13758F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1952C", Offset = "0xA1952C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60023A6")]
				[Address(RVA = "0x13758FC", Offset = "0x13758FC", VA = "0x13758FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1953C", Offset = "0xA1953C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003C0")]
			private Vector3 Deflection
			{
				[Token(Token = "0x60023A7")]
				[Address(RVA = "0x1375904", Offset = "0x1375904", VA = "0x1375904")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1954C", Offset = "0xA1954C")]
				set
				{
				}
			}

			[Token(Token = "0x170003C1")]
			public float DeflectionSmooth
			{
				[Token(Token = "0x60023A8")]
				[Address(RVA = "0x1375914", Offset = "0x1375914", VA = "0x1375914")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1955C", Offset = "0xA1955C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60023A9")]
				[Address(RVA = "0x137591C", Offset = "0x137591C", VA = "0x137591C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1956C", Offset = "0xA1956C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003C2")]
			public Vector3 DeflectionWorldPosition
			{
				[Token(Token = "0x60023AA")]
				[Address(RVA = "0x1375924", Offset = "0x1375924", VA = "0x1375924")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1957C", Offset = "0xA1957C")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x60023AB")]
				[Address(RVA = "0x1375934", Offset = "0x1375934", VA = "0x1375934")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1958C", Offset = "0xA1958C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003C3")]
			public int DeflectionRelevancy
			{
				[Token(Token = "0x60023AC")]
				[Address(RVA = "0x1375944", Offset = "0x1375944", VA = "0x1375944")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1959C", Offset = "0xA1959C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60023AD")]
				[Address(RVA = "0x137594C", Offset = "0x137594C", VA = "0x137594C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA195AC", Offset = "0xA195AC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003C4")]
			internal FImp_ColliderData_Base LatestSelectiveCollision
			{
				[Token(Token = "0x60023AE")]
				[Address(RVA = "0x1375954", Offset = "0x1375954", VA = "0x1375954")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA195BC", Offset = "0xA195BC")]
				set
				{
				}
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0x13755E4", Offset = "0x13755E4", VA = "0x13755E4")]
			public TailSegment()
			{
			}

			[Token(Token = "0x6002394")]
			[Address(RVA = "0x136EB20", Offset = "0x136EB20", VA = "0x136EB20")]
			public TailSegment(Transform transform)
			{
			}

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x136FACC", Offset = "0x136FACC", VA = "0x136FACC")]
			public TailSegment(TailSegment copyFrom)
			{
			}

			[Token(Token = "0x6002396")]
			[Address(RVA = "0x136ED98", Offset = "0x136ED98", VA = "0x136ED98")]
			public void ReInitializeLocalPosRot(Vector3 initLocalPos, Quaternion initLocalRot)
			{
			}

			[Token(Token = "0x6002397")]
			[Address(RVA = "0x136EC5C", Offset = "0x136EC5C", VA = "0x136EC5C")]
			public void SetIndex(int i, int tailSegments)
			{
			}

			[Token(Token = "0x6002398")]
			[Address(RVA = "0x136EC80", Offset = "0x136EC80", VA = "0x136EC80")]
			public void SetParentRef(TailSegment parent)
			{
			}

			[Token(Token = "0x6002399")]
			[Address(RVA = "0x136EDBC", Offset = "0x136EDBC", VA = "0x136EDBC")]
			public void SetChildRef(TailSegment child)
			{
			}

			[Token(Token = "0x600239A")]
			[Address(RVA = "0x1368F88", Offset = "0x1368F88", VA = "0x1368F88")]
			public float GetRadiusScaled()
			{
				return default(float);
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x136ED7C", Offset = "0x136ED7C", VA = "0x136ED7C")]
			internal void Validate()
			{
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x1375838", Offset = "0x1375838", VA = "0x1375838")]
			internal Vector3 ParentToFrontOffset()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x136EDAC", Offset = "0x136EDAC", VA = "0x136EDAC")]
			public void RefreshFinalPos(Vector3 pos)
			{
			}

			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x136C2D0", Offset = "0x136C2D0", VA = "0x136C2D0")]
			public void RefreshFinalRot(Quaternion rot)
			{
			}

			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x1373A28", Offset = "0x1373A28", VA = "0x1373A28")]
			public bool CheckDeflectionState(float zeroWhenLower, float smoothTime, float delta)
			{
				return default(bool);
			}

			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x1373F30", Offset = "0x1373F30", VA = "0x1373F30")]
			public bool DeflectionRelevant()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x1373E8C", Offset = "0x1373E8C", VA = "0x1373E8C")]
			public bool? DeflectionRestoreState()
			{
				return null;
			}

			[Token(Token = "0x60023B2")]
			[Address(RVA = "0x136B3AC", Offset = "0x136B3AC", VA = "0x136B3AC")]
			internal void ParamsFrom(TailSegment other)
			{
			}

			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x1374228", Offset = "0x1374228", VA = "0x1374228")]
			internal void ParamsFromAll(TailSegment other)
			{
			}

			[Token(Token = "0x60023B4")]
			[Address(RVA = "0x1374624", Offset = "0x1374624", VA = "0x1374624")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		public enum ECollisionSpace
		{
			[Token(Token = "0x40022B9")]
			World_Slow,
			[Token(Token = "0x40022BA")]
			Selective_Fast
		}

		[Token(Token = "0x20005E7")]
		public enum ECollisionMode
		{
			[Token(Token = "0x40022BC")]
			m_3DCollision,
			[Token(Token = "0x40022BD")]
			m_2DCollision
		}

		[Serializable]
		[Token(Token = "0x20005E8")]
		public class IKBoneSettings
		{
			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B210", Offset = "0xA0B210")]
			public float AngleLimit;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B22C", Offset = "0xA0B22C")]
			public float TwistAngleLimit;

			[Token(Token = "0x60023B5")]
			[Address(RVA = "0x136AC84", Offset = "0x136AC84", VA = "0x136AC84")]
			public IKBoneSettings()
			{
			}
		}

		[Token(Token = "0x20005E9")]
		public enum FEWavingType
		{
			[Token(Token = "0x40022C1")]
			Simple,
			[Token(Token = "0x40022C2")]
			Advanced
		}

		[Token(Token = "0x20005EA")]
		public enum EFDeltaType
		{
			[Token(Token = "0x40022C4")]
			DeltaTime,
			[Token(Token = "0x40022C5")]
			SmoothDeltaTime,
			[Token(Token = "0x40022C6")]
			UnscaledDeltaTime,
			[Token(Token = "0x40022C7")]
			FixedDeltaTime,
			[Token(Token = "0x40022C8")]
			SafeDelta
		}

		[Token(Token = "0x20005EB")]
		public enum EAnimationStyle
		{
			[Token(Token = "0x40022CA")]
			Quick,
			[Token(Token = "0x40022CB")]
			Accelerating,
			[Token(Token = "0x40022CC")]
			Linear
		}

		[Token(Token = "0x20005EC")]
		public enum ETailCategory
		{
			[Token(Token = "0x40022CE")]
			Setup,
			[Token(Token = "0x40022CF")]
			Tweak,
			[Token(Token = "0x40022D0")]
			Features,
			[Token(Token = "0x40022D1")]
			Shaping
		}

		[Token(Token = "0x20005ED")]
		public enum ETailFeaturesCategory
		{
			[Token(Token = "0x40022D3")]
			Main,
			[Token(Token = "0x40022D4")]
			Collisions,
			[Token(Token = "0x40022D5")]
			IK,
			[Token(Token = "0x40022D6")]
			Experimental
		}

		[Token(Token = "0x20005EE")]
		public enum EFixedMode
		{
			[Token(Token = "0x40022D8")]
			None,
			[Token(Token = "0x40022D9")]
			Basic,
			[Token(Token = "0x40022DA")]
			Late
		}

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD85C", Offset = "0x9FD85C")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider col;

			[Token(Token = "0x60023B6")]
			[Address(RVA = "0x1369334", Offset = "0x1369334", VA = "0x1369334")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x1375228", Offset = "0x1375228", VA = "0x1375228")]
			internal bool <CheckForColliderDuplicatesAndNulls>b__0(Collider o)
			{
				return default(bool);
			}

			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x13752A4", Offset = "0x13752A4", VA = "0x13752A4")]
			internal bool <CheckForColliderDuplicatesAndNulls>b__1(Collider o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD86C", Offset = "0x9FD86C")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider2D col;

			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x13694E4", Offset = "0x13694E4", VA = "0x13694E4")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x1375320", Offset = "0x1375320", VA = "0x1375320")]
			internal bool <CheckForColliderDuplicatesAndNulls2D>b__0(Collider2D o)
			{
				return default(bool);
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x137539C", Offset = "0x137539C", VA = "0x137539C")]
			internal bool <CheckForColliderDuplicatesAndNulls2D>b__1(Collider2D o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD87C", Offset = "0x9FD87C")]
		private sealed class <LateFixed>d__265 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TailAnimator2 <>4__this;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForFixedUpdate <fixedWait>5__2;

			[Token(Token = "0x170003C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BF")]
				[Address(RVA = "0x13754FC", Offset = "0x13754FC", VA = "0x13754FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C1")]
				[Address(RVA = "0x1375564", Offset = "0x1375564", VA = "0x1375564", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x13739FC", Offset = "0x13739FC", VA = "0x13739FC")]
			[DebuggerHidden]
			public <LateFixed>d__265(int <>1__state)
			{
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x1375418", Offset = "0x1375418", VA = "0x1375418", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x137541C", Offset = "0x137541C", VA = "0x137541C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x1375504", Offset = "0x1375504", VA = "0x1375504", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09820", Offset = "0xA09820")]
		public bool UseCollision;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09858", Offset = "0xA09858")]
		public ECollisionSpace CollisionSpace;

		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ECollisionMode CollisionMode;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09890", Offset = "0xA09890")]
		public bool CheapCollision;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA098C8", Offset = "0xA098C8")]
		public bool DynamicWorldCollidersInclusion;

		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09900", Offset = "0xA09900")]
		public float InclusionRadius;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IgnoreMeshColliders;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Collider> IncludedColliders;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Collider2D> IncludedColliders2D;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA09938", Offset = "0xA09938")]
		private List<Component> <DynamicAlwaysInclude>k__BackingField;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected List<FImp_ColliderData_Base> IncludedCollidersData;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected List<FImp_ColliderData_Base> CollidersDataToCheck;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09948", Offset = "0xA09948")]
		public int CollidersType;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool CollideWithOtherTails;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09980", Offset = "0xA09980")]
		public bool CollideWithDisabledColliders;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA099B8", Offset = "0xA099B8")]
		public float CollisionSlippery;

		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA099D0", Offset = "0xA099D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA099D0", Offset = "0xA099D0")]
		public float ReflectCollision;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve CollidersScaleCurve;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float CollidersScaleMul;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09A24", Offset = "0xA09A24")]
		public float CollisionsAutoCurve;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Collider> IgnoredColliders;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Collider2D> IgnoredColliders2D;

		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool CollidersSameLayer;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09A3C", Offset = "0xA09A3C")]
		public bool CollidersAddRigidbody;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float RigidbodyMass;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[FPD_Layers]
		public int CollidersLayer;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool UseSlitheryCurve;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09A84", Offset = "0xA09A84")]
		public AnimationCurve SlitheryCurve;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float lastSlithery;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Keyframe[] lastSlitheryCurvKeys;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool UseCurlingCurve;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09AC4", Offset = "0xA09AC4")]
		public AnimationCurve CurlingCurve;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float lastCurling;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Keyframe[] lastCurlingCurvKeys;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public bool UseSpringCurve;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09B00", Offset = "0xA09B00")]
		public AnimationCurve SpringCurve;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float lastSpringiness;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Keyframe[] lastSpringCurvKeys;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool UseSlipperyCurve;

		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09B3C", Offset = "0xA09B3C")]
		public AnimationCurve SlipperyCurve;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float lastSlippery;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Keyframe[] lastSlipperyCurvKeys;

		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool UsePosSpeedCurve;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09B78", Offset = "0xA09B78")]
		public AnimationCurve PosCurve;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float lastPosSpeeds;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Keyframe[] lastPosCurvKeys;

		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public bool UseRotSpeedCurve;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09BB4", Offset = "0xA09BB4")]
		public AnimationCurve RotCurve;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float lastRotSpeeds;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Keyframe[] lastRotCurvKeys;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09BEC", Offset = "0xA09BEC")]
		public bool UsePartialBlend;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09C24", Offset = "0xA09C24")]
		public AnimationCurve BlendCurve;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float lastTailAnimatorAmount;

		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Keyframe[] lastBlendCurvKeys;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private TailSegment _ex_bone;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public bool UseIK;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool ikInitialized;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private FIK_CCDProcessor IK;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09C6C", Offset = "0xA09C6C")]
		public Transform IKTarget;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool IKAutoWeights;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09CA4", Offset = "0xA09CA4")]
		public float IKBaseReactionWeight;

		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09CBC", Offset = "0xA09CBC")]
		public AnimationCurve IKReactionWeightCurve;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool IKAutoAngleLimits;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA09CF4", Offset = "0xA09CF4")]
		public float IKAutoAngleLimit;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09D44", Offset = "0xA09D44")]
		public bool IKContinousSolve;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09D7C", Offset = "0xA09D7C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA09D7C", Offset = "0xA09D7C")]
		public float IKBlend;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA09DF0", Offset = "0xA09DF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09DF0", Offset = "0xA09DF0")]
		public float IKAnimatorBlend;

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09E64", Offset = "0xA09E64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09E64", Offset = "0xA09E64")]
		public int IKReactionQuality;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09EBC", Offset = "0xA09EBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09EBC", Offset = "0xA09EBC")]
		public float IKSmoothing;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA09F10", Offset = "0xA09F10")]
		public float IKMaxStretching;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA09F28", Offset = "0xA09F28")]
		public AnimationCurve IKStretchCurve;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public List<IKBoneSettings> IKLimitSettings;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<TailSegment> _pp_reference;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private TailSegment _pp_ref_rootParent;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private TailSegment _pp_ref_lastChild;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool _pp_initialized;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09F60", Offset = "0xA09F60")]
		public Quaternion RotationOffset;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09F98", Offset = "0xA09F98")]
		public Quaternion Curving;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA09FD0", Offset = "0xA09FD0")]
		public bool UseCurvingCurve;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA0A008", Offset = "0xA0A008")]
		public AnimationCurve CurvCurve;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Quaternion lastCurving;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Keyframe[] lastCurvingKeys;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A03C", Offset = "0xA0A03C")]
		public float LengthMultiplier;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A074", Offset = "0xA0A074")]
		public bool UseLengthMulCurve;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA0A0AC", Offset = "0xA0A0AC")]
		public AnimationCurve LengthMulCurve;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float lastLengthMul;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Keyframe[] lastLengthKeys;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A0DC", Offset = "0xA0A0DC")]
		public bool UseGravityCurve;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA0A114", Offset = "0xA0A114")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A114", Offset = "0xA0A114")]
		public AnimationCurve GravityCurve;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A188", Offset = "0xA0A188")]
		public Vector3 Gravity;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Vector3 lastGravity;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private Keyframe[] lastGravityKeys;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A1C0", Offset = "0xA0A1C0")]
		public bool UseWaving;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x281")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A1F8", Offset = "0xA0A1F8")]
		public bool CosinusAdd;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A230", Offset = "0xA0A230")]
		public float FixedCycle;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A268", Offset = "0xA0A268")]
		public float WavingSpeed;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A2A0", Offset = "0xA0A2A0")]
		public float WavingRange;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A2D8", Offset = "0xA0A2D8")]
		public Vector3 WavingAxis;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0A310", Offset = "0xA0A310")]
		private Quaternion <WavingRotationOffset>k__BackingField;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A320", Offset = "0xA0A320")]
		public FEWavingType WavingType;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A358", Offset = "0xA0A358")]
		public float AlternateWave;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float _waving_waveTime;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float _waving_cosTime;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Vector3 _waving_sustain;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public bool UseWind;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0A390", Offset = "0xA0A390")]
		public float WindEffectPower;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0A3DC", Offset = "0xA0A3DC")]
		public float WindTurbulencePower;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0A428", Offset = "0xA0A428")]
		public float WindWorldNoisePower;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public Vector3 WindEffect;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<TailSegment> TailSegments;

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		[SerializeField]
		private TailSegment GhostParent;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		[SerializeField]
		private TailSegment GhostChild;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Vector3 _limiting_limitPosition;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private Vector3 _limiting_influenceOffset;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private float _limiting_stretchingHelperTooLong;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		private float _limiting_stretchingHelperTooShort;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Quaternion _limiting_angle_ToTargetRot;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private Quaternion _limiting_angle_targetInLocal;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private Quaternion _limiting_angle_newLocal;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private Vector3 _tc_segmentGravityOffset;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		private Vector3 _tc_segmentGravityToParentDir;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		private Vector3 _tc_preGravOff;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A494", Offset = "0xA0A494")]
		public bool UseMaxDistance;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A4CC", Offset = "0xA0A4CC")]
		public Transform DistanceFrom;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public Transform _distanceFrom_Auto;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A514", Offset = "0xA0A514")]
		public float MaximumDistance;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A54C", Offset = "0xA0A54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A54C", Offset = "0xA0A54C")]
		public float MaxOutDistanceFactor;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A5A0", Offset = "0xA0A5A0")]
		public bool DistanceWithoutY;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A5D8", Offset = "0xA0A5D8")]
		public Vector3 DistanceMeasurePoint;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A610", Offset = "0xA0A610")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A610", Offset = "0xA0A610")]
		public float FadeDuration;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		private bool maxDistanceExceed;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private Transform finalDistanceFrom;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		private bool wasCameraSearch;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private float distanceWeight;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		private int _tc_startI;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private int _tc_startII;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0A664", Offset = "0xA0A664")]
		private float <_TC_TailLength>k__BackingField;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		private TailSegment _tc_rootBone;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		private Quaternion _tc_lookRot;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		private Quaternion _tc_targetParentRot;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		private Quaternion _tc_startBoneRotOffset;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private float _tc_tangle;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private float _sg_springVelo;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private float _sg_curly;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40C")]
		private Vector3 _sg_push;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		private Vector3 _sg_targetPos;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		private Vector3 _sg_targetChildWorldPosInParentFront;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		private Vector3 _sg_dirToTargetParentFront;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43C")]
		private Quaternion _sg_orientation;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		private float _sg_slitFactor;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
		private bool wasDisabled;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x454")]
		private float justDelta;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		private float secPeriodDelta;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45C")]
		private float deltaForLerps;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
		private float rateDelta;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		protected float collectedDelta;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
		protected int framesToSimulate;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46C")]
		protected int previousframesToSimulate;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		private bool updateTailAnimator;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x474")]
		private int startAfterTPoseCounter;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
		private bool lateFixedIsRunning;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x479")]
		private bool fixedAllow;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A674", Offset = "0xA0A674")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A674", Offset = "0xA0A674")]
		public float Deflection;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0A6C8", Offset = "0xA0A6C8")]
		public float DeflectionStartAngle;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x484")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A718", Offset = "0xA0A718")]
		public float DeflectionSmooth;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		[AttributeAttribute(Name = "FPD_FixedCurveWindowAttribute", RVA = "0xA0A730", Offset = "0xA0A730")]
		public AnimationCurve DeflectionFalloff;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A76C", Offset = "0xA0A76C")]
		public bool DeflectOnlyCollisions;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
		private List<TailSegment> _defl_source;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		private float _defl_treshold;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A4")]
		public ETailCategory _Editor_Category;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
		public ETailFeaturesCategory _Editor_FeaturesCategory;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		public bool DrawGizmos;

		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A7A4", Offset = "0xA0A7A4")]
		public Transform StartBone;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A7DC", Offset = "0xA0A7DC")]
		public Transform EndBone;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A814", Offset = "0xA0A814")]
		public Vector3 EndBoneJointOffset;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
		public List<Transform> _TransformsGhostChain;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
		public int _GhostChainInitCount;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4DC")]
		protected bool initialized;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A84C", Offset = "0xA0A84C")]
		public int UpdateRate;

		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A884", Offset = "0xA0A884")]
		public EFixedMode AnimatePhysics;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A8BC", Offset = "0xA0A8BC")]
		public bool InterpolateRate;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A8F4", Offset = "0xA0A8F4")]
		public bool Prewarm;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4EC")]
		internal float OverrideWeight;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
		protected float conditionalWeight;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F4")]
		protected bool collisionInitialized;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F5")]
		protected bool forceRefreshCollidersData;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
		private Vector3 previousWorldPosition;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
		protected Transform rootTransform;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
		protected bool preAutoCorrect;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x514")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A92C", Offset = "0xA0A92C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A92C", Offset = "0xA0A92C")]
		public float Slithery;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A984", Offset = "0xA0A984")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A984", Offset = "0xA0A984")]
		public float Curling;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0A9D8", Offset = "0xA0A9D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0A9D8", Offset = "0xA0A9D8")]
		public float Springiness;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AA2C", Offset = "0xA0AA2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AA2C", Offset = "0xA0AA2C")]
		public float MaxStretching;

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x524")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0AA80", Offset = "0xA0AA80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AA80", Offset = "0xA0AA80")]
		public float AngleLimit;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AAF8", Offset = "0xA0AAF8")]
		public Vector3 AngleLimitAxis;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x534")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AB30", Offset = "0xA0AB30")]
		public Vector2 LimitAxisRange;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AB68", Offset = "0xA0AB68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AB68", Offset = "0xA0AB68")]
		public float LimitSmoothing;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ABBC", Offset = "0xA0ABBC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0ABBC", Offset = "0xA0ABBC")]
		public float MotionInfluence;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x544")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AC30", Offset = "0xA0AC30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AC30", Offset = "0xA0AC30")]
		public float MotionInfluenceInY;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AC84", Offset = "0xA0AC84")]
		public bool IncludeParent;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ACBC", Offset = "0xA0ACBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0ACBC", Offset = "0xA0ACBC")]
		public float UnifyBendiness;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AD10", Offset = "0xA0AD10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AD10", Offset = "0xA0AD10")]
		public float ReactionSpeed;

		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x554")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AD64", Offset = "0xA0AD64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0AD64", Offset = "0xA0AD64")]
		public float Sustain;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0ADB8", Offset = "0xA0ADB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0ADB8", Offset = "0xA0ADB8")]
		public float RotationRelevancy;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AE0C", Offset = "0xA0AE0C")]
		public EAnimationStyle SmoothingStyle;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AE44", Offset = "0xA0AE44")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x564")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AE7C", Offset = "0xA0AE7C")]
		public bool UpdateAsLast;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x565")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AEB4", Offset = "0xA0AEB4")]
		public bool DetectZeroKeyframes;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x566")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AEEC", Offset = "0xA0AEEC")]
		public bool StartAfterTPose;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AF24", Offset = "0xA0AF24")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0AF5C", Offset = "0xA0AF5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AF5C", Offset = "0xA0AF5C")]
		public float TailAnimatorAmount;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x574")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0AFD0", Offset = "0xA0AFD0")]
		public bool DetachChildren;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B008", Offset = "0xA0B008")]
		public int Axis2D;

		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B040", Offset = "0xA0B040")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B040", Offset = "0xA0B040")]
		public float Tangle;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B094", Offset = "0xA0B094")]
		public bool AnimateRoll;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x584")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B0CC", Offset = "0xA0B0CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B0CC", Offset = "0xA0B0CC")]
		public float OverrideKeyframeAnimation;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
		private Transform _baseTransform;

		[Token(Token = "0x170003AE")]
		public List<Component> DynamicAlwaysInclude
		{
			[Token(Token = "0x6002310")]
			[Address(RVA = "0x1366C68", Offset = "0x1366C68", VA = "0x1366C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19348", Offset = "0xA19348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002311")]
			[Address(RVA = "0x1366C70", Offset = "0x1366C70", VA = "0x1366C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19358", Offset = "0xA19358")]
			private set
			{
			}
		}

		[Token(Token = "0x170003AF")]
		public Quaternion WavingRotationOffset
		{
			[Token(Token = "0x6002336")]
			[Address(RVA = "0x136CBC0", Offset = "0x136CBC0", VA = "0x136CBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19368", Offset = "0xA19368")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002337")]
			[Address(RVA = "0x136CBD4", Offset = "0x136CBD4", VA = "0x136CBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19378", Offset = "0xA19378")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public float _TC_TailLength
		{
			[Token(Token = "0x600234D")]
			[Address(RVA = "0x137186C", Offset = "0x137186C", VA = "0x137186C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19388", Offset = "0xA19388")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600234E")]
			[Address(RVA = "0x1371874", Offset = "0x1371874", VA = "0x1371874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19398", Offset = "0xA19398")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public string EditorIconPath
		{
			[Token(Token = "0x6002378")]
			[Address(RVA = "0x1374870", Offset = "0x1374870", VA = "0x1374870", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		public bool IsInitialized
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0x13748E4", Offset = "0x13748E4", VA = "0x13748E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B3")]
		public Transform BaseTransform
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0x136EDC4", Offset = "0x136EDC4", VA = "0x136EDC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1366C78", Offset = "0x1366C78", VA = "0x1366C78")]
		private void RefreshSegmentsColliders()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1366FE8", Offset = "0x1366FE8", VA = "0x1366FE8")]
		private void BeginCollisionsUpdate()
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x13674E0", Offset = "0x13674E0", VA = "0x13674E0")]
		private void SetupSphereColliders()
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1368530", Offset = "0x1368530", VA = "0x1368530")]
		internal void CollisionDetection(int index, Collision collision)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x13685B8", Offset = "0x13685B8", VA = "0x13685B8")]
		internal void ExitCollision(int index)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x136863C", Offset = "0x136863C", VA = "0x136863C")]
		protected bool UseCollisionContact(int index, ref Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x136721C", Offset = "0x136721C", VA = "0x136721C")]
		public void RefreshIncludedCollidersDataList()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1368D24", Offset = "0x1368D24", VA = "0x1368D24")]
		public bool PushIfSegmentInsideCollider(TailSegment bone, ref Vector3 targetPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1366D30", Offset = "0x1366D30", VA = "0x1366D30")]
		protected float GetColliderSphereRadiusFor(int i)
		{
			return default(float);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x1368298", Offset = "0x1368298", VA = "0x1368298")]
		protected float GetColliderSphereRadiusFor(List<Transform> transforms, int i)
		{
			return default(float);
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x1368FC0", Offset = "0x1368FC0", VA = "0x1368FC0")]
		public void AddCollider(Collider collider)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1369058", Offset = "0x1369058", VA = "0x1369058")]
		public void AddCollider(Collider2D collider)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x13690F0", Offset = "0x13690F0", VA = "0x13690F0")]
		public void CheckForColliderDuplicatesAndNulls()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x136933C", Offset = "0x136933C", VA = "0x136933C")]
		public void CheckForColliderDuplicatesAndNulls2D()
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x13694EC", Offset = "0x13694EC", VA = "0x13694EC")]
		private void TailCalculations_ComputeSegmentCollisions(TailSegment bone, ref Vector3 position)
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x1369654", Offset = "0x1369654", VA = "0x1369654")]
		private void ExpertParamsUpdate()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x1369F28", Offset = "0x1369F28", VA = "0x1369F28")]
		private void ExpertCurvesEndUpdate()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x13696A0", Offset = "0x13696A0", VA = "0x13696A0")]
		private void Expert_UpdatePosSpeed()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x13697D8", Offset = "0x13697D8", VA = "0x13697D8")]
		private void Expert_UpdateRotSpeed()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x1369910", Offset = "0x1369910", VA = "0x1369910")]
		private void Expert_UpdateSpringiness()
		{
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x1369A48", Offset = "0x1369A48", VA = "0x1369A48")]
		private void Expert_UpdateSlithery()
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x1369B80", Offset = "0x1369B80", VA = "0x1369B80")]
		private void Expert_UpdateCurling()
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x1369CB8", Offset = "0x1369CB8", VA = "0x1369CB8")]
		private void Expert_UpdateSlippery()
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x1369DF0", Offset = "0x1369DF0", VA = "0x1369DF0")]
		private void Expert_UpdateBlending()
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x136A0E8", Offset = "0x136A0E8", VA = "0x136A0E8")]
		private void InitIK()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x136A994", Offset = "0x136A994", VA = "0x136A994")]
		private void UpdateIK()
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x136A754", Offset = "0x136A754", VA = "0x136A754")]
		public void IK_ApplyLimitBoneSettings()
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x136AB7C", Offset = "0x136AB7C", VA = "0x136AB7C")]
		public void IK_RefreshLimitSettingsContainer()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x136AC98", Offset = "0x136AC98", VA = "0x136AC98")]
		private bool PostProcessingNeeded()
		{
			return default(bool);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x136AD18", Offset = "0x136AD18", VA = "0x136AD18")]
		private void PostProcessing_Begin()
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x136B1E4", Offset = "0x136B1E4", VA = "0x136B1E4")]
		private void PostProcessing_ReferenceUpdate()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x136C2E4", Offset = "0x136C2E4", VA = "0x136C2E4")]
		private void ShapingParamsUpdate()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x136C310", Offset = "0x136C310", VA = "0x136C310")]
		private void Shaping_UpdateCurving()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x136C5CC", Offset = "0x136C5CC", VA = "0x136C5CC")]
		private void Shaping_UpdateGravity()
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x136C9B8", Offset = "0x136C9B8", VA = "0x136C9B8")]
		private void Shaping_UpdateLengthMultiplier()
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x136CADC", Offset = "0x136CADC", VA = "0x136CADC")]
		private void ShapingEndUpdate()
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x136CBE8", Offset = "0x136CBE8", VA = "0x136CBE8")]
		private void Waving_Initialize()
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x136CCC8", Offset = "0x136CCC8", VA = "0x136CCC8")]
		private void Waving_AutoSwingUpdate()
		{
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x136D058", Offset = "0x136D058", VA = "0x136D058")]
		private void Waving_SustainUpdate()
		{
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x136D460", Offset = "0x136D460", VA = "0x136D460", Slot = "5")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x136EEB8", Offset = "0x136EEB8", VA = "0x136EEB8")]
		public void DetachChildrenTransforms()
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x136F158", Offset = "0x136F158", VA = "0x136F158")]
		private void InitializePostProcessing()
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x136FB84", Offset = "0x136FB84", VA = "0x136FB84")]
		protected void StretchingLimiting(TailSegment bone)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x136FF28", Offset = "0x136FF28", VA = "0x136FF28")]
		protected Vector3 AngleLimiting(TailSegment child, Vector3 targetPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x1370780", Offset = "0x1370780", VA = "0x1370780")]
		private void MotionInfluenceLimiting()
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1370A34", Offset = "0x1370A34", VA = "0x1370A34")]
		private void CalculateGravityPositionOffsetForSegment(TailSegment bone)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x1370BE0", Offset = "0x1370BE0", VA = "0x1370BE0")]
		private void Axis2DLimit(TailSegment child)
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x1370CD4", Offset = "0x1370CD4", VA = "0x1370CD4")]
		public float GetDistanceMeasure(Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x1370EA0", Offset = "0x1370EA0", VA = "0x1370EA0")]
		private void MaxDistanceCalculations()
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x137116C", Offset = "0x137116C", VA = "0x137116C")]
		private Vector3 TailCalculations_SmoothPosition(Vector3 from, Vector3 to, TailSegment bone)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x1371300", Offset = "0x1371300", VA = "0x1371300")]
		private Vector3 TailCalculations_SmoothPositionLerp(Vector3 from, Vector3 to, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x13711B4", Offset = "0x13711B4", VA = "0x13711B4")]
		private Vector3 TailCalculations_SmoothPositionSmoothDamp(Vector3 from, Vector3 to, ref Vector3 velo, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x13713C0", Offset = "0x13713C0", VA = "0x13713C0")]
		private Vector3 TailCalculations_SmoothPositionLinear(Vector3 from, Vector3 to, float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x137148C", Offset = "0x137148C", VA = "0x137148C")]
		private Quaternion TailCalculations_SmoothRotation(Quaternion from, Quaternion to, TailSegment bone)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x1371618", Offset = "0x1371618", VA = "0x1371618")]
		private Quaternion TailCalculations_SmoothRotationLerp(Quaternion from, Quaternion to, float speed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x13714EC", Offset = "0x13714EC", VA = "0x13714EC")]
		private Quaternion TailCalculations_SmoothRotationSmoothDamp(Quaternion from, Quaternion to, ref Quaternion velo, float speed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x137173C", Offset = "0x137173C", VA = "0x137173C")]
		private Quaternion TailCalculations_SmoothRotationLinear(Quaternion from, Quaternion to, float speed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x137187C", Offset = "0x137187C", VA = "0x137187C")]
		private void TailCalculations_Begin()
		{
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x1371A24", Offset = "0x1371A24", VA = "0x1371A24")]
		private void TailSegments_UpdateRootFeatures()
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x136BAB4", Offset = "0x136BAB4", VA = "0x136BAB4")]
		private void TailCalculations_SegmentPreProcessingStack(TailSegment child)
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x1371B88", Offset = "0x1371B88", VA = "0x1371B88")]
		private void TailCalculations_SegmentPostProcessing(TailSegment bone)
		{
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x136BFA4", Offset = "0x136BFA4", VA = "0x136BFA4")]
		private void TailCalculations_SegmentRotation(TailSegment child, Vector3 localOffset)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x1371FD8", Offset = "0x1371FD8", VA = "0x1371FD8")]
		private void TailCalculations_ApplySegmentMotion(TailSegment child)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x136B5D8", Offset = "0x136B5D8", VA = "0x136B5D8")]
		private void TailSegment_PrepareMotionParameters(TailSegment child)
		{
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x136B46C", Offset = "0x136B46C", VA = "0x136B46C")]
		private void TailSegment_PrepareVelocity(TailSegment child)
		{
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x136B7B4", Offset = "0x136B7B4", VA = "0x136B7B4")]
		private void TailSegment_BaseSwingProcessing(TailSegment child)
		{
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x136BC2C", Offset = "0x136BC2C", VA = "0x136BC2C")]
		private void TailSegment_PreRotationPositionBlend(TailSegment child)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x13722F8", Offset = "0x13722F8", VA = "0x13722F8")]
		private Quaternion TailSegment_RotationSlithery(TailSegment child)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1372480", Offset = "0x1372480", VA = "0x1372480")]
		private Quaternion GetSlitheryReferenceRotation(TailSegment child)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x13725A0", Offset = "0x13725A0", VA = "0x13725A0")]
		private Quaternion TailSegment_RotationStiff(TailSegment child)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1372058", Offset = "0x1372058", VA = "0x1372058")]
		private Quaternion TailSegment_GetSwingRotation(TailSegment child, float curlFactor)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x13721C8", Offset = "0x13721C8", VA = "0x13721C8")]
		private float TailSegment_GetUnifiedBendinessMultiplier(TailSegment child)
		{
			return default(float);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x136ADF0", Offset = "0x136ADF0", VA = "0x136ADF0")]
		public void TailSegments_UpdateCoordsForRootBone(TailSegment parent)
		{
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x136BD44", Offset = "0x136BD44", VA = "0x136BD44")]
		public void TailCalculations_UpdateArtificialChildBone(TailSegment child)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x13728A0", Offset = "0x13728A0", VA = "0x13728A0")]
		public void Editor_TailCalculations_RefreshArtificialParentBone()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x1372A00", Offset = "0x1372A00", VA = "0x1372A00")]
		private void SimulateTailMotionFrame(bool pp)
		{
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x1372B94", Offset = "0x1372B94", VA = "0x1372B94")]
		private void UpdateTailAlgorithm()
		{
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x136F774", Offset = "0x136F774", VA = "0x136F774")]
		private void CheckIfTailAnimatorShouldBeUpdated()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x137310C", Offset = "0x137310C", VA = "0x137310C")]
		private void DeltaTimeCalculations()
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x1373374", Offset = "0x1373374", VA = "0x1373374")]
		private void StableUpdateRateCalculations()
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x136FA20", Offset = "0x136FA20", VA = "0x136FA20")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x1373440", Offset = "0x1373440", VA = "0x1373440")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x13734F0", Offset = "0x13734F0", VA = "0x13734F0")]
		public void CheckForNullsInGhostChain()
		{
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x13733C0", Offset = "0x13733C0", VA = "0x13733C0")]
		private float GetClampedSmoothDelta()
		{
			return default(float);
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0x13726F0", Offset = "0x13726F0", VA = "0x13726F0")]
		private Quaternion MultiplyQ(Quaternion rotation, float times)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x1373628", Offset = "0x1373628", VA = "0x1373628")]
		public float GetValueFromCurve(int i, AnimationCurve c)
		{
			return default(float);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x13736E0", Offset = "0x13736E0", VA = "0x13736E0")]
		public AnimationCurve ClampCurve(AnimationCurve a, float timeStart, float timeEnd, float lowest, float highest)
		{
			return null;
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x1373850", Offset = "0x1373850", VA = "0x1373850")]
		public void RefreshTransformsList()
		{
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x1373978", Offset = "0x1373978", VA = "0x1373978")]
		public TailSegment GetGhostChild()
		{
			return null;
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x1373980", Offset = "0x1373980", VA = "0x1373980")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA193A8", Offset = "0xA193A8")]
		private IEnumerator LateFixed()
		{
			return null;
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x136B0D0", Offset = "0x136B0D0", VA = "0x136B0D0")]
		private void Deflection_BeginUpdate()
		{
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x1373DE0", Offset = "0x1373DE0", VA = "0x1373DE0")]
		private void Deflection_RemoveDeflectionSource(TailSegment child)
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0x1373D30", Offset = "0x1373D30", VA = "0x1373D30")]
		private void Deflection_AddDeflectionSource(TailSegment child)
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0x1371C38", Offset = "0x1371C38", VA = "0x1371C38")]
		private void Deflection_SegmentOffsetSimple(TailSegment child, ref Vector3 position)
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0x1373F4C", Offset = "0x1373F4C", VA = "0x1373F4C")]
		public void User_SetTailTransforms(List<Transform> list)
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1374014", Offset = "0x1374014", VA = "0x1374014")]
		public TailSegment User_AddTailTransform(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1374344", Offset = "0x1374344", VA = "0x1374344")]
		public void User_CutEndSegmentsTo(int fromLastTo)
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x1373060", Offset = "0x1373060", VA = "0x1373060")]
		public void User_ReposeTail()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x13748E0", Offset = "0x13748E0", VA = "0x13748E0", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x13748EC", Offset = "0x13748EC", VA = "0x13748EC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x136E458", Offset = "0x136E458", VA = "0x136E458")]
		public void GetGhostChain()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1374970", Offset = "0x1374970", VA = "0x1374970")]
		private void Start()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x13749DC", Offset = "0x13749DC", VA = "0x13749DC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x136F488", Offset = "0x136F488", VA = "0x136F488")]
		private void Update()
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1374B58", Offset = "0x1374B58", VA = "0x1374B58")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x136F4E0", Offset = "0x136F4E0", VA = "0x136F4E0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x1374B74", Offset = "0x1374B74", VA = "0x1374B74")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1374BC0", Offset = "0x1374BC0", VA = "0x1374BC0")]
		public TailAnimator2()
		{
		}
	}
	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD88C", Offset = "0x9FD88C")]
	public class TailAnimatorWind : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TailAnimatorWind _instance;

		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0xA0B248", Offset = "0xA0B248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0B248", Offset = "0xA0B248")]
		public Vector3 overrideWind;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float power;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float additionalTurbulence;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float additionalTurbSpeed;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B2B4", Offset = "0xA0B2B4")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0xA0B2B4", Offset = "0xA0B2B4")]
		public float rapidness;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0B318", Offset = "0xA0B318")]
		public float changesPower;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B368", Offset = "0xA0B368")]
		public float turbulenceSpeed;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0xA0B380", Offset = "0xA0B380")]
		public float worldTurb;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B3C4", Offset = "0xA0B3C4")]
		public float worldTurbScale;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float worldTurbSpeed;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B3FC", Offset = "0xA0B3FC")]
		[AttributeAttribute(Name = "FPD_HeaderAttribute", RVA = "0xA0B3FC", Offset = "0xA0B3FC")]
		public bool powerDependOnTailLength;

		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B468", Offset = "0xA0B468")]
		public bool collectFromSceneAtStart;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<TailAnimator2> WindAffected;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 targetWind;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 smoothWind;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 windVeloHelper;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion windOrientation;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion smoothWindOrient;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion smoothWindOrientHelper;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] randNumbers;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float[] randTimes;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float[] randSpeeds;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int frameOffset;

		[Token(Token = "0x40022F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 finalAddTurbulence;

		[Token(Token = "0x40022FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 addTurbHelper;

		[Token(Token = "0x40022FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 smoothAddTurbulence;

		[Token(Token = "0x170003C7")]
		public string EditorIconPath
		{
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x1375964", Offset = "0x1375964", VA = "0x1375964", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		public static TailAnimatorWind Instance
		{
			[Token(Token = "0x60023C4")]
			[Address(RVA = "0x13759B0", Offset = "0x13759B0", VA = "0x13759B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0x13759AC", Offset = "0x13759AC", VA = "0x13759AC", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x1375ADC", Offset = "0x1375ADC", VA = "0x1375ADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x1375A40", Offset = "0x1375A40", VA = "0x1375A40")]
		private static void GenerateWindComponentInstance()
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x136EFD8", Offset = "0x136EFD8", VA = "0x136EFD8")]
		public static void Refresh(TailAnimator2 tail)
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x1375CD0", Offset = "0x1375CD0", VA = "0x1375CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x1376758", Offset = "0x1376758", VA = "0x1376758")]
		private void Start()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x1376104", Offset = "0x1376104", VA = "0x1376104")]
		private void ComputeWind()
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x13768D8", Offset = "0x13768D8", VA = "0x13768D8")]
		private Vector3 GetAddTurbulence()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x1375FF4", Offset = "0x1375FF4", VA = "0x1375FF4")]
		public void GetTailAnimatorsFromScene()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x1376AF8", Offset = "0x1376AF8", VA = "0x1376AF8")]
		public TailAnimatorWind()
		{
		}
	}
	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD8C4", Offset = "0x9FD8C4")]
	public class TailCollisionHelper : MonoBehaviour
	{
		[Token(Token = "0x40022FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TailAnimator2 ParentTail;

		[Token(Token = "0x40022FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider TailCollider;

		[Token(Token = "0x40022FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider2D TailCollider2D;

		[Token(Token = "0x40022FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int Index;

		[Token(Token = "0x4002300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B4A0", Offset = "0xA0B4A0")]
		private Rigidbody <RigBody>k__BackingField;

		[Token(Token = "0x4002301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0B4B0", Offset = "0xA0B4B0")]
		private Rigidbody2D <RigBody2D>k__BackingField;

		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform previousCollision;

		[Token(Token = "0x170003C9")]
		internal Rigidbody RigBody
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x1376C50", Offset = "0x1376C50", VA = "0x1376C50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1961C", Offset = "0xA1961C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x1376C58", Offset = "0x1376C58", VA = "0x1376C58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1962C", Offset = "0xA1962C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CA")]
		internal Rigidbody2D RigBody2D
		{
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x1376C60", Offset = "0x1376C60", VA = "0x1376C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1963C", Offset = "0xA1963C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x1376C68", Offset = "0x1376C68", VA = "0x1376C68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1964C", Offset = "0xA1964C")]
			private set
			{
			}
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x1367FB0", Offset = "0x1367FB0", VA = "0x1367FB0")]
		internal TailCollisionHelper Init(bool addRigidbody = true, float mass = 1f, bool kinematic = false)
		{
			return null;
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1376C70", Offset = "0x1376C70", VA = "0x1376C70")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x1376E7C", Offset = "0x1376E7C", VA = "0x1376E7C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x1376F4C", Offset = "0x1376F4C", VA = "0x1376F4C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x137710C", Offset = "0x137710C", VA = "0x137710C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x13771DC", Offset = "0x13771DC", VA = "0x13771DC")]
		private void OnTriggerEnter2D(Collider2D other)
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x13773A0", Offset = "0x13773A0", VA = "0x13773A0")]
		private void OnTriggerExit2D(Collider2D other)
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1377470", Offset = "0x1377470", VA = "0x1377470")]
		public TailCollisionHelper()
		{
		}
	}
}
namespace FIMSpace.FSpine
{
	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9FD8FC", Offset = "0x9FD8FC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD8FC", Offset = "0x9FD8FC")]
	public class FSpineAnimator : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x20005F5")]
		public enum EFSpineEditorCategory
		{
			[Token(Token = "0x4002354")]
			Setup,
			[Token(Token = "0x4002355")]
			Tweak,
			[Token(Token = "0x4002356")]
			Adjust,
			[Token(Token = "0x4002357")]
			Physical
		}

		[Token(Token = "0x20005F6")]
		public enum EFDeltaType
		{
			[Token(Token = "0x4002359")]
			DeltaTime,
			[Token(Token = "0x400235A")]
			SmoothDeltaTime,
			[Token(Token = "0x400235B")]
			UnscaledDeltaTime,
			[Token(Token = "0x400235C")]
			FixedDeltaTime,
			[Token(Token = "0x400235D")]
			SafeDelta
		}

		[Token(Token = "0x20005F7")]
		public class HeadBone
		{
			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform baseTransform;

			[Token(Token = "0x400235F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform transform;

			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BE10", Offset = "0xA0BE10")]
			private Vector3 <InitialLocalPosition>k__BackingField;

			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BE20", Offset = "0xA0BE20")]
			private Quaternion <InitialLocalRotation>k__BackingField;

			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 snapshotPoseBaseTrSpacePosition;

			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Vector3 SnapshotPosition;

			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Quaternion snapshotPoseBaseTrSpaceRotationF;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			private Quaternion snapshotPoseBaseTrSpaceRotationB;

			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Quaternion snapshotPoseLocalRotation;

			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Quaternion SnapshotRotation;

			[Token(Token = "0x170003CE")]
			private Vector3 InitialLocalPosition
			{
				[Token(Token = "0x6002417")]
				[Address(RVA = "0x1364604", Offset = "0x1364604", VA = "0x1364604")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1965C", Offset = "0xA1965C")]
				set
				{
				}
			}

			[Token(Token = "0x170003CF")]
			private Quaternion InitialLocalRotation
			{
				[Token(Token = "0x6002418")]
				[Address(RVA = "0x1364610", Offset = "0x1364610", VA = "0x1364610")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1966C", Offset = "0xA1966C")]
				set
				{
				}
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x136461C", Offset = "0x136461C", VA = "0x136461C")]
			public HeadBone(Transform t)
			{
			}

			[Token(Token = "0x600241A")]
			[Address(RVA = "0x1364650", Offset = "0x1364650", VA = "0x1364650")]
			public void PrepareBone(Transform baseTransform, List<SpineBone> bones, int index)
			{
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0x1364BE0", Offset = "0x1364BE0", VA = "0x1364BE0")]
			internal Quaternion GetLocalRotationDiff()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x600241C")]
			[Address(RVA = "0x1364CC8", Offset = "0x1364CC8", VA = "0x1364CC8")]
			public void SetCoordsForFrameForward()
			{
			}

			[Token(Token = "0x600241D")]
			[Address(RVA = "0x1364DC4", Offset = "0x1364DC4", VA = "0x1364DC4")]
			public void SetCoordsForFrameBackward()
			{
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x13646A4", Offset = "0x13646A4", VA = "0x13646A4")]
			public void TakePoseSnapshot(Transform targetSpace, List<SpineBone> bones, int index)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005F8")]
		public class SpineBone
		{
			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool Collide;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float CollisionRadius;

			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 ColliderOffset;

			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform transform;

			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 ProceduralPosition;

			[Token(Token = "0x400236D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion ProceduralRotation;

			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 HelperDiffPosition;

			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion HelperDiffRoation;

			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3 PreviousPosition;

			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Vector3 DefaultForward;

			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public float StraightenFactor;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public float TargetStraightenFactor;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BE30", Offset = "0xA0BE30")]
			private float <BoneLength>k__BackingField;

			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
			private float boneLengthB;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private float boneLengthF;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BE40", Offset = "0xA0BE40")]
			private Vector3 <BoneLocalOffset>k__BackingField;

			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 boneLocalOffsetB;

			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 boneLocalOffsetF;

			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public float MotionWeight;

			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Quaternion FinalRotation;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			public Vector3 FinalPosition;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public Vector3 ManualPosOffset;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Quaternion ManualRotOffset;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BE50", Offset = "0xA0BE50")]
			private Vector3 <InitialLocalPosition>k__BackingField;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BE60", Offset = "0xA0BE60")]
			private Quaternion <InitialLocalRotation>k__BackingField;

			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			public Vector3 ReferencePosition;

			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
			public Vector3 PreviousReferencePosition;

			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public Quaternion ReferenceRotation;

			[Token(Token = "0x4002384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private Quaternion lastKeyframeRotation;

			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			private Vector3 lastKeyframePosition;

			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
			private Vector3 lastFinalLocalPosition;

			[Token(Token = "0x4002387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			private Quaternion lastFinalLocalRotation;

			[Token(Token = "0x4002388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			public Vector3 forward;

			[Token(Token = "0x4002389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
			public Vector3 right;

			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			public Vector3 up;

			[Token(Token = "0x170003D0")]
			public float BoneLength
			{
				[Token(Token = "0x6002420")]
				[Address(RVA = "0x1364EF8", Offset = "0x1364EF8", VA = "0x1364EF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1967C", Offset = "0xA1967C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002421")]
				[Address(RVA = "0x1364F00", Offset = "0x1364F00", VA = "0x1364F00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1968C", Offset = "0xA1968C")]
				private set
				{
				}
			}

			[Token(Token = "0x170003D1")]
			private Vector3 BoneLocalOffset
			{
				[Token(Token = "0x6002422")]
				[Address(RVA = "0x1364F08", Offset = "0x1364F08", VA = "0x1364F08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA1969C", Offset = "0xA1969C")]
				set
				{
				}
			}

			[Token(Token = "0x170003D2")]
			public Vector3 InitialLocalPosition
			{
				[Token(Token = "0x6002423")]
				[Address(RVA = "0x1364F14", Offset = "0x1364F14", VA = "0x1364F14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA196AC", Offset = "0xA196AC")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002424")]
				[Address(RVA = "0x1364F20", Offset = "0x1364F20", VA = "0x1364F20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA196BC", Offset = "0xA196BC")]
				private set
				{
				}
			}

			[Token(Token = "0x170003D3")]
			public Quaternion InitialLocalRotation
			{
				[Token(Token = "0x6002425")]
				[Address(RVA = "0x1364F2C", Offset = "0x1364F2C", VA = "0x1364F2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA196CC", Offset = "0xA196CC")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x6002426")]
				[Address(RVA = "0x1364F40", Offset = "0x1364F40", VA = "0x1364F40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA196DC", Offset = "0xA196DC")]
				private set
				{
				}
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0x1364EC0", Offset = "0x1364EC0", VA = "0x1364EC0")]
			public float GetCollisionRadiusScaled()
			{
				return default(float);
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0x1364F54", Offset = "0x1364F54", VA = "0x1364F54")]
			public void UpdateReferencePosition(Vector3 pos)
			{
			}

			[Token(Token = "0x6002428")]
			[Address(RVA = "0x1364F78", Offset = "0x1364F78", VA = "0x1364F78")]
			public void RefreshFinalLocalPose()
			{
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x1364FD4", Offset = "0x1364FD4", VA = "0x1364FD4")]
			public SpineBone(Transform t)
			{
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x13650C4", Offset = "0x13650C4", VA = "0x13650C4")]
			public void PrepareBone(Transform baseTransform, List<SpineBone> bones, int index)
			{
			}

			[Token(Token = "0x600242B")]
			[Address(RVA = "0x13655F8", Offset = "0x13655F8", VA = "0x13655F8")]
			public void SetDistanceForFrameForward()
			{
			}

			[Token(Token = "0x600242C")]
			[Address(RVA = "0x1365A90", Offset = "0x1365A90", VA = "0x1365A90")]
			public void SetDistanceForFrameBackward()
			{
			}

			[Token(Token = "0x600242D")]
			[Address(RVA = "0x1365AAC", Offset = "0x1365AAC", VA = "0x1365AAC")]
			public float GetUnscalledBoneLength()
			{
				return default(float);
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0x1365614", Offset = "0x1365614", VA = "0x1365614")]
			private void PrepareAxes(Transform baseTransform, List<SpineBone> bonesList, int index)
			{
			}

			[Token(Token = "0x600242F")]
			[Address(RVA = "0x1365ABC", Offset = "0x1365ABC", VA = "0x1365ABC")]
			internal void CalculateDifferencePose(Vector3 upAxis, Vector3 rightAxis)
			{
			}

			[Token(Token = "0x6002430")]
			[Address(RVA = "0x1365D5C", Offset = "0x1365D5C", VA = "0x1365D5C")]
			internal void ApplyDifferencePose()
			{
			}
		}

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FD94C", Offset = "0x9FD94C")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Collider col;

			[Token(Token = "0x6002431")]
			[Address(RVA = "0x1364504", Offset = "0x1364504", VA = "0x1364504")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x6002432")]
			[Address(RVA = "0x136450C", Offset = "0x136450C", VA = "0x136450C")]
			internal bool <CheckForColliderDuplicates>b__0(Collider o)
			{
				return default(bool);
			}

			[Token(Token = "0x6002433")]
			[Address(RVA = "0x1364588", Offset = "0x1364588", VA = "0x1364588")]
			internal bool <CheckForColliderDuplicates>b__1(Collider o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool collisionInitialized;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool forceRefreshCollidersData;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B4C0", Offset = "0xA0B4C0")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0xA0B4C0", Offset = "0xA0B4C0")]
		public float SpineAnimatorAmount;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion Rotate180;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int initAfterTPoseCounter;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool chainReverseFlag;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EFSpineEditorCategory _Editor_Category;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool _Editor_PivotoffsetXYZ;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _editor_isQuitting;

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int leadingBoneIndex;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int chainIndexDirection;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int chainIndexOffset;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float delta;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float unifiedDelta;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float elapsedDeltaHelper;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int updateLoops;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool initialized;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 previousPos;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool wasBlendedOut;

		[Token(Token = "0x4002316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<FSpineBoneConnector> connectors;

		[Token(Token = "0x4002317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float referenceDistance;

		[Token(Token = "0x4002318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 ModelForwardAxis;

		[Token(Token = "0x4002319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 ModelForwardAxisScaled;

		[Token(Token = "0x400231A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Vector3 ModelUpAxis;

		[Token(Token = "0x400231B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 ModelUpAxisScaled;

		[Token(Token = "0x400231C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		internal Vector3 ModelRightAxis;

		[Token(Token = "0x400231D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal Vector3 ModelRightAxisScaled;

		[Token(Token = "0x400231E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<SpineBone> SpineBones;

		[Token(Token = "0x400231F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<Transform> SpineTransforms;

		[Token(Token = "0x4002320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private HeadBone frontHead;

		[Token(Token = "0x4002321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HeadBone backHead;

		[Token(Token = "0x4002322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private HeadBone headBone;

		[Token(Token = "0x4002323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B534", Offset = "0xA0B534")]
		public Transform BaseTransform;

		[Token(Token = "0x4002324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform ForwardReference;

		[Token(Token = "0x4002325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B56C", Offset = "0xA0B56C")]
		public bool LastBoneLeading;

		[Token(Token = "0x4002326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B5A4", Offset = "0xA0B5A4")]
		public bool ReverseForward;

		[Token(Token = "0x4002327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B5DC", Offset = "0xA0B5DC")]
		public bool AnimatePhysics;

		[Token(Token = "0x4002328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Transform AnchorRoot;

		[Token(Token = "0x4002329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B614", Offset = "0xA0B614")]
		public Transform HeadAnchor;

		[Token(Token = "0x400232A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B64C", Offset = "0xA0B64C")]
		public bool AnimateAnchor;

		[Token(Token = "0x400232B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B684", Offset = "0xA0B684")]
		public Vector3 LeadBoneRotationOffset;

		[Token(Token = "0x400232C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B6BC", Offset = "0xA0B6BC")]
		public bool LeadBoneOffsetReference;

		[Token(Token = "0x400232D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B6F4", Offset = "0xA0B6F4")]
		public List<SpineAnimator_FixIKControlledBones> BonesFixers;

		[Token(Token = "0x400232E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B72C", Offset = "0xA0B72C")]
		public bool UpdateAsLast;

		[Token(Token = "0x400232F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4002330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B764", Offset = "0xA0B764")]
		public bool ManualAffectChain;

		[Token(Token = "0x4002331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B79C", Offset = "0xA0B79C")]
		public bool StartAfterTPose;

		[Token(Token = "0x4002332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B7D4", Offset = "0xA0B7D4")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x4002333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B80C", Offset = "0xA0B80C")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x4002334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B844", Offset = "0xA0B844")]
		public float UpdateRate;

		[Token(Token = "0x4002335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B87C", Offset = "0xA0B87C")]
		public bool UseCorrections;

		[Token(Token = "0x4002336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B8B4", Offset = "0xA0B8B4")]
		public Vector3 MainPivotOffset;

		[Token(Token = "0x4002337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B8EC", Offset = "0xA0B8EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B8EC", Offset = "0xA0B8EC")]
		public float PosSmoother;

		[Token(Token = "0x4002338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B940", Offset = "0xA0B940")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B940", Offset = "0xA0B940")]
		public float RotSmoother;

		[Token(Token = "0x4002339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B994", Offset = "0xA0B994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B994", Offset = "0xA0B994")]
		public float MaxStretching;

		[Token(Token = "0x400233A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0B9E8", Offset = "0xA0B9E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0B9E8", Offset = "0xA0B9E8")]
		public float Slithery;

		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BA3C", Offset = "0xA0BA3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BA3C", Offset = "0xA0BA3C")]
		public float AngleLimit;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BA94", Offset = "0xA0BA94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BA94", Offset = "0xA0BA94")]
		public float LimitSmoother;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BAE8", Offset = "0xA0BAE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BAE8", Offset = "0xA0BAE8")]
		public float StraightenSpeed;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public bool TurboStraighten;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BB3C", Offset = "0xA0BB3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BB3C", Offset = "0xA0BB3C")]
		public float GoBackSpeed;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BB90", Offset = "0xA0BB90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BB90", Offset = "0xA0BB90")]
		public float Springiness;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BBE4", Offset = "0xA0BBE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BBE4", Offset = "0xA0BBE4")]
		public float MotionInfluence;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BC38", Offset = "0xA0BC38")]
		public Transform MotionSpace;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		[SerializeField]
		private Transform mainPivotOffsetTransform;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BCA8", Offset = "0xA0BCA8")]
		public Vector3 SegmentsPivotOffset;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BCE0", Offset = "0xA0BCE0")]
		public float DistancesMultiplier;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BD18", Offset = "0xA0BD18")]
		public Vector3 GravityPower;

		[Token(Token = "0x4002347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		protected Vector3 gravityScale;

		[Token(Token = "0x4002348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BD50", Offset = "0xA0BD50")]
		public bool UseCollisions;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public List<Collider> IncludedColliders;

		[Token(Token = "0x400234A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected List<FImp_ColliderData_Base> IncludedCollidersData;

		[Token(Token = "0x400234B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		protected List<FImp_ColliderData_Base> CollidersDataToCheck;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BD88", Offset = "0xA0BD88")]
		public bool UseTruePosition;

		[Token(Token = "0x400234D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		public Vector3 OffsetAllColliders;

		[Token(Token = "0x400234E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public AnimationCurve CollidersScale;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public float CollidersScaleMul;

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0BDC0", Offset = "0xA0BDC0")]
		public float DifferenceScaleFactor;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BDD8", Offset = "0xA0BDD8")]
		public bool DetailedCollision;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool updateSpineAnimator;

		[Token(Token = "0x170003CB")]
		public string EditorIconPath
		{
			[Token(Token = "0x6002400")]
			[Address(RVA = "0x139B878", Offset = "0x139B878", VA = "0x139B878", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A4C4", Offset = "0xA1A4C4")]
		public float BlendToOriginal
		{
			[Token(Token = "0x600240D")]
			[Address(RVA = "0x139BE34", Offset = "0x139BE34", VA = "0x139BE34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600240E")]
			[Address(RVA = "0x139BE44", Offset = "0x139BE44", VA = "0x139BE44")]
			set
			{
			}
		}

		[Token(Token = "0x170003CD")]
		public bool EndBoneIsHead
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0x139BE54", Offset = "0x139BE54", VA = "0x139BE54")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002410")]
			[Address(RVA = "0x139BE5C", Offset = "0x139BE5C", VA = "0x139BE5C")]
			set
			{
			}
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x1394CF0", Offset = "0x1394CF0", VA = "0x1394CF0")]
		private void RemovePivotOffset()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1394E9C", Offset = "0x1394E9C", VA = "0x1394E9C")]
		public void UpdatePivotOffsetState()
		{
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x1394E08", Offset = "0x1394E08", VA = "0x1394E08")]
		private void RestoreBasePivotChildren()
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x13952B4", Offset = "0x13952B4", VA = "0x13952B4")]
		private void PreMotionBoneOffsets()
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x13952F8", Offset = "0x13952F8", VA = "0x13952F8")]
		private void PreMotionNoHead()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x13953DC", Offset = "0x13953DC", VA = "0x13953DC")]
		private void PreMotionHead()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x1395874", Offset = "0x1395874", VA = "0x1395874")]
		private void SegmentPreOffset(int i)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x1395420", Offset = "0x1395420", VA = "0x1395420")]
		private void SegmentPreOffsetWithPivot(int i)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1395B54", Offset = "0x1395B54", VA = "0x1395B54")]
		private void PostMotionBoneOffsets()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1395BDC", Offset = "0x1395BDC", VA = "0x1395BDC")]
		private void PostMotionNoHead()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1395B98", Offset = "0x1395B98", VA = "0x1395B98")]
		private void PostMotionHead()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x13960C0", Offset = "0x13960C0", VA = "0x13960C0")]
		private void SegmentPostOffset(int i)
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1395CC0", Offset = "0x1395CC0", VA = "0x1395CC0")]
		private void SegmentPostOffsetWithPivot(int i)
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x1396368", Offset = "0x1396368", VA = "0x1396368")]
		private void BeginPhysicsUpdate()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x1396688", Offset = "0x1396688", VA = "0x1396688")]
		public void RefreshCollidersDataList()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x1396810", Offset = "0x1396810", VA = "0x1396810")]
		private float GetColliderSphereRadiusFor(int i)
		{
			return default(float);
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1396B18", Offset = "0x1396B18", VA = "0x1396B18")]
		public void AddCollider(Collider collider)
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x13965A4", Offset = "0x13965A4", VA = "0x13965A4")]
		private void InitColliders()
		{
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x1396BB0", Offset = "0x1396BB0", VA = "0x1396BB0")]
		public void CheckForColliderDuplicates()
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1396D58", Offset = "0x1396D58", VA = "0x1396D58")]
		public void PushIfSegmentInsideCollider(SpineBone bone, ref Vector3 targetPoint)
		{
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1396FF0", Offset = "0x1396FF0", VA = "0x1396FF0")]
		private void CalculateBonesCoordinates()
		{
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x1397AE8", Offset = "0x1397AE8", VA = "0x1397AE8")]
		private void CalculateTargetBonePosition(int index)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x13971A4", Offset = "0x13971A4", VA = "0x13971A4")]
		private void CalculateTargetBoneRotation(int index)
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x13984D0", Offset = "0x13984D0", VA = "0x13984D0")]
		private void UpdateChainIndexHelperVariables()
		{
		}

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x1398640", Offset = "0x1398640", VA = "0x1398640")]
		private void RefreshReferencePose()
		{
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x1399190", Offset = "0x1399190", VA = "0x1399190")]
		private void ReposeSpine()
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x1399440", Offset = "0x1399440", VA = "0x1399440")]
		private void BeginBaseBonesUpdate()
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x13997C4", Offset = "0x13997C4", VA = "0x13997C4")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x13997C8", Offset = "0x13997C8", VA = "0x13997C8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x13998E8", Offset = "0x13998E8", VA = "0x13998E8")]
		public void AddConnector(FSpineBoneConnector connector)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x13999BC", Offset = "0x13999BC", VA = "0x13999BC")]
		public void Init()
		{
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x139A2E8", Offset = "0x139A2E8", VA = "0x139A2E8")]
		public void CreateSpineChain(Transform start, Transform end)
		{
		}

		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x139A9A0", Offset = "0x139A9A0", VA = "0x139A9A0")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x139AB4C", Offset = "0x139AB4C", VA = "0x139AB4C")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x139AD04", Offset = "0x139AD04", VA = "0x139AD04")]
		private void DeltaTimeCalculations()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x139AEB4", Offset = "0x139AEB4", VA = "0x139AEB4")]
		private void StableUpdateRateCalculations()
		{
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x139AF00", Offset = "0x139AF00", VA = "0x139AF00")]
		private void ApplyNewBonesCoordinates()
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x139B744", Offset = "0x139B744", VA = "0x139B744")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0x139B8E8", Offset = "0x139B8E8", VA = "0x139B8E8", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x13983E8", Offset = "0x13983E8", VA = "0x13983E8")]
		private Vector3 RoundPosDiff(Vector3 pos, int digits = 1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x139B8EC", Offset = "0x139B8EC", VA = "0x139B8EC")]
		private Vector3 RoundToBiggestValue(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x139AE30", Offset = "0x139AE30", VA = "0x139AE30")]
		private float GetClampedSmoothDelta()
		{
			return default(float);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x139BBB4", Offset = "0x139BBB4", VA = "0x139BBB4")]
		public List<Transform> GetOldSpineTransforms()
		{
			return null;
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x139BBBC", Offset = "0x139BBBC", VA = "0x139BBBC")]
		public void ClearOldSpineTransforms()
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x139A770", Offset = "0x139A770", VA = "0x139A770")]
		public Transform FindBaseTransform()
		{
			return null;
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x139BC1C", Offset = "0x139BC1C", VA = "0x139BC1C")]
		public SpineBone GetLeadingBone()
		{
			return null;
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x139BC94", Offset = "0x139BC94", VA = "0x139BC94")]
		public SpineBone GetEndBone()
		{
			return null;
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x139BD0C", Offset = "0x139BD0C", VA = "0x139BD0C")]
		public Transform GetHeadBone()
		{
			return null;
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0x139BDA0", Offset = "0x139BDA0", VA = "0x139BDA0")]
		public SpineBone GetLeadBone()
		{
			return null;
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x1395224", Offset = "0x1395224", VA = "0x1395224")]
		public Transform GetBaseTransform()
		{
			return null;
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x139BE60", Offset = "0x139BE60", VA = "0x139BE60")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x139BE8C", Offset = "0x139BE8C", VA = "0x139BE8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x139BF78", Offset = "0x139BF78", VA = "0x139BF78")]
		internal void Update()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x139C170", Offset = "0x139C170", VA = "0x139C170")]
		internal void FixedUpdate()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x139C188", Offset = "0x139C188", VA = "0x139C188")]
		internal void LateUpdate()
		{
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x139C2E0", Offset = "0x139C2E0", VA = "0x139C2E0")]
		public FSpineAnimator()
		{
		}
	}
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD95C", Offset = "0x9FD95C")]
	public class FSpineBoneConnector : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA0BE70", Offset = "0xA0BE70")]
		public FSpineAnimator TargetSpineAnimator;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TargetBone;

		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FPD_WidthAttribute", RVA = "0xA0BE84", Offset = "0xA0BE84")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA0BE84", Offset = "0xA0BE84")]
		public bool PositionAnimated;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "FPD_WidthAttribute", RVA = "0xA0BEC4", Offset = "0xA0BEC4")]
		public bool RotationAnimated;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA0BED8", Offset = "0xA0BED8")]
		public Vector3 RotationCorrection;

		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool Mirror;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 animatorStatePosition;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion animatorStateRotation;

		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion targetBoneStateRotation;

		[Token(Token = "0x170003D4")]
		public string EditorIconPath
		{
			[Token(Token = "0x6002434")]
			[Address(RVA = "0x1365EA4", Offset = "0x1365EA4", VA = "0x1365EA4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x1365EEC", Offset = "0x1365EEC", VA = "0x1365EEC", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x1365EF0", Offset = "0x1365EF0", VA = "0x1365EF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x13661C8", Offset = "0x13661C8", VA = "0x13661C8")]
		internal void RememberAnimatorState()
		{
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0x13662F0", Offset = "0x13662F0", VA = "0x13662F0")]
		internal void RefreshAnimatorState()
		{
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x1366578", Offset = "0x1366578", VA = "0x1366578")]
		public FSpineBoneConnector()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD994", Offset = "0x9FD994")]
	public class FSpine_DrawSkeleton : MonoBehaviour
	{
		[Token(Token = "0x600243A")]
		[Address(RVA = "0x1366588", Offset = "0x1366588", VA = "0x1366588")]
		public FSpine_DrawSkeleton()
		{
		}
	}
	[Token(Token = "0x20005FC")]
	public class FSpine_Reference : MonoBehaviour
	{
		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FSpineAnimator SpineReference;

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x1366590", Offset = "0x1366590", VA = "0x1366590")]
		public FSpine_Reference()
		{
		}
	}
	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FD9CC", Offset = "0x9FD9CC")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9FD9CC", Offset = "0x9FD9CC")]
	public class SpineAnimatorQueuer : MonoBehaviour
	{
		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BEEC", Offset = "0xA0BEEC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0BEEC", Offset = "0xA0BEEC")]
		public float SpineAnimatorsAmount;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		internal List<FSpineAnimator> updateOrder;

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x1366598", Offset = "0x1366598", VA = "0x1366598")]
		private void Update()
		{
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1366754", Offset = "0x1366754", VA = "0x1366754")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1366910", Offset = "0x1366910", VA = "0x1366910")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0x13669F4", Offset = "0x13669F4", VA = "0x13669F4")]
		public SpineAnimatorQueuer()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FDA1C", Offset = "0x9FDA1C")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9FDA1C", Offset = "0x9FDA1C")]
	public class SpineAnimator_FixIKControlledBones : MonoBehaviour
	{
		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform SkeletonParentBone;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BF70", Offset = "0xA0BF70")]
		public bool Calibrate;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion initLocalRot;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initLocalPos;

		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion localRotation;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 localPosition;

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x1366A04", Offset = "0x1366A04", VA = "0x1366A04")]
		private void Start()
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0x1366A60", Offset = "0x1366A60", VA = "0x1366A60")]
		public void Calibration()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1366ACC", Offset = "0x1366ACC", VA = "0x1366ACC")]
		public void UpdateOnAnimator()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x1366BA4", Offset = "0x1366BA4", VA = "0x1366BA4")]
		public void UpdateAfterProcedural()
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1366C58", Offset = "0x1366C58", VA = "0x1366C58")]
		public SpineAnimator_FixIKControlledBones()
		{
		}
	}
}
namespace FIMSpace.FLook
{
	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x9FDA6C", Offset = "0x9FDA6C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9FDA6C", Offset = "0x9FDA6C")]
	public class FLookAnimator : MonoBehaviour, IDropHandler, IEventSystemHandler, IFHierarchyIcon
	{
		[Serializable]
		[Token(Token = "0x2000600")]
		public class CompensationBone
		{
			[Token(Token = "0x4002456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x4002457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Vector3 compensatedPosition;

			[Token(Token = "0x4002458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private Quaternion compensatedRotation;

			[Token(Token = "0x4002459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Quaternion lastFinalLocalRotation;

			[Token(Token = "0x400245A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Quaternion lastKeyframeLocalRotation;

			[Token(Token = "0x400245B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private Vector3 lastFinalLocalPosition;

			[Token(Token = "0x400245C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 lastKeyframeLocalPosition;

			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x13918E4", Offset = "0x13918E4", VA = "0x13918E4")]
			public void RefreshCompensationFrame()
			{
			}

			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x1391934", Offset = "0x1391934", VA = "0x1391934")]
			public void CheckForZeroKeyframes()
			{
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x1391DCC", Offset = "0x1391DCC", VA = "0x1391DCC")]
			public void SetRotationCompensation(float weight)
			{
			}

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x1391EFC", Offset = "0x1391EFC", VA = "0x1391EFC")]
			public void SetPositionCompensation(float weight)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000601")]
		public class LookBone
		{
			[Token(Token = "0x400245D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x400245E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion animatedStaticRotation;

			[Token(Token = "0x400245F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion targetStaticRotation;

			[Token(Token = "0x4002460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Quaternion localStaticRotation;

			[Token(Token = "0x4002461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Quaternion animatedTargetRotation;

			[Token(Token = "0x4002462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion targetRotation;

			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector3 correctionOffset;

			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Quaternion finalRotation;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			public Quaternion lastKeyframeRotation;

			[Token(Token = "0x4002466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			public Quaternion lastFinalLocalRotation;

			[Token(Token = "0x4002467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
			public Vector3 forward;

			[Token(Token = "0x4002468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public Vector3 right;

			[Token(Token = "0x4002469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			public Vector3 up;

			[Token(Token = "0x400246A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Vector3 initLocalPos;

			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public Quaternion initLocalRot;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			public Vector3 targetDelayPosition;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public Vector3 animatedDelayPosition;

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
			public float lookWeight;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public float lookWeightB;

			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			public float motionWeight;

			[Token(Token = "0x170003E0")]
			public Quaternion correctionOffsetQ
			{
				[Token(Token = "0x60024B5")]
				[Address(RVA = "0x138C130", Offset = "0x138C130", VA = "0x138C130")]
				get
				{
					return default(Quaternion);
				}
			}

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x1392810", Offset = "0x1392810", VA = "0x1392810")]
			public LookBone(Transform t)
			{
			}

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x1392960", Offset = "0x1392960", VA = "0x1392960")]
			public void RefreshBoneDirections(Transform baseTransform)
			{
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x13917DC", Offset = "0x13917DC", VA = "0x13917DC")]
			public void RefreshStaticRotation(bool hard = true)
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x138C1B8", Offset = "0x138C1B8", VA = "0x138C1B8")]
			internal void CalculateMotion(Quaternion targetLook, float overallWeightMultiplier, float delta, float mainWeight)
			{
			}
		}

		[Token(Token = "0x2000602")]
		public enum EFAxisFixOrder
		{
			[Token(Token = "0x4002472")]
			Parental,
			[Token(Token = "0x4002473")]
			FromBased,
			[Token(Token = "0x4002474")]
			FullManual,
			[Token(Token = "0x4002475")]
			ZYX
		}

		[Token(Token = "0x2000603")]
		public enum EFHeadLookState
		{
			[Token(Token = "0x4002477")]
			Null,
			[Token(Token = "0x4002478")]
			Following,
			[Token(Token = "0x4002479")]
			OutOfMaxRotation,
			[Token(Token = "0x400247A")]
			ClampedAngle,
			[Token(Token = "0x400247B")]
			OutOfMaxDistance
		}

		[Token(Token = "0x2000604")]
		public enum EFFollowMode
		{
			[Token(Token = "0x400247D")]
			FollowObject,
			[Token(Token = "0x400247E")]
			LocalOffset,
			[Token(Token = "0x400247F")]
			WorldOffset,
			[Token(Token = "0x4002480")]
			ToFollowSpaceOffset,
			[Token(Token = "0x4002481")]
			FollowJustPosition
		}

		[Token(Token = "0x2000605")]
		public enum EFDeltaType
		{
			[Token(Token = "0x4002483")]
			DeltaTime,
			[Token(Token = "0x4002484")]
			SmoothDeltaTime,
			[Token(Token = "0x4002485")]
			UnscaledDeltaTime,
			[Token(Token = "0x4002486")]
			FixedDeltaTime
		}

		[Token(Token = "0x2000606")]
		public enum EFAnimationStyle
		{
			[Token(Token = "0x4002488")]
			SmoothDamp,
			[Token(Token = "0x4002489")]
			FastLerp,
			[Token(Token = "0x400248A")]
			Linear
		}

		[Token(Token = "0x2000607")]
		public enum EEditorLookCategory
		{
			[Token(Token = "0x400248C")]
			Setup,
			[Token(Token = "0x400248D")]
			Tweak,
			[Token(Token = "0x400248E")]
			Limit,
			[Token(Token = "0x400248F")]
			Features,
			[Token(Token = "0x4002490")]
			Corrections
		}

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDABC", Offset = "0x9FDABC")]
		private sealed class <AnimatePhysicsClock>d__101 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BD")]
				[Address(RVA = "0x1394420", Offset = "0x1394420", VA = "0x1394420", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BF")]
				[Address(RVA = "0x1394488", Offset = "0x1394488", VA = "0x1394488", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x13904F8", Offset = "0x13904F8", VA = "0x13904F8")]
			[DebuggerHidden]
			public <AnimatePhysicsClock>d__101(int <>1__state)
			{
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x139435C", Offset = "0x139435C", VA = "0x139435C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x1394360", Offset = "0x1394360", VA = "0x1394360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x1394428", Offset = "0x1394428", VA = "0x1394428", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDACC", Offset = "0x9FDACC")]
		private sealed class <SwitchLookingTransition>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionTime;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool enableAnimation;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x400249A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x400249B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startBlend>5__3;

			[Token(Token = "0x170003E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C3")]
				[Address(RVA = "0x1394C80", Offset = "0x1394C80", VA = "0x1394C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024C5")]
				[Address(RVA = "0x1394CE8", Offset = "0x1394CE8", VA = "0x1394CE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x1390524", Offset = "0x1390524", VA = "0x1390524")]
			[DebuggerHidden]
			public <SwitchLookingTransition>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x1394B44", Offset = "0x1394B44", VA = "0x1394B44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x1394B48", Offset = "0x1394B48", VA = "0x1394B48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x1394C88", Offset = "0x1394C88", VA = "0x1394C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDADC", Offset = "0x9FDADC")]
		private sealed class <CResetMomentLookTransform>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400249C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400249D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform transform;

			[Token(Token = "0x170003E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024C9")]
				[Address(RVA = "0x1394AD4", Offset = "0x1394AD4", VA = "0x1394AD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024CB")]
				[Address(RVA = "0x1394B3C", Offset = "0x1394B3C", VA = "0x1394B3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x1390550", Offset = "0x1390550", VA = "0x1390550")]
			[DebuggerHidden]
			public <CResetMomentLookTransform>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x1394990", Offset = "0x1394990", VA = "0x1394990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x1394994", Offset = "0x1394994", VA = "0x1394994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x1394ADC", Offset = "0x1394ADC", VA = "0x1394ADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDAEC", Offset = "0x9FDAEC")]
		private sealed class <CRefreshReferencePose>d__157 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsed>5__2;

			[Token(Token = "0x170003E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024CF")]
				[Address(RVA = "0x1394920", Offset = "0x1394920", VA = "0x1394920", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024D1")]
				[Address(RVA = "0x1394988", Offset = "0x1394988", VA = "0x1394988", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x1392C5C", Offset = "0x1392C5C", VA = "0x1392C5C")]
			[DebuggerHidden]
			public <CRefreshReferencePose>d__157(int <>1__state)
			{
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x1394490", Offset = "0x1394490", VA = "0x1394490", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x1394494", Offset = "0x1394494", VA = "0x1394494", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x1394928", Offset = "0x1394928", VA = "0x1394928", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0BFA8", Offset = "0xA0BFA8")]
		private Transform <MomentLookTransform>k__BackingField;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject generatedMomentTarget;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool wasMomentLookTransform;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BFB8", Offset = "0xA0BFB8")]
		public bool BirdMode;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool birdModeInitialized;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0BFF0", Offset = "0xA0BFF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0BFF0", Offset = "0xA0BFF0")]
		public float LagRotation;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C064", Offset = "0xA0C064")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0C064", Offset = "0xA0C064")]
		public float LagEvery;

		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0xA0C0DC", Offset = "0xA0C0DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C0DC", Offset = "0xA0C0DC")]
		public float DelayPosition;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C150", Offset = "0xA0C150")]
		public float DelayMaxDistance;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C188", Offset = "0xA0C188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C188", Offset = "0xA0C188")]
		public float DelayGoSpeed;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 BirdTargetPosition;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 birdTargetPositionMemory;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lagTimer;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float preWeightFaloff;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] baseWeights;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] targetWeights;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool UseEyes;

		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C1DC", Offset = "0xA0C1DC")]
		public Transform EyesTarget;

		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C214", Offset = "0xA0C214")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xA0C214", Offset = "0xA0C214")]
		public Transform LeftEye;

		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool InvertLeftEye;

		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C264", Offset = "0xA0C264")]
		public Transform RightEye;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool InvertRightEye;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C29C", Offset = "0xA0C29C")]
		public Transform HeadReference;

		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Vector3 EyesOffsetRotation;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C2D4", Offset = "0xA0C2D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C2D4", Offset = "0xA0C2D4")]
		public float EyesSpeed;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0xA0C328", Offset = "0xA0C328")]
		public float EyesBlend;

		[Token(Token = "0x40023B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C374", Offset = "0xA0C374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C374", Offset = "0xA0C374")]
		public Vector2 EyesXRange;

		[Token(Token = "0x40023B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 EyesYRange;

		[Token(Token = "0x40023BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C3CC", Offset = "0xA0C3CC")]
		public bool EyesNoKeyframes;

		[Token(Token = "0x40023BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		public bool CustomEyesLogics;

		[Token(Token = "0x40023BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float EyesOutOfRangeBlend;

		[Token(Token = "0x40023BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] eyes;

		[Token(Token = "0x40023BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3[] eyeForwards;

		[Token(Token = "0x40023BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Quaternion[] eyesInitLocalRotations;

		[Token(Token = "0x40023C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion[] eyesLerpRotations;

		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float _eyesBlend;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 headForward;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C404", Offset = "0xA0C404")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C404", Offset = "0xA0C404")]
		public float NoddingTransitions;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public Vector3 NodAxis;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C458", Offset = "0xA0C458")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C458", Offset = "0xA0C458")]
		public float BackBonesNod;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float nodProgress;

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float nodValue;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float nodPower;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float nodDuration;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float smoothingTimer;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float smoothingPower;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float smoothingTime;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float smoothingEffect;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public int ParentalOffsetsV;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 lookFreezeFocusPoint;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Vector3 smoothLookPosition;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 _velo_smoothLookPosition;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Vector3 finalLookPosition;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool usingAxisCorrection;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Matrix4x4 axisCorrectionMatrix;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float delta;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C4AC", Offset = "0xA0C4AC")]
		public Transform ParentalReferenceBone;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Quaternion _parentalBackParentRot;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector2 _parentalAngles;

		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool animatePhysicsWorking;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		private bool triggerAnimatePhysics;

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private int startAfterTPoseCounter;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Vector3 unclampedLookAngles;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Vector3 targetLookAngles;

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 animatedLookAngles;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector3 finalLookAngles;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Quaternion lastBaseRotation;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 _preLookAboveLookAngles;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Vector3 _velo_animatedLookAngles;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float _rememberSideLookHorizontalAngle;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector3 leadBoneInitLocalOffset;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private EFHeadLookState previousState;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private bool _stopLooking;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private Transform activeLookTarget;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector3 activeLookPosition;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Transform preActiveLookTarget;

		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private bool isLooking;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x271")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C4E4", Offset = "0xA0C4E4")]
		public bool DestroyMomentTargetOnMaxDistance;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private float whenAboveGoBackDuration;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private float whenAboveGoBackTimer;

		[Token(Token = "0x40023EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private float _whenAboveGoBackVelo;

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float _whenAboveGoBackVerticalVelo;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private Vector2 whenAboveGoBackAngles;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C51C", Offset = "0xA0C51C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C51C", Offset = "0xA0C51C")]
		public float OverrideRotations;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int lastClipHash;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool refreshReferencePose;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float monitorTransitionTime;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private List<Quaternion> _monitorTransitionStart;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public int BackBonesCount;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		public int _preBackBonesCount;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<LookBone> LookBones;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA0C570", Offset = "0xA0C570")]
		private EFHeadLookState <LookState>k__BackingField;

		[Token(Token = "0x40023FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C580", Offset = "0xA0C580")]
		public bool NoTargetHeadStops;

		[Token(Token = "0x40023FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Quaternion targetLookRotation;

		[Token(Token = "0x40023FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		protected bool initialized;

		[Token(Token = "0x40023FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private float finalMotionWeight;

		[Token(Token = "0x40023FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private float animatedMotionWeight;

		[Token(Token = "0x40023FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float _velo_animatedMotionWeight;

		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private float changeTargetSmootherWeight;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
		private float changeTargetSmootherBones;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Vector3 preLookDir;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public bool _editor_hideEyes;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public string _editor_displayName;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public EEditorLookCategory _Editor_Category;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C5B8", Offset = "0xA0C5B8")]
		public Transform LeadBone;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C5F0", Offset = "0xA0C5F0")]
		public Transform BaseTransform;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C628", Offset = "0xA0C628")]
		public float FaloffValue;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public float FaloffValueB;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C660", Offset = "0xA0C660")]
		public bool BigAngleAutomation;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x321")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C698", Offset = "0xA0C698")]
		public bool BigAngleAutomationCompensation;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x322")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C6D0", Offset = "0xA0C6D0")]
		public bool AutoBackbonesWeights;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x323")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C708", Offset = "0xA0C708")]
		public bool CurveSpread;

		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C740", Offset = "0xA0C740")]
		public AnimationCurve BackBonesFalloff;

		[Token(Token = "0x400240F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0C778", Offset = "0xA0C778")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0C778", Offset = "0xA0C778")]
		public List<CompensationBone> CompensationBones;

		[Token(Token = "0x4002410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C7EC", Offset = "0xA0C7EC")]
		public float CompensationWeight;

		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C804", Offset = "0xA0C804")]
		public float CompensationWeightB;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C81C", Offset = "0xA0C81C")]
		public float CompensatePositions;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C834", Offset = "0xA0C834")]
		public float CompensatePositionsB;

		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private float targetCompensationWeight;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		private float targetCompensationPosWeight;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C84C", Offset = "0xA0C84C")]
		public bool StartAfterTPose;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x351")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C884", Offset = "0xA0C884")]
		public bool AnimatePhysics;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C8BC", Offset = "0xA0C8BC")]
		public Renderer OptimizeWithMesh;

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C8F4", Offset = "0xA0C8F4")]
		public Transform ObjectToFollow;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C92C", Offset = "0xA0C92C")]
		public Vector3 FollowOffset;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C964", Offset = "0xA0C964")]
		public EFFollowMode FollowMode;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C99C", Offset = "0xA0C99C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C99C", Offset = "0xA0C99C")]
		public float RotationSpeed;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool instantRotation;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0C9F0", Offset = "0xA0C9F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0C9F0", Offset = "0xA0C9F0")]
		public float UltraSmoother;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0CA44", Offset = "0xA0CA44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0CA44", Offset = "0xA0CA44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CA44", Offset = "0xA0CA44")]
		public float StopLookingAbove;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0CAC8", Offset = "0xA0CAC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CAC8", Offset = "0xA0CAC8")]
		public float StopLookingAboveFactor;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CB20", Offset = "0xA0CB20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0CB20", Offset = "0xA0CB20")]
		public float ChangeTargetSmoothing;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CB74", Offset = "0xA0CB74")]
		public bool AdvancedFalloff;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CBAC", Offset = "0xA0CBAC")]
		public float MaximumDistance;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CBE4", Offset = "0xA0CBE4")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CBE4", Offset = "0xA0CBE4")]
		public float HoldRotateToOppositeUntil;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CC5C", Offset = "0xA0CC5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0CC5C", Offset = "0xA0CC5C")]
		public float MaxOutDistanceFactor;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CCB0", Offset = "0xA0CCB0")]
		public bool Distance2D;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CCE8", Offset = "0xA0CCE8")]
		public Vector3 DistanceMeasurePoint;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CD20", Offset = "0xA0CD20")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CD20", Offset = "0xA0CD20")]
		public float LookWhenAbove;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B4")]
		private float animatedLookWhenAbove;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CD98", Offset = "0xA0CD98")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CD98", Offset = "0xA0CD98")]
		public float LookWhenAboveVertical;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		private float animatedLookWhenAboveVertical;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CE10", Offset = "0xA0CE10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CE10", Offset = "0xA0CE10")]
		public float WhenAboveGoBackAfter;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CE84", Offset = "0xA0CE84")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CE84", Offset = "0xA0CE84")]
		public float WhenAboveGoBackAfterVertical;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CEF8", Offset = "0xA0CEF8")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CEF8", Offset = "0xA0CEF8")]
		public float WhenAboveGoBackDuration;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CF70", Offset = "0xA0CF70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CF70", Offset = "0xA0CF70")]
		public float StartLookElasticRangeX;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0CFE8", Offset = "0xA0CFE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0CFE8", Offset = "0xA0CFE8")]
		public float StartLookElasticRangeY;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xA0D060", Offset = "0xA0D060")]
		public Vector2 XRotationLimits;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0D098", Offset = "0xA0D098")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D098", Offset = "0xA0D098")]
		public float XElasticRange;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D110", Offset = "0xA0D110")]
		public bool LimitHolder;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public Vector2 YRotationLimits;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		[AttributeAttribute(Name = "FPD_SuffixAttribute", RVA = "0xA0D148", Offset = "0xA0D148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D148", Offset = "0xA0D148")]
		public float YElasticRange;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D1C0", Offset = "0xA0D1C0")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0xA0D1C0", Offset = "0xA0D1C0")]
		public float LookAnimatorAmount;

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D234", Offset = "0xA0D234")]
		public Vector3 StartLookPointOffset;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D26C", Offset = "0xA0D26C")]
		public bool AnchorStartLookPoint;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x401")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D2A4", Offset = "0xA0D2A4")]
		public bool RefreshStartLookPoint;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x402")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D2DC", Offset = "0xA0D2DC")]
		public bool SyncWithAnimator;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x403")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D314", Offset = "0xA0D314")]
		public bool MonitorAnimator;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x404")]
		private Quaternion rootStaticRotation;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x414")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D34C", Offset = "0xA0D34C")]
		[AttributeAttribute(Name = "FPD_PercentageAttribute", RVA = "0xA0D34C", Offset = "0xA0D34C")]
		public float WeightsMultiplier;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D3C0", Offset = "0xA0D3C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0D3C0", Offset = "0xA0D3C0")]
		public float MaxRotationSpeed;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0D418", Offset = "0xA0D418")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D418", Offset = "0xA0D418")]
		public float BaseRotationCompensation;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D46C", Offset = "0xA0D46C")]
		public bool DetectZeroKeyframes;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x424")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xA0D4A4", Offset = "0xA0D4A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D4A4", Offset = "0xA0D4A4")]
		public float LookAtPositionSmoother;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D4F8", Offset = "0xA0D4F8")]
		public EFDeltaType DeltaType;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D530", Offset = "0xA0D530")]
		public float SimulationSpeed;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D568", Offset = "0xA0D568")]
		public EFAxisFixOrder FixingPreset;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x434")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D5A0", Offset = "0xA0D5A0")]
		public Vector3 ModelForwardAxis;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D5D8", Offset = "0xA0D5D8")]
		public Vector3 ModelUpAxis;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D610", Offset = "0xA0D610")]
		public Vector3 ManualFromAxis;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
		public Vector3 ManualToAxis;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x464")]
		public Vector3 FromAuto;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
		public Vector3 OffsetAuto;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47C")]
		public Vector3 parentalReferenceLookForward;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
		public Vector3 parentalReferenceUp;

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x494")]
		public Vector3 DynamicReferenceUp;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D648", Offset = "0xA0D648")]
		public Vector3 RotationOffset;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D680", Offset = "0xA0D680")]
		public Vector3 BackBonesAddOffset;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D6B8", Offset = "0xA0D6B8")]
		public Vector3 RotCorrectionMultiplier;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D6F0", Offset = "0xA0D6F0")]
		public bool DebugRays;

		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D728", Offset = "0xA0D728")]
		public EFAnimationStyle AnimationStyle;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xA0D760", Offset = "0xA0D760")]
		public bool ConstantParentalAxisUpdate;

		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CD")]
		private bool updateLookAnimator;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4CE")]
		private bool wasUpdating;

		[Token(Token = "0x170003D5")]
		public Transform MomentLookTransform
		{
			[Token(Token = "0x600244E")]
			[Address(RVA = "0x13886F0", Offset = "0x13886F0", VA = "0x13886F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA196EC", Offset = "0xA196EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600244F")]
			[Address(RVA = "0x13886F8", Offset = "0x13886F8", VA = "0x13886F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA196FC", Offset = "0xA196FC")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public EFHeadLookState LookState
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0x1392C88", Offset = "0x1392C88", VA = "0x1392C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA198D4", Offset = "0xA198D4")]
			get
			{
				return default(EFHeadLookState);
			}
			[Token(Token = "0x600248A")]
			[Address(RVA = "0x1392C90", Offset = "0x1392C90", VA = "0x1392C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA198E4", Offset = "0xA198E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public string EditorIconPath
		{
			[Token(Token = "0x6002493")]
			[Address(RVA = "0x1393AA8", Offset = "0x1393AA8", VA = "0x1393AA8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D8")]
		public bool UseBoneOffsetRotation
		{
			[Token(Token = "0x6002499")]
			[Address(RVA = "0x1393B1C", Offset = "0x1393B1C", VA = "0x1393B1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A4FC", Offset = "0xA1A4FC")]
		public float BlendToOriginal
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x1393B24", Offset = "0x1393B24", VA = "0x1393B24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600249B")]
			[Address(RVA = "0x1393B34", Offset = "0x1393B34", VA = "0x1393B34")]
			set
			{
			}
		}

		[Token(Token = "0x170003DA")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A534", Offset = "0xA1A534")]
		public Vector3 LookReferenceOffset
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x1393B44", Offset = "0x1393B44", VA = "0x1393B44")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x1393B54", Offset = "0x1393B54", VA = "0x1393B54")]
			set
			{
			}
		}

		[Token(Token = "0x170003DB")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A56C", Offset = "0xA1A56C")]
		public bool AnchorReferencePoint
		{
			[Token(Token = "0x600249E")]
			[Address(RVA = "0x1393B64", Offset = "0x1393B64", VA = "0x1393B64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x1393B6C", Offset = "0x1393B6C", VA = "0x1393B6C")]
			set
			{
			}
		}

		[Token(Token = "0x170003DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A5A4", Offset = "0xA1A5A4")]
		public bool RefreshAnchor
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x1393B78", Offset = "0x1393B78", VA = "0x1393B78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x1393B80", Offset = "0x1393B80", VA = "0x1393B80")]
			set
			{
			}
		}

		[Token(Token = "0x170003DD")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A5DC", Offset = "0xA1A5DC")]
		public float MinHeadLookAngle
		{
			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x1393B8C", Offset = "0x1393B8C", VA = "0x1393B8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x1393B94", Offset = "0x1393B94", VA = "0x1393B94")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A614", Offset = "0xA1A614")]
		public float MaxRotationDiffrence
		{
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x1393B9C", Offset = "0x1393B9C", VA = "0x1393B9C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1393BA4", Offset = "0x1393BA4", VA = "0x1393BA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1A64C", Offset = "0xA1A64C")]
		public bool AnimateWithSource
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x1393BAC", Offset = "0x1393BAC", VA = "0x1393BAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x1393BB4", Offset = "0x1393BB4", VA = "0x1393BB4")]
			set
			{
			}
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1387C50", Offset = "0x1387C50", VA = "0x1387C50")]
		public void SwitchLooking([Optional] bool? enableLooking, float transitionTime = 0.2f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1387DC0", Offset = "0x1387DC0", VA = "0x1387DC0")]
		public void SwitchLooking(bool enable = true)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1387E3C", Offset = "0x1387E3C", VA = "0x1387E3C")]
		public void SetLookTarget(Transform transform)
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1387E70", Offset = "0x1387E70", VA = "0x1387E70")]
		public void SetLookPosition(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1387E88", Offset = "0x1387E88", VA = "0x1387E88")]
		public Vector2 GetUnclampedLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1387F14", Offset = "0x1387F14", VA = "0x1387F14")]
		public Vector2 GetLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1387FA0", Offset = "0x1387FA0", VA = "0x1387FA0")]
		public Vector2 GetTargetLookAngles()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x138802C", Offset = "0x138802C", VA = "0x138802C")]
		public EFHeadLookState GetCurrentLookState()
		{
			return default(EFHeadLookState);
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x1388034", Offset = "0x1388034", VA = "0x1388034")]
		public Vector2 ComputeAnglesTowards(Vector3 worldPosition)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x1388700", Offset = "0x1388700", VA = "0x1388700")]
		public GameObject SetMomentLookTarget([Optional] Transform parent, [Optional] Vector3? position, [Optional][MetadataOffset(Offset = "0x3E0E6A")] float? destroyTimer, bool worldPosition = false)
		{
			return null;
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1388FF4", Offset = "0x1388FF4", VA = "0x1388FF4")]
		public void SetMomentLookTransform(Transform transform, float timeToLeft = 0f)
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1389110", Offset = "0x1389110", VA = "0x1389110")]
		public void ForceDestroyMomentTarget()
		{
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x1389208", Offset = "0x1389208", VA = "0x1389208")]
		private void InitBirdMode()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x1389588", Offset = "0x1389588", VA = "0x1389588")]
		private void CalculateBirdMode()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1389C3C", Offset = "0x1389C3C", VA = "0x1389C3C")]
		public void SetAutoWeightsDefault()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x138A140", Offset = "0x138A140", VA = "0x138A140")]
		public void UpdateAutomationWeights()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x138A2E8", Offset = "0x138A2E8", VA = "0x138A2E8")]
		public void RefreshBoneMotionWeights()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1389DC4", Offset = "0x1389DC4", VA = "0x1389DC4")]
		public float[] CalculateRotationWeights(float falloff)
		{
			return null;
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x138A3D8", Offset = "0x138A3D8", VA = "0x138A3D8")]
		private void CalculateWeights(float[] weights)
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x138A474", Offset = "0x138A474", VA = "0x138A474")]
		public Transform GetHeadReference()
		{
			return null;
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x138A4FC", Offset = "0x138A4FC", VA = "0x138A4FC")]
		public Transform GetEyesTarget()
		{
			return null;
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x138A6B4", Offset = "0x138A6B4", VA = "0x138A6B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xA1970C", Offset = "0xA1970C")]
		public Transform GetCurrentTarget()
		{
			return null;
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x138A6B8", Offset = "0x138A6B8", VA = "0x138A6B8")]
		public Vector3 GetEyesTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x138A750", Offset = "0x138A750", VA = "0x138A750")]
		private void InitEyesModule()
		{
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x138AE30", Offset = "0x138AE30", VA = "0x138AE30")]
		private void UpdateEyesLogics()
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x138B870", Offset = "0x138B870", VA = "0x138B870")]
		private void NoddingChangeTargetCalculations(float angleAmount)
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x138BA14", Offset = "0x138BA14", VA = "0x138BA14")]
		private void NoddingCalculations()
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x138BAD8", Offset = "0x138BAD8", VA = "0x138BAD8")]
		public void SetRotationSmoothing(float smoothingDuration = 0.5f, float smoothingPower = 2f)
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x138BAF0", Offset = "0x138BAF0", VA = "0x138BAF0")]
		private void UpdateSmoothing()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x138BB30", Offset = "0x138BB30", VA = "0x138BB30")]
		private void AnimateBonesUnsynced(Quaternion diffOnMain, Quaternion backTarget, float d)
		{
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x138C3C8", Offset = "0x138C3C8", VA = "0x138C3C8")]
		private void AnimateBonesSynced(Quaternion diffOnMain, Quaternion backTarget, float d)
		{
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x138C94C", Offset = "0x138C94C", VA = "0x138C94C")]
		private void AnimateBonesParental(float d)
		{
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x138D9B4", Offset = "0x138D9B4", VA = "0x138D9B4")]
		private void CalculateLookAnimation()
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x138FA6C", Offset = "0x138FA6C", VA = "0x138FA6C")]
		private void SetTargetBonesRotations()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x138F6DC", Offset = "0x138F6DC", VA = "0x138F6DC")]
		private Quaternion LookRotationParental(Vector3 direction)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0x138FF60", Offset = "0x138FF60", VA = "0x138FF60")]
		private Quaternion ParentalRotationMaths(Vector3 referenceRightDir, float xAngle, float yAngle)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x1390204", Offset = "0x1390204", VA = "0x1390204")]
		private void UpdateCorrectionMatrix()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0x139047C", Offset = "0x139047C", VA = "0x139047C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA19744", Offset = "0xA19744")]
		private IEnumerator AnimatePhysicsClock()
		{
			return null;
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x1387D0C", Offset = "0x1387D0C", VA = "0x1387D0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA197A8", Offset = "0xA197A8")]
		private IEnumerator SwitchLookingTransition(float transitionTime, bool enableAnimation, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x1389068", Offset = "0x1389068", VA = "0x1389068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA1980C", Offset = "0xA1980C")]
		private IEnumerator CResetMomentLookTransform(Transform transform, float time)
		{
			return null;
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x138E4C0", Offset = "0x138E4C0", VA = "0x138E4C0")]
		public Vector2 LimitAnglesCalculations(Vector2 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0x138EB00", Offset = "0x138EB00", VA = "0x138EB00")]
		public Vector2 AnimateAnglesTowards(Vector2 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x13905DC", Offset = "0x13905DC", VA = "0x13905DC")]
		public Vector3 GetDistanceMeasurePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002472")]
		[Address(RVA = "0x13882B0", Offset = "0x13882B0", VA = "0x13882B0")]
		public Vector3 GetLookStartMeasurePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x13906BC", Offset = "0x13906BC", VA = "0x13906BC")]
		public void RefreshLookStartPositionAnchor()
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x139076C", Offset = "0x139076C", VA = "0x139076C")]
		private float GetDistanceMeasure(Vector3 targetPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x13908AC", Offset = "0x13908AC", VA = "0x13908AC")]
		private void UpdateLookAnimatorAmountWeight()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0x1390A50", Offset = "0x1390A50", VA = "0x1390A50")]
		private void EndUpdate()
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x138E108", Offset = "0x138E108", VA = "0x138E108")]
		private void LookPositionUpdate()
		{
		}

		[Token(Token = "0x6002478")]
		[Address(RVA = "0x1390C1C", Offset = "0x1390C1C", VA = "0x1390C1C")]
		private void TargetingUpdate()
		{
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x138924C", Offset = "0x138924C", VA = "0x138924C")]
		public Vector3 GetLookAtPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x138A588", Offset = "0x138A588", VA = "0x138A588")]
		public Transform GetLookAtTransform()
		{
			return null;
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x1390CE8", Offset = "0x1390CE8", VA = "0x1390CE8")]
		public Vector3 GetForwardPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0x1388B40", Offset = "0x1388B40", VA = "0x1388B40")]
		protected void TargetChangedMeasures()
		{
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x1390DC4", Offset = "0x1390DC4", VA = "0x1390DC4")]
		private void MaxDistanceCalculations()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0x1390EAC", Offset = "0x1390EAC", VA = "0x1390EAC", Slot = "5")]
		protected virtual void OnTargetChanged()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x1390EB0", Offset = "0x1390EB0", VA = "0x1390EB0", Slot = "6")]
		protected virtual void OnRangeStateChanged()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1390EB4", Offset = "0x1390EB4", VA = "0x1390EB4")]
		private void BeginStateCheck()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x138E218", Offset = "0x138E218", VA = "0x138E218")]
		private void LookWhenAboveGoBackCalculations()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x1390F60", Offset = "0x1390F60", VA = "0x1390F60")]
		private void PreCalibrateBones()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x139103C", Offset = "0x139103C", VA = "0x139103C")]
		private void CalibrateBones()
		{
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1391A60", Offset = "0x1391A60", VA = "0x1391A60")]
		private void ChangeBonesRotations()
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1392018", Offset = "0x1392018", VA = "0x1392018")]
		private void ResetBones(bool onlyIfNull = false)
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1392314", Offset = "0x1392314", VA = "0x1392314")]
		internal void RefreshLookBones()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1391700", Offset = "0x1391700", VA = "0x1391700")]
		private void RefreshReferencePose()
		{
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1392BE0", Offset = "0x1392BE0", VA = "0x1392BE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA19870", Offset = "0xA19870")]
		private IEnumerator CRefreshReferencePose()
		{
			return null;
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x1392C98", Offset = "0x1392C98", VA = "0x1392C98")]
		public void InitializeBaseVariables()
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x1393328", Offset = "0x1393328", VA = "0x1393328")]
		public void FindBaseTransform()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x13934B0", Offset = "0x13934B0", VA = "0x13934B0")]
		public Vector3 TryFindHeadPositionInTarget(Transform other)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x13906B8", Offset = "0x13906B8", VA = "0x13906B8")]
		private void _LOG_NoRefs()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x13938C8", Offset = "0x13938C8", VA = "0x13938C8")]
		private void _Debug_Rays()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x1388638", Offset = "0x1388638", VA = "0x1388638")]
		private Vector3 WrapVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x138F488", Offset = "0x138F488", VA = "0x138F488")]
		private Vector3 ConvertFlippedAxes(Vector3 rotations)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x138FD9C", Offset = "0x138FD9C", VA = "0x138FD9C")]
		public static float AngleAroundAxis(Vector3 firstDirection, Vector3 secondDirection, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0x1393B18", Offset = "0x1393B18", VA = "0x1393B18", Slot = "4")]
		public void OnDrop(PointerEventData data)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x139057C", Offset = "0x139057C", VA = "0x139057C")]
		private float GetClampedAngle(float current, float limit, float elastic, float sign = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0x1392F4C", Offset = "0x1392F4C", VA = "0x1392F4C")]
		private void ComputeBonesRotationsFixVariables()
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x13914FC", Offset = "0x13914FC", VA = "0x13914FC")]
		private void RefreshParentalLookReferenceAxis()
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x1390ABC", Offset = "0x1390ABC", VA = "0x1390ABC")]
		public Vector3 GetCurrentHeadForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1393BC0", Offset = "0x1393BC0", VA = "0x1393BC0")]
		private void Reset()
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x1393BC4", Offset = "0x1393BC4", VA = "0x1393BC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x1393BC8", Offset = "0x1393BC8", VA = "0x1393BC8", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x1393BE0", Offset = "0x1393BE0", VA = "0x1393BE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x1393BE8", Offset = "0x1393BE8", VA = "0x1393BE8")]
		public void ResetLook()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x1393C1C", Offset = "0x1393C1C", VA = "0x1393C1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1393DC4", Offset = "0x1393DC4", VA = "0x1393DC4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x1393DE4", Offset = "0x1393DE4", VA = "0x1393DE4", Slot = "9")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1393EC4", Offset = "0x1393EC4", VA = "0x1393EC4")]
		public FLookAnimator()
		{
		}
	}
}
namespace NeatAudio
{
	[Token(Token = "0x200060C")]
	public class NeatAudioCodeTimer : MonoBehaviour
	{
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDAFC", Offset = "0x9FDAFC")]
		private sealed class <DelayedCallNextFrameCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool errorOnNull;

			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x170003EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024E5")]
				[Address(RVA = "0xD0BB98", Offset = "0xD0BB98", VA = "0xD0BB98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024E7")]
				[Address(RVA = "0xD0BC00", Offset = "0xD0BC00", VA = "0xD0BC00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xD0B800", Offset = "0xD0B800", VA = "0xD0B800")]
			[DebuggerHidden]
			public <DelayedCallNextFrameCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0xD0BB0C", Offset = "0xD0BB0C", VA = "0xD0BB0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xD0BB10", Offset = "0xD0BB10", VA = "0xD0BB10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xD0BBA0", Offset = "0xD0BBA0", VA = "0xD0BBA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB0C", Offset = "0x9FDB0C")]
		private sealed class <DelayedCallCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool errorOnNull;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action action;

			[Token(Token = "0x170003ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024EB")]
				[Address(RVA = "0xD0BA9C", Offset = "0xD0BA9C", VA = "0xD0BA9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024ED")]
				[Address(RVA = "0xD0BB04", Offset = "0xD0BB04", VA = "0xD0BB04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0xD0B82C", Offset = "0xD0B82C", VA = "0xD0B82C")]
			[DebuggerHidden]
			public <DelayedCallCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xD0B9C0", Offset = "0xD0B9C0", VA = "0xD0B9C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xD0B9C4", Offset = "0xD0B9C4", VA = "0xD0B9C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xD0BAA4", Offset = "0xD0BAA4", VA = "0xD0BAA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB1C", Offset = "0x9FDB1C")]
		private sealed class <DelayedCallCoroutine>d__16<T> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float delay;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool errorOnNull;

			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> action;

			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T obj;

			[Token(Token = "0x170003EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024F1")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024F3")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024EE")]
			[DebuggerHidden]
			public <DelayedCallCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60024EF")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024F0")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024F2")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool hasInstance;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static NeatAudioCodeTimer _instance;

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int disableFrame;

		[Token(Token = "0x170003E9")]
		private static NeatAudioCodeTimer Instance
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xD0B094", Offset = "0xD0B094", VA = "0xD0B094")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003EA")]
		public static bool HasInstance
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0xD0B274", Offset = "0xD0B274", VA = "0xD0B274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xD0B2DC", Offset = "0xD0B2DC", VA = "0xD0B2DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024D5")]
		public static Coroutine DelayedCall<T>(float delay, Action<T> action, T obj, bool errorOnNull = true)
		{
			return null;
		}

		[Token(Token = "0x60024D6")]
		private Coroutine DelayedCallInstance<T>(float delay, Action<T> action, T obj, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0xD0B45C", Offset = "0xD0B45C", VA = "0xD0B45C")]
		public static Coroutine DelayedCall(float delay, Action action, bool errorOnNull = true)
		{
			return null;
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0xD0B570", Offset = "0xD0B570", VA = "0xD0B570")]
		private Coroutine DelayedCallInstance(float delay, Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0xD0B640", Offset = "0xD0B640", VA = "0xD0B640")]
		public static Coroutine DelayedCallNextFrame(Action action, bool errorOnNull = true)
		{
			return null;
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0xD0B740", Offset = "0xD0B740", VA = "0xD0B740")]
		private Coroutine DelayedCallNextFrameInstance(Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0xD0B770", Offset = "0xD0B770", VA = "0xD0B770")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA19A34", Offset = "0xA19A34")]
		private IEnumerator DelayedCallNextFrameCoroutine(Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0xD0B5A0", Offset = "0xD0B5A0", VA = "0xD0B5A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA19A98", Offset = "0xA19A98")]
		private IEnumerator DelayedCallCoroutine(float delay, Action action, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x60024DD")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA19AFC", Offset = "0xA19AFC")]
		private IEnumerator DelayedCallCoroutine<T>(float delay, Action<T> action, T obj, bool errorOnNull)
		{
			return null;
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0xD0B858", Offset = "0xD0B858", VA = "0xD0B858")]
		public static bool StopDelayedCall(Coroutine routine)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0xD0B364", Offset = "0xD0B364", VA = "0xD0B364")]
		public static bool StopAllDelayedCalls()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0xD0B964", Offset = "0xD0B964", VA = "0xD0B964")]
		public NeatAudioCodeTimer()
		{
		}
	}
	[Token(Token = "0x2000610")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9FDB2C", Offset = "0x9FDB2C")]
	public class NeatAudioCue : ScriptableObject
	{
		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volume;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NeatAudioElement[] audioElements;

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0xD0BC08", Offset = "0xD0BC08", VA = "0xD0BC08")]
		private static Vector2 UpdateMultOffset(Vector4 remap)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0xD0BC24", Offset = "0xD0BC24", VA = "0xD0BC24")]
		public void TryInit()
		{
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0xD0C710", Offset = "0xD0C710", VA = "0xD0C710")]
		public void SetParameter(int key, float value, float overTime = -1f, float smooth = -1f)
		{
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0xD0C7B4", Offset = "0xD0C7B4", VA = "0xD0C7B4")]
		public void Detach()
		{
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0xD0C820", Offset = "0xD0C820", VA = "0xD0C820")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0xD0C88C", Offset = "0xD0C88C", VA = "0xD0C88C")]
		public NeatAudioCue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000611")]
	public class NeatAudioElement
	{
		[Serializable]
		[Token(Token = "0x2000612")]
		public class AudioClipGroup
		{
			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioClip[] clips;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioClip[] intros;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AudioClip[] outros;

			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float minForSelect;

			[Token(Token = "0x400252C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float maxForSelect;

			[Token(Token = "0x400252D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float reTriggerOffset;

			[Token(Token = "0x400252E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float groupVolume;

			[Token(Token = "0x6002515")]
			[Address(RVA = "0x10FBF0C", Offset = "0x10FBF0C", VA = "0x10FBF0C")]
			public AudioClipGroup()
			{
			}
		}

		[Token(Token = "0x2000613")]
		public enum Modulation
		{
			[Token(Token = "0x4002530")]
			None,
			[Token(Token = "0x4002531")]
			Sine,
			[Token(Token = "0x4002532")]
			Triangle,
			[Token(Token = "0x4002533")]
			Square,
			[Token(Token = "0x4002534")]
			Saw
		}

		[Token(Token = "0x2000614")]
		public enum ClipSelectStyle
		{
			[Token(Token = "0x4002536")]
			Sequential,
			[Token(Token = "0x4002537")]
			Random,
			[Token(Token = "0x4002538")]
			RandomAvoidSame
		}

		[Token(Token = "0x2000615")]
		public enum LoopStyle
		{
			[Token(Token = "0x400253A")]
			OneShot,
			[Token(Token = "0x400253B")]
			Loop
		}

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB3C", Offset = "0x9FDB3C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400253C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x400253D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x6002516")]
			[Address(RVA = "0x10FAD64", Offset = "0x10FAD64", VA = "0x10FAD64")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002517")]
			[Address(RVA = "0x10FBC14", Offset = "0x10FBC14", VA = "0x10FBC14")]
			internal float <UpdateVariables>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002518")]
			[Address(RVA = "0x10FBC5C", Offset = "0x10FBC5C", VA = "0x10FBC5C")]
			internal void <UpdateVariables>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB4C", Offset = "0x9FDB4C")]
		private sealed class <>c__DisplayClass18_1
		{
			[Token(Token = "0x400253E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x400253F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x6002519")]
			[Address(RVA = "0x10FAD6C", Offset = "0x10FAD6C", VA = "0x10FAD6C")]
			public <>c__DisplayClass18_1()
			{
			}

			[Token(Token = "0x600251A")]
			[Address(RVA = "0x10FBCAC", Offset = "0x10FBCAC", VA = "0x10FBCAC")]
			internal float <UpdateVariables>b__2()
			{
				return default(float);
			}

			[Token(Token = "0x600251B")]
			[Address(RVA = "0x10FBCF4", Offset = "0x10FBCF4", VA = "0x10FBCF4")]
			internal void <UpdateVariables>b__3(float x)
			{
			}
		}

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB5C", Offset = "0x9FDB5C")]
		private sealed class <>c__DisplayClass18_2
		{
			[Token(Token = "0x4002540")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002541")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x600251C")]
			[Address(RVA = "0x10FAD74", Offset = "0x10FAD74", VA = "0x10FAD74")]
			public <>c__DisplayClass18_2()
			{
			}

			[Token(Token = "0x600251D")]
			[Address(RVA = "0x10FBD44", Offset = "0x10FBD44", VA = "0x10FBD44")]
			internal float <UpdateVariables>b__4()
			{
				return default(float);
			}

			[Token(Token = "0x600251E")]
			[Address(RVA = "0x10FBD8C", Offset = "0x10FBD8C", VA = "0x10FBD8C")]
			internal void <UpdateVariables>b__5(float x)
			{
			}
		}

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB6C", Offset = "0x9FDB6C")]
		private sealed class <>c__DisplayClass18_3
		{
			[Token(Token = "0x4002542")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002543")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x600251F")]
			[Address(RVA = "0x10FAD7C", Offset = "0x10FAD7C", VA = "0x10FAD7C")]
			public <>c__DisplayClass18_3()
			{
			}

			[Token(Token = "0x6002520")]
			[Address(RVA = "0x10FBDDC", Offset = "0x10FBDDC", VA = "0x10FBDDC")]
			internal float <UpdateVariables>b__6()
			{
				return default(float);
			}

			[Token(Token = "0x6002521")]
			[Address(RVA = "0x10FBE24", Offset = "0x10FBE24", VA = "0x10FBE24")]
			internal void <UpdateVariables>b__7(float x)
			{
			}
		}

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB7C", Offset = "0x9FDB7C")]
		private sealed class <>c__DisplayClass18_4
		{
			[Token(Token = "0x4002544")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int lambdaSafe;

			[Token(Token = "0x4002545")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement <>4__this;

			[Token(Token = "0x6002522")]
			[Address(RVA = "0x10FAD84", Offset = "0x10FAD84", VA = "0x10FAD84")]
			public <>c__DisplayClass18_4()
			{
			}

			[Token(Token = "0x6002523")]
			[Address(RVA = "0x10FBE74", Offset = "0x10FBE74", VA = "0x10FBE74")]
			internal float <UpdateVariables>b__8()
			{
				return default(float);
			}

			[Token(Token = "0x6002524")]
			[Address(RVA = "0x10FBEBC", Offset = "0x10FBEBC", VA = "0x10FBEBC")]
			internal void <UpdateVariables>b__9(float x)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip selectedClip;

		[NonSerialized]
		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float selectedDelay;

		[NonSerialized]
		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float selectedPitch;

		[NonSerialized]
		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float selectedVolume;

		[NonSerialized]
		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float selectedChance;

		[NonSerialized]
		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float baseDelay;

		[NonSerialized]
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float basePitch;

		[NonSerialized]
		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float baseVolume;

		[NonSerialized]
		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float squaredDistanceForOptimizedPlayback;

		[NonSerialized]
		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NeatAudioCue owner;

		[NonSerialized]
		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int indexPreviouslyPlayed;

		[NonSerialized]
		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int clipGroupSelected;

		[NonSerialized]
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int clipGroupPlaying;

		[NonSerialized]
		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float clipGroupSelectionValue;

		[NonSerialized]
		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool noMansSky;

		[NonSerialized]
		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float currentDelay;

		[NonSerialized]
		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool initialized;

		[NonSerialized]
		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int clipSelectParamLength;

		[NonSerialized]
		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int chanceParamLength;

		[NonSerialized]
		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int delayParamLength;

		[NonSerialized]
		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int volumeParamLength;

		[NonSerialized]
		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int pitchParamLength;

		[NonSerialized]
		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector2[] clipSelectParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2[] chanceParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector2[] delayParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector2[] volumeParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector2[] pitchParameterRemapSimple;

		[NonSerialized]
		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Tweener[] clipSelectTweeners;

		[NonSerialized]
		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Tweener[] chanceTweeners;

		[NonSerialized]
		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Tweener[] delayTweeners;

		[NonSerialized]
		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Tweener[] volumeTweeners;

		[NonSerialized]
		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Tweener[] pitchTweeners;

		[NonSerialized]
		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float[] clipSelectParameterValues;

		[NonSerialized]
		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float[] chanceParameterValues;

		[NonSerialized]
		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float[] delayParameterValues;

		[NonSerialized]
		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float[] volumeParameterValues;

		[NonSerialized]
		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float[] pitchParameterValues;

		[NonSerialized]
		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float fadeMultiplier;

		[NonSerialized]
		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioSource attachedToSource;

		[NonSerialized]
		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public NeatAudioPlayer attachedToPlayer;

		[NonSerialized]
		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public NeatPooledAudioSource attachedToPooledSource;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Coroutine disableSourceRoutine;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Coroutine delayedPlaySourceRoutine;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool hasFadeTweener;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Tweener fadeTweener;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool attachedToAudioPlayer;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool isPlaying;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[HideInInspector]
		public int[] clipGroupSelectParameterHash;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public Vector4[] clipSelectParameterRemapInfo;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public bool[] clipSelectParameterShouldRemap;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public Vector2[] clipSelectParameterModulationInfo;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Modulation[] clipSelectParameterModulated;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public int[] playChanceParameterHash;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Vector4[] chanceParameterRemapInfo;

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public bool[] chanceParameterShouldRemap;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public Vector2[] chanceParameterModulationInfo;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public Modulation[] chanceParameterModulated;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public int[] delayParameterHash;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public Vector4[] delayParameterRemapInfo;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		public bool[] delayParameterShouldRemap;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public Vector2[] delayParameterModulationInfo;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[HideInInspector]
		public Modulation[] delayParameterModulated;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[HideInInspector]
		public int[] volumeParameterHash;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public Vector4[] volumeParameterRemapInfo;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public bool[] volumeParameterShouldRemap;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public Vector2[] volumeParameterModulationInfo;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[HideInInspector]
		public Modulation[] volumeParameterModulated;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[HideInInspector]
		public int[] pitchParameterHash;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Vector4[] pitchParameterRemapInfo;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[HideInInspector]
		public bool[] pitchParameterShouldRemap;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector2[] pitchParameterModulationInfo;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public Modulation[] pitchParameterModulated;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public string[] parameters;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public bool playAdditive;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		public bool mute;

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		public float fadeInTime;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public float fadeOutTime;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public AudioClipGroup[] audioClipGroups;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bool switchClipGroupWhilePlaying;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x219")]
		public bool stopWhenNoGroupSelected;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21A")]
		public bool chanceStart;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21B")]
		public bool chanceIteration;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		public float playChance;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public bool delayStart;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		public bool delayIteration;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float delay;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public float delayVariation;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		public bool clipLengthToDelay;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public ClipSelectStyle clipSelectStyle;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public float volume;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		public float volumeVariation;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public float pitch;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float pitchVariation;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public LoopStyle loopStyle;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
		public int priority;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public bool spatialize;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x259")]
		public bool spatializePostEffects;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		public float dopplerLevel;

		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public float maxDistance;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		public float minDistance;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public float panStereo;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		public AudioRolloffMode rolloffMode;

		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public AnimationCurve customRolloffCurve;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float spatialBlend;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public bool useUnityFalloff;

		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27D")]
		public bool bypassEffects;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27E")]
		public bool bypassListenerEffects;

		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27F")]
		public bool bypassReverbZones;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public float reverbZoneMix;

		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		public float spread;

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x10F89D4", Offset = "0x10F89D4", VA = "0x10F89D4")]
		public void AttachPooledSource(NeatPooledAudioSource pooledSource)
		{
		}

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x10F8A18", Offset = "0x10F8A18", VA = "0x10F8A18")]
		public void AttachPlayer(NeatAudioPlayer audioPlayer)
		{
		}

		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x10F8A48", Offset = "0x10F8A48", VA = "0x10F8A48")]
		public void Attach(NeatAudioPlayer audioPlayer, AudioSource source)
		{
		}

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x10F8A84", Offset = "0x10F8A84", VA = "0x10F8A84")]
		public void Detach()
		{
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x10F9040", Offset = "0x10F9040", VA = "0x10F9040")]
		public void PickClip()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x10F90A4", Offset = "0x10F90A4", VA = "0x10F90A4")]
		private void PickAudioClip(AudioClip[] clips)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0x10F91B0", Offset = "0x10F91B0", VA = "0x10F91B0")]
		private void UpdateClipGroup()
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x10F9824", Offset = "0x10F9824", VA = "0x10F9824")]
		public void UpdatePlayChance()
		{
		}

		[Token(Token = "0x6002502")]
		[Address(RVA = "0x10F9898", Offset = "0x10F9898", VA = "0x10F9898")]
		public void PickBaseDelay()
		{
		}

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x10F98D0", Offset = "0x10F98D0", VA = "0x10F98D0")]
		public void UpdateDelay()
		{
		}

		[Token(Token = "0x6002504")]
		[Address(RVA = "0x10F9944", Offset = "0x10F9944", VA = "0x10F9944")]
		public void PickBaseVolume()
		{
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x10F997C", Offset = "0x10F997C", VA = "0x10F997C")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x10F9AC8", Offset = "0x10F9AC8", VA = "0x10F9AC8")]
		public void PickBasePitch()
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x10F9B00", Offset = "0x10F9B00", VA = "0x10F9B00")]
		public void UpdatePitch()
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x10F9C00", Offset = "0x10F9C00", VA = "0x10F9C00")]
		public void UpdateVariables(int key, float value, float overTime = -1f, float smooth = -1f)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x10FAD8C", Offset = "0x10FAD8C", VA = "0x10FAD8C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x10FAD94", Offset = "0x10FAD94", VA = "0x10FAD94")]
		public void BeginningPlay(float delay = -1f)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x10FB5D8", Offset = "0x10FB5D8", VA = "0x10FB5D8")]
		private void OnStopPlaying()
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x10FB710", Offset = "0x10FB710", VA = "0x10FB710")]
		public float StoppingPlay()
		{
			return default(float);
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x10FB9F0", Offset = "0x10FB9F0", VA = "0x10FB9F0")]
		private void StopAfterFade()
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x10FB914", Offset = "0x10FB914", VA = "0x10FB914")]
		public void StopThingsNow()
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x10FBB4C", Offset = "0x10FBB4C", VA = "0x10FBB4C")]
		public NeatAudioElement()
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x10FBBBC", Offset = "0x10FBBBC", VA = "0x10FBBBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19C50", Offset = "0xA19C50")]
		private void <BeginningPlay>b__20_0(float x)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x10FBBC4", Offset = "0x10FBBC4", VA = "0x10FBBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19C60", Offset = "0xA19C60")]
		private void <BeginningPlay>b__20_1(float x)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x10FBBCC", Offset = "0x10FBBCC", VA = "0x10FBBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19C70", Offset = "0xA19C70")]
		private void <BeginningPlay>b__20_2()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x10FBBF0", Offset = "0x10FBBF0", VA = "0x10FBBF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19C80", Offset = "0xA19C80")]
		private void <BeginningPlay>b__20_3()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x10FBC0C", Offset = "0x10FBC0C", VA = "0x10FBC0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xA19C90", Offset = "0xA19C90")]
		private void <StoppingPlay>b__22_0(float x)
		{
		}
	}
	[Token(Token = "0x200061B")]
	public class NeatAudioDelayedLooper : MonoBehaviour
	{
		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NeatAudioPlayer audioPlayer;

		[Token(Token = "0x6002525")]
		[Address(RVA = "0x10F8928", Offset = "0x10F8928", VA = "0x10F8928")]
		private void Update()
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x10F89CC", Offset = "0x10F89CC", VA = "0x10F89CC")]
		public NeatAudioDelayedLooper()
		{
		}
	}
	[Token(Token = "0x200061C")]
	public class NeatAudioFollower : MonoBehaviour
	{
		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform followObject;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform backupFollowObject;

		[Token(Token = "0x6002527")]
		[Address(RVA = "0x10FBF20", Offset = "0x10FBF20", VA = "0x10FBF20")]
		private void Update()
		{
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x10FC06C", Offset = "0x10FC06C", VA = "0x10FC06C")]
		public NeatAudioFollower()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class NeatAudioManager : MonoBehaviour
	{
		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CullingGroup audioBandsCullingGroup;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NeatAudioPlayer[] distanceCheckedAudioPlayers;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BoundingSphere[] audioBoundingSpheres;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int trackedAudioPlayersCount;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform trackAudioPlayersAgainst;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool audioPlayerTrackingIsSetup;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NeatAudioManager inst;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool musicOff;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float defaultMusicVolume;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string MusicVolumeParameter;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasInitializedVolume;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int currentUpdateIndex;

		[Token(Token = "0x4002555")]
		private const int numEntriesToUpdate = 50;

		[Token(Token = "0x170003F1")]
		public static bool HasInstance
		{
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x10FC074", Offset = "0x10FC074", VA = "0x10FC074")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x10FC10C", Offset = "0x10FC10C", VA = "0x10FC10C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x10FC224", Offset = "0x10FC224", VA = "0x10FC224")]
		public static void TrackAudioDistances(Transform trackAgainstTransform, Camera trackAgainstCamera)
		{
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x10FC888", Offset = "0x10FC888", VA = "0x10FC888")]
		public static void AddTrackedPlayer(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0x10FC5F8", Offset = "0x10FC5F8", VA = "0x10FC5F8")]
		private static void SetTrackingOnPlayer(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x10FCBEC", Offset = "0x10FCBEC", VA = "0x10FCBEC")]
		public static void RemoveTrackedPlayer(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x10FCC9C", Offset = "0x10FCC9C", VA = "0x10FCC9C")]
		private static void MoveLastTrackedAudioPlayerToIndex(int index)
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x10FCE94", Offset = "0x10FCE94", VA = "0x10FCE94")]
		private void StateChangedForSphere(CullingGroupEvent evt)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x10FCF30", Offset = "0x10FCF30", VA = "0x10FCF30")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x10FD034", Offset = "0x10FD034", VA = "0x10FD034")]
		private void Update()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x10FD420", Offset = "0x10FD420", VA = "0x10FD420")]
		public static void ToggleMusic()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x10FD64C", Offset = "0x10FD64C", VA = "0x10FD64C")]
		public NeatAudioManager()
		{
		}
	}
	[Token(Token = "0x200061E")]
	public class NeatAudioModulator : NeatAudioParameterFixer
	{
		[Token(Token = "0x200061F")]
		private class Thingy
		{
			[Token(Token = "0x4002557")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float freq;

			[Token(Token = "0x4002558")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float amp;

			[Token(Token = "0x4002559")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NeatAudioElement.Modulation mod;

			[Token(Token = "0x600253F")]
			[Address(RVA = "0x10FD8F8", Offset = "0x10FD8F8", VA = "0x10FD8F8")]
			public Thingy(float freq, float amp, NeatAudioElement.Modulation mod)
			{
			}
		}

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Thingy> thingies;

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x10FD738", Offset = "0x10FD738", VA = "0x10FD738")]
		public void Modulate(int key, float freq, float amp, NeatAudioElement.Modulation mod)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x10FD938", Offset = "0x10FD938", VA = "0x10FD938")]
		public void UnModulate(int key)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x10FDA10", Offset = "0x10FDA10", VA = "0x10FDA10", Slot = "4")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x10FDAE8", Offset = "0x10FDAE8", VA = "0x10FDAE8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x10FE0A4", Offset = "0x10FE0A4", VA = "0x10FE0A4")]
		private float Lerp(float a, float b, float t)
		{
			return default(float);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x10FE0BC", Offset = "0x10FE0BC", VA = "0x10FE0BC")]
		private float InverseLerp(float a, float b, float v)
		{
			return default(float);
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x10FE034", Offset = "0x10FE034", VA = "0x10FE034")]
		private float Frac(float value)
		{
			return default(float);
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x10FE010", Offset = "0x10FE010", VA = "0x10FE010")]
		private float Remap(float value, float iMin, float iMax, float oMin, float oMax)
		{
			return default(float);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x10FE0CC", Offset = "0x10FE0CC", VA = "0x10FE0CC")]
		public NeatAudioModulator()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class NeatAudioParameterFixer : MonoBehaviour
	{
		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NeatAudioPlayer audioPlayer;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int length;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<int, int> keysDict;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<int> keysList;

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x10FDA70", Offset = "0x10FDA70", VA = "0x10FDA70", Slot = "4")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x10FE144", Offset = "0x10FE144", VA = "0x10FE144")]
		public NeatAudioParameterFixer()
		{
		}
	}
	[Token(Token = "0x2000621")]
	public class NeatAudioParameterSmoother : NeatAudioParameterFixer
	{
		[Token(Token = "0x2000622")]
		private struct Thingy
		{
			[Token(Token = "0x400255F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float value;

			[Token(Token = "0x4002560")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float smooth;

			[Token(Token = "0x6002547")]
			[Address(RVA = "0xAE6BCC", Offset = "0xAE6BCC", VA = "0xAE6BCC")]
			public Thingy(float value, float smooth)
			{
			}
		}

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Thingy> thingies;

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x10FE1F4", Offset = "0x10FE1F4", VA = "0x10FE1F4")]
		public void SmoothOperate(int key, float value, float smooth)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x10FE314", Offset = "0x10FE314", VA = "0x10FE314")]
		public void UnPutInSmoothingList(int key)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x10FE3EC", Offset = "0x10FE3EC", VA = "0x10FE3EC", Slot = "4")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x10FE44C", Offset = "0x10FE44C", VA = "0x10FE44C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x10FE588", Offset = "0x10FE588", VA = "0x10FE588")]
		public NeatAudioParameterSmoother()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class NeatAudioPlayer : MonoBehaviour, IInitializable
	{
		[Token(Token = "0x2000624")]
		public enum OptimizationType
		{
			[Token(Token = "0x4002583")]
			Band7,
			[Token(Token = "0x4002584")]
			Band15,
			[Token(Token = "0x4002585")]
			Band25,
			[Token(Token = "0x4002586")]
			Band40,
			[Token(Token = "0x4002587")]
			Band70,
			[Token(Token = "0x4002588")]
			DisableOnStop,
			[Token(Token = "0x4002589")]
			None
		}

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDB8C", Offset = "0x9FDB8C")]
		private sealed class <PlayAfterOneFrame>d__58 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400258C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NeatAudioPlayer <>4__this;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600256D")]
				[Address(RVA = "0x1100C64", Offset = "0x1100C64", VA = "0x1100C64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600256F")]
				[Address(RVA = "0x1100CCC", Offset = "0x1100CCC", VA = "0x1100CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600256A")]
			[Address(RVA = "0x1100294", Offset = "0x1100294", VA = "0x1100294")]
			[DebuggerHidden]
			public <PlayAfterOneFrame>d__58(int <>1__state)
			{
			}

			[Token(Token = "0x600256B")]
			[Address(RVA = "0x1100B88", Offset = "0x1100B88", VA = "0x1100B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600256C")]
			[Address(RVA = "0x1100B8C", Offset = "0x1100B8C", VA = "0x1100B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600256E")]
			[Address(RVA = "0x1100C6C", Offset = "0x1100C6C", VA = "0x1100C6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xA0D928", Offset = "0xA0D928")]
		public bool playOnEnable;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public NeatAudioCue audioCue;

		[NonSerialized]
		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool usePooling;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float MIN_DISTANCE;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float CLOSE_DISTANCE;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float MEDIUM_DISTANCE;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float FAR_DISTANCE;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float MAX_DISTANCE;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private OptimizationType optimizationType;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playOnBandEnable;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool debug;

		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AudioClip silence;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[HideInInspector]
		public bool baked;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NeatAudioCue assignedAudioCue;

		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private NeatAudioCue originalAudioCue;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool woke;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<AudioSource> audioSources;

		[Token(Token = "0x4002572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NeatAudioFollower follower;

		[Token(Token = "0x4002573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hasDelayedLooper;

		[Token(Token = "0x4002574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NeatAudioDelayedLooper delayedLooper;

		[Token(Token = "0x4002575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool hasSmoother;

		[Token(Token = "0x4002576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private NeatAudioParameterSmoother smoother;

		[Token(Token = "0x4002577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool hasModulator;

		[Token(Token = "0x4002578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private NeatAudioModulator modulator;

		[NonSerialized]
		[Token(Token = "0x4002579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int optIndex;

		[NonSerialized]
		[Token(Token = "0x400257A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform myTransform;

		[Token(Token = "0x400257B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<NeatAudioCue, NeatAudioCue> instanceDict;

		[NonSerialized]
		[Token(Token = "0x400257C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool isBandActive;

		[Token(Token = "0x400257D")]
		private const float REFLECTION_MIX_ADD = 0f;

		[Token(Token = "0x400257E")]
		private const float DIRECT_MIX_SUBTRACT = 0f;

		[Token(Token = "0x400257F")]
		private const float TRANSMISSION_ADD_IF_NO_REFLECTIONS = 0.33f;

		[Token(Token = "0x4002580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine playAfterDelayRoutine;

		[Token(Token = "0x4002581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine stopRoutine;

		[Token(Token = "0x170003F2")]
		public bool Initialized
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x10FE600", Offset = "0x10FE600", VA = "0x10FE600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x10FE608", Offset = "0x10FE608", VA = "0x10FE608")]
		public OptimizationType GetOptimizationType()
		{
			return default(OptimizationType);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x10FE610", Offset = "0x10FE610", VA = "0x10FE610", Slot = "4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x10FEE4C", Offset = "0x10FEE4C", VA = "0x10FEE4C")]
		public void UpdateFollowObject(Transform newFollow, Transform backupFollow)
		{
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x10FF050", Offset = "0x10FF050", VA = "0x10FF050")]
		public void AssignAndPlay(NeatAudioCue cue)
		{
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x10FB4E8", Offset = "0x10FB4E8", VA = "0x10FB4E8")]
		public void _UpdateModulation(int h, float freq, float amp, NeatAudioElement.Modulation mod)
		{
		}

		[Token(Token = "0x600254E")]
		[Address(RVA = "0x10FF074", Offset = "0x10FF074", VA = "0x10FF074")]
		public void GetSpectrumDataFirstElement(float[] samples, int channel, FFTWindow window)
		{
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x10FF1B4", Offset = "0x10FF1B4", VA = "0x10FF1B4")]
		public void SetOptimizationType(OptimizationType type)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x10FF27C", Offset = "0x10FF27C", VA = "0x10FF27C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x10FF318", Offset = "0x10FF318", VA = "0x10FF318")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x10FF630", Offset = "0x10FF630", VA = "0x10FF630")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x10FF780", Offset = "0x10FF780", VA = "0x10FF780")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x10FF854", Offset = "0x10FF854", VA = "0x10FF854")]
		public void SetPlaying(bool playing)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x10FE9F0", Offset = "0x10FE9F0", VA = "0x10FE9F0")]
		public void AssignAudioCue(NeatAudioCue newAudioCue)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x10FFD24", Offset = "0x10FFD24", VA = "0x10FFD24")]
		public NeatAudioCue GetAudioCueOriginal()
		{
			return null;
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x10FFD2C", Offset = "0x10FFD2C", VA = "0x10FFD2C")]
		public NeatAudioCue GetAudioCueInstance()
		{
			return null;
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x10FFD34", Offset = "0x10FFD34", VA = "0x10FFD34")]
		public NeatAudioCue GetAudioCueInstanceByOriginal(NeatAudioCue original)
		{
			return null;
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x10FFDAC", Offset = "0x10FFDAC", VA = "0x10FFDAC")]
		public void SetParameterOverTime(int key, float value, float overTime)
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x10FFE8C", Offset = "0x10FFE8C", VA = "0x10FFE8C")]
		public void SetParameter(int key, float value)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x10FFF68", Offset = "0x10FFF68", VA = "0x10FFF68")]
		public void SetParameterSmooth(int key, float value, float smoothness)
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x10FCA68", Offset = "0x10FCA68", VA = "0x10FCA68")]
		public void BandActive(bool active)
		{
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x10FFA6C", Offset = "0x10FFA6C", VA = "0x10FFA6C")]
		private void AddAudioSourcesIfNeeded()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x110003C", Offset = "0x110003C", VA = "0x110003C")]
		public void LoadAudioSourceValues(AudioSource audioSource, NeatAudioElement neatElement)
		{
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x10F8940", Offset = "0x10F8940", VA = "0x10F8940")]
		public void _DelayedLoopPlay()
		{
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x1100218", Offset = "0x1100218", VA = "0x1100218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xA19CA0", Offset = "0xA19CA0")]
		private IEnumerator PlayAfterOneFrame()
		{
			return null;
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x10FECA8", Offset = "0x10FECA8", VA = "0x10FECA8")]
		public void Play()
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x10F9358", Offset = "0x10F9358", VA = "0x10F9358")]
		public bool _PlayElement(NeatAudioElement audioElement, bool delayedLoop = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x10FF860", Offset = "0x10FF860", VA = "0x10FF860")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x10F976C", Offset = "0x10F976C", VA = "0x10F976C")]
		public float _StopElement(NeatAudioElement audioElement)
		{
			return default(float);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x11002C0", Offset = "0x11002C0", VA = "0x11002C0")]
		private void _StopModules()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x10FF47C", Offset = "0x10FF47C", VA = "0x10FF47C")]
		private void ForceStopImmediately(NeatAudioElement elementToStop)
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x10FF424", Offset = "0x10FF424", VA = "0x10FF424")]
		public void AbortAndDetach(NeatAudioElement audioElement)
		{
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x1100A3C", Offset = "0x1100A3C", VA = "0x1100A3C")]
		public NeatAudioPlayer()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class NeatAudioPool : MonoBehaviour
	{
		[Token(Token = "0x400258D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NeatAudioPool _instance;

		[Token(Token = "0x400258E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NeatPooledAudioSource[] pooledSources;

		[Token(Token = "0x400258F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int usedSources;

		[Token(Token = "0x4002590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxSources;

		[Token(Token = "0x4002591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private NeatAudioElement[] elementsNeedingSources;

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x1100CD4", Offset = "0x1100CD4", VA = "0x1100CD4")]
		public static NeatAudioPool GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x1100D24", Offset = "0x1100D24", VA = "0x1100D24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x1101014", Offset = "0x1101014", VA = "0x1101014")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x10FE908", Offset = "0x10FE908", VA = "0x10FE908")]
		public static void Register()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x110033C", Offset = "0x110033C", VA = "0x110033C")]
		public static void AssignPooledSources(NeatAudioPlayer aPlayer)
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x10F8E40", Offset = "0x10F8E40", VA = "0x10F8E40")]
		public static void ReturnToPool(NeatPooledAudioSource pooled)
		{
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x11010D0", Offset = "0x11010D0", VA = "0x11010D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x1101218", Offset = "0x1101218", VA = "0x1101218")]
		public NeatAudioPool()
		{
		}
	}
	[Token(Token = "0x2000627")]
	public class NeatPooledAudioSource : MonoBehaviour
	{
		[Token(Token = "0x4002592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NeatAudioElement neatAudioElement;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool markedForRelease;

		[Token(Token = "0x4002595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int poolIndex;

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x1101220", Offset = "0x1101220", VA = "0x1101220")]
		public NeatPooledAudioSource()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000628")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDBAC", Offset = "0x9FDBAC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002596")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600257B")]
			[Address(RVA = "0xC34268", Offset = "0xC34268", VA = "0xC34268")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600257C")]
			[Address(RVA = "0xC34540", Offset = "0xC34540", VA = "0xC34540")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDBBC", Offset = "0x9FDBBC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002597")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4002598")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xC34418", Offset = "0xC34418", VA = "0xC34418")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600257E")]
			[Address(RVA = "0xC34420", Offset = "0xC34420", VA = "0xC34420")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600257F")]
			[Address(RVA = "0xC3443C", Offset = "0xC3443C", VA = "0xC3443C")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xC340E0", Offset = "0xC340E0", VA = "0xC340E0")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xC34270", Offset = "0xC34270", VA = "0xC34270")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x200062B")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDBDC", Offset = "0x9FDBDC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002599")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6002581")]
			[Address(RVA = "0xC346A8", Offset = "0xC346A8", VA = "0xC346A8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002582")]
			[Address(RVA = "0xC346B0", Offset = "0xC346B0", VA = "0xC346B0")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002583")]
			[Address(RVA = "0xC346CC", Offset = "0xC346CC", VA = "0xC346CC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xC3455C", Offset = "0xC3455C", VA = "0xC3455C")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x200062D")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDBFC", Offset = "0x9FDBFC")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400259A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002586")]
			[Address(RVA = "0xC34834", Offset = "0xC34834", VA = "0xC34834")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002587")]
			[Address(RVA = "0xC349B8", Offset = "0xC349B8", VA = "0xC349B8")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002588")]
			[Address(RVA = "0xC349DC", Offset = "0xC349DC", VA = "0xC349DC")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9FDC0C", Offset = "0x9FDC0C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400259B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002589")]
			[Address(RVA = "0xC349B0", Offset = "0xC349B0", VA = "0xC349B0")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600258A")]
			[Address(RVA = "0xC34A00", Offset = "0xC34A00", VA = "0xC34A00")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600258B")]
			[Address(RVA = "0xC34A24", Offset = "0xC34A24", VA = "0xC34A24")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xC346E8", Offset = "0xC346E8", VA = "0xC346E8")]
		public static TweenerCore<Color, Color, ColorOptions> DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xC3483C", Offset = "0xC3483C", VA = "0xC3483C")]
		public static TweenerCore<Color, Color, ColorOptions> DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000630")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000631")]
		public static class Physics
		{
			[Token(Token = "0x600258E")]
			[Address(RVA = "0xC34B8C", Offset = "0xC34B8C", VA = "0xC34B8C")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x600258F")]
			[Address(RVA = "0xC34C94", Offset = "0xC34C94", VA = "0xC34C94")]
			[Preserve]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002590")]
			[Address(RVA = "0xC34D24", Offset = "0xC34D24", VA = "0xC34D24")]
			[Preserve]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x600258C")]
		[Address(RVA = "0xC34A48", Offset = "0xC34A48", VA = "0xC34A48")]
		[Preserve]
		public static void Init()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xC34AEC", Offset = "0xC34AEC", VA = "0xC34AEC")]
		[Preserve]
		private static void Preserver()
		{
		}
	}
}
