using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using Cortopia.BE.Runtime;
using Cortopia.BE.Runtime.Actions;
using Cortopia.BE.Runtime.Instance;
using Cortopia.CortopiaAttributes;
using Cortopia.Scripts.AI;
using Cortopia.Scripts.AI.NPC.Workers;
using Cortopia.Scripts.Animation;
using Cortopia.Scripts.Animation.Constraints;
using Cortopia.Scripts.Audio;
using Cortopia.Scripts.Audio.VO;
using Cortopia.Scripts.Characters;
using Cortopia.Scripts.Characters.NPC;
using Cortopia.Scripts.Characters.Sockets;
using Cortopia.Scripts.Choices;
using Cortopia.Scripts.Core;
using Cortopia.Scripts.Core.Settings;
using Cortopia.Scripts.CortopiaEvents;
using Cortopia.Scripts.Cutscenes;
using Cortopia.Scripts.Grab;
using Cortopia.Scripts.Interactions;
using Cortopia.Scripts.Interactions.Grabbables;
using Cortopia.Scripts.Interactions.Listeners;
using Cortopia.Scripts.Interactions.PressurePlates;
using Cortopia.Scripts.Interactions.Transitions;
using Cortopia.Scripts.Inventories;
using Cortopia.Scripts.Inventories.Items;
using Cortopia.Scripts.Localization;
using Cortopia.Scripts.Platform;
using Cortopia.Scripts.Platform.Achievements;
using Cortopia.Scripts.Platform.Analytics;
using Cortopia.Scripts.Platform.Haptics;
using Cortopia.Scripts.Platform.Icons;
using Cortopia.Scripts.Platform.Input;
using Cortopia.Scripts.Platform.ResourceServices;
using Cortopia.Scripts.Platform.Rig;
using Cortopia.Scripts.Platform.SettingsStorage;
using Cortopia.Scripts.Platform.Storage;
using Cortopia.Scripts.Platform.User;
using Cortopia.Scripts.Player;
using Cortopia.Scripts.Puzzles;
using Cortopia.Scripts.Puzzles.Castles;
using Cortopia.Scripts.Puzzles.Clocktower;
using Cortopia.Scripts.Rooms;
using Cortopia.Scripts.SaveLoad;
using Cortopia.Scripts.ScriptableVariables;
using Cortopia.Scripts.Tutorial;
using Cortopia.Scripts.UI;
using Cortopia.Scripts.UI.Dialogues;
using Cortopia.Scripts.Utils;
using Cortopia.Scripts.Utils.Conditions;
using Cortopia.Scripts.Utils.CustomArrays;
using Cortopia.Scripts.Utils.Promises;
using Cortopia.Scripts.Utils.Transformables;
using CurvesAndSplines;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using I2.Loc;
using Il2CppDummyDll;
using LitJson;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.XR;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class Autoremove : MonoBehaviour
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x928890", Offset = "0x928890", VA = "0x928890")]
	public void Remove()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x928980", Offset = "0x928980", VA = "0x928980")]
	public Autoremove()
	{
	}
}
[Token(Token = "0x2000003")]
public class RevealCastles : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	private const float PullDistance = 1f;

	[Token(Token = "0x4000002")]
	private const float PullAnimationLength = 1.55f;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_curtain;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_tassleAnimator;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable m_tassle;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_revealAudioSource;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_tassleStartY;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int m_revealHash;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xD5B71C", Offset = "0xD5B71C", VA = "0xD5B71C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xD5B724", Offset = "0xD5B724", VA = "0xD5B724")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xD5B7AC", Offset = "0xD5B7AC", VA = "0xD5B7AC")]
	public void StartReveal()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xD5B958", Offset = "0xD5B958", VA = "0xD5B958")]
	public void OnTassleGrabBegin()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xD5B9B8", Offset = "0xD5B9B8", VA = "0xD5B9B8")]
	public void OnTassleGrab()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xD5BC34", Offset = "0xD5BC34", VA = "0xD5BC34")]
	public RevealCastles()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xD5BC94", Offset = "0xD5BC94", VA = "0xD5BC94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF4D4", Offset = "0x6EF4D4")]
	private void <StartReveal>b__10_0()
	{
	}
}
[Token(Token = "0x2000004")]
public class LocationIndicator : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider m_collider;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_effectTransform;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_effectPrefab;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_speed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Cortopia.Scripts.Interactions.EventTrigger m_eventTrigger;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject m_effectObject;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_hasEffect;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x984FF4", Offset = "0x984FF4", VA = "0x984FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x9851F0", Offset = "0x9851F0", VA = "0x9851F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x985270", Offset = "0x985270", VA = "0x985270")]
	public LocationIndicator()
	{
	}
}
[Token(Token = "0x2000005")]
public class PyramidCollisionHelper : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	private const float MinCollisionDistance = 0.05f;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider m_pyramidCollider;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider m_plintCollider;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xD5B09C", Offset = "0xD5B09C", VA = "0xD5B09C")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xD5B37C", Offset = "0xD5B37C", VA = "0xD5B37C")]
	public PyramidCollisionHelper()
	{
	}
}
[Token(Token = "0x2000006")]
public class HUDMessage : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	public const string Name = "HUD/HUDMessage";

	[Token(Token = "0x4000015")]
	private const float TargetFps = 90f;

	[Token(Token = "0x4000016")]
	private const float TeleportDistance = 15f;

	[Token(Token = "0x4000017")]
	private const float Sharpness = 0.01f;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_textCentreOffset;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_stoppedOffsetSqrDist;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_movingOffsetSqrDist;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_distance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text m_text;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Camera m_tempCamera;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Localize m_localize;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tweener m_fadeTween;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_previousPosition;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_cameraTransform;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_isMoving;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x9824F0", Offset = "0x9824F0", VA = "0x9824F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x982528", Offset = "0x982528", VA = "0x982528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x982AEC", Offset = "0x982AEC", VA = "0x982AEC")]
	public void ShowLocalizedTerm(string localizeTerm, float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x982E0C", Offset = "0x982E0C", VA = "0x982E0C")]
	public void ShowMessage(string message, float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x982E68", Offset = "0x982E68", VA = "0x982E68")]
	public void Hide(float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x982A38", Offset = "0x982A38", VA = "0x982A38")]
	private void TeleportToTarget()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x982B48", Offset = "0x982B48", VA = "0x982B48")]
	private void StartShowing(float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x982884", Offset = "0x982884", VA = "0x982884")]
	private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x982F74", Offset = "0x982F74", VA = "0x982F74")]
	public HUDMessage()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x982FEC", Offset = "0x982FEC", VA = "0x982FEC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF4E4", Offset = "0x6EF4E4")]
	private void <Hide>b__19_0()
	{
	}
}
[Token(Token = "0x2000007")]
public class Logger
{
	[Token(Token = "0x6000019")]
	[Address(RVA = "0x985280", Offset = "0x985280", VA = "0x985280")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EF4F4", Offset = "0x6EF4F4")]
	public static void Log(object message)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x985284", Offset = "0x985284", VA = "0x985284")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EF52C", Offset = "0x6EF52C")]
	public static void Log(object message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x985288", Offset = "0x985288", VA = "0x985288")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EF564", Offset = "0x6EF564")]
	public static void LogWarning(object msg)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x98528C", Offset = "0x98528C", VA = "0x98528C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EF59C", Offset = "0x6EF59C")]
	public static void LogWarning(object message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x985290", Offset = "0x985290", VA = "0x985290")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EF5D4", Offset = "0x6EF5D4")]
	public static void LogError(object message)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x985294", Offset = "0x985294", VA = "0x985294")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6EF60C", Offset = "0x6EF60C")]
	public static void LogError(object message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x985298", Offset = "0x985298", VA = "0x985298")]
	public Logger()
	{
	}
}
[Token(Token = "0x2000008")]
public class DestroyGuaranteed : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> kids;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x981900", Offset = "0x981900", VA = "0x981900")]
	private void AddDescendants(Transform parent, List<GameObject> list)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x981C98", Offset = "0x981C98", VA = "0x981C98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x981CC8", Offset = "0x981CC8", VA = "0x981CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x981EA4", Offset = "0x981EA4", VA = "0x981EA4")]
	public DestroyGuaranteed()
	{
	}
}
[Token(Token = "0x2000009")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x9247C4", Offset = "0x9247C4", VA = "0x9247C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x924824", Offset = "0x924824", VA = "0x924824")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x924884", Offset = "0x924884", VA = "0x924884")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x924A70", Offset = "0x924A70", VA = "0x924A70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x924A7C", Offset = "0x924A7C", VA = "0x924A7C")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x924B04", Offset = "0x924B04", VA = "0x924B04")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x924D20", Offset = "0x924D20", VA = "0x924D20")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x924F3C", Offset = "0x924F3C", VA = "0x924F3C")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x925070", Offset = "0x925070", VA = "0x925070")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x9251A4", Offset = "0x9251A4", VA = "0x9251A4")]
	public void UnLock()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x925364", Offset = "0x925364", VA = "0x925364")]
	public void AddCount()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x9256D4", Offset = "0x9256D4", VA = "0x9256D4")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x9249C4", Offset = "0x9249C4", VA = "0x9249C4")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x924FC4", Offset = "0x924FC4", VA = "0x924FC4")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x9250F8", Offset = "0x9250F8", VA = "0x9250F8")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x925874", Offset = "0x925874", VA = "0x925874")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x9255EC", Offset = "0x9255EC", VA = "0x9255EC")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x9252B0", Offset = "0x9252B0", VA = "0x9252B0")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x924E88", Offset = "0x924E88", VA = "0x924E88")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x924C6C", Offset = "0x924C6C", VA = "0x924C6C")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x9248FC", Offset = "0x9248FC", VA = "0x9248FC")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x925930", Offset = "0x925930", VA = "0x925930")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x926258", Offset = "0x926258", VA = "0x926258")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x92696C", Offset = "0x92696C", VA = "0x92696C")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x926C88", Offset = "0x926C88", VA = "0x926C88")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x926FA4", Offset = "0x926FA4", VA = "0x926FA4")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x9272C0", Offset = "0x9272C0", VA = "0x9272C0")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x9278B0", Offset = "0x9278B0", VA = "0x9278B0")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x927F18", Offset = "0x927F18", VA = "0x927F18")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x928234", Offset = "0x928234", VA = "0x928234")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x9282EC", Offset = "0x9282EC", VA = "0x9282EC")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x200000A")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000306")]
	public enum UserHandNess
	{
		[Token(Token = "0x400109F")]
		Right,
		[Token(Token = "0x40010A0")]
		Left
	}

	[Token(Token = "0x2000307")]
	public enum GazeType
	{
		[Token(Token = "0x40010A2")]
		Never,
		[Token(Token = "0x40010A3")]
		DuringMotion,
		[Token(Token = "0x40010A4")]
		Always
	}

	[Token(Token = "0x2000308")]
	public enum ControllerAxis
	{
		[Token(Token = "0x40010A6")]
		Controller,
		[Token(Token = "0x40010A7")]
		Wrist,
		[Token(Token = "0x40010A8")]
		Elbow,
		[Token(Token = "0x40010A9")]
		Shoulder
	}

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E334C", Offset = "0x6E334C")]
	public float ElbowHeight;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E3368", Offset = "0x6E3368")]
	public float ElbowDepth;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E3384", Offset = "0x6E3384")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E339C", Offset = "0x6E339C")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E33AC", Offset = "0x6E33AC")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E33BC", Offset = "0x6E33BC")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E33CC", Offset = "0x6E33CC")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E33DC", Offset = "0x6E33DC")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E33EC", Offset = "0x6E33EC")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E33FC", Offset = "0x6E33FC")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E340C", Offset = "0x6E340C")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000001")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x9889EC", Offset = "0x9889EC", VA = "0x9889EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF644", Offset = "0x6EF644")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x988908", Offset = "0x988908", VA = "0x988908")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF654", Offset = "0x6EF654")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x988A40", Offset = "0x988A40", VA = "0x988A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF664", Offset = "0x6EF664")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x988978", Offset = "0x988978", VA = "0x988978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF674", Offset = "0x6EF674")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x988D04", Offset = "0x988D04", VA = "0x988D04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF684", Offset = "0x6EF684")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x988C20", Offset = "0x988C20", VA = "0x988C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF694", Offset = "0x6EF694")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x988D58", Offset = "0x988D58", VA = "0x988D58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6A4", Offset = "0x6EF6A4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x988C90", Offset = "0x988C90", VA = "0x988C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6B4", Offset = "0x6EF6B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x988B78", Offset = "0x988B78", VA = "0x988B78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6C4", Offset = "0x6EF6C4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x988A94", Offset = "0x988A94", VA = "0x988A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6D4", Offset = "0x6EF6D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x988BCC", Offset = "0x988BCC", VA = "0x988BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6E4", Offset = "0x6EF6E4")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x988B04", Offset = "0x988B04", VA = "0x988B04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF6F4", Offset = "0x6EF6F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x988E90", Offset = "0x988E90", VA = "0x988E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF704", Offset = "0x6EF704")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x988DAC", Offset = "0x988DAC", VA = "0x988DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF714", Offset = "0x6EF714")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x988EE4", Offset = "0x988EE4", VA = "0x988EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF724", Offset = "0x6EF724")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x988E1C", Offset = "0x988E1C", VA = "0x988E1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF734", Offset = "0x6EF734")]
		set
		{
		}
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x986514", Offset = "0x986514", VA = "0x986514")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x986650", Offset = "0x986650", VA = "0x986650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x9866C0", Offset = "0x9866C0", VA = "0x9866C0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x9867FC", Offset = "0x9867FC", VA = "0x9867FC")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x9868A4", Offset = "0x9868A4", VA = "0x9868A4")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x9868A8", Offset = "0x9868A8", VA = "0x9868A8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x986800", Offset = "0x986800", VA = "0x986800")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x986908", Offset = "0x986908", VA = "0x986908")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x986AF0", Offset = "0x986AF0", VA = "0x986AF0")]
	private void ShowController()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x986CBC", Offset = "0x986CBC", VA = "0x986CBC")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x986DA8", Offset = "0x986DA8", VA = "0x986DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x9868AC", Offset = "0x9868AC", VA = "0x9868AC")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x987090", Offset = "0x987090", VA = "0x987090")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x98710C", Offset = "0x98710C", VA = "0x98710C")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x987190", Offset = "0x987190", VA = "0x987190")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x988724", Offset = "0x988724", VA = "0x988724")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x987318", Offset = "0x987318", VA = "0x987318")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x987328", Offset = "0x987328", VA = "0x987328")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x987A1C", Offset = "0x987A1C", VA = "0x987A1C")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x988F38", Offset = "0x988F38", VA = "0x988F38")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x200000B")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x988FA0", Offset = "0x988FA0", VA = "0x988FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x989134", Offset = "0x989134", VA = "0x989134")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x98924C", Offset = "0x98924C", VA = "0x98924C")]
	private void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x98B2D8", Offset = "0x98B2D8", VA = "0x98B2D8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x98B384", Offset = "0x98B384", VA = "0x98B384")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x98B430", Offset = "0x98B430", VA = "0x98B430")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x98B4D0", Offset = "0x98B4D0", VA = "0x98B4D0")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x98B4D4", Offset = "0x98B4D4", VA = "0x98B4D4")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x200000C")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1013458", Offset = "0x1013458", VA = "0x1013458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x10136B4", Offset = "0x10136B4", VA = "0x10136B4")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x101375C", Offset = "0x101375C", VA = "0x101375C")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1013804", Offset = "0x1013804", VA = "0x1013804")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x10138AC", Offset = "0x10138AC", VA = "0x10138AC")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1013954", Offset = "0x1013954", VA = "0x1013954")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x10139FC", Offset = "0x10139FC", VA = "0x10139FC")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x200000D")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000309")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E25FC", Offset = "0x6E25FC")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001602")]
			[Address(RVA = "0x1016618", Offset = "0x1016618", VA = "0x1016618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0x1016688", Offset = "0x1016688", VA = "0x1016688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x1015154", Offset = "0x1015154", VA = "0x1015154")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x10160D0", Offset = "0x10160D0", VA = "0x10160D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x10160D4", Offset = "0x10160D4", VA = "0x10160D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x1016620", Offset = "0x1016620", VA = "0x1016620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x4000067")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4000068")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4000069")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x400006A")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1013A04", Offset = "0x1013A04", VA = "0x1013A04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x1013F50", Offset = "0x1013F50", VA = "0x1013F50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x10143C8", Offset = "0x10143C8", VA = "0x10143C8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x1014748", Offset = "0x1014748", VA = "0x1014748")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x101497C", Offset = "0x101497C", VA = "0x101497C")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x1014BB0", Offset = "0x1014BB0", VA = "0x1014BB0")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1014FE0", Offset = "0x1014FE0", VA = "0x1014FE0")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x10143D4", Offset = "0x10143D4", VA = "0x10143D4")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x1014C9C", Offset = "0x1014C9C", VA = "0x1014C9C")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1014B18", Offset = "0x1014B18", VA = "0x1014B18")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EF744", Offset = "0x6EF744")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1015180", Offset = "0x1015180", VA = "0x1015180")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x101584C", Offset = "0x101584C", VA = "0x101584C")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x101547C", Offset = "0x101547C", VA = "0x101547C")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1015DC4", Offset = "0x1015DC4", VA = "0x1015DC4")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1015EE4", Offset = "0x1015EE4", VA = "0x1015EE4")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x101605C", Offset = "0x101605C", VA = "0x101605C")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x200000E")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1016690", Offset = "0x1016690", VA = "0x1016690")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1016A9C", Offset = "0x1016A9C", VA = "0x1016A9C")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x10174C0", Offset = "0x10174C0", VA = "0x10174C0")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1017224", Offset = "0x1017224", VA = "0x1017224")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1017344", Offset = "0x1017344", VA = "0x1017344")]
	public void BindService()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1017678", Offset = "0x1017678", VA = "0x1017678")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x10177F4", Offset = "0x10177F4", VA = "0x10177F4")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x101798C", Offset = "0x101798C", VA = "0x101798C")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x1017AE0", Offset = "0x1017AE0", VA = "0x1017AE0")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x1017C78", Offset = "0x1017C78", VA = "0x1017C78")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1017E5C", Offset = "0x1017E5C", VA = "0x1017E5C")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1017FF4", Offset = "0x1017FF4", VA = "0x1017FF4")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1018158", Offset = "0x1018158", VA = "0x1018158")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1018284", Offset = "0x1018284", VA = "0x1018284")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1017128", Offset = "0x1017128", VA = "0x1017128")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x10183AC", Offset = "0x10183AC", VA = "0x10183AC")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1018544", Offset = "0x1018544", VA = "0x1018544")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x1018688", Offset = "0x1018688", VA = "0x1018688")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x1018728", Offset = "0x1018728", VA = "0x1018728")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x10187EC", Offset = "0x10187EC", VA = "0x10187EC")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1018994", Offset = "0x1018994", VA = "0x1018994")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x1018A80", Offset = "0x1018A80", VA = "0x1018A80")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1018B70", Offset = "0x1018B70", VA = "0x1018B70")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1018C5C", Offset = "0x1018C5C", VA = "0x1018C5C")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1018D4C", Offset = "0x1018D4C", VA = "0x1018D4C")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x10190A4", Offset = "0x10190A4", VA = "0x10190A4")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1019190", Offset = "0x1019190", VA = "0x1019190")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1019338", Offset = "0x1019338", VA = "0x1019338")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x10194E0", Offset = "0x10194E0", VA = "0x10194E0")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1019978", Offset = "0x1019978", VA = "0x1019978")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1019ADC", Offset = "0x1019ADC", VA = "0x1019ADC")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1019B68", Offset = "0x1019B68", VA = "0x1019B68")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x101A6E0", Offset = "0x101A6E0", VA = "0x101A6E0")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x101A884", Offset = "0x101A884", VA = "0x101A884")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x101B0E4", Offset = "0x101B0E4", VA = "0x101B0E4")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x101B97C", Offset = "0x101B97C", VA = "0x101B97C")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x101D768", Offset = "0x101D768", VA = "0x101D768")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x101D890", Offset = "0x101D890", VA = "0x101D890")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x10203BC", Offset = "0x10203BC", VA = "0x10203BC")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x10205B8", Offset = "0x10205B8", VA = "0x10205B8")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1020764", Offset = "0x1020764", VA = "0x1020764")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x102095C", Offset = "0x102095C", VA = "0x102095C")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1020B54", Offset = "0x1020B54", VA = "0x1020B54")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1020C7C", Offset = "0x1020C7C", VA = "0x1020C7C")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x102117C", Offset = "0x102117C", VA = "0x102117C")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1021628", Offset = "0x1021628", VA = "0x1021628")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1021A34", Offset = "0x1021A34", VA = "0x1021A34")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1021B20", Offset = "0x1021B20", VA = "0x1021B20")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1021ECC", Offset = "0x1021ECC", VA = "0x1021ECC")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1021FCC", Offset = "0x1021FCC", VA = "0x1021FCC")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x102212C", Offset = "0x102212C", VA = "0x102212C")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x10221D4", Offset = "0x10221D4", VA = "0x10221D4")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x102233C", Offset = "0x102233C", VA = "0x102233C")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x10224A4", Offset = "0x10224A4", VA = "0x10224A4")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x102260C", Offset = "0x102260C", VA = "0x102260C")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x10226B4", Offset = "0x10226B4", VA = "0x10226B4")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x102275C", Offset = "0x102275C", VA = "0x102275C")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1022944", Offset = "0x1022944", VA = "0x1022944")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1022AAC", Offset = "0x1022AAC", VA = "0x1022AAC")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1022C14", Offset = "0x1022C14", VA = "0x1022C14")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1022D18", Offset = "0x1022D18", VA = "0x1022D18")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1022E1C", Offset = "0x1022E1C", VA = "0x1022E1C")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1022F20", Offset = "0x1022F20", VA = "0x1022F20")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1023088", Offset = "0x1023088", VA = "0x1023088")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1023130", Offset = "0x1023130", VA = "0x1023130")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x10231D8", Offset = "0x10231D8", VA = "0x10231D8")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x102335C", Offset = "0x102335C", VA = "0x102335C")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1023410", Offset = "0x1023410", VA = "0x1023410")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x10234B0", Offset = "0x10234B0", VA = "0x10234B0")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x10235AC", Offset = "0x10235AC", VA = "0x10235AC")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x10236A8", Offset = "0x10236A8", VA = "0x10236A8")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1023738", Offset = "0x1023738", VA = "0x1023738")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x102381C", Offset = "0x102381C", VA = "0x102381C")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1023900", Offset = "0x1023900", VA = "0x1023900")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x10239E8", Offset = "0x10239E8", VA = "0x10239E8")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1023B50", Offset = "0x1023B50", VA = "0x1023B50")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1023CB8", Offset = "0x1023CB8", VA = "0x1023CB8")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1023E34", Offset = "0x1023E34", VA = "0x1023E34")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1023F8C", Offset = "0x1023F8C", VA = "0x1023F8C")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x200000F")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x200030B")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x200030C")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x200030D")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x200030E")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200030F")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x2000310")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x2000311")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000312")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000313")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000314")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000315")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000316")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000317")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000318")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000319")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x200031A")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x200031B")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x200031C")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x200031D")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000009")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1024108", Offset = "0x1024108", VA = "0x1024108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1013BA0", Offset = "0x1013BA0", VA = "0x1013BA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7A8", Offset = "0x6EF7A8")]
		add
		{
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1014038", Offset = "0x1014038", VA = "0x1014038")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7B8", Offset = "0x6EF7B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1024378", Offset = "0x1024378", VA = "0x1024378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7C8", Offset = "0x6EF7C8")]
		add
		{
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x10244A8", Offset = "0x10244A8", VA = "0x10244A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7D8", Offset = "0x6EF7D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x10245D8", Offset = "0x10245D8", VA = "0x10245D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7E8", Offset = "0x6EF7E8")]
		add
		{
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1024708", Offset = "0x1024708", VA = "0x1024708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF7F8", Offset = "0x6EF7F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1024838", Offset = "0x1024838", VA = "0x1024838")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF808", Offset = "0x6EF808")]
		add
		{
		}
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1024968", Offset = "0x1024968", VA = "0x1024968")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF818", Offset = "0x6EF818")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x1024A98", Offset = "0x1024A98", VA = "0x1024A98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF828", Offset = "0x6EF828")]
		add
		{
		}
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1024BC8", Offset = "0x1024BC8", VA = "0x1024BC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF838", Offset = "0x6EF838")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1024CF8", Offset = "0x1024CF8", VA = "0x1024CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF848", Offset = "0x6EF848")]
		add
		{
		}
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x1024E28", Offset = "0x1024E28", VA = "0x1024E28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF858", Offset = "0x6EF858")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1024F58", Offset = "0x1024F58", VA = "0x1024F58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF868", Offset = "0x6EF868")]
		add
		{
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1025088", Offset = "0x1025088", VA = "0x1025088")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF878", Offset = "0x6EF878")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1013E20", Offset = "0x1013E20", VA = "0x1013E20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF888", Offset = "0x6EF888")]
		add
		{
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1014298", Offset = "0x1014298", VA = "0x1014298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF898", Offset = "0x6EF898")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1013CE0", Offset = "0x1013CE0", VA = "0x1013CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF8A8", Offset = "0x6EF8A8")]
		add
		{
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x1014168", Offset = "0x1014168", VA = "0x1014168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF8B8", Offset = "0x6EF8B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x10251B8", Offset = "0x10251B8", VA = "0x10251B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF8C8", Offset = "0x6EF8C8")]
		add
		{
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x10252E8", Offset = "0x10252E8", VA = "0x10252E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF8D8", Offset = "0x6EF8D8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1025418", Offset = "0x1025418", VA = "0x1025418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF8E8", Offset = "0x6EF8E8")]
		add
		{
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1025548", Offset = "0x1025548", VA = "0x1025548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF8F8", Offset = "0x6EF8F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x1025678", Offset = "0x1025678", VA = "0x1025678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF908", Offset = "0x6EF908")]
		add
		{
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x10257A8", Offset = "0x10257A8", VA = "0x10257A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF918", Offset = "0x6EF918")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x10258D8", Offset = "0x10258D8", VA = "0x10258D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF928", Offset = "0x6EF928")]
		add
		{
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x1025A08", Offset = "0x1025A08", VA = "0x1025A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF938", Offset = "0x6EF938")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1025B38", Offset = "0x1025B38", VA = "0x1025B38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF948", Offset = "0x6EF948")]
		add
		{
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1025C68", Offset = "0x1025C68", VA = "0x1025C68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF958", Offset = "0x6EF958")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1025D98", Offset = "0x1025D98", VA = "0x1025D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF968", Offset = "0x6EF968")]
		add
		{
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1025EC8", Offset = "0x1025EC8", VA = "0x1025EC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF978", Offset = "0x6EF978")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1025FF8", Offset = "0x1025FF8", VA = "0x1025FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF988", Offset = "0x6EF988")]
		add
		{
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1026128", Offset = "0x1026128", VA = "0x1026128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF998", Offset = "0x6EF998")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x1026258", Offset = "0x1026258", VA = "0x1026258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF9A8", Offset = "0x6EF9A8")]
		add
		{
		}
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1026388", Offset = "0x1026388", VA = "0x1026388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF9B8", Offset = "0x6EF9B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x10264B8", Offset = "0x10264B8", VA = "0x10264B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF9C8", Offset = "0x6EF9C8")]
		add
		{
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x10265E8", Offset = "0x10265E8", VA = "0x10265E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF9D8", Offset = "0x6EF9D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x1026718", Offset = "0x1026718", VA = "0x1026718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF9E8", Offset = "0x6EF9E8")]
		add
		{
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x1026848", Offset = "0x1026848", VA = "0x1026848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF9F8", Offset = "0x6EF9F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x1026978", Offset = "0x1026978", VA = "0x1026978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFA08", Offset = "0x6EFA08")]
		add
		{
		}
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x1026AA8", Offset = "0x1026AA8", VA = "0x1026AA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFA18", Offset = "0x6EFA18")]
		remove
		{
		}
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1026BD8", Offset = "0x1026BD8", VA = "0x1026BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1026EEC", Offset = "0x1026EEC", VA = "0x1026EEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1026F98", Offset = "0x1026F98", VA = "0x1026F98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x102995C", Offset = "0x102995C", VA = "0x102995C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x102A2C8", Offset = "0x102A2C8", VA = "0x102A2C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x102A3AC", Offset = "0x102A3AC", VA = "0x102A3AC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x102A54C", Offset = "0x102A54C", VA = "0x102A54C")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x102A5F8", Offset = "0x102A5F8", VA = "0x102A5F8")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x102A6E0", Offset = "0x102A6E0", VA = "0x102A6E0")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1026E40", Offset = "0x1026E40", VA = "0x1026E40")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x102A7C8", Offset = "0x102A7C8", VA = "0x102A7C8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x102A874", Offset = "0x102A874", VA = "0x102A874")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x102A920", Offset = "0x102A920", VA = "0x102A920")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1029E48", Offset = "0x1029E48", VA = "0x1029E48")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x102A9D4", Offset = "0x102A9D4", VA = "0x102A9D4")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x102AA80", Offset = "0x102AA80", VA = "0x102AA80")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x102AB2C", Offset = "0x102AB2C", VA = "0x102AB2C")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x102ABF4", Offset = "0x102ABF4", VA = "0x102ABF4")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x102ACA0", Offset = "0x102ACA0", VA = "0x102ACA0")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x102AD18", Offset = "0x102AD18", VA = "0x102AD18")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x102AD90", Offset = "0x102AD90", VA = "0x102AD90")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x102AE08", Offset = "0x102AE08", VA = "0x102AE08")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x102AE80", Offset = "0x102AE80", VA = "0x102AE80")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x102AF34", Offset = "0x102AF34", VA = "0x102AF34")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x102AFF0", Offset = "0x102AFF0", VA = "0x102AFF0")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x102B910", Offset = "0x102B910", VA = "0x102B910")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x102B988", Offset = "0x102B988", VA = "0x102B988")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x102C08C", Offset = "0x102C08C", VA = "0x102C08C")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x102C770", Offset = "0x102C770", VA = "0x102C770")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x102D8E4", Offset = "0x102D8E4", VA = "0x102D8E4")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x102E704", Offset = "0x102E704", VA = "0x102E704")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x102EF38", Offset = "0x102EF38", VA = "0x102EF38")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x102F834", Offset = "0x102F834", VA = "0x102F834")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1030068", Offset = "0x1030068", VA = "0x1030068")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x103089C", Offset = "0x103089C", VA = "0x103089C")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x10310D0", Offset = "0x10310D0", VA = "0x10310D0")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1031904", Offset = "0x1031904", VA = "0x1031904")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1032138", Offset = "0x1032138", VA = "0x1032138")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x103296C", Offset = "0x103296C", VA = "0x103296C")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x10331A0", Offset = "0x10331A0", VA = "0x10331A0")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x10339D4", Offset = "0x10339D4", VA = "0x10339D4")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x10341BC", Offset = "0x10341BC", VA = "0x10341BC")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x10341C0", Offset = "0x10341C0", VA = "0x10341C0")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x10341C4", Offset = "0x10341C4", VA = "0x10341C4")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x10341C8", Offset = "0x10341C8", VA = "0x10341C8")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1034504", Offset = "0x1034504", VA = "0x1034504")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1034660", Offset = "0x1034660", VA = "0x1034660")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1034EF0", Offset = "0x1034EF0", VA = "0x1034EF0")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x103431C", Offset = "0x103431C", VA = "0x103431C")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1035780", Offset = "0x1035780", VA = "0x1035780")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1035830", Offset = "0x1035830", VA = "0x1035830")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x102F084", Offset = "0x102F084", VA = "0x102F084")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x102918C", Offset = "0x102918C", VA = "0x102918C")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1028C48", Offset = "0x1028C48", VA = "0x1028C48")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1035844", Offset = "0x1035844", VA = "0x1035844")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x10359FC", Offset = "0x10359FC", VA = "0x10359FC")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1035B2C", Offset = "0x1035B2C", VA = "0x1035B2C")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1035C6C", Offset = "0x1035C6C", VA = "0x1035C6C")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000010")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x200031E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E260C", Offset = "0x6E260C")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x1036CAC", Offset = "0x1036CAC", VA = "0x1036CAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x1036D1C", Offset = "0x1036D1C", VA = "0x1036D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x1036760", Offset = "0x1036760", VA = "0x1036760")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x1036BB8", Offset = "0x1036BB8", VA = "0x1036BB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x1036BBC", Offset = "0x1036BBC", VA = "0x1036BBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x1036CB4", Offset = "0x1036CB4", VA = "0x1036CB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1036230", Offset = "0x1036230", VA = "0x1036230")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1036410", Offset = "0x1036410", VA = "0x1036410")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x10364F8", Offset = "0x10364F8", VA = "0x10364F8")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x103656C", Offset = "0x103656C", VA = "0x103656C")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x10366C4", Offset = "0x10366C4", VA = "0x10366C4")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x10364FC", Offset = "0x10364FC", VA = "0x10364FC")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x10366C8", Offset = "0x10366C8", VA = "0x10366C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFA28", Offset = "0x6EFA28")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x103678C", Offset = "0x103678C", VA = "0x103678C")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10368D4", Offset = "0x10368D4", VA = "0x10368D4")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1036BA8", Offset = "0x1036BA8", VA = "0x1036BA8")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000011")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1036D24", Offset = "0x1036D24", VA = "0x1036D24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1036E1C", Offset = "0x1036E1C", VA = "0x1036E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1036E54", Offset = "0x1036E54", VA = "0x1036E54")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1036FC4", Offset = "0x1036FC4", VA = "0x1036FC4")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000012")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1036FCC", Offset = "0x1036FCC", VA = "0x1036FCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1037024", Offset = "0x1037024", VA = "0x1037024")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x10370A4", Offset = "0x10370A4", VA = "0x10370A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x10370DC", Offset = "0x10370DC", VA = "0x10370DC")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x103749C", Offset = "0x103749C", VA = "0x103749C")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000013")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200031F")]
	public enum TipBtn
	{
		[Token(Token = "0x40010B3")]
		app,
		[Token(Token = "0x40010B4")]
		touchpad,
		[Token(Token = "0x40010B5")]
		home,
		[Token(Token = "0x40010B6")]
		volup,
		[Token(Token = "0x40010B7")]
		voldown,
		[Token(Token = "0x40010B8")]
		trigger,
		[Token(Token = "0x40010B9")]
		grip
	}

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xA5CA24", Offset = "0xA5CA24", VA = "0xA5CA24")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xA5CBEC", Offset = "0xA5CBEC", VA = "0xA5CBEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xA5CC6C", Offset = "0xA5CC6C", VA = "0xA5CC6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xA5CF0C", Offset = "0xA5CF0C", VA = "0xA5CF0C")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xA5D640", Offset = "0xA5D640", VA = "0xA5D640")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xA5D6EC", Offset = "0xA5D6EC", VA = "0xA5D6EC")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000014")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xA5D6F4", Offset = "0xA5D6F4", VA = "0xA5D6F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xA5D798", Offset = "0xA5D798", VA = "0xA5D798")]
	private void Update()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xA5DCE4", Offset = "0xA5DCE4", VA = "0xA5DCE4")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xA5D928", Offset = "0xA5D928", VA = "0xA5D928")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xA5EBD4", Offset = "0xA5EBD4", VA = "0xA5EBD4")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xA5EF7C", Offset = "0xA5EF7C", VA = "0xA5EF7C")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xA5F468", Offset = "0xA5F468", VA = "0xA5F468")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xA5DA7C", Offset = "0xA5DA7C", VA = "0xA5DA7C")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xA5EAC4", Offset = "0xA5EAC4", VA = "0xA5EAC4")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xA5D7C4", Offset = "0xA5D7C4", VA = "0xA5D7C4")]
	private void Process()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xA5F4A4", Offset = "0xA5F4A4", VA = "0xA5F4A4")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA5F6CC", Offset = "0xA5F6CC", VA = "0xA5F6CC")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xA5F7C0", Offset = "0xA5F7C0", VA = "0xA5F7C0")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x2000015")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xA5F87C", Offset = "0xA5F87C", VA = "0xA5F87C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xA5F93C", Offset = "0xA5F93C", VA = "0xA5F93C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xA5F974", Offset = "0xA5F974", VA = "0xA5F974")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xA5FCA0", Offset = "0xA5FCA0", VA = "0xA5FCA0")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x2000016")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x2000320")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000321")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E261C", Offset = "0x6E261C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x9805AC", Offset = "0x9805AC", VA = "0x9805AC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x981490", Offset = "0x981490", VA = "0x981490")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x97FC2C", Offset = "0x97FC2C", VA = "0x97FC2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x97FE8C", Offset = "0x97FE8C", VA = "0x97FE8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x980428", Offset = "0x980428", VA = "0x980428")]
	private void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x97FF60", Offset = "0x97FF60", VA = "0x97FF60")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x9805B4", Offset = "0x9805B4", VA = "0x9805B4")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x980A0C", Offset = "0x980A0C", VA = "0x980A0C")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x980958", Offset = "0x980958", VA = "0x980958")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x980EAC", Offset = "0x980EAC", VA = "0x980EAC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x980FD0", Offset = "0x980FD0", VA = "0x980FD0")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x98137C", Offset = "0x98137C", VA = "0x98137C")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x981488", Offset = "0x981488", VA = "0x981488")]
	public DemoController()
	{
	}
}
[Token(Token = "0x2000017")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x600016E")]
	[Address(RVA = "0x984F64", Offset = "0x984F64", VA = "0x984F64")]
	private void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x984F68", Offset = "0x984F68", VA = "0x984F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x984FEC", Offset = "0x984FEC", VA = "0x984FEC")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x2000018")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x2000322")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x2000323")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E262C", Offset = "0x6E262C")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x983EB0", Offset = "0x983EB0", VA = "0x983EB0")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x984EF4", Offset = "0x984EF4", VA = "0x984EF4")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x983364", Offset = "0x983364", VA = "0x983364")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x983EA8", Offset = "0x983EA8", VA = "0x983EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x983EAC", Offset = "0x983EAC", VA = "0x983EAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x983368", Offset = "0x983368", VA = "0x983368")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x983EB8", Offset = "0x983EB8", VA = "0x983EB8")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x984D40", Offset = "0x984D40", VA = "0x984D40")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x9841BC", Offset = "0x9841BC", VA = "0x9841BC")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x98488C", Offset = "0x98488C", VA = "0x98488C")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x984E6C", Offset = "0x984E6C", VA = "0x984E6C")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000019")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x92C7BC", Offset = "0x92C7BC", VA = "0x92C7BC")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x92CC04", Offset = "0x92CC04", VA = "0x92CC04")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x92CEB8", Offset = "0x92CEB8", VA = "0x92CEB8")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x92CA48", Offset = "0x92CA48", VA = "0x92CA48")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x92CFA0", Offset = "0x92CFA0", VA = "0x92CFA0")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x92CFEC", Offset = "0x92CFEC", VA = "0x92CFEC")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x92D0F4", Offset = "0x92D0F4", VA = "0x92D0F4")]
	public Callback()
	{
	}
}
[Token(Token = "0x200001A")]
public class CommonDic
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700000A")]
	public string subject
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x92E2F8", Offset = "0x92E2F8", VA = "0x92E2F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x92E248", Offset = "0x92E248", VA = "0x92E248")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public string body
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x92E300", Offset = "0x92E300", VA = "0x92E300")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x92E250", Offset = "0x92E250", VA = "0x92E250")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public string order_id
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x92E308", Offset = "0x92E308", VA = "0x92E308")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x92E258", Offset = "0x92E258", VA = "0x92E258")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public string total
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x92E310", Offset = "0x92E310", VA = "0x92E310")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x92E260", Offset = "0x92E260", VA = "0x92E260")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public string goods_tag
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x92E318", Offset = "0x92E318", VA = "0x92E318")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x92E268", Offset = "0x92E268", VA = "0x92E268")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public string notify_url
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x92E320", Offset = "0x92E320", VA = "0x92E320")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x92E270", Offset = "0x92E270", VA = "0x92E270")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public string pay_code
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x92E328", Offset = "0x92E328", VA = "0x92E328")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x92E280", Offset = "0x92E280", VA = "0x92E280")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public string trade_type
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x92E330", Offset = "0x92E330", VA = "0x92E330")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x92E278", Offset = "0x92E278", VA = "0x92E278")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public string user_token
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x92E338", Offset = "0x92E338", VA = "0x92E338")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x92E340", Offset = "0x92E340", VA = "0x92E340")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public string access_token
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x92E348", Offset = "0x92E348", VA = "0x92E348")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x92E350", Offset = "0x92E350", VA = "0x92E350")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public string open_id
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x92E358", Offset = "0x92E358", VA = "0x92E358")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x92E360", Offset = "0x92E360", VA = "0x92E360")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public string refresh_token
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x92E368", Offset = "0x92E368", VA = "0x92E368")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x92E370", Offset = "0x92E370", VA = "0x92E370")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public string expires_in
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x92E378", Offset = "0x92E378", VA = "0x92E378")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x92E380", Offset = "0x92E380", VA = "0x92E380")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public string isSuccess
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x92E388", Offset = "0x92E388", VA = "0x92E388")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x92CBF4", Offset = "0x92CBF4", VA = "0x92CBF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public string loginMsg
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x92E390", Offset = "0x92E390", VA = "0x92E390")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x92CBFC", Offset = "0x92CBFC", VA = "0x92CBFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public string user_info
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x92E398", Offset = "0x92E398", VA = "0x92E398")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x92CF98", Offset = "0x92CF98", VA = "0x92CF98")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public string order_info
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x92E3A0", Offset = "0x92E3A0", VA = "0x92E3A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x92CEB0", Offset = "0x92CEB0", VA = "0x92CEB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public string code
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x92E3A8", Offset = "0x92E3A8", VA = "0x92E3A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x92CEA0", Offset = "0x92CEA0", VA = "0x92CEA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public string msg
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x92E3B0", Offset = "0x92E3B0", VA = "0x92E3B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x92CEA8", Offset = "0x92CEA8", VA = "0x92CEA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public string app_ID
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x92E3B8", Offset = "0x92E3B8", VA = "0x92E3B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x92E3C0", Offset = "0x92E3C0", VA = "0x92E3C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public string app_Key
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x92E3C8", Offset = "0x92E3C8", VA = "0x92E3C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x92E3D0", Offset = "0x92E3D0", VA = "0x92E3D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public string merchant_ID
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x92E3D8", Offset = "0x92E3D8", VA = "0x92E3D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x92E3E0", Offset = "0x92E3E0", VA = "0x92E3E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public string paykey
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x92E3E8", Offset = "0x92E3E8", VA = "0x92E3E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x92E3F0", Offset = "0x92E3F0", VA = "0x92E3F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x92CB30", Offset = "0x92CB30", VA = "0x92CB30")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x92E048", Offset = "0x92E048", VA = "0x92E048")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x92E098", Offset = "0x92E098", VA = "0x92E098")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x92E288", Offset = "0x92E288", VA = "0x92E288")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x92D86C", Offset = "0x92D86C", VA = "0x92D86C")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x92D800", Offset = "0x92D800", VA = "0x92D800")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x200001B")]
public class LoginSDK
{
	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x9809B0", Offset = "0x9809B0", VA = "0x9809B0")]
	public static void Login()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x980E50", Offset = "0x980E50", VA = "0x980E50")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x9855E8", Offset = "0x9855E8", VA = "0x9855E8")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x200001C")]
public class PicoPaymentSDK
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000021")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x98632C", Offset = "0x98632C", VA = "0x98632C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x986394", Offset = "0x986394", VA = "0x986394")]
		set
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x9852A0", Offset = "0x9852A0", VA = "0x9852A0")]
	public static void Login()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x980A50", Offset = "0x980A50", VA = "0x980A50")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x980C50", Offset = "0x980C50", VA = "0x980C50")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x985444", Offset = "0x985444", VA = "0x985444")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x986400", Offset = "0x986400", VA = "0x986400")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x200001D")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xA5C4F8", Offset = "0xA5C4F8", VA = "0xA5C4F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA5C530", Offset = "0xA5C530", VA = "0xA5C530")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xA5C540", Offset = "0xA5C540", VA = "0xA5C540")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xA5C4FC", Offset = "0xA5C4FC", VA = "0xA5C4FC")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xA5C538", Offset = "0xA5C538", VA = "0xA5C538")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA5C548", Offset = "0xA5C548", VA = "0xA5C548")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA5C550", Offset = "0xA5C550", VA = "0xA5C550")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xA5C600", Offset = "0xA5C600", VA = "0xA5C600")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xA5C690", Offset = "0xA5C690", VA = "0xA5C690")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xA5C720", Offset = "0xA5C720", VA = "0xA5C720")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xA5C7B0", Offset = "0xA5C7B0", VA = "0xA5C7B0")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xA5C830", Offset = "0xA5C830", VA = "0xA5C830")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xA5C8E0", Offset = "0xA5C8E0", VA = "0xA5C8E0")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xA5C96C", Offset = "0xA5C96C", VA = "0xA5C96C")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xA5CA1C", Offset = "0xA5CA1C", VA = "0xA5CA1C")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x200001E")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x986054", Offset = "0x986054", VA = "0x986054")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x9860C0", Offset = "0x9860C0", VA = "0x9860C0")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x986168", Offset = "0x986168", VA = "0x986168")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x986210", Offset = "0x986210", VA = "0x986210")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x9862B8", Offset = "0x9862B8", VA = "0x9862B8")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x986320", Offset = "0x986320", VA = "0x986320")]
	public PLOG()
	{
	}
}
[Token(Token = "0x200001F")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x92C7B4", Offset = "0x92C7B4", VA = "0x92C7B4")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000020")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xDA7A04", Offset = "0xDA7A04", VA = "0xDA7A04")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xDB00A0", Offset = "0xDB00A0", VA = "0xDB00A0")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000021")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000324")]
	public enum simulationType
	{
		[Token(Token = "0x40010BF")]
		Null,
		[Token(Token = "0x40010C0")]
		Invalid,
		[Token(Token = "0x40010C1")]
		Valid
	}

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000022")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0xDAF1E0", Offset = "0xDAF1E0", VA = "0xDAF1E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0xDAF20C", Offset = "0xDAF20C", VA = "0xDAF20C")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xDAEE00", Offset = "0xDAEE00", VA = "0xDAEE00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xDAF264", Offset = "0xDAF264", VA = "0xDAF264")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xDAEE2C", Offset = "0xDAEE2C", VA = "0xDAEE2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xDAF2BC", Offset = "0xDAF2BC", VA = "0xDAF2BC")]
		set
		{
		}
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xDAF310", Offset = "0xDAF310", VA = "0xDAF310")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000022")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E263C", Offset = "0x6E263C")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xDAF0C0", Offset = "0xDAF0C0", VA = "0xDAF0C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xDAF130", Offset = "0xDAF130", VA = "0xDAF130", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xDA92B0", Offset = "0xDA92B0", VA = "0xDA92B0")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xDAEF5C", Offset = "0xDAEF5C", VA = "0xDAEF5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xDAEF60", Offset = "0xDAEF60", VA = "0xDAEF60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xDAF0C8", Offset = "0xDAF0C8", VA = "0xDAF0C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E264C", Offset = "0x6E264C")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xDAAB34", Offset = "0xDAAB34", VA = "0xDAAB34")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xDADE4C", Offset = "0xDADE4C", VA = "0xDADE4C")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000328")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E265C", Offset = "0x6E265C")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170001E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xDADF8C", Offset = "0xDADF8C", VA = "0xDADF8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001678")]
			[Address(RVA = "0xDADFFC", Offset = "0xDADFFC", VA = "0xDADFFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xDAAF40", Offset = "0xDAAF40", VA = "0xDAAF40")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xDADEC8", Offset = "0xDADEC8", VA = "0xDADEC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xDADECC", Offset = "0xDADECC", VA = "0xDADECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xDADF94", Offset = "0xDADF94", VA = "0xDADF94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000329")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E266C", Offset = "0x6E266C")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170001E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xDAEEE4", Offset = "0xDAEEE4", VA = "0xDAEEE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xDAEF54", Offset = "0xDAEF54", VA = "0xDAEF54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xDAD06C", Offset = "0xDAD06C", VA = "0xDAD06C")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xDAEB74", Offset = "0xDAEB74", VA = "0xDAEB74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xDAEB78", Offset = "0xDAEB78", VA = "0xDAEB78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xDAEEEC", Offset = "0xDAEEEC", VA = "0xDAEEEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E267C", Offset = "0x6E267C")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170001E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xDAE304", Offset = "0xDAE304", VA = "0xDAE304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xDAE374", Offset = "0xDAE374", VA = "0xDAE374", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xDAD0F8", Offset = "0xDAD0F8", VA = "0xDAD0F8")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xDAE004", Offset = "0xDAE004", VA = "0xDAE004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xDAE008", Offset = "0xDAE008", VA = "0xDAE008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xDAE30C", Offset = "0xDAE30C", VA = "0xDAE30C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E268C", Offset = "0x6E268C")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170001E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xDAEAFC", Offset = "0xDAEAFC", VA = "0xDAEAFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600168A")]
			[Address(RVA = "0xDAEB6C", Offset = "0xDAEB6C", VA = "0xDAEB6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xDADD40", Offset = "0xDADD40", VA = "0xDADD40")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xDAE37C", Offset = "0xDAE37C", VA = "0xDAE37C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xDAE380", Offset = "0xDAE380", VA = "0xDAE380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xDAEB04", Offset = "0xDAEB04", VA = "0xDAEB04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E387C", Offset = "0x6E387C")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000025")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xD9D4B8", Offset = "0xD9D4B8", VA = "0xD9D4B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public bool Rotfoldout
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xDA7908", Offset = "0xDA7908", VA = "0xDA7908")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xDA7910", Offset = "0xDA7910", VA = "0xDA7910")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xDA7930", Offset = "0xDA7930", VA = "0xDA7930")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xDA7938", Offset = "0xDA7938", VA = "0xDA7938")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xDA7958", Offset = "0xDA7958", VA = "0xDA7958")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xDA7960", Offset = "0xDA7960", VA = "0xDA7960")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xDA7980", Offset = "0xDA7980", VA = "0xDA7980")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xDA7988", Offset = "0xDA7988", VA = "0xDA7988")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0xDA0A50", Offset = "0xDA0A50", VA = "0xDA0A50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0xD9E804", Offset = "0xD9E804", VA = "0xD9E804")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0xDA7A94", Offset = "0xDA7A94", VA = "0xDA7A94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFA8C", Offset = "0x6EFA8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0xD9D5E0", Offset = "0xD9D5E0", VA = "0xD9D5E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFA9C", Offset = "0x6EFA9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool ShowFPS
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xDA7A9C", Offset = "0xDA7A9C", VA = "0xDA7A9C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xDA7AA4", Offset = "0xDA7AA4", VA = "0xDA7AA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public bool PVRNeck
	{
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xDA7AC4", Offset = "0xDA7AC4", VA = "0xDA7AC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xDA7ACC", Offset = "0xDA7ACC", VA = "0xDA7ACC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xD9FE74", Offset = "0xD9FE74", VA = "0xD9FE74")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xDA7AEC", Offset = "0xDA7AEC", VA = "0xDA7AEC")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xDA7B18", Offset = "0xDA7B18", VA = "0xDA7B18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFAAC", Offset = "0x6EFAAC")]
		add
		{
		}
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xDA7C48", Offset = "0xDA7C48", VA = "0xDA7C48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFABC", Offset = "0x6EFABC")]
		remove
		{
		}
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xDA79A8", Offset = "0xDA79A8", VA = "0xDA79A8")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD9FE34", Offset = "0xD9FE34", VA = "0xD9FE34")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xDA7A58", Offset = "0xDA7A58", VA = "0xDA7A58")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xDA7D78", Offset = "0xDA7D78", VA = "0xDA7D78")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xDA7ED0", Offset = "0xDA7ED0", VA = "0xDA7ED0")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xDA8010", Offset = "0xDA8010", VA = "0xDA8010")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xDA8A34", Offset = "0xDA8A34", VA = "0xDA8A34")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xDA8E90", Offset = "0xDA8E90", VA = "0xDA8E90")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xDA916C", Offset = "0xDA916C", VA = "0xDA916C")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xDA846C", Offset = "0xDA846C", VA = "0xDA846C")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xDA92AC", Offset = "0xDA92AC", VA = "0xDA92AC")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xDA8960", Offset = "0xDA8960", VA = "0xDA8960")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFACC", Offset = "0x6EFACC")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xDA92DC", Offset = "0xDA92DC", VA = "0xDA92DC")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xDA9494", Offset = "0xDA9494", VA = "0xDA9494")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xDAA858", Offset = "0xDAA858", VA = "0xDAA858")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xDAA984", Offset = "0xDAA984", VA = "0xDAA984")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xDA98EC", Offset = "0xDA98EC", VA = "0xDA98EC")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xDA9F34", Offset = "0xDA9F34", VA = "0xDA9F34")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xDAA464", Offset = "0xDAA464", VA = "0xDAA464")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xDAAB3C", Offset = "0xDAAB3C", VA = "0xDAAB3C")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xDAA7C0", Offset = "0xDAA7C0", VA = "0xDAA7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFB30", Offset = "0x6EFB30")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xDAAEC4", Offset = "0xDAAEC4", VA = "0xDAAEC4")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xDAAF6C", Offset = "0xDAAF6C", VA = "0xDAAF6C")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xDA7E5C", Offset = "0xDA7E5C", VA = "0xDA7E5C")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xDAB14C", Offset = "0xDAB14C", VA = "0xDAB14C")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xDAB1FC", Offset = "0xDAB1FC", VA = "0xDAB1FC")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xDAB204", Offset = "0xDAB204", VA = "0xDAB204")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xDAB314", Offset = "0xDAB314", VA = "0xDAB314")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xDAB734", Offset = "0xDAB734", VA = "0xDAB734")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xDABCC0", Offset = "0xDABCC0", VA = "0xDABCC0")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xDABE18", Offset = "0xDABE18", VA = "0xDABE18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xDACFF8", Offset = "0xDACFF8", VA = "0xDACFF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFB94", Offset = "0x6EFB94")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xDAD098", Offset = "0xDAD098", VA = "0xDAD098")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFBF8", Offset = "0x6EFBF8")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xDAD124", Offset = "0xDAD124", VA = "0xDAD124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xDAD47C", Offset = "0xDAD47C", VA = "0xDAD47C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xDAD5DC", Offset = "0xDAD5DC", VA = "0xDAD5DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xDAD714", Offset = "0xDAD714", VA = "0xDAD714")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xDAD71C", Offset = "0xDAD71C", VA = "0xDAD71C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xDAD98C", Offset = "0xDAD98C", VA = "0xDAD98C")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xDADC40", Offset = "0xDADC40", VA = "0xDADC40")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xDAD7CC", Offset = "0xDAD7CC", VA = "0xDAD7CC")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xDADD38", Offset = "0xDADD38", VA = "0xDADD38")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xDAC80C", Offset = "0xDAC80C", VA = "0xDAC80C")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xDACAA8", Offset = "0xDACAA8", VA = "0xDACAA8")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xDAC468", Offset = "0xDAC468", VA = "0xDAC468")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xDADBCC", Offset = "0xDADBCC", VA = "0xDADBCC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFC5C", Offset = "0x6EFC5C")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xDADD6C", Offset = "0xDADD6C", VA = "0xDADD6C")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000023")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000226")]
	[Address(RVA = "0xD5B384", Offset = "0xD5B384", VA = "0xD5B384")]
	private void Start()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xD5B388", Offset = "0xD5B388", VA = "0xD5B388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xD5B3B4", Offset = "0xD5B3B4", VA = "0xD5B3B4")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x2000024")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x200032C")]
	private class EyeMaskData
	{
		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xA65F0C", Offset = "0xA65F0C", VA = "0xA65F0C")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xA6424C", Offset = "0xA6424C", VA = "0xA6424C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xA64308", Offset = "0xA64308", VA = "0xA64308")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xA64FBC", Offset = "0xA64FBC", VA = "0xA64FBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xA64994", Offset = "0xA64994", VA = "0xA64994")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xA65CE8", Offset = "0xA65CE8", VA = "0xA65CE8")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xA65410", Offset = "0xA65410", VA = "0xA65410")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xA65874", Offset = "0xA65874", VA = "0xA65874")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xA652CC", Offset = "0xA652CC", VA = "0xA652CC")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xA645D0", Offset = "0xA645D0", VA = "0xA645D0")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xA65EA8", Offset = "0xA65EA8", VA = "0xA65EA8")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA651F8", Offset = "0xA651F8", VA = "0xA651F8")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA65258", Offset = "0xA65258", VA = "0xA65258")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA65F14", Offset = "0xA65F14", VA = "0xA65F14")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x2000025")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E128C", Offset = "0x6E128C")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E392C", Offset = "0x6E392C")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000169")]
	private const int bufferSize = 3;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x1700002F")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xD9E8C0", Offset = "0xD9E8C0", VA = "0xD9E8C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFCC0", Offset = "0x6EFCC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000237")]
		[Address(RVA = "0xD9E8C8", Offset = "0xD9E8C8", VA = "0xD9E8C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFCD0", Offset = "0x6EFCD0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD9E8D0", Offset = "0xD9E8D0", VA = "0xD9E8D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD9E978", Offset = "0xD9E978", VA = "0xD9E978")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD9EFF0", Offset = "0xD9EFF0", VA = "0xD9EFF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD9F2D0", Offset = "0xD9F2D0", VA = "0xD9F2D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD9F39C", Offset = "0xD9F39C", VA = "0xD9F39C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD9F468", Offset = "0xD9F468", VA = "0xD9F468")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xD9F4F4", Offset = "0xD9F4F4", VA = "0xD9F4F4")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD9F718", Offset = "0xD9F718", VA = "0xD9F718")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xD9F7DC", Offset = "0xD9F7DC", VA = "0xD9F7DC")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xD9F5B8", Offset = "0xD9F5B8", VA = "0xD9F5B8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xD9F8A0", Offset = "0xD9F8A0", VA = "0xD9F8A0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xD9FC5C", Offset = "0xD9FC5C", VA = "0xD9FC5C")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD9EA68", Offset = "0xD9EA68", VA = "0xD9EA68")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD9ECE4", Offset = "0xD9ECE4", VA = "0xD9ECE4")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD9FE84", Offset = "0xD9FE84", VA = "0xD9FE84")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xDA0064", Offset = "0xDA0064", VA = "0xDA0064")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xDA0198", Offset = "0xDA0198", VA = "0xDA0198")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD9FA88", Offset = "0xD9FA88", VA = "0xD9FA88")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDA0510", Offset = "0xDA0510", VA = "0xDA0510")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x2000026")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x200032D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E269C", Offset = "0x6E269C")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170001E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0xDA5BE0", Offset = "0xDA5BE0", VA = "0xDA5BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xDA5C50", Offset = "0xDA5C50", VA = "0xDA5C50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xDA2940", Offset = "0xDA2940", VA = "0xDA2940")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xDA3A84", Offset = "0xDA3A84", VA = "0xDA3A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xDA3A88", Offset = "0xDA3A88", VA = "0xDA3A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xDA5BE8", Offset = "0xDA5BE8", VA = "0xDA5BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26AC", Offset = "0x6E26AC")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170001EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001695")]
			[Address(RVA = "0xDA5D94", Offset = "0xDA5D94", VA = "0xDA5D94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xDA5E04", Offset = "0xDA5E04", VA = "0xDA5E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xDA39C0", Offset = "0xDA39C0", VA = "0xDA39C0")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xDA5C58", Offset = "0xDA5C58", VA = "0xDA5C58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xDA5C5C", Offset = "0xDA5C5C", VA = "0xDA5C5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xDA5D9C", Offset = "0xDA5D9C", VA = "0xDA5D9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3A1C", Offset = "0x6E3A1C")]
	public bool screenFade;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3A54", Offset = "0x6E3A54")]
	public float fadeTime;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3A8C", Offset = "0x6E3A8C")]
	public Color fadeColor;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000030")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xDA0418", Offset = "0xDA0418", VA = "0xDA0418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0xDA0630", Offset = "0xDA0630", VA = "0xDA0630")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x600024E")]
		[Address(RVA = "0xDA06C8", Offset = "0xDA06C8", VA = "0xDA06C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xDA06D0", Offset = "0xDA06D0", VA = "0xDA06D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xDA073C", Offset = "0xDA073C", VA = "0xDA073C")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xDA0744", Offset = "0xDA0744", VA = "0xDA0744")]
		set
		{
		}
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xDA0758", Offset = "0xDA0758", VA = "0xDA0758")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xDA0A58", Offset = "0xDA0A58", VA = "0xDA0A58")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xDA0B34", Offset = "0xDA0B34", VA = "0xDA0B34")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xDA0C98", Offset = "0xDA0C98", VA = "0xDA0C98")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xDA0DA8", Offset = "0xDA0DA8", VA = "0xDA0DA8")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xDA0F80", Offset = "0xDA0F80", VA = "0xDA0F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xDA19D8", Offset = "0xDA19D8", VA = "0xDA19D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xDA21A8", Offset = "0xDA21A8", VA = "0xDA21A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xDA21CC", Offset = "0xDA21CC", VA = "0xDA21CC")]
	private void Update()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xDA251C", Offset = "0xDA251C", VA = "0xDA251C")]
	private void OnPause()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xDA2644", Offset = "0xDA2644", VA = "0xDA2644")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDA264C", Offset = "0xDA264C", VA = "0xDA264C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xDA27B4", Offset = "0xDA27B4", VA = "0xDA27B4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xDA28CC", Offset = "0xDA28CC", VA = "0xDA28CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFCE0", Offset = "0x6EFCE0")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xDA296C", Offset = "0xDA296C", VA = "0xDA296C")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xDA2FA0", Offset = "0xDA2FA0", VA = "0xDA2FA0")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xDA3300", Offset = "0xDA3300", VA = "0xDA3300")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xDA3534", Offset = "0xDA3534", VA = "0xDA3534")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xDA1390", Offset = "0xDA1390", VA = "0xDA1390")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xDA2650", Offset = "0xDA2650", VA = "0xDA2650")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xDA19D0", Offset = "0xDA19D0", VA = "0xDA19D0")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xDA20F8", Offset = "0xDA20F8", VA = "0xDA20F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFD44", Offset = "0x6EFD44")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xDA3820", Offset = "0xDA3820", VA = "0xDA3820")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xDA20F0", Offset = "0xDA20F0", VA = "0xDA20F0")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xDA39EC", Offset = "0xDA39EC", VA = "0xDA39EC")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x2000027")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200032F")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x2000330")]
	public enum OverlayShape
	{
		[Token(Token = "0x40010E8")]
		Quad,
		[Token(Token = "0x40010E9")]
		Cylinder,
		[Token(Token = "0x40010EA")]
		Equirect
	}

	[Token(Token = "0x2000331")]
	public enum OverlayType
	{
		[Token(Token = "0x40010EC")]
		Overlay,
		[Token(Token = "0x40010ED")]
		Underlay
	}

	[Token(Token = "0x2000332")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x40010EF")]
		NotCare,
		[Token(Token = "0x40010F0")]
		Nearest,
		[Token(Token = "0x40010F1")]
		Linear,
		[Token(Token = "0x40010F2")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x40010F3")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x40010F4")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x40010F5")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xDA5E0C", Offset = "0xDA5E0C", VA = "0xDA5E0C", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xDA5E44", Offset = "0xDA5E44", VA = "0xDA5E44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xDA6450", Offset = "0xDA6450", VA = "0xDA6450")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDA6B38", Offset = "0xDA6B38", VA = "0xDA6B38")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDA1E04", Offset = "0xDA1E04", VA = "0xDA1E04")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xDA6248", Offset = "0xDA6248", VA = "0xDA6248")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xDA6454", Offset = "0xDA6454", VA = "0xDA6454")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xDA6E48", Offset = "0xDA6E48", VA = "0xDA6E48")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xDA6F0C", Offset = "0xDA6F0C", VA = "0xDA6F0C")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xDA5B60", Offset = "0xDA5B60", VA = "0xDA5B60")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xDA5BA0", Offset = "0xDA5BA0", VA = "0xDA5BA0")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xDA6F20", Offset = "0xDA6F20", VA = "0xDA6F20")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x2000028")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3AC4", Offset = "0x6E3AC4")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000034")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xD9B2D8", Offset = "0xD9B2D8", VA = "0xD9B2D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xDB01B8", Offset = "0xDB01B8", VA = "0xDB01B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xD9FE6C", Offset = "0xD9FE6C", VA = "0xD9FE6C")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000036")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xD9FA80", Offset = "0xD9FA80", VA = "0xD9FA80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFDA8", Offset = "0x6EFDA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xDB0BB4", Offset = "0xDB0BB4", VA = "0xDB0BB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFDB8", Offset = "0x6EFDB8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public float RtScaleFactor
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xDB0BBC", Offset = "0xDB0BBC", VA = "0xDB0BBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xDB0BC4", Offset = "0xDB0BC4", VA = "0xDB0BC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xD9FE7C", Offset = "0xD9FE7C", VA = "0xD9FE7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xD9E664", Offset = "0xD9E664", VA = "0xD9E664")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xDA3818", Offset = "0xDA3818", VA = "0xDA3818")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xDB0D64", Offset = "0xDB0D64", VA = "0xDB0D64")]
		set
		{
		}
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xDB00A8", Offset = "0xDB00A8", VA = "0xDB00A8")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xDB0224", Offset = "0xDB0224", VA = "0xDB0224")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xDB0B34", Offset = "0xDB0B34", VA = "0xDB0B34")]
	public void Init()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xDB111C", Offset = "0xDB111C", VA = "0xDB111C")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xDB123C", Offset = "0xDB123C", VA = "0xDB123C")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xDB12EC", Offset = "0xDB12EC", VA = "0xDB12EC")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xDB1DA0", Offset = "0xDB1DA0", VA = "0xDB1DA0")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xDB1704", Offset = "0xDB1704", VA = "0xDB1704")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xDB1870", Offset = "0xDB1870", VA = "0xDB1870")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xDB1FBC", Offset = "0xDB1FBC", VA = "0xDB1FBC")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xDB0BDC", Offset = "0xDB0BDC", VA = "0xDB0BDC")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xDAEDE8", Offset = "0xDAEDE8", VA = "0xDAEDE8")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xDAE1B4", Offset = "0xDAE1B4", VA = "0xDAE1B4")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xDB26A4", Offset = "0xDB26A4", VA = "0xDB26A4")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xDB19DC", Offset = "0xDB19DC", VA = "0xDB19DC")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xDB2968", Offset = "0xDB2968", VA = "0xDB2968")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xDB0D78", Offset = "0xDB0D78", VA = "0xDB0D78")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000029")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xDB60B8", Offset = "0xDB60B8", VA = "0xDB60B8", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xDB6B48", Offset = "0xDB6B48", VA = "0xDB6B48", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xDB6CA8", Offset = "0xDB6CA8", VA = "0xDB6CA8", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xDB7778", Offset = "0xDB7778", VA = "0xDB7778", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xDB6B4C", Offset = "0xDB6B4C", VA = "0xDB6B4C")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xDB7830", Offset = "0xDB7830", VA = "0xDB7830")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xDB64D8", Offset = "0xDB64D8", VA = "0xDB64D8")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xDB69D4", Offset = "0xDB69D4", VA = "0xDB69D4")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xDB7938", Offset = "0xDB7938", VA = "0xDB7938")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xDB7C10", Offset = "0xDB7C10", VA = "0xDB7C10")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xDB7A0C", Offset = "0xDB7A0C", VA = "0xDB7A0C")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xDB7780", Offset = "0xDB7780", VA = "0xDB7780")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xDA6BC4", Offset = "0xDA6BC4", VA = "0xDA6BC4")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xDB6CAC", Offset = "0xDB6CAC", VA = "0xDB6CAC")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xDB7EB0", Offset = "0xDB7EB0", VA = "0xDB7EB0")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xDB7DF8", Offset = "0xDB7DF8", VA = "0xDB7DF8")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xDB25FC", Offset = "0xDB25FC", VA = "0xDB25FC")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x200002A")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60002A8")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60002A9")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60002AA")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60002AB")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xD5BD1C", Offset = "0xD5BD1C", VA = "0xD5BD1C")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x200002B")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x98304C", Offset = "0x98304C", VA = "0x98304C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x9830E4", Offset = "0x9830E4", VA = "0x9830E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x983324", Offset = "0x983324", VA = "0x983324")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x200002C")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xD5B3BC", Offset = "0xD5B3BC", VA = "0xD5B3BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xD5B474", Offset = "0xD5B474", VA = "0xD5B474")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD5B664", Offset = "0xD5B664", VA = "0xD5B664")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x200002D")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x9822F8", Offset = "0x9822F8", VA = "0x9822F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x982444", Offset = "0x982444", VA = "0x982444")]
	private void Update()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x9824D0", Offset = "0x9824D0", VA = "0x9824D0")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x9822FC", Offset = "0x9822FC", VA = "0x9822FC")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x982480", Offset = "0x982480", VA = "0x982480")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x9824E8", Offset = "0x9824E8", VA = "0x9824E8")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x200002E")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26BC", Offset = "0x6E26BC")]
	private sealed class <>c
	{
		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x985FE0", Offset = "0x985FE0", VA = "0x985FE0")]
		public <>c()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x985FE8", Offset = "0x985FE8", VA = "0x985FE8")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40001DF")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x985B98", Offset = "0x985B98", VA = "0x985B98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x985CE4", Offset = "0x985CE4", VA = "0x985CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x985D68", Offset = "0x985D68", VA = "0x985D68")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x985F74", Offset = "0x985F74", VA = "0x985F74")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x200002F")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x9855F0", Offset = "0x9855F0", VA = "0x9855F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x985660", Offset = "0x985660", VA = "0x985660")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x9856F8", Offset = "0x9856F8", VA = "0x9856F8")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000030")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E12F0", Offset = "0x6E12F0")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x985700", Offset = "0x985700", VA = "0x985700")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x9858F4", Offset = "0x9858F4", VA = "0x9858F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x985820", Offset = "0x985820", VA = "0x985820")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x9858F8", Offset = "0x9858F8", VA = "0x9858F8")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x985A68", Offset = "0x985A68", VA = "0x985A68")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x985B90", Offset = "0x985B90", VA = "0x985B90")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000031")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xD5B66C", Offset = "0xD5B66C", VA = "0xD5B66C")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xD5B714", Offset = "0xD5B714", VA = "0xD5B714")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000032")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xD73658", Offset = "0xD73658", VA = "0xD73658")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xD736EC", Offset = "0xD736EC", VA = "0xD736EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xD73780", Offset = "0xD73780", VA = "0xD73780")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xD73A4C", Offset = "0xD73A4C", VA = "0xD73A4C")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000033")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3AD4", Offset = "0x6E3AD4")]
	public bool trackRotation;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3B0C", Offset = "0x6E3B0C")]
	public bool trackPosition;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700003A")]
	public Ray Gaze
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0xDA7300", Offset = "0xDA7300", VA = "0xDA7300")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xDA78D8", Offset = "0xDA78D8", VA = "0xDA78D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xDA73B8", Offset = "0xDA73B8", VA = "0xDA73B8")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xDA78F8", Offset = "0xDA78F8", VA = "0xDA78F8")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000034")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3B44", Offset = "0x6E3B44")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3B54", Offset = "0x6E3B54")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3B64", Offset = "0x6E3B64")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700003B")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0xDAF9F8", Offset = "0xDAF9F8", VA = "0xDAF9F8")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700003C")]
	public Vector3 Position
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0xDA78EC", Offset = "0xDA78EC", VA = "0xDA78EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFDC8", Offset = "0x6EFDC8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0xDAFB88", Offset = "0xDAFB88", VA = "0xDAFB88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFDD8", Offset = "0x6EFDD8")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0xDA78E0", Offset = "0xDA78E0", VA = "0xDA78E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFDE8", Offset = "0x6EFDE8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xDAFB94", Offset = "0xDAFB94", VA = "0xDAFB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFDF8", Offset = "0x6EFDF8")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xDAFB64", Offset = "0xDAFB64", VA = "0xDAFB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE08", Offset = "0x6EFE08")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xDAFBA0", Offset = "0xDAFBA0", VA = "0xDAFBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE18", Offset = "0x6EFE18")]
		protected set
		{
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xD9E7A8", Offset = "0xD9E7A8", VA = "0xD9E7A8")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xDAFD28", Offset = "0xDAFD28", VA = "0xDAFD28")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xDAFDA8", Offset = "0xDAFDA8", VA = "0xDAFDA8")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xDAFBBC", Offset = "0xDAFBBC", VA = "0xDAFBBC")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xDAFEE8", Offset = "0xDAFEE8", VA = "0xDAFEE8")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000035")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000334")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000335")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x1700003F")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xD9DDEC", Offset = "0xD9DDEC", VA = "0xD9DDEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0xDB2A30", Offset = "0xDB2A30", VA = "0xDB2A30")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0xDB2BD0", Offset = "0xDB2BD0", VA = "0xDB2BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE28", Offset = "0x6EFE28")]
		add
		{
		}
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0xDB2D00", Offset = "0xDB2D00", VA = "0xDB2D00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE38", Offset = "0x6EFE38")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0xDB2E30", Offset = "0xDB2E30", VA = "0xDB2E30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE48", Offset = "0x6EFE48")]
		add
		{
		}
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0xDB2F60", Offset = "0xDB2F60", VA = "0xDB2F60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE58", Offset = "0x6EFE58")]
		remove
		{
		}
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xDB2974", Offset = "0xDB2974", VA = "0xDB2974")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xDB2A9C", Offset = "0xDB2A9C", VA = "0xDB2A9C")]
	public void Init()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xDAD3DC", Offset = "0xDAD3DC", VA = "0xDAD3DC")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xDB32F4", Offset = "0xDB32F4", VA = "0xDB32F4")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xDB3090", Offset = "0xDB3090", VA = "0xDB3090")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xDAE9B4", Offset = "0xDAE9B4", VA = "0xDAE9B4")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xDAD844", Offset = "0xDAD844", VA = "0xDAD844")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xDAB5AC", Offset = "0xDAB5AC", VA = "0xDAB5AC")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xDA5968", Offset = "0xDA5968", VA = "0xDA5968")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xDB343C", Offset = "0xDB343C", VA = "0xDB343C")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xDB4F9C", Offset = "0xDB4F9C", VA = "0xDB4F9C")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xDB4D48", Offset = "0xDB4D48", VA = "0xDB4D48")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x2000036")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x92C744", Offset = "0x92C744", VA = "0x92C744")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000336")]
	public struct Lenses
	{
		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x40010FC")]
		public const int AlignTop = -1;

		[Token(Token = "0x40010FD")]
		public const int AlignCenter = 0;

		[Token(Token = "0x40010FE")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000337")]
	public struct MaxFOV
	{
		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000338")]
	public struct Distortion
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x772AF0", Offset = "0x772AF0", VA = "0x772AF0")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x772AF8", Offset = "0x772AF8", VA = "0x772AF8")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x772B00", Offset = "0x772B00", VA = "0x772B00")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000339")]
	public struct Device
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD9C6E8", Offset = "0xD9C6E8", VA = "0xD9C6E8")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD9C784", Offset = "0xD9C784", VA = "0xD9C784")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xD9C830", Offset = "0xD9C830", VA = "0xD9C830")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xD9CBC4", Offset = "0xD9CBC4", VA = "0xD9CBC4")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD9CE38", Offset = "0xD9CE38", VA = "0xD9CE38")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xD9C77C", Offset = "0xD9C77C", VA = "0xD9C77C")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1354", Offset = "0x6E1354")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xDA7158", Offset = "0xDA7158", VA = "0xDA7158")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xDA71E0", Offset = "0xDA71E0", VA = "0xDA71E0")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xDA72F0", Offset = "0xDA72F0", VA = "0xDA72F0")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x2000039")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x10374AC", Offset = "0x10374AC", VA = "0x10374AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1037504", Offset = "0x1037504", VA = "0x1037504")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x10376D8", Offset = "0x10376D8", VA = "0x10376D8")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1037788", Offset = "0x1037788", VA = "0x1037788")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x200003A")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x200033A")]
	public enum Mode
	{
		[Token(Token = "0x400110E")]
		Click,
		[Token(Token = "0x400110F")]
		Gaze
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E3B94", Offset = "0x6E3B94")]
	public string ClickInputName;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E3BCC", Offset = "0x6E3BCC")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3C04", Offset = "0x6E3C04")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3C14", Offset = "0x6E3C14")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000040")]
	public static float gazeFraction
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x1037688", Offset = "0x1037688", VA = "0x1037688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE68", Offset = "0x6EFE68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1037790", Offset = "0x1037790", VA = "0x1037790")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE78", Offset = "0x6EFE78")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1037638", Offset = "0x1037638", VA = "0x1037638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE88", Offset = "0x6EFE88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x10377EC", Offset = "0x10377EC", VA = "0x10377EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFE98", Offset = "0x6EFE98")]
		private set
		{
		}
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1037840", Offset = "0x1037840", VA = "0x1037840", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1037864", Offset = "0x1037864", VA = "0x1037864")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1037AA4", Offset = "0x1037AA4", VA = "0x1037AA4")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1037F3C", Offset = "0x1037F3C", VA = "0x1037F3C")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x200003B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E13B8", Offset = "0x6E13B8")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3C24", Offset = "0x6E3C24")]
	public Transform Crosshair;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1037F9C", Offset = "0x1037F9C", VA = "0x1037F9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1037FF4", Offset = "0x1037FF4", VA = "0x1037FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1038088", Offset = "0x1038088", VA = "0x1038088")]
	private void Update()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x10381C0", Offset = "0x10381C0", VA = "0x10381C0")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x10382E8", Offset = "0x10382E8", VA = "0x10382E8")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x200003C")]
public enum RenderEventType
{
	[Token(Token = "0x4000228")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000229")]
	Pause,
	[Token(Token = "0x400022A")]
	Resume,
	[Token(Token = "0x400022B")]
	LeftEyeEndFrame,
	[Token(Token = "0x400022C")]
	RightEyeEndFrame,
	[Token(Token = "0x400022D")]
	TimeWarp,
	[Token(Token = "0x400022E")]
	ResetVrModeParms,
	[Token(Token = "0x400022F")]
	ShutdownRenderThread,
	[Token(Token = "0x4000230")]
	BeginEye,
	[Token(Token = "0x4000231")]
	EndEye,
	[Token(Token = "0x4000232")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000233")]
	BoundaryRenderRight,
	[Token(Token = "0x4000234")]
	BothEyeEndFrame,
	[Token(Token = "0x4000235")]
	CameraFrameLeft,
	[Token(Token = "0x4000236")]
	CameraFrameRight,
	[Token(Token = "0x4000237")]
	StartCameraFrame,
	[Token(Token = "0x4000238")]
	StopCameraFrame
}
[Token(Token = "0x200003D")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x200033B")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000239")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x400023A")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x400023B")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400023C")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400023D")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400023E")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400023F")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xD9FC30", Offset = "0xD9FC30", VA = "0xD9FC30")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xDAF388", Offset = "0xDAF388", VA = "0xDAF388")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xDAF390", Offset = "0xDAF390", VA = "0xDAF390")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xDAF3B0", Offset = "0xDAF3B0", VA = "0xDAF3B0")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xDAF380", Offset = "0xDAF380", VA = "0xDAF380")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6EFEA8", Offset = "0x6EFEA8")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xDAF3C4", Offset = "0xDAF3C4", VA = "0xDAF3C4")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x200003E")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E3C5C", Offset = "0x6E3C5C")]
	public GameObject cursor;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xDB5188", Offset = "0xDB5188", VA = "0xDB5188", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xDB521C", Offset = "0xDB521C", VA = "0xDB521C", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xDB5568", Offset = "0xDB5568", VA = "0xDB5568", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xDB55F8", Offset = "0xDB55F8", VA = "0xDB55F8", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xDB5634", Offset = "0xDB5634", VA = "0xDB5634")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xDB57DC", Offset = "0xDB57DC", VA = "0xDB57DC")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xDB59D8", Offset = "0xDB59D8", VA = "0xDB59D8")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xDB5344", Offset = "0xDB5344", VA = "0xDB5344")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xDB5CD0", Offset = "0xDB5CD0", VA = "0xDB5CD0")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xDB6064", Offset = "0xDB6064", VA = "0xDB6064")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x200003F")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x400024E")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x400024F")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000250")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000042")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x600031E")]
		[Address(RVA = "0xA5AE18", Offset = "0xA5AE18", VA = "0xA5AE18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA5AEC4", Offset = "0xA5AEC4", VA = "0xA5AEC4")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA5B45C", Offset = "0xA5B45C", VA = "0xA5B45C")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA5BCC0", Offset = "0xA5BCC0", VA = "0xA5BCC0")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA5BEA0", Offset = "0xA5BEA0", VA = "0xA5BEA0")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA5C38C", Offset = "0xA5C38C", VA = "0xA5C38C")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA5C028", Offset = "0xA5C028", VA = "0xA5C028")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xA5C308", Offset = "0xA5C308", VA = "0xA5C308")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xA5AEBC", Offset = "0xA5AEBC", VA = "0xA5AEBC")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000040")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3CB4", Offset = "0x6E3CB4")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3CC4", Offset = "0x6E3CC4")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3CD4", Offset = "0x6E3CD4")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000043")]
	public int x
	{
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x98649C", Offset = "0x98649C", VA = "0x98649C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFF0C", Offset = "0x6EFF0C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x9864A4", Offset = "0x9864A4", VA = "0x9864A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFF1C", Offset = "0x6EFF1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public int y
	{
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x9864AC", Offset = "0x9864AC", VA = "0x9864AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFF2C", Offset = "0x6EFF2C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x9864B4", Offset = "0x9864B4", VA = "0x9864B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFF3C", Offset = "0x6EFF3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int z
	{
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x9864BC", Offset = "0x9864BC", VA = "0x9864BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFF4C", Offset = "0x6EFF4C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600032D")]
		[Address(RVA = "0x9864C4", Offset = "0x9864C4", VA = "0x9864C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFF5C", Offset = "0x6EFF5C")]
		set
		{
		}
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x9864CC", Offset = "0x9864CC", VA = "0x9864CC")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x9864D4", Offset = "0x9864D4", VA = "0x9864D4")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000041")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000330")]
	[Address(RVA = "0x10374A4", Offset = "0x10374A4", VA = "0x10374A4")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000042")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000256")]
	App = 1,
	[Token(Token = "0x4000257")]
	TouchPad = 2,
	[Token(Token = "0x4000258")]
	Trigger = 4
}
[Token(Token = "0x2000043")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1038344", Offset = "0x1038344", VA = "0x1038344", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x10383C8", Offset = "0x10383C8", VA = "0x10383C8")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x10384B8", Offset = "0x10384B8", VA = "0x10384B8")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x10385A8", Offset = "0x10385A8", VA = "0x10385A8", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1038994", Offset = "0x1038994", VA = "0x1038994", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1038A94", Offset = "0x1038A94", VA = "0x1038A94", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1038B94", Offset = "0x1038B94", VA = "0x1038B94", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1038CEC", Offset = "0x1038CEC", VA = "0x1038CEC", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1038F50", Offset = "0x1038F50", VA = "0x1038F50", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x103900C", Offset = "0x103900C", VA = "0x103900C", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x10390AC", Offset = "0x10390AC", VA = "0x10390AC", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1039F94", Offset = "0x1039F94", VA = "0x1039F94", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x103A030", Offset = "0x103A030", VA = "0x103A030", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x103A108", Offset = "0x103A108", VA = "0x103A108", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x103A200", Offset = "0x103A200", VA = "0x103A200", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x103A534", Offset = "0x103A534", VA = "0x103A534", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x103A85C", Offset = "0x103A85C", VA = "0x103A85C", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x103AFC4", Offset = "0x103AFC4", VA = "0x103AFC4")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000044")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26CC", Offset = "0x6E26CC")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170001EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016B1")]
			[Address(RVA = "0xA60AC8", Offset = "0xA60AC8", VA = "0xA60AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0xA60B38", Offset = "0xA60B38", VA = "0xA60B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xA60254", Offset = "0xA60254", VA = "0xA60254")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xA605C4", Offset = "0xA605C4", VA = "0xA605C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xA605C8", Offset = "0xA605C8", VA = "0xA605C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xA60AD0", Offset = "0xA60AD0", VA = "0xA60AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000262")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xA5FCA8", Offset = "0xA5FCA8", VA = "0xA5FCA8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xA5FCB4", Offset = "0xA5FCB4", VA = "0xA5FCB4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xA5FCC0", Offset = "0xA5FCC0", VA = "0xA5FCC0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xA5FCCC", Offset = "0xA5FCCC", VA = "0xA5FCCC", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xA601B8", Offset = "0xA601B8", VA = "0xA601B8", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6EFF6C", Offset = "0x6EFF6C")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xA60280", Offset = "0xA60280", VA = "0xA60280", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xA605BC", Offset = "0xA605BC", VA = "0xA605BC")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000045")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x2000046")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x2000047")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000018")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0xA60B40", Offset = "0xA60B40", VA = "0xA60B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFFD0", Offset = "0x6EFFD0")]
		add
		{
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0xA60C2C", Offset = "0xA60C2C", VA = "0xA60C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFFE0", Offset = "0x6EFFE0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000351")]
		[Address(RVA = "0xA60D18", Offset = "0xA60D18", VA = "0xA60D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EFFF0", Offset = "0x6EFFF0")]
		add
		{
		}
		[Token(Token = "0x6000352")]
		[Address(RVA = "0xA60E04", Offset = "0xA60E04", VA = "0xA60E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0000", Offset = "0x6F0000")]
		remove
		{
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xA60EF0", Offset = "0xA60EF0", VA = "0xA60EF0", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA60F14", Offset = "0xA60F14", VA = "0xA60F14", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA60F38", Offset = "0xA60F38", VA = "0xA60F38", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xA611A0", Offset = "0xA611A0", VA = "0xA611A0", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA611AC", Offset = "0xA611AC", VA = "0xA611AC", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA61694", Offset = "0xA61694", VA = "0xA61694", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA61788", Offset = "0xA61788", VA = "0xA61788", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xA61940", Offset = "0xA61940", VA = "0xA61940", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xA61CF0", Offset = "0xA61CF0", VA = "0xA61CF0", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xA61E00", Offset = "0xA61E00", VA = "0xA61E00", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA61E08", Offset = "0xA61E08", VA = "0xA61E08")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x2000048")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA61E1C", Offset = "0xA61E1C", VA = "0xA61E1C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA61F48", Offset = "0xA61F48", VA = "0xA61F48", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA61FD4", Offset = "0xA61FD4", VA = "0xA61FD4")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x2000049")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x200033D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26DC", Offset = "0x6E26DC")]
	private sealed class <>c
	{
		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xA630D8", Offset = "0xA630D8", VA = "0xA630D8")]
		public <>c()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xA630E0", Offset = "0xA630E0", VA = "0xA630E0")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000275")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000046")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xA62EE8", Offset = "0xA62EE8", VA = "0xA62EE8", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA61FDC", Offset = "0xA61FDC", VA = "0xA61FDC", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xA621F0", Offset = "0xA621F0", VA = "0xA621F0", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA62548", Offset = "0xA62548", VA = "0xA62548", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xA628B8", Offset = "0xA628B8", VA = "0xA628B8", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xA62F98", Offset = "0xA62F98", VA = "0xA62F98")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200004A")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200004B")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x200004C")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200033E")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001117")]
		ClickOnButtonUp,
		[Token(Token = "0x4001118")]
		ClickOnButtonDown
	}

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x600036C")]
		[Address(RVA = "0xA630F0", Offset = "0xA630F0", VA = "0xA630F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0010", Offset = "0x6F0010")]
		add
		{
		}
		[Token(Token = "0x600036D")]
		[Address(RVA = "0xA631DC", Offset = "0xA631DC", VA = "0xA631DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0020", Offset = "0x6F0020")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0xA632C8", Offset = "0xA632C8", VA = "0xA632C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0030", Offset = "0x6F0030")]
		add
		{
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0xA633B4", Offset = "0xA633B4", VA = "0xA633B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0040", Offset = "0x6F0040")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0xA634A0", Offset = "0xA634A0", VA = "0xA634A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0050", Offset = "0x6F0050")]
		add
		{
		}
		[Token(Token = "0x6000371")]
		[Address(RVA = "0xA6358C", Offset = "0xA6358C", VA = "0xA6358C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0060", Offset = "0x6F0060")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000372")]
		[Address(RVA = "0xA63678", Offset = "0xA63678", VA = "0xA63678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0070", Offset = "0x6F0070")]
		add
		{
		}
		[Token(Token = "0x6000373")]
		[Address(RVA = "0xA63764", Offset = "0xA63764", VA = "0xA63764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0080", Offset = "0x6F0080")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000374")]
		[Address(RVA = "0xA63850", Offset = "0xA63850", VA = "0xA63850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0090", Offset = "0x6F0090")]
		add
		{
		}
		[Token(Token = "0x6000375")]
		[Address(RVA = "0xA6393C", Offset = "0xA6393C", VA = "0xA6393C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F00A0", Offset = "0x6F00A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xA63A28", Offset = "0xA63A28", VA = "0xA63A28", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xA63A30", Offset = "0xA63A30", VA = "0xA63A30", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xA63B10", Offset = "0xA63B10", VA = "0xA63B10", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xA63BAC", Offset = "0xA63BAC", VA = "0xA63BAC", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xA63C48", Offset = "0xA63C48", VA = "0xA63C48", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xA63C64", Offset = "0xA63C64", VA = "0xA63C64", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xA63C70", Offset = "0xA63C70", VA = "0xA63C70", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xA63D54", Offset = "0xA63D54", VA = "0xA63D54", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xA63E20", Offset = "0xA63E20", VA = "0xA63E20", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xA63EEC", Offset = "0xA63EEC", VA = "0xA63EEC", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xA63F38", Offset = "0xA63F38", VA = "0xA63F38", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xA63F84", Offset = "0xA63F84", VA = "0xA63F84", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xA63FE8", Offset = "0xA63FE8", VA = "0xA63FE8", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xA63FF4", Offset = "0xA63FF4", VA = "0xA63FF4", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xA6402C", Offset = "0xA6402C", VA = "0xA6402C", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xA64094", Offset = "0xA64094", VA = "0xA64094", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xA64240", Offset = "0xA64240", VA = "0xA64240")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x200004D")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40002A0")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xD9D070", Offset = "0xD9D070", VA = "0xD9D070")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xD9D0BC", Offset = "0xD9D0BC", VA = "0xD9D0BC")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xD9D108", Offset = "0xD9D108", VA = "0xD9D108")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xD9D308", Offset = "0xD9D308", VA = "0xD9D308")]
	private void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xD9D11C", Offset = "0xD9D11C", VA = "0xD9D11C")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xD9D26C", Offset = "0xD9D26C", VA = "0xD9D26C")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xD9DF80", Offset = "0xD9DF80", VA = "0xD9DF80")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xD9E124", Offset = "0xD9E124", VA = "0xD9E124")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xD9D5EC", Offset = "0xD9D5EC", VA = "0xD9D5EC")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xD9E5B0", Offset = "0xD9E5B0", VA = "0xD9E5B0")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xD9D3B0", Offset = "0xD9D3B0", VA = "0xD9D3B0")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xD9DEAC", Offset = "0xD9DEAC", VA = "0xD9DEAC")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xD9E678", Offset = "0xD9E678", VA = "0xD9E678")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xD9E13C", Offset = "0xD9E13C", VA = "0xD9E13C")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xD9DC7C", Offset = "0xD9DC7C", VA = "0xD9DC7C")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xD9E5C4", Offset = "0xD9E5C4", VA = "0xD9E5C4")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xD9E824", Offset = "0xD9E824", VA = "0xD9E824")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x200004E")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xD5A8F0", Offset = "0xD5A8F0", VA = "0xD5A8F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xD5A9C8", Offset = "0xD5A9C8", VA = "0xD5A9C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xD5AA1C", Offset = "0xD5AA1C", VA = "0xD5AA1C")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xD5AAC4", Offset = "0xD5AAC4", VA = "0xD5AAC4")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xD5AB6C", Offset = "0xD5AB6C", VA = "0xD5AB6C")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xD5ABF0", Offset = "0xD5ABF0", VA = "0xD5ABF0")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xD5AC74", Offset = "0xD5AC74", VA = "0xD5AC74")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xD5AD9C", Offset = "0xD5AD9C", VA = "0xD5AD9C")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xD5AEC4", Offset = "0xD5AEC4", VA = "0xD5AEC4")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xD5AF6C", Offset = "0xD5AF6C", VA = "0xD5AF6C")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD5B000", Offset = "0xD5B000", VA = "0xD5B000")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xD5A960", Offset = "0xD5A960", VA = "0xD5A960")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD5A968", Offset = "0xD5A968", VA = "0xD5A968")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD5AA14", Offset = "0xD5AA14", VA = "0xD5AA14")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD5A998", Offset = "0xD5A998", VA = "0xD5A998")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xD5AA0C", Offset = "0xD5AA0C", VA = "0xD5AA0C")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xD5B094", Offset = "0xD5B094", VA = "0xD5B094")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x200004F")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x92D184", Offset = "0x92D184", VA = "0x92D184")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x92D244", Offset = "0x92D244", VA = "0x92D244")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x92D304", Offset = "0x92D304", VA = "0x92D304")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x92D7F8", Offset = "0x92D7F8", VA = "0x92D7F8")]
	public ChatController()
	{
	}
}
[Token(Token = "0x2000050")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26EC", Offset = "0x6E26EC")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170001EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x982280", Offset = "0x982280", VA = "0x982280", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x9822F0", Offset = "0x9822F0", VA = "0x9822F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x982004", Offset = "0x982004", VA = "0x982004")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x982038", Offset = "0x982038", VA = "0x982038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0x98203C", Offset = "0x98203C", VA = "0x98203C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0x982288", Offset = "0x982288", VA = "0x982288", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x981F14", Offset = "0x981F14", VA = "0x981F14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x981F90", Offset = "0x981F90", VA = "0x981F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F00B0", Offset = "0x6F00B0")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x982030", Offset = "0x982030", VA = "0x982030")]
	public EnvMapAnimator()
	{
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000051")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xD70F7C", Offset = "0xD70F7C", VA = "0xD70F7C", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0xD70FA8", Offset = "0xD70FA8", VA = "0xD70FA8")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000052")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0xD70FB0", Offset = "0xD70FB0", VA = "0xD70FB0", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xD7138C", Offset = "0xD7138C", VA = "0xD7138C")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x2000053")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000340")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xD71FB8", Offset = "0xD71FB8", VA = "0xD71FB8")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000341")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xD72008", Offset = "0xD72008", VA = "0xD72008")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000342")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xD72058", Offset = "0xD72058", VA = "0xD72058")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000343")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xD720A8", Offset = "0xD720A8", VA = "0xD720A8")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000344")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xD720F8", Offset = "0xD720F8", VA = "0xD720F8")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x17000047")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x60003B6")]
			[Address(RVA = "0xD61948", Offset = "0xD61948", VA = "0xD61948")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003B7")]
			[Address(RVA = "0xD71394", Offset = "0xD71394", VA = "0xD71394")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x60003B8")]
			[Address(RVA = "0xD61950", Offset = "0xD61950", VA = "0xD61950")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003B9")]
			[Address(RVA = "0xD7139C", Offset = "0xD7139C", VA = "0xD7139C")]
			set
			{
			}
		}

		[Token(Token = "0x17000049")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x60003BA")]
			[Address(RVA = "0xD61958", Offset = "0xD61958", VA = "0xD61958")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BB")]
			[Address(RVA = "0xD713A4", Offset = "0xD713A4", VA = "0xD713A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x60003BC")]
			[Address(RVA = "0xD61960", Offset = "0xD61960", VA = "0xD61960")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0xD713AC", Offset = "0xD713AC", VA = "0xD713AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700004B")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x60003BE")]
			[Address(RVA = "0xD61968", Offset = "0xD61968", VA = "0xD61968")]
			get
			{
				return null;
			}
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0xD713B4", Offset = "0xD713B4", VA = "0xD713B4")]
			set
			{
			}
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xD713BC", Offset = "0xD713BC", VA = "0xD713BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xD7155C", Offset = "0xD7155C", VA = "0xD7155C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0xD71ED4", Offset = "0xD71ED4", VA = "0xD71ED4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xD71ED8", Offset = "0xD71ED8", VA = "0xD71ED8", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xD71C2C", Offset = "0xD71C2C", VA = "0xD71C2C")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xD71CA8", Offset = "0xD71CA8", VA = "0xD71CA8")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xD71D24", Offset = "0xD71D24", VA = "0xD71D24")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xD71DB4", Offset = "0xD71DB4", VA = "0xD71DB4")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xD71E44", Offset = "0xD71E44", VA = "0xD71E44")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xD71EDC", Offset = "0xD71EDC", VA = "0xD71EDC")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x2000054")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000345")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E26FC", Offset = "0x6E26FC")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170001F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016C5")]
				[Address(RVA = "0xD5C49C", Offset = "0xD5C49C", VA = "0xD5C49C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016C7")]
				[Address(RVA = "0xD5C50C", Offset = "0xD5C50C", VA = "0xD5C50C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xD5BD98", Offset = "0xD5BD98", VA = "0xD5BD98")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xD5BDCC", Offset = "0xD5BDCC", VA = "0xD5BDCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xD5BDD0", Offset = "0xD5BDD0", VA = "0xD5BDD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xD5C4A4", Offset = "0xD5C4A4", VA = "0xD5C4A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40002C0")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x40002C1")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xD5BD24", Offset = "0xD5BD24", VA = "0xD5BD24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0114", Offset = "0x6F0114")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xD5BDC4", Offset = "0xD5BDC4", VA = "0xD5BDC4")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x2000055")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000346")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E270C", Offset = "0x6E270C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170001F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016CB")]
				[Address(RVA = "0xD5CB60", Offset = "0xD5CB60", VA = "0xD5CB60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016CD")]
				[Address(RVA = "0xD5CBD0", Offset = "0xD5CBD0", VA = "0xD5CBD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xD5C588", Offset = "0xD5C588", VA = "0xD5C588")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xD5C5BC", Offset = "0xD5C5BC", VA = "0xD5C5BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xD5C5C0", Offset = "0xD5C5C0", VA = "0xD5C5C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xD5CB68", Offset = "0xD5CB68", VA = "0xD5CB68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x40002CA")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x40002CB")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xD5C514", Offset = "0xD5C514", VA = "0xD5C514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0178", Offset = "0x6F0178")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xD5C5B4", Offset = "0xD5C5B4", VA = "0xD5C5B4")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x2000056")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xD5CBD8", Offset = "0xD5CBD8", VA = "0xD5CBD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xD5D45C", Offset = "0xD5D45C", VA = "0xD5D45C")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xD5D46C", Offset = "0xD5D46C", VA = "0xD5D46C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xD5D470", Offset = "0xD5D470", VA = "0xD5D470")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0xD5D874", Offset = "0xD5D874", VA = "0xD5D874")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xD5D884", Offset = "0xD5D884", VA = "0xD5D884")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xD5DCD0", Offset = "0xD5DCD0", VA = "0xD5DCD0")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x2000059")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x2000347")]
		public enum CameraModes
		{
			[Token(Token = "0x4001126")]
			Follow,
			[Token(Token = "0x4001127")]
			Isometric,
			[Token(Token = "0x4001128")]
			Free
		}

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40002F0")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40002F1")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xD5DCEC", Offset = "0xD5DCEC", VA = "0xD5DCEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xD5DD70", Offset = "0xD5DD70", VA = "0xD5DD70")]
		private void Start()
		{
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xD5DE2C", Offset = "0xD5DE2C", VA = "0xD5DE2C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xD5E360", Offset = "0xD5E360", VA = "0xD5E360")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD5ECEC", Offset = "0xD5ECEC", VA = "0xD5ECEC")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x200005A")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x2000348")]
		public enum MotionType
		{
			[Token(Token = "0x400112A")]
			Rotation,
			[Token(Token = "0x400112B")]
			BackAndForth,
			[Token(Token = "0x400112C")]
			Translation
		}

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xD5ED94", Offset = "0xD5ED94", VA = "0xD5ED94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xD5EEC8", Offset = "0xD5EEC8", VA = "0xD5EEC8")]
		private void Update()
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xD5F160", Offset = "0xD5F160", VA = "0xD5F160")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x200005B")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E271C", Offset = "0x6E271C")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x170001F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016D1")]
				[Address(RVA = "0xD5F458", Offset = "0xD5F458", VA = "0xD5F458", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016D3")]
				[Address(RVA = "0xD5F4C8", Offset = "0xD5F4C8", VA = "0xD5F4C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xD5F288", Offset = "0xD5F288", VA = "0xD5F288")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xD5F2BC", Offset = "0xD5F2BC", VA = "0xD5F2BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xD5F2C0", Offset = "0xD5F2C0", VA = "0xD5F2C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xD5F460", Offset = "0xD5F460", VA = "0xD5F460", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xD5F174", Offset = "0xD5F174", VA = "0xD5F174")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xD5F1E8", Offset = "0xD5F1E8", VA = "0xD5F1E8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xD5F214", Offset = "0xD5F214", VA = "0xD5F214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F01DC", Offset = "0x6F01DC")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xD5F2B4", Offset = "0xD5F2B4", VA = "0xD5F2B4")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x200005C")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000301")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xD5F4D0", Offset = "0xD5F4D0", VA = "0xD5F4D0")]
		private void Start()
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xD5F5C4", Offset = "0xD5F5C4", VA = "0xD5F5C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xD5F668", Offset = "0xD5F668", VA = "0xD5F668")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x200005D")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x200034A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E272C", Offset = "0x6E272C")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x170001F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016D7")]
				[Address(RVA = "0xD60BB4", Offset = "0xD60BB4", VA = "0xD60BB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016D9")]
				[Address(RVA = "0xD60C24", Offset = "0xD60C24", VA = "0xD60C24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xD5F818", Offset = "0xD5F818", VA = "0xD5F818")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xD5FAB8", Offset = "0xD5FAB8", VA = "0xD5FAB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xD5FABC", Offset = "0xD5FABC", VA = "0xD5FABC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xD60BBC", Offset = "0xD60BBC", VA = "0xD60BBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xD5F670", Offset = "0xD5F670", VA = "0xD5F670")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xD5F6E0", Offset = "0xD5F6E0", VA = "0xD5F6E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xD5F780", Offset = "0xD5F780", VA = "0xD5F780")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xD5F70C", Offset = "0xD5F70C", VA = "0xD5F70C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0240", Offset = "0x6F0240")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xD5F844", Offset = "0xD5F844", VA = "0xD5F844")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x200034B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E273C", Offset = "0x6E273C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4001139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x400113A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x170001F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016DD")]
				[Address(RVA = "0xD67470", Offset = "0xD67470", VA = "0xD67470", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016DF")]
				[Address(RVA = "0xD674E0", Offset = "0xD674E0", VA = "0xD674E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xD67124", Offset = "0xD67124", VA = "0xD67124")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xD671B8", Offset = "0xD671B8", VA = "0xD671B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xD671BC", Offset = "0xD671BC", VA = "0xD671BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xD67478", Offset = "0xD67478", VA = "0xD67478", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xD66FF4", Offset = "0xD66FF4", VA = "0xD66FF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xD670B0", Offset = "0xD670B0", VA = "0xD670B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F02A4", Offset = "0x6F02A4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xD67150", Offset = "0xD67150", VA = "0xD67150")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x200005F")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x200034C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E274C", Offset = "0x6E274C")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400113B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170001FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E3")]
				[Address(RVA = "0xD67A30", Offset = "0xD67A30", VA = "0xD67A30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016E5")]
				[Address(RVA = "0xD67AA0", Offset = "0xD67AA0", VA = "0xD67AA0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xD677BC", Offset = "0xD677BC", VA = "0xD677BC")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xD67890", Offset = "0xD67890", VA = "0xD67890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xD67894", Offset = "0xD67894", VA = "0xD67894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xD67A38", Offset = "0xD67A38", VA = "0xD67A38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E275C", Offset = "0x6E275C")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4001148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170001FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016E9")]
				[Address(RVA = "0xD67D18", Offset = "0xD67D18", VA = "0xD67D18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016EB")]
				[Address(RVA = "0xD67D88", Offset = "0xD67D88", VA = "0xD67D88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016E6")]
			[Address(RVA = "0xD6785C", Offset = "0xD6785C", VA = "0xD6785C")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60016E7")]
			[Address(RVA = "0xD67AA8", Offset = "0xD67AA8", VA = "0xD67AA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016E8")]
			[Address(RVA = "0xD67AAC", Offset = "0xD67AAC", VA = "0xD67AAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xD67D20", Offset = "0xD67D20", VA = "0xD67D20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xD674E8", Offset = "0xD674E8", VA = "0xD674E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xD67558", Offset = "0xD67558", VA = "0xD67558")]
		private void Start()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xD67620", Offset = "0xD67620", VA = "0xD67620")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xD676E8", Offset = "0xD676E8", VA = "0xD676E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xD677B0", Offset = "0xD677B0", VA = "0xD677B0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xD67588", Offset = "0xD67588", VA = "0xD67588")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0308", Offset = "0x6F0308")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xD677E8", Offset = "0xD677E8", VA = "0xD677E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F036C", Offset = "0x6F036C")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xD67888", Offset = "0xD67888", VA = "0xD67888")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x2000060")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x200034E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E276C", Offset = "0x6E276C")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400114A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400114B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170001FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016EF")]
				[Address(RVA = "0xD6924C", Offset = "0xD6924C", VA = "0xD6924C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016F1")]
				[Address(RVA = "0xD692BC", Offset = "0xD692BC", VA = "0xD692BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016EC")]
			[Address(RVA = "0xD684FC", Offset = "0xD684FC", VA = "0xD684FC")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x60016ED")]
			[Address(RVA = "0xD68C58", Offset = "0xD68C58", VA = "0xD68C58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016EE")]
			[Address(RVA = "0xD68C5C", Offset = "0xD68C5C", VA = "0xD68C5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016F0")]
			[Address(RVA = "0xD69254", Offset = "0xD69254", VA = "0xD69254", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200034F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E277C", Offset = "0x6E277C")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x400115B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000200")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016F5")]
				[Address(RVA = "0xD68BE0", Offset = "0xD68BE0", VA = "0xD68BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000201")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016F7")]
				[Address(RVA = "0xD68C50", Offset = "0xD68C50", VA = "0xD68C50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016F2")]
			[Address(RVA = "0xD68528", Offset = "0xD68528", VA = "0xD68528")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60016F3")]
			[Address(RVA = "0xD685FC", Offset = "0xD685FC", VA = "0xD685FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016F4")]
			[Address(RVA = "0xD68600", Offset = "0xD68600", VA = "0xD68600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016F6")]
			[Address(RVA = "0xD68BE8", Offset = "0xD68BE8", VA = "0xD68BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xD67D90", Offset = "0xD67D90", VA = "0xD67D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xD67E58", Offset = "0xD67E58", VA = "0xD67E58")]
		private void Start()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xD68414", Offset = "0xD68414", VA = "0xD68414")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F03D0", Offset = "0x6F03D0")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0xD68488", Offset = "0xD68488", VA = "0xD68488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0434", Offset = "0x6F0434")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0xD68554", Offset = "0xD68554", VA = "0xD68554")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000061")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0xD692C4", Offset = "0xD692C4", VA = "0xD692C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xD692C8", Offset = "0xD692C8", VA = "0xD692C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xD69744", Offset = "0xD69744", VA = "0xD69744")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000062")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x2000350")]
		public enum objectType
		{
			[Token(Token = "0x400115E")]
			TextMeshPro,
			[Token(Token = "0x400115F")]
			TextMeshProUGUI
		}

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x400031D")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xD60C2C", Offset = "0xD60C2C", VA = "0xD60C2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xD60E68", Offset = "0xD60E68", VA = "0xD60E68")]
		private void Update()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xD60F14", Offset = "0xD60F14", VA = "0xD60F14")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000063")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000351")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001161")]
			TopLeft,
			[Token(Token = "0x4001162")]
			BottomLeft,
			[Token(Token = "0x4001163")]
			TopRight,
			[Token(Token = "0x4001164")]
			BottomRight
		}

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000324")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xD60F1C", Offset = "0xD60F1C", VA = "0xD60F1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xD61510", Offset = "0xD61510", VA = "0xD61510")]
		private void Start()
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0xD6153C", Offset = "0xD6153C", VA = "0xD6153C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xD611A4", Offset = "0xD611A4", VA = "0xD611A4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xD616AC", Offset = "0xD616AC", VA = "0xD616AC")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000064")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xD616C4", Offset = "0xD616C4", VA = "0xD616C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xD61970", Offset = "0xD61970", VA = "0xD61970")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xD61BF4", Offset = "0xD61BF4", VA = "0xD61BF4")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xD61E54", Offset = "0xD61E54", VA = "0xD61E54")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xD620B4", Offset = "0xD620B4", VA = "0xD620B4")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0xD623C0", Offset = "0xD623C0", VA = "0xD623C0")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0xD626CC", Offset = "0xD626CC", VA = "0xD626CC")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0xD629C4", Offset = "0xD629C4", VA = "0xD629C4")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000065")]
	[ExecuteInEditMode]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowCharacters;

		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ShowWords;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ShowLinks;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool ShowLines;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ShowMeshBounds;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool ShowTextBounds;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6E3E84", Offset = "0x6E3E84")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E3E84", Offset = "0x6E3E84")]
		public string ObjectStats;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_Transform;

		[Token(Token = "0x600040C")]
		[Address(RVA = "0xD629CC", Offset = "0xD629CC", VA = "0xD629CC")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000066")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x600040D")]
		[Address(RVA = "0xD629D4", Offset = "0xD629D4", VA = "0xD629D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0xD62A70", Offset = "0xD62A70", VA = "0xD62A70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xD636FC", Offset = "0xD636FC", VA = "0xD636FC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xD63778", Offset = "0xD63778", VA = "0xD63778", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xD637F0", Offset = "0xD637F0", VA = "0xD637F0")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x2000067")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x400033A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x400033C")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x400033D")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4000345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xD63808", Offset = "0xD63808", VA = "0xD63808")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xD639D0", Offset = "0xD639D0", VA = "0xD639D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000414")]
		[Address(RVA = "0xD63A98", Offset = "0xD63A98", VA = "0xD63A98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000415")]
		[Address(RVA = "0xD63B60", Offset = "0xD63B60", VA = "0xD63B60")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xD63C1C", Offset = "0xD63C1C", VA = "0xD63C1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xD66364", Offset = "0xD66364", VA = "0xD66364", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xD66370", Offset = "0xD66370", VA = "0xD66370", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xD66378", Offset = "0xD66378", VA = "0xD66378", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xD6637C", Offset = "0xD6637C", VA = "0xD6637C", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xD652FC", Offset = "0xD652FC", VA = "0xD652FC")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x600041C")]
		[Address(RVA = "0xD66380", Offset = "0xD66380", VA = "0xD66380")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x2000068")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000352")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001166")]
			TopLeft,
			[Token(Token = "0x4001167")]
			BottomLeft,
			[Token(Token = "0x4001168")]
			TopRight,
			[Token(Token = "0x4001169")]
			BottomRight
		}

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x400034C")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xD66398", Offset = "0xD66398", VA = "0xD66398")]
		private void Awake()
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xD669B8", Offset = "0xD669B8", VA = "0xD669B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xD669E4", Offset = "0xD669E4", VA = "0xD669E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xD665A0", Offset = "0xD665A0", VA = "0xD665A0")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD66B54", Offset = "0xD66B54", VA = "0xD66B54")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000069")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x2000353")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400116B")]
			TopLeft,
			[Token(Token = "0x400116C")]
			BottomLeft,
			[Token(Token = "0x400116D")]
			TopRight,
			[Token(Token = "0x400116E")]
			BottomRight
		}

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000351")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x6000422")]
		[Address(RVA = "0xD66B6C", Offset = "0xD66B6C", VA = "0xD66B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xD66E20", Offset = "0xD66E20", VA = "0xD66E20")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0xD66FE4", Offset = "0xD66FE4", VA = "0xD66FE4")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x200006A")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x2000354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E278C", Offset = "0x6E278C")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4001172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x17000202")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016FB")]
				[Address(RVA = "0xD69C78", Offset = "0xD69C78", VA = "0xD69C78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000203")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016FD")]
				[Address(RVA = "0xD69CE8", Offset = "0xD69CE8", VA = "0xD69CE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016F8")]
			[Address(RVA = "0xD6984C", Offset = "0xD6984C", VA = "0xD6984C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xD69880", Offset = "0xD69880", VA = "0xD69880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xD69884", Offset = "0xD69884", VA = "0xD69884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016FC")]
			[Address(RVA = "0xD69C80", Offset = "0xD69C80", VA = "0xD69C80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x6000425")]
		[Address(RVA = "0xD69754", Offset = "0xD69754", VA = "0xD69754")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0xD697AC", Offset = "0xD697AC", VA = "0xD697AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0xD697D8", Offset = "0xD697D8", VA = "0xD697D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0498", Offset = "0x6F0498")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0xD69878", Offset = "0xD69878", VA = "0xD69878")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x200006B")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x2000355")]
		private struct VertexAnim
		{
			[Token(Token = "0x4001174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x2000356")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E279C", Offset = "0x6E279C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x400117D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x17000204")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001701")]
				[Address(RVA = "0xD6AF0C", Offset = "0xD6AF0C", VA = "0xD6AF0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000205")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001703")]
				[Address(RVA = "0xD6AF7C", Offset = "0xD6AF7C", VA = "0xD6AF7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xD6A004", Offset = "0xD6A004", VA = "0xD6A004")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xD6A048", Offset = "0xD6A048", VA = "0xD6A048", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001700")]
			[Address(RVA = "0xD6A04C", Offset = "0xD6A04C", VA = "0xD6A04C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001702")]
			[Address(RVA = "0xD6AF14", Offset = "0xD6AF14", VA = "0xD6AF14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000429")]
		[Address(RVA = "0xD69CF0", Offset = "0xD69CF0", VA = "0xD69CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0xD69D48", Offset = "0xD69D48", VA = "0xD69D48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600042B")]
		[Address(RVA = "0xD69E10", Offset = "0xD69E10", VA = "0xD69E10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0xD69ED8", Offset = "0xD69ED8", VA = "0xD69ED8")]
		private void Start()
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0xD69F78", Offset = "0xD69F78", VA = "0xD69F78")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0xD69F04", Offset = "0xD69F04", VA = "0xD69F04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F04FC", Offset = "0x6F04FC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0xD6A030", Offset = "0xD6A030", VA = "0xD6A030")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E27AC", Offset = "0x6E27AC")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400117E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400117F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000206")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001707")]
				[Address(RVA = "0xD6C500", Offset = "0xD6C500", VA = "0xD6C500", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000207")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001709")]
				[Address(RVA = "0xD6C570", Offset = "0xD6C570", VA = "0xD6C570", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001704")]
			[Address(RVA = "0xD6B288", Offset = "0xD6B288", VA = "0xD6B288")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001705")]
			[Address(RVA = "0xD6B2C4", Offset = "0xD6B2C4", VA = "0xD6B2C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001706")]
			[Address(RVA = "0xD6B2C8", Offset = "0xD6B2C8", VA = "0xD6B2C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001708")]
			[Address(RVA = "0xD6C508", Offset = "0xD6C508", VA = "0xD6C508", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000430")]
		[Address(RVA = "0xD6AF84", Offset = "0xD6AF84", VA = "0xD6AF84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xD6AFDC", Offset = "0xD6AFDC", VA = "0xD6AFDC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xD6B0A4", Offset = "0xD6B0A4", VA = "0xD6B0A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xD6B16C", Offset = "0xD6B16C", VA = "0xD6B16C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xD6B20C", Offset = "0xD6B20C", VA = "0xD6B20C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xD6B198", Offset = "0xD6B198", VA = "0xD6B198")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0560", Offset = "0x6F0560")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xD6B2B4", Offset = "0xD6B2B4", VA = "0xD6B2B4")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x200006D")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x2000358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E27BC", Offset = "0x6E27BC")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x17000208")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600170D")]
				[Address(RVA = "0xD6E3D8", Offset = "0xD6E3D8", VA = "0xD6E3D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000209")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600170F")]
				[Address(RVA = "0xD6E448", Offset = "0xD6E448", VA = "0xD6E448", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600170A")]
			[Address(RVA = "0xD6C87C", Offset = "0xD6C87C", VA = "0xD6C87C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600170B")]
			[Address(RVA = "0xD6C8C0", Offset = "0xD6C8C0", VA = "0xD6C8C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600170C")]
			[Address(RVA = "0xD6C8C4", Offset = "0xD6C8C4", VA = "0xD6C8C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600170E")]
			[Address(RVA = "0xD6E3E0", Offset = "0xD6E3E0", VA = "0xD6E3E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xD6C578", Offset = "0xD6C578", VA = "0xD6C578")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xD6C5D0", Offset = "0xD6C5D0", VA = "0xD6C5D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xD6C698", Offset = "0xD6C698", VA = "0xD6C698")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xD6C760", Offset = "0xD6C760", VA = "0xD6C760")]
		private void Start()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xD6C800", Offset = "0xD6C800", VA = "0xD6C800")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xD6C78C", Offset = "0xD6C78C", VA = "0xD6C78C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F05C4", Offset = "0x6F05C4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0xD6C8A8", Offset = "0xD6C8A8", VA = "0xD6C8A8")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x200006E")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x2000359")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E27CC", Offset = "0x6E27CC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4001189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6001710")]
			[Address(RVA = "0xD6E7A8", Offset = "0xD6E7A8", VA = "0xD6E7A8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001711")]
			[Address(RVA = "0xD6E7B0", Offset = "0xD6E7B0", VA = "0xD6E7B0")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200035A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E27DC", Offset = "0x6E27DC")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400118A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400118B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400118C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x400118D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x400118E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x1700020A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001715")]
				[Address(RVA = "0xD6FC38", Offset = "0xD6FC38", VA = "0xD6FC38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001717")]
				[Address(RVA = "0xD6FCA8", Offset = "0xD6FCA8", VA = "0xD6FCA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001712")]
			[Address(RVA = "0xD6E764", Offset = "0xD6E764", VA = "0xD6E764")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001713")]
			[Address(RVA = "0xD6E864", Offset = "0xD6E864", VA = "0xD6E864", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001714")]
			[Address(RVA = "0xD6E868", Offset = "0xD6E868", VA = "0xD6E868", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001716")]
			[Address(RVA = "0xD6FC40", Offset = "0xD6FC40", VA = "0xD6FC40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xD6E450", Offset = "0xD6E450", VA = "0xD6E450")]
		private void Awake()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0xD6E4A8", Offset = "0xD6E4A8", VA = "0xD6E4A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xD6E570", Offset = "0xD6E570", VA = "0xD6E570")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xD6E638", Offset = "0xD6E638", VA = "0xD6E638")]
		private void Start()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xD6E6D8", Offset = "0xD6E6D8", VA = "0xD6E6D8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0xD6E664", Offset = "0xD6E664", VA = "0xD6E664")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0628", Offset = "0x6F0628")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xD6E790", Offset = "0xD6E790", VA = "0xD6E790")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x200006F")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x200035B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E27EC", Offset = "0x6E27EC")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x1700020C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600171B")]
				[Address(RVA = "0xD70F04", Offset = "0xD70F04", VA = "0xD70F04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600171D")]
				[Address(RVA = "0xD70F74", Offset = "0xD70F74", VA = "0xD70F74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001718")]
			[Address(RVA = "0xD6FE58", Offset = "0xD6FE58", VA = "0xD6FE58")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0xD70100", Offset = "0xD70100", VA = "0xD70100", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600171A")]
			[Address(RVA = "0xD70104", Offset = "0xD70104", VA = "0xD70104", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600171C")]
			[Address(RVA = "0xD70F0C", Offset = "0xD70F0C", VA = "0xD70F0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6000445")]
		[Address(RVA = "0xD6FCB0", Offset = "0xD6FCB0", VA = "0xD6FCB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0xD6FD20", Offset = "0xD6FD20", VA = "0xD6FD20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0xD6FDC0", Offset = "0xD6FDC0", VA = "0xD6FDC0")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0xD6FD4C", Offset = "0xD6FD4C", VA = "0xD6FD4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F068C", Offset = "0x6F068C")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0xD6FE84", Offset = "0xD6FE84", VA = "0xD6FE84")]
		public WarpTextExample()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000070")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4000371")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x928988", Offset = "0x928988", VA = "0x928988")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x928A18", Offset = "0x928A18", VA = "0x928A18")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x600044C")]
		[Address(RVA = "0x928AA8", Offset = "0x928AA8", VA = "0x928AA8")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x928BA8", Offset = "0x928BA8", VA = "0x928BA8")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x928C38", Offset = "0x928C38", VA = "0x928C38")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x928CC8", Offset = "0x928CC8", VA = "0x928CC8")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x928D60", Offset = "0x928D60", VA = "0x928D60")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x928DF0", Offset = "0x928DF0", VA = "0x928DF0")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x928DFC", Offset = "0x928DFC", VA = "0x928DFC")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x928E38", Offset = "0x928E38", VA = "0x928E38")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x928E3C", Offset = "0x928E3C", VA = "0x928E3C")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x6000455")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000456")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000071")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x200035C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6E27FC", Offset = "0x6E27FC")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x200035D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x6E2810", Offset = "0x6E2810")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x200035E")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x200035F")]
		public struct GSALine
		{
			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x2000360")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x2000361")]
		public struct GSALegalData
		{
			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x400119E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x400119F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x40011A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x40011A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x40011A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x40011A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000362")]
		public struct GSARect
		{
			[Token(Token = "0x40011A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x40011A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x40011A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x40011A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x40011A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x40011A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40011AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40011AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x40011AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4000372")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x929170", Offset = "0x929170", VA = "0x929170")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000458")]
		[Address(RVA = "0x929220", Offset = "0x929220", VA = "0x929220")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x6000459")]
		[Address(RVA = "0x9292B0", Offset = "0x9292B0", VA = "0x9292B0")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x600045A")]
		[Address(RVA = "0x929354", Offset = "0x929354", VA = "0x929354")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x600045B")]
		[Address(RVA = "0x9293F8", Offset = "0x9293F8", VA = "0x9293F8")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x600045C")]
		[Address(RVA = "0x929498", Offset = "0x929498", VA = "0x929498")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x600045D")]
		[Address(RVA = "0x929538", Offset = "0x929538", VA = "0x929538")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x9295D0", Offset = "0x9295D0", VA = "0x9295D0")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x929670", Offset = "0x929670", VA = "0x929670")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x929710", Offset = "0x929710", VA = "0x929710")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000461")]
		[Address(RVA = "0x9297C0", Offset = "0x9297C0", VA = "0x9297C0")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x929888", Offset = "0x929888", VA = "0x929888")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x92988C", Offset = "0x92988C", VA = "0x92988C")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x929890", Offset = "0x929890", VA = "0x929890")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x929894", Offset = "0x929894", VA = "0x929894")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x929898", Offset = "0x929898", VA = "0x929898")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x92989C", Offset = "0x92989C", VA = "0x92989C")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x929924", Offset = "0x929924", VA = "0x929924")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x929928", Offset = "0x929928", VA = "0x929928")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x92992C", Offset = "0x92992C", VA = "0x92992C")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x929930", Offset = "0x929930", VA = "0x929930")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x929938", Offset = "0x929938", VA = "0x929938")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000072")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4000374")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4000375")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x1700004C")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x928E40", Offset = "0x928E40", VA = "0x928E40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x928F08", Offset = "0x928F08", VA = "0x928F08")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x928F0C", Offset = "0x928F0C", VA = "0x928F0C")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x928F10", Offset = "0x928F10", VA = "0x928F10")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x928F14", Offset = "0x928F14", VA = "0x928F14")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x928EBC", Offset = "0x928EBC", VA = "0x928EBC")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000363")]
		public struct ExtraInfo
		{
			[Token(Token = "0x40011AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x40011AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x40011AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x40011B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x40011B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x40011B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x40011B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000364")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x40011B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x40011B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x40011B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x40011B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x40011B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x40011B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40011BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40011BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x40011BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000365")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000366")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x1700004D")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x92B124", Offset = "0x92B124", VA = "0x92B124")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x92B1AC", Offset = "0x92B1AC", VA = "0x92B1AC")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x92B1B4", Offset = "0x92B1B4", VA = "0x92B1B4")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x92B1BC", Offset = "0x92B1BC", VA = "0x92B1BC")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x92B2DC", Offset = "0x92B2DC", VA = "0x92B2DC")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6000478")]
		[Address(RVA = "0x92B6A8", Offset = "0x92B6A8", VA = "0x92B6A8")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000479")]
		[Address(RVA = "0x92B72C", Offset = "0x92B72C", VA = "0x92B72C")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x600047A")]
		[Address(RVA = "0x92B780", Offset = "0x92B780", VA = "0x92B780")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x600047B")]
		[Address(RVA = "0x92A388", Offset = "0x92A388", VA = "0x92A388")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6F06F0", Offset = "0x6F06F0")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x600047C")]
		[Address(RVA = "0x92AA98", Offset = "0x92AA98", VA = "0x92AA98")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x6F0754", Offset = "0x6F0754")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x600047D")]
		[Address(RVA = "0x92B1A4", Offset = "0x92B1A4", VA = "0x92B1A4")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000074")]
	public class PvrControllerKey
	{
		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x600047E")]
		[Address(RVA = "0xA72814", Offset = "0xA72814", VA = "0xA72814")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000075")]
	public class ControllerHand
	{
		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x600047F")]
		[Address(RVA = "0xA7262C", Offset = "0xA7262C", VA = "0xA7262C")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000076")]
	public enum ControllerState
	{
		[Token(Token = "0x400039A")]
		Error = -1,
		[Token(Token = "0x400039B")]
		DisConnected,
		[Token(Token = "0x400039C")]
		Connected
	}
	[Token(Token = "0x2000077")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x400039E")]
		APP = 1,
		[Token(Token = "0x400039F")]
		TOUCHPAD,
		[Token(Token = "0x40003A0")]
		HOME,
		[Token(Token = "0x40003A1")]
		VOLUMEUP,
		[Token(Token = "0x40003A2")]
		VOLUMEDOWN,
		[Token(Token = "0x40003A3")]
		TRIGGER,
		[Token(Token = "0x40003A4")]
		A,
		[Token(Token = "0x40003A5")]
		B,
		[Token(Token = "0x40003A6")]
		X,
		[Token(Token = "0x40003A7")]
		Y,
		[Token(Token = "0x40003A8")]
		Left,
		[Token(Token = "0x40003A9")]
		Right,
		[Token(Token = "0x40003AA")]
		Thumbrest
	}
	[Token(Token = "0x2000078")]
	public enum SwipeDirection
	{
		[Token(Token = "0x40003AC")]
		No,
		[Token(Token = "0x40003AD")]
		SwipeUp,
		[Token(Token = "0x40003AE")]
		SwipeDown,
		[Token(Token = "0x40003AF")]
		SwipeLeft,
		[Token(Token = "0x40003B0")]
		SwipeRight
	}
	[Token(Token = "0x2000079")]
	public enum TouchPadClick
	{
		[Token(Token = "0x40003B2")]
		No,
		[Token(Token = "0x40003B3")]
		ClickUp,
		[Token(Token = "0x40003B4")]
		ClickDown,
		[Token(Token = "0x40003B5")]
		ClickLeft,
		[Token(Token = "0x40003B6")]
		ClickRight
	}
	[Token(Token = "0x200007A")]
	public struct Controller
	{
		[Token(Token = "0x40003B7")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x6000480")]
		[Address(RVA = "0xA5F358", Offset = "0xA5F358", VA = "0xA5F358")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000481")]
		[Address(RVA = "0xA6E40C", Offset = "0xA6E40C", VA = "0xA6E40C")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0xA6E5BC", Offset = "0xA6E5BC", VA = "0xA6E5BC")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0xA6E878", Offset = "0xA6E878", VA = "0xA6E878")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0xA6E98C", Offset = "0xA6E98C", VA = "0xA6E98C")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0xA6EAB8", Offset = "0xA6EAB8", VA = "0xA6EAB8")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0xA6EBE0", Offset = "0xA6EBE0", VA = "0xA6EBE0")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0xA6ECC0", Offset = "0xA6ECC0", VA = "0xA6ECC0")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0xA6EDA0", Offset = "0xA6EDA0", VA = "0xA6EDA0")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0xA6EE80", Offset = "0xA6EE80", VA = "0xA6EE80")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0xA5DE44", Offset = "0xA5DE44", VA = "0xA5DE44")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0xA5E484", Offset = "0xA5E484", VA = "0xA5E484")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0xA6EF60", Offset = "0xA6EF60", VA = "0xA6EF60")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0xA6F5A0", Offset = "0xA6F5A0", VA = "0xA6F5A0")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0xA6F970", Offset = "0xA6F970", VA = "0xA6F970")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0xA6FD40", Offset = "0xA6FD40", VA = "0xA6FD40")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0xA70110", Offset = "0xA70110", VA = "0xA70110")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0xA70750", Offset = "0xA70750", VA = "0xA70750")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0xA5FA98", Offset = "0xA5FA98", VA = "0xA5FA98")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0xA70D90", Offset = "0xA70D90", VA = "0xA70D90")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0xA70E70", Offset = "0xA70E70", VA = "0xA70E70")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0xA70EE8", Offset = "0xA70EE8", VA = "0xA70EE8")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xA70FD4", Offset = "0xA70FD4", VA = "0xA70FD4")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xA71050", Offset = "0xA71050", VA = "0xA71050")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xA5DDCC", Offset = "0xA5DDCC", VA = "0xA5DDCC")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xA710C8", Offset = "0xA710C8", VA = "0xA710C8")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xA7114C", Offset = "0xA7114C", VA = "0xA7114C")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xA711D0", Offset = "0xA711D0", VA = "0xA711D0")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x600049C")]
		[Address(RVA = "0xA71274", Offset = "0xA71274", VA = "0xA71274")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0xA712F8", Offset = "0xA712F8", VA = "0xA712F8")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0xA7137C", Offset = "0xA7137C", VA = "0xA7137C")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xA71400", Offset = "0xA71400", VA = "0xA71400")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xA71484", Offset = "0xA71484", VA = "0xA71484")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xA71500", Offset = "0xA71500", VA = "0xA71500")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xA7157C", Offset = "0xA7157C", VA = "0xA7157C")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xA71654", Offset = "0xA71654", VA = "0xA71654")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xA716D0", Offset = "0xA716D0", VA = "0xA716D0")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xA71754", Offset = "0xA71754", VA = "0xA71754")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xA717D0", Offset = "0xA717D0", VA = "0xA717D0")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xA71854", Offset = "0xA71854", VA = "0xA71854")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xA718D8", Offset = "0xA718D8", VA = "0xA718D8")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xA7195C", Offset = "0xA7195C", VA = "0xA7195C")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xA719D8", Offset = "0xA719D8", VA = "0xA719D8")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xA71A54", Offset = "0xA71A54", VA = "0xA71A54")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xA71AE8", Offset = "0xA71AE8", VA = "0xA71AE8")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xA71B6C", Offset = "0xA71B6C", VA = "0xA71B6C")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xA71BF0", Offset = "0xA71BF0", VA = "0xA71BF0")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xA71C6C", Offset = "0xA71C6C", VA = "0xA71C6C")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xA71CE8", Offset = "0xA71CE8", VA = "0xA71CE8")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xA71D64", Offset = "0xA71D64", VA = "0xA71D64")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xA71DE8", Offset = "0xA71DE8", VA = "0xA71DE8")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x76A14C", Offset = "0x76A14C", VA = "0x76A14C")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x76A150", Offset = "0x76A150", VA = "0x76A150")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x76A154", Offset = "0x76A154", VA = "0x76A154")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xA71FE8", Offset = "0xA71FE8", VA = "0xA71FE8")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xA720C4", Offset = "0xA720C4", VA = "0xA720C4")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xA72198", Offset = "0xA72198", VA = "0xA72198")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xA7225C", Offset = "0xA7225C", VA = "0xA7225C")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xA7231C", Offset = "0xA7231C", VA = "0xA7231C")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xA723DC", Offset = "0xA723DC", VA = "0xA723DC")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xA724A0", Offset = "0xA724A0", VA = "0xA724A0")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xA72524", Offset = "0xA72524", VA = "0xA72524")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xA725A8", Offset = "0xA725A8", VA = "0xA725A8")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xA720C8", Offset = "0xA720C8", VA = "0xA720C8")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xA7219C", Offset = "0xA7219C", VA = "0xA7219C")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xA72260", Offset = "0xA72260", VA = "0xA72260")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xA72320", Offset = "0xA72320", VA = "0xA72320")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xA723E0", Offset = "0xA723E0", VA = "0xA723E0")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xA71FEC", Offset = "0xA71FEC", VA = "0xA71FEC")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x200007B")]
	public enum ControllerVariety
	{
		[Token(Token = "0x40003B9")]
		Controller0,
		[Token(Token = "0x40003BA")]
		Controller1
	}
	[Token(Token = "0x200007C")]
	public enum ControllerDevice
	{
		[Token(Token = "0x40003BC")]
		Goblin,
		[Token(Token = "0x40003BD")]
		Neo,
		[Token(Token = "0x40003BE")]
		G2,
		[Token(Token = "0x40003BF")]
		Neo2,
		[Token(Token = "0x40003C0")]
		Neo3,
		[Token(Token = "0x40003C1")]
		NewController
	}
	[Token(Token = "0x200007D")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x40003C3")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x40003C4")]
		PUI_VERSION,
		[Token(Token = "0x40003C5")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x40003C6")]
		EQUIPMENT_SN,
		[Token(Token = "0x40003C7")]
		CUSTOMER_SN,
		[Token(Token = "0x40003C8")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x40003C9")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x40003CA")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x40003CB")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x40003CC")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x40003CD")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x40003CE")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x40003CF")]
		DEVICE_IP
	}
	[Token(Token = "0x200007E")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x40003D1")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x40003D2")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x200007F")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x40003D4")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x40003D5")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000080")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x40003D7")]
		S_ON,
		[Token(Token = "0x40003D8")]
		S_OFF
	}
	[Token(Token = "0x2000081")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x40003DA")]
		SINGLE_CLICK,
		[Token(Token = "0x40003DB")]
		DOUBLE_CLICK,
		[Token(Token = "0x40003DC")]
		LONG_PRESS
	}
	[Token(Token = "0x2000082")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x40003DE")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x40003DF")]
		VALUE_HOME_BACK,
		[Token(Token = "0x40003E0")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x40003E1")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x40003E2")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x40003E3")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x40003E4")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x40003E5")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x2000083")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x40003E7")]
		THREE = 3,
		[Token(Token = "0x40003E8")]
		TEN = 10,
		[Token(Token = "0x40003E9")]
		THIRTY = 30,
		[Token(Token = "0x40003EA")]
		SIXTY = 60,
		[Token(Token = "0x40003EB")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40003EC")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40003ED")]
		NEVER = -1
	}
	[Token(Token = "0x2000084")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x40003EF")]
		FIFTEEN = 15,
		[Token(Token = "0x40003F0")]
		THIRTY = 30,
		[Token(Token = "0x40003F1")]
		SIXTY = 60,
		[Token(Token = "0x40003F2")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x40003F3")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x40003F4")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x40003F5")]
		NEVER = -1
	}
	[Token(Token = "0x2000085")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x40003F7")]
		SFS_USB,
		[Token(Token = "0x40003F8")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x40003F9")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x40003FA")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x40003FB")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x40003FC")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x40003FD")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x40003FE")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x40003FF")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4000400")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4000401")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4000402")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4000403")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4000404")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x2000086")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4000406")]
		MTP,
		[Token(Token = "0x4000407")]
		CHARGE
	}
	[Token(Token = "0x2000087")]
	public struct ToBService
	{
		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xD98540", Offset = "0xD98540", VA = "0xD98540")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xD98684", Offset = "0xD98684", VA = "0xD98684")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xD98764", Offset = "0xD98764", VA = "0xD98764")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xD9884C", Offset = "0xD9884C", VA = "0xD9884C")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xD98934", Offset = "0xD98934", VA = "0xD98934")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xD98A64", Offset = "0xD98A64", VA = "0xD98A64")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xD98BF4", Offset = "0xD98BF4", VA = "0xD98BF4")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xD98D0C", Offset = "0xD98D0C", VA = "0xD98D0C")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xD98EDC", Offset = "0xD98EDC", VA = "0xD98EDC")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xD99094", Offset = "0xD99094", VA = "0xD99094")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xD99114", Offset = "0xD99114", VA = "0xD99114")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xD992AC", Offset = "0xD992AC", VA = "0xD992AC")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xD99554", Offset = "0xD99554", VA = "0xD99554")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xD996CC", Offset = "0xD996CC", VA = "0xD996CC")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xD997E4", Offset = "0xD997E4", VA = "0xD997E4")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xD998EC", Offset = "0xD998EC", VA = "0xD998EC")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xD99ACC", Offset = "0xD99ACC", VA = "0xD99ACC")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xD99C38", Offset = "0xD99C38", VA = "0xD99C38")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xD99CB0", Offset = "0xD99CB0", VA = "0xD99CB0")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xD99D28", Offset = "0xD99D28", VA = "0xD99D28")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xD99DA0", Offset = "0xD99DA0", VA = "0xD99DA0")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xD99E18", Offset = "0xD99E18", VA = "0xD99E18")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xD99E90", Offset = "0xD99E90", VA = "0xD99E90")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xD99F08", Offset = "0xD99F08", VA = "0xD99F08")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xD99F80", Offset = "0xD99F80", VA = "0xD99F80")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xD99FF8", Offset = "0xD99FF8", VA = "0xD99FF8")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xD9A070", Offset = "0xD9A070", VA = "0xD9A070")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xD9A0E8", Offset = "0xD9A0E8", VA = "0xD9A0E8")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xD9A230", Offset = "0xD9A230", VA = "0xD9A230")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x2000088")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4000410")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4000411")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4000412")]
		SEENSOR_COUNT,
		[Token(Token = "0x4000413")]
		ABILITY6DOF,
		[Token(Token = "0x4000414")]
		PLATFORM_TYPE,
		[Token(Token = "0x4000415")]
		TRACKING_MODE,
		[Token(Token = "0x4000416")]
		LOG_LEVEL,
		[Token(Token = "0x4000417")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4000418")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4000419")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x400041A")]
		iShowFPS,
		[Token(Token = "0x400041B")]
		SensorMode,
		[Token(Token = "0x400041C")]
		LOGICFLOW,
		[Token(Token = "0x400041D")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x400041E")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x400041F")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4000420")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4000421")]
		isEnableBoundary,
		[Token(Token = "0x4000422")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4000423")]
		GetDisplay_Orientation,
		[Token(Token = "0x4000424")]
		GetWaitFrameNum,
		[Token(Token = "0x4000425")]
		GetResetFrameNum,
		[Token(Token = "0x4000426")]
		EnableFFRBYSYS,
		[Token(Token = "0x4000427")]
		RotControllerMode
	}
	[Token(Token = "0x2000089")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4000429")]
		IPD,
		[Token(Token = "0x400042A")]
		VFOV,
		[Token(Token = "0x400042B")]
		HFOV,
		[Token(Token = "0x400042C")]
		NECK_MODEL_X,
		[Token(Token = "0x400042D")]
		NECK_MODEL_Y,
		[Token(Token = "0x400042E")]
		NECK_MODEL_Z,
		[Token(Token = "0x400042F")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x200008A")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4000431")]
		X_1 = 1,
		[Token(Token = "0x4000432")]
		X_2 = 2,
		[Token(Token = "0x4000433")]
		X_4 = 4,
		[Token(Token = "0x4000434")]
		X_8 = 8
	}
	[Token(Token = "0x200008B")]
	public enum PlatForm
	{
		[Token(Token = "0x4000436")]
		Android = 1,
		[Token(Token = "0x4000437")]
		IOS,
		[Token(Token = "0x4000438")]
		Win,
		[Token(Token = "0x4000439")]
		Notsupport
	}
	[Token(Token = "0x200008C")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x400043B")]
		BD_0 = 0,
		[Token(Token = "0x400043C")]
		BD_16 = 16,
		[Token(Token = "0x400043D")]
		BD_24 = 24
	}
	[Token(Token = "0x200008D")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x400043F")]
		Normal,
		[Token(Token = "0x4000440")]
		High
	}
	[Token(Token = "0x200008E")]
	public enum Sensorindex
	{
		[Token(Token = "0x4000442")]
		Default,
		[Token(Token = "0x4000443")]
		FirstSensor,
		[Token(Token = "0x4000444")]
		SecondSensor
	}
	[Token(Token = "0x200008F")]
	public enum Eye
	{
		[Token(Token = "0x4000446")]
		LeftEye,
		[Token(Token = "0x4000447")]
		RightEye,
		[Token(Token = "0x4000448")]
		BothEye
	}
	[Token(Token = "0x2000090")]
	public enum ResUtilsType
	{
		[Token(Token = "0x400044A")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x400044B")]
		TYPE_COLOR,
		[Token(Token = "0x400044C")]
		TYPE_TEXT,
		[Token(Token = "0x400044D")]
		TYPE_FONT,
		[Token(Token = "0x400044E")]
		TYPE_VALUE,
		[Token(Token = "0x400044F")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4000450")]
		TYPE_OBJECT,
		[Token(Token = "0x4000451")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x2000091")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4000453")]
		EyeLevel,
		[Token(Token = "0x4000454")]
		FloorLevel,
		[Token(Token = "0x4000455")]
		StageLevel
	}
	[Token(Token = "0x2000092")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4000457")]
		Low,
		[Token(Token = "0x4000458")]
		Med,
		[Token(Token = "0x4000459")]
		High,
		[Token(Token = "0x400045A")]
		Top_High
	}
	[Token(Token = "0x2000093")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x400045C")]
		MultiPass,
		[Token(Token = "0x400045D")]
		SinglePass
	}
	[Token(Token = "0x2000094")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x400045F")]
		kGazePointValid = 1,
		[Token(Token = "0x4000460")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4000461")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4000462")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4000463")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x2000095")]
	public enum TrackingMode
	{
		[Token(Token = "0x4000465")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4000466")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4000467")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x2000096")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x2000097")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x2000098")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x2000099")]
	public struct ViewFrustum
	{
		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x200009A")]
	public struct EyeSetting
	{
		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x200009B")]
	public struct Sensor
	{
		[Token(Token = "0x400048B")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xA75750", Offset = "0xA75750", VA = "0xA75750")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xA757F0", Offset = "0xA757F0", VA = "0xA757F0")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xA758A4", Offset = "0xA758A4", VA = "0xA758A4")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xA75944", Offset = "0xA75944", VA = "0xA75944")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xA759E4", Offset = "0xA759E4", VA = "0xA759E4")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xA75A84", Offset = "0xA75A84", VA = "0xA75A84")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xA75B24", Offset = "0xA75B24", VA = "0xA75B24")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xA75BC4", Offset = "0xA75BC4", VA = "0xA75BC4")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xA75CBC", Offset = "0xA75CBC", VA = "0xA75CBC")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xA75DBC", Offset = "0xA75DBC", VA = "0xA75DBC")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xA75E4C", Offset = "0xA75E4C", VA = "0xA75E4C")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xA75EDC", Offset = "0xA75EDC", VA = "0xA75EDC")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xA75FA4", Offset = "0xA75FA4", VA = "0xA75FA4")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xA7606C", Offset = "0xA7606C", VA = "0xA7606C")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xA760FC", Offset = "0xA760FC", VA = "0xA760FC")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xA76194", Offset = "0xA76194", VA = "0xA76194")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xA762A4", Offset = "0xA762A4", VA = "0xA762A4")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xA7634C", Offset = "0xA7634C", VA = "0xA7634C")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xA76350", Offset = "0xA76350", VA = "0xA76350")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xA76354", Offset = "0xA76354", VA = "0xA76354")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xA76558", Offset = "0xA76558", VA = "0xA76558")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xA76744", Offset = "0xA76744", VA = "0xA76744")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xA76748", Offset = "0xA76748", VA = "0xA76748")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xA768C4", Offset = "0xA768C4", VA = "0xA768C4")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xA768C8", Offset = "0xA768C8", VA = "0xA768C8")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xA768CC", Offset = "0xA768CC", VA = "0xA768CC")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xA7694C", Offset = "0xA7694C", VA = "0xA7694C")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xA76950", Offset = "0xA76950", VA = "0xA76950")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xA76954", Offset = "0xA76954", VA = "0xA76954")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xA76960", Offset = "0xA76960", VA = "0xA76960")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xA76964", Offset = "0xA76964", VA = "0xA76964")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xA76968", Offset = "0xA76968", VA = "0xA76968")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xA7696C", Offset = "0xA7696C", VA = "0xA7696C")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xA76358", Offset = "0xA76358", VA = "0xA76358")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xA76BF0", Offset = "0xA76BF0", VA = "0xA76BF0")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xA765AC", Offset = "0xA765AC", VA = "0xA765AC")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xA7674C", Offset = "0xA7674C", VA = "0xA7674C")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xA76E2C", Offset = "0xA76E2C", VA = "0xA76E2C")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xA76E30", Offset = "0xA76E30", VA = "0xA76E30")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xA77384", Offset = "0xA77384", VA = "0xA77384")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200009C")]
	public struct Render
	{
		[Token(Token = "0x400048C")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600050A")]
		[Address(RVA = "0xA73884", Offset = "0xA73884", VA = "0xA73884")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xA73974", Offset = "0xA73974", VA = "0xA73974")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x600050C")]
		[Address(RVA = "0xA73A1C", Offset = "0xA73A1C", VA = "0xA73A1C")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x600050D")]
		[Address(RVA = "0xA73ABC", Offset = "0xA73ABC", VA = "0xA73ABC")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x600050E")]
		[Address(RVA = "0xA73B4C", Offset = "0xA73B4C", VA = "0xA73B4C")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x600050F")]
		[Address(RVA = "0xA73BFC", Offset = "0xA73BFC", VA = "0xA73BFC")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xA73CA8", Offset = "0xA73CA8", VA = "0xA73CA8")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x6000511")]
		[Address(RVA = "0xA73D54", Offset = "0xA73D54", VA = "0xA73D54")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000512")]
		[Address(RVA = "0xA73E3C", Offset = "0xA73E3C", VA = "0xA73E3C")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x6000513")]
		[Address(RVA = "0xA73F3C", Offset = "0xA73F3C", VA = "0xA73F3C")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x6000514")]
		[Address(RVA = "0xA7409C", Offset = "0xA7409C", VA = "0xA7409C")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000515")]
		[Address(RVA = "0xA74144", Offset = "0xA74144", VA = "0xA74144")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000516")]
		[Address(RVA = "0xA7423C", Offset = "0xA7423C", VA = "0xA7423C")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xA74304", Offset = "0xA74304", VA = "0xA74304")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xA743C8", Offset = "0xA743C8", VA = "0xA743C8")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xA74468", Offset = "0xA74468", VA = "0xA74468")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xA744F8", Offset = "0xA744F8", VA = "0xA744F8")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xA745C4", Offset = "0xA745C4", VA = "0xA745C4")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xA74664", Offset = "0xA74664", VA = "0xA74664")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x600051D")]
		[Address(RVA = "0xA74704", Offset = "0xA74704", VA = "0xA74704")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xA747B4", Offset = "0xA747B4", VA = "0xA747B4")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xA74864", Offset = "0xA74864", VA = "0xA74864")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xA74904", Offset = "0xA74904", VA = "0xA74904")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xA749D4", Offset = "0xA749D4", VA = "0xA749D4")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xA749D8", Offset = "0xA749D8", VA = "0xA749D8")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xA749DC", Offset = "0xA749DC", VA = "0xA749DC")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xA74AA4", Offset = "0xA74AA4", VA = "0xA74AA4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6F07B8", Offset = "0x6F07B8")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xA74AA8", Offset = "0xA74AA8", VA = "0xA74AA8")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xA74AAC", Offset = "0xA74AAC", VA = "0xA74AAC")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xA74BD0", Offset = "0xA74BD0", VA = "0xA74BD0")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xA74BD4", Offset = "0xA74BD4", VA = "0xA74BD4")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xA74D28", Offset = "0xA74D28", VA = "0xA74D28")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xA74D2C", Offset = "0xA74D2C", VA = "0xA74D2C")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xA74D30", Offset = "0xA74D30", VA = "0xA74D30")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xA74D34", Offset = "0xA74D34", VA = "0xA74D34")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xA74DC0", Offset = "0xA74DC0", VA = "0xA74DC0")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xA74DC4", Offset = "0xA74DC4", VA = "0xA74DC4")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xA74F98", Offset = "0xA74F98", VA = "0xA74F98")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xA74F9C", Offset = "0xA74F9C", VA = "0xA74F9C")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xA75738", Offset = "0xA75738", VA = "0xA75738")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xA7573C", Offset = "0xA7573C", VA = "0xA7573C")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xA75740", Offset = "0xA75740", VA = "0xA75740")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xA75744", Offset = "0xA75744", VA = "0xA75744")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xA75748", Offset = "0xA75748", VA = "0xA75748")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xA65F08", Offset = "0xA65F08", VA = "0xA65F08")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x200009D")]
	public struct System
	{
		[Token(Token = "0x400048D")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x400048E")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6000537")]
		[Address(RVA = "0xA77388", Offset = "0xA77388", VA = "0xA77388")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6000538")]
		[Address(RVA = "0xA77438", Offset = "0xA77438", VA = "0xA77438")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6000539")]
		[Address(RVA = "0xA774C8", Offset = "0xA774C8", VA = "0xA774C8")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x600053A")]
		[Address(RVA = "0xA77558", Offset = "0xA77558", VA = "0xA77558")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x600053B")]
		[Address(RVA = "0xA775E8", Offset = "0xA775E8", VA = "0xA775E8")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x600053C")]
		[Address(RVA = "0xA77678", Offset = "0xA77678", VA = "0xA77678")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x600053D")]
		[Address(RVA = "0xA77708", Offset = "0xA77708", VA = "0xA77708")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x600053E")]
		[Address(RVA = "0xA77798", Offset = "0xA77798", VA = "0xA77798")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x600053F")]
		[Address(RVA = "0xA77838", Offset = "0xA77838", VA = "0xA77838")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x6000540")]
		[Address(RVA = "0xA77990", Offset = "0xA77990", VA = "0xA77990")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x6000541")]
		[Address(RVA = "0xA77A38", Offset = "0xA77A38", VA = "0xA77A38")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x6000542")]
		[Address(RVA = "0xA77AC8", Offset = "0xA77AC8", VA = "0xA77AC8")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6000543")]
		[Address(RVA = "0xA77B58", Offset = "0xA77B58", VA = "0xA77B58")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x6000544")]
		[Address(RVA = "0xA77BF8", Offset = "0xA77BF8", VA = "0xA77BF8")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xA77CA0", Offset = "0xA77CA0", VA = "0xA77CA0")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xA77D40", Offset = "0xA77D40", VA = "0xA77D40")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6000547")]
		[Address(RVA = "0xA77DD0", Offset = "0xA77DD0", VA = "0xA77DD0")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6000548")]
		[Address(RVA = "0xA77E70", Offset = "0xA77E70", VA = "0xA77E70")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6000549")]
		[Address(RVA = "0xA77F28", Offset = "0xA77F28", VA = "0xA77F28")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x600054A")]
		[Address(RVA = "0xA77FD8", Offset = "0xA77FD8", VA = "0xA77FD8")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x600054B")]
		[Address(RVA = "0xA78084", Offset = "0xA78084", VA = "0xA78084")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x600054C")]
		[Address(RVA = "0xA78114", Offset = "0xA78114", VA = "0xA78114")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x600054D")]
		[Address(RVA = "0xA781BC", Offset = "0xA781BC", VA = "0xA781BC")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x600054E")]
		[Address(RVA = "0xA78254", Offset = "0xA78254", VA = "0xA78254")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xA737F4", Offset = "0xA737F4", VA = "0xA737F4")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x6000550")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xA76974", Offset = "0xA76974", VA = "0xA76974")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000552")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xA782FC", Offset = "0xA782FC", VA = "0xA782FC")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xA78578", Offset = "0xA78578", VA = "0xA78578")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xA7860C", Offset = "0xA7860C", VA = "0xA7860C")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xA78654", Offset = "0xA78654", VA = "0xA78654")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0xA7865C", Offset = "0xA7865C", VA = "0xA7865C")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xA72A78", Offset = "0xA72A78", VA = "0xA72A78")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0xA72E30", Offset = "0xA72E30", VA = "0xA72E30")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xA78664", Offset = "0xA78664", VA = "0xA78664")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xA786D0", Offset = "0xA786D0", VA = "0xA786D0")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xA78760", Offset = "0xA78760", VA = "0xA78760")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0xA787F0", Offset = "0xA787F0", VA = "0xA787F0")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xA7887C", Offset = "0xA7887C", VA = "0xA7887C")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0xA78B24", Offset = "0xA78B24", VA = "0xA78B24")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0xA78D7C", Offset = "0xA78D7C", VA = "0xA78D7C")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0xA78E08", Offset = "0xA78E08", VA = "0xA78E08")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0xA78E94", Offset = "0xA78E94", VA = "0xA78E94")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0xA78F20", Offset = "0xA78F20", VA = "0xA78F20")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0xA79040", Offset = "0xA79040", VA = "0xA79040")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0xA790CC", Offset = "0xA790CC", VA = "0xA790CC")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0xA791F0", Offset = "0xA791F0", VA = "0xA791F0")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xA79348", Offset = "0xA79348", VA = "0xA79348")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xA79408", Offset = "0xA79408", VA = "0xA79408")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xA79410", Offset = "0xA79410", VA = "0xA79410")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xA79414", Offset = "0xA79414", VA = "0xA79414")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xA6DF5C", Offset = "0xA6DF5C", VA = "0xA6DF5C")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xA79418", Offset = "0xA79418", VA = "0xA79418")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0xA79498", Offset = "0xA79498", VA = "0xA79498")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xA795F8", Offset = "0xA795F8", VA = "0xA795F8")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0xA795FC", Offset = "0xA795FC", VA = "0xA795FC")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0xA79690", Offset = "0xA79690", VA = "0xA79690")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xA79724", Offset = "0xA79724", VA = "0xA79724")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xA79728", Offset = "0xA79728", VA = "0xA79728")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xA7972C", Offset = "0xA7972C", VA = "0xA7972C")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xA79734", Offset = "0xA79734", VA = "0xA79734")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xA79738", Offset = "0xA79738", VA = "0xA79738")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xA7973C", Offset = "0xA7973C", VA = "0xA7973C")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xA799AC", Offset = "0xA799AC", VA = "0xA799AC")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xA79C20", Offset = "0xA79C20", VA = "0xA79C20")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xA79F3C", Offset = "0xA79F3C", VA = "0xA79F3C")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xA7A09C", Offset = "0xA7A09C", VA = "0xA7A09C")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xA7A1B4", Offset = "0xA7A1B4", VA = "0xA7A1B4")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xA7A324", Offset = "0xA7A324", VA = "0xA7A324")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xA7A5F4", Offset = "0xA7A5F4", VA = "0xA7A5F4")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xA7A5FC", Offset = "0xA7A5FC", VA = "0xA7A5FC")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xA7A600", Offset = "0xA7A600", VA = "0xA7A600")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xA7A604", Offset = "0xA7A604", VA = "0xA7A604")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xA7A608", Offset = "0xA7A608", VA = "0xA7A608")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xA7A60C", Offset = "0xA7A60C", VA = "0xA7A60C")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xA7A610", Offset = "0xA7A610", VA = "0xA7A610")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xA7A804", Offset = "0xA7A804", VA = "0xA7A804")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xA7A9F8", Offset = "0xA7A9F8", VA = "0xA7A9F8")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xA7ABF4", Offset = "0xA7ABF4", VA = "0xA7ABF4")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xA7ADF0", Offset = "0xA7ADF0", VA = "0xA7ADF0")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xA5D444", Offset = "0xA5D444", VA = "0xA5D444")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xA7AFE4", Offset = "0xA7AFE4", VA = "0xA7AFE4")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xA7B258", Offset = "0xA7B258", VA = "0xA7B258")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xA7B4C4", Offset = "0xA7B4C4", VA = "0xA7B4C4")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xA7B6B8", Offset = "0xA7B6B8", VA = "0xA7B6B8")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xA7B92C", Offset = "0xA7B92C", VA = "0xA7B92C")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200009E")]
	public struct BoundarySystem
	{
		[Token(Token = "0x2000367")]
		public enum BoundaryType
		{
			[Token(Token = "0x40011BE")]
			OuterBoundary,
			[Token(Token = "0x40011BF")]
			PlayArea
		}

		[Token(Token = "0x2000368")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x2000369")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x40011C5")]
			HandLeft,
			[Token(Token = "0x40011C6")]
			HandRight,
			[Token(Token = "0x40011C7")]
			Head
		}

		[Token(Token = "0x200036A")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40011C9")]
			PVR_NOREASON,
			[Token(Token = "0x40011CA")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40011CB")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40011CC")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40011CD")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40011CE")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x400048F")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600058E")]
		[Address(RVA = "0xA6C7B4", Offset = "0xA6C7B4", VA = "0xA6C7B4")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x600058F")]
		[Address(RVA = "0xA6C844", Offset = "0xA6C844", VA = "0xA6C844")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x6000590")]
		[Address(RVA = "0xA6C8D4", Offset = "0xA6C8D4", VA = "0xA6C8D4")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6000591")]
		[Address(RVA = "0xA6C974", Offset = "0xA6C974", VA = "0xA6C974")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6000592")]
		[Address(RVA = "0xA6CA04", Offset = "0xA6CA04", VA = "0xA6CA04")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6000593")]
		[Address(RVA = "0xA6CA9C", Offset = "0xA6CA9C", VA = "0xA6CA9C")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6000594")]
		[Address(RVA = "0xA6CB34", Offset = "0xA6CB34", VA = "0xA6CB34")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6000595")]
		[Address(RVA = "0xA6CBCC", Offset = "0xA6CBCC", VA = "0xA6CBCC")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000596")]
		[Address(RVA = "0xA6CCEC", Offset = "0xA6CCEC", VA = "0xA6CCEC")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6000597")]
		[Address(RVA = "0xA6CE34", Offset = "0xA6CE34", VA = "0xA6CE34")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000598")]
		[Address(RVA = "0xA6CEE0", Offset = "0xA6CEE0", VA = "0xA6CEE0")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6000599")]
		[Address(RVA = "0xA6CFA8", Offset = "0xA6CFA8", VA = "0xA6CFA8")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x600059A")]
		[Address(RVA = "0xA6D040", Offset = "0xA6D040", VA = "0xA6D040")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600059B")]
		[Address(RVA = "0xA6D0E0", Offset = "0xA6D0E0", VA = "0xA6D0E0")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x600059C")]
		[Address(RVA = "0xA6D178", Offset = "0xA6D178", VA = "0xA6D178")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x600059D")]
		[Address(RVA = "0xA6D220", Offset = "0xA6D220", VA = "0xA6D220")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x600059E")]
		[Address(RVA = "0xA6D2D8", Offset = "0xA6D2D8", VA = "0xA6D2D8")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600059F")]
		[Address(RVA = "0xA6D378", Offset = "0xA6D378", VA = "0xA6D378")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xA6D428", Offset = "0xA6D428", VA = "0xA6D428")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xA6D4C8", Offset = "0xA6D4C8", VA = "0xA6D4C8")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xA6D558", Offset = "0xA6D558", VA = "0xA6D558")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xA6D55C", Offset = "0xA6D55C", VA = "0xA6D55C")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xA6D560", Offset = "0xA6D560", VA = "0xA6D560")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xA6D568", Offset = "0xA6D568", VA = "0xA6D568")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xA6D56C", Offset = "0xA6D56C", VA = "0xA6D56C")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xA6D570", Offset = "0xA6D570", VA = "0xA6D570")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xA6D574", Offset = "0xA6D574", VA = "0xA6D574")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xA6D578", Offset = "0xA6D578", VA = "0xA6D578")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xA6D6BC", Offset = "0xA6D6BC", VA = "0xA6D6BC")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xA6D80C", Offset = "0xA6D80C", VA = "0xA6D80C")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xA6DA64", Offset = "0xA6DA64", VA = "0xA6DA64")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xA6DAC0", Offset = "0xA6DAC0", VA = "0xA6DAC0")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xA6DAC4", Offset = "0xA6DAC4", VA = "0xA6DAC4")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xA6DACC", Offset = "0xA6DACC", VA = "0xA6DACC")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xA6DAD0", Offset = "0xA6DAD0", VA = "0xA6DAD0")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xA6DAD8", Offset = "0xA6DAD8", VA = "0xA6DAD8")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xA6DADC", Offset = "0xA6DADC", VA = "0xA6DADC")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xA6DC24", Offset = "0xA6DC24", VA = "0xA6DC24")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xA6DD6C", Offset = "0xA6DD6C", VA = "0xA6DD6C")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xA6DF60", Offset = "0xA6DF60", VA = "0xA6DF60")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xA6E09C", Offset = "0xA6E09C", VA = "0xA6E09C")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xA6E1C4", Offset = "0xA6E1C4", VA = "0xA6E1C4")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xA6E2EC", Offset = "0xA6E2EC", VA = "0xA6E2EC")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200009F")]
	public struct PlatformSettings
	{
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xA7283C", Offset = "0xA7283C", VA = "0xA7283C")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xA72B2C", Offset = "0xA72B2C", VA = "0xA72B2C")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xA72EBC", Offset = "0xA72EBC", VA = "0xA72EBC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x6F07F0", Offset = "0x6F07F0")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xA731C0", Offset = "0xA731C0", VA = "0xA731C0")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xA734D8", Offset = "0xA734D8", VA = "0xA734D8")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xA737F0", Offset = "0xA737F0", VA = "0xA737F0")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000A0")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4000491")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4000492")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x20000A1")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4000494")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4000495")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4000496")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4000497")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4000498")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x20000A2")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4000499")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xD9A2B0", Offset = "0xD9A2B0", VA = "0xD9A2B0")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xD9A360", Offset = "0xD9A360", VA = "0xD9A360")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xD9A3F8", Offset = "0xD9A3F8", VA = "0xD9A3F8")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xD9A488", Offset = "0xD9A488", VA = "0xD9A488")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xD9A530", Offset = "0xD9A530", VA = "0xD9A530")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xD9A534", Offset = "0xD9A534", VA = "0xD9A534")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xD9A538", Offset = "0xD9A538", VA = "0xD9A538")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xD9A53C", Offset = "0xD9A53C", VA = "0xD9A53C")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xD9A7E8", Offset = "0xD9A7E8", VA = "0xD9A7E8")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xD9AA18", Offset = "0xD9AA18", VA = "0xD9AA18")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xD9ABA8", Offset = "0xD9ABA8", VA = "0xD9ABA8")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xD9ADFC", Offset = "0xD9ADFC", VA = "0xD9ADFC")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xD9AF84", Offset = "0xD9AF84", VA = "0xD9AF84")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xD9B0C8", Offset = "0xD9B0C8", VA = "0xD9B0C8")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xD9B398", Offset = "0xD9B398", VA = "0xD9B398")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xD9B688", Offset = "0xD9B688", VA = "0xD9B688")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xD9B8DC", Offset = "0xD9B8DC", VA = "0xD9B8DC")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xD9A574", Offset = "0xD9A574", VA = "0xD9A574")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xD9A808", Offset = "0xD9A808", VA = "0xD9A808")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xD9AA1C", Offset = "0xD9AA1C", VA = "0xD9AA1C")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0xD9ABAC", Offset = "0xD9ABAC", VA = "0xD9ABAC")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xD9BAE0", Offset = "0xD9BAE0", VA = "0xD9BAE0")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xD9BD34", Offset = "0xD9BD34", VA = "0xD9BD34")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xD9BF38", Offset = "0xD9BF38", VA = "0xD9BF38")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xD9C0B0", Offset = "0xD9C0B0", VA = "0xD9C0B0")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xD9C228", Offset = "0xD9C228", VA = "0xD9C228")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xD9C38C", Offset = "0xD9C38C", VA = "0xD9C38C")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xD9C4F0", Offset = "0xD9C4F0", VA = "0xD9C4F0")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xD9C6D8", Offset = "0xD9C6D8", VA = "0xD9C6D8")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xD9C6E0", Offset = "0xD9C6E0", VA = "0xD9C6E0")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0xD9AF88", Offset = "0xD9AF88", VA = "0xD9AF88")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xD9AE00", Offset = "0xD9AE00", VA = "0xD9AE00")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x20000A3")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xA65F9C", Offset = "0xA65F9C", VA = "0xA65F9C")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xA66004", Offset = "0xA66004", VA = "0xA66004")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xA66008", Offset = "0xA66008", VA = "0xA66008")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xA661C0", Offset = "0xA661C0", VA = "0xA661C0")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xA662BC", Offset = "0xA662BC", VA = "0xA662BC")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public static class Achievements
	{
		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xA66324", Offset = "0xA66324", VA = "0xA66324")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xA6681C", Offset = "0xA6681C", VA = "0xA6681C")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xA66ACC", Offset = "0xA66ACC", VA = "0xA66ACC")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xA66D5C", Offset = "0xA66D5C", VA = "0xA66D5C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xA66FD8", Offset = "0xA66FD8", VA = "0xA66FD8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xA671B0", Offset = "0xA671B0", VA = "0xA671B0")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xA6742C", Offset = "0xA6742C", VA = "0xA6742C")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xA67658", Offset = "0xA67658", VA = "0xA67658")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xA67884", Offset = "0xA67884", VA = "0xA67884")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xA67C60", Offset = "0xA67C60", VA = "0xA67C60")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A5")]
	public enum AchievementType
	{
		[Token(Token = "0x40004A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E3EC8", Offset = "0x6E3EC8")]
		Unknown,
		[Token(Token = "0x40004A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E3F00", Offset = "0x6E3F00")]
		Simple,
		[Token(Token = "0x40004A3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E3F38", Offset = "0x6E3F38")]
		Bitfield,
		[Token(Token = "0x40004A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x6E3F70", Offset = "0x6E3F70")]
		Count
	}
	[Token(Token = "0x20000A6")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xA663E8", Offset = "0xA663E8", VA = "0xA663E8")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xA66064", Offset = "0xA66064", VA = "0xA66064")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xA6621C", Offset = "0xA6621C", VA = "0xA6621C")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xA68654", Offset = "0xA68654", VA = "0xA68654")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xA686FC", Offset = "0xA686FC", VA = "0xA686FC")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xA68808", Offset = "0xA68808", VA = "0xA68808")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xA68914", Offset = "0xA68914", VA = "0xA68914")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xA668F8", Offset = "0xA668F8", VA = "0xA668F8")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xA66BA8", Offset = "0xA66BA8", VA = "0xA66BA8")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xA66E20", Offset = "0xA66E20", VA = "0xA66E20")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xA6709C", Offset = "0xA6709C", VA = "0xA6709C")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xA6727C", Offset = "0xA6727C", VA = "0xA6727C")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xA674F8", Offset = "0xA674F8", VA = "0xA674F8")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xA67724", Offset = "0xA67724", VA = "0xA67724")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xA679D8", Offset = "0xA679D8", VA = "0xA679D8")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xA68A20", Offset = "0xA68A20", VA = "0xA68A20")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xA68AEC", Offset = "0xA68AEC", VA = "0xA68AEC")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xA68B6C", Offset = "0xA68B6C", VA = "0xA68B6C")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xA685D4", Offset = "0xA685D4", VA = "0xA685D4")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xA68BEC", Offset = "0xA68BEC", VA = "0xA68BEC")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xA68CF8", Offset = "0xA68CF8", VA = "0xA68CF8")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xA68E04", Offset = "0xA68E04", VA = "0xA68E04")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0xA68F10", Offset = "0xA68F10", VA = "0xA68F10")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xA69090", Offset = "0xA69090", VA = "0xA69090")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xA6919C", Offset = "0xA6919C", VA = "0xA6919C")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0xA692A8", Offset = "0xA692A8", VA = "0xA692A8")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xA693B4", Offset = "0xA693B4", VA = "0xA693B4")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xA694C0", Offset = "0xA694C0", VA = "0xA694C0")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xA695CC", Offset = "0xA695CC", VA = "0xA695CC")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xA69714", Offset = "0xA69714", VA = "0xA69714")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xA69784", Offset = "0xA69784", VA = "0xA69784")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xA69890", Offset = "0xA69890", VA = "0xA69890")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xA69A10", Offset = "0xA69A10", VA = "0xA69A10")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0xA69B1C", Offset = "0xA69B1C", VA = "0xA69B1C")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0xA69C74", Offset = "0xA69C74", VA = "0xA69C74")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xA69D80", Offset = "0xA69D80", VA = "0xA69D80")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xA69E8C", Offset = "0xA69E8C", VA = "0xA69E8C")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xA69F98", Offset = "0xA69F98", VA = "0xA69F98")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xA6A0A4", Offset = "0xA6A0A4", VA = "0xA6A0A4")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xA6A1B0", Offset = "0xA6A1B0", VA = "0xA6A1B0")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xA6A2BC", Offset = "0xA6A2BC", VA = "0xA6A2BC")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xA6A3C8", Offset = "0xA6A3C8", VA = "0xA6A3C8")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xA6A4D4", Offset = "0xA6A4D4", VA = "0xA6A4D4")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xA6A5E0", Offset = "0xA6A5E0", VA = "0xA6A5E0")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xA6A800", Offset = "0xA6A800", VA = "0xA6A800")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20000A8")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x600061D")]
		[Address(RVA = "0xA67F04", Offset = "0xA67F04", VA = "0xA67F04")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20000A9")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xA6A8F4", Offset = "0xA6A8F4", VA = "0xA6A8F4")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20000AA")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x600061F")]
		[Address(RVA = "0xA68198", Offset = "0xA68198", VA = "0xA68198")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20000AB")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6000620")]
		[Address(RVA = "0xA6842C", Offset = "0xA6842C", VA = "0xA6842C")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6E143C", Offset = "0x6E143C")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x1700004E")]
		public int Count
		{
			[Token(Token = "0x6000621")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700004F")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6000622")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000050")]
		public T Item
		{
			[Token(Token = "0x6000624")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000625")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public bool HasNextPage
		{
			[Token(Token = "0x6000630")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000052")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6000631")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000053")]
		public string NextUrl
		{
			[Token(Token = "0x6000632")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		public string PreviousUrl
		{
			[Token(Token = "0x6000633")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000623")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000626")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000627")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000628")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000629")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600062A")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600062B")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x600062C")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600062D")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x600062E")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x600062F")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000634")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x20000AD")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x200036B")]
		private class RequestCallback
		{
			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x600172E")]
			[Address(RVA = "0xA6B008", Offset = "0xA6B008", VA = "0xA6B008")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x600172F")]
			[Address(RVA = "0xA6B010", Offset = "0xA6B010", VA = "0xA6B010")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6001730")]
			[Address(RVA = "0xA6B03C", Offset = "0xA6B03C", VA = "0xA6B03C", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x200036C")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6001731")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6001732")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xA6A9AC", Offset = "0xA6A9AC", VA = "0xA6A9AC")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xA6AB44", Offset = "0xA6AB44", VA = "0xA6AB44")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xA6AE0C", Offset = "0xA6AE0C", VA = "0xA6AE0C")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xA6AEA4", Offset = "0xA6AEA4", VA = "0xA6AEA4")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xA6AC20", Offset = "0xA6AC20", VA = "0xA6AC20")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20000AE")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xA6B780", Offset = "0xA6B780", VA = "0xA6B780")]
		private void Awake()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xA6B87C", Offset = "0xA6B87C", VA = "0xA6B87C")]
		private void Update()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xA6B908", Offset = "0xA6B908", VA = "0xA6B908")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xA6B964", Offset = "0xA6B964", VA = "0xA6B964")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x200036D")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000055")]
		public T Data
		{
			[Token(Token = "0x6000640")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x600063F")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000641")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x20000B0")]
	public class Pvr_Message
	{
		[Token(Token = "0x200036E")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x200036F")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40011D2")]
			Unknown = 0u,
			[Token(Token = "0x40011D3")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40011D4")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40011D5")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40011D6")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40011D7")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40011D8")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40011D9")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40011DA")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40011DB")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40011DC")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x40011DD")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000370")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3FA8", Offset = "0x6E3FA8")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000056")]
		public MessageType Type
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0xA6AF5C", Offset = "0xA6AF5C", VA = "0xA6AF5C")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000057")]
		public bool IsError
		{
			[Token(Token = "0x6000644")]
			[Address(RVA = "0xA6BB64", Offset = "0xA6BB64", VA = "0xA6BB64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		public long RequestID
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0xA6AF54", Offset = "0xA6AF54", VA = "0xA6AF54")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000059")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x600064E")]
			[Address(RVA = "0xA6BD90", Offset = "0xA6BD90", VA = "0xA6BD90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0838", Offset = "0x6F0838")]
			private get
			{
				return null;
			}
			[Token(Token = "0x600064D")]
			[Address(RVA = "0xA6BD3C", Offset = "0xA6BD3C", VA = "0xA6BD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0828", Offset = "0x6F0828")]
			set
			{
			}
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xA6B974", Offset = "0xA6B974", VA = "0xA6B974")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xA6BB74", Offset = "0xA6BB74", VA = "0xA6BB74", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xA6BB7C", Offset = "0xA6BB7C", VA = "0xA6BB7C", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xA6BB84", Offset = "0xA6BB84", VA = "0xA6BB84", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xA6BB8C", Offset = "0xA6BB8C", VA = "0xA6BB8C", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xA6BB94", Offset = "0xA6BB94", VA = "0xA6BB94", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xA6BB9C", Offset = "0xA6BB9C", VA = "0xA6BB9C")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xA6ABC0", Offset = "0xA6ABC0", VA = "0xA6ABC0")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x20000B1")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x600064F")]
		[Address(RVA = "0xA67DF4", Offset = "0xA67DF4", VA = "0xA67DF4")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xA67E54", Offset = "0xA67E54", VA = "0xA67E54", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xA67EA4", Offset = "0xA67EA4", VA = "0xA67EA4", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B2")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xA68088", Offset = "0xA68088", VA = "0xA68088")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xA680E8", Offset = "0xA680E8", VA = "0xA680E8", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xA68138", Offset = "0xA68138", VA = "0xA68138", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B3")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x6000655")]
		[Address(RVA = "0xA6831C", Offset = "0xA6831C", VA = "0xA6831C")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xA6837C", Offset = "0xA6837C", VA = "0xA6837C", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xA683CC", Offset = "0xA683CC", VA = "0xA683CC", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B4")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x6000658")]
		[Address(RVA = "0xA684C0", Offset = "0xA684C0", VA = "0xA684C0")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xA68520", Offset = "0xA68520", VA = "0xA68520", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xA68570", Offset = "0xA68570", VA = "0xA68570", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x20000B5")]
	public class Error
	{
		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xA67DB4", Offset = "0xA67DB4", VA = "0xA67DB4")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x600065C")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x600065D")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600065E")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public class Request
	{
		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3FB8", Offset = "0x6E3FB8")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x1700005A")]
		public long RequestID
		{
			[Token(Token = "0x6000660")]
			[Address(RVA = "0xA6AB3C", Offset = "0xA6AB3C", VA = "0xA6AB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0848", Offset = "0x6F0848")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000661")]
			[Address(RVA = "0xA6C694", Offset = "0xA6C694", VA = "0xA6C694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0858", Offset = "0x6F0858")]
			set
			{
			}
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xA6C668", Offset = "0xA6C668", VA = "0xA6C668")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xA6C69C", Offset = "0xA6C69C", VA = "0xA6C69C")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xA6C718", Offset = "0xA6C718", VA = "0xA6C718", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xA6B884", Offset = "0xA6B884", VA = "0xA6B884")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace Assets.Cortopia.Scripts.UI
{
	[Token(Token = "0x20000B8")]
	public class SubMenu : Menu
	{
		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Menu m_parentMenu;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_openDelay;

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x9282F4", Offset = "0x9282F4", VA = "0x9282F4", Slot = "11")]
		public override void Open()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x92851C", Offset = "0x92851C", VA = "0x92851C")]
		public void Back()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x928734", Offset = "0x928734", VA = "0x928734")]
		public SubMenu()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x928744", Offset = "0x928744", VA = "0x928744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0868", Offset = "0x6F0868")]
		private bool <Open>b__2_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x928780", Offset = "0x928780", VA = "0x928780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0878", Offset = "0x6F0878")]
		private IPromise <Open>b__2_1()
		{
			return null;
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x9287F8", Offset = "0x9287F8", VA = "0x9287F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0888", Offset = "0x6F0888")]
		private bool <Back>b__3_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x928818", Offset = "0x928818", VA = "0x928818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0898", Offset = "0x6F0898")]
		private IPromise <Back>b__3_1()
		{
			return null;
		}
	}
}
namespace UnityEngine.Events
{
	[Serializable]
	[Token(Token = "0x20000B9")]
	public class PlayableCharacterEvent : UnityEvent<PlayableCharacter>
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0xD73568", Offset = "0xD73568", VA = "0xD73568")]
		public PlayableCharacterEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BA")]
	public class CharacterEvent : UnityEvent<Character>
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0xD734C8", Offset = "0xD734C8", VA = "0xD734C8")]
		public CharacterEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public class PressurePlateEvent : UnityEvent<PressurePlate>
	{
		[Token(Token = "0x600066E")]
		[Address(RVA = "0xD735B8", Offset = "0xD735B8", VA = "0xD735B8")]
		public PressurePlateEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BC")]
	public class ScriptableVariableEvent : UnityEvent<ScriptableVariable>
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0xD73608", Offset = "0xD73608", VA = "0xD73608")]
		public ScriptableVariableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BD")]
	public class GrabEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000670")]
		[Address(RVA = "0xD73518", Offset = "0xD73518", VA = "0xD73518")]
		public GrabEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BE")]
	public class ButtonEvent : UnityEvent<CustomButton>
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0xD73478", Offset = "0xD73478", VA = "0xD73478")]
		public ButtonEvent()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Execution
{
	[Token(Token = "0x20000BF")]
	public class TransitionUsingBoolVariable : BE_Action
	{
		[Token(Token = "0x2000371")]
		private struct Constants
		{
			[Token(Token = "0x40011DE")]
			public const int MaxConnections = 2;

			[Token(Token = "0x40011DF")]
			public const string False = "False";

			[Token(Token = "0x40011E0")]
			public const string True = "True";
		}

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoolVariable Bool;

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x92E3F8", Offset = "0x92E3F8", VA = "0x92E3F8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x92E4D4", Offset = "0x92E4D4", VA = "0x92E4D4", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x92E518", Offset = "0x92E518", VA = "0x92E518")]
		public TransitionUsingBoolVariable()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class TransitionUsingIntVariable : BE_Action
	{
		[Serializable]
		[Token(Token = "0x2000372")]
		public struct TransitionCondition
		{
			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ComparisonType Comparison;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int CompareValue;
		}

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable Int;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TransitionCondition[] Conditions;

		[Token(Token = "0x40004D7")]
		private const int InvalidTransitionIndex = -1;

		[Token(Token = "0x40004D8")]
		private const int DefaultTransitionIndex = 0;

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x92E520", Offset = "0x92E520", VA = "0x92E520", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x92E608", Offset = "0x92E608", VA = "0x92E608", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x92E6E4", Offset = "0x92E6E4", VA = "0x92E6E4")]
		private bool IsConditionMet(ComparisonType comparisonType, int intValue, int compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x92E6F4", Offset = "0x92E6F4", VA = "0x92E6F4")]
		public TransitionUsingIntVariable()
		{
		}
	}
}
namespace Cortopia.Scripts
{
	[Token(Token = "0x20000C1")]
	public class SubtitlesAnchorSetter : MonoBehaviour
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x869F88", Offset = "0x869F88", VA = "0x869F88")]
		public void SetSubtitlesAnchor()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x86A01C", Offset = "0x86A01C", VA = "0x86A01C")]
		public SubtitlesAnchorSetter()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class ClockEntranceHandler : SaveObject
	{
		[Token(Token = "0x2000373")]
		private enum ClockEntrancePuzzleState
		{
			[Token(Token = "0x40011E4")]
			NotStarted,
			[Token(Token = "0x40011E5")]
			Started,
			[Token(Token = "0x40011E6")]
			Completed
		}

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E3FE8", Offset = "0x6E3FE8")]
		private static CardSuit <TargetSuit>k__BackingField;

		[Token(Token = "0x40004DA")]
		private const int ShortHandRotationJumps = 3;

		[Token(Token = "0x40004DB")]
		private const int ResetMinuteRotationHours = -12;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_parameterIsDoorOpen;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int m_parameterSetDoorOpen;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScriptableEvent m_puzzleStartedEvent;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompleteEvent;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InteractableObject m_rabbitDialogue;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4028", Offset = "0x6E4028")]
		[SerializeField]
		private TutorialScroll m_instructionsScroll;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_openDelay;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4084", Offset = "0x6E4084")]
		[SerializeField]
		private Animator m_doorAnimator;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E40D0", Offset = "0x6E40D0")]
		[SerializeField]
		private ClockHandle[] m_handles;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EntranceClock[] m_clocks;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E412C", Offset = "0x6E412C")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioSource m_puzzleAudioSource;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource m_doorOpenAudioSource;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IInteractable[] m_clockInteractions;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_currentValueIndex;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ClockEntrancePuzzleState m_currentState;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SavableInt m_puzzleState;

		[Token(Token = "0x1700005B")]
		public static CardSuit TargetSuit
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0x9A0DCC", Offset = "0x9A0DCC", VA = "0x9A0DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08A8", Offset = "0x6F08A8")]
			get
			{
				return default(CardSuit);
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0x9A0E34", Offset = "0x9A0E34", VA = "0x9A0E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08B8", Offset = "0x6F08B8")]
			private set
			{
			}
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x9A0EA0", Offset = "0x9A0EA0", VA = "0x9A0EA0")]
		private void Update()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x9A0FA4", Offset = "0x9A0FA4", VA = "0x9A0FA4", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x9A10B0", Offset = "0x9A10B0", VA = "0x9A10B0", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x9A131C", Offset = "0x9A131C", VA = "0x9A131C")]
		public void StartPuzzle()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x9A1664", Offset = "0x9A1664", VA = "0x9A1664")]
		public void TrySetInteractablesActive(bool isActive)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x9A179C", Offset = "0x9A179C", VA = "0x9A179C")]
		private void LockInteractions()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x9A17E4", Offset = "0x9A17E4", VA = "0x9A17E4")]
		private void UnlockInteractions()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x9A184C", Offset = "0x9A184C", VA = "0x9A184C")]
		private void ClockHandleMoveComplete(bool correctInteraction)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x9A167C", Offset = "0x9A167C", VA = "0x9A167C")]
		private void SetInteractablesActive(bool isActive)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x9A15F0", Offset = "0x9A15F0", VA = "0x9A15F0")]
		private void ResetPuzzle()
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x9A18C8", Offset = "0x9A18C8", VA = "0x9A18C8")]
		private void SetTargetValues()
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x9A1964", Offset = "0x9A1964", VA = "0x9A1964")]
		private void RotateHourHandleToPosition()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x9A1868", Offset = "0x9A1868", VA = "0x9A1868")]
		private void MoveToNextPuzzleIndex()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x9A1C5C", Offset = "0x9A1C5C", VA = "0x9A1C5C")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x9A0EA4", Offset = "0x9A0EA4", VA = "0x9A0EA4")]
		private void RotateHandles()
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x9A1EC0", Offset = "0x9A1EC0", VA = "0x9A1EC0")]
		public ClockEntranceHandler()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x9A1FE8", Offset = "0x9A1FE8", VA = "0x9A1FE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08C8", Offset = "0x6F08C8")]
		private void <StartPuzzle>b__27_0()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x9A2018", Offset = "0x9A2018", VA = "0x9A2018")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F08D8", Offset = "0x6F08D8")]
		private void <RotateHourHandleToPosition>b__35_0()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class ClockHandle : MonoBehaviour
	{
		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClockHandleType m_handleType;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_rotationAxis;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_rotationDegreesPerSecond;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener m_rotationTween;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_previousRotation;

		[Token(Token = "0x1700005C")]
		public ClockHandleType HandleType
		{
			[Token(Token = "0x6000690")]
			[Address(RVA = "0x9A2054", Offset = "0x9A2054", VA = "0x9A2054")]
			get
			{
				return default(ClockHandleType);
			}
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x9A205C", Offset = "0x9A205C", VA = "0x9A205C")]
		public void SetRotation(int hour)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x9A1BEC", Offset = "0x9A1BEC", VA = "0x9A1BEC")]
		public void RotateTo(int hour, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x9A21EC", Offset = "0x9A21EC", VA = "0x9A21EC")]
		public void RotateTo(int hour)
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x9A1E88", Offset = "0x9A1E88", VA = "0x9A1E88")]
		public void Rotate()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x9A1B08", Offset = "0x9A1B08", VA = "0x9A1B08")]
		public void RotateAdd(int hour)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x9A1E50", Offset = "0x9A1E50", VA = "0x9A1E50")]
		public void RotateBackwards()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x9A2258", Offset = "0x9A2258", VA = "0x9A2258")]
		public void Rotate(float angle)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x9A20E0", Offset = "0x9A20E0", VA = "0x9A20E0")]
		private Quaternion GetTargetRotation(int hour)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x9A22EC", Offset = "0x9A22EC", VA = "0x9A22EC")]
		private float GetHandleAngle(int hour)
		{
			return default(float);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x9A22DC", Offset = "0x9A22DC", VA = "0x9A22DC")]
		private float GetHandleAnglePast360(int hour)
		{
			return default(float);
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x9A2304", Offset = "0x9A2304", VA = "0x9A2304")]
		public ClockHandle()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public static class PauseExtensions
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x8E01F4", Offset = "0x8E01F4", VA = "0x8E01F4")]
		public static bool IsPausedOrPlaying(this AudioSource audioSource)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000C5")]
	public class ObjectMover : ObjectTransformable
	{
		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_useLocalSpace;

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x8F5C74", Offset = "0x8F5C74", VA = "0x8F5C74", Slot = "4")]
		public override void SaveMinValue()
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x8F5C78", Offset = "0x8F5C78", VA = "0x8F5C78", Slot = "5")]
		public override void SaveMaxValue()
		{
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x8F5C7C", Offset = "0x8F5C7C", VA = "0x8F5C7C", Slot = "6")]
		public override void SetToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x8F5CC8", Offset = "0x8F5CC8", VA = "0x8F5CC8", Slot = "7")]
		public override void LerpToValue(float t)
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x8F5E44", Offset = "0x8F5E44", VA = "0x8F5E44", Slot = "8")]
		public override void TweenToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x8F5F8C", Offset = "0x8F5F8C", VA = "0x8F5F8C")]
		public ObjectMover()
		{
		}
	}
}
namespace Cortopia.Scripts.Utils
{
	[Token(Token = "0x20000C6")]
	public static class ColorExtensions
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x97471C", Offset = "0x97471C", VA = "0x97471C")]
		public static Color WithR(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x974724", Offset = "0x974724", VA = "0x974724")]
		public static Color WithG(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x97472C", Offset = "0x97472C", VA = "0x97472C")]
		public static Color WithB(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x971DE8", Offset = "0x971DE8", VA = "0x971DE8")]
		public static Color WithA(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x974734", Offset = "0x974734", VA = "0x974734")]
		public static Color WithRGB(this Color color, Color other)
		{
			return default(Color);
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x974744", Offset = "0x974744", VA = "0x974744")]
		public static Color WithRGB(this Color color, float r, float g, float b)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20000C7")]
	public class Colors
	{
		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int TintColorPropertyID;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ColorPropertyID;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Color HighlightTriggerGizmoColor;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Color PointerTriggerGizmoColor;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Color EventTriggerGizmoColor;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly Color InteractableTriggerGizmoColor;

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x974754", Offset = "0x974754", VA = "0x974754")]
		public Colors()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class Constants
	{
		[Token(Token = "0x40004F9")]
		public const float PlayerReorientationTime = 0.5f;

		[Token(Token = "0x40004FA")]
		public const int AxisCount = 2;

		[Token(Token = "0x40004FB")]
		public const int ButtonCount = 5;

		[Token(Token = "0x40004FC")]
		public const int TriggerCount = 4;

		[Token(Token = "0x40004FD")]
		public const int TouchCount = 6;

		[Token(Token = "0x40004FE")]
		public const float PointTimeUI = 3f;

		[Token(Token = "0x40004FF")]
		public const float CharacterSplitHoldTime = 1f;

		[Token(Token = "0x4000500")]
		public const string CharacterTimelineTrack = "CharacterTrack";

		[Token(Token = "0x4000501")]
		public const string DoorTimelineTrack = "DoorTrack";

		[Token(Token = "0x4000502")]
		public const string DoorSoundSource = "DoorSoundSourceTrack";

		[Token(Token = "0x4000503")]
		public const string MotionTrack = "MotionTrack";

		[Token(Token = "0x4000504")]
		public const string NavAgentTrack = "NavAgentTrack";

		[Token(Token = "0x4000505")]
		public const int CardChoiceCount = 3;

		[Token(Token = "0x4000506")]
		public const int CardChoiceUndecided = -1;

		[Token(Token = "0x4000507")]
		public const float DominoLightUpTime = 1f;

		[Token(Token = "0x4000508")]
		public const float DominoMoveTime = 0.5f;

		[Token(Token = "0x4000509")]
		public const float DominoCooldownDelay = 1.2f;

		[Token(Token = "0x400050A")]
		public const float DominoPuzzleCooldown = 2.7f;

		[Token(Token = "0x400050B")]
		public const float DominoBellEventDelay = 0.3f;

		[Token(Token = "0x400050C")]
		public const float DegreesFullCircle = 360f;

		[Token(Token = "0x400050D")]
		public const float DegreesHalfCircle = 180f;

		[Token(Token = "0x400050E")]
		public const float DegreesQuarterCircle = 90f;

		[Token(Token = "0x400050F")]
		public const int HoursOnClock = 12;

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x976C28", Offset = "0x976C28", VA = "0x976C28")]
		public Constants()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class Tags
	{
		[Token(Token = "0x4000510")]
		public const string Interactable = "Interactable";

		[Token(Token = "0x4000511")]
		public const string Environment = "Environment";

		[Token(Token = "0x4000512")]
		public const string Character = "Character";

		[Token(Token = "0x4000513")]
		public const string NPC = "NPC";

		[Token(Token = "0x4000514")]
		public const string Firefly = "Firefly";

		[Token(Token = "0x4000515")]
		public const string Pointer = "Player";

		[Token(Token = "0x4000516")]
		public const string DynamicProp = "DynamicProp";

		[Token(Token = "0x4000517")]
		public const string Ingredient = "Ingredient";

		[Token(Token = "0x4000518")]
		public const string Untagged = "Untagged";

		[Token(Token = "0x4000519")]
		public const string EditorOnly = "EditorOnly";

		[Token(Token = "0x400051A")]
		public const string ExcludeMesh = "ExcludeMesh";

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x97F5EC", Offset = "0x97F5EC", VA = "0x97F5EC")]
		public Tags()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class Layers
	{
		[Token(Token = "0x400051B")]
		public const string Interactable = "Interactable";

		[Token(Token = "0x400051C")]
		public const string Environment = "Environment";

		[Token(Token = "0x400051D")]
		public const string Character = "Character";

		[Token(Token = "0x400051E")]
		public const string Blocker = "Blocker";

		[Token(Token = "0x400051F")]
		public const string Pointer = "Pointer";

		[Token(Token = "0x4000520")]
		public const string DynamicProp = "DynamicProp";

		[Token(Token = "0x4000521")]
		public const string UI = "UI";

		[Token(Token = "0x4000522")]
		public const string Grabbable = "Grabbable";

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x9780E4", Offset = "0x9780E4", VA = "0x9780E4")]
		public Layers()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class CustomWaitForSeconds : CustomYieldInstruction
	{
		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_waitTime;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_currentWaitTime;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_lastUpdate;

		[Token(Token = "0x1700005D")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x976F7C", Offset = "0x976F7C", VA = "0x976F7C", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x977044", Offset = "0x977044", VA = "0x977044")]
		public CustomWaitForSeconds(float waitTime)
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class CustomWaitForEndOfFrame : CustomYieldInstruction
	{
		[Token(Token = "0x1700005E")]
		public override bool keepWaiting
		{
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x976F14", Offset = "0x976F14", VA = "0x976F14", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x976F74", Offset = "0x976F74", VA = "0x976F74")]
		public CustomWaitForEndOfFrame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CD")]
	public struct ElevatorDestination
	{
		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NavMeshObstacle Obstacle;
	}
	[Token(Token = "0x20000CE")]
	public class EventOnAwake : RoomBehaviour
	{
		[Token(Token = "0x2000374")]
		private enum StartupFlowType
		{
			[Token(Token = "0x40011E8")]
			Awake,
			[Token(Token = "0x40011E9")]
			Start,
			[Token(Token = "0x40011EA")]
			RoomInitialize,
			[Token(Token = "0x40011EB")]
			RoomActivation,
			[Token(Token = "0x40011EC")]
			CharacterSpawn
		}

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private StartupFlowType m_startupType;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E41E8", Offset = "0x6E41E8")]
		[SerializeField]
		private UnityEvent m_onAwake;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_allCharactersSpawnedEventToken;

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x977080", Offset = "0x977080", VA = "0x977080")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x977160", Offset = "0x977160", VA = "0x977160")]
		private void Start()
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x9771A0", Offset = "0x9771A0", VA = "0x9771A0", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x977200", Offset = "0x977200", VA = "0x977200", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x977240", Offset = "0x977240", VA = "0x977240")]
		public EventOnAwake()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x9772A8", Offset = "0x9772A8", VA = "0x9772A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0958", Offset = "0x6F0958")]
		private void <Awake>b__4_0(CharacterEvents.AllCharactersSpawnedEvent eventData)
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class EventOnCharacterActive : RoomBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000375")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2824", Offset = "0x6E2824")]
		private sealed class <>c
		{
			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__6_0;

			[Token(Token = "0x6001740")]
			[Address(RVA = "0x977998", Offset = "0x977998", VA = "0x977998")]
			public <>c()
			{
			}

			[Token(Token = "0x6001741")]
			[Address(RVA = "0x9779A0", Offset = "0x9779A0", VA = "0x9779A0")]
			internal bool <Initialize>b__6_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4244", Offset = "0x6E4244")]
		[SerializeField]
		private PlayableCharacterEvent m_onCharacterActivation;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayableCharacterEvent m_onCharacterDeactivation;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_onCharacterActivatedEventToken;

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x977338", Offset = "0x977338", VA = "0x977338")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x9773E4", Offset = "0x9773E4", VA = "0x9773E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x977464", Offset = "0x977464", VA = "0x977464", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x977748", Offset = "0x977748", VA = "0x977748")]
		public void CompareActiveCharacterType()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x977870", Offset = "0x977870", VA = "0x977870")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x9777D0", Offset = "0x9777D0", VA = "0x9777D0")]
		private void CompareActiveCharacterType(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x9778A4", Offset = "0x9778A4", VA = "0x9778A4")]
		public EventOnCharacterActive()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class EventOnRoomActive : RoomBehaviour
	{
		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onRoomActivation;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onRoomDeactivation;

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x977A50", Offset = "0x977A50", VA = "0x977A50", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x977AA4", Offset = "0x977AA4", VA = "0x977AA4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x977AA8", Offset = "0x977AA8", VA = "0x977AA8")]
		public EventOnRoomActive()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class HandDebug : MonoBehaviour
	{
		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_fpsMeasurePeriod;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_perFrameUpdate;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_fpsTextMesh;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_roomTextMesh;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_fpsAccumulator;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_currentFps;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_fpsNextPeriod;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_displayOnHands;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BiomeType m_activeBiome;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private RoomType m_activeRoom;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_roomActivatedEventToken;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly string m_fpsDisplay;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly string m_roomDisplay;

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x977B30", Offset = "0x977B30", VA = "0x977B30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x977BF0", Offset = "0x977BF0", VA = "0x977BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x977F0C", Offset = "0x977F0C", VA = "0x977F0C")]
		private void Update()
		{
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x977E3C", Offset = "0x977E3C", VA = "0x977E3C")]
		private void UpdateDebugText()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x978004", Offset = "0x978004", VA = "0x978004")]
		private void OnBiomeActived(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x97803C", Offset = "0x97803C", VA = "0x97803C")]
		private void OnRoomActived(RoomEvents.RoomActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x978074", Offset = "0x978074", VA = "0x978074")]
		public HandDebug()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class MathUtils : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000376")]
		public struct MinMax
		{
			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Min;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float Max;

			[Token(Token = "0x6001742")]
			[Address(RVA = "0x7660EC", Offset = "0x7660EC", VA = "0x7660EC")]
			public MinMax(float newMin, float newMax)
			{
			}
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x9780EC", Offset = "0x9780EC", VA = "0x9780EC")]
		public static int GetEnumFlagArrayIndex(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x978160", Offset = "0x978160", VA = "0x978160")]
		public MathUtils()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public static class MonoBehaviourExtensions
	{
		[Token(Token = "0x2000377")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2834", Offset = "0x6E2834")]
		private sealed class <Wait>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise promise;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700020E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001746")]
				[Address(RVA = "0x979010", Offset = "0x979010", VA = "0x979010", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700020F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001748")]
				[Address(RVA = "0x979080", Offset = "0x979080", VA = "0x979080", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001743")]
			[Address(RVA = "0x97899C", Offset = "0x97899C", VA = "0x97899C")]
			[DebuggerHidden]
			public <Wait>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001744")]
			[Address(RVA = "0x978EFC", Offset = "0x978EFC", VA = "0x978EFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001745")]
			[Address(RVA = "0x978F00", Offset = "0x978F00", VA = "0x978F00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001747")]
			[Address(RVA = "0x979018", Offset = "0x979018", VA = "0x979018", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2844", Offset = "0x6E2844")]
		private sealed class <StallOneFrame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise promise;

			[Token(Token = "0x17000210")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600174C")]
				[Address(RVA = "0x978E84", Offset = "0x978E84", VA = "0x978E84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000211")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600174E")]
				[Address(RVA = "0x978EF4", Offset = "0x978EF4", VA = "0x978EF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001749")]
			[Address(RVA = "0x9789C8", Offset = "0x9789C8", VA = "0x9789C8")]
			[DebuggerHidden]
			public <StallOneFrame>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600174A")]
			[Address(RVA = "0x978B94", Offset = "0x978B94", VA = "0x978B94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600174B")]
			[Address(RVA = "0x978B98", Offset = "0x978B98", VA = "0x978B98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600174D")]
			[Address(RVA = "0x978E8C", Offset = "0x978E8C", VA = "0x978E8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000379")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2854", Offset = "0x6E2854")]
		private sealed class <WaitUnscaled>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise promise;

			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000212")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001752")]
				[Address(RVA = "0x97930C", Offset = "0x97930C", VA = "0x97930C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000213")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001754")]
				[Address(RVA = "0x97937C", Offset = "0x97937C", VA = "0x97937C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600174F")]
			[Address(RVA = "0x9789F4", Offset = "0x9789F4", VA = "0x9789F4")]
			[DebuggerHidden]
			public <WaitUnscaled>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001750")]
			[Address(RVA = "0x9791F8", Offset = "0x9791F8", VA = "0x9791F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001751")]
			[Address(RVA = "0x9791FC", Offset = "0x9791FC", VA = "0x9791FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001753")]
			[Address(RVA = "0x979314", Offset = "0x979314", VA = "0x979314", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2864", Offset = "0x6E2864")]
		private sealed class <WaitFor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> condition;

			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise promise;

			[Token(Token = "0x17000214")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001758")]
				[Address(RVA = "0x979180", Offset = "0x979180", VA = "0x979180", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000215")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600175A")]
				[Address(RVA = "0x9791F0", Offset = "0x9791F0", VA = "0x9791F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001755")]
			[Address(RVA = "0x978A20", Offset = "0x978A20", VA = "0x978A20")]
			[DebuggerHidden]
			public <WaitFor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001756")]
			[Address(RVA = "0x979088", Offset = "0x979088", VA = "0x979088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001757")]
			[Address(RVA = "0x97908C", Offset = "0x97908C", VA = "0x97908C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001759")]
			[Address(RVA = "0x979188", Offset = "0x979188", VA = "0x979188", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400053F")]
		private const int PromisePoolSize = 32;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Promise> sm_availablePromises;

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x978170", Offset = "0x978170", VA = "0x978170")]
		static MonoBehaviourExtensions()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x978320", Offset = "0x978320", VA = "0x978320")]
		public static IPromise WaitUnscaled(this MonoBehaviour mb, float time, ref Coroutine routine)
		{
			return null;
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x978560", Offset = "0x978560", VA = "0x978560")]
		public static IPromise WaitUnscaled(this MonoBehaviour mb, float time)
		{
			return null;
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x978608", Offset = "0x978608", VA = "0x978608")]
		public static IPromise Wait(this MonoBehaviour mb, float time, ref Coroutine routine)
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x978750", Offset = "0x978750", VA = "0x978750")]
		public static IPromise Wait(this MonoBehaviour mb, float time)
		{
			return null;
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x9787F8", Offset = "0x9787F8", VA = "0x9787F8")]
		public static IPromise WaitOneFrame(this MonoBehaviour mb)
		{
			return null;
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x9776A4", Offset = "0x9776A4", VA = "0x9776A4")]
		public static IPromise WaitFor(this MonoBehaviour mb, Func<bool> condition)
		{
			return null;
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x9786B8", Offset = "0x9786B8", VA = "0x9786B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F09C8", Offset = "0x6F09C8")]
		private static IEnumerator Wait(float time, Promise promise)
		{
			return null;
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x978890", Offset = "0x978890", VA = "0x978890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0A2C", Offset = "0x6F0A2C")]
		private static IEnumerator StallOneFrame(Promise promise)
		{
			return null;
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x9784C8", Offset = "0x9784C8", VA = "0x9784C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0A90", Offset = "0x6F0A90")]
		private static IEnumerator WaitUnscaled(float time, Promise promise)
		{
			return null;
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x978904", Offset = "0x978904", VA = "0x978904")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F0AF4", Offset = "0x6F0AF4")]
		private static IEnumerator WaitFor(Func<bool> condition, Promise promise)
		{
			return null;
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x978A4C", Offset = "0x978A4C", VA = "0x978A4C")]
		private static void ReturnToPool(Promise promise)
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x9783D0", Offset = "0x9783D0", VA = "0x9783D0")]
		private static Promise GetPooledPromise()
		{
			return null;
		}
	}
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E14A4", Offset = "0x6E14A4")]
	public class NavMeshBaker : MonoBehaviour
	{
		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshSurface m_navSurface;

		[Token(Token = "0x4000542")]
		private const float NavVoxelSize = 0.0375f;

		[Token(Token = "0x4000543")]
		private const CollectObjects BakeType = CollectObjects.Children;

		[Token(Token = "0x4000544")]
		private const int NavTileSize = 16;

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x979384", Offset = "0x979384", VA = "0x979384")]
		public NavMeshBaker()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class PositionToggle : SaveObject
	{
		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_alternatePosition;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SavableVector m_savePositon;

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x9793A0", Offset = "0x9793A0", VA = "0x9793A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x97944C", Offset = "0x97944C", VA = "0x97944C")]
		public void SaveDefaultPosition()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x979490", Offset = "0x979490", VA = "0x979490")]
		public void SaveAlternatePosition()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x9794D4", Offset = "0x9794D4", VA = "0x9794D4")]
		public void SetPosition(bool defaultPosition)
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x979560", Offset = "0x979560", VA = "0x979560")]
		public void LerpToPosition(bool alternatePosition)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x9796D8", Offset = "0x9796D8", VA = "0x9796D8", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x979824", Offset = "0x979824", VA = "0x979824", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x9799AC", Offset = "0x9799AC", VA = "0x9799AC")]
		public PositionToggle()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public static class ProjectExtensionMethods
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x9799BC", Offset = "0x9799BC", VA = "0x9799BC")]
		public static float WithinRange(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x9799D4", Offset = "0x9799D4", VA = "0x9799D4")]
		public static float InverseLerp(this Vector3 value, Vector3 min, Vector3 max)
		{
			return default(float);
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x979B98", Offset = "0x979B98", VA = "0x979B98")]
		public static void SetPositionAndRotation(this Transform transform, Transform otherTransform)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x979C54", Offset = "0x979C54", VA = "0x979C54")]
		public static void SetPositionAndRotation(this Transform transform, PositionRotation positionRotation)
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x979CCC", Offset = "0x979CCC", VA = "0x979CCC")]
		public static void SetPositionAndRotation(this Transform transform, SavablePose positionRotation)
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x979DB0", Offset = "0x979DB0", VA = "0x979DB0")]
		public static PositionRotation GetPositionAndRotation(this Transform transform)
		{
			return default(PositionRotation);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x979E28", Offset = "0x979E28", VA = "0x979E28")]
		public static void SetTransform(this Transform transform, SavableTransform savableTransform)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x979D80", Offset = "0x979D80", VA = "0x979D80")]
		public static Quaternion ToQuaternion(this Vector4 vector)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x979EFC", Offset = "0x979EFC", VA = "0x979EFC")]
		public static Vector4 ToVector(this Quaternion quaternion)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x979F2C", Offset = "0x979F2C", VA = "0x979F2C")]
		public static SavableTransform ToSavable(this Transform transform)
		{
			return null;
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x97A040", Offset = "0x97A040", VA = "0x97A040")]
		public static bool IsWithinBounds(this float value, float minValue, float maxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x97A058", Offset = "0x97A058", VA = "0x97A058")]
		public static bool TryGetRoom(this Scene scene, out Room room)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D7")]
	public class StartupRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2874", Offset = "0x6E2874")]
		private sealed class <>c
		{
			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x600175C")]
			[Address(RVA = "0x97EA0C", Offset = "0x97EA0C", VA = "0x97EA0C")]
			public <>c()
			{
			}

			[Token(Token = "0x600175D")]
			[Address(RVA = "0x97EA14", Offset = "0x97EA14", VA = "0x97EA14")]
			internal void <SetTermAndTerminate>b__4_0()
			{
			}
		}

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Path;

		[Token(Token = "0x400054A")]
		private const float AutoQuitTime = 5f;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x97E6E4", Offset = "0x97E6E4", VA = "0x97E6E4")]
		public void SetTerm(string localizeTerm)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x97E7AC", Offset = "0x97E7AC", VA = "0x97E7AC")]
		public void SetTermAndTerminate(string localizeTerm)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x97E944", Offset = "0x97E944", VA = "0x97E944")]
		public StartupRig()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public static class StringExtensions
	{
		[Token(Token = "0x400054C")]
		private const int NotFound = -1;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] NewLines;

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x97EA1C", Offset = "0x97EA1C", VA = "0x97EA1C")]
		public static string Substring(this string text, string start, string end)
		{
			return null;
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x97EB1C", Offset = "0x97EB1C", VA = "0x97EB1C")]
		public static string Substring(this string text, string start, char end)
		{
			return null;
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x97EC1C", Offset = "0x97EC1C", VA = "0x97EC1C")]
		public static string[] Split(this string text, string separator)
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x97ECF0", Offset = "0x97ECF0", VA = "0x97ECF0")]
		public static string[] Split(this string text, params string[] separator)
		{
			return null;
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x97ED28", Offset = "0x97ED28", VA = "0x97ED28")]
		public static int IndexAfter(this string text, char value, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x97ED7C", Offset = "0x97ED7C", VA = "0x97ED7C")]
		public static int IndexAfter(this string text, string value, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x97EDEC", Offset = "0x97EDEC", VA = "0x97EDEC")]
		public static int IndexOfNewLine(this string text, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x97EF14", Offset = "0x97EF14", VA = "0x97EF14")]
		public static int LastIndexOfNewLine(this string text, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x97F03C", Offset = "0x97F03C", VA = "0x97F03C")]
		public static bool Contains(this string text, string toCheck, StringComparison comparison)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x97F060", Offset = "0x97F060", VA = "0x97F060")]
		public static string GetAssetNameFromPath(this string path)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x97F15C", Offset = "0x97F15C", VA = "0x97F15C")]
		public static string ToPascalCase(this string text)
		{
			return null;
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x97F2C4", Offset = "0x97F2C4", VA = "0x97F2C4")]
		public static string ToPascalCase(this string text, bool lettersDigitsOnly)
		{
			return null;
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x97F360", Offset = "0x97F360", VA = "0x97F360")]
		public static string LettersAndDigits(this string text)
		{
			return null;
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x97F3EC", Offset = "0x97F3EC", VA = "0x97F3EC")]
		public static string ReplaceAt(this string text, string replace, int index, int length = 1)
		{
			return null;
		}
	}
	[Token(Token = "0x20000D9")]
	public class TrailerCamera : MonoBehaviour
	{
		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LerpConstraint m_lerpConstraint;

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x97F5F4", Offset = "0x97F5F4", VA = "0x97F5F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x97F5F8", Offset = "0x97F5F8", VA = "0x97F5F8")]
		private void ConfigureTrailerCamera()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x97F774", Offset = "0x97F774", VA = "0x97F774")]
		public TrailerCamera()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DA")]
	public struct PositionRotation
	{
		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rotation;

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x7660F4", Offset = "0x7660F4", VA = "0x7660F4")]
		public PositionRotation(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public enum VectorAxisType
	{
		[Token(Token = "0x4000553")]
		X,
		[Token(Token = "0x4000554")]
		Y,
		[Token(Token = "0x4000555")]
		Z
	}
}
namespace Cortopia.Scripts.Utils.Transformables
{
	[Token(Token = "0x20000DC")]
	public class ClockTowerLedge : RoomBehaviour
	{
		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_minValue;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_maxValue;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4390", Offset = "0x6E4390")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Ease m_tweenEase;

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x97F77C", Offset = "0x97F77C", VA = "0x97F77C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x97F7D8", Offset = "0x97F7D8", VA = "0x97F7D8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x97F848", Offset = "0x97F848", VA = "0x97F848")]
		public ClockTowerLedge()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public enum MinMaxType
	{
		[Token(Token = "0x400055B")]
		Min,
		[Token(Token = "0x400055C")]
		Max
	}
	[Token(Token = "0x20000DE")]
	public class ObjectScaler : ObjectTransformable
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x97F8DC", Offset = "0x97F8DC", VA = "0x97F8DC", Slot = "4")]
		public override void SaveMinValue()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x97F8E0", Offset = "0x97F8E0", VA = "0x97F8E0", Slot = "5")]
		public override void SaveMaxValue()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x97F8E4", Offset = "0x97F8E4", VA = "0x97F8E4", Slot = "6")]
		public override void SetToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x97F930", Offset = "0x97F930", VA = "0x97F930", Slot = "7")]
		public override void LerpToValue(float t)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x97FA24", Offset = "0x97FA24", VA = "0x97FA24", Slot = "8")]
		public override void TweenToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x97FB3C", Offset = "0x97FB3C", VA = "0x97FB3C")]
		public void TweenToValue(bool toMaxValue)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x97FB74", Offset = "0x97FB74", VA = "0x97FB74")]
		public ObjectScaler()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public abstract class ObjectTransformable : MonoBehaviour
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Vector3 m_minValue;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected Vector3 m_maxValue;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E440C", Offset = "0x6E440C")]
		[SerializeField]
		protected float m_tweenTime;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected Ease m_tweenEase;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected UnityEvent m_onTweenCompleted;

		[Token(Token = "0x600070E")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F0CF8", Offset = "0x6F0CF8")]
		public abstract void SaveMinValue();

		[Token(Token = "0x600070F")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F0D30", Offset = "0x6F0D30")]
		public abstract void SaveMaxValue();

		[Token(Token = "0x6000710")]
		public abstract void SetToValue(MinMaxType valueType);

		[Token(Token = "0x6000711")]
		public abstract void LerpToValue(float t);

		[Token(Token = "0x6000712")]
		public abstract void TweenToValue(MinMaxType valueType);

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x97FB78", Offset = "0x97FB78", VA = "0x97FB78")]
		protected ObjectTransformable()
		{
		}
	}
}
namespace Cortopia.Scripts.Utils.Promises
{
	[Token(Token = "0x20000E0")]
	public static class EnumerableExtensions
	{
		[Token(Token = "0x6000714")]
		public static void Each<T>(this IEnumerable<T> source, Action<T, int> fn)
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class ExceptionEventArgs : EventArgs
	{
		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4478", Offset = "0x6E4478")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x1700005F")]
		public Exception Exception
		{
			[Token(Token = "0x6000716")]
			[Address(RVA = "0x97A234", Offset = "0x97A234", VA = "0x97A234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0D78", Offset = "0x6F0D78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000717")]
			[Address(RVA = "0x97A22C", Offset = "0x97A22C", VA = "0x97A22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0D88", Offset = "0x6F0D88")]
			private set
			{
			}
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x97A1B0", Offset = "0x97A1B0", VA = "0x97A1B0")]
		internal ExceptionEventArgs(Exception exception)
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public interface IPendingPromise<T> : IRejectable
	{
		[Token(Token = "0x17000060")]
		int Id
		{
			[Token(Token = "0x6000718")]
			get;
		}

		[Token(Token = "0x6000719")]
		void Resolve(T value);

		[Token(Token = "0x600071A")]
		void ReportProgress(float progress);
	}
	[Token(Token = "0x20000E3")]
	public interface IPendingPromise : IRejectable
	{
		[Token(Token = "0x17000061")]
		int Id
		{
			[Token(Token = "0x600071B")]
			get;
		}

		[Token(Token = "0x600071C")]
		void Resolve();

		[Token(Token = "0x600071D")]
		void ReportProgress(float progress);
	}
	[Token(Token = "0x20000E4")]
	public interface IPromise<T>
	{
		[Token(Token = "0x17000062")]
		int Id
		{
			[Token(Token = "0x600071E")]
			get;
		}

		[Token(Token = "0x600071F")]
		IPromise<T> WithName(string name);

		[Token(Token = "0x6000720")]
		void Done(Action<T> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000721")]
		void Done(Action<T> onResolved);

		[Token(Token = "0x6000722")]
		void Done();

		[Token(Token = "0x6000723")]
		IPromise Catch(Action<Exception> onRejected);

		[Token(Token = "0x6000724")]
		IPromise<T> Catch(Func<Exception, T> onRejected);

		[Token(Token = "0x6000725")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved);

		[Token(Token = "0x6000726")]
		IPromise Then(Func<T, IPromise> onResolved);

		[Token(Token = "0x6000727")]
		IPromise Then(Action<T> onResolved);

		[Token(Token = "0x6000728")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected);

		[Token(Token = "0x6000729")]
		IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x600072A")]
		IPromise Then(Action<T> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x600072B")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress);

		[Token(Token = "0x600072C")]
		IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x600072D")]
		IPromise Then(Action<T> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x600072E")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, ConvertedT> transform);

		[Token(Token = "0x600072F")]
		IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000730")]
		IPromise ThenAll(Func<T, IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000731")]
		IPromise<ConvertedT> ThenRace<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000732")]
		IPromise ThenRace(Func<T, IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000733")]
		IPromise<T> Finally(Action onComplete);

		[Token(Token = "0x6000734")]
		IPromise ContinueWith(Func<IPromise> onResolved);

		[Token(Token = "0x6000735")]
		IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete);

		[Token(Token = "0x6000736")]
		IPromise<T> Progress(Action<float> onProgress);
	}
	[Token(Token = "0x20000E5")]
	public interface IPromise
	{
		[Token(Token = "0x17000063")]
		int Id
		{
			[Token(Token = "0x6000737")]
			get;
		}

		[Token(Token = "0x6000738")]
		IPromise WithName(string name);

		[Token(Token = "0x6000739")]
		void Done(Action onResolved, Action<Exception> onRejected);

		[Token(Token = "0x600073A")]
		void Done(Action onResolved);

		[Token(Token = "0x600073B")]
		void Done();

		[Token(Token = "0x600073C")]
		IPromise Catch(Action<Exception> onRejected);

		[Token(Token = "0x600073D")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved);

		[Token(Token = "0x600073E")]
		IPromise Then(Func<IPromise> onResolved);

		[Token(Token = "0x600073F")]
		IPromise Then(Action onResolved);

		[Token(Token = "0x6000740")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected);

		[Token(Token = "0x6000741")]
		IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000742")]
		IPromise Then(Action onResolved, Action<Exception> onRejected);

		[Token(Token = "0x6000743")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000744")]
		IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000745")]
		IPromise Then(Action onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x6000746")]
		IPromise ThenAll(Func<IEnumerable<IPromise>> chain);

		[Token(Token = "0x6000747")]
		IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x6000748")]
		IPromise ThenSequence(Func<IEnumerable<Func<IPromise>>> chain);

		[Token(Token = "0x6000749")]
		IPromise ThenRace(Func<IEnumerable<IPromise>> chain);

		[Token(Token = "0x600074A")]
		IPromise<ConvertedT> ThenRace<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x600074B")]
		IPromise Finally(Action onComplete);

		[Token(Token = "0x600074C")]
		IPromise ContinueWith(Func<IPromise> onResolved);

		[Token(Token = "0x600074D")]
		IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete);

		[Token(Token = "0x600074E")]
		IPromise Progress(Action<float> onProgress);
	}
	[Token(Token = "0x20000E6")]
	public interface IPromiseInfo
	{
		[Token(Token = "0x17000064")]
		int Id
		{
			[Token(Token = "0x600074F")]
			get;
		}

		[Token(Token = "0x17000065")]
		string Name
		{
			[Token(Token = "0x6000750")]
			get;
		}
	}
	[Token(Token = "0x20000E7")]
	public interface IRejectable
	{
		[Token(Token = "0x6000751")]
		void Reject(Exception ex);
	}
	[Token(Token = "0x20000E8")]
	public struct ProgressHandler
	{
		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<float> Callback;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IRejectable Rejectable;
	}
	[Token(Token = "0x20000E9")]
	public class Promise<T> : IPromise<T>, IPendingPromise<T>, IRejectable, IPromiseInfo
	{
		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2884", Offset = "0x6E2884")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x600175E")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600175F")]
			internal void <Catch>b__0(T _)
			{
			}

			[Token(Token = "0x6001760")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6001761")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2894", Offset = "0x6E2894")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T> resultPromise;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, T> onRejected;

			[Token(Token = "0x6001762")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6001763")]
			internal void <Catch>b__0(T v)
			{
			}

			[Token(Token = "0x6001764")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6001765")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x200037E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E28A4", Offset = "0x6E28A4")]
		private sealed class <>c__DisplayClass43_0<ConvertedT>
		{
			[Token(Token = "0x4001208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IPromise<ConvertedT>> onResolved;

			[Token(Token = "0x4001209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<ConvertedT> resultPromise;

			[Token(Token = "0x400120A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, IPromise<ConvertedT>> onRejected;

			[Token(Token = "0x400120B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x400120C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__3;

			[Token(Token = "0x400120D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x400120E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__5;

			[Token(Token = "0x400120F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__6;

			[Token(Token = "0x6001766")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6001767")]
			internal void <Then>b__0(T v)
			{
			}

			[Token(Token = "0x6001768")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6001769")]
			internal void <Then>b__3(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x600176A")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x600176B")]
			internal void <Then>b__1(Exception ex)
			{
			}

			[Token(Token = "0x600176C")]
			internal void <Then>b__5(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x600176D")]
			internal void <Then>b__6(Exception callbackEx)
			{
			}
		}

		[Token(Token = "0x200037F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E28B4", Offset = "0x6E28B4")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IPromise> onResolved;

			[Token(Token = "0x4001211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4001212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x4001213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action <>9__3;

			[Token(Token = "0x4001215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x600176E")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600176F")]
			internal void <Then>b__0(T v)
			{
			}

			[Token(Token = "0x6001770")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6001771")]
			internal void <Then>b__3()
			{
			}

			[Token(Token = "0x6001772")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x6001773")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E28C4", Offset = "0x6E28C4")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onResolved;

			[Token(Token = "0x4001217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4001218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x6001774")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6001775")]
			internal void <Then>b__0(T v)
			{
			}

			[Token(Token = "0x6001776")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000381")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E28D4", Offset = "0x6E28D4")]
		private sealed class <>c__DisplayClass46_0<ConvertedT>
		{
			[Token(Token = "0x4001219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, ConvertedT> transform;

			[Token(Token = "0x6001777")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001778")]
			internal IPromise<ConvertedT> <Then>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000382")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E28E4", Offset = "0x6E28E4")]
		private sealed class <>c__DisplayClass50_0<T0>
		{
			[Token(Token = "0x400121A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;

			[Token(Token = "0x400121B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T0> promise;

			[Token(Token = "0x6001779")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x600177A")]
			internal IPromise<T0> <First>b__0(IPromise<T0> prevPromise, Func<IPromise<T0>> fn)
			{
				return null;
			}

			[Token(Token = "0x600177B")]
			internal void <First>b__1(T0 value)
			{
			}

			[Token(Token = "0x600177C")]
			internal void <First>b__2(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000383")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E28F4", Offset = "0x6E28F4")]
		private sealed class <>c__DisplayClass50_1<T0>
		{
			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int itemSequence;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IPromise<T0>> fn;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T0> newPromise;

			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass50_0<T0> CS$<>8__locals1;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T0> <>9__5;

			[Token(Token = "0x600177D")]
			public <>c__DisplayClass50_1()
			{
			}

			[Token(Token = "0x600177E")]
			internal void <First>b__3(float v)
			{
			}

			[Token(Token = "0x600177F")]
			internal void <First>b__4(Exception ex)
			{
			}

			[Token(Token = "0x6001780")]
			internal void <First>b__5(T0 value)
			{
			}
		}

		[Token(Token = "0x2000384")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2904", Offset = "0x6E2904")]
		private sealed class <>c__DisplayClass51_0<ConvertedT>
		{
			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x6001781")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x6001782")]
			internal IPromise<IEnumerable<ConvertedT>> <ThenAll>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000385")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2914", Offset = "0x6E2914")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise>> chain;

			[Token(Token = "0x6001783")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x6001784")]
			internal IPromise <ThenAll>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000386")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2924", Offset = "0x6E2924")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] progress;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<IEnumerable<T>> resultPromise;

			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] results;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int remainingCount;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x6001785")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x6001786")]
			internal void <All>b__0(IPromise<T> promise, int index)
			{
			}

			[Token(Token = "0x6001787")]
			internal void <All>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000387")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2934", Offset = "0x6E2934")]
		private sealed class <>c__DisplayClass54_1
		{
			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass54_0 CS$<>8__locals1;

			[Token(Token = "0x6001788")]
			public <>c__DisplayClass54_1()
			{
			}

			[Token(Token = "0x6001789")]
			internal void <All>b__1(float v)
			{
			}

			[Token(Token = "0x600178A")]
			internal void <All>b__2(T result)
			{
			}
		}

		[Token(Token = "0x2000388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2944", Offset = "0x6E2944")]
		private sealed class <>c__DisplayClass55_0<ConvertedT>
		{
			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x600178B")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x600178C")]
			internal IPromise<ConvertedT> <ThenRace>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000389")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2954", Offset = "0x6E2954")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise>> chain;

			[Token(Token = "0x600178D")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x600178E")]
			internal IPromise <ThenRace>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x200038A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2964", Offset = "0x6E2964")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T> resultPromise;

			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] progress;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> <>9__2;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x600178F")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x6001790")]
			internal void <Race>b__0(IPromise<T> promise, int index)
			{
			}

			[Token(Token = "0x6001791")]
			internal void <Race>b__2(T result)
			{
			}

			[Token(Token = "0x6001792")]
			internal void <Race>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x200038B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2974", Offset = "0x6E2974")]
		private sealed class <>c__DisplayClass58_1
		{
			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass58_0 CS$<>8__locals1;

			[Token(Token = "0x6001793")]
			public <>c__DisplayClass58_1()
			{
			}

			[Token(Token = "0x6001794")]
			internal void <Race>b__1(float v)
			{
			}
		}

		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2984", Offset = "0x6E2984")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action onComplete;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T> promise;

			[Token(Token = "0x6001795")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x6001796")]
			internal void <Finally>b__0(Exception e)
			{
			}

			[Token(Token = "0x6001797")]
			internal T <Finally>b__1(T v)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2994", Offset = "0x6E2994")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x6001798")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x6001799")]
			internal void <ContinueWith>b__0(T x)
			{
			}

			[Token(Token = "0x600179A")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E29A4", Offset = "0x6E29A4")]
		private sealed class <>c__DisplayClass63_0<ConvertedT>
		{
			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x600179B")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x600179C")]
			internal void <ContinueWith>b__0(T x)
			{
			}

			[Token(Token = "0x600179D")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception m_rejectionException;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_resolveValue;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RejectHandler> m_rejectHandlers;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ProgressHandler> m_progressHandlers;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Action<T>> m_resolveCallbacks;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<IRejectable> m_resolveRejectables;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4488", Offset = "0x6E4488")]
		private readonly int <Id>k__BackingField;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4498", Offset = "0x6E4498")]
		private string <Name>k__BackingField;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44A8", Offset = "0x6E44A8")]
		private PromiseState <State>k__BackingField;

		[Token(Token = "0x17000066")]
		public int Id
		{
			[Token(Token = "0x6000752")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0D98", Offset = "0x6F0D98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000067")]
		public string Name
		{
			[Token(Token = "0x6000753")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DA8", Offset = "0x6F0DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DB8", Offset = "0x6F0DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public PromiseState State
		{
			[Token(Token = "0x6000755")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DC8", Offset = "0x6F0DC8")]
			get
			{
				return default(PromiseState);
			}
			[Token(Token = "0x6000756")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DD8", Offset = "0x6F0DD8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000757")]
		public Promise()
		{
		}

		[Token(Token = "0x6000758")]
		public Promise(Action<Action<T>, Action<Exception>> resolver)
		{
		}

		[Token(Token = "0x6000759")]
		private Promise(PromiseState initialState)
		{
		}

		[Token(Token = "0x600075A")]
		private void AddRejectHandler(Action<Exception> onRejected, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600075B")]
		private void AddResolveHandler(Action<T> onResolved, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600075C")]
		private void AddProgressHandler(Action<float> onProgress, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600075D")]
		private void InvokeHandler<THandler>(Action<THandler> callback, IRejectable rejectable, THandler value)
		{
		}

		[Token(Token = "0x600075E")]
		private void ClearHandlers()
		{
		}

		[Token(Token = "0x600075F")]
		private void InvokeRejectHandlers(Exception ex)
		{
		}

		[Token(Token = "0x6000760")]
		private void InvokeResolveHandlers(T value)
		{
		}

		[Token(Token = "0x6000761")]
		private void InvokeProgressHandlers(float progress)
		{
		}

		[Token(Token = "0x6000762")]
		public void Reject(Exception ex)
		{
		}

		[Token(Token = "0x6000763")]
		public void Resolve(T value)
		{
		}

		[Token(Token = "0x6000764")]
		public void ReportProgress(float progress)
		{
		}

		[Token(Token = "0x6000765")]
		public void Done(Action<T> onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6000766")]
		public void Done(Action<T> onResolved)
		{
		}

		[Token(Token = "0x6000767")]
		public void Done()
		{
		}

		[Token(Token = "0x6000768")]
		public IPromise<T> WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x6000769")]
		public IPromise Catch(Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x600076A")]
		public IPromise<T> Catch(Func<Exception, T> onRejected)
		{
			return null;
		}

		[Token(Token = "0x600076B")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved)
		{
			return null;
		}

		[Token(Token = "0x600076C")]
		public IPromise Then(Func<T, IPromise> onResolved)
		{
			return null;
		}

		[Token(Token = "0x600076D")]
		public IPromise Then(Action<T> onResolved)
		{
			return null;
		}

		[Token(Token = "0x600076E")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected)
		{
			return null;
		}

		[Token(Token = "0x600076F")]
		public IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		public IPromise Then(Action<T> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6000771")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		public IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000773")]
		public IPromise Then(Action<T> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000774")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, ConvertedT> transform)
		{
			return null;
		}

		[Token(Token = "0x6000775")]
		private void ActionHandlers(IRejectable resultPromise, Action<T> resolveHandler, Action<Exception> rejectHandler)
		{
		}

		[Token(Token = "0x6000776")]
		private void ProgressHandlers(IRejectable resultPromise, Action<float> progressHandler)
		{
		}

		[Token(Token = "0x6000777")]
		public static IPromise<T0> First<T0>(params Func<IPromise<T0>>[] fns)
		{
			return null;
		}

		[Token(Token = "0x6000778")]
		public static IPromise<T0> First<T0>(IEnumerable<Func<IPromise<T0>>> fns)
		{
			return null;
		}

		[Token(Token = "0x6000779")]
		public IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x600077A")]
		public IPromise ThenAll(Func<T, IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x600077B")]
		public static IPromise<IEnumerable<T>> All(params IPromise<T>[] promises)
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		public static IPromise<IEnumerable<T>> All(IEnumerable<IPromise<T>> promises)
		{
			return null;
		}

		[Token(Token = "0x600077D")]
		public IPromise<ConvertedT> ThenRace<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		public IPromise ThenRace(Func<T, IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x600077F")]
		public static IPromise<T> Race(params IPromise<T>[] promises)
		{
			return null;
		}

		[Token(Token = "0x6000780")]
		public static IPromise<T> Race(IEnumerable<IPromise<T>> promises)
		{
			return null;
		}

		[Token(Token = "0x6000781")]
		public static IPromise<T> Resolved(T promisedValue)
		{
			return null;
		}

		[Token(Token = "0x6000782")]
		public static IPromise<T> Rejected(Exception ex)
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		public IPromise<T> Finally(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000784")]
		public IPromise ContinueWith(Func<IPromise> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000785")]
		public IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6000786")]
		public IPromise<T> Progress(Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6000787")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DE8", Offset = "0x6F0DE8")]
		private void <Done>b__31_0(Exception ex)
		{
		}

		[Token(Token = "0x6000788")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0DF8", Offset = "0x6F0DF8")]
		private void <Done>b__32_0(Exception ex)
		{
		}

		[Token(Token = "0x6000789")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E08", Offset = "0x6F0E08")]
		private void <Done>b__33_0(Exception ex)
		{
		}
	}
	[Token(Token = "0x20000EA")]
	public class Promise : IPromise, IPendingPromise, IRejectable, IPromiseInfo
	{
		[Token(Token = "0x200038F")]
		public struct ResolveHandler
		{
			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action Callback;

			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IRejectable Rejectable;
		}

		[Token(Token = "0x2000390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E29B4", Offset = "0x6E29B4")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise resultPromise;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Exception> onRejected;

			[Token(Token = "0x600179E")]
			[Address(RVA = "0x97B8D8", Offset = "0x97B8D8", VA = "0x97B8D8")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x600179F")]
			[Address(RVA = "0x97D094", Offset = "0x97D094", VA = "0x97D094")]
			internal void <Catch>g__resolveHandler|0()
			{
			}

			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x97D0C0", Offset = "0x97D0C0", VA = "0x97D0C0")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x97D1D8", Offset = "0x97D1D8", VA = "0x97D1D8")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x2000391")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E29C4", Offset = "0x6E29C4")]
		private sealed class <>c__DisplayClass54_0<ConvertedT>
		{
			[Token(Token = "0x400123A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IPromise<ConvertedT>> onResolved;

			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<ConvertedT> resultPromise;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, IPromise<ConvertedT>> onRejected;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__3;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__5;

			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__6;

			[Token(Token = "0x60017A2")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60017A3")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x60017A4")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x60017A5")]
			internal void <Then>b__3(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x60017A6")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x60017A7")]
			internal void <Then>b__1(Exception ex)
			{
			}

			[Token(Token = "0x60017A8")]
			internal void <Then>b__5(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x60017A9")]
			internal void <Then>b__6(Exception callbackEx)
			{
			}
		}

		[Token(Token = "0x2000392")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E29D4", Offset = "0x6E29D4")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IPromise> onResolved;

			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> onRejected;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__3;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x97BF2C", Offset = "0x97BF2C", VA = "0x97BF2C")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x97D214", Offset = "0x97D214", VA = "0x97D214")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x97D448", Offset = "0x97D448", VA = "0x97D448")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x97D484", Offset = "0x97D484", VA = "0x97D484")]
			internal void <Then>b__3()
			{
			}

			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x97D4B0", Offset = "0x97D4B0", VA = "0x97D4B0")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x97D4DC", Offset = "0x97D4DC", VA = "0x97D4DC")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000393")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E29E4", Offset = "0x6E29E4")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onResolved;

			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> onRejected;

			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x97BFA4", Offset = "0x97BFA4", VA = "0x97BFA4")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x97D55C", Offset = "0x97D55C", VA = "0x97D55C")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x97D5A8", Offset = "0x97D5A8", VA = "0x97D5A8")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000394")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E29F4", Offset = "0x6E29F4")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<IPromise>> chain;

			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x97C068", Offset = "0x97C068", VA = "0x97C068")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x97D640", Offset = "0x97D640", VA = "0x97D640")]
			internal IPromise <ThenAll>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000395")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A04", Offset = "0x6E2A04")]
		private sealed class <>c__DisplayClass60_0<ConvertedT>
		{
			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x60017B5")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x60017B6")]
			internal IPromise<IEnumerable<ConvertedT>> <ThenAll>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000396")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A14", Offset = "0x6E2A14")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] progress;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int remainingCount;

			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x97C294", Offset = "0x97C294", VA = "0x97C294")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x97D6D0", Offset = "0x97D6D0", VA = "0x97D6D0")]
			internal void <All>b__0(IPromise promise, int index)
			{
			}

			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x97D9F8", Offset = "0x97D9F8", VA = "0x97D9F8")]
			internal void <All>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000397")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A24", Offset = "0x6E2A24")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass62_0 CS$<>8__locals1;

			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x97D9F0", Offset = "0x97D9F0", VA = "0x97D9F0")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x97DA54", Offset = "0x97DA54", VA = "0x97DA54")]
			internal void <All>b__1(float v)
			{
			}

			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x97DB54", Offset = "0x97DB54", VA = "0x97DB54")]
			internal void <All>b__2()
			{
			}
		}

		[Token(Token = "0x2000398")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A34", Offset = "0x6E2A34")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<Func<IPromise>>> chain;

			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x97C3C0", Offset = "0x97C3C0", VA = "0x97C3C0")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x97DC6C", Offset = "0x97DC6C", VA = "0x97DC6C")]
			internal IPromise <ThenSequence>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000399")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A44", Offset = "0x6E2A44")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int count;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise promise;

			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x97C6E8", Offset = "0x97C6E8", VA = "0x97C6E8")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x97DCFC", Offset = "0x97DCFC", VA = "0x97DCFC")]
			internal IPromise <Sequence>b__0(IPromise prevPromise, Func<IPromise> fn)
			{
				return null;
			}
		}

		[Token(Token = "0x200039A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A54", Offset = "0x6E2A54")]
		private sealed class <>c__DisplayClass65_1
		{
			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int itemSequence;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<IPromise> fn;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass65_0 CS$<>8__locals1;

			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x97DF10", Offset = "0x97DF10", VA = "0x97DF10")]
			public <>c__DisplayClass65_1()
			{
			}

			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x97DF18", Offset = "0x97DF18", VA = "0x97DF18")]
			internal IPromise <Sequence>b__1()
			{
				return null;
			}

			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x97DFE0", Offset = "0x97DFE0", VA = "0x97DFE0")]
			internal void <Sequence>b__2(float v)
			{
			}
		}

		[Token(Token = "0x200039B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A64", Offset = "0x6E2A64")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<IPromise>> chain;

			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x97C7AC", Offset = "0x97C7AC", VA = "0x97C7AC")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x97E060", Offset = "0x97E060", VA = "0x97E060")]
			internal IPromise <ThenRace>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200039C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A74", Offset = "0x6E2A74")]
		private sealed class <>c__DisplayClass67_0<ConvertedT>
		{
			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x60017C6")]
			public <>c__DisplayClass67_0()
			{
			}

			[Token(Token = "0x60017C7")]
			internal IPromise<ConvertedT> <ThenRace>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200039D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A84", Offset = "0x6E2A84")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] progress;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> <>9__2;

			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__3;

			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x97C9CC", Offset = "0x97C9CC", VA = "0x97C9CC")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x97E0F0", Offset = "0x97E0F0", VA = "0x97E0F0")]
			internal void <Race>b__0(IPromise promise, int index)
			{
			}

			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x97E420", Offset = "0x97E420", VA = "0x97E420")]
			internal void <Race>b__2(Exception ex)
			{
			}

			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x97E47C", Offset = "0x97E47C", VA = "0x97E47C")]
			internal void <Race>b__3()
			{
			}
		}

		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2A94", Offset = "0x6E2A94")]
		private sealed class <>c__DisplayClass69_1
		{
			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass69_0 CS$<>8__locals1;

			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x97E418", Offset = "0x97E418", VA = "0x97E418")]
			public <>c__DisplayClass69_1()
			{
			}

			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x97E4D0", Offset = "0x97E4D0", VA = "0x97E4D0")]
			internal void <Race>b__1(float v)
			{
			}
		}

		[Token(Token = "0x200039F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2AA4", Offset = "0x6E2AA4")]
		private sealed class <>c__DisplayClass73_0
		{
			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise promise;

			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x97CC04", Offset = "0x97CC04", VA = "0x97CC04")]
			public <>c__DisplayClass73_0()
			{
			}

			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x97E594", Offset = "0x97E594", VA = "0x97E594")]
			internal void <Finally>b__0(Exception e)
			{
			}
		}

		[Token(Token = "0x20003A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2AB4", Offset = "0x6E2AB4")]
		private sealed class <>c__DisplayClass74_0
		{
			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise promise;

			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x97CD9C", Offset = "0x97CD9C", VA = "0x97CD9C")]
			public <>c__DisplayClass74_0()
			{
			}

			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x97E6A4", Offset = "0x97E6A4", VA = "0x97E6A4")]
			internal void <ContinueWith>b__0(Exception e)
			{
			}
		}

		[Token(Token = "0x20003A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2AC4", Offset = "0x6E2AC4")]
		private sealed class <>c__DisplayClass75_0<ConvertedT>
		{
			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x60017D2")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60017D3")]
			internal void <ContinueWith>b__0(Exception e)
			{
			}
		}

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnablePromiseTracking;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static EventHandler<ExceptionEventArgs> sm_unhandlerException;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int sm_nextPromiseId;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly HashSet<IPromiseInfo> sm_pendingPromises;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Exception m_rejectionException;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RejectHandler> m_rejectHandlers;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ResolveHandler> m_resolveHandlers;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ProgressHandler> m_progressHandlers;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44B8", Offset = "0x6E44B8")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44C8", Offset = "0x6E44C8")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E44D8", Offset = "0x6E44D8")]
		private PromiseState <State>k__BackingField;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IPromise resolvedPromise;

		[Token(Token = "0x17000069")]
		public int Id
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x97A484", Offset = "0x97A484", VA = "0x97A484", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E18", Offset = "0x6F0E18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x97A48C", Offset = "0x97A48C", VA = "0x97A48C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E28", Offset = "0x6F0E28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public string Name
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x97A494", Offset = "0x97A494", VA = "0x97A494", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E38", Offset = "0x6F0E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x97A49C", Offset = "0x97A49C", VA = "0x97A49C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E48", Offset = "0x6F0E48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public PromiseState State
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x97A4A4", Offset = "0x97A4A4", VA = "0x97A4A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E58", Offset = "0x6F0E58")]
			get
			{
				return default(PromiseState);
			}
			[Token(Token = "0x6000792")]
			[Address(RVA = "0x97A4AC", Offset = "0x97A4AC", VA = "0x97A4AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E68", Offset = "0x6F0E68")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public static event EventHandler<ExceptionEventArgs> UnhandledException
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x97A23C", Offset = "0x97A23C", VA = "0x97A23C")]
			add
			{
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x97A32C", Offset = "0x97A32C", VA = "0x97A32C")]
			remove
			{
			}
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x97A41C", Offset = "0x97A41C", VA = "0x97A41C")]
		public static IEnumerable<IPromiseInfo> GetPendingPromises()
		{
			return null;
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x97824C", Offset = "0x97824C", VA = "0x97824C")]
		public Promise()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x97A524", Offset = "0x97A524", VA = "0x97A524")]
		public Promise(Action<Action, Action<Exception>> resolver)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x97A920", Offset = "0x97A920", VA = "0x97A920")]
		private Promise(PromiseState initialState)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x978AEC", Offset = "0x978AEC", VA = "0x978AEC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x97A4B4", Offset = "0x97A4B4", VA = "0x97A4B4")]
		internal static int NextId()
		{
			return default(int);
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x97A9A4", Offset = "0x97A9A4", VA = "0x97A9A4")]
		private void AddRejectHandler(Action<Exception> onRejected, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x97AA48", Offset = "0x97AA48", VA = "0x97AA48")]
		private void AddResolveHandler(Action onResolved, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x97AAEC", Offset = "0x97AAEC", VA = "0x97AAEC")]
		private void AddProgressHandler(Action<float> onProgress, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x97AB90", Offset = "0x97AB90", VA = "0x97AB90")]
		private void InvokeRejectHandler(Action<Exception> callback, IRejectable rejectable, Exception value)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x97ACF4", Offset = "0x97ACF4", VA = "0x97ACF4")]
		private void InvokeResolveHandler(Action callback, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x97AE48", Offset = "0x97AE48", VA = "0x97AE48")]
		private void InvokeProgressHandler(Action<float> callback, IRejectable rejectable, float progress)
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x97AFB8", Offset = "0x97AFB8", VA = "0x97AFB8")]
		private void ClearHandlers()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x97AFC4", Offset = "0x97AFC4", VA = "0x97AFC4")]
		private void InvokeRejectHandlers(Exception ex)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x97B0C8", Offset = "0x97B0C8", VA = "0x97B0C8")]
		private void InvokeResolveHandlers()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x97B1BC", Offset = "0x97B1BC", VA = "0x97B1BC")]
		private void InvokeProgressHandlers(float progress)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x97A704", Offset = "0x97A704", VA = "0x97A704", Slot = "31")]
		public void Reject(Exception ex)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x978C6C", Offset = "0x978C6C", VA = "0x978C6C", Slot = "29")]
		public void Resolve()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x97B2B8", Offset = "0x97B2B8", VA = "0x97B2B8", Slot = "30")]
		public void ReportProgress(float progress)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x97B470", Offset = "0x97B470", VA = "0x97B470", Slot = "6")]
		public void Done(Action onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x97B590", Offset = "0x97B590", VA = "0x97B590", Slot = "7")]
		public void Done(Action onResolved)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x97B6B0", Offset = "0x97B6B0", VA = "0x97B6B0", Slot = "8")]
		public void Done()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x97B8D0", Offset = "0x97B8D0", VA = "0x97B8D0", Slot = "5")]
		public IPromise WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x97B744", Offset = "0x97B744", VA = "0x97B744", Slot = "9")]
		public IPromise Catch(Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x60007AA")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved)
		{
			return null;
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x97B98C", Offset = "0x97B98C", VA = "0x97B98C", Slot = "11")]
		public IPromise Then(Func<IPromise> onResolved)
		{
			return null;
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x97B6A4", Offset = "0x97B6A4", VA = "0x97B6A4", Slot = "12")]
		public IPromise Then(Action onResolved)
		{
			return null;
		}

		[Token(Token = "0x60007AD")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected)
		{
			return null;
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x97BF24", Offset = "0x97BF24", VA = "0x97BF24", Slot = "14")]
		public IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x97B588", Offset = "0x97B588", VA = "0x97B588", Slot = "15")]
		public IPromise Then(Action onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x60007B0")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x97B998", Offset = "0x97B998", VA = "0x97B998", Slot = "17")]
		public IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x97BC60", Offset = "0x97BC60", VA = "0x97BC60", Slot = "18")]
		public IPromise Then(Action onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x97B8E0", Offset = "0x97B8E0", VA = "0x97B8E0")]
		private void ActionHandlers(IRejectable resultPromise, Action resolveHandler, Action<Exception> rejectHandler)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x97B970", Offset = "0x97B970", VA = "0x97B970")]
		private void ProgressHandlers(IRejectable resultPromise, Action<float> progressHandler)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x97BFAC", Offset = "0x97BFAC", VA = "0x97BFAC", Slot = "19")]
		public IPromise ThenAll(Func<IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x60007B6")]
		public IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x97C070", Offset = "0x97C070", VA = "0x97C070")]
		public static IPromise All(params IPromise[] promises)
		{
			return null;
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x97C0D4", Offset = "0x97C0D4", VA = "0x97C0D4")]
		public static IPromise All(IEnumerable<IPromise> promises)
		{
			return null;
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x97C304", Offset = "0x97C304", VA = "0x97C304", Slot = "21")]
		public IPromise ThenSequence(Func<IEnumerable<Func<IPromise>>> chain)
		{
			return null;
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x97C3C8", Offset = "0x97C3C8", VA = "0x97C3C8")]
		public static IPromise Sequence(params Func<IPromise>[] fns)
		{
			return null;
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x97C42C", Offset = "0x97C42C", VA = "0x97C42C")]
		public static IPromise Sequence(IEnumerable<Func<IPromise>> fns)
		{
			return null;
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x97C6F0", Offset = "0x97C6F0", VA = "0x97C6F0", Slot = "22")]
		public IPromise ThenRace(Func<IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x60007BD")]
		public IPromise<ConvertedT> ThenRace<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x97C7B4", Offset = "0x97C7B4", VA = "0x97C7B4")]
		public static IPromise Race(params IPromise[] promises)
		{
			return null;
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x97C818", Offset = "0x97C818", VA = "0x97C818")]
		public static IPromise Race(IEnumerable<IPromise> promises)
		{
			return null;
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x97C29C", Offset = "0x97C29C", VA = "0x97C29C")]
		public static IPromise Resolved()
		{
			return null;
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x97BF34", Offset = "0x97BF34", VA = "0x97BF34")]
		public static IPromise Rejected(Exception ex)
		{
			return null;
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x97C9D4", Offset = "0x97C9D4", VA = "0x97C9D4", Slot = "24")]
		public IPromise Finally(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x97CC0C", Offset = "0x97CC0C", VA = "0x97CC0C", Slot = "25")]
		public IPromise ContinueWith(Func<IPromise> onComplete)
		{
			return null;
		}

		[Token(Token = "0x60007C4")]
		public IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete)
		{
			return null;
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x97CDA4", Offset = "0x97CDA4", VA = "0x97CDA4", Slot = "27")]
		public IPromise Progress(Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x97CDDC", Offset = "0x97CDDC", VA = "0x97CDDC")]
		internal static void PropagateUnhandledException(object sender, Exception ex)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x97CF38", Offset = "0x97CF38", VA = "0x97CF38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E78", Offset = "0x6F0E78")]
		private void <Done>b__43_0(Exception ex)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x97CFAC", Offset = "0x97CFAC", VA = "0x97CFAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E88", Offset = "0x6F0E88")]
		private void <Done>b__44_0(Exception ex)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x97D020", Offset = "0x97D020", VA = "0x97D020")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0E98", Offset = "0x6F0E98")]
		private void <Done>b__45_0(Exception ex)
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public static class PromiseExtensions
	{
		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x97E6D0", Offset = "0x97E6D0", VA = "0x97E6D0")]
		public static bool IsPending(this Promise promise)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CC")]
		public static bool IsPending<T>(this Promise<T> promise)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000EC")]
	public enum PromiseState
	{
		[Token(Token = "0x400057B")]
		Pending,
		[Token(Token = "0x400057C")]
		Rejected,
		[Token(Token = "0x400057D")]
		Resolved
	}
	[Token(Token = "0x20000ED")]
	public struct RejectHandler
	{
		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<Exception> Callback;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IRejectable Rejectable;
	}
}
namespace Cortopia.Scripts.Utils.CustomArrays
{
	[Serializable]
	[Token(Token = "0x20000EE")]
	public class StringArray
	{
		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Values;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Count;

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x976C30", Offset = "0x976C30", VA = "0x976C30")]
		public StringArray(int length)
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x976CA0", Offset = "0x976CA0", VA = "0x976CA0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x976D90", Offset = "0x976D90", VA = "0x976D90")]
		public void AddRange(string[] values)
		{
		}
	}
}
namespace Cortopia.Scripts.Utils.Conditions
{
	[Serializable]
	[Token(Token = "0x20000EF")]
	public class MultiCondition : Condition
	{
		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ScriptableVariable CompareVariable;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnConditionMet;

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x9768A0", Offset = "0x9768A0", VA = "0x9768A0")]
		public MultiCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F0")]
	public class Condition
	{
		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ConditionType m_conditionType;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private ComparisonType m_comparison;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_intValue;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_floatValue;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_stringValue;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_boolValue;

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x9748FC", Offset = "0x9748FC", VA = "0x9748FC")]
		public bool IsMet(object compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x9753C4", Offset = "0x9753C4", VA = "0x9753C4")]
		public bool IsMet(int compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x9753D4", Offset = "0x9753D4", VA = "0x9753D4")]
		public bool IsMet(float compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x9753E4", Offset = "0x9753E4", VA = "0x9753E4")]
		public bool IsMet(string compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x9753F8", Offset = "0x9753F8", VA = "0x9753F8")]
		public bool IsMet(bool compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x97540C", Offset = "0x97540C", VA = "0x97540C")]
		public Condition()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class ConditionComparer : MonoBehaviour
	{
		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Condition m_condition;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4558", Offset = "0x6E4558")]
		[SerializeField]
		private CortopiaEventType m_eventType;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScriptableEvent m_onConditionMet;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onConditionMetUnity;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object m_value;

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x975474", Offset = "0x975474", VA = "0x975474")]
		public void CheckCondition(object compareValue)
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x975558", Offset = "0x975558", VA = "0x975558")]
		private void ConditionMet()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x9756B4", Offset = "0x9756B4", VA = "0x9756B4")]
		public ConditionComparer()
		{
		}
	}
	[Token(Token = "0x20000F2")]
	public static class ConditionUtils
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x97571C", Offset = "0x97571C", VA = "0x97571C")]
		public static bool IsComparisonCorrect(object lhs, ComparisonType comparison, object rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x974B30", Offset = "0x974B30", VA = "0x974B30")]
		public static bool IsComparisonCorrect(int lhs, ComparisonType comparison, int rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x974C8C", Offset = "0x974C8C", VA = "0x974C8C")]
		public static bool IsComparisonCorrect(float lhs, ComparisonType comparison, float rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x974DE8", Offset = "0x974DE8", VA = "0x974DE8")]
		public static bool IsComparisonCorrect(string lhs, ComparisonType comparison, string rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x975144", Offset = "0x975144", VA = "0x975144")]
		public static bool IsComparisonCorrect(bool lhs, ComparisonType comparison, bool rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000F3")]
	public enum ConditionType
	{
		[Token(Token = "0x4000590")]
		Int,
		[Token(Token = "0x4000591")]
		Float,
		[Token(Token = "0x4000592")]
		String,
		[Token(Token = "0x4000593")]
		Bool,
		[Token(Token = "0x4000594")]
		ScriptableVariable
	}
	[Serializable]
	[Token(Token = "0x20000F4")]
	public class GlobalCondition
	{
		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E45C4", Offset = "0x6E45C4")]
		[SerializeField]
		private ConditionType m_variableType;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntVariable m_intVariable;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_floatVariable;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StringVariable m_stringVariable;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable m_boolVariable;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableVariable m_scriptableVariable;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4660", Offset = "0x6E4660")]
		[SerializeField]
		private ComparisonType m_comparison;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_compareInt;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_compareFloat;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_compareString;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_compareBool;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScriptableVariable m_compareScriptableVariable;

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x975E4C", Offset = "0x975E4C", VA = "0x975E4C")]
		public void AddConditionValueChangedCallback(Action onValueChanged)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x975F7C", Offset = "0x975F7C", VA = "0x975F7C")]
		public void RemoveConditionValueChangedCallback(Action onValueChanged)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x9760AC", Offset = "0x9760AC", VA = "0x9760AC")]
		public bool IsConditionMet()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x976270", Offset = "0x976270", VA = "0x976270")]
		private bool IsApplicationPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x976278", Offset = "0x976278", VA = "0x976278")]
		public GlobalCondition()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class GlobalConditionComparer : RoomBehaviour
	{
		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E46FC", Offset = "0x6E46FC")]
		private bool m_compareInUpdate;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E4748", Offset = "0x6E4748")]
		private bool m_compareInInitialize;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E4794", Offset = "0x6E4794")]
		private bool m_registerCallbackOnConditionValueChange;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E47E0", Offset = "0x6E47E0")]
		[SerializeField]
		private GlobalCondition[] m_globalConditions;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E482C", Offset = "0x6E482C")]
		[SerializeField]
		private bool m_useConditionMetEvent;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onConditionMet;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_useConditionNotMetEvent;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onConditionNotMet;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isConditionMet;

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x9762E8", Offset = "0x9762E8", VA = "0x9762E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x9763E0", Offset = "0x9763E0", VA = "0x9763E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x9764D8", Offset = "0x9764D8", VA = "0x9764D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x9765C8", Offset = "0x9765C8", VA = "0x9765C8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x9764E8", Offset = "0x9764E8", VA = "0x9764E8")]
		public void CheckConditions()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x9765D8", Offset = "0x9765D8", VA = "0x9765D8")]
		public GlobalConditionComparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F6")]
	public class InventoryCondition
	{
		[Token(Token = "0x20003A2")]
		public enum InventoryConditionType
		{
			[Token(Token = "0x4001266")]
			Count,
			[Token(Token = "0x4001267")]
			Contains
		}

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private InventoryItemData m_itemData;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E48B8", Offset = "0x6E48B8")]
		[SerializeField]
		private InventoryConditionType m_conditionType;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private ComparisonType m_comparison;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_count;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_hasItem;

		[Token(Token = "0x1700006C")]
		public int ItemID
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x976678", Offset = "0x976678", VA = "0x976678")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x9766A8", Offset = "0x9766A8", VA = "0x9766A8")]
		public bool IsMet()
		{
			return default(bool);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x976888", Offset = "0x976888", VA = "0x976888")]
		private bool IsApplicationPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x976890", Offset = "0x976890", VA = "0x976890")]
		public InventoryCondition()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class MultiGlobalConditionComparer : RoomBehaviour
	{
		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E4934", Offset = "0x6E4934")]
		private ScriptableVariable m_globalVariable;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_compareInInitialize;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_registerCallbackOnConditionValueChange;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool m_breakOnFirstConditionMet;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MultiCondition[] m_conditions;

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x976904", Offset = "0x976904", VA = "0x976904")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x9769AC", Offset = "0x9769AC", VA = "0x9769AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x976A54", Offset = "0x976A54", VA = "0x976A54", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x976A64", Offset = "0x976A64", VA = "0x976A64")]
		public void CompareConditionsAndRaiseEvent()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x976BC0", Offset = "0x976BC0", VA = "0x976BC0")]
		public MultiGlobalConditionComparer()
		{
		}
	}
}
namespace Cortopia.Scripts.Tutorial
{
	[Serializable]
	[Token(Token = "0x20000F8")]
	public class PlatformSpecificInstruction
	{
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private InputDeviceType m_inputDevice;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_instruction;

		[Token(Token = "0x1700006D")]
		public InputDeviceType InputDevice
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0x86B86C", Offset = "0x86B86C", VA = "0x86B86C")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x1700006E")]
		public GameObject Instruction
		{
			[Token(Token = "0x60007F4")]
			[Address(RVA = "0x86B874", Offset = "0x86B874", VA = "0x86B874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x86B87C", Offset = "0x86B87C", VA = "0x86B87C")]
		public PlatformSpecificInstruction()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1548", Offset = "0x6E1548")]
	public class TutorialScroll : MonoBehaviour
	{
		[Token(Token = "0x20003A3")]
		private enum ScrollState
		{
			[Token(Token = "0x4001269")]
			Opening,
			[Token(Token = "0x400126A")]
			Open,
			[Token(Token = "0x400126B")]
			Closing,
			[Token(Token = "0x400126C")]
			Closed
		}

		[Token(Token = "0x20003A4")]
		private enum OpeningType
		{
			[Token(Token = "0x400126E")]
			Left,
			[Token(Token = "0x400126F")]
			Right,
			[Token(Token = "0x4001270")]
			FadeIn
		}

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_showScrollParam;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_animationDuration;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Ease m_openingEaseType;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Ease m_closingEaseType;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private OpeningType m_openingType;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlatformSpecificInstruction[] m_platormSpecificInstructions;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_defaultInstruction;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScrollState m_state;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private InputDeviceType m_inputDeviceType;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_animationCurveTime;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_closedPosition;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_openPosition;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TweenCallback m_onCompleteAction;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_sequence;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_deactivatedFromBehaviour;

		[Token(Token = "0x40005C6")]
		private const float SlideDistance = 1f;

		[Token(Token = "0x1700006F")]
		public bool IsShowing
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x86B88C", Offset = "0x86B88C", VA = "0x86B88C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x86B89C", Offset = "0x86B89C", VA = "0x86B89C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x86BDF0", Offset = "0x86BDF0", VA = "0x86BDF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x86BA38", Offset = "0x86BA38", VA = "0x86BA38")]
		private void HandlePlatformSpecificInstructions()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x86BE34", Offset = "0x86BE34", VA = "0x86BE34")]
		public void Open()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x85E060", Offset = "0x85E060", VA = "0x85E060")]
		public void Close()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x86C054", Offset = "0x86C054", VA = "0x86C054")]
		private bool IsNonPlatformSpecific()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x86BC2C", Offset = "0x86BC2C", VA = "0x86BC2C")]
		private Vector3 GetTargetClosedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x86BE98", Offset = "0x86BE98", VA = "0x86BE98")]
		private void StartAnimating(bool isOpening)
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x86C088", Offset = "0x86C088", VA = "0x86C088")]
		private Vector3 GetTargetPosition(bool isOpening)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x86C0D8", Offset = "0x86C0D8", VA = "0x86C0D8")]
		private float GetTargetAlpha(bool isOpening)
		{
			return default(float);
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x86C0C0", Offset = "0x86C0C0", VA = "0x86C0C0")]
		private Ease GetEaseType(bool isOpening)
		{
			return default(Ease);
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x86C0EC", Offset = "0x86C0EC", VA = "0x86C0EC")]
		private void OnOpeningAnimComplete()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x86C0F8", Offset = "0x86C0F8", VA = "0x86C0F8")]
		private void OnClosingAnimComplete()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x86C138", Offset = "0x86C138", VA = "0x86C138")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x86C178", Offset = "0x86C178", VA = "0x86C178")]
		public TutorialScroll()
		{
		}
	}
}
namespace Cortopia.Scripts.Timeline
{
	[Serializable]
	[Token(Token = "0x20000FA")]
	public class MonologueBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VoiceLine VoiceLine;

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x86A024", Offset = "0x86A024", VA = "0x86A024")]
		public void PlayVoiceLines(CharacterData character)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x86A0D4", Offset = "0x86A0D4", VA = "0x86A0D4")]
		public MonologueBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FB")]
	public class MonologueClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoiceLine VoiceLine;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MonologueBehaviour m_template;

		[Token(Token = "0x17000070")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x86A0DC", Offset = "0x86A0DC", VA = "0x86A0DC", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x17000071")]
		public override double duration
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x86A0E4", Offset = "0x86A0E4", VA = "0x86A0E4", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x86A1E0", Offset = "0x86A1E0", VA = "0x86A1E0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x86A2C4", Offset = "0x86A2C4", VA = "0x86A2C4")]
		private void UpdateSubtitles()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x86A2C8", Offset = "0x86A2C8", VA = "0x86A2C8")]
		public MonologueClip()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class MonologueMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool[] m_activeVOs;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_clipCount;

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x86A330", Offset = "0x86A330", VA = "0x86A330", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x86A3B8", Offset = "0x86A3B8", VA = "0x86A3B8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x86A5EC", Offset = "0x86A5EC", VA = "0x86A5EC")]
		public MonologueMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6E15AC", Offset = "0x6E15AC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6E15AC", Offset = "0x6E15AC")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x6E15AC", Offset = "0x6E15AC")]
	public class MonologueTrack : TrackAsset
	{
		[Token(Token = "0x6000810")]
		[Address(RVA = "0x86A5F4", Offset = "0x86A5F4", VA = "0x86A5F4", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x86A68C", Offset = "0x86A68C", VA = "0x86A68C")]
		public MonologueTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FE")]
	public class TimelineEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScriptableVariable ScriptableVariable;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScriptableEvent ScriptableEvent;

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x86A964", Offset = "0x86A964", VA = "0x86A964")]
		public void RaiseEvent()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x86B5A4", Offset = "0x86B5A4", VA = "0x86B5A4")]
		public TimelineEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FF")]
	public class TimelineEventClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<ScriptableVariable> Variable;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExposedReference<ScriptableEvent> Event;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TimelineEventBehaviour m_template;

		[Token(Token = "0x17000072")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x86B5AC", Offset = "0x86B5AC", VA = "0x86B5AC", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x86B5B4", Offset = "0x86B5B4", VA = "0x86B5B4", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x86B704", Offset = "0x86B704", VA = "0x86B704")]
		public TimelineEventClip()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class TimeLineEventMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool[] m_activeEvents;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_clipCount;

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x86A6F4", Offset = "0x86A6F4", VA = "0x86A6F4", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x86A77C", Offset = "0x86A77C", VA = "0x86A77C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x86A998", Offset = "0x86A998", VA = "0x86A998")]
		public TimeLineEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6E1654", Offset = "0x6E1654")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6E1654", Offset = "0x6E1654")]
	public class TimelineEventTrack : TrackAsset
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0x86B76C", Offset = "0x86B76C", VA = "0x86B76C", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x86B804", Offset = "0x86B804", VA = "0x86B804")]
		public TimelineEventTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000102")]
	public class TimeMachineBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x20003A5")]
		public enum TimeMachineAction
		{
			[Token(Token = "0x4001272")]
			Marker,
			[Token(Token = "0x4001273")]
			JumpToMarker
		}

		[Token(Token = "0x20003A6")]
		public enum TimeMachineCondition
		{
			[Token(Token = "0x4001275")]
			Always,
			[Token(Token = "0x4001276")]
			ScriptableBool
		}

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimeMachineAction Action;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TimeMachineCondition Condition;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MarkerToJumpTo;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MarkerLabel;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoolVariable ScriptableBool;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ScriptableBoolCondition;

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x86A9A0", Offset = "0x86A9A0", VA = "0x86A9A0")]
		public bool ConditionMet()
		{
			return default(bool);
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x86AAF8", Offset = "0x86AAF8", VA = "0x86AAF8")]
		public TimeMachineBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000103")]
	public class TimeMachineClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimeMachineBehaviour.TimeMachineAction Action;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MarkerLabel;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeMachineBehaviour.TimeMachineCondition Condition;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string MarkerToJumpTo;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExposedReference<BoolVariable> ScriptableBool;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ScriptableBoolCondition;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TimeMachineBehaviour m_template;

		[Token(Token = "0x17000073")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x600081E")]
			[Address(RVA = "0x86AB00", Offset = "0x86AB00", VA = "0x86AB00", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x86AB08", Offset = "0x86AB08", VA = "0x86AB08", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x86ACA8", Offset = "0x86ACA8", VA = "0x86ACA8")]
		public TimeMachineClip()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class TimeMachineMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, double> MarkerClips;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_director;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x86AD30", Offset = "0x86AD30", VA = "0x86AD30", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x86ADF4", Offset = "0x86ADF4", VA = "0x86ADF4", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x86B068", Offset = "0x86B068", VA = "0x86B068")]
		public TimeMachineMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x6E16D8", Offset = "0x6E16D8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x6E16D8", Offset = "0x6E16D8")]
	public class TimeMachineTrack : TrackAsset
	{
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x86B070", Offset = "0x86B070", VA = "0x86B070", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x86B53C", Offset = "0x86B53C", VA = "0x86B53C")]
		public TimeMachineTrack()
		{
		}
	}
}
namespace Cortopia.Scripts.ScriptableVariables
{
	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E175C", Offset = "0x6E175C")]
	public class AudioClipVariable : ScriptableVariable
	{
		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip m_audioClip;

		[Token(Token = "0x17000074")]
		public AudioClip Value
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0x868CBC", Offset = "0x868CBC", VA = "0x868CBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x868CC4", Offset = "0x868CC4", VA = "0x868CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public override object ObjectValue
		{
			[Token(Token = "0x6000828")]
			[Address(RVA = "0x868D7C", Offset = "0x868D7C", VA = "0x868D7C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x868D84", Offset = "0x868D84", VA = "0x868D84", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x868D88", Offset = "0x868D88", VA = "0x868D88", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x868D8C", Offset = "0x868D8C", VA = "0x868D8C", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x868D90", Offset = "0x868D90", VA = "0x868D90", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x868D94", Offset = "0x868D94", VA = "0x868D94")]
		public AudioClipVariable()
		{
		}
	}
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E17CC", Offset = "0x6E17CC")]
	public class BoolVariable : ScriptableVariable
	{
		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableBool m_bool;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_defaultBool;

		[Token(Token = "0x17000076")]
		public bool Value
		{
			[Token(Token = "0x600082E")]
			[Address(RVA = "0x868DA4", Offset = "0x868DA4", VA = "0x868DA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600082F")]
			[Address(RVA = "0x85A684", Offset = "0x85A684", VA = "0x85A684")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public override object ObjectValue
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0x868DD0", Offset = "0x868DD0", VA = "0x868DD0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x868E44", Offset = "0x868E44", VA = "0x868E44", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x868E78", Offset = "0x868E78", VA = "0x868E78", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x868EA8", Offset = "0x868EA8", VA = "0x868EA8", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x868FAC", Offset = "0x868FAC", VA = "0x868FAC", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x85A360", Offset = "0x85A360", VA = "0x85A360")]
		public static implicit operator bool(BoolVariable boolVariable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x8690A0", Offset = "0x8690A0", VA = "0x8690A0")]
		public static BoolVariable CreateInstance(bool value)
		{
			return null;
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x86910C", Offset = "0x86910C", VA = "0x86910C")]
		public BoolVariable()
		{
		}
	}
	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E183C", Offset = "0x6E183C")]
	public class FloatVariable : ScriptableVariable
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableFloat m_float;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_defaultFloat;

		[Token(Token = "0x17000078")]
		public float Value
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x869178", Offset = "0x869178", VA = "0x869178")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x8691A4", Offset = "0x8691A4", VA = "0x8691A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public override object ObjectValue
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x869218", Offset = "0x869218", VA = "0x869218", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x86928C", Offset = "0x86928C", VA = "0x86928C", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x8692C0", Offset = "0x8692C0", VA = "0x8692C0", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x8692F0", Offset = "0x8692F0", VA = "0x8692F0", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x8693F4", Offset = "0x8693F4", VA = "0x8693F4", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x8694E8", Offset = "0x8694E8", VA = "0x8694E8")]
		public static implicit operator float(FloatVariable floatVariable)
		{
			return default(float);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x869520", Offset = "0x869520", VA = "0x869520")]
		public static FloatVariable CreateInstance(float value)
		{
			return null;
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x869594", Offset = "0x869594", VA = "0x869594")]
		public FloatVariable()
		{
		}
	}
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E18AC", Offset = "0x6E18AC")]
	public class IntVariable : ScriptableVariable
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableInt m_int;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_defaultInt;

		[Token(Token = "0x1700007A")]
		public int Value
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0x8637D4", Offset = "0x8637D4", VA = "0x8637D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x865A7C", Offset = "0x865A7C", VA = "0x865A7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public override object ObjectValue
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0x869600", Offset = "0x869600", VA = "0x869600", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x869674", Offset = "0x869674", VA = "0x869674", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x8696A8", Offset = "0x8696A8", VA = "0x8696A8", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x8696D8", Offset = "0x8696D8", VA = "0x8696D8", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x8697DC", Offset = "0x8697DC", VA = "0x8697DC", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x8698D0", Offset = "0x8698D0", VA = "0x8698D0")]
		public static implicit operator int(IntVariable intVariable)
		{
			return default(int);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x869908", Offset = "0x869908", VA = "0x869908")]
		public static IntVariable CreateInstance(int value)
		{
			return null;
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x869974", Offset = "0x869974", VA = "0x869974")]
		public IntVariable()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public abstract class ScriptableVariable : ScriptableObject, ISavable
	{
		[Token(Token = "0x1700007C")]
		public abstract object ObjectValue
		{
			[Token(Token = "0x600084E")]
			get;
		}

		[Token(Token = "0x14000020")]
		public event Action OnValueChanged
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x8699E0", Offset = "0x8699E0", VA = "0x8699E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EC8", Offset = "0x6F0EC8")]
			add
			{
			}
			[Token(Token = "0x600084D")]
			[Address(RVA = "0x869ACC", Offset = "0x869ACC", VA = "0x869ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0ED8", Offset = "0x6F0ED8")]
			remove
			{
			}
		}

		[Token(Token = "0x600084F")]
		public abstract void Serialize(IWriteSave save);

		[Token(Token = "0x6000850")]
		public abstract void Deserialize(IReadSave save);

		[Token(Token = "0x6000851")]
		public abstract void SetDefaultValue();

		[Token(Token = "0x6000852")]
		public abstract void ResetDefaultValue();

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x868D68", Offset = "0x868D68", VA = "0x868D68")]
		protected void ValueChanged()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x868D9C", Offset = "0x868D9C", VA = "0x868D9C")]
		protected ScriptableVariable()
		{
		}
	}
	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E191C", Offset = "0x6E191C")]
	public class StringVariable : ScriptableVariable
	{
		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableString m_string;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_defaultString;

		[Token(Token = "0x1700007D")]
		public string Value
		{
			[Token(Token = "0x6000855")]
			[Address(RVA = "0x869BB8", Offset = "0x869BB8", VA = "0x869BB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000856")]
			[Address(RVA = "0x869BE4", Offset = "0x869BE4", VA = "0x869BE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public override object ObjectValue
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x869C60", Offset = "0x869C60", VA = "0x869C60", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x869C8C", Offset = "0x869C8C", VA = "0x869C8C", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x869CC0", Offset = "0x869CC0", VA = "0x869CC0", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x869CEC", Offset = "0x869CEC", VA = "0x869CEC", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x869DF0", Offset = "0x869DF0", VA = "0x869DF0", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x869EE4", Offset = "0x869EE4", VA = "0x869EE4")]
		public static implicit operator string(StringVariable stringVariable)
		{
			return null;
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x869F1C", Offset = "0x869F1C", VA = "0x869F1C")]
		public StringVariable()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public enum UsableVariableType
	{
		[Token(Token = "0x40005ED")]
		Internal,
		[Token(Token = "0x40005EE")]
		Global
	}
}
namespace Cortopia.Scripts.SaveLoad
{
	[Token(Token = "0x200010D")]
	public class GlobalVariableHandler : ScriptableObject, ISavable
	{
		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E4AB0", Offset = "0x6E4AB0")]
		[SerializeField]
		private ScriptableVariable[] m_variables;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x866F94", Offset = "0x866F94", VA = "0x866F94", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x867024", Offset = "0x867024", VA = "0x867024", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x8670B4", Offset = "0x8670B4", VA = "0x8670B4")]
		public void SetDefaultValues()
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x867154", Offset = "0x867154", VA = "0x867154")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x8671F4", Offset = "0x8671F4", VA = "0x8671F4")]
		public bool TrySetGlobalVariables(ScriptableVariable[] scriptableVariables)
		{
			return default(bool);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x86726C", Offset = "0x86726C", VA = "0x86726C")]
		public GlobalVariableHandler()
		{
		}
	}
	[Token(Token = "0x200010E")]
	public interface ISavable
	{
		[Token(Token = "0x6000864")]
		void Serialize(IWriteSave save);

		[Token(Token = "0x6000865")]
		void Deserialize(IReadSave save);
	}
	[Token(Token = "0x200010F")]
	public interface IIdentifiableSavable : ISavable
	{
		[Token(Token = "0x1700007F")]
		string Guid
		{
			[Token(Token = "0x6000866")]
			get;
			[Token(Token = "0x6000867")]
			set;
		}
	}
	[Token(Token = "0x2000110")]
	public interface IWriteSave
	{
		[Token(Token = "0x6000868")]
		void Write<T>(string guid, T saveData) where T : SavableData;
	}
	[Token(Token = "0x2000111")]
	public interface IReadSave
	{
		[Token(Token = "0x6000869")]
		T Read<T>(string guid, T defaultData) where T : SavableData;
	}
	[Serializable]
	[Token(Token = "0x2000112")]
	public abstract class SavableData
	{
		[Token(Token = "0x600086A")]
		[Address(RVA = "0x85DD38", Offset = "0x85DD38", VA = "0x85DD38")]
		protected SavableData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000113")]
	public class SavableBool : SavableData
	{
		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Value;

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x8672DC", Offset = "0x8672DC", VA = "0x8672DC")]
		public SavableBool(bool value = false)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x86730C", Offset = "0x86730C", VA = "0x86730C")]
		public static implicit operator bool(SavableBool savableBool)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000114")]
	public class SavableInt : SavableData
	{
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Value;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x85C730", Offset = "0x85C730", VA = "0x85C730")]
		public SavableInt(int value = 0)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x85B3CC", Offset = "0x85B3CC", VA = "0x85B3CC")]
		public static implicit operator int(SavableInt savableInt)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class SavableFloat : SavableData
	{
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Value;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x8673D8", Offset = "0x8673D8", VA = "0x8673D8")]
		public SavableFloat(float value = 0f)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x86740C", Offset = "0x86740C", VA = "0x86740C")]
		public static implicit operator float(SavableFloat savableFloat)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000116")]
	public class SavableString : SavableData
	{
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Value;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x867600", Offset = "0x867600", VA = "0x867600")]
		public SavableString([Optional] string value)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x86762C", Offset = "0x86762C", VA = "0x86762C")]
		public static implicit operator string(SavableString savableString)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000117")]
	public class SavableVector : SavableData
	{
		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Vector;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x867A04", Offset = "0x867A04", VA = "0x867A04")]
		public SavableVector(Vector3 vector)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x867A4C", Offset = "0x867A4C", VA = "0x867A4C")]
		public static implicit operator Vector3(SavableVector vector)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000118")]
	public class SavableQuaternion : SavableData
	{
		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 Rotation;

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x8674DC", Offset = "0x8674DC", VA = "0x8674DC")]
		public SavableQuaternion(Quaternion quaternion)
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x867560", Offset = "0x867560", VA = "0x867560")]
		public static implicit operator Quaternion(SavableQuaternion quaternion)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x2000119")]
	public class SavablePose : SavableData
	{
		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 Rotation;

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x867434", Offset = "0x867434", VA = "0x867434")]
		public SavablePose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011A")]
	public class SavableTransform : SavableData
	{
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 Rotation;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 Scale;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x867654", Offset = "0x867654", VA = "0x867654")]
		public SavableTransform(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x867720", Offset = "0x867720", VA = "0x867720")]
		public void Set(Transform transform)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x867870", Offset = "0x867870", VA = "0x867870")]
		public void Set(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x8678F4", Offset = "0x8678F4", VA = "0x8678F4")]
		public static implicit operator SavableTransform(Transform transform)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200011B")]
	public class InteractableSaveData : SavableData
	{
		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsNew;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsInteractable;

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x8672CC", Offset = "0x8672CC", VA = "0x8672CC")]
		public InteractableSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011C")]
	public class SavableDate : SavableData
	{
		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DateTime Date;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x867334", Offset = "0x867334", VA = "0x867334")]
		public SavableDate()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x8673AC", Offset = "0x8673AC", VA = "0x8673AC")]
		public SavableDate(DateTime date)
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class SaveGameObject : SaveObject
	{
		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_defaultSaveState;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x867A78", Offset = "0x867A78", VA = "0x867A78", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x867BD4", Offset = "0x867BD4", VA = "0x867BD4", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0x867D08", Offset = "0x867D08", VA = "0x867D08")]
		public SaveGameObject()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E198C", Offset = "0x6E198C")]
	public class SaveInteractObject : SaveObject
	{
		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractableObject m_interactableObject;

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x867D18", Offset = "0x867D18", VA = "0x867D18", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x867E44", Offset = "0x867E44", VA = "0x867E44", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x867F44", Offset = "0x867F44", VA = "0x867F44")]
		public SaveInteractObject()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public abstract class SaveObject : MonoBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x17000080")]
		public string Guid
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x867BCC", Offset = "0x867BCC", VA = "0x867BCC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x867F4C", Offset = "0x867F4C", VA = "0x867F4C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000887")]
		public abstract void Deserialize(IReadSave save);

		[Token(Token = "0x6000888")]
		public abstract void Serialize(IWriteSave save);

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x8627DC", Offset = "0x8627DC", VA = "0x8627DC")]
		protected SaveObject()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class SaveTransform : SaveObject
	{
		[Token(Token = "0x20003A7")]
		public enum TransformSerializationType
		{
			[Token(Token = "0x4001278")]
			Position,
			[Token(Token = "0x4001279")]
			Rotation,
			[Token(Token = "0x400127A")]
			PositionRotation,
			[Token(Token = "0x400127B")]
			PositionRotationScale
		}

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TransformSerializationType m_serializationType;

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x867F54", Offset = "0x867F54", VA = "0x867F54", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x868574", Offset = "0x868574", VA = "0x868574", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x868984", Offset = "0x868984", VA = "0x868984")]
		public SaveTransform()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public static class SaveUtils
	{
		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, int> sm_idToObjectMap;

		[Token(Token = "0x4000603")]
		private const int InvalidHashID = 0;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x86898C", Offset = "0x86898C", VA = "0x86898C")]
		public static string CreateGuid(int objectHash, string guid)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x868AA0", Offset = "0x868AA0", VA = "0x868AA0")]
		private static bool VerifyGuidIsUnique(int objectHash, string guid)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.Scripts.Rooms
{
	[Token(Token = "0x2000122")]
	public enum BiomeType
	{
		[Token(Token = "0x4000605")]
		Intro,
		[Token(Token = "0x4000606")]
		Estate,
		[Token(Token = "0x4000607")]
		MirrorRealm,
		[Token(Token = "0x4000608")]
		CaterpillarForest,
		[Token(Token = "0x4000609")]
		FourCastles,
		[Token(Token = "0x400060A")]
		KeepOfHearts,
		[Token(Token = "0x400060B")]
		Party
	}
	[Token(Token = "0x2000123")]
	public class Room : SaveObject
	{
		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public RoomType RoomType;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_characterSpawnPoint;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RoomSoundHandler m_roomSoundHandler;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_graphicsParentGameObject;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_vfxParentGameObject;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E4B8C", Offset = "0x6E4B8C")]
		[SerializeField]
		private List<RoomBehaviour> m_roomBehaviours;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<MonoBehaviour> m_savableBehaviours;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Renderer> m_meshRenderers;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private RoomType[] m_connectedRooms;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C30", Offset = "0x6E4C30")]
		private bool <HasInitialized>k__BackingField;

		[Token(Token = "0x17000081")]
		public bool HasInitialized
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0x861B4C", Offset = "0x861B4C", VA = "0x861B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EE8", Offset = "0x6F0EE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000891")]
			[Address(RVA = "0x861B54", Offset = "0x861B54", VA = "0x861B54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0EF8", Offset = "0x6F0EF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public IReadOnlyList<RoomType> ConnectedRooms
		{
			[Token(Token = "0x6000892")]
			[Address(RVA = "0x861B60", Offset = "0x861B60", VA = "0x861B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		public Transform CharacterSpawnPoint
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0x861B68", Offset = "0x861B68", VA = "0x861B68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public RoomSoundHandler SoundHandler
		{
			[Token(Token = "0x6000894")]
			[Address(RVA = "0x861BF8", Offset = "0x861BF8", VA = "0x861BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x861C7C", Offset = "0x861C7C", VA = "0x861C7C")]
		public void TryInitializeRoom()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x861E00", Offset = "0x861E00", VA = "0x861E00")]
		public void Serialize()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x861E78", Offset = "0x861E78", VA = "0x861E78", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x862064", Offset = "0x862064", VA = "0x862064")]
		public void Deserialize()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x8620DC", Offset = "0x8620DC", VA = "0x8620DC", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x862290", Offset = "0x862290", VA = "0x862290")]
		public void ActivateRoom()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x8623E4", Offset = "0x8623E4", VA = "0x8623E4")]
		public void DeactivateRoom()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x862538", Offset = "0x862538", VA = "0x862538")]
		public void SetGraphicsActive(bool active)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x8626FC", Offset = "0x8626FC", VA = "0x8626FC")]
		public Room()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public abstract class RoomBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C40", Offset = "0x6E4C40")]
		private bool <HasInitialized>k__BackingField;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4C50", Offset = "0x6E4C50")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000085")]
		protected bool HasInitialized
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0x8627E4", Offset = "0x8627E4", VA = "0x8627E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F08", Offset = "0x6F0F08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600089F")]
			[Address(RVA = "0x8627EC", Offset = "0x8627EC", VA = "0x8627EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F18", Offset = "0x6F0F18")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		protected bool IsActive
		{
			[Token(Token = "0x60008A0")]
			[Address(RVA = "0x8627F8", Offset = "0x8627F8", VA = "0x8627F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F28", Offset = "0x6F0F28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A1")]
			[Address(RVA = "0x862800", Offset = "0x862800", VA = "0x862800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F38", Offset = "0x6F0F38")]
			set
			{
			}
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x861DC4", Offset = "0x861DC4", VA = "0x861DC4")]
		public void InitializeBehaviour()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x86280C", Offset = "0x86280C", VA = "0x86280C", Slot = "4")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x60008A4")]
		protected abstract void Initialize();

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x858E4C", Offset = "0x858E4C", VA = "0x858E4C")]
		protected RoomBehaviour()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class RoomBlocker : MonoBehaviour
	{
		[Token(Token = "0x20003A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2AD4", Offset = "0x6E2AD4")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x400127C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomBlocker <>4__this;

			[Token(Token = "0x400127D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blockerIndex;

			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x863048", Offset = "0x863048", VA = "0x863048")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x8630C8", Offset = "0x8630C8", VA = "0x8630C8")]
			internal void <FadeBlocker>b__0()
			{
			}

			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x8631B4", Offset = "0x8631B4", VA = "0x8631B4")]
			internal void <FadeBlocker>b__1()
			{
			}
		}

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Object m_connectedScene;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer[] m_blockers;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool[] m_blockerStatuses;

		[Token(Token = "0x400061B")]
		private const float BlockerFadeTime = 0.5f;

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x862818", Offset = "0x862818", VA = "0x862818")]
		private void UpdateBlockerStatuses()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x86293C", Offset = "0x86293C", VA = "0x86293C")]
		public bool[] GetBlockerStatus()
		{
			return null;
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x862944", Offset = "0x862944", VA = "0x862944")]
		public void SetBlockerStatus()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x86294C", Offset = "0x86294C", VA = "0x86294C")]
		public void SetBlockerStatus(bool[] blockerStatus)
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x862C20", Offset = "0x862C20", VA = "0x862C20")]
		public void EnableBlockers()
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x862C28", Offset = "0x862C28", VA = "0x862C28")]
		public void EnableBlocker(int blockerIndex)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x862A5C", Offset = "0x862A5C", VA = "0x862A5C")]
		private void EnableBlocker(MeshRenderer blocker)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x862FA8", Offset = "0x862FA8", VA = "0x862FA8")]
		public void DisableBlockers()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x862B74", Offset = "0x862B74", VA = "0x862B74")]
		public void DisableBlocker(int blockerIndex)
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x862CC8", Offset = "0x862CC8", VA = "0x862CC8")]
		private void FadeBlocker(int blockerIndex, bool fadeIn)
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x863050", Offset = "0x863050", VA = "0x863050")]
		public RoomBlocker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000126")]
	public class RoomBlockerDictionary : Dictionary<RoomType, RoomBlocker>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<RoomType> m_keys;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<RoomBlocker> m_values;

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x86329C", Offset = "0x86329C", VA = "0x86329C", Slot = "43")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x863494", Offset = "0x863494", VA = "0x863494", Slot = "44")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x8635A8", Offset = "0x8635A8", VA = "0x8635A8")]
		public RoomBlockerDictionary()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class RoomCompareEvent : MonoBehaviour
	{
		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableVariableEvent m_onRoomTypesMatch;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x863648", Offset = "0x863648", VA = "0x863648")]
		public void CompareRoomTypes(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x863800", Offset = "0x863800", VA = "0x863800")]
		public void CompareRoomTypes(RoomType roomType)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x86388C", Offset = "0x86388C", VA = "0x86388C")]
		public RoomCompareEvent()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class RoomManager : MonoBehaviour, ISavable
	{
		[Serializable]
		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6E2AE4", Offset = "0x6E2AE4")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x400127E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType ActiveBiome;

			[Token(Token = "0x400127F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RoomType ActiveRoom;

			[Token(Token = "0x4001280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int UnlockedBiomes;

			[Token(Token = "0x4001281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<RoomType, RoomData> RoomData;

			[Token(Token = "0x17000216")]
			public RoomData Item
			{
				[Token(Token = "0x60017D7")]
				[Address(RVA = "0x8662BC", Offset = "0x8662BC", VA = "0x8662BC")]
				get
				{
					return default(RoomData);
				}
				[Token(Token = "0x60017D8")]
				[Address(RVA = "0x86632C", Offset = "0x86632C", VA = "0x86632C")]
				set
				{
				}
			}

			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x863D54", Offset = "0x863D54", VA = "0x863D54")]
			public SaveData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003AA")]
		public struct RoomData
		{
			[Token(Token = "0x4001282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool HasInitialized;

			[Token(Token = "0x4001283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool[] BlockerStatus;
		}

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableEvent m_onRoomActivatedEvent;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScriptableEvent m_onBlockerDisabledEvent;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CardChoicePlacement[] m_cardChoicePlacements;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E4D00", Offset = "0x6E4D00")]
		[SerializeField]
		private RoomBlockerDictionary m_roomBlockers;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveData m_saveData;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDictionary<RoomType, Room> m_rooms;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IntVariable m_roomTypeIndex;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_characterActivatedEventToken;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_onBiomeLoadedEventToken;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_onRoomLoadedEventToken;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_onBeforeRoomUnloadedEventEventToken;

		[Token(Token = "0x400062B")]
		private const string SaveID = "RoomManager";

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool AutoInitializeRooms;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static RoomType? PendingActiveRoom;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4D4C", Offset = "0x6E4D4C")]
		private BiomeType <CurrentBiome>k__BackingField;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4D5C", Offset = "0x6E4D5C")]
		private int <UnlockedBiomes>k__BackingField;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E4D6C", Offset = "0x6E4D6C")]
		private Room <CurrentRoom>k__BackingField;

		[Token(Token = "0x17000087")]
		public BiomeType CurrentBiome
		{
			[Token(Token = "0x60008B7")]
			[Address(RVA = "0x8638F4", Offset = "0x8638F4", VA = "0x8638F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F48", Offset = "0x6F0F48")]
			get
			{
				return default(BiomeType);
			}
			[Token(Token = "0x60008B8")]
			[Address(RVA = "0x8638FC", Offset = "0x8638FC", VA = "0x8638FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F58", Offset = "0x6F0F58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public int UnlockedBiomes
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0x863904", Offset = "0x863904", VA = "0x863904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F68", Offset = "0x6F0F68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008BA")]
			[Address(RVA = "0x86390C", Offset = "0x86390C", VA = "0x86390C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F78", Offset = "0x6F0F78")]
			private set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public Room CurrentRoom
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0x863914", Offset = "0x863914", VA = "0x863914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F88", Offset = "0x6F0F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008BC")]
			[Address(RVA = "0x86391C", Offset = "0x86391C", VA = "0x86391C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0F98", Offset = "0x6F0F98")]
			private set
			{
			}
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x863924", Offset = "0x863924", VA = "0x863924")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x863C44", Offset = "0x863C44", VA = "0x863C44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x863CF4", Offset = "0x863CF4", VA = "0x863CF4")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x863E6C", Offset = "0x863E6C", VA = "0x863E6C", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x864028", Offset = "0x864028", VA = "0x864028", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x8645B0", Offset = "0x8645B0", VA = "0x8645B0")]
		public void TryLoadRooms(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x8648C8", Offset = "0x8648C8", VA = "0x8648C8")]
		public bool TryGetRoom(RoomType roomType, out Room room)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x864BB0", Offset = "0x864BB0", VA = "0x864BB0")]
		public bool HasRevealedRoom(RoomType roomType)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x864C54", Offset = "0x864C54", VA = "0x864C54")]
		public void EnableGraphics(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x864D1C", Offset = "0x864D1C", VA = "0x864D1C")]
		private void EnableGraphics(RoomType roomType)
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x864E10", Offset = "0x864E10", VA = "0x864E10")]
		private void EnableAdjecentRoom(RoomType roomType)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x864F1C", Offset = "0x864F1C", VA = "0x864F1C")]
		public void DisableGraphics(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x865094", Offset = "0x865094", VA = "0x865094")]
		public void SetRoomActive(RoomType roomType, int blockerIndex)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x8656A0", Offset = "0x8656A0", VA = "0x8656A0")]
		public void TryEnableRoomBlocker(RoomType roomType, int blockerIndex)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x865748", Offset = "0x865748", VA = "0x865748")]
		public void TryDisableRoomBlocker(RoomType roomType, int blockerIndex, bool enableGraphics)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x865794", Offset = "0x865794", VA = "0x865794")]
		public void ResetAllBlockers()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0x863AFC", Offset = "0x863AFC", VA = "0x863AFC")]
		public void EnableAllBlockers()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x865938", Offset = "0x865938", VA = "0x865938")]
		public void DisableAllBlockers()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x865438", Offset = "0x865438", VA = "0x865438")]
		private void TryDisableRoomBlocker(RoomType roomType, int blockerIndex)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x865AF0", Offset = "0x865AF0", VA = "0x865AF0")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x865B38", Offset = "0x865B38", VA = "0x865B38")]
		private void OnBiomeActivated(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x865C14", Offset = "0x865C14", VA = "0x865C14")]
		private void OnRoomLoaded(RoomEvents.RoomLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x864998", Offset = "0x864998", VA = "0x864998")]
		private void LoadRoom(Room room)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x865FC8", Offset = "0x865FC8", VA = "0x865FC8")]
		private void OnBeforeRoomUnloadedEvent(RoomEvents.BeforeRoomUnloadedEvent eventData)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x865E08", Offset = "0x865E08", VA = "0x865E08")]
		private void TryLoadRoom(Room room)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x864468", Offset = "0x864468", VA = "0x864468")]
		private void SaveRoom(Room room)
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x8655B8", Offset = "0x8655B8", VA = "0x8655B8")]
		private void RaiseActivatedEvent(RoomType roomType)
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x863DD0", Offset = "0x863DD0", VA = "0x863DD0")]
		private void UpdateChoiceCardSelections()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0x8661A4", Offset = "0x8661A4", VA = "0x8661A4")]
		public RoomManager()
		{
		}
	}
	[Token(Token = "0x2000129")]
	public enum RoomType
	{
		[Token(Token = "0x4000632")]
		None,
		[Token(Token = "0x4000633")]
		Navigation,
		[Token(Token = "0x4000634")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4D7C", Offset = "0x6E4D7C")]
		ClockEntranceScene,
		[Token(Token = "0x4000635")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4DB4", Offset = "0x6E4DB4")]
		ClockTowerScene,
		[Token(Token = "0x4000636")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4DEC", Offset = "0x6E4DEC")]
		FallingScene,
		[Token(Token = "0x4000637")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4E24", Offset = "0x6E4E24")]
		HomeScene,
		[Token(Token = "0x4000638")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4E5C", Offset = "0x6E4E5C")]
		OutsideScene,
		[Token(Token = "0x4000639")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4E94", Offset = "0x6E4E94")]
		RabbitHouseScene,
		[Token(Token = "0x400063A")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4ECC", Offset = "0x6E4ECC")]
		BackyardScene,
		[Token(Token = "0x400063B")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4F04", Offset = "0x6E4F04")]
		BelowBackyardScene,
		[Token(Token = "0x400063C")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4F3C", Offset = "0x6E4F3C")]
		CaterpillarEstateScene,
		[Token(Token = "0x400063D")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4F74", Offset = "0x6E4F74")]
		EstateAtticScene,
		[Token(Token = "0x400063E")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4FAC", Offset = "0x6E4FAC")]
		EstateCellarScene,
		[Token(Token = "0x400063F")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E4FE4", Offset = "0x6E4FE4")]
		EstateEntranceScene,
		[Token(Token = "0x4000640")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E501C", Offset = "0x6E501C")]
		EstateHallwayScene,
		[Token(Token = "0x4000641")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5054", Offset = "0x6E5054")]
		EstateKitchenScene,
		[Token(Token = "0x4000642")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E508C", Offset = "0x6E508C")]
		GladePassageScene,
		[Token(Token = "0x4000643")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E50C4", Offset = "0x6E50C4")]
		GladeScene,
		[Token(Token = "0x4000644")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E50FC", Offset = "0x6E50FC")]
		PendulumScene,
		[Token(Token = "0x4000645")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5134", Offset = "0x6E5134")]
		CaterpillarMirrorScene,
		[Token(Token = "0x4000646")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E516C", Offset = "0x6E516C")]
		MirrorRealmScene,
		[Token(Token = "0x4000647")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E51A4", Offset = "0x6E51A4")]
		StairsScene,
		[Token(Token = "0x4000648")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E51DC", Offset = "0x6E51DC")]
		AboveTheMazeScene,
		[Token(Token = "0x4000649")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5214", Offset = "0x6E5214")]
		BehindTheDoorScene,
		[Token(Token = "0x400064A")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E524C", Offset = "0x6E524C")]
		CaterpillarScene,
		[Token(Token = "0x400064B")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5284", Offset = "0x6E5284")]
		CheshireCatScene,
		[Token(Token = "0x400064C")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E52BC", Offset = "0x6E52BC")]
		DominoMazeScene,
		[Token(Token = "0x400064D")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E52F4", Offset = "0x6E52F4")]
		GiantForestScene,
		[Token(Token = "0x400064E")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E532C", Offset = "0x6E532C")]
		ImposterKingScene,
		[Token(Token = "0x400064F")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5364", Offset = "0x6E5364")]
		UnderTheMazeScene,
		[Token(Token = "0x4000650")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E539C", Offset = "0x6E539C")]
		CastlesScene,
		[Token(Token = "0x4000651")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E53D4", Offset = "0x6E53D4")]
		CaterpillarKeepScene,
		[Token(Token = "0x4000652")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E540C", Offset = "0x6E540C")]
		CrownScene,
		[Token(Token = "0x4000653")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5444", Offset = "0x6E5444")]
		KeepBathroomScene,
		[Token(Token = "0x4000654")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E547C", Offset = "0x6E547C")]
		KeepBedroomScene,
		[Token(Token = "0x4000655")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E54B4", Offset = "0x6E54B4")]
		KeepCorridorScene,
		[Token(Token = "0x4000656")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E54EC", Offset = "0x6E54EC")]
		KeepKingScene,
		[Token(Token = "0x4000657")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5524", Offset = "0x6E5524")]
		KeepPantryScene,
		[Token(Token = "0x4000658")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E555C", Offset = "0x6E555C")]
		KeepPatchesScene,
		[Token(Token = "0x4000659")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5594", Offset = "0x6E5594")]
		KeepStaircaseEastScene,
		[Token(Token = "0x400065A")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E55CC", Offset = "0x6E55CC")]
		KeepStaircaseWestScene,
		[Token(Token = "0x400065B")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E5604", Offset = "0x6E5604")]
		KeepThroneRoomScene,
		[Token(Token = "0x400065C")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x6E563C", Offset = "0x6E563C")]
		PartyScene
	}
	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6E19F0", Offset = "0x6E19F0")]
	public class RoomTypeNameAttribute : Attribute
	{
		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E5674", Offset = "0x6E5674")]
		private readonly string <Name>k__BackingField;

		[Token(Token = "0x1700008A")]
		public string Name
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0x8663B4", Offset = "0x8663B4", VA = "0x8663B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FA8", Offset = "0x6F0FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x8663BC", Offset = "0x8663BC", VA = "0x8663BC")]
		public RoomTypeNameAttribute(string name)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public static class RoomUtils
	{
		[Token(Token = "0x400065E")]
		public const RoomType StartRoom = RoomType.HomeScene;

		[Token(Token = "0x400065F")]
		public const BiomeType StartBiome = BiomeType.Intro;

		[Token(Token = "0x4000660")]
		public const int AllBlockersDisabledIndex = -1;

		[Token(Token = "0x4000661")]
		public const int NoBlockersDisabledIndex = 99;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly MathUtils.MinMax CameraPositionMinMax;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IReadOnlyDictionary<BiomeType, MathUtils.MinMax> CameraPositionLimits;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RoomType[] IntroRooms;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly RoomType[] EstateRooms;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly RoomType[] MirrorRealmRooms;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly RoomType[] CaterpillarForestRooms;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly RoomType[] FourCastleRooms;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly RoomType[] KeepOfHeartsRooms;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly RoomType[] PartyRooms;

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x864698", Offset = "0x864698", VA = "0x864698")]
		public static RoomType[] GetRoomsInBiome(BiomeType biomeType)
		{
			return null;
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x8663E8", Offset = "0x8663E8", VA = "0x8663E8")]
		public static RoomType GetStartRoomInBiome(BiomeType biomeType)
		{
			return default(RoomType);
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x8664BC", Offset = "0x8664BC", VA = "0x8664BC")]
		public static BiomeType GetBiomeFromRoom(RoomType roomType)
		{
			return default(BiomeType);
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0x8667AC", Offset = "0x8667AC", VA = "0x8667AC")]
		public static bool TryParse(UnityEngine.Object scene, out RoomType roomType, [Optional] MonoBehaviour reference)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x8668B0", Offset = "0x8668B0", VA = "0x8668B0")]
		public static bool TryParse(string sceneName, out RoomType roomType, [Optional] MonoBehaviour reference)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x866958", Offset = "0x866958", VA = "0x866958")]
		public static Dictionary<RoomType, string> GetRoomNames()
		{
			return null;
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x86656C", Offset = "0x86656C", VA = "0x86656C")]
		private static string GetRoomTypeName(RoomType roomType)
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Puzzles
{
	[Token(Token = "0x200012C")]
	public class BathroomStairs : SaveObject
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_fallAnimationProperty;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_stairsAudio;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_stairsAnimator;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_destination;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SavableBool m_hasOpenedStairs;

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x8A82A0", Offset = "0x8A82A0", VA = "0x8A82A0")]
		public void TryTriggerStairsOpen()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x8A8428", Offset = "0x8A8428", VA = "0x8A8428", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x8A851C", Offset = "0x8A851C", VA = "0x8A851C", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x8A8330", Offset = "0x8A8330", VA = "0x8A8330")]
		private void SetDestination()
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x8A865C", Offset = "0x8A865C", VA = "0x8A865C")]
		public BathroomStairs()
		{
		}
	}
	[Token(Token = "0x200012D")]
	public class ButterflyArrow : MonoBehaviour
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable m_boolVariable;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixerGroup m_mixerGroup;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Butterfly[] m_butterflies;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BezierSpline[] m_bezierSplines;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_checkCondition;

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x8A86E0", Offset = "0x8A86E0", VA = "0x8A86E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x8A881C", Offset = "0x8A881C", VA = "0x8A881C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x8A88C4", Offset = "0x8A88C4", VA = "0x8A88C4")]
		private void CheckCondition()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0x8A8990", Offset = "0x8A8990", VA = "0x8A8990")]
		private void TryFormArrow()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x8A8B2C", Offset = "0x8A8B2C", VA = "0x8A8B2C")]
		public ButterflyArrow()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class ButterflyManager : SaveObject
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable m_puzzleCompletedBool;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BezierSpline[] m_butterflyFinalDestinationSplines;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5714", Offset = "0x6E5714")]
		[SerializeField]
		private AudioMixerGroup m_endAudioMixerGroup;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_puzzleCompleteAudio;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceLineCollection[] m_catReactions;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SavableInt m_currentPickupReactionIndex;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Butterfly> m_collectedButterflies;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_butterflyFoundEventToken;

		[Token(Token = "0x400067D")]
		private const int ExpectedButterflyCount = 4;

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x8A8BA4", Offset = "0x8A8BA4", VA = "0x8A8BA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x8A8C24", Offset = "0x8A8C24", VA = "0x8A8C24")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0x8A8D34", Offset = "0x8A8D34", VA = "0x8A8D34", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x8A8E28", Offset = "0x8A8E28", VA = "0x8A8E28", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x8A8F2C", Offset = "0x8A8F2C", VA = "0x8A8F2C")]
		private void OnButterflyFound(PuzzleEvents.ButterflyFoundEvent eventData)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x8A8F60", Offset = "0x8A8F60", VA = "0x8A8F60")]
		private void AddButterfly(Butterfly butterfly)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x8A91A4", Offset = "0x8A91A4", VA = "0x8A91A4")]
		private void TriggerButterflySwarm()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x8A933C", Offset = "0x8A933C", VA = "0x8A933C")]
		private void CompleteButterflyPuzzle()
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x8A9384", Offset = "0x8A9384", VA = "0x8A9384")]
		public ButterflyManager()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public enum CardColour
	{
		[Token(Token = "0x400067F")]
		Black,
		[Token(Token = "0x4000680")]
		Red,
		[Token(Token = "0x4000681")]
		Checkered
	}
	[Token(Token = "0x2000130")]
	[Flags]
	public enum CardSuit
	{
		[Token(Token = "0x4000683")]
		Diamonds = 1,
		[Token(Token = "0x4000684")]
		Hearts = 2,
		[Token(Token = "0x4000685")]
		Spades = 4,
		[Token(Token = "0x4000686")]
		Clubs = 8
	}
	[Token(Token = "0x2000131")]
	public class ClockElevator : RoomBehaviour
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_clockHandRotationValue;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_rotationLerpMultiplier;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E57A0", Offset = "0x6E57A0")]
		[SerializeField]
		private ElevatorDestination[] m_elevatorDestinations;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E57EC", Offset = "0x6E57EC")]
		[SerializeField]
		private Transform m_elevatorPlatform;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5848", Offset = "0x6E5848")]
		[SerializeField]
		private AnimationCurve m_accelerationCurve;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_checkCharacterPresence;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_tryDetachCharacters;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_currentProgress;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_offset;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private LayerMask m_characterHitMask;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IList<PlayableCharacter> m_charactersOnElevator;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_sampleColliders;

		[Token(Token = "0x4000694")]
		private const float MinDistanceThreshold = 0.01f;

		[Token(Token = "0x4000695")]
		private const float MaxDistanceThreshold = 0.99f;

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x8ADF0C", Offset = "0x8ADF0C", VA = "0x8ADF0C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x8AE268", Offset = "0x8AE268", VA = "0x8AE268")]
		private void Update()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x8ADFA0", Offset = "0x8ADFA0", VA = "0x8ADFA0")]
		private void MovePlatform()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x8AE660", Offset = "0x8AE660", VA = "0x8AE660")]
		private void EnableCharacterPresenceCheck(int positionIndex)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x8AEACC", Offset = "0x8AEACC", VA = "0x8AEACC")]
		private void ActivateNavMeshObstacle(int positionIndex)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x8AE688", Offset = "0x8AE688", VA = "0x8AE688")]
		private void TryAttachCharactersToElevator()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x8AE2B4", Offset = "0x8AE2B4", VA = "0x8AE2B4")]
		private void TryDetachCharactersFromElevator()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x8AEB80", Offset = "0x8AEB80", VA = "0x8AEB80")]
		public ClockElevator()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class CookieEater : MonoBehaviour
	{
		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent m_onTartEaten;

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x8B2B84", Offset = "0x8B2B84", VA = "0x8B2B84")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x8B2CC0", Offset = "0x8B2CC0", VA = "0x8B2CC0")]
		public CookieEater()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class CookieReceiver : MonoBehaviour
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshObstacle m_navmeshObstacle;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomParentConstraint m_parentConstraint;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterCutscenePlayer m_grabCookieTimeline;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onCookieReceived;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Cookie m_cookie;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x8B2D28", Offset = "0x8B2D28", VA = "0x8B2D28")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x8B2EC4", Offset = "0x8B2EC4", VA = "0x8B2EC4")]
		public void DestroyCookie()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x8B2F7C", Offset = "0x8B2F7C", VA = "0x8B2F7C")]
		public CookieReceiver()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class CookieSpawner : MonoBehaviour
	{
		[Token(Token = "0x20003AB")]
		private enum SpawnState
		{
			[Token(Token = "0x4001285")]
			Waiting,
			[Token(Token = "0x4001286")]
			Spawning,
			[Token(Token = "0x4001287")]
			Ejecting
		}

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cookie m_cookiePrefab;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_cookiePoolCount;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_spawnPoint;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5924", Offset = "0x6E5924")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E5924", Offset = "0x6E5924")]
		private float m_delayTime;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E5994", Offset = "0x6E5994")]
		private float m_spawnTime;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E59E0", Offset = "0x6E59E0")]
		private float m_ejectTime;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_ejectForce;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_ejectTorque;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Cookie[] m_cachedCookies;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Cookie m_ejectCookie;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpawnState m_currentSpawnState;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_elapsedTime;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterFetchCookie;

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x8B2FE4", Offset = "0x8B2FE4", VA = "0x8B2FE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x8B31C8", Offset = "0x8B31C8", VA = "0x8B31C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x8B34A4", Offset = "0x8B34A4", VA = "0x8B34A4")]
		public void FetchCookie()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x8B35D4", Offset = "0x8B35D4", VA = "0x8B35D4")]
		private void FetchCookiePostDelay()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x8B349C", Offset = "0x8B349C", VA = "0x8B349C")]
		private void ResetCookieSpawner()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x8B2FE8", Offset = "0x8B2FE8", VA = "0x8B2FE8")]
		private void SpawnCookie()
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x8B3254", Offset = "0x8B3254", VA = "0x8B3254")]
		private void PrepareCookie()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x8B32D8", Offset = "0x8B32D8", VA = "0x8B32D8")]
		private void EjectCookie()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0x8B3630", Offset = "0x8B3630", VA = "0x8B3630")]
		private bool CanGetCookie(out Cookie cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0x8B3724", Offset = "0x8B3724", VA = "0x8B3724")]
		public CookieSpawner()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x8B37C4", Offset = "0x8B37C4", VA = "0x8B37C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FB8", Offset = "0x6F0FB8")]
		private void <FetchCookie>b__17_0()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class CupBoat : InputSplineTraverser
	{
		[Token(Token = "0x40006AA")]
		private const float VolumeLerpSpeed = 4f;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5A4C", Offset = "0x6E5A4C")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isTrackingAudio;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_targetVolume;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_defaultVolume;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_previousPosition;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x8B37C8", Offset = "0x8B37C8", VA = "0x8B37C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x8B38C4", Offset = "0x8B38C4", VA = "0x8B38C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x8B380C", Offset = "0x8B380C", VA = "0x8B380C")]
		public void SetAudioTrackingActive(bool isActive)
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x8B3A80", Offset = "0x8B3A80", VA = "0x8B3A80")]
		public CupBoat()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class Domino : RoomBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DominoSide[] m_sides;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_lightUpSfx;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_slideSfx;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5B00", Offset = "0x6E5B00")]
		[SerializeField]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector3 m_alternatePosition;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5B5C", Offset = "0x6E5B5C")]
		[SerializeField]
		private bool m_useTimer;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isBlockedByTimer;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tweener m_moveTweener;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SavableBool m_isAtDefaultPosition;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_dominoBellRungEventToken;

		[Token(Token = "0x1700008B")]
		private bool IsAtDefaultPosition
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x8B3A88", Offset = "0x8B3A88", VA = "0x8B3A88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		public string Guid
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x8B3B54", Offset = "0x8B3B54", VA = "0x8B3B54", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x8B3B5C", Offset = "0x8B3B5C", VA = "0x8B3B5C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x8B3B64", Offset = "0x8B3B64", VA = "0x8B3B64", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x8B3C88", Offset = "0x8B3C88", VA = "0x8B3C88", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x8B3DA0", Offset = "0x8B3DA0", VA = "0x8B3DA0", Slot = "8")]
		public void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x8B3EAC", Offset = "0x8B3EAC", VA = "0x8B3EAC", Slot = "9")]
		public void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x8B4040", Offset = "0x8B4040", VA = "0x8B4040")]
		public void SaveDefaultPosition()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x8B4084", Offset = "0x8B4084", VA = "0x8B4084")]
		public void SaveAlternatePosition()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x8B3FB4", Offset = "0x8B3FB4", VA = "0x8B3FB4")]
		public void SetPosition(bool defaultPosition)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x8B3BF8", Offset = "0x8B3BF8", VA = "0x8B3BF8")]
		public void SetBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x8B40C8", Offset = "0x8B40C8", VA = "0x8B40C8")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x8B42A8", Offset = "0x8B42A8", VA = "0x8B42A8")]
		public bool HasDotCount(int count)
		{
			return default(bool);
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x8B4340", Offset = "0x8B4340", VA = "0x8B4340")]
		private void OnDominoBellRung(PuzzleEvents.DominoBellRungEvent eventData)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x8B44AC", Offset = "0x8B44AC", VA = "0x8B44AC")]
		private void CheckMoveConditions()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x8B4118", Offset = "0x8B4118", VA = "0x8B4118")]
		private void SwitchPosition(bool sendEvent)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x8B4580", Offset = "0x8B4580", VA = "0x8B4580")]
		public Domino()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x8B4604", Offset = "0x8B4604", VA = "0x8B4604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FC8", Offset = "0x6F0FC8")]
		private void <SwitchPosition>b__28_0()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class DominoPuzzleManager : RoomBehaviour
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_puzzleCompleteDelayTime;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_timerEndSfx;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompletedEvent;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Domino[] m_dominos;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DominoBellRinger[] m_bellRingers;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PointerInteractable[] m_bellInteractions;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentDominoIndex;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_endTimerActive;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool m_puzzleCompleted;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_dominoMovedEventToken;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_dominoBellRungEventToken;

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x8B46A0", Offset = "0x8B46A0", VA = "0x8B46A0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x8B46A8", Offset = "0x8B46A8", VA = "0x8B46A8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x8B4734", Offset = "0x8B4734", VA = "0x8B4734")]
		public void StartDominoPuzzle()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x8B49A4", Offset = "0x8B49A4", VA = "0x8B49A4")]
		public void EndDominoPuzzle()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x8B4B80", Offset = "0x8B4B80", VA = "0x8B4B80")]
		private void OnDominoBellRung(PuzzleEvents.DominoBellRungEvent eventData)
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x8B4C20", Offset = "0x8B4C20", VA = "0x8B4C20")]
		private void OnDominoMoved(PuzzleEvents.DominoMovedEvent eventData)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x8B4A84", Offset = "0x8B4A84", VA = "0x8B4A84")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x8B4AC4", Offset = "0x8B4AC4", VA = "0x8B4AC4")]
		private void TimesUp()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x8B4844", Offset = "0x8B4844", VA = "0x8B4844")]
		private void UpdateDominoAvailability(int enableIndex)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x8B48F8", Offset = "0x8B48F8", VA = "0x8B48F8")]
		private void SetBellRingerEventsActive(bool isActive)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x8B4CC8", Offset = "0x8B4CC8", VA = "0x8B4CC8")]
		public DominoPuzzleManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000138")]
	public class DominoSide
	{
		[Token(Token = "0x20003AC")]
		private enum DominoState
		{
			[Token(Token = "0x4001289")]
			Unlit = 1,
			[Token(Token = "0x400128A")]
			Lit = 2,
			[Token(Token = "0x400128B")]
			LightingUp = 4
		}

		[Token(Token = "0x20003AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B1C", Offset = "0x6E2B1C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x400128C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DominoSide <>4__this;

			[Token(Token = "0x400128D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onLitUp;

			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x858784", Offset = "0x858784", VA = "0x858784")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x8587A8", Offset = "0x8587A8", VA = "0x8587A8")]
			internal void <SetLit>b__0()
			{
			}
		}

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E5C08", Offset = "0x6E5C08")]
		private int m_numberOfDots;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_dotsRenderer;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DominoState m_currentState;

		[Token(Token = "0x1700008D")]
		public bool IsActive
		{
			[Token(Token = "0x6000932")]
			[Address(RVA = "0x858550", Offset = "0x858550", VA = "0x858550")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		public bool IsLit
		{
			[Token(Token = "0x6000933")]
			[Address(RVA = "0x858560", Offset = "0x858560", VA = "0x858560")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008F")]
		public int NumberOfDots
		{
			[Token(Token = "0x6000934")]
			[Address(RVA = "0x858570", Offset = "0x858570", VA = "0x858570")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x858578", Offset = "0x858578", VA = "0x858578")]
		public void SetUnlit(float delay = 0f)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x858678", Offset = "0x858678", VA = "0x858678")]
		public void SetLit(Action onLitUp)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x85878C", Offset = "0x85878C", VA = "0x85878C")]
		public DominoSide()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x85879C", Offset = "0x85879C", VA = "0x85879C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F0FD8", Offset = "0x6F0FD8")]
		private void <SetUnlit>b__10_0()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class DominoTimer : RoomBehaviour
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_timerCapPreMove;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_puzzleCompleteDelayTime;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_timerLoopSfx;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_timerEndSfx;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompletedEvent;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Domino> m_dominoList;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_timer;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_timerCapPostMove;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_currentDominoIndex;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_timerActive;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_endTimerActive;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		private bool m_puzzleCompleted;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_dominoMovedEventToken;

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x8587F4", Offset = "0x8587F4", VA = "0x8587F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x858B30", Offset = "0x858B30", VA = "0x858B30", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x858B44", Offset = "0x858B44", VA = "0x858B44")]
		public void StartDominoTimer()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x858BFC", Offset = "0x858BFC", VA = "0x858BFC")]
		public void EndDominoTimer()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x858894", Offset = "0x858894", VA = "0x858894")]
		private void TimesUp()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x858A10", Offset = "0x858A10", VA = "0x858A10")]
		private void UpdateDominoAvailability(int enableIndex)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x858CB0", Offset = "0x858CB0", VA = "0x858CB0")]
		private void OnDominoMoved(PuzzleEvents.DominoMovedEvent eventData)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x858D80", Offset = "0x858D80", VA = "0x858D80")]
		private void TryCompletePuzzle()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x858AEC", Offset = "0x858AEC", VA = "0x858AEC")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x858DCC", Offset = "0x858DCC", VA = "0x858DCC")]
		public DominoTimer()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class MazeExitVolume : MonoBehaviour
	{
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacterEvent m_onConditionMet;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableCharacterEvent m_onConditionNotMet;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TutorialScroll m_switchTutorialScroll;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VoiceLineCollection m_reuniteBanter;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISet<PlayableCharacter> m_presentCharacters;

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x85DD40", Offset = "0x85DD40", VA = "0x85DD40")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x85E07C", Offset = "0x85E07C", VA = "0x85E07C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x85E1B0", Offset = "0x85E1B0", VA = "0x85E1B0")]
		public void CheckAllCharactersPresent(PlayableCharacter interactCharacter)
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0x85E350", Offset = "0x85E350", VA = "0x85E350")]
		public MazeExitVolume()
		{
		}
	}
	[Token(Token = "0x200013B")]
	public class TimerEvent : MonoBehaviour
	{
		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_defaultTimerLength;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onTimerComplete;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_timerActive;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timeSinceStart;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_timerLength;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x8619EC", Offset = "0x8619EC", VA = "0x8619EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x861A64", Offset = "0x861A64", VA = "0x861A64")]
		public void StartTimer(float customTimerLength)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x861A74", Offset = "0x861A74", VA = "0x861A74")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x861A88", Offset = "0x861A88", VA = "0x861A88")]
		public void CancelTimer()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x861A94", Offset = "0x861A94", VA = "0x861A94")]
		public void CompleteTimer(bool ignoreActive)
		{
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x861ADC", Offset = "0x861ADC", VA = "0x861ADC")]
		public TimerEvent()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Puzzlebox
{
	[Token(Token = "0x200013C")]
	public class BedroomPuzzlebox : MonoBehaviour
	{
		[Token(Token = "0x40006E0")]
		private const float DoorOpenDuration = 3f;

		[Token(Token = "0x40006E1")]
		private const float DoorCloseDuration = 1.5f;

		[Token(Token = "0x40006E2")]
		private const float TopOpenDuration = 2.5f;

		[Token(Token = "0x40006E3")]
		private const float SlideBoxDuration = 1.5f;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_leftDoor;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rightDoor;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_box;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_top;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5D58", Offset = "0x6E5D58")]
		[SerializeField]
		private SoundEffect m_doorOpen;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_boxStartLocalPositionZ;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_numberOfDoorsAnimating;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action m_onDoorsOpenComplete;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action m_onDoorsCloseComplete;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action m_onOpenTopComplete;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action m_onSlideBoxComplete;

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x85E400", Offset = "0x85E400", VA = "0x85E400")]
		private void Start()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x85E43C", Offset = "0x85E43C", VA = "0x85E43C")]
		public void OpenDoors(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x85E6E8", Offset = "0x85E6E8", VA = "0x85E6E8")]
		public void SlideBox(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x85E7AC", Offset = "0x85E7AC", VA = "0x85E7AC")]
		public void CloseDoors(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x85E9D8", Offset = "0x85E9D8", VA = "0x85E9D8")]
		public void OpenTop(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x85EB30", Offset = "0x85EB30", VA = "0x85EB30")]
		private void OnDoorOpenComplete()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x85EB54", Offset = "0x85EB54", VA = "0x85EB54")]
		private void OnSlideBoxComplete()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x85EB68", Offset = "0x85EB68", VA = "0x85EB68")]
		private void OnDoorCloseComplete()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x85EB8C", Offset = "0x85EB8C", VA = "0x85EB8C")]
		private void OnOpenTopComplete()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x85EBA0", Offset = "0x85EBA0", VA = "0x85EBA0")]
		public BedroomPuzzlebox()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class PlintGuard : MonoBehaviour
	{
		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider m_plintCollider;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider m_tableCollider;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x85EBA8", Offset = "0x85EBA8", VA = "0x85EBA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0x85F248", Offset = "0x85F248", VA = "0x85F248")]
		public PlintGuard()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class PuzzleboxMechanics : MonoBehaviour
	{
		[Token(Token = "0x20003AE")]
		private enum PlintState
		{
			[Token(Token = "0x400128F")]
			Inside,
			[Token(Token = "0x4001290")]
			Outside,
			[Token(Token = "0x4001291")]
			EnterLock,
			[Token(Token = "0x4001292")]
			InLock,
			[Token(Token = "0x4001293")]
			OpenDoors,
			[Token(Token = "0x4001294")]
			SlideBox,
			[Token(Token = "0x4001295")]
			PlacePlint,
			[Token(Token = "0x4001296")]
			Closing,
			[Token(Token = "0x4001297")]
			TopOff,
			[Token(Token = "0x4001298")]
			GrabKey
		}

		[Token(Token = "0x20003AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B2C", Offset = "0x6E2B2C")]
		private sealed class <GrabbingHaptic>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuzzleboxMechanics <>4__this;

			[Token(Token = "0x17000217")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017DF")]
				[Address(RVA = "0x861974", Offset = "0x861974", VA = "0x861974", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000218")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017E1")]
				[Address(RVA = "0x8619E4", Offset = "0x8619E4", VA = "0x8619E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x861704", Offset = "0x861704", VA = "0x861704")]
			[DebuggerHidden]
			public <GrabbingHaptic>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x861804", Offset = "0x861804", VA = "0x861804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x861808", Offset = "0x861808", VA = "0x861808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x86197C", Offset = "0x86197C", VA = "0x86197C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006F3")]
		private const float BoxLocalPositionZ = -0.28f;

		[Token(Token = "0x40006F4")]
		private const float BoxOutThreshold = 0.01f;

		[Token(Token = "0x40006F5")]
		private const float PlintEnterLockDistance = 0.03f;

		[Token(Token = "0x40006F6")]
		private const float MinRotationOffset = 0.005f;

		[Token(Token = "0x40006F7")]
		private const float PlintTipDistance = 0.12f;

		[Token(Token = "0x40006F8")]
		private const float LockRotationMultiplier = 3f;

		[Token(Token = "0x40006F9")]
		private const float InLockBreakDistance = 0.25f;

		[Token(Token = "0x40006FA")]
		private const float HapticsInterval = 0.05f;

		[Token(Token = "0x40006FB")]
		private const float TimeUntilAutoPickup = 0.6f;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlintState m_currentState;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BedroomPuzzlebox m_bedroomPuzzleBox;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_lockPlacemntTransform;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_lockSocketTransform;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_plintPlacement;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_plintTransform;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Rigidbody m_plintRigidbody;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_socketWidth;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_lockSquareDistance;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_plintPlacementDistance;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_plintPlacementRotationTolerance;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_unlockAtRotationDegrees;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Grabbable m_plintGrabbable;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Grabbable m_boxGrabbable;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CameraZoomer m_cameraZoomer;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InteractableObject m_puzzleBoxInteraction;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableObject m_keyInteractable;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PointerInteractable m_keyPointerInteractable;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5F04", Offset = "0x6E5F04")]
		[SerializeField]
		private AnimationDataSerializer m_keyAnimationData;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5F50", Offset = "0x6E5F50")]
		[SerializeField]
		private SoundEffect m_plintTake;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SoundEffect m_plintInsert;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SoundEffect m_boxPulledout;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SoundEffect m_endSequence;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SoundEffectPlayer m_plintTurnLoop;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E5FDC", Offset = "0x6E5FDC")]
		[SerializeField]
		private HapticClip m_lockRotationHaptic;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isHoldingKey;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_isTurningPlintInLock;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool m_hasInitialAxisRotation;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_halfSocketDistanceSquared;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_currentLockSocketRotationValue;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int m_placementTweensCompleted;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_plintStartPosition;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion m_targetTweenRotation;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion m_initialPlintLockRotation;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion m_initialLockSocketRotation;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Quaternion m_lastHandRotation;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion m_last1DOF;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_isPlayingTurningSound;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WaitForSeconds m_waitForHapticsInterval;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Coroutine m_waitForHapticsIntervalRoutine;

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x85F250", Offset = "0x85F250", VA = "0x85F250")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x85F51C", Offset = "0x85F51C", VA = "0x85F51C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x85F544", Offset = "0x85F544", VA = "0x85F544")]
		private void Update()
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x85FB70", Offset = "0x85FB70", VA = "0x85FB70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x860454", Offset = "0x860454", VA = "0x860454")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F0FE8", Offset = "0x6F0FE8")]
		public void SkipToOpenDoors()
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x860458", Offset = "0x860458", VA = "0x860458")]
		public void EnablePuzzleActive()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x85F334", Offset = "0x85F334", VA = "0x85F334")]
		public void DisablePuzzleBox(bool checkPuzzleComplete)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x85F57C", Offset = "0x85F57C", VA = "0x85F57C")]
		private void InsideSocketMovement()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x85F680", Offset = "0x85F680", VA = "0x85F680")]
		private void OutsideMovement()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x85F844", Offset = "0x85F844", VA = "0x85F844")]
		private void InsideLockMovement()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x85F8D8", Offset = "0x85F8D8", VA = "0x85F8D8")]
		private void BoxMovement()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x85F9B0", Offset = "0x85F9B0", VA = "0x85F9B0")]
		private void PlacePlint()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x861004", Offset = "0x861004", VA = "0x861004")]
		private bool TryGetMatchingRotation(Transform currentTransform, Vector3 targetForwardAxis, Vector3 targetUpAxis, float deltaRotationTolerance, ref Quaternion matchingRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x8613A0", Offset = "0x8613A0", VA = "0x8613A0")]
		private void OnEnterLockMovementComplete()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x8613C0", Offset = "0x8613C0", VA = "0x8613C0")]
		private void OnPlacementComplete()
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x8614B0", Offset = "0x8614B0", VA = "0x8614B0")]
		private void OnDoorsOpenComplete()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x8614B8", Offset = "0x8614B8", VA = "0x8614B8")]
		private void OnBoxSlideComplete()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x861544", Offset = "0x861544", VA = "0x861544")]
		private void OnDoorsClosedComplete()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x8615D0", Offset = "0x8615D0", VA = "0x8615D0")]
		private void OnTopOffComplete()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x8615D8", Offset = "0x8615D8", VA = "0x8615D8")]
		private void OnKeyAnimComplete()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x8604B0", Offset = "0x8604B0", VA = "0x8604B0")]
		private void SetState(PlintState newState)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x860200", Offset = "0x860200", VA = "0x860200")]
		private float GetDeltaAngleAroundAxis(Quaternion rotation, Vector3 rotationLockAxis)
		{
			return default(float);
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x860068", Offset = "0x860068", VA = "0x860068")]
		private void HandleTurningSoundLoop(bool shouldLoop)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x861690", Offset = "0x861690", VA = "0x861690")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1020", Offset = "0x6F1020")]
		private IEnumerator GrabbingHaptic()
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x86160C", Offset = "0x86160C", VA = "0x86160C")]
		private void StartWaitForHapticsRoutine()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x86165C", Offset = "0x86165C", VA = "0x86165C")]
		private void TryStopWaitForHapticsRoutine()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x860100", Offset = "0x860100", VA = "0x860100")]
		private void GrabbedKey(Quaternion currentRotation)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x860060", Offset = "0x860060", VA = "0x860060")]
		private void DroppedKey()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x860184", Offset = "0x860184", VA = "0x860184")]
		private void SetInitialRotationValues(Quaternion currentRotation)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x861730", Offset = "0x861730", VA = "0x861730")]
		public PuzzleboxMechanics()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Lockbox
{
	[Token(Token = "0x200013F")]
	public class CrankLock : MonoBehaviour
	{
		[Token(Token = "0x4000725")]
		private const float BaseRotateSpeed = 200f;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_currentDigit;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rotateTransform;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_digitMax;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PointerInteractable m_buttonPokeInteraction;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_oneDigitRotationDegrees;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_rotatedSoFar;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_thisFullRotation;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_currentRotateSpeed;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isRotating;

		[Token(Token = "0x17000090")]
		public int CurrentDigit
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x85CB0C", Offset = "0x85CB0C", VA = "0x85CB0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000021")]
		public event Action OnRotationStart
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x85C75C", Offset = "0x85C75C", VA = "0x85C75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1084", Offset = "0x6F1084")]
			add
			{
			}
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x85C848", Offset = "0x85C848", VA = "0x85C848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1094", Offset = "0x6F1094")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action OnRotationEnd
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x85C934", Offset = "0x85C934", VA = "0x85C934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10A4", Offset = "0x6F10A4")]
			add
			{
			}
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x85CA20", Offset = "0x85CA20", VA = "0x85CA20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10B4", Offset = "0x6F10B4")]
			remove
			{
			}
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x85CB14", Offset = "0x85CB14", VA = "0x85CB14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0x85CB30", Offset = "0x85CB30", VA = "0x85CB30")]
		private void Update()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0x85CC80", Offset = "0x85CC80", VA = "0x85CC80")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x85CCBC", Offset = "0x85CCBC", VA = "0x85CCBC")]
		public void SetDigit(int value)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x85CD98", Offset = "0x85CD98", VA = "0x85CD98")]
		public void IncrementDigit(int addedValue)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x85CDD0", Offset = "0x85CDD0", VA = "0x85CDD0")]
		public void UpdateDigit(int addedValue)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x85CE34", Offset = "0x85CE34", VA = "0x85CE34")]
		public CrankLock()
		{
		}
	}
	[Token(Token = "0x2000140")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1A14", Offset = "0x6E1A14")]
	public class Lockbox : RoomBehaviour, IIdentifiableSavable, ISavable
	{
		[Serializable]
		[Token(Token = "0x20003B0")]
		public class LockboxData : SavableData
		{
			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LockboxState LockboxState;

			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] CurrentCombination;

			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x85DB50", Offset = "0x85DB50", VA = "0x85DB50")]
			public LockboxData()
			{
			}
		}

		[Token(Token = "0x20003B1")]
		public enum LockboxState
		{
			[Token(Token = "0x400129F")]
			Closed,
			[Token(Token = "0x40012A0")]
			Open,
			[Token(Token = "0x40012A1")]
			Complete
		}

		[Serializable]
		[Token(Token = "0x20003B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B3C", Offset = "0x6E2B3C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CrankLock, int> <>9__18_0;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<CrankLock, int> <>9__26_0;

			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x85DCD8", Offset = "0x85DCD8", VA = "0x85DCD8")]
			public <>c()
			{
			}

			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x85DCE0", Offset = "0x85DCE0", VA = "0x85DCE0")]
			internal int <Serialize>b__18_0(CrankLock x)
			{
				return default(int);
			}

			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x85DD0C", Offset = "0x85DD0C", VA = "0x85DD0C")]
			internal int <GetDefaultSaveData>b__26_0(CrankLock x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000731")]
		private const float CharacterEnableHoldTime = 0.1f;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_chestOpenIdleState;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_chestOpenTrigger;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] m_correctCombination;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CrankLock[] m_locks;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E60C8", Offset = "0x6E60C8")]
		[SerializeField]
		private InteractableObject m_characterInteractable;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InteractableObject m_zoomInInteractable;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6124", Offset = "0x6E6124")]
		[SerializeField]
		private UnityEvent m_onPuzzleComplete;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LockboxData m_saveData;

		[Token(Token = "0x17000091")]
		public string Guid
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0x85CE44", Offset = "0x85CE44", VA = "0x85CE44", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000984")]
			[Address(RVA = "0x85CE4C", Offset = "0x85CE4C", VA = "0x85CE4C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x85CE54", Offset = "0x85CE54", VA = "0x85CE54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x85CFB8", Offset = "0x85CFB8", VA = "0x85CFB8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x85D1F8", Offset = "0x85D1F8", VA = "0x85D1F8", Slot = "8")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x85D3C4", Offset = "0x85D3C4", VA = "0x85D3C4", Slot = "9")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x85D5E4", Offset = "0x85D5E4", VA = "0x85D5E4")]
		public void OnInvitationPickedUp()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x85D614", Offset = "0x85D614", VA = "0x85D614")]
		public void CameraZoomOut()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x85D704", Offset = "0x85D704", VA = "0x85D704")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x85D7C4", Offset = "0x85D7C4", VA = "0x85D7C4")]
		public void EnableZoomInInteraction()
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x85D144", Offset = "0x85D144", VA = "0x85D144")]
		private void OnRotationStart()
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x85D800", Offset = "0x85D800", VA = "0x85D800")]
		private void OnRotationEnd()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x85CE78", Offset = "0x85CE78", VA = "0x85CE78")]
		private LockboxData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x85DB58", Offset = "0x85DB58", VA = "0x85DB58")]
		public Lockbox()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Flowers
{
	[Token(Token = "0x2000141")]
	public enum FlowerDance
	{
		[Token(Token = "0x400073D")]
		Incorrect,
		[Token(Token = "0x400073E")]
		Correct,
		[Token(Token = "0x400073F")]
		CorrectReoccuring,
		[Token(Token = "0x4000740")]
		Reset
	}
	[Token(Token = "0x2000142")]
	public class FlowerNote : MonoBehaviour
	{
		[Token(Token = "0x20003B3")]
		private struct AnimatorParameters
		{
			[Token(Token = "0x40012A5")]
			public const string PlayNote = "PlayNote";

			[Token(Token = "0x40012A6")]
			public const string IsSad = "isSad";

			[Token(Token = "0x40012A7")]
			public const string IsDancing = "isDancing";

			[Token(Token = "0x40012A8")]
			public const string ShortDance = "ShortDance";
		}

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_note;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6180", Offset = "0x6E6180")]
		[SerializeField]
		private AudioSource m_audio;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_flowerScaleTime;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isInteractable;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_resetInteractivityTime;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly Vector3 m_defaultScale;

		[Token(Token = "0x4000749")]
		private const float ResetInteractivityTimer = 0.75f;

		[Token(Token = "0x17000092")]
		public int Note
		{
			[Token(Token = "0x6000992")]
			[Address(RVA = "0x85ABFC", Offset = "0x85ABFC", VA = "0x85ABFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000093")]
		public bool IsSad
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x85AC04", Offset = "0x85AC04", VA = "0x85AC04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x85AC68", Offset = "0x85AC68", VA = "0x85AC68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x85AD1C", Offset = "0x85AD1C", VA = "0x85AD1C")]
		public void EnableFlower()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x85AE90", Offset = "0x85AE90", VA = "0x85AE90")]
		public void DisableFlower()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x85AF54", Offset = "0x85AF54", VA = "0x85AF54")]
		public void PlayNote()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x85AF5C", Offset = "0x85AF5C", VA = "0x85AF5C")]
		public void PlayNote(FlowerDance flowerDanceAnimation)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x85B014", Offset = "0x85B014", VA = "0x85B014")]
		public void PlayNoteAnimation(bool correctNote, bool playShortDance)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x85B160", Offset = "0x85B160", VA = "0x85B160")]
		public void PlayMelodyResultAnimation(bool correctNote)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0x85B0CC", Offset = "0x85B0CC", VA = "0x85B0CC")]
		public void ResetAnimation()
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x85ACCC", Offset = "0x85ACCC", VA = "0x85ACCC")]
		private void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x85B204", Offset = "0x85B204", VA = "0x85B204")]
		public FlowerNote()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x85B290", Offset = "0x85B290", VA = "0x85B290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10C4", Offset = "0x6F10C4")]
		private void <EnableFlower>b__15_0()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class FlowerNotesManager : RoomBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x20003B4")]
		private enum PuzzleState
		{
			[Token(Token = "0x40012AA")]
			NotStarted,
			[Token(Token = "0x40012AB")]
			Started,
			[Token(Token = "0x40012AC")]
			Completed
		}

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6234", Offset = "0x6E6234")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompletedEvent;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_giantForestButterflyEvent;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InteractableObject m_birdInteractable;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayableDirector[] m_birdDirectors;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E62B0", Offset = "0x6E62B0")]
		[SerializeField]
		private int m_butterflyMelodyIndex;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string[] m_melodies;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FlowerNote[] m_flowers;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IReadOnlyList<int> m_correctNotes;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IList<int> m_playedNotes;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SavableInt m_currentMelodyIndex;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_correctNoteCompareIndex;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private PuzzleState m_puzzleState;

		[Token(Token = "0x17000094")]
		public string Guid
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0x85B298", Offset = "0x85B298", VA = "0x85B298", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x85B2A0", Offset = "0x85B2A0", VA = "0x85B2A0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x85B2A8", Offset = "0x85B2A8", VA = "0x85B2A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x85B2B0", Offset = "0x85B2B0", VA = "0x85B2B0", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x85B624", Offset = "0x85B624", VA = "0x85B624", Slot = "8")]
		public void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x85B70C", Offset = "0x85B70C", VA = "0x85B70C", Slot = "9")]
		public void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x85B804", Offset = "0x85B804", VA = "0x85B804")]
		public void TryPlayNote(int note)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x85BB60", Offset = "0x85BB60", VA = "0x85BB60")]
		public void ResetAndPlayMelody()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x85B890", Offset = "0x85B890", VA = "0x85B890")]
		private FlowerDance PlayNote(int note, FlowerNote playedFlower)
		{
			return default(FlowerDance);
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x85C440", Offset = "0x85C440", VA = "0x85C440")]
		private void SetAllFlowersIncorrect(FlowerNote currentFlower)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0x85C15C", Offset = "0x85C15C", VA = "0x85C15C")]
		private void ResetSadFlowers(FlowerNote currentFlower)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x85BE40", Offset = "0x85BE40", VA = "0x85BE40")]
		private bool IsCorrectMelody()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x85BCEC", Offset = "0x85BCEC", VA = "0x85BCEC")]
		private bool IsCorrectNote()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x85C25C", Offset = "0x85C25C", VA = "0x85C25C")]
		private FlowerDance GetReoccuringDanceState(int note)
		{
			return default(FlowerDance);
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x85BF9C", Offset = "0x85BF9C", VA = "0x85BF9C")]
		private FlowerDance CompleteMelody()
		{
			return default(FlowerDance);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x85B3F4", Offset = "0x85B3F4", VA = "0x85B3F4")]
		private void SetCurrentMelody()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x85C52C", Offset = "0x85C52C", VA = "0x85C52C")]
		private List<int> CharsToIntList(string intString)
		{
			return null;
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x85C674", Offset = "0x85C674", VA = "0x85C674")]
		public FlowerNotesManager()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Falling
{
	[Token(Token = "0x2000144")]
	public class DebrisCounter : MonoBehaviour
	{
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_debrisAmount;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onDebrisCleared;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_clearedDebris;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_complete;

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x85AB28", Offset = "0x85AB28", VA = "0x85AB28")]
		public void ClearDebris()
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x85AB38", Offset = "0x85AB38", VA = "0x85AB38")]
		private void CheckCompleteStatus()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x85AB8C", Offset = "0x85AB8C", VA = "0x85AB8C")]
		public DebrisCounter()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.EstateKitchen
{
	[Token(Token = "0x2000145")]
	public class Ingredient : MonoBehaviour
	{
		[Token(Token = "0x400075B")]
		private const int HeightResetY = 0;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_canBurn;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_originalPosition;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_originalRotation;

		[Token(Token = "0x17000095")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x858E54", Offset = "0x858E54", VA = "0x858E54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000096")]
		public bool CanBurn
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x858E5C", Offset = "0x858E5C", VA = "0x858E5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000023")]
		public event Action OnReset
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x858E64", Offset = "0x858E64", VA = "0x858E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10D4", Offset = "0x6F10D4")]
			add
			{
			}
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x858F50", Offset = "0x858F50", VA = "0x858F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F10E4", Offset = "0x6F10E4")]
			remove
			{
			}
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x85903C", Offset = "0x85903C", VA = "0x85903C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x8590AC", Offset = "0x8590AC", VA = "0x8590AC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x859100", Offset = "0x859100", VA = "0x859100")]
		public void ResetIngredient()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x85934C", Offset = "0x85934C", VA = "0x85934C")]
		public void UseIngredient()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x8593BC", Offset = "0x8593BC", VA = "0x8593BC")]
		public Ingredient()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class IngredientHinge : MonoBehaviour
	{
		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody m_connectedBody;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Ingredient m_ingredient;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FixedJoint m_joint;

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x8593CC", Offset = "0x8593CC", VA = "0x8593CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x8594F0", Offset = "0x8594F0", VA = "0x8594F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x8595E0", Offset = "0x8595E0", VA = "0x8595E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x8596D0", Offset = "0x8596D0", VA = "0x8596D0")]
		private void ResetHinge()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x8593D0", Offset = "0x8593D0", VA = "0x8593D0")]
		private void AddJoint()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x8596D4", Offset = "0x8596D4", VA = "0x8596D4")]
		private void TryBreakJoint(Grabber g)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x859788", Offset = "0x859788", VA = "0x859788")]
		public IngredientHinge()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class IngredientPipe : MonoBehaviour
	{
		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterCutscenePlayer m_oneIngredient;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterCutscenePlayer m_twoIngredient;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterCutscenePlayer m_threeIngredient;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_correntEvent;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_wrongEvent;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InventoryItemData[] m_neededIngredients;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E640C", Offset = "0x6E640C")]
		[SerializeField]
		private VoiceLineCollection m_fourHalfInteractReactions;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6458", Offset = "0x6E6458")]
		[SerializeField]
		private UnityEvent m_noIngredientsFound;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_currentIngredientCount;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<int> m_alreadyAddedIngredients;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CharacterVoiceLine m_voiceLine;

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x859790", Offset = "0x859790", VA = "0x859790")]
		public void AddIngredient(PlayableCharacter fourHalf)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x859AA0", Offset = "0x859AA0", VA = "0x859AA0")]
		public void CheckIngredients(PlayableCharacter fourHalf)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x859BF8", Offset = "0x859BF8", VA = "0x859BF8")]
		public IngredientPipe()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class Oven : MonoBehaviour
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Ingredient, Tween> m_tweens;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color sm_burnColor;

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x859CA0", Offset = "0x859CA0", VA = "0x859CA0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x859E34", Offset = "0x859E34", VA = "0x859E34")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x859F5C", Offset = "0x859F5C", VA = "0x859F5C")]
		public Oven()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class Pot : RoomBehaviour
	{
		[Token(Token = "0x20003B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B4C", Offset = "0x6E2B4C")]
		private sealed class <PlayInitialVO>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pot <>4__this;

			[Token(Token = "0x40012B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <delay>5__2;

			[Token(Token = "0x17000219")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017EA")]
				[Address(RVA = "0x85AAB0", Offset = "0x85AAB0", VA = "0x85AAB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017EC")]
				[Address(RVA = "0x85AB20", Offset = "0x85AB20", VA = "0x85AB20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x85A5B8", Offset = "0x85A5B8", VA = "0x85A5B8")]
			[DebuggerHidden]
			public <PlayInitialVO>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x85A944", Offset = "0x85A944", VA = "0x85A944", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x85A948", Offset = "0x85A948", VA = "0x85A948", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x85AAB8", Offset = "0x85AAB8", VA = "0x85AAB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B5C", Offset = "0x6E2B5C")]
		private sealed class <PlayFinalVO>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pot <>4__this;

			[Token(Token = "0x1700021B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F0")]
				[Address(RVA = "0x85A8CC", Offset = "0x85A8CC", VA = "0x85A8CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F2")]
				[Address(RVA = "0x85A93C", Offset = "0x85A93C", VA = "0x85A93C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x85A658", Offset = "0x85A658", VA = "0x85A658")]
			[DebuggerHidden]
			public <PlayFinalVO>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x85A784", Offset = "0x85A784", VA = "0x85A784", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x85A788", Offset = "0x85A788", VA = "0x85A788", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x85A8D4", Offset = "0x85A8D4", VA = "0x85A8D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000773")]
		private const int RequiredIngredients = 4;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable m_isPuzzleCompleted;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E64C4", Offset = "0x6E64C4")]
		[SerializeField]
		private Voice m_cookVoice;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RandomVOPlayer m_randomVOPlayer;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceLineCollection m_instructionsVO;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6530", Offset = "0x6E6530")]
		[SerializeField]
		private Transform m_ingredientsParent;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Ingredient[] m_ingredients;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E658C", Offset = "0x6E658C")]
		[SerializeField]
		private UnityEvent m_onPotComplete;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_recipeStep;

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x85A050", Offset = "0x85A050", VA = "0x85A050")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x85A058", Offset = "0x85A058", VA = "0x85A058", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x85A188", Offset = "0x85A188", VA = "0x85A188")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x85A250", Offset = "0x85A250", VA = "0x85A250")]
		private void UseIngredient(Ingredient ingredient)
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x85A410", Offset = "0x85A410", VA = "0x85A410")]
		public void ResetAllIngredients()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x85A4C4", Offset = "0x85A4C4", VA = "0x85A4C4")]
		public void StartPuzzle()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x85A594", Offset = "0x85A594", VA = "0x85A594")]
		public void EndPuzzle()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x85A080", Offset = "0x85A080", VA = "0x85A080")]
		public void SetIngredientsLocked(bool set)
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x85A520", Offset = "0x85A520", VA = "0x85A520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F10F4", Offset = "0x6F10F4")]
		private IEnumerator PlayInitialVO()
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x85A5E4", Offset = "0x85A5E4", VA = "0x85A5E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1158", Offset = "0x6F1158")]
		private IEnumerator PlayFinalVO()
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x85A11C", Offset = "0x85A11C", VA = "0x85A11C")]
		private void TryEnableCookBanter()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x85A398", Offset = "0x85A398", VA = "0x85A398")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x85A704", Offset = "0x85A704", VA = "0x85A704")]
		public Pot()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Clocktower
{
	[Token(Token = "0x200014A")]
	public class Clock : RoomBehaviour
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabbableClockHandle[] m_handles;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x8AEC94", Offset = "0x8AEC94", VA = "0x8AEC94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x8AED24", Offset = "0x8AED24", VA = "0x8AED24", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x8AEC9C", Offset = "0x8AEC9C", VA = "0x8AEC9C")]
		public void EnableGrabbables(bool active)
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x8AF018", Offset = "0x8AF018", VA = "0x8AF018")]
		public void EnableGrabbables(ClockHandleType handleType)
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x8AF0CC", Offset = "0x8AF0CC", VA = "0x8AF0CC")]
		public Clock()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public enum ClockHandleType
	{
		[Token(Token = "0x400077F")]
		Minute,
		[Token(Token = "0x4000780")]
		Hour
	}
	[Token(Token = "0x200014C")]
	public class ClockReader : MonoBehaviour
	{
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E65E8", Offset = "0x6E65E8")]
		private int m_goalHour;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E6628", Offset = "0x6E6628")]
		private int m_goalMinute;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_hourDegrees;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_minuteDegrees;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable m_isPuzzleCompleted;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompleteEvent;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x8AF12C", Offset = "0x8AF12C", VA = "0x8AF12C")]
		public void CheckCondition()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x8AF1D0", Offset = "0x8AF1D0", VA = "0x8AF1D0")]
		private int DegreesToHour(float degrees)
		{
			return default(int);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x8AF298", Offset = "0x8AF298", VA = "0x8AF298")]
		private float GetDegreesActual(float degrees)
		{
			return default(float);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x8AF2CC", Offset = "0x8AF2CC", VA = "0x8AF2CC")]
		public ClockReader()
		{
		}
	}
	[Token(Token = "0x200014D")]
	public class EntranceClock : EntranceClockAnimation
	{
		[Token(Token = "0x4000787")]
		private const float AnimateTime = 1f;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_interact;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E66A8", Offset = "0x6E66A8")]
		[SerializeField]
		private CardSuit m_cardSuit;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundEffect m_correctSfx;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SoundEffect m_wrongSfx;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isPuzzleActive;

		[Token(Token = "0x17000097")]
		public CardSuit CardSuit
		{
			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x8AF864", Offset = "0x8AF864", VA = "0x8AF864")]
			get
			{
				return default(CardSuit);
			}
		}

		[Token(Token = "0x14000024")]
		private event Action OnResetClock
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x8AF2DC", Offset = "0x8AF2DC", VA = "0x8AF2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F11BC", Offset = "0x6F11BC")]
			add
			{
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x8AF3C8", Offset = "0x8AF3C8", VA = "0x8AF3C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F11CC", Offset = "0x6F11CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		private event Action OnMoveHandle
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x8AF4B4", Offset = "0x8AF4B4", VA = "0x8AF4B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F11DC", Offset = "0x6F11DC")]
			add
			{
			}
			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x8AF5A0", Offset = "0x8AF5A0", VA = "0x8AF5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F11EC", Offset = "0x6F11EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		private event Action<bool> OnMoveHandleComplete
		{
			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x8AF68C", Offset = "0x8AF68C", VA = "0x8AF68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F11FC", Offset = "0x6F11FC")]
			add
			{
			}
			[Token(Token = "0x60009E6")]
			[Address(RVA = "0x8AF778", Offset = "0x8AF778", VA = "0x8AF778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F120C", Offset = "0x6F120C")]
			remove
			{
			}
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x8AF86C", Offset = "0x8AF86C", VA = "0x8AF86C")]
		public void SubscribeToEvents(Action onReset, Action onMoveHandle, Action<bool> onMoveHandleComplete)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x8AF8BC", Offset = "0x8AF8BC", VA = "0x8AF8BC")]
		public void UnsubscribeToEvents(Action onReset, Action onMoveHandle, Action<bool> onMoveHandleComplete)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x8AF908", Offset = "0x8AF908", VA = "0x8AF908")]
		public void Interact()
		{
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x8AFC18", Offset = "0x8AFC18", VA = "0x8AFC18")]
		public void TryResetClock()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x8AFB28", Offset = "0x8AFB28", VA = "0x8AFB28")]
		private void TriggerFeedback()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x8AFCB8", Offset = "0x8AFCB8", VA = "0x8AFCB8")]
		public EntranceClock()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x8AFD8C", Offset = "0x8AFD8C", VA = "0x8AFD8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F121C", Offset = "0x6F121C")]
		private void <Interact>b__19_0()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class GrabbableClockHandle : MonoBehaviour
	{
		[Token(Token = "0x20003B7")]
		private struct AudioConstants
		{
			[Token(Token = "0x40012B4")]
			public const float MinRotationAngleThreshold = 0.02f;

			[Token(Token = "0x40012B5")]
			public const float MaxAudioPlayThreshold = 0.15f;
		}

		[Token(Token = "0x4000790")]
		private const float ClockUpAngle = -90f;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClockHandleType m_handleType;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_rotationInDegrees;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_currentRotatedAngle;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable m_currentOppositeHandleRotatedAngle;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6784", Offset = "0x6E6784")]
		[SerializeField]
		private Clock m_clock;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_resetTransform;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_graphicsPivot;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_rotationPivot;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6820", Offset = "0x6E6820")]
		[SerializeField]
		private bool m_isGrabbed;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool m_isTrackingOtherHandle;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool m_hasInitialized;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_position;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_direction;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_previousRotation;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_audioPlayThreshold;

		[Token(Token = "0x17000098")]
		public ClockHandleType HandleType
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x8AF0C4", Offset = "0x8AF0C4", VA = "0x8AF0C4")]
			get
			{
				return default(ClockHandleType);
			}
		}

		[Token(Token = "0x17000099")]
		public float RotationInDegrees
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x8AFE00", Offset = "0x8AFE00", VA = "0x8AFE00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x8AFE0C", Offset = "0x8AFE0C", VA = "0x8AFE0C")]
			set
			{
			}
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x8AFE4C", Offset = "0x8AFE4C", VA = "0x8AFE4C")]
		private bool IsApplicationNotPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x8AFE6C", Offset = "0x8AFE6C", VA = "0x8AFE6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x8AEDD4", Offset = "0x8AEDD4", VA = "0x8AEDD4")]
		public void SetPosition(float offset = 0f)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x8B0594", Offset = "0x8B0594", VA = "0x8B0594")]
		public void GrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x8B0604", Offset = "0x8B0604", VA = "0x8B0604")]
		public void GrabEnd(Grabber grabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x8AEF58", Offset = "0x8AEF58", VA = "0x8AEF58")]
		public void SetGrabbableActive(bool active)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x8B01E8", Offset = "0x8B01E8", VA = "0x8B01E8")]
		private void Rotate(float angle)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x8B03F8", Offset = "0x8B03F8", VA = "0x8B03F8")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x8AFEE0", Offset = "0x8AFEE0", VA = "0x8AFEE0")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x8B0250", Offset = "0x8B0250", VA = "0x8B0250")]
		private void MeasureValue()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x8B051C", Offset = "0x8B051C", VA = "0x8B051C")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x8B0108", Offset = "0x8B0108", VA = "0x8B0108")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x8B0674", Offset = "0x8B0674", VA = "0x8B0674")]
		private void TryPlayAudio()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x8B0640", Offset = "0x8B0640", VA = "0x8B0640")]
		private void StopAudio()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x8B06C4", Offset = "0x8B06C4", VA = "0x8B06C4")]
		private float GetHandleAngle(int hour)
		{
			return default(float);
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x8B06DC", Offset = "0x8B06DC", VA = "0x8B06DC")]
		public GrabbableClockHandle()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1A78", Offset = "0x6E1A78")]
	public class Pendulum : RoomBehaviour
	{
		[Token(Token = "0x20003B8")]
		private enum ReleaseAction
		{
			[Token(Token = "0x40012B7")]
			UnParent = 1,
			[Token(Token = "0x40012B8")]
			EnableLocomotion = 2,
			[Token(Token = "0x40012B9")]
			EnableInput = 4
		}

		[Token(Token = "0x40007A2")]
		private const float EpsilonDistance = 0.15f;

		[Token(Token = "0x40007A3")]
		private const float MaxAttachDistance = 0.15f;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E68B4", Offset = "0x6E68B4")]
		[SerializeField]
		private SphereCollider m_overlapCollider;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolVariable m_isAtMin;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolVariable m_isAtMax;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable m_isAtJump;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatVariable m_movePercentage;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6950", Offset = "0x6E6950")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TranslationToRotationConstraint m_wheelConstraint;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_characterAttachPoint;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E69BC", Offset = "0x6E69BC")]
		[SerializeField]
		private float m_jumpHeight;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E6A08", Offset = "0x6E6A08")]
		private float m_jumpHeightThreshold;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6A4C", Offset = "0x6E6A4C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E6A4C", Offset = "0x6E6A4C")]
		private float m_playThreshold;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip m_moveAudioClip;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip m_stopAudioClip;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SoundEffect m_grabWeight;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6AF4", Offset = "0x6E6AF4")]
		[SerializeField]
		private HapticClip m_hapticClip;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private HapticClip m_hapticClipStop;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6B50", Offset = "0x6E6B50")]
		[SerializeField]
		private ReleaseAction m_onMinRelease;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private ReleaseAction m_onMaxRelease;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ReleaseAction m_onJumpRelease;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_isAtStop;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_previousY;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private LayerMask m_characterHitMask;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IList<PlayableCharacter> m_charactersOnElevator;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_sampleColliders;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly Vector3 m_defaultPosition;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private readonly int m_isGrabbingHash;

		[Token(Token = "0x1700009A")]
		public string Guid
		{
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x8B06E4", Offset = "0x8B06E4", VA = "0x8B06E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x8B06EC", Offset = "0x8B06EC", VA = "0x8B06EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x8B06F4", Offset = "0x8B06F4", VA = "0x8B06F4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x8B0B68", Offset = "0x8B0B68", VA = "0x8B0B68")]
		public void OnGrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x8B1288", Offset = "0x8B1288", VA = "0x8B1288")]
		public void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x8B1A6C", Offset = "0x8B1A6C", VA = "0x8B1A6C")]
		public void OnGrabEnd(Grabber activatedGrabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x8B0CBC", Offset = "0x8B0CBC", VA = "0x8B0CBC")]
		private void TryAttachCharactersToElevator()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x8B1D18", Offset = "0x8B1D18", VA = "0x8B1D18")]
		private void TryDetachCharactersFromElevator(ReleaseAction releaseAction)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x8B0AE4", Offset = "0x8B0AE4", VA = "0x8B0AE4")]
		private bool IsEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x8B09D0", Offset = "0x8B09D0", VA = "0x8B09D0")]
		private void CalculatePercentage()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x8B18F0", Offset = "0x8B18F0", VA = "0x8B18F0")]
		private void TryPlayMoveSound(PointerType pointerType)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x8B19D0", Offset = "0x8B19D0", VA = "0x8B19D0")]
		private void PlayStopSound(PointerType pointerType)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x8B2358", Offset = "0x8B2358", VA = "0x8B2358")]
		public Pendulum()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class PendulumHandler : MonoBehaviour
	{
		[Token(Token = "0x40007C1")]
		private const float MinFloatDiff = 0.01f;

		[Token(Token = "0x40007C2")]
		private const float MinMoveDiff = 0.1f;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_pendulumHeightParamHash;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_pendulumAnimator;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_leftPendulumPercent;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable m_rightPendulumPercent;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_animationCurve;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E6BFC", Offset = "0x6E6BFC")]
		private float m_raisedThreshold;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NavMeshObstacle m_navMeshObstacle;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6C4C", Offset = "0x6E6C4C")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MathUtils.MinMax m_pitchMinMax;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip m_moveUp;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip m_moveDown;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousRaiseValue;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_previousAudioValue;

		[Token(Token = "0x1700009B")]
		private float RaiseValue
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x8B2488", Offset = "0x8B2488", VA = "0x8B2488")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x8B24D4", Offset = "0x8B24D4", VA = "0x8B24D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x8B2688", Offset = "0x8B2688", VA = "0x8B2688")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x8B27E0", Offset = "0x8B27E0", VA = "0x8B27E0")]
		private void PlayAudio(bool moveUp)
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x8B25E8", Offset = "0x8B25E8", VA = "0x8B25E8")]
		private void ToggleNavMeshObstacle(float raiseValue)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x8B2908", Offset = "0x8B2908", VA = "0x8B2908")]
		public PendulumHandler()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1ADC", Offset = "0x6E1ADC")]
	public class PendulumObstacleTrigger : MonoBehaviour
	{
		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshObstacle m_navMeshObstacle;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x8B29C4", Offset = "0x8B29C4", VA = "0x8B29C4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x8B2ABC", Offset = "0x8B2ABC", VA = "0x8B2ABC")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x8B2A84", Offset = "0x8B2A84", VA = "0x8B2A84")]
		private void SetObstacleActive(bool active)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x8B2B7C", Offset = "0x8B2B7C", VA = "0x8B2B7C")]
		public PendulumObstacleTrigger()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Castles
{
	[Token(Token = "0x2000152")]
	public class CardWorkerLumberjack : CardWorkerControl
	{
		[Token(Token = "0x40007D1")]
		private const float TreeDenialDistance = 1f;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6CD8", Offset = "0x6E6CD8")]
		[SerializeField]
		private CardSuit m_cardWorkerSuit;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private CardColour m_cardWorkerColour;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SphereCollider m_deniedGardenCollider;

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x8ABC2C", Offset = "0x8ABC2C", VA = "0x8ABC2C", Slot = "20")]
		public override bool TryAddTreeWork(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x8ABF9C", Offset = "0x8ABF9C", VA = "0x8ABF9C", Slot = "21")]
		public override void TryStartTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x8AC02C", Offset = "0x8AC02C", VA = "0x8AC02C", Slot = "22")]
		public override void TryCompleteTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x8AC0D0", Offset = "0x8AC0D0", VA = "0x8AC0D0")]
		public CardColour GetColour()
		{
			return default(CardColour);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x8ABF78", Offset = "0x8ABF78", VA = "0x8ABF78")]
		private bool CanPerformWork(CardColour treeColour, CardSuit treeShape)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x8ABD88", Offset = "0x8ABD88", VA = "0x8ABD88")]
		private bool IsGardenDenied(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x8AC0D8", Offset = "0x8AC0D8", VA = "0x8AC0D8")]
		public CardWorkerLumberjack()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class CardWorkerPainter : CardWorkerControl
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6D44", Offset = "0x6E6D44")]
		[SerializeField]
		private CardColour m_cardWorkerColour;

		[Token(Token = "0x1700009C")]
		protected override CastlesTree.ParticleType WorkParticleType
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x8AC0EC", Offset = "0x8AC0EC", VA = "0x8AC0EC", Slot = "19")]
			get
			{
				return default(CastlesTree.ParticleType);
			}
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x8AC0F4", Offset = "0x8AC0F4", VA = "0x8AC0F4", Slot = "20")]
		public override bool TryAddTreeWork(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x8AC25C", Offset = "0x8AC25C", VA = "0x8AC25C", Slot = "21")]
		public override void TryStartTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x8AC5A8", Offset = "0x8AC5A8", VA = "0x8AC5A8", Slot = "22")]
		public override void TryCompleteTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x8AC240", Offset = "0x8AC240", VA = "0x8AC240")]
		private bool CanPerformWork(CardColour treeColour)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x8AC640", Offset = "0x8AC640", VA = "0x8AC640")]
		public CardWorkerPainter()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public enum CardWorkerShapes
	{
		[Token(Token = "0x40007D7")]
		Clubs,
		[Token(Token = "0x40007D8")]
		Diamonds,
		[Token(Token = "0x40007D9")]
		Hearts,
		[Token(Token = "0x40007DA")]
		Spades
	}
	[Token(Token = "0x2000155")]
	public class CardWorkerTrimmer : CardWorkerControl
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6D90", Offset = "0x6E6D90")]
		[SerializeField]
		private CardSuit m_cardWorkerShape;

		[Token(Token = "0x1700009D")]
		protected override CastlesTree.ParticleType WorkParticleType
		{
			[Token(Token = "0x6000A28")]
			[Address(RVA = "0x8AC648", Offset = "0x8AC648", VA = "0x8AC648", Slot = "19")]
			get
			{
				return default(CastlesTree.ParticleType);
			}
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x8AC650", Offset = "0x8AC650", VA = "0x8AC650", Slot = "20")]
		public override bool TryAddTreeWork(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x8AC7A4", Offset = "0x8AC7A4", VA = "0x8AC7A4", Slot = "21")]
		public override void TryStartTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x8AC820", Offset = "0x8AC820", VA = "0x8AC820", Slot = "22")]
		public override void TryCompleteTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x8AC78C", Offset = "0x8AC78C", VA = "0x8AC78C")]
		private bool CanPerformWork(CardSuit treeShape)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x8AC8DC", Offset = "0x8AC8DC", VA = "0x8AC8DC")]
		public CardWorkerTrimmer()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class CastlesGardenGate : MonoBehaviour
	{
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CardColour m_blockedColour;

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x8AC8F4", Offset = "0x8AC8F4", VA = "0x8AC8F4")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x8AC9D4", Offset = "0x8AC9D4", VA = "0x8AC9D4")]
		public CastlesGardenGate()
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1B40", Offset = "0x6E1B40")]
	public class CastlesTree : SaveObject
	{
		[Token(Token = "0x20003B9")]
		public enum ParticleType
		{
			[Token(Token = "0x40012BB")]
			Chop,
			[Token(Token = "0x40012BC")]
			Paint,
			[Token(Token = "0x40012BD")]
			Trim
		}

		[Token(Token = "0x20003BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B6C", Offset = "0x6E2B6C")]
		private sealed class <TreeFalling>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CastlesTree <>4__this;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fallingDuration;

			[Token(Token = "0x1700021D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017F6")]
				[Address(RVA = "0x8ADE94", Offset = "0x8ADE94", VA = "0x8ADE94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017F8")]
				[Address(RVA = "0x8ADF04", Offset = "0x8ADF04", VA = "0x8ADF04", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x8AD858", Offset = "0x8AD858", VA = "0x8AD858")]
			[DebuggerHidden]
			public <TreeFalling>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x8ADC60", Offset = "0x8ADC60", VA = "0x8ADC60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x8ADC64", Offset = "0x8ADC64", VA = "0x8ADC64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x8ADE9C", Offset = "0x8ADE9C", VA = "0x8ADE9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B7C", Offset = "0x6E2B7C")]
		private sealed class <RevertColor>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CastlesTree <>4__this;

			[Token(Token = "0x40012C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <playbackTime>5__2;

			[Token(Token = "0x1700021F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017FC")]
				[Address(RVA = "0x8ADBE8", Offset = "0x8ADBE8", VA = "0x8ADBE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000220")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017FE")]
				[Address(RVA = "0x8ADC58", Offset = "0x8ADC58", VA = "0x8ADC58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x8AD884", Offset = "0x8AD884", VA = "0x8AD884")]
			[DebuggerHidden]
			public <RevertColor>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x8ADAA4", Offset = "0x8ADAA4", VA = "0x8ADAA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x8ADAA8", Offset = "0x8ADAA8", VA = "0x8ADAA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x8ADBF0", Offset = "0x8ADBF0", VA = "0x8ADBF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_parameterFall;

		[Token(Token = "0x40007DE")]
		private const int MaxMesh = 4;

		[Token(Token = "0x40007DF")]
		private const int MaxMaterial = 3;

		[Token(Token = "0x40007E0")]
		private const float PaintDelayTime = 1f;

		[Token(Token = "0x40007E1")]
		private const float PaintTime = 5f;

		[Token(Token = "0x40007E2")]
		private const float RevertColorInterval = 0.1f;

		[Token(Token = "0x40007E3")]
		private const string MaterialDiffuseProperty = "_Diffuse";

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CardSuit m_activeMesh;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CardColour m_activeMaterial;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractableObject m_interactableObject;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable m_fourHalfHasFollower;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LumberjackWork m_lumberjackWork;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PainterWork m_painterWork;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TrimmerWork m_trimmerWork;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_highlightPoint;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6E6C", Offset = "0x6E6E6C")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Mesh[] m_meshes;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material[] m_materials;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform[] m_highlightPointPositions;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6EF8", Offset = "0x6E6EF8")]
		[SerializeField]
		private ParticleSystem m_leafParticle;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ParticleSystem m_cuttingCompleteParticles;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ParticleSystem m_crashParticles;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ParticleSystem m_colorParticle;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ParticleSystemRenderer m_colorParticleRenderer;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ParticleSystem.MinMaxGradient[] m_particleGradients;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Animator m_treeFallingAnimator;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_durationUntilFallStart;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float m_fallingDuration;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E6FC4", Offset = "0x6E6FC4")]
		[SerializeField]
		private SoundEffect m_fallDownSoundEffect;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_isOccupied;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_currentTaskDuration;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CastleTreeSavableData m_castleTreeData;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine m_activeRevertColorRoutine;

		[Token(Token = "0x1700009E")]
		public CardSuit Shape
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x8ABF70", Offset = "0x8ABF70", VA = "0x8ABF70")]
			get
			{
				return default(CardSuit);
			}
		}

		[Token(Token = "0x1700009F")]
		public CardColour Colour
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x8ABF68", Offset = "0x8ABF68", VA = "0x8ABF68")]
			get
			{
				return default(CardColour);
			}
		}

		[Token(Token = "0x170000A0")]
		public LumberjackWork LumberjackWork
		{
			[Token(Token = "0x6000A32")]
			[Address(RVA = "0x8ABF60", Offset = "0x8ABF60", VA = "0x8ABF60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		public PainterWork PainterWork
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0x8AC238", Offset = "0x8AC238", VA = "0x8AC238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A2")]
		public TrimmerWork TrimmerWork
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0x8AC79C", Offset = "0x8AC79C", VA = "0x8AC79C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private int ActiveMeshIndex
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x8AC9E4", Offset = "0x8AC9E4", VA = "0x8AC9E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A4")]
		private int ActiveMaterialIndex
		{
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x8AC9F0", Offset = "0x8AC9F0", VA = "0x8AC9F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x8AC9F8", Offset = "0x8AC9F8", VA = "0x8AC9F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x8ACA88", Offset = "0x8ACA88", VA = "0x8ACA88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x8ACB24", Offset = "0x8ACB24", VA = "0x8ACB24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x8ACECC", Offset = "0x8ACECC", VA = "0x8ACECC")]
		public void InteractTree(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x8AD01C", Offset = "0x8AD01C", VA = "0x8AD01C")]
		public void SetOccupied(bool isOccupied)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x8AD090", Offset = "0x8AD090", VA = "0x8AD090")]
		public void TryStartWork(CardWorkerControl worker, float taskDuration)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x8AD0D4", Offset = "0x8AD0D4", VA = "0x8AD0D4")]
		public void TryCompleteWork(CardWorkerControl worker)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x8AC06C", Offset = "0x8AC06C", VA = "0x8AC06C")]
		public void ChopDown()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x8AD1AC", Offset = "0x8AD1AC", VA = "0x8AD1AC")]
		private void ReplaceWorkTasksWithRest()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x8AC86C", Offset = "0x8AC86C", VA = "0x8AC86C")]
		public void SetNewMesh(CardSuit newMesh)
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x8AC618", Offset = "0x8AC618", VA = "0x8AC618")]
		public void SetNewMaterial(CardColour newMaterial)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x8AC2B8", Offset = "0x8AC2B8", VA = "0x8AC2B8")]
		public void PaintNewMaterial(CardColour newMaterial)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x8ABFF0", Offset = "0x8ABFF0", VA = "0x8ABFF0")]
		public void EnableParticleEffect(ParticleType fxType)
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x8AD2B4", Offset = "0x8AD2B4", VA = "0x8AD2B4")]
		public void DisableParticleEffect(ParticleType fxType)
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x8AD370", Offset = "0x8AD370", VA = "0x8AD370", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x8AD51C", Offset = "0x8AD51C", VA = "0x8AD51C", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x8AD2FC", Offset = "0x8AD2FC", VA = "0x8AD2FC")]
		private void AbortPainting()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x8ACE38", Offset = "0x8ACE38", VA = "0x8ACE38")]
		private void StoreSaveData()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x8AD478", Offset = "0x8AD478", VA = "0x8AD478")]
		private void SetLoadedData()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x8AD68C", Offset = "0x8AD68C", VA = "0x8AD68C")]
		private void RemoveTree()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x8ACB48", Offset = "0x8ACB48", VA = "0x8ACB48")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x8AD6C4", Offset = "0x8AD6C4", VA = "0x8AD6C4")]
		private void SetParticleStartColor(ParticleSystem.MainModule mainModule, ParticleSystem.MinMaxGradient colorGradient)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x8AD710", Offset = "0x8AD710", VA = "0x8AD710")]
		private string[] GetSuitNames()
		{
			return null;
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x8AD7B4", Offset = "0x8AD7B4", VA = "0x8AD7B4")]
		private string[] GetColourNames()
		{
			return null;
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x8AD114", Offset = "0x8AD114", VA = "0x8AD114")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F122C", Offset = "0x6F122C")]
		private IEnumerator TreeFalling(float fallingDuration)
		{
			return null;
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x8AD618", Offset = "0x8AD618", VA = "0x8AD618")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1290", Offset = "0x6F1290")]
		private IEnumerator RevertColor()
		{
			return null;
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x8AD224", Offset = "0x8AD224", VA = "0x8AD224")]
		private void WorkCompleted()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x8AD8B0", Offset = "0x8AD8B0", VA = "0x8AD8B0")]
		private void OnFourHalfFollowerHasChanged()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x8AD934", Offset = "0x8AD934", VA = "0x8AD934")]
		public CastlesTree()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x8ADA74", Offset = "0x8ADA74", VA = "0x8ADA74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F12F4", Offset = "0x6F12F4")]
		private void <PaintNewMaterial>b__60_0()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class CastleTreeSavableData : SavableData
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CardSuit Shape;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CardColour Colour;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x8AC8EC", Offset = "0x8AC8EC", VA = "0x8AC8EC")]
		public CastleTreeSavableData()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Cardsweeper
{
	[Token(Token = "0x2000159")]
	[Flags]
	public enum CardAttributes
	{
		[Token(Token = "0x4000803")]
		Locked = 0,
		[Token(Token = "0x4000804")]
		Court = 1,
		[Token(Token = "0x4000805")]
		Marked = 2,
		[Token(Token = "0x4000806")]
		Flipped = 4,
		[Token(Token = "0x4000807")]
		Scratched = 8,
		[Token(Token = "0x4000808")]
		Missing = 0x10,
		[Token(Token = "0x4000809")]
		Targetless = 0x11
	}
	[Token(Token = "0x200015A")]
	public enum CardDirections
	{
		[Token(Token = "0x400080B")]
		Up,
		[Token(Token = "0x400080C")]
		Right,
		[Token(Token = "0x400080D")]
		Down,
		[Token(Token = "0x400080E")]
		Left
	}
	[Token(Token = "0x200015B")]
	public class CardGraphics : MonoBehaviour
	{
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite[] m_suitSprites;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite[] m_valueSprites;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite[] m_attributeSprites;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpriteRenderer m_suitSpriteRenderer;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpriteRenderer m_attributeSpriteRenderer;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer m_valueSpriteRenderer;

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x8A9420", Offset = "0x8A9420", VA = "0x8A9420")]
		public void SetCardGraphics(IList<CardAttributes> cardAttributes, CardDirections targetDirection, int targetDistance, bool joker)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x8A9664", Offset = "0x8A9664", VA = "0x8A9664")]
		private Sprite DetermineSuit(IList<CardAttributes> cardAttributes, CardDirections targetDirection)
		{
			return null;
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0x8A97F0", Offset = "0x8A97F0", VA = "0x8A97F0")]
		private Sprite DetermineValue(int targetDistance)
		{
			return null;
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x8A98A0", Offset = "0x8A98A0", VA = "0x8A98A0")]
		private Sprite DetermineAttribute(IList<CardAttributes> cardAttributes)
		{
			return null;
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x8A95D0", Offset = "0x8A95D0", VA = "0x8A95D0")]
		private void ApplySprites(Sprite suitSprite, Sprite attributeSprite, Sprite valueSprite)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x8A99A0", Offset = "0x8A99A0", VA = "0x8A99A0")]
		public CardGraphics()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class CardLevel : MonoBehaviour
	{
		[Token(Token = "0x20003BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B8C", Offset = "0x6E2B8C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40012C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CardsweeperCard[] cardRow;

			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x8AA6EC", Offset = "0x8AA6EC", VA = "0x8AA6EC")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001800")]
			[Address(RVA = "0x8AB4BC", Offset = "0x8AB4BC", VA = "0x8AB4BC")]
			internal bool <LocateCards>b__0(CardsweeperCard item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2B9C", Offset = "0x6E2B9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CardsweeperCard, float> <>9__19_0;

			[Token(Token = "0x6001802")]
			[Address(RVA = "0x8AB46C", Offset = "0x8AB46C", VA = "0x8AB46C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001803")]
			[Address(RVA = "0x8AB474", Offset = "0x8AB474", VA = "0x8AB474")]
			internal float <SortRowFromLeft>b__19_0(CardsweeperCard obj)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000815")]
		private const float RowThreshold = 0.05f;

		[Token(Token = "0x4000816")]
		private const int MaxRows = 16;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<CardsweeperCard> m_allCards;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_revealedCards;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_cardCount;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CardsweeperCard[][] m_grid;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_singleRowLevel;

		[Token(Token = "0x14000027")]
		public event Action OnLevelCompleted
		{
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0x8A9A20", Offset = "0x8A9A20", VA = "0x8A9A20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1304", Offset = "0x6F1304")]
			add
			{
			}
			[Token(Token = "0x6000A5E")]
			[Address(RVA = "0x8A9B0C", Offset = "0x8A9B0C", VA = "0x8A9B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1314", Offset = "0x6F1314")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x8A9BF8", Offset = "0x8A9BF8", VA = "0x8A9BF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x8AA508", Offset = "0x8AA508", VA = "0x8AA508")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F1324", Offset = "0x6F1324")]
		public void UpdateLevel()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x8AA184", Offset = "0x8AA184", VA = "0x8AA184")]
		private void CountCards()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x8AA048", Offset = "0x8AA048", VA = "0x8AA048")]
		private void ResetCards(bool flipCards)
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x8A9C28", Offset = "0x8A9C28", VA = "0x8A9C28")]
		private void LocateCards()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x8AAB34", Offset = "0x8AAB34", VA = "0x8AAB34")]
		private void IdentifyCourtCards(CardsweeperCard[][] grid)
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x8AAEAC", Offset = "0x8AAEAC", VA = "0x8AAEAC")]
		private void TargetCourtCard(int courtRow, int courtCol, CardsweeperCard[][] grid)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0x8AA6F4", Offset = "0x8AA6F4", VA = "0x8AA6F4")]
		private CardsweeperCard GetTopCard(CardsweeperCard[] cards)
		{
			return null;
		}

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x8AA824", Offset = "0x8AA824", VA = "0x8AA824")]
		private CardsweeperCard[] GetCardRowAtDepth(CardsweeperCard[] cards, float depth)
		{
			return null;
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x8AAA24", Offset = "0x8AAA24", VA = "0x8AAA24")]
		private void SortRowFromLeft(ref CardsweeperCard[] row)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x8AB230", Offset = "0x8AB230", VA = "0x8AB230")]
		private void CardRevealed(bool isCourtCard)
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x8AB268", Offset = "0x8AB268", VA = "0x8AB268")]
		public void SetCardsActive(bool setBool)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x8AB3A8", Offset = "0x8AB3A8", VA = "0x8AB3A8")]
		public CardLevel()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class CardPuzzle : MonoBehaviour
	{
		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CardLevel> m_levels;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_puzzleCompletedEvent;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_currentLevelIndex;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x8AB51C", Offset = "0x8AB51C", VA = "0x8AB51C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x8AB620", Offset = "0x8AB620", VA = "0x8AB620")]
		private void CompleteLevel()
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x8AB788", Offset = "0x8AB788", VA = "0x8AB788")]
		public void SetPuzzleActive(bool setBool)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x8AB814", Offset = "0x8AB814", VA = "0x8AB814")]
		public CardPuzzle()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public enum CardSuits
	{
		[Token(Token = "0x4000821")]
		Clubs,
		[Token(Token = "0x4000822")]
		Diamonds,
		[Token(Token = "0x4000823")]
		Hearts,
		[Token(Token = "0x4000824")]
		Spades,
		[Token(Token = "0x4000825")]
		Black,
		[Token(Token = "0x4000826")]
		Red,
		[Token(Token = "0x4000827")]
		Joker,
		[Token(Token = "0x4000828")]
		Blank
	}
	[Token(Token = "0x200015F")]
	public class CardsweeperCard : MonoBehaviour
	{
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CardAttributes> m_cardAttributes;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E70B0", Offset = "0x6E70B0")]
		[SerializeField]
		private CardDirections m_lockedDirection;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CardGraphics m_cardGraphics;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CardDirections m_targetDirection;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_targetDistance;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Vector3 m_flipRotationAngles;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isJoker;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_isRevealed;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_isActivated;

		[Token(Token = "0x170000A5")]
		public IList<CardAttributes> CardAttributesList
		{
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x8AA5F8", Offset = "0x8AA5F8", VA = "0x8AA5F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<bool> OnCardRevealed
		{
			[Token(Token = "0x6000A70")]
			[Address(RVA = "0x8AA50C", Offset = "0x8AA50C", VA = "0x8AA50C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F135C", Offset = "0x6F135C")]
			add
			{
			}
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x8AB87C", Offset = "0x8AB87C", VA = "0x8AB87C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F136C", Offset = "0x6F136C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x8AB968", Offset = "0x8AB968", VA = "0x8AB968")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x8ABA44", Offset = "0x8ABA44", VA = "0x8ABA44")]
		private void HideCard()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x8ABAC0", Offset = "0x8ABAC0", VA = "0x8ABAC0")]
		public void RevealCard()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x8ABA54", Offset = "0x8ABA54", VA = "0x8ABA54")]
		private void FlipCard()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x8AA600", Offset = "0x8AA600", VA = "0x8AA600")]
		public void ResetCard(bool flipCard)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x8AAD94", Offset = "0x8AAD94", VA = "0x8AAD94")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0x8AB14C", Offset = "0x8AB14C", VA = "0x8AB14C")]
		public void SuggestTarget(CardDirections newDirection, int newDistance)
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0x8AB39C", Offset = "0x8AB39C", VA = "0x8AB39C")]
		public void SetCardActive(bool setBool)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x8ABB74", Offset = "0x8ABB74", VA = "0x8ABB74")]
		public CardsweeperCard()
		{
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000160")]
	public class FadeHandler : MonoBehaviour
	{
		[Token(Token = "0x20003BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BAC", Offset = "0x6E2BAC")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40012C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TweenCallback onComplete;

			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FadeHandler <>4__this;

			[Token(Token = "0x6001804")]
			[Address(RVA = "0x8A0F98", Offset = "0x8A0F98", VA = "0x8A0F98")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6001805")]
			[Address(RVA = "0x8A10D0", Offset = "0x8A10D0", VA = "0x8A10D0")]
			internal void <FadeInInternal>b__0()
			{
			}
		}

		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BBC", Offset = "0x6E2BBC")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FadeHandler <>4__this;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TweenCallback onComplete;

			[Token(Token = "0x6001806")]
			[Address(RVA = "0x8A0FA0", Offset = "0x8A0FA0", VA = "0x8A0FA0")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0x8A1154", Offset = "0x8A1154", VA = "0x8A1154")]
			internal void <FadeOutInternal>b__0()
			{
			}

			[Token(Token = "0x6001808")]
			[Address(RVA = "0x8A1198", Offset = "0x8A1198", VA = "0x8A1198")]
			internal void <FadeOutInternal>b__1()
			{
			}
		}

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CameraClearFlags m_cameraClearFlags;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_autoFadeInOnAwake;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tweener m_fadeTweener;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_screenFadeEventToken;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_cameraClearColor;

		[Token(Token = "0x400083A")]
		public const float DefaultFadeTime = 0.5f;

		[Token(Token = "0x14000029")]
		public event Action OnBeforeFadeOut
		{
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x8A0588", Offset = "0x8A0588", VA = "0x8A0588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F137C", Offset = "0x6F137C")]
			add
			{
			}
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x8A0674", Offset = "0x8A0674", VA = "0x8A0674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F138C", Offset = "0x6F138C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action OnAfterFadeIn
		{
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x8A0760", Offset = "0x8A0760", VA = "0x8A0760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F139C", Offset = "0x6F139C")]
			add
			{
			}
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x8A084C", Offset = "0x8A084C", VA = "0x8A084C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13AC", Offset = "0x6F13AC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0x8A0938", Offset = "0x8A0938", VA = "0x8A0938")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x8A09E4", Offset = "0x8A09E4", VA = "0x8A09E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x8A0A58", Offset = "0x8A0A58", VA = "0x8A0A58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0x8A0A5C", Offset = "0x8A0A5C", VA = "0x8A0A5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x8A0B54", Offset = "0x8A0B54", VA = "0x8A0B54")]
		public YieldInstruction FadeIn(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x8A0D30", Offset = "0x8A0D30", VA = "0x8A0D30")]
		public YieldInstruction FadeOut(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x8A0B48", Offset = "0x8A0B48", VA = "0x8A0B48")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x8A0F1C", Offset = "0x8A0F1C", VA = "0x8A0F1C")]
		public void FadeIn(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x8A0F20", Offset = "0x8A0F20", VA = "0x8A0F20")]
		public void FadeOut(TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x8A0F28", Offset = "0x8A0F28", VA = "0x8A0F28")]
		public void FadeOut(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x8A0F2C", Offset = "0x8A0F2C", VA = "0x8A0F2C")]
		private void OnScreenFade(PlayerEvents.ScreenFadeEvent eventData)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x8A0B80", Offset = "0x8A0B80", VA = "0x8A0B80")]
		private void FadeInInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x8A0D5C", Offset = "0x8A0D5C", VA = "0x8A0D5C")]
		private void FadeOutInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x8A0FA8", Offset = "0x8A0FA8", VA = "0x8A0FA8")]
		private void SetCameraClearColorToBlack()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x8A1034", Offset = "0x8A1034", VA = "0x8A1034")]
		private void ResetCameraClearFlags()
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x8A10BC", Offset = "0x8A10BC", VA = "0x8A10BC")]
		public FadeHandler()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public interface IPlayerPointer
	{
		[Token(Token = "0x170000A6")]
		PointerType PointerType
		{
			[Token(Token = "0x6000A90")]
			get;
		}

		[Token(Token = "0x170000A7")]
		Vector3 Position
		{
			[Token(Token = "0x6000A91")]
			get;
		}
	}
	[Token(Token = "0x2000162")]
	public class MousePlayerPointer : IPlayerPointer
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E715C", Offset = "0x6E715C")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x170000A8")]
		public PointerType PointerType
		{
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x8A11D8", Offset = "0x8A11D8", VA = "0x8A11D8", Slot = "4")]
			get
			{
				return default(PointerType);
			}
		}

		[Token(Token = "0x170000A9")]
		public Vector3 Position
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x8A11E0", Offset = "0x8A11E0", VA = "0x8A11E0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13BC", Offset = "0x6F13BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x8A11EC", Offset = "0x8A11EC", VA = "0x8A11EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13CC", Offset = "0x6F13CC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x8A11F8", Offset = "0x8A11F8", VA = "0x8A11F8")]
		public MousePlayerPointer()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class PlayerCamera : MonoBehaviour
	{
		[Token(Token = "0x20003C0")]
		private struct Constants
		{
			[Token(Token = "0x40012CD")]
			public const float MinCameraPositionDiff = 0.1f;

			[Token(Token = "0x40012CE")]
			public const float MinCameraRotationAngle = 15f;
		}

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_cameraZoomedInScale;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 m_cameraDefaultScale;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 m_worldCenter;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_cameraRigTransform;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_rotationIncrement;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_movementIncrement;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_heightAdjustment;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_position;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_rotation;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MathUtils.MinMax m_positionLimits;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_biomeDeactivatedEventToken;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_recenterControllerEventToken;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_hmdMountStatusChangedEventToken;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_isSubscribedToHMDEvents;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private RecenterData m_recenterData;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion m_recenterRotation;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 m_recenterPosition;

		[Token(Token = "0x170000AA")]
		public Transform CameraRigTransform
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x8A1200", Offset = "0x8A1200", VA = "0x8A1200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x8A1208", Offset = "0x8A1208", VA = "0x8A1208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<Vector3> OnScaleChanged
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x8A1210", Offset = "0x8A1210", VA = "0x8A1210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13DC", Offset = "0x6F13DC")]
			add
			{
			}
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x8A12FC", Offset = "0x8A12FC", VA = "0x8A12FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F13EC", Offset = "0x6F13EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x8A13E8", Offset = "0x8A13E8", VA = "0x8A13E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x8A14E0", Offset = "0x8A14E0", VA = "0x8A14E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x8A1568", Offset = "0x8A1568", VA = "0x8A1568")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x8A185C", Offset = "0x8A185C", VA = "0x8A185C")]
		public void SetHeightAdjustment(float heightAdjustment)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x8A1720", Offset = "0x8A1720", VA = "0x8A1720")]
		public void ResetHeightAdjustment()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0x8A1864", Offset = "0x8A1864", VA = "0x8A1864")]
		public void RecenterCamera(PlayerInputState inputState)
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x8A1CC8", Offset = "0x8A1CC8", VA = "0x8A1CC8")]
		public void MoveCamera(float rawAxisY)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x8A1F10", Offset = "0x8A1F10", VA = "0x8A1F10")]
		public void RotateCamera(float rawAxisX, bool rotateAroundWorld)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x8A1AE0", Offset = "0x8A1AE0", VA = "0x8A1AE0")]
		public void FocusOnActiveCharacter()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x8A1B68", Offset = "0x8A1B68", VA = "0x8A1B68")]
		public void FocusOnCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x8A2070", Offset = "0x8A2070", VA = "0x8A2070")]
		public void FocusOnCharacter(PlayableCharacter character, CharacterOrientationState orientationState)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x8A2148", Offset = "0x8A2148", VA = "0x8A2148")]
		public void FocusOnPoint(Vector3 focusPoint)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x8A1C84", Offset = "0x8A1C84", VA = "0x8A1C84")]
		private void FocusOnPoint(Vector3 focusPoint, float heightAdjustment)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x8A2500", Offset = "0x8A2500", VA = "0x8A2500")]
		public void SetCameraOrientation(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x8A2634", Offset = "0x8A2634", VA = "0x8A2634")]
		public void ZoomInCamera(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x8A27E0", Offset = "0x8A27E0", VA = "0x8A27E0")]
		public void ZoomOutCamera()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x8A179C", Offset = "0x8A179C", VA = "0x8A179C")]
		private void HardwareRecenter()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x8A290C", Offset = "0x8A290C", VA = "0x8A290C")]
		private void OnHMDMountStatusChanged(PlatformEvents.HMDMountStatusChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x8A2B5C", Offset = "0x8A2B5C", VA = "0x8A2B5C")]
		public void SetPositionLimits(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x8A2150", Offset = "0x8A2150", VA = "0x8A2150")]
		private bool TrySetLookAtReferences(Vector3 referencePosition, float yAdjustment)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x8A27BC", Offset = "0x8A27BC", VA = "0x8A27BC")]
		private void RecenterCamera(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x8A23C4", Offset = "0x8A23C4", VA = "0x8A23C4")]
		private void RecenterCameraToGrid(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x8A2994", Offset = "0x8A2994", VA = "0x8A2994")]
		private void MoveCameraToRecenterLocation(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x8A1614", Offset = "0x8A1614", VA = "0x8A1614")]
		private void ResetCameraRig()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x8A2DD8", Offset = "0x8A2DD8", VA = "0x8A2DD8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F13FC", Offset = "0x6F13FC")]
		private void AddEyeCenterRotation(Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x8A2DDC", Offset = "0x8A2DDC", VA = "0x8A2DDC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F1434", Offset = "0x6F1434")]
		private void AddEyeCenterOffset(Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x8A2DE0", Offset = "0x8A2DE0", VA = "0x8A2DE0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F146C", Offset = "0x6F146C")]
		private void AddRecenterOffset(Vector3 targetPosition, Quaternion rotationOffset)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x8A205C", Offset = "0x8A205C", VA = "0x8A205C")]
		private float GetHeightAdjusment(CharacterOrientationState orientationState)
		{
			return default(float);
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x8A1DF0", Offset = "0x8A1DF0", VA = "0x8A1DF0")]
		private Vector3 GetClosestPositionOnGrid(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x8A2C54", Offset = "0x8A2C54", VA = "0x8A2C54")]
		private Quaternion GetClosestRotationOnGrid(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x8A2DE4", Offset = "0x8A2DE4", VA = "0x8A2DE4")]
		private void OnBiomeActivated(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x8A2E18", Offset = "0x8A2E18", VA = "0x8A2E18")]
		private void OnBiomeDeactivated(RoomEvents.BiomeDeactivatedEvent eventData)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x8A2E1C", Offset = "0x8A2E1C", VA = "0x8A2E1C")]
		public PlayerCamera()
		{
		}
	}
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1BB4", Offset = "0x6E1BB4")]
	public class PlayerControl : MonoBehaviour
	{
		[Token(Token = "0x20003C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BCC", Offset = "0x6E2BCC")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControl <>4__this;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x40012D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x40012D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public CharacterType characterType;

			[Token(Token = "0x40012D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onFadeComplete;

			[Token(Token = "0x6001809")]
			[Address(RVA = "0x8A41E4", Offset = "0x8A41E4", VA = "0x8A41E4")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x600180A")]
			[Address(RVA = "0x8A5E74", Offset = "0x8A5E74", VA = "0x8A5E74")]
			internal void <UpdatePlayerOrientation>b__0()
			{
			}
		}

		[Token(Token = "0x20003C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BDC", Offset = "0x6E2BDC")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x40012D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControl <>4__this;

			[Token(Token = "0x40012D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFadeComplete;

			[Token(Token = "0x600180B")]
			[Address(RVA = "0x8A42C4", Offset = "0x8A42C4", VA = "0x8A42C4")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x600180C")]
			[Address(RVA = "0x8A5F30", Offset = "0x8A5F30", VA = "0x8A5F30")]
			internal void <ResetPlayerOrientation>b__0()
			{
			}
		}

		[Token(Token = "0x4000853")]
		private const float RootHapticFeedbackDistanceSqr = 0.0225f;

		[Token(Token = "0x4000854")]
		private const float PitRadiusSquared = 64f;

		[Token(Token = "0x4000855")]
		private const float InsideOutThreshold = 0.15f;

		[Token(Token = "0x4000856")]
		private const float NegativeRotationThreshold = 0.1f;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerCamera m_playerCamera;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FadeHandler m_fadeHandler;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabber[] m_grabbers;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerPhysicalInputObject[] m_playerObjects;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HapticClip m_rootHapticClip;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IInputListener m_inputTracker;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IList<Grabber> m_rootHandles;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_lastHapticPosition;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_hasInitialized;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_leftToRightTrackerDirection;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_originAtPlayerHeight;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_cameraEventToken;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E71FC", Offset = "0x6E71FC")]
		private PlayerInput <PlayerInput>k__BackingField;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E720C", Offset = "0x6E720C")]
		private PlayerInputState <InputState>k__BackingField;

		[Token(Token = "0x170000AC")]
		public PlayerCamera Camera
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0x8A2F2C", Offset = "0x8A2F2C", VA = "0x8A2F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0x89810C", Offset = "0x89810C", VA = "0x89810C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public PlayerInput PlayerInput
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0x8A2F34", Offset = "0x8A2F34", VA = "0x8A2F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F14A4", Offset = "0x6F14A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0x8A2F3C", Offset = "0x8A2F3C", VA = "0x8A2F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F14B4", Offset = "0x6F14B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public FadeHandler FadeHandler
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x8A2F44", Offset = "0x8A2F44", VA = "0x8A2F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public Grabber LeftGrabber
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x8A2F4C", Offset = "0x8A2F4C", VA = "0x8A2F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		public Grabber RightGrabber
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x8A2F90", Offset = "0x8A2F90", VA = "0x8A2F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		public PlayerInputState InputState
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x8A2FD8", Offset = "0x8A2FD8", VA = "0x8A2FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F14C4", Offset = "0x6F14C4")]
			get
			{
				return default(PlayerInputState);
			}
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x8A2FE0", Offset = "0x8A2FE0", VA = "0x8A2FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F14D4", Offset = "0x6F14D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x8A2FE8", Offset = "0x8A2FE8", VA = "0x8A2FE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x8A3094", Offset = "0x8A3094", VA = "0x8A3094")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x8A3108", Offset = "0x8A3108", VA = "0x8A3108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x8A3184", Offset = "0x8A3184", VA = "0x8A3184")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x8A3A94", Offset = "0x8A3A94", VA = "0x8A3A94")]
		private void OnRecenterCameraEvent(CameraEvents.RecenterCameraEvent eventData)
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x8A3A98", Offset = "0x8A3A98", VA = "0x8A3A98")]
		private bool IsInsideOut()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x8A3CF0", Offset = "0x8A3CF0", VA = "0x8A3CF0")]
		public void Initialize(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x8A4004", Offset = "0x8A4004", VA = "0x8A4004")]
		public void SetInputState(PlayerInputState newState)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x8A3F00", Offset = "0x8A3F00", VA = "0x8A3F00")]
		public void SetHandsActive(bool active)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x8A400C", Offset = "0x8A400C", VA = "0x8A400C")]
		public void ForceDropGrabbables()
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x8A34C4", Offset = "0x8A34C4", VA = "0x8A34C4")]
		public void ForceDropRoots()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x8A4090", Offset = "0x8A4090", VA = "0x8A4090")]
		public void UpdatePlayerOrientation(Vector3 position, Quaternion rotation, CharacterType characterType, Action onFadeComplete)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x8A41EC", Offset = "0x8A41EC", VA = "0x8A41EC")]
		public void ResetPlayerOrientation([Optional] Action onFadeComplete)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x8A42CC", Offset = "0x8A42CC", VA = "0x8A42CC")]
		public Transform GetClosestTransform(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x8A44E0", Offset = "0x8A44E0", VA = "0x8A44E0")]
		public void AddRootHandle(Grabber rootGrabber)
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x8A4634", Offset = "0x8A4634", VA = "0x8A4634")]
		public void RemoveRootHandle(Grabber rootGrabber)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x8A3634", Offset = "0x8A3634", VA = "0x8A3634")]
		private void RootHandleMovementHandler()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x8A4D30", Offset = "0x8A4D30", VA = "0x8A4D30")]
		private bool CanRotateToDirection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x8A4788", Offset = "0x8A4788", VA = "0x8A4788")]
		private void InverseMove(Grabber grabber)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x8A58A4", Offset = "0x8A58A4", VA = "0x8A58A4")]
		private void InverseRotation(Grabber grabber)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x8A4904", Offset = "0x8A4904", VA = "0x8A4904")]
		private void DualInverseMove(IList<Grabber> grabbers)
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x8A4FE8", Offset = "0x8A4FE8", VA = "0x8A4FE8")]
		private void DualInverseRotate(IList<Grabber> grabbers)
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x8A5624", Offset = "0x8A5624", VA = "0x8A5624")]
		private void UpdateHaptic()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x8A5AE8", Offset = "0x8A5AE8", VA = "0x8A5AE8")]
		private void UpdateOrientation(Vector3 position, Quaternion rotation, CharacterType characterType)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x8A5CD8", Offset = "0x8A5CD8", VA = "0x8A5CD8")]
		private void RecenterOrientation()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x8A5C48", Offset = "0x8A5C48", VA = "0x8A5C48")]
		private void SetHandSkins(CharacterType characterType)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x8A5DD0", Offset = "0x8A5DD0", VA = "0x8A5DD0")]
		public PlayerControl()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class PlayerGamepad : PlayerPhysicalInputObject
	{
		[Serializable]
		[Token(Token = "0x20003C3")]
		private class GrabData
		{
			[Token(Token = "0x40012D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Hand;

			[Token(Token = "0x40012D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Grabber Grabber;

			[Token(Token = "0x40012D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerType Trigger;

			[NonSerialized]
			[Token(Token = "0x40012D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool IsGrabbing;

			[Token(Token = "0x600180D")]
			[Address(RVA = "0x8A68A8", Offset = "0x8A68A8", VA = "0x8A68A8")]
			public GrabData()
			{
			}
		}

		[Token(Token = "0x20003C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BEC", Offset = "0x6E2BEC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40012DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GrabData grab;

			[Token(Token = "0x40012DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerGamepad <>4__this;

			[Token(Token = "0x600180E")]
			[Address(RVA = "0x8A61B0", Offset = "0x8A61B0", VA = "0x8A61B0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0x8A67B8", Offset = "0x8A67B8", VA = "0x8A67B8")]
			internal void <Awake>b__0()
			{
			}

			[Token(Token = "0x6001810")]
			[Address(RVA = "0x8A6830", Offset = "0x8A6830", VA = "0x8A6830")]
			internal void <Awake>b__1()
			{
			}
		}

		[Token(Token = "0x4000865")]
		private const float BabyHandMovementTime = 0.3f;

		[Token(Token = "0x4000866")]
		private const float GrabThreshold = 0.85f;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabData[] m_grabDatas;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_gamePad;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E723C", Offset = "0x6E723C")]
		[SerializeField]
		private GameObject m_babyHand;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_babyHandMenuOffset;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolVariable m_menuOpen;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_babyHandTween;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isGrabbing;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_babyHandOffset;

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x8A5F7C", Offset = "0x8A5F7C", VA = "0x8A5F7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x8A61B8", Offset = "0x8A61B8", VA = "0x8A61B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x8A6248", Offset = "0x8A6248", VA = "0x8A6248")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x8A64C8", Offset = "0x8A64C8", VA = "0x8A64C8", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x8A6504", Offset = "0x8A6504", VA = "0x8A6504")]
		private void OnMenuToggled()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x8A662C", Offset = "0x8A662C", VA = "0x8A662C")]
		public PlayerGamepad()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x8A66A0", Offset = "0x8A66A0", VA = "0x8A66A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F14E4", Offset = "0x6F14E4")]
		private void <OnMenuToggled>b__15_0()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class PlayerHand : PlayerPhysicalInputObject
	{
		[Token(Token = "0x400086F")]
		private const float GrabThreshold = 0.75f;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabber m_grabber;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E72B8", Offset = "0x6E72B8")]
		[SerializeField]
		private TriggerType m_pointTrigger;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TriggerType m_grabTrigger;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7314", Offset = "0x6E7314")]
		[SerializeField]
		private SkinnedMeshRenderer m_renderer;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_defaultMaterial;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material[] m_handSkins;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isFlexingGrab;

		[Token(Token = "0x170000B3")]
		public Grabber Grabber
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x8A68B0", Offset = "0x8A68B0", VA = "0x8A68B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x8A68B8", Offset = "0x8A68B8", VA = "0x8A68B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x8A68C8", Offset = "0x8A68C8", VA = "0x8A68C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x8A6A18", Offset = "0x8A6A18", VA = "0x8A6A18", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x8A6A54", Offset = "0x8A6A54", VA = "0x8A6A54", Slot = "4")]
		public override void SetSkin(CharacterType characterType)
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x8A6AFC", Offset = "0x8A6AFC", VA = "0x8A6AFC")]
		public PlayerHand()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class PlayerHandAnimator : MonoBehaviour
	{
		[Token(Token = "0x4000877")]
		private const float InputRateChange = 20f;

		[Token(Token = "0x4000878")]
		private const string AnimLayerPoint = "Point Layer";

		[Token(Token = "0x4000879")]
		private const string AnimLayerThumb = "Thumb Layer";

		[Token(Token = "0x400087A")]
		private const string AnimParamFlex = "Flex";

		[Token(Token = "0x400087B")]
		private const string AnimParamPinch = "Pinch";

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_animParamFlexHash;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int m_animParamPinchHash;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerPhysicalInputObject m_playerHand;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Cortopia.Scripts.Platform.Input.TouchType m_pointTouchType;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Cortopia.Scripts.Platform.Input.TouchType m_faceButtonTouchType;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_pointBlend;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isGrabbing;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_isPointing;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x8A6B64", Offset = "0x8A6B64", VA = "0x8A6B64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x8A6C34", Offset = "0x8A6C34", VA = "0x8A6C34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x8A6F04", Offset = "0x8A6F04", VA = "0x8A6F04")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x8A6F40", Offset = "0x8A6F40", VA = "0x8A6F40")]
		public void BeginGrab()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x8A700C", Offset = "0x8A700C", VA = "0x8A700C")]
		public void EndGrab()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x8A6C94", Offset = "0x8A6C94", VA = "0x8A6C94")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x8A6D64", Offset = "0x8A6D64", VA = "0x8A6D64")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x8A6E04", Offset = "0x8A6E04", VA = "0x8A6E04")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x8A7014", Offset = "0x8A7014", VA = "0x8A7014")]
		public PlayerHandAnimator()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class PlayerInput : MonoBehaviour, IInputListener
	{
		[Token(Token = "0x4000889")]
		private const float StickDeadAxisThreshold = 0.55f;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_resetAxisX;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_resetAxisY;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerCamera m_playerCamera;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 m_axis;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IPlatformInput m_platformInput;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_onInputDeviceChangedEventToken;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E73C0", Offset = "0x6E73C0")]
		private bool <HasRotationChange>k__BackingField;

		[Token(Token = "0x170000B4")]
		public bool HasRotationChange
		{
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x8A708C", Offset = "0x8A708C", VA = "0x8A708C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F14F4", Offset = "0x6F14F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x8A7094", Offset = "0x8A7094", VA = "0x8A7094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1504", Offset = "0x6F1504")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x8A70A0", Offset = "0x8A70A0", VA = "0x8A70A0", Slot = "4")]
		public void Initialize(PlayerCamera playerCamera)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x8A7160", Offset = "0x8A7160", VA = "0x8A7160", Slot = "8")]
		public void ClearRotationChange()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x8A7168", Offset = "0x8A7168", VA = "0x8A7168", Slot = "5")]
		public void TrackPlayerRotate(bool rotateAroundWorld)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x8A7688", Offset = "0x8A7688", VA = "0x8A7688", Slot = "6")]
		public void TrackPlayerMove()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x8A731C", Offset = "0x8A731C", VA = "0x8A731C")]
		private Vector2 GetPlayerMoveAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x8A7798", Offset = "0x8A7798", VA = "0x8A7798")]
		public PlayerInput()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public enum PlayerInputState
	{
		[Token(Token = "0x4000892")]
		MoveAndRotate,
		[Token(Token = "0x4000893")]
		Rotate
	}
	[Token(Token = "0x200016A")]
	public abstract class PlayerPhysicalInputObject : MonoBehaviour
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E73D0", Offset = "0x6E73D0")]
		private float <GrabTriggerValue>k__BackingField;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E73E0", Offset = "0x6E73E0")]
		private float <PointTriggerValue>k__BackingField;

		[Token(Token = "0x170000B5")]
		public float GrabTriggerValue
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x8A6A08", Offset = "0x8A6A08", VA = "0x8A6A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1514", Offset = "0x6F1514")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x8A64C0", Offset = "0x8A64C0", VA = "0x8A64C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1524", Offset = "0x6F1524")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000B6")]
		public float PointTriggerValue
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x8A6A10", Offset = "0x8A6A10", VA = "0x8A6A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1534", Offset = "0x6F1534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x8A64B8", Offset = "0x8A64B8", VA = "0x8A64B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1544", Offset = "0x6F1544")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x8A77A0", Offset = "0x8A77A0", VA = "0x8A77A0", Slot = "4")]
		public virtual void SetSkin(CharacterType characterType)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x8A77A4", Offset = "0x8A77A4", VA = "0x8A77A4", Slot = "5")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x8A6698", Offset = "0x8A6698", VA = "0x8A6698")]
		protected PlayerPhysicalInputObject()
		{
		}
	}
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1C18", Offset = "0x6E1C18")]
	public class PlayerPointer : MonoBehaviour, IPlayerPointer
	{
		[Serializable]
		[Token(Token = "0x20003C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2BFC", Offset = "0x6E2BFC")]
		private sealed class <>c
		{
			[Token(Token = "0x40012DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PointerInteractable, Action<PlayerPointer>> <>9__14_0;

			[Token(Token = "0x40012DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PointerInteractable, Action<PlayerPointer>> <>9__15_0;

			[Token(Token = "0x6001812")]
			[Address(RVA = "0x8A80E0", Offset = "0x8A80E0", VA = "0x8A80E0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0x8A80E8", Offset = "0x8A80E8", VA = "0x8A80E8")]
			internal Action<PlayerPointer> <OnTriggerEnter>b__14_0(PointerInteractable pointer)
			{
				return null;
			}

			[Token(Token = "0x6001814")]
			[Address(RVA = "0x8A816C", Offset = "0x8A816C", VA = "0x8A816C")]
			internal Action<PlayerPointer> <OnTriggerExit>b__15_0(PointerInteractable pointer)
			{
				return null;
			}
		}

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PointerType m_pointerIndex;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HapticClip m_pointInteractionHapticClip;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_colliderOffset;

		[Token(Token = "0x170000B7")]
		public int PointerIndex
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x8A77A8", Offset = "0x8A77A8", VA = "0x8A77A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000B8")]
		public PointerType PointerType
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x8A77C0", Offset = "0x8A77C0", VA = "0x8A77C0", Slot = "4")]
			get
			{
				return default(PointerType);
			}
		}

		[Token(Token = "0x170000B9")]
		public Vector3 Position
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x8A77C8", Offset = "0x8A77C8", VA = "0x8A77C8", Slot = "5")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<PlayerPointer> OnPointerDisable
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0x8A7824", Offset = "0x8A7824", VA = "0x8A7824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1554", Offset = "0x6F1554")]
			add
			{
			}
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0x8A7910", Offset = "0x8A7910", VA = "0x8A7910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1564", Offset = "0x6F1564")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x8A79FC", Offset = "0x8A79FC", VA = "0x8A79FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x8A7A60", Offset = "0x8A7A60", VA = "0x8A7A60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x8A7AD4", Offset = "0x8A7AD4", VA = "0x8A7AD4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x8A7E48", Offset = "0x8A7E48", VA = "0x8A7E48")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x8A7CF4", Offset = "0x8A7CF4", VA = "0x8A7CF4")]
		private void TryInteract(Collider collider, PointerInteractable.PointerEnterType enterType, Func<PointerInteractable, Action<PlayerPointer>> getInteractionMethod)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x8A7F50", Offset = "0x8A7F50", VA = "0x8A7F50")]
		private void PlayHaptics(PointerInteractable pointerInteractable)
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x8A8074", Offset = "0x8A8074", VA = "0x8A8074")]
		public PlayerPointer()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class PlayerStateSetter : MonoBehaviour
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerInputState m_inputState;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x8A81F0", Offset = "0x8A81F0", VA = "0x8A81F0")]
		public void SetInputState()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x8A826C", Offset = "0x8A826C", VA = "0x8A826C")]
		public PlayerStateSetter()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public enum PointerType
	{
		[Token(Token = "0x400089C")]
		LeftHand,
		[Token(Token = "0x400089D")]
		RightHand,
		[Token(Token = "0x400089E")]
		Gamepad,
		[Token(Token = "0x400089F")]
		Mouse
	}
	[Token(Token = "0x200016E")]
	public struct RecenterData
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7430", Offset = "0x6E7430")]
		private bool <IsPending>k__BackingField;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7440", Offset = "0x6E7440")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7450", Offset = "0x6E7450")]
		private Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x170000BA")]
		public bool IsPending
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x764664", Offset = "0x764664", VA = "0x764664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1574", Offset = "0x6F1574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x76466C", Offset = "0x76466C", VA = "0x76466C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1584", Offset = "0x6F1584")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public Vector3 Position
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x764678", Offset = "0x764678", VA = "0x764678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1594", Offset = "0x6F1594")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x764684", Offset = "0x764684", VA = "0x764684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F15A4", Offset = "0x6F15A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x764690", Offset = "0x764690", VA = "0x764690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F15B4", Offset = "0x6F15B4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x76469C", Offset = "0x76469C", VA = "0x76469C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F15C4", Offset = "0x6F15C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x7646A8", Offset = "0x7646A8", VA = "0x7646A8")]
		public void SetPendingRecenterData(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x7646C4", Offset = "0x7646C4", VA = "0x7646C4")]
		public void ResetPendingRecenterData()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform
{
	[Token(Token = "0x200016F")]
	public class DefaultPlatform : VRPlatform
	{
		[Token(Token = "0x170000BD")]
		public override bool IsInitialized
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x8992C0", Offset = "0x8992C0", VA = "0x8992C0", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x8992C8", Offset = "0x8992C8", VA = "0x8992C8", Slot = "18")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x899328", Offset = "0x899328", VA = "0x899328")]
		public DefaultPlatform()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public static class PlatformExtensions
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x89C6DC", Offset = "0x89C6DC", VA = "0x89C6DC")]
		public static Coroutine StartCoroutine(this IPlatform platform, IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x89C7B8", Offset = "0x89C7B8", VA = "0x89C7B8")]
		public static void StopAllCoroutines(this IPlatform platform)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x89C884", Offset = "0x89C884", VA = "0x89C884")]
		public static IPromise WaitFor(this IPlatform platform, Func<bool> condition)
		{
			return null;
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x89C97C", Offset = "0x89C97C", VA = "0x89C97C")]
		public static IPromise Wait(this IPlatform platform, float delay)
		{
			return null;
		}
	}
	[Token(Token = "0x2000171")]
	public interface IPlatform : IPlatformService
	{
		[Token(Token = "0x170000BE")]
		MonoBehaviour Behaviour
		{
			[Token(Token = "0x6000B27")]
			get;
		}

		[Token(Token = "0x170000BF")]
		bool IsInitialized
		{
			[Token(Token = "0x6000B28")]
			get;
		}

		[Token(Token = "0x1400002D")]
		event Action OnUpdate;

		[Token(Token = "0x1400002E")]
		event Action OnLateUpdate;

		[Token(Token = "0x1400002F")]
		event Action OnFixedUpdate;
	}
	[Token(Token = "0x2000172")]
	public interface IPlatformService
	{
		[Token(Token = "0x6000B29")]
		IPromise Initialize();

		[Token(Token = "0x6000B2A")]
		void Shutdown();
	}
	[Token(Token = "0x2000173")]
	public class PicoPlatform : VRPlatform
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Promise m_initializePromise;

		[Token(Token = "0x170000C0")]
		public override bool IsInitialized
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0x89C3DC", Offset = "0x89C3DC", VA = "0x89C3DC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x89C404", Offset = "0x89C404", VA = "0x89C404")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x89C408", Offset = "0x89C408", VA = "0x89C408")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x89C40C", Offset = "0x89C40C", VA = "0x89C40C", Slot = "18")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x89C470", Offset = "0x89C470", VA = "0x89C470")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x89C4D4", Offset = "0x89C4D4", VA = "0x89C4D4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x89C538", Offset = "0x89C538", VA = "0x89C538")]
		private void OnHMDAcquired()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x89C59C", Offset = "0x89C59C", VA = "0x89C59C")]
		private void OnHMDLost()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x89C600", Offset = "0x89C600", VA = "0x89C600")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x89C664", Offset = "0x89C664", VA = "0x89C664")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x89C6C8", Offset = "0x89C6C8", VA = "0x89C6C8", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x89C6CC", Offset = "0x89C6CC", VA = "0x89C6CC")]
		public PicoPlatform()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class PlatformErrorCode
	{
		[Token(Token = "0x40008A4")]
		public const int UserNotAuthorized = 1000;

		[Token(Token = "0x40008A5")]
		public const int LoginFailed = 1001;

		[Token(Token = "0x40008A6")]
		public const int PlatformInitFailed = 1002;

		[Token(Token = "0x40008A7")]
		public const string UserNotAuthorizedTerm = "error/oauth_failed";

		[Token(Token = "0x40008A8")]
		public const string LoginFailedTerm = "error/login_failed";

		[Token(Token = "0x40008A9")]
		public const string PlatformInitFailedTerm = "error/platform_init_failed";

		[Token(Token = "0x40008AA")]
		public const string PSVRControllerDisconnected = "error/controller_disconnected_psvr";

		[Token(Token = "0x40008AB")]
		public const string GenericControllerDisconnected = "error/controller_disconnected_generic";

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x89C6D4", Offset = "0x89C6D4", VA = "0x89C6D4")]
		public PlatformErrorCode()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public static class PlatformInitialize
	{
		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x89CA74", Offset = "0x89CA74", VA = "0x89CA74")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6F1674", Offset = "0x6F1674")]
		public static void OnBeforeSceneLoad()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x89CB30", Offset = "0x89CB30", VA = "0x89CB30")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6F1688", Offset = "0x6F1688")]
		public static void OnAfterSceneLoad()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x89CB34", Offset = "0x89CB34", VA = "0x89CB34")]
		public static void InitializePlatform()
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x89D11C", Offset = "0x89D11C", VA = "0x89D11C")]
		private static IPromise<Queue<IPlatformService>> CreateServices()
		{
			return null;
		}

		[Token(Token = "0x6000B3C")]
		private static IPlatformService CreateService<TService>() where TService : IPlatformService
		{
			return null;
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x89D34C", Offset = "0x89D34C", VA = "0x89D34C")]
		private static IPromise InitializeServices(Queue<IPlatformService> services)
		{
			return null;
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x89D5CC", Offset = "0x89D5CC", VA = "0x89D5CC")]
		private static void OnPlatformFailedToInitialize(Exception e)
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x89D754", Offset = "0x89D754", VA = "0x89D754")]
		private static StartupRig SpawnStartupRig()
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	public static class PlatformServiceLocator
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, IPlatformService> sm_services;

		[Token(Token = "0x6000B40")]
		public static void Register<T>(T platformService) where T : class, IPlatformService
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x89D804", Offset = "0x89D804", VA = "0x89D804")]
		private static List<Type> GetAssignableTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x89D908", Offset = "0x89D908", VA = "0x89D908")]
		private static Type GetAssignableType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000B43")]
		public static T Resolve<T>() where T : class, IPlatformService
		{
			return null;
		}
	}
	[Token(Token = "0x2000177")]
	public enum PlatformType
	{
		[Token(Token = "0x40008AE")]
		OculusRift,
		[Token(Token = "0x40008AF")]
		OculusQuest,
		[Token(Token = "0x40008B0")]
		PSVR,
		[Token(Token = "0x40008B1")]
		Steam,
		[Token(Token = "0x40008B2")]
		Viveport,
		[Token(Token = "0x40008B3")]
		Pico
	}
	[Token(Token = "0x2000178")]
	public abstract class VRPlatform : MonoBehaviour, IPlatform, IPlatformService
	{
		[Token(Token = "0x170000C1")]
		public abstract bool IsInitialized
		{
			[Token(Token = "0x6000B4F")]
			get;
		}

		[Token(Token = "0x170000C2")]
		public MonoBehaviour Behaviour
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0x8A0580", Offset = "0x8A0580", VA = "0x8A0580", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000030")]
		public event Action OnUpdate
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x89FFBC", Offset = "0x89FFBC", VA = "0x89FFBC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F169C", Offset = "0x6F169C")]
			add
			{
			}
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x8A00A8", Offset = "0x8A00A8", VA = "0x8A00A8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F16AC", Offset = "0x6F16AC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action OnFixedUpdate
		{
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x8A0194", Offset = "0x8A0194", VA = "0x8A0194", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F16BC", Offset = "0x6F16BC")]
			add
			{
			}
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x8A0280", Offset = "0x8A0280", VA = "0x8A0280", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F16CC", Offset = "0x6F16CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnLateUpdate
		{
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x8A036C", Offset = "0x8A036C", VA = "0x8A036C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F16DC", Offset = "0x6F16DC")]
			add
			{
			}
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x8A0458", Offset = "0x8A0458", VA = "0x8A0458", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F16EC", Offset = "0x6F16EC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B4B")]
		public static TService GetService<TService>() where TService : class, IPlatformService
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x8A0544", Offset = "0x8A0544", VA = "0x8A0544", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x8A0558", Offset = "0x8A0558", VA = "0x8A0558", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x8A056C", Offset = "0x8A056C", VA = "0x8A056C", Slot = "16")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000B51")]
		public abstract IPromise Initialize();

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x8A0584", Offset = "0x8A0584", VA = "0x8A0584", Slot = "19")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x899330", Offset = "0x899330", VA = "0x899330")]
		protected VRPlatform()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.User
{
	[Token(Token = "0x2000179")]
	public class DefaultUser : PlatformUser
	{
		[Token(Token = "0x170000C3")]
		public override UserIdType UserIdType
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0x89F9AC", Offset = "0x89F9AC", VA = "0x89F9AC", Slot = "14")]
			get
			{
				return default(UserIdType);
			}
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x89F9B4", Offset = "0x89F9B4", VA = "0x89F9B4", Slot = "15")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x89A140", Offset = "0x89A140", VA = "0x89A140")]
		public DefaultUser()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public interface IPlatformUser : IPlatformService
	{
		[Token(Token = "0x170000C4")]
		string UserName
		{
			[Token(Token = "0x6000B59")]
			get;
		}

		[Token(Token = "0x170000C5")]
		UserIdType UserIdType
		{
			[Token(Token = "0x6000B5A")]
			get;
		}

		[Token(Token = "0x170000C6")]
		int UserIdInt
		{
			[Token(Token = "0x6000B5B")]
			get;
		}

		[Token(Token = "0x170000C7")]
		string UserIdString
		{
			[Token(Token = "0x6000B5C")]
			get;
		}

		[Token(Token = "0x170000C8")]
		ulong UserIdUlong
		{
			[Token(Token = "0x6000B5D")]
			get;
		}

		[Token(Token = "0x14000033")]
		event Action<IPlatformUser> OnUserChanged;

		[Token(Token = "0x6000B5E")]
		string GetUserIdString();
	}
	[Token(Token = "0x200017B")]
	public class PicoUser : PlatformUser
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int MaxLoggedInUsers;

		[Token(Token = "0x170000C9")]
		public override UserIdType UserIdType
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0x89FA68", Offset = "0x89FA68", VA = "0x89FA68", Slot = "14")]
			get
			{
				return default(UserIdType);
			}
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x89FA70", Offset = "0x89FA70", VA = "0x89FA70", Slot = "15")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x89FBB8", Offset = "0x89FBB8", VA = "0x89FBB8")]
		private void EstablishCurrentUser()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x89FBBC", Offset = "0x89FBBC", VA = "0x89FBBC")]
		private void HandleUserChange()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x89FBC0", Offset = "0x89FBC0", VA = "0x89FBC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x89FBC4", Offset = "0x89FBC4", VA = "0x89FBC4")]
		public PicoUser()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public abstract class PlatformUser : IPlatformUser, IPlatformService
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E74A0", Offset = "0x6E74A0")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E74B0", Offset = "0x6E74B0")]
		private int <UserIdInt>k__BackingField;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E74C0", Offset = "0x6E74C0")]
		private string <UserIdString>k__BackingField;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E74D0", Offset = "0x6E74D0")]
		private ulong <UserIdUlong>k__BackingField;

		[Token(Token = "0x170000CA")]
		public string UserName
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x89FDF8", Offset = "0x89FDF8", VA = "0x89FDF8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F173C", Offset = "0x6F173C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0x89FA40", Offset = "0x89FA40", VA = "0x89FA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F174C", Offset = "0x6F174C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public abstract UserIdType UserIdType
		{
			[Token(Token = "0x6000B6A")]
			get;
		}

		[Token(Token = "0x170000CC")]
		public int UserIdInt
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0x89FE00", Offset = "0x89FE00", VA = "0x89FE00", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F175C", Offset = "0x6F175C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x89FA48", Offset = "0x89FA48", VA = "0x89FA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F176C", Offset = "0x6F176C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public string UserIdString
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x89FE08", Offset = "0x89FE08", VA = "0x89FE08", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F177C", Offset = "0x6F177C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x89FA50", Offset = "0x89FA50", VA = "0x89FA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F178C", Offset = "0x6F178C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public ulong UserIdUlong
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x89FE10", Offset = "0x89FE10", VA = "0x89FE10", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F179C", Offset = "0x6F179C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0x89FA58", Offset = "0x89FA58", VA = "0x89FA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F17AC", Offset = "0x6F17AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<IPlatformUser> OnUserChanged
		{
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0x89FC20", Offset = "0x89FC20", VA = "0x89FC20", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F171C", Offset = "0x6F171C")]
			add
			{
			}
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0x89FD0C", Offset = "0x89FD0C", VA = "0x89FD0C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F172C", Offset = "0x6F172C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B71")]
		public abstract IPromise Initialize();

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x89FE18", Offset = "0x89FE18", VA = "0x89FE18", Slot = "16")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x89FE1C", Offset = "0x89FE1C", VA = "0x89FE1C")]
		protected void RaiseOnUserChanged()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x89FE80", Offset = "0x89FE80", VA = "0x89FE80", Slot = "11")]
		public string GetUserIdString()
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x89FA60", Offset = "0x89FA60", VA = "0x89FA60")]
		protected PlatformUser()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public enum UserIdType
	{
		[Token(Token = "0x40008BE")]
		Int,
		[Token(Token = "0x40008BF")]
		String,
		[Token(Token = "0x40008C0")]
		Ulong
	}
}
namespace Cortopia.Scripts.Platform.Storage
{
	[Token(Token = "0x200017E")]
	public class DefaultStorage : IPlatformStorage, IPlatformService
	{
		[Token(Token = "0x20003C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C0C", Offset = "0x6E2C0C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40012DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string save;

			[Token(Token = "0x40012E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DefaultStorage <>4__this;

			[Token(Token = "0x40012E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int saveSlotIndex;

			[Token(Token = "0x40012E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise<string> promise;

			[Token(Token = "0x6001815")]
			[Address(RVA = "0x89F5F8", Offset = "0x89F5F8", VA = "0x89F5F8")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001816")]
			[Address(RVA = "0x89F808", Offset = "0x89F808", VA = "0x89F808")]
			internal string <LoadAsync>b__0()
			{
				return null;
			}

			[Token(Token = "0x6001817")]
			[Address(RVA = "0x89F858", Offset = "0x89F858", VA = "0x89F858")]
			internal void <LoadAsync>b__1(Task<string> t)
			{
			}
		}

		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C1C", Offset = "0x6E2C1C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x40012E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DefaultStorage <>4__this;

			[Token(Token = "0x40012E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int saveSlotIndex;

			[Token(Token = "0x40012E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise promise;

			[Token(Token = "0x6001818")]
			[Address(RVA = "0x89F800", Offset = "0x89F800", VA = "0x89F800")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001819")]
			[Address(RVA = "0x89F8C0", Offset = "0x89F8C0", VA = "0x89F8C0")]
			internal void <Save>b__0()
			{
			}

			[Token(Token = "0x600181A")]
			[Address(RVA = "0x89F924", Offset = "0x89F924", VA = "0x89F924")]
			internal void <Save>b__1(System.Threading.Tasks.Task t)
			{
			}
		}

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string[] m_dataStorage;

		[Token(Token = "0x170000CF")]
		protected virtual string DirectoryPath
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0x89F100", Offset = "0x89F100", VA = "0x89F100", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private string SavePath
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0x89F17C", Offset = "0x89F17C", VA = "0x89F17C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x89F1DC", Offset = "0x89F1DC", VA = "0x89F1DC", Slot = "12")]
		public virtual IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x89F274", Offset = "0x89F274", VA = "0x89F274", Slot = "10")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x89F278", Offset = "0x89F278", VA = "0x89F278", Slot = "7")]
		public IPromise Delete(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x89F398", Offset = "0x89F398", VA = "0x89F398", Slot = "8")]
		public bool HasSave(int saveSlotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x89F3B0", Offset = "0x89F3B0", VA = "0x89F3B0", Slot = "5")]
		public IPromise<string> Load(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x89F41C", Offset = "0x89F41C", VA = "0x89F41C", Slot = "6")]
		public IPromise<string> LoadAsync(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x89F600", Offset = "0x89F600", VA = "0x89F600", Slot = "4")]
		public IPromise Save(int saveSlotIndex, string save)
		{
			return null;
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x89F2FC", Offset = "0x89F2FC", VA = "0x89F2FC")]
		private string DesiredSavePath(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x89A034", Offset = "0x89A034", VA = "0x89A034")]
		public DefaultStorage()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public interface IPlatformStorage : IPlatformService
	{
		[Token(Token = "0x6000B81")]
		IPromise Save(int saveSlotIndex, string save);

		[Token(Token = "0x6000B82")]
		IPromise<string> Load(int saveSlotIndex);

		[Token(Token = "0x6000B83")]
		IPromise<string> LoadAsync(int saveSlotIndex);

		[Token(Token = "0x6000B84")]
		IPromise Delete(int saveSlotIndex);

		[Token(Token = "0x6000B85")]
		bool HasSave(int saveSlotIndex);
	}
	[Token(Token = "0x2000180")]
	public static class StoragePath
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Path;

		[Token(Token = "0x40008C3")]
		public const string FileName = "savegame.rabbit";
	}
}
namespace Cortopia.Scripts.Platform.SettingsStorage
{
	[Token(Token = "0x2000181")]
	public class DefaultSettingsStorage : IPlatformSettingsStorage, IEnumSettingsStorage<Enum>, IPlatformService
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_prefix;

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x89E898", Offset = "0x89E898", VA = "0x89E898", Slot = "24")]
		public virtual IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x89EABC", Offset = "0x89EABC", VA = "0x89EABC", Slot = "25")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x89EAC0", Offset = "0x89EAC0", VA = "0x89EAC0", Slot = "8")]
		public bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x89EB34", Offset = "0x89EB34", VA = "0x89EB34", Slot = "9")]
		public bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x89EBA0", Offset = "0x89EBA0", VA = "0x89EBA0", Slot = "12")]
		public int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x89EC14", Offset = "0x89EC14", VA = "0x89EC14", Slot = "13")]
		public int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x89EC80", Offset = "0x89EC80", VA = "0x89EC80", Slot = "10")]
		public string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x89ECF4", Offset = "0x89ECF4", VA = "0x89ECF4", Slot = "11")]
		public string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x89ED60", Offset = "0x89ED60", VA = "0x89ED60", Slot = "14")]
		public float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x89EDDC", Offset = "0x89EDDC", VA = "0x89EDDC", Slot = "15")]
		public float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000B91")]
		private TEnum Cortopia.Scripts.Platform.SettingsStorage.IEnumSettingsStorage<System.Enum>.GetEnum<TEnum>(string key) where TEnum : struct, Enum
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6000B92")]
		private TEnum Cortopia.Scripts.Platform.SettingsStorage.IEnumSettingsStorage<System.Enum>.GetEnum<TEnum>(string key, TEnum defaultValue) where TEnum : struct, Enum
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x89EE48", Offset = "0x89EE48", VA = "0x89EE48", Slot = "6")]
		public void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x89EEBC", Offset = "0x89EEBC", VA = "0x89EEBC", Slot = "4")]
		public void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x89EF30", Offset = "0x89EF30", VA = "0x89EF30", Slot = "5")]
		public void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x89EFA4", Offset = "0x89EFA4", VA = "0x89EFA4", Slot = "7")]
		public void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6000B97")]
		private void Cortopia.Scripts.Platform.SettingsStorage.IEnumSettingsStorage<System.Enum>.SetEnum<TEnum>(string key, TEnum value) where TEnum : struct, Enum
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x89F020", Offset = "0x89F020", VA = "0x89F020", Slot = "16")]
		public bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x89F08C", Offset = "0x89F08C", VA = "0x89F08C", Slot = "17")]
		public void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x89F0F8", Offset = "0x89F0F8", VA = "0x89F0F8", Slot = "18")]
		public void Save()
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x89E9F4", Offset = "0x89E9F4", VA = "0x89E9F4")]
		private void SetPrefix(IPlatformUser user)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x899F84", Offset = "0x899F84", VA = "0x899F84")]
		public DefaultSettingsStorage()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public interface IPlatformSettingsStorage : IEnumSettingsStorage<Enum>, IPlatformService
	{
		[Token(Token = "0x6000B9D")]
		void SetInt(string key, int value);

		[Token(Token = "0x6000B9E")]
		void SetString(string key, string value);

		[Token(Token = "0x6000B9F")]
		void SetBool(string key, bool value);

		[Token(Token = "0x6000BA0")]
		void SetFloat(string key, float value);

		[Token(Token = "0x6000BA1")]
		bool GetBool(string key, bool defaultValue);

		[Token(Token = "0x6000BA2")]
		bool GetBool(string key);

		[Token(Token = "0x6000BA3")]
		string GetString(string key, string defaultValue);

		[Token(Token = "0x6000BA4")]
		string GetString(string key);

		[Token(Token = "0x6000BA5")]
		int GetInt(string key, int defaultValue);

		[Token(Token = "0x6000BA6")]
		int GetInt(string key);

		[Token(Token = "0x6000BA7")]
		float GetFloat(string key, float defaultValue);

		[Token(Token = "0x6000BA8")]
		float GetFloat(string key);

		[Token(Token = "0x6000BA9")]
		bool HasKey(string key);

		[Token(Token = "0x6000BAA")]
		void DeleteKey(string key);

		[Token(Token = "0x6000BAB")]
		void Save();
	}
	[Token(Token = "0x2000183")]
	public interface IEnumSettingsStorage<TClass> where TClass : class
	{
		[Token(Token = "0x6000BAC")]
		void SetEnum<TEnum>(string key, TEnum value) where TEnum : struct, TClass;

		[Token(Token = "0x6000BAD")]
		TEnum GetEnum<TEnum>(string key) where TEnum : struct, TClass;

		[Token(Token = "0x6000BAE")]
		TEnum GetEnum<TEnum>(string key, TEnum defaultValue) where TEnum : struct, TClass;
	}
}
namespace Cortopia.Scripts.Platform.Rig
{
	[Token(Token = "0x2000184")]
	public class DefaultRig : IPlatformRig, IPlatformService
	{
		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E74E0", Offset = "0x6E74E0")]
		private PlayerControl <PlayerControl>k__BackingField;

		[Token(Token = "0x170000D1")]
		public PlayerControl PlayerControl
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0x89E610", Offset = "0x89E610", VA = "0x89E610", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F17BC", Offset = "0x6F17BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB0")]
			[Address(RVA = "0x89E618", Offset = "0x89E618", VA = "0x89E618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F17CC", Offset = "0x6F17CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x89E620", Offset = "0x89E620", VA = "0x89E620", Slot = "5")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x89E68C", Offset = "0x89E68C", VA = "0x89E68C")]
		private void LoadRigFromResources()
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x89E748", Offset = "0x89E748", VA = "0x89E748", Slot = "6")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x89E74C", Offset = "0x89E74C", VA = "0x89E74C")]
		public DefaultRig()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public interface IPlatformRig : IPlatformService
	{
		[Token(Token = "0x170000D2")]
		PlayerControl PlayerControl
		{
			[Token(Token = "0x6000BB5")]
			get;
		}
	}
	[Token(Token = "0x2000186")]
	public class PicoRig : IPlatformRig, IPlatformService
	{
		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E74F0", Offset = "0x6E74F0")]
		private PlayerControl <PlayerControl>k__BackingField;

		[Token(Token = "0x170000D3")]
		public PlayerControl PlayerControl
		{
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x89E754", Offset = "0x89E754", VA = "0x89E754", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F17DC", Offset = "0x6F17DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0x89E75C", Offset = "0x89E75C", VA = "0x89E75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F17EC", Offset = "0x6F17EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x89E764", Offset = "0x89E764", VA = "0x89E764", Slot = "5")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x89E7D0", Offset = "0x89E7D0", VA = "0x89E7D0")]
		private void LoadRigFromResources()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x89E88C", Offset = "0x89E88C", VA = "0x89E88C", Slot = "6")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x899834", Offset = "0x899834", VA = "0x899834")]
		public PicoRig()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class PlayStationDeviceTracker : MonoBehaviour
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x89E890", Offset = "0x89E890", VA = "0x89E890")]
		public PlayStationDeviceTracker()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.ResourceServices
{
	[Token(Token = "0x2000188")]
	public interface IPlatformResources : IPlatformService
	{
		[Token(Token = "0x170000D4")]
		TMP_SpriteAsset ControlSchemeSpriteAsset
		{
			[Token(Token = "0x6000BBD")]
			get;
		}

		[Token(Token = "0x170000D5")]
		Sprite[] ControlSchemeSprites
		{
			[Token(Token = "0x6000BBE")]
			get;
		}
	}
	[Token(Token = "0x2000189")]
	public abstract class OpenVRPlatformResources : PlatformResources
	{
		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly IReadOnlyDictionary<InputDeviceType, string> m_supportedInputPaths;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected EventToken m_onInputDeviceChangedEventToken;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0x89DAE0", Offset = "0x89DAE0", VA = "0x89DAE0", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x89DB54", Offset = "0x89DB54", VA = "0x89DB54")]
		protected void OnInputDeviceChanged(PlatformEvents.InputDeviceChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x89DFE0", Offset = "0x89DFE0", VA = "0x89DFE0")]
		protected OpenVRPlatformResources()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class PicoPlatformResources : PlatformResources
	{
		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x89E248", Offset = "0x89E248", VA = "0x89E248", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x899784", Offset = "0x899784", VA = "0x899784")]
		public PicoPlatformResources()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public abstract class PlatformResources : IPlatformResources, IPlatformService
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7500", Offset = "0x6E7500")]
		private TMP_SpriteAsset <ControlSchemeSpriteAsset>k__BackingField;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7510", Offset = "0x6E7510")]
		private readonly Sprite[] <ControlSchemeSprites>k__BackingField;

		[Token(Token = "0x170000D6")]
		public TMP_SpriteAsset ControlSchemeSpriteAsset
		{
			[Token(Token = "0x6000BC4")]
			[Address(RVA = "0x89E2C0", Offset = "0x89E2C0", VA = "0x89E2C0", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F17FC", Offset = "0x6F17FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0x89E2C8", Offset = "0x89E2C8", VA = "0x89E2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F180C", Offset = "0x6F180C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public Sprite[] ControlSchemeSprites
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0x89DFD8", Offset = "0x89DFD8", VA = "0x89DFD8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F181C", Offset = "0x6F181C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC7")]
		public abstract IPromise Initialize();

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x89E2D0", Offset = "0x89E2D0", VA = "0x89E2D0", Slot = "9")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x89DCBC", Offset = "0x89DCBC", VA = "0x89DCBC")]
		protected void SetControlSchemeSprites(string inputTypeSpriteAssetPath)
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x89E170", Offset = "0x89E170", VA = "0x89E170")]
		protected PlatformResources()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class PlaystationPlatformResources : PlatformResources
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x89E2D4", Offset = "0x89E2D4", VA = "0x89E2D4", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x89E34C", Offset = "0x89E34C", VA = "0x89E34C")]
		public PlaystationPlatformResources()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class SteamPlatformResources : OpenVRPlatformResources
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x89E350", Offset = "0x89E350", VA = "0x89E350", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x89E4AC", Offset = "0x89E4AC", VA = "0x89E4AC")]
		public SteamPlatformResources()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class ViveportPlatformResources : OpenVRPlatformResources
	{
		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x89E4B0", Offset = "0x89E4B0", VA = "0x89E4B0", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x89E60C", Offset = "0x89E60C", VA = "0x89E60C")]
		public ViveportPlatformResources()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Input
{
	[Token(Token = "0x200018F")]
	public enum ButtonType
	{
		[Token(Token = "0x40008CC")]
		Menu,
		[Token(Token = "0x40008CD")]
		Interact,
		[Token(Token = "0x40008CE")]
		Cancel,
		[Token(Token = "0x40008CF")]
		Recenter,
		[Token(Token = "0x40008D0")]
		CharacterSwap,
		[Token(Token = "0x40008D1")]
		MoveUp,
		[Token(Token = "0x40008D2")]
		MoveDown,
		[Token(Token = "0x40008D3")]
		MoveLeft,
		[Token(Token = "0x40008D4")]
		MoveRight
	}
	[Token(Token = "0x2000190")]
	public enum AxisType
	{
		[Token(Token = "0x40008D6")]
		Move,
		[Token(Token = "0x40008D7")]
		PlayerMove
	}
	[Token(Token = "0x2000191")]
	public enum TriggerType
	{
		[Token(Token = "0x40008D9")]
		PointLeft,
		[Token(Token = "0x40008DA")]
		PointRight,
		[Token(Token = "0x40008DB")]
		GrabLeft,
		[Token(Token = "0x40008DC")]
		GrabRight
	}
	[Token(Token = "0x2000192")]
	public enum TouchType
	{
		[Token(Token = "0x40008DE")]
		PointLeft,
		[Token(Token = "0x40008DF")]
		PointRight,
		[Token(Token = "0x40008E0")]
		GrabLeft,
		[Token(Token = "0x40008E1")]
		GrabRight,
		[Token(Token = "0x40008E2")]
		FaceButtonsLeft,
		[Token(Token = "0x40008E3")]
		FaceButtonsRight
	}
	[Token(Token = "0x2000193")]
	public interface IInputListener
	{
		[Token(Token = "0x170000D8")]
		bool HasRotationChange
		{
			[Token(Token = "0x6000BD4")]
			get;
		}

		[Token(Token = "0x6000BD1")]
		void Initialize(PlayerCamera playerCamera);

		[Token(Token = "0x6000BD2")]
		void TrackPlayerRotate(bool rotateAroundWorld);

		[Token(Token = "0x6000BD3")]
		void TrackPlayerMove();

		[Token(Token = "0x6000BD5")]
		void ClearRotationChange();
	}
	[Token(Token = "0x2000194")]
	public enum InputDeviceType
	{
		[Token(Token = "0x40008E5")]
		PlayStationMove,
		[Token(Token = "0x40008E6")]
		PlayStationGamepad,
		[Token(Token = "0x40008E7")]
		OculusQuest,
		[Token(Token = "0x40008E8")]
		OculusRift,
		[Token(Token = "0x40008E9")]
		Editor,
		[Token(Token = "0x40008EA")]
		Index,
		[Token(Token = "0x40008EB")]
		ViveController,
		[Token(Token = "0x40008EC")]
		Cosmos,
		[Token(Token = "0x40008ED")]
		WindowsMixedReality,
		[Token(Token = "0x40008EE")]
		Pico
	}
	[Token(Token = "0x2000195")]
	public interface IPlatformInput : IPlatformService
	{
		[Token(Token = "0x170000D9")]
		InputDeviceType InputDeviceType
		{
			[Token(Token = "0x6000BD6")]
			get;
		}

		[Token(Token = "0x170000DA")]
		IEnumerable<ButtonType> MappedButtons
		{
			[Token(Token = "0x6000BD7")]
			get;
		}

		[Token(Token = "0x170000DB")]
		bool UseStickAxisPlayerMovement
		{
			[Token(Token = "0x6000BD8")]
			get;
		}

		[Token(Token = "0x6000BD9")]
		bool Any();

		[Token(Token = "0x6000BDA")]
		Vector2 GetAxis(AxisType axis);

		[Token(Token = "0x6000BDB")]
		float GetTrigger(TriggerType trigger);

		[Token(Token = "0x6000BDC")]
		bool GetButtonDown(ButtonType button);

		[Token(Token = "0x6000BDD")]
		bool GetButton(ButtonType button);

		[Token(Token = "0x6000BDE")]
		bool GetButtonUp(ButtonType button);

		[Token(Token = "0x6000BDF")]
		bool GetTouch(TouchType touch);
	}
	[Token(Token = "0x2000196")]
	public class PicoNeoPlatformInput : PicoPlatformInput
	{
		[Token(Token = "0x170000DC")]
		public override InputDeviceType InputDeviceType
		{
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x89B978", Offset = "0x89B978", VA = "0x89B978", Slot = "16")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x899598", Offset = "0x899598", VA = "0x899598")]
		public PicoNeoPlatformInput()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public abstract class PicoPlatformInput : IPlatformInput, IPlatformService
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyDictionary<AxisType, Vector2> m_axisMappings;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IReadOnlyDictionary<ButtonType, Pvr_KeyCode> m_buttonMappings;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IReadOnlyDictionary<TriggerType, float> m_triggerMappings;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IReadOnlyDictionary<TouchType, bool> m_touchMappings;

		[Token(Token = "0x170000DD")]
		public abstract InputDeviceType InputDeviceType
		{
			[Token(Token = "0x6000BE2")]
			get;
		}

		[Token(Token = "0x170000DE")]
		public IEnumerable<ButtonType> MappedButtons
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x89BE24", Offset = "0x89BE24", VA = "0x89BE24", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		public bool UseStickAxisPlayerMovement
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x89BEDC", Offset = "0x89BEDC", VA = "0x89BEDC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x89BEE4", Offset = "0x89BEE4", VA = "0x89BEE4", Slot = "14")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x89BF44", Offset = "0x89BF44", VA = "0x89BF44", Slot = "7")]
		public bool Any()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x89C074", Offset = "0x89C074", VA = "0x89C074", Slot = "8")]
		public Vector2 GetAxis(AxisType axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x89C084", Offset = "0x89C084", VA = "0x89C084", Slot = "9")]
		public float GetTrigger(TriggerType trigger)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x89C144", Offset = "0x89C144", VA = "0x89C144", Slot = "10")]
		public bool GetButtonDown(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x89BFB8", Offset = "0x89BFB8", VA = "0x89BFB8", Slot = "11")]
		public bool GetButton(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x89C200", Offset = "0x89C200", VA = "0x89C200", Slot = "12")]
		public bool GetButtonUp(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x89C2BC", Offset = "0x89C2BC", VA = "0x89C2BC", Slot = "13")]
		public bool GetTouch(TouchType touch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x89C3D8", Offset = "0x89C3D8", VA = "0x89C3D8", Slot = "15")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x89B980", Offset = "0x89B980", VA = "0x89B980")]
		protected PicoPlatformInput()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Icons
{
	[Token(Token = "0x2000198")]
	public static class InputIconParams
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDictionary<string, InputIconType> sm_inputParamToIconType;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IDictionary<InputIconType, string> sm_inputIconParamNames;

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x89AC8C", Offset = "0x89AC8C", VA = "0x89AC8C")]
		static InputIconParams()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x89B2A0", Offset = "0x89B2A0", VA = "0x89B2A0")]
		public static string GetParamName(InputIconType type)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x89B380", Offset = "0x89B380", VA = "0x89B380")]
		public static InputIconType GetIconType(string paramName)
		{
			return default(InputIconType);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x89B460", Offset = "0x89B460", VA = "0x89B460")]
		public static bool IsValidInputIconParam(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x89B010", Offset = "0x89B010", VA = "0x89B010")]
		private static string GetParamAttributeName(InputIconType iconType)
		{
			return null;
		}
	}
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x6E1C8C", Offset = "0x6E1C8C")]
	public class IconNameAttribute : Attribute
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7520", Offset = "0x6E7520")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170000E0")]
		public string Name
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x89AC50", Offset = "0x89AC50", VA = "0x89AC50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F182C", Offset = "0x6F182C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x89AC58", Offset = "0x89AC58", VA = "0x89AC58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F183C", Offset = "0x6F183C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x89AC60", Offset = "0x89AC60", VA = "0x89AC60")]
		public IconNameAttribute(string name)
		{
		}
	}
	[Token(Token = "0x200019A")]
	public enum InputIconType
	{
		[Token(Token = "0x40008F7")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7530", Offset = "0x6E7530")]
		Move,
		[Token(Token = "0x40008F8")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7568", Offset = "0x6E7568")]
		PlayerMove,
		[Token(Token = "0x40008F9")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E75A0", Offset = "0x6E75A0")]
		Menu,
		[Token(Token = "0x40008FA")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E75D8", Offset = "0x6E75D8")]
		Interact,
		[Token(Token = "0x40008FB")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7610", Offset = "0x6E7610")]
		Cancel,
		[Token(Token = "0x40008FC")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7648", Offset = "0x6E7648")]
		Recenter,
		[Token(Token = "0x40008FD")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7680", Offset = "0x6E7680")]
		CharacterSwap,
		[Token(Token = "0x40008FE")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E76B8", Offset = "0x6E76B8")]
		PointLeft,
		[Token(Token = "0x40008FF")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E76F0", Offset = "0x6E76F0")]
		PointRight,
		[Token(Token = "0x4000900")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7728", Offset = "0x6E7728")]
		GrabLeft,
		[Token(Token = "0x4000901")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x6E7760", Offset = "0x6E7760")]
		GrabRight
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1CA0", Offset = "0x6E1CA0")]
	public class PlatformIconHandler : MonoBehaviour
	{
		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C2C", Offset = "0x6E2C2C")]
		private sealed class <DelayedChange>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformIconHandler <>4__this;

			[Token(Token = "0x17000221")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600181E")]
				[Address(RVA = "0x89B900", Offset = "0x89B900", VA = "0x89B900", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000222")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001820")]
				[Address(RVA = "0x89B970", Offset = "0x89B970", VA = "0x89B970", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600181B")]
			[Address(RVA = "0x89B760", Offset = "0x89B760", VA = "0x89B760")]
			[DebuggerHidden]
			public <DelayedChange>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600181C")]
			[Address(RVA = "0x89B794", Offset = "0x89B794", VA = "0x89B794", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600181D")]
			[Address(RVA = "0x89B798", Offset = "0x89B798", VA = "0x89B798", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600181F")]
			[Address(RVA = "0x89B908", Offset = "0x89B908", VA = "0x89B908", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_tmpText;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_onInputDeviceChangedEventToken;

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x89B544", Offset = "0x89B544", VA = "0x89B544")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x89B64C", Offset = "0x89B64C", VA = "0x89B64C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x89B6C0", Offset = "0x89B6C0", VA = "0x89B6C0")]
		private void OnInputDeviceChanged(PlatformEvents.InputDeviceChangedEvent eventData)
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x89B620", Offset = "0x89B620", VA = "0x89B620")]
		private void ChangeSpriteAsset()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x89B6EC", Offset = "0x89B6EC", VA = "0x89B6EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F184C", Offset = "0x6F184C")]
		private IEnumerator DelayedChange()
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x89B78C", Offset = "0x89B78C", VA = "0x89B78C")]
		public PlatformIconHandler()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Haptics
{
	[Serializable]
	[Token(Token = "0x200019C")]
	public class DefaultHapticClipSettings : HapticClipSettings
	{
		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E7798", Offset = "0x6E7798")]
		public float Amplitude;

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x89A198", Offset = "0x89A198", VA = "0x89A198")]
		public DefaultHapticClipSettings()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class DefaultHaptics : IPlatformHaptics, IPlatformService
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IReadOnlyDictionary<PointerType, XRNode> sm_nodeMappings;

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x89A1C4", Offset = "0x89A1C4", VA = "0x89A1C4", Slot = "6")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x89A224", Offset = "0x89A224", VA = "0x89A224", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x89A228", Offset = "0x89A228", VA = "0x89A228", Slot = "4")]
		public void Vibrate(HapticClip clip, PointerType type)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x89A5AC", Offset = "0x89A5AC", VA = "0x89A5AC", Slot = "5")]
		public void Stop(PointerType type)
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x89A45C", Offset = "0x89A45C", VA = "0x89A45C")]
		private static bool GenerateBuffer(float seconds, float amplitude, HapticCapabilities capabilities, ref byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x89A6B8", Offset = "0x89A6B8", VA = "0x89A6B8")]
		public DefaultHaptics()
		{
		}
	}
	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E1D04", Offset = "0x6E1D04")]
	public class HapticClip : ScriptableObject
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DefaultHapticClipSettings m_defaultSettings;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OpenVRHapticClipSettings m_openVRSettings;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayStationHapticClipSettings m_playStationSettings;

		[Token(Token = "0x170000E1")]
		public DefaultHapticClipSettings Settings
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x89A454", Offset = "0x89A454", VA = "0x89A454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x89A7D0", Offset = "0x89A7D0", VA = "0x89A7D0")]
		public void Play(PointerType type)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x89A8C4", Offset = "0x89A8C4", VA = "0x89A8C4")]
		public void Stop(PointerType type)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x89A9AC", Offset = "0x89A9AC", VA = "0x89A9AC")]
		public HapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019F")]
	public class HapticClipSettings
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x89A1B0", Offset = "0x89A1B0", VA = "0x89A1B0")]
		public HapticClipSettings()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public interface IPlatformHaptics : IPlatformService
	{
		[Token(Token = "0x6000C0A")]
		void Vibrate(HapticClip clip, PointerType type);

		[Token(Token = "0x6000C0B")]
		void Stop(PointerType type);
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	public class OpenVRHapticClipSettings : DefaultHapticClipSettings
	{
		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E77E0", Offset = "0x6E77E0")]
		public int Frequency;

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x89A9B4", Offset = "0x89A9B4", VA = "0x89A9B4")]
		public OpenVRHapticClipSettings()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class PicoHaptics : IPlatformHaptics, IPlatformService
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x89A9D4", Offset = "0x89A9D4", VA = "0x89A9D4", Slot = "6")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x89AA34", Offset = "0x89AA34", VA = "0x89AA34", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x89AA38", Offset = "0x89AA38", VA = "0x89AA38", Slot = "5")]
		public void Stop(PointerType type)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x89AA3C", Offset = "0x89AA3C", VA = "0x89AA3C", Slot = "4")]
		public void Vibrate(HapticClip clip, PointerType type)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x8994E8", Offset = "0x8994E8", VA = "0x8994E8")]
		public PicoHaptics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	public class PlayStationHapticClipSettings : HapticClipSettings
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E77FC", Offset = "0x6E77FC")]
		public int MaxConcurrent;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E7814", Offset = "0x6E7814")]
		public int SmallMotor;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6E7830", Offset = "0x6E7830")]
		public int LargeMotor;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly JsonSerializerSettings sm_jsonSerializerSettings;

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x89AA40", Offset = "0x89AA40", VA = "0x89AA40")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x89AADC", Offset = "0x89AADC", VA = "0x89AADC")]
		public static PlayStationHapticClipSettings FromJson(string json)
		{
			return null;
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x89AB80", Offset = "0x89AB80", VA = "0x89AB80")]
		public PlayStationHapticClipSettings()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Factory
{
	[Token(Token = "0x20001A4")]
	public class AchievementFactory : ServiceFactory<IPlatformAchievements>
	{
		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x899338", Offset = "0x899338", VA = "0x899338", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x899394", Offset = "0x899394", VA = "0x899394")]
		public AchievementFactory()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class AnalyticsFactory : ServiceFactory<IPlatformAnalytics>
	{
		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x8993E4", Offset = "0x8993E4", VA = "0x8993E4", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x89943C", Offset = "0x89943C", VA = "0x89943C")]
		public AnalyticsFactory()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class HapticsFactory : ServiceFactory<IPlatformHaptics>
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x89948C", Offset = "0x89948C", VA = "0x89948C", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x8994F0", Offset = "0x8994F0", VA = "0x8994F0")]
		public HapticsFactory()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class InputFactory : ServiceFactory<IPlatformInput>
	{
		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x899540", Offset = "0x899540", VA = "0x899540", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x89959C", Offset = "0x89959C", VA = "0x89959C")]
		public InputFactory()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class PlatformFactory : ServiceFactory<IPlatform>
	{
		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x8995EC", Offset = "0x8995EC", VA = "0x8995EC", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x899648", Offset = "0x899648", VA = "0x899648")]
		private static GameObject CreatePlatformGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x8996DC", Offset = "0x8996DC", VA = "0x8996DC")]
		public PlatformFactory()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class ResourceFactory : ServiceFactory<IPlatformResources>
	{
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x89972C", Offset = "0x89972C", VA = "0x89972C", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x899788", Offset = "0x899788", VA = "0x899788")]
		public ResourceFactory()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class RigFactory : ServiceFactory<IPlatformRig>
	{
		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x8997D8", Offset = "0x8997D8", VA = "0x8997D8", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x89983C", Offset = "0x89983C", VA = "0x89983C")]
		public RigFactory()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public abstract class ServiceFactory
	{
		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x89988C", Offset = "0x89988C", VA = "0x89988C")]
		protected ServiceFactory()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public abstract class ServiceFactory<T> : ServiceFactory where T : IPlatformService
	{
		[Token(Token = "0x6000C26")]
		public abstract IPlatformService CreateService();

		[Token(Token = "0x6000C27")]
		protected ServiceFactory()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public static class ServiceFactoryRepository
	{
		[Serializable]
		[Token(Token = "0x20003C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C3C", Offset = "0x6E2C3C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001822")]
			[Address(RVA = "0x899D48", Offset = "0x899D48", VA = "0x899D48")]
			public <>c()
			{
			}

			[Token(Token = "0x6001823")]
			[Address(RVA = "0x899D50", Offset = "0x899D50", VA = "0x899D50")]
			internal bool <.cctor>b__1_0(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6001824")]
			[Address(RVA = "0x899E9C", Offset = "0x899E9C", VA = "0x899E9C")]
			internal ServiceFactory <.cctor>b__1_1(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, ServiceFactory> sm_factories;

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x899894", Offset = "0x899894", VA = "0x899894")]
		static ServiceFactoryRepository()
		{
		}

		[Token(Token = "0x6000C29")]
		public static TFactory GetFactory<TFactory, TService>() where TFactory : ServiceFactory<TService> where TService : IPlatformService
		{
			return null;
		}
	}
	[Token(Token = "0x20001AE")]
	public class SettingsStorageFactory : ServiceFactory<IPlatformSettingsStorage>
	{
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x899F28", Offset = "0x899F28", VA = "0x899F28", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x899F8C", Offset = "0x899F8C", VA = "0x899F8C")]
		public SettingsStorageFactory()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class StorageFactory : ServiceFactory<IPlatformStorage>
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x899FDC", Offset = "0x899FDC", VA = "0x899FDC", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x89A094", Offset = "0x89A094", VA = "0x89A094")]
		public StorageFactory()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class UserFactory : ServiceFactory<IPlatformUser>
	{
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x89A0E4", Offset = "0x89A0E4", VA = "0x89A0E4", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x89A148", Offset = "0x89A148", VA = "0x89A148")]
		public UserFactory()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Analytics
{
	[Token(Token = "0x20001B1")]
	public class DefaultAnalytics : IPlatformAnalytics, IPlatformService
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, object> m_eventData;

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x8991CC", Offset = "0x8991CC", VA = "0x8991CC", Slot = "6")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x89922C", Offset = "0x89922C", VA = "0x89922C", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x899230", Offset = "0x899230", VA = "0x899230", Slot = "4")]
		public void Publish(string eventName)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x89923C", Offset = "0x89923C", VA = "0x89923C", Slot = "5")]
		public void Publish(string eventName, IDictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x89924C", Offset = "0x89924C", VA = "0x89924C")]
		public DefaultAnalytics()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public interface IPlatformAnalytics : IPlatformService
	{
		[Token(Token = "0x6000C35")]
		void Publish(string eventName);

		[Token(Token = "0x6000C36")]
		void Publish(string eventName, IDictionary<string, object> eventData);
	}
}
namespace Cortopia.Scripts.Platform.Achievements
{
	[Token(Token = "0x20001B3")]
	public class Achievement : ScriptableObject, IAchievement
	{
		[Serializable]
		[Token(Token = "0x20003CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C4C", Offset = "0x6E2C4C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__24_1;

			[Token(Token = "0x40012EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Exception> <>9__25_1;

			[Token(Token = "0x6001826")]
			[Address(RVA = "0x897708", Offset = "0x897708", VA = "0x897708")]
			public <>c()
			{
			}

			[Token(Token = "0x6001827")]
			[Address(RVA = "0x897710", Offset = "0x897710", VA = "0x897710")]
			internal void <Unlock>b__24_1(Exception e)
			{
			}

			[Token(Token = "0x6001828")]
			[Address(RVA = "0x897714", Offset = "0x897714", VA = "0x897714")]
			internal void <Lock>b__25_1(Exception e)
			{
			}
		}

		[Token(Token = "0x4000911")]
		public const int NoId = -1;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x6E784C", Offset = "0x6E784C")]
		private string m_description;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E7884", Offset = "0x6E7884")]
		private int m_id;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E78D0", Offset = "0x6E78D0")]
		private string m_nameId;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E791C", Offset = "0x6E791C")]
		private AchievementStatus <Status>k__BackingField;

		[Token(Token = "0x170000E2")]
		public string Name
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x8F5F94", Offset = "0x8F5F94", VA = "0x8F5F94", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		public int Id
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0x8F5F9C", Offset = "0x8F5F9C", VA = "0x8F5F9C", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E4")]
		public string Description
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x8F5FA4", Offset = "0x8F5FA4", VA = "0x8F5FA4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		public string NameId
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x8F5FAC", Offset = "0x8F5FAC", VA = "0x8F5FAC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public AchievementStatus Status
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x8F5FB4", Offset = "0x8F5FB4", VA = "0x8F5FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F18B0", Offset = "0x6F18B0")]
			get
			{
				return default(AchievementStatus);
			}
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x8F5FBC", Offset = "0x8F5FBC", VA = "0x8F5FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F18C0", Offset = "0x6F18C0")]
			set
			{
			}
		}

		[Token(Token = "0x14000035")]
		public static event Action<IAchievement> OnUnlocked
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x8F5FC4", Offset = "0x8F5FC4", VA = "0x8F5FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F18D0", Offset = "0x6F18D0")]
			add
			{
			}
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x8F60C0", Offset = "0x8F60C0", VA = "0x8F60C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F18E0", Offset = "0x6F18E0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public static event Action<IAchievement> OnLocked
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x8F61BC", Offset = "0x8F61BC", VA = "0x8F61BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F18F0", Offset = "0x6F18F0")]
			add
			{
			}
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x8F62BC", Offset = "0x8F62BC", VA = "0x8F62BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1900", Offset = "0x6F1900")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x8F63BC", Offset = "0x8F63BC", VA = "0x8F63BC", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x8F6580", Offset = "0x8F6580", VA = "0x8F6580")]
		public void Unlock(float delay)
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x8F66D8", Offset = "0x8F66D8", VA = "0x8F66D8", Slot = "9")]
		public virtual void Unlock()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x8F6938", Offset = "0x8F6938", VA = "0x8F6938", Slot = "10")]
		public virtual void Lock()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x8F6B98", Offset = "0x8F6B98", VA = "0x8F6B98")]
		private void SetStatus(AchievementStatus status)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x8F6BA0", Offset = "0x8F6BA0", VA = "0x8F6BA0")]
		public void SetId(int newId)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x8F6BA8", Offset = "0x8F6BA8", VA = "0x8F6BA8")]
		public Achievement()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x8F6C1C", Offset = "0x8F6C1C", VA = "0x8F6C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1910", Offset = "0x6F1910")]
		private void <Unlock>b__24_0()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x8F6C98", Offset = "0x8F6C98", VA = "0x8F6C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1920", Offset = "0x6F1920")]
		private void <Lock>b__25_0()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class AchievementsPopup : MonoBehaviour
	{
		[Token(Token = "0x20003CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C5C", Offset = "0x6E2C5C")]
		private sealed class <DoOpenPopup>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AchievementsPopup <>4__this;

			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600182C")]
				[Address(RVA = "0x898290", Offset = "0x898290", VA = "0x898290", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600182E")]
				[Address(RVA = "0x898300", Offset = "0x898300", VA = "0x898300", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001829")]
			[Address(RVA = "0x897DF8", Offset = "0x897DF8", VA = "0x897DF8")]
			[DebuggerHidden]
			public <DoOpenPopup>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x600182A")]
			[Address(RVA = "0x898198", Offset = "0x898198", VA = "0x898198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600182B")]
			[Address(RVA = "0x89819C", Offset = "0x89819C", VA = "0x89819C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600182D")]
			[Address(RVA = "0x898298", Offset = "0x898298", VA = "0x898298", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000918")]
		private const float TargetFps = 90f;

		[Token(Token = "0x4000919")]
		private const float DisplayTime = 2f;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_offset;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween m_tween;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine m_routine;

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x897718", Offset = "0x897718", VA = "0x897718")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x8977EC", Offset = "0x8977EC", VA = "0x8977EC")]
		private void OnUnlocked(IAchievement achievement)
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x8978E8", Offset = "0x8978E8", VA = "0x8978E8")]
		private void OnLocked(IAchievement achievement)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x8979E4", Offset = "0x8979E4", VA = "0x8979E4")]
		private void OpenPopup()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x897D84", Offset = "0x897D84", VA = "0x897D84")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1930", Offset = "0x6F1930")]
		private IEnumerator DoOpenPopup()
		{
			return null;
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x897E24", Offset = "0x897E24", VA = "0x897E24")]
		private void Show()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x897E58", Offset = "0x897E58", VA = "0x897E58")]
		private void Hide()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x897E8C", Offset = "0x897E8C", VA = "0x897E8C")]
		private void UpdateTransformation()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x897B0C", Offset = "0x897B0C", VA = "0x897B0C")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x898138", Offset = "0x898138", VA = "0x898138")]
		public AchievementsPopup()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public enum AchievementStatus
	{
		[Token(Token = "0x4000920")]
		Locked,
		[Token(Token = "0x4000921")]
		Unlocked
	}
	[Token(Token = "0x20001B6")]
	public class DefaultAchievements : ManualCountAchievementsBase
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlatformSettingsStorage m_storage;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x898308", Offset = "0x898308", VA = "0x898308", Slot = "11")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x8983A0", Offset = "0x8983A0", VA = "0x8983A0", Slot = "14")]
		public override IPromise LockAchievement(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x898528", Offset = "0x898528", VA = "0x898528", Slot = "15")]
		public override IPromise UnlockAchievement(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x8986B0", Offset = "0x8986B0", VA = "0x8986B0", Slot = "13")]
		public override IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x898820", Offset = "0x898820", VA = "0x898820")]
		public DefaultAchievements()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public interface IAchievement
	{
		[Token(Token = "0x170000E7")]
		string Name
		{
			[Token(Token = "0x6000C59")]
			get;
		}

		[Token(Token = "0x170000E8")]
		string Description
		{
			[Token(Token = "0x6000C5A")]
			get;
		}

		[Token(Token = "0x170000E9")]
		string NameId
		{
			[Token(Token = "0x6000C5B")]
			get;
		}

		[Token(Token = "0x170000EA")]
		int Id
		{
			[Token(Token = "0x6000C5C")]
			get;
		}
	}
	[Token(Token = "0x20001B8")]
	public interface IIncrementalAchievement : IAchievement
	{
		[Token(Token = "0x170000EB")]
		int Count
		{
			[Token(Token = "0x6000C5D")]
			get;
		}

		[Token(Token = "0x170000EC")]
		int TargetCount
		{
			[Token(Token = "0x6000C5E")]
			get;
		}
	}
	[Token(Token = "0x20001B9")]
	public class IncrementalAchievement : Achievement, IIncrementalAchievement, IAchievement
	{
		[Serializable]
		[Token(Token = "0x20003CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C6C", Offset = "0x6E2C6C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__9_1;

			[Token(Token = "0x6001830")]
			[Address(RVA = "0x898D4C", Offset = "0x898D4C", VA = "0x898D4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001831")]
			[Address(RVA = "0x898D54", Offset = "0x898D54", VA = "0x898D54")]
			internal void <Increment>b__9_1(Exception e)
			{
			}
		}

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E797C", Offset = "0x6E797C")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x6E797C", Offset = "0x6E797C")]
		private int m_targetCount;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_currentCount;

		[Token(Token = "0x170000ED")]
		public int Count
		{
			[Token(Token = "0x6000C5F")]
			[Address(RVA = "0x898830", Offset = "0x898830", VA = "0x898830", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public int TargetCount
		{
			[Token(Token = "0x6000C60")]
			[Address(RVA = "0x898838", Offset = "0x898838", VA = "0x898838", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x898840", Offset = "0x898840", VA = "0x898840", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x8989E8", Offset = "0x8989E8", VA = "0x8989E8", Slot = "9")]
		public override void Unlock()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x8989EC", Offset = "0x8989EC", VA = "0x8989EC")]
		public void TryIncrement(int totalCount)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x898A38", Offset = "0x898A38", VA = "0x898A38")]
		private void Increment()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x898C7C", Offset = "0x898C7C", VA = "0x898C7C")]
		private void SetStatus(int count)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x898CBC", Offset = "0x898CBC", VA = "0x898CBC")]
		public IncrementalAchievement()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x898CC4", Offset = "0x898CC4", VA = "0x898CC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1994", Offset = "0x6F1994")]
		private void <Increment>b__9_0()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public interface IPlatformAchievements : IPlatformService
	{
		[Token(Token = "0x6000C68")]
		IPromise UnlockAchievement(IAchievement achievement);

		[Token(Token = "0x6000C69")]
		IPromise LockAchievement(IAchievement achievement);

		[Token(Token = "0x6000C6A")]
		IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement);

		[Token(Token = "0x6000C6B")]
		IPromise IncrementAchievement(IIncrementalAchievement achievement);

		[Token(Token = "0x6000C6C")]
		IPromise<int> GetAchievementProgress(IIncrementalAchievement achievement);
	}
	[Token(Token = "0x20001BB")]
	public abstract class ManualCountAchievementsBase : IPlatformAchievements, IPlatformService
	{
		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IPlatformUser m_user;

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x898D58", Offset = "0x898D58", VA = "0x898D58", Slot = "11")]
		public virtual IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x898DF0", Offset = "0x898DF0", VA = "0x898DF0", Slot = "12")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6000C6F")]
		public abstract IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement);

		[Token(Token = "0x6000C70")]
		public abstract IPromise LockAchievement(IAchievement achievement);

		[Token(Token = "0x6000C71")]
		public abstract IPromise UnlockAchievement(IAchievement achievement);

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x898DF4", Offset = "0x898DF4", VA = "0x898DF4", Slot = "8")]
		public IPromise<int> GetAchievementProgress(IIncrementalAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x899038", Offset = "0x899038", VA = "0x899038", Slot = "7")]
		public IPromise IncrementAchievement(IIncrementalAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x898E64", Offset = "0x898E64", VA = "0x898E64")]
		private string GetKey(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x898828", Offset = "0x898828", VA = "0x898828")]
		protected ManualCountAchievementsBase()
		{
		}
	}
}
namespace Cortopia.Scripts.Localization
{
	[Token(Token = "0x20001BC")]
	public static class Localizations
	{
		[Token(Token = "0x4000926")]
		public const string Default = "00_loc_int_default";

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string sm_interactionCategory;

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x8E3B3C", Offset = "0x8E3B3C", VA = "0x8E3B3C")]
		public static string GetInteractable(string term)
		{
			return null;
		}
	}
	[Token(Token = "0x20001BD")]
	public class LocalizationTerm : ScriptableObject
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_localizationTerm;

		[Token(Token = "0x170000EF")]
		public string Term
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x8E1F5C", Offset = "0x8E1F5C", VA = "0x8E1F5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x8F5BB8", Offset = "0x8F5BB8", VA = "0x8F5BB8")]
		public LocalizationTerm()
		{
		}
	}
}
namespace Cortopia.Scripts.UI
{
	[Token(Token = "0x20001BE")]
	public class CustomParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x86D880", Offset = "0x86D880", VA = "0x86D880")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x86D970", Offset = "0x86D970", VA = "0x86D970")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x86DA60", Offset = "0x86DA60", VA = "0x86DA60", Slot = "4")]
		public string GetParameterValue(string paramName)
		{
			return null;
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x86DA88", Offset = "0x86DA88", VA = "0x86DA88")]
		private bool TryReplaceInputIconParam(ref string paramName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x86DB30", Offset = "0x86DB30", VA = "0x86DB30")]
		public CustomParamsManager()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class CustomButton : Selectable, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E79FC", Offset = "0x6E79FC")]
		[SerializeField]
		private CustomButtonHandler m_customButtonHandler;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Image m_pointerPresentBackground;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private SoundEffectPlayer m_pointerPresentSoundEffectPlayer;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7A78", Offset = "0x6E7A78")]
		[SerializeField]
		private ButtonEvent m_onClick;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_timer;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ISet<PlayerPointer> m_presentPointers;

		[Token(Token = "0x4000930")]
		private const float PointTime = 1.5f;

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x86C598", Offset = "0x86C598", VA = "0x86C598")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x86C7AC", Offset = "0x86C7AC", VA = "0x86C7AC", Slot = "39")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x86C7B0", Offset = "0x86C7B0", VA = "0x86C7B0")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x86C908", Offset = "0x86C908", VA = "0x86C908")]
		public void EnableButton()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x86C974", Offset = "0x86C974", VA = "0x86C974")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x86C8B4", Offset = "0x86C8B4", VA = "0x86C8B4")]
		private void DisableTouchEffect()
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x86C9AC", Offset = "0x86C9AC", VA = "0x86C9AC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x86CCF4", Offset = "0x86CCF4", VA = "0x86CCF4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x86C748", Offset = "0x86C748", VA = "0x86C748")]
		private void ButtonClick()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x86CF30", Offset = "0x86CF30", VA = "0x86CF30")]
		public CustomButton()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class CustomButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C7C", Offset = "0x6E2C7C")]
		private sealed class <DoFadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButtonHandler <>4__this;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startAlpha>5__3;

			[Token(Token = "0x17000225")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001835")]
				[Address(RVA = "0x86D610", Offset = "0x86D610", VA = "0x86D610", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001837")]
				[Address(RVA = "0x86D680", Offset = "0x86D680", VA = "0x86D680", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001832")]
			[Address(RVA = "0x86D388", Offset = "0x86D388", VA = "0x86D388")]
			[DebuggerHidden]
			public <DoFadeIn>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001833")]
			[Address(RVA = "0x86D440", Offset = "0x86D440", VA = "0x86D440", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001834")]
			[Address(RVA = "0x86D444", Offset = "0x86D444", VA = "0x86D444", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001836")]
			[Address(RVA = "0x86D618", Offset = "0x86D618", VA = "0x86D618", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C8C", Offset = "0x6E2C8C")]
		private sealed class <DoFadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButtonHandler <>4__this;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startAlpha>5__3;

			[Token(Token = "0x17000227")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600183B")]
				[Address(RVA = "0x86D808", Offset = "0x86D808", VA = "0x86D808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000228")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600183D")]
				[Address(RVA = "0x86D878", Offset = "0x86D878", VA = "0x86D878", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001838")]
			[Address(RVA = "0x86D3B4", Offset = "0x86D3B4", VA = "0x86D3B4")]
			[DebuggerHidden]
			public <DoFadeOut>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001839")]
			[Address(RVA = "0x86D688", Offset = "0x86D688", VA = "0x86D688", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600183A")]
			[Address(RVA = "0x86D68C", Offset = "0x86D68C", VA = "0x86D68C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600183C")]
			[Address(RVA = "0x86D810", Offset = "0x86D810", VA = "0x86D810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PointerHoldButton[] m_buttons;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_fadeRoutine;

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x86CFE0", Offset = "0x86CFE0", VA = "0x86CFE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x86CFE4", Offset = "0x86CFE4", VA = "0x86CFE4")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x86D08C", Offset = "0x86D08C", VA = "0x86D08C")]
		public void SetButtonsActive(bool active)
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x86D20C", Offset = "0x86D20C", VA = "0x86D20C")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x86CBFC", Offset = "0x86CBFC", VA = "0x86CBFC")]
		public void SetButtonsInteractable(bool isInteractable, CustomButton skipButton)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x86D138", Offset = "0x86D138", VA = "0x86D138")]
		private void SetCanvasGroupActive(bool active)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x86D2A0", Offset = "0x86D2A0", VA = "0x86D2A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F19A4", Offset = "0x6F19A4")]
		private IEnumerator DoFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x86D314", Offset = "0x86D314", VA = "0x86D314")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1A08", Offset = "0x6F1A08")]
		private IEnumerator DoFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x86D3E0", Offset = "0x86D3E0", VA = "0x86D3E0")]
		public CustomButtonHandler()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class FloatingUIElement : MonoBehaviour
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_moveTime;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_pointCount;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MathUtils.MinMax m_offsetMinMax;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Path m_path;

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x870C60", Offset = "0x870C60", VA = "0x870C60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x870D14", Offset = "0x870D14", VA = "0x870D14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x870C64", Offset = "0x870C64", VA = "0x870C64")]
		private void StartMoving()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x870D34", Offset = "0x870D34", VA = "0x870D34")]
		private void GeneratePath(Vector3 startPoint)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x870EC8", Offset = "0x870EC8", VA = "0x870EC8")]
		private Vector3 GetRandomPoint(int index, Vector3 startPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x870FA8", Offset = "0x870FA8", VA = "0x870FA8")]
		public FloatingUIElement()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class InvitationUI : MonoBehaviour, IMenuItem
	{
		[Serializable]
		[Token(Token = "0x20003CF")]
		private class BiomeInvitations
		{
			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image[] Invitations;

			[Token(Token = "0x600183E")]
			[Address(RVA = "0x872928", Offset = "0x872928", VA = "0x872928")]
			public BiomeInvitations()
			{
			}
		}

		[Token(Token = "0x4000938")]
		private const int NumberOfTrackedBiomes = 6;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InvitationsHandler m_invitationsHandler;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BiomeInvitations[] m_invitations;

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x872294", Offset = "0x872294", VA = "0x872294")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x8723E4", Offset = "0x8723E4", VA = "0x8723E4", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x8727E4", Offset = "0x8727E4", VA = "0x8727E4", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x872874", Offset = "0x872874", VA = "0x872874")]
		private void OnInvitationFound()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x87258C", Offset = "0x87258C", VA = "0x87258C")]
		private void UpdateInvitesInRooms(int biomeIndex, RoomType[] rooms)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x872920", Offset = "0x872920", VA = "0x872920")]
		public InvitationUI()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public static class LanguageHandler
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x872988", Offset = "0x872988", VA = "0x872988")]
		public static string GetDeviceLanguage()
		{
			return null;
		}
	}
	[Token(Token = "0x20001C4")]
	public class DebugButton : MenuButton
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x86DB38", Offset = "0x86DB38", VA = "0x86DB38")]
		public DebugButton()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class LoadButton : MenuButton
	{
		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private CharacterToggle m_fourHalfToggle;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private BiomeSelector m_biomeSelector;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private RoomSelector m_roomSelector;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private BiomeLoader m_loader;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private EventToken m_biomeLoadedEvent;

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x872E80", Offset = "0x872E80", VA = "0x872E80")]
		public void Load()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x873010", Offset = "0x873010", VA = "0x873010")]
		private void LoadRoom(RoomType roomType)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x8732A0", Offset = "0x8732A0", VA = "0x8732A0")]
		private void SpawnFourHalf(Vector3 position)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x873454", Offset = "0x873454", VA = "0x873454")]
		public LoadButton()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x873458", Offset = "0x873458", VA = "0x873458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1A6C", Offset = "0x6F1A6C")]
		private void <Load>b__5_0(RoomEvents.BiomeActivatedEvent biomeEvent)
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class MenuButton : InteractableMenuItem
	{
		[Token(Token = "0x4000940")]
		private const float AcceptablePressRadians = 0.4f;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7B74", Offset = "0x6E7B74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E7B74", Offset = "0x6E7B74")]
		[SerializeField]
		private float m_maxPressedDistance;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E7BE4", Offset = "0x6E7BE4")]
		[SerializeField]
		private float m_activationDistance;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_buttonReturnTime;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private Ease m_buttonReturnEasing;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7C50", Offset = "0x6E7C50")]
		[SerializeField]
		private bool m_useHighlightHover;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Image m_highlightImage;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_highlightAlpha;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool m_useScaleHover;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Transform m_hoverTransform;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Vector3 m_hoverScale;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool m_useDirectionalHover;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Transform m_moveTransform;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Vector2 m_directionalHoverOffset;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float m_moveTime;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7D2C", Offset = "0x6E7D2C")]
		[SerializeField]
		private HapticClip m_hapticClip;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7D78", Offset = "0x6E7D78")]
		[SerializeField]
		private SoundEffect m_clickInSfx;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private SoundEffect m_clickOutSfx;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private SoundEffect m_hoverSfx;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7DE4", Offset = "0x6E7DE4")]
		[SerializeField]
		private UnityEvent m_onClick;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Tween m_returnTween;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Tween m_scaleTween;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Tween m_moveTweenX;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Tween m_moveTweenY;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 m_pointerPreviousPosition;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 m_hoverDefaultScale;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector2 m_defaultPosition;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float m_distanceMoved;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private bool m_isPressed;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7E30", Offset = "0x6E7E30")]
		private Vector3 <EndPosition>k__BackingField;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7E40", Offset = "0x6E7E40")]
		private Vector3 <StartPosition>k__BackingField;

		[Token(Token = "0x170000F0")]
		private float ActivationDistance
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x874C90", Offset = "0x874C90", VA = "0x874C90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F1")]
		private float MaxPressedDistance
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x874CD8", Offset = "0x874CD8", VA = "0x874CD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F2")]
		public Vector3 EndPosition
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x874D20", Offset = "0x874D20", VA = "0x874D20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1A7C", Offset = "0x6F1A7C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x874D30", Offset = "0x874D30", VA = "0x874D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1A8C", Offset = "0x6F1A8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x874D40", Offset = "0x874D40", VA = "0x874D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1A9C", Offset = "0x6F1A9C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x874D50", Offset = "0x874D50", VA = "0x874D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1AAC", Offset = "0x6F1AAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public bool UseScaleHover
		{
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x874D60", Offset = "0x874D60", VA = "0x874D60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x874D68", Offset = "0x874D68", VA = "0x874D68")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public bool UseDirectionalHover
		{
			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x874D74", Offset = "0x874D74", VA = "0x874D74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x874D7C", Offset = "0x874D7C", VA = "0x874D7C")]
			set
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action<IPlayerPointer> OnClick
		{
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x874D88", Offset = "0x874D88", VA = "0x874D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1ABC", Offset = "0x6F1ABC")]
			add
			{
			}
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x874E78", Offset = "0x874E78", VA = "0x874E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1ACC", Offset = "0x6F1ACC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action<IPlayerPointer> OnRelease
		{
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x874F68", Offset = "0x874F68", VA = "0x874F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1ADC", Offset = "0x6F1ADC")]
			add
			{
			}
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x875058", Offset = "0x875058", VA = "0x875058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1AEC", Offset = "0x6F1AEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<IPlayerPointer> OnHold
		{
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0x875148", Offset = "0x875148", VA = "0x875148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1AFC", Offset = "0x6F1AFC")]
			add
			{
			}
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x875238", Offset = "0x875238", VA = "0x875238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1B0C", Offset = "0x6F1B0C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x875328", Offset = "0x875328", VA = "0x875328", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x875650", Offset = "0x875650", VA = "0x875650", Slot = "16")]
		protected override void OnHoverExit(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x875874", Offset = "0x875874", VA = "0x875874", Slot = "17")]
		protected override void OnHoverEnter(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x875B44", Offset = "0x875B44", VA = "0x875B44", Slot = "11")]
		public override void OnPointerClick(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x875D50", Offset = "0x875D50", VA = "0x875D50", Slot = "9")]
		public override void Disable()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x875D78", Offset = "0x875D78", VA = "0x875D78", Slot = "10")]
		public override void Enable()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x875F44", Offset = "0x875F44", VA = "0x875F44", Slot = "12")]
		protected override void GetTriggerPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x876074", Offset = "0x876074", VA = "0x876074", Slot = "13")]
		protected override void OnPressRelease(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x876230", Offset = "0x876230", VA = "0x876230", Slot = "14")]
		protected override void OnPressBegin(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x876308", Offset = "0x876308", VA = "0x876308", Slot = "15")]
		public override void OnPressHold(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x86DB3C", Offset = "0x86DB3C", VA = "0x86DB3C")]
		public MenuButton()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x876750", Offset = "0x876750", VA = "0x876750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1B1C", Offset = "0x6F1B1C")]
		private void <OnPressRelease>b__63_0()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class QuitButton : MenuButton
	{
		[Serializable]
		[Token(Token = "0x20003D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2C9C", Offset = "0x6E2C9C")]
		private sealed class <>c
		{
			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_1;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TweenCallback <>9__0_0;

			[Token(Token = "0x6001840")]
			[Address(RVA = "0x972A48", Offset = "0x972A48", VA = "0x972A48")]
			public <>c()
			{
			}

			[Token(Token = "0x6001841")]
			[Address(RVA = "0x972A50", Offset = "0x972A50", VA = "0x972A50")]
			internal void <QuitGame>b__0_0()
			{
			}

			[Token(Token = "0x6001842")]
			[Address(RVA = "0x972B74", Offset = "0x972B74", VA = "0x972B74")]
			internal void <QuitGame>b__0_1()
			{
			}
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x972880", Offset = "0x972880", VA = "0x972880")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x9729DC", Offset = "0x9729DC", VA = "0x9729DC")]
		public QuitButton()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class BiomeSelector : HorizontalSelector
	{
		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> m_biomes;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7E80", Offset = "0x6E7E80")]
		private BiomeType <Biome>k__BackingField;

		[Token(Token = "0x170000F6")]
		public BiomeType Biome
		{
			[Token(Token = "0x6000CC3")]
			[Address(RVA = "0x86C20C", Offset = "0x86C20C", VA = "0x86C20C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1B2C", Offset = "0x6F1B2C")]
			get
			{
				return default(BiomeType);
			}
			[Token(Token = "0x6000CC4")]
			[Address(RVA = "0x86C214", Offset = "0x86C214", VA = "0x86C214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1B3C", Offset = "0x6F1B3C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000F7")]
		protected override List<string> Options
		{
			[Token(Token = "0x6000CC5")]
			[Address(RVA = "0x86C21C", Offset = "0x86C21C", VA = "0x86C21C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x86C224", Offset = "0x86C224", VA = "0x86C224")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x86C2F4", Offset = "0x86C2F4", VA = "0x86C2F4", Slot = "5")]
		protected override void OnSelect(string selection)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x86C430", Offset = "0x86C430", VA = "0x86C430")]
		public BiomeSelector()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public abstract class HorizontalSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003D1")]
		private class SelectionEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x871240", Offset = "0x871240", VA = "0x871240")]
			public SelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_setText;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionEvent m_onSelection;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_index;

		[Token(Token = "0x170000F8")]
		protected abstract List<string> Options
		{
			[Token(Token = "0x6000CC9")]
			get;
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x871004", Offset = "0x871004", VA = "0x871004")]
		public void Next()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x87119C", Offset = "0x87119C", VA = "0x87119C")]
		public void Previous()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x86C2EC", Offset = "0x86C2EC", VA = "0x86C2EC")]
		public void Select(int index)
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x871238", Offset = "0x871238", VA = "0x871238")]
		protected void SetIndex(int index)
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x8710B4", Offset = "0x8710B4", VA = "0x8710B4")]
		private void OnSelect()
		{
		}

		[Token(Token = "0x6000CCF")]
		protected abstract void OnSelect(string selection);

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x8710A0", Offset = "0x8710A0", VA = "0x8710A0")]
		private int Wrap(int x, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x86C434", Offset = "0x86C434", VA = "0x86C434")]
		protected HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class LanguageSelection : HorizontalSelector
	{
		[Serializable]
		[Token(Token = "0x20003D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CAC", Offset = "0x6E2CAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__3_0;

			[Token(Token = "0x6001845")]
			[Address(RVA = "0x872DDC", Offset = "0x872DDC", VA = "0x872DDC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001846")]
			[Address(RVA = "0x872DE4", Offset = "0x872DE4", VA = "0x872DE4")]
			internal bool <Awake>b__3_0(string supportedLanguage)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> m_supportedLanguages;

		[Token(Token = "0x170000F9")]
		protected override List<string> Options
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0x872B28", Offset = "0x872B28", VA = "0x872B28", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x872B30", Offset = "0x872B30", VA = "0x872B30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x872CF4", Offset = "0x872CF4", VA = "0x872CF4", Slot = "5")]
		protected override void OnSelect(string selection)
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x872C4C", Offset = "0x872C4C", VA = "0x872C4C")]
		private void SetSupportedLanguages()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x872D74", Offset = "0x872D74", VA = "0x872D74")]
		public LanguageSelection()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class RoomSelector : HorizontalSelector
	{
		[Serializable]
		[Token(Token = "0x20003D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CBC", Offset = "0x6E2CBC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<RoomType, string> <>9__6_0;

			[Token(Token = "0x6001848")]
			[Address(RVA = "0x972E30", Offset = "0x972E30", VA = "0x972E30")]
			public <>c()
			{
			}

			[Token(Token = "0x6001849")]
			[Address(RVA = "0x972E38", Offset = "0x972E38", VA = "0x972E38")]
			internal string <get_Options>b__6_0(RoomType room)
			{
				return null;
			}
		}

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BiomeSelector m_biomeSelector;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7ED0", Offset = "0x6E7ED0")]
		private RoomType <Room>k__BackingField;

		[Token(Token = "0x170000FA")]
		public RoomType Room
		{
			[Token(Token = "0x6000CD7")]
			[Address(RVA = "0x972B7C", Offset = "0x972B7C", VA = "0x972B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1B4C", Offset = "0x6F1B4C")]
			get
			{
				return default(RoomType);
			}
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0x972B84", Offset = "0x972B84", VA = "0x972B84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1B5C", Offset = "0x6F1B5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		protected override List<string> Options
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0x972B8C", Offset = "0x972B8C", VA = "0x972B8C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x972CE4", Offset = "0x972CE4", VA = "0x972CE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x972CF0", Offset = "0x972CF0", VA = "0x972CF0", Slot = "5")]
		protected override void OnSelect(string selection)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x972DC4", Offset = "0x972DC4", VA = "0x972DC4")]
		public RoomSelector()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public interface IMenu
	{
		[Token(Token = "0x170000FC")]
		bool IsOpen
		{
			[Token(Token = "0x6000CDD")]
			get;
		}

		[Token(Token = "0x1400003A")]
		event Action OnMenuOpen;

		[Token(Token = "0x1400003B")]
		event Action OnMenuClose;

		[Token(Token = "0x6000CE2")]
		void Open();

		[Token(Token = "0x6000CE3")]
		void Close();
	}
	[Token(Token = "0x20001CD")]
	public interface IMenuItem
	{
		[Token(Token = "0x6000CE4")]
		void Enable();

		[Token(Token = "0x6000CE5")]
		void Disable();
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1D74", Offset = "0x6E1D74")]
	public abstract class InteractableMenuItem : MonoBehaviour, IRemovableMenuItem, IMenuItem
	{
		[Serializable]
		[Token(Token = "0x20003D4")]
		private struct TriggerBoxSettings
		{
			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Center;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Depth;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 Scale;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LayerMask LayerMask;

			[Token(Token = "0x600184A")]
			[Address(RVA = "0x7644E4", Offset = "0x7644E4", VA = "0x7644E4")]
			public TriggerBoxSettings(Vector3 center, Vector2 scale, float depth = 10f, int mask = 1024)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CCC", Offset = "0x6E2CCC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__28_1;

			[Token(Token = "0x600184C")]
			[Address(RVA = "0x872288", Offset = "0x872288", VA = "0x872288")]
			public <>c()
			{
			}

			[Token(Token = "0x600184D")]
			[Address(RVA = "0x872290", Offset = "0x872290", VA = "0x872290")]
			internal void <EnableCollider>b__28_1(Exception e)
			{
			}
		}

		[Token(Token = "0x400096B")]
		private const float EnableColliderDelay = 0.4f;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7EE0", Offset = "0x6E7EE0")]
		[SerializeField]
		private TriggerBoxSettings m_hoverBounds;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private TriggerBoxSettings m_clickBounds;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IPlayerPointer m_currentPointer;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected BoxCollider m_collider;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TriggerBox m_hoverBoundingBox;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TriggerBox m_clickBoundingBox;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine m_enableRoutine;

		[Token(Token = "0x1400003C")]
		public event Action<IMenuItem> OnMenuItemDestroyed
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0x871290", Offset = "0x871290", VA = "0x871290", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1BAC", Offset = "0x6F1BAC")]
			add
			{
			}
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0x87137C", Offset = "0x87137C", VA = "0x87137C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1BBC", Offset = "0x6F1BBC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x871468", Offset = "0x871468", VA = "0x871468", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x871880", Offset = "0x871880", VA = "0x871880")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x871984", Offset = "0x871984", VA = "0x871984")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x871B40", Offset = "0x871B40", VA = "0x871B40")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x871A44", Offset = "0x871A44", VA = "0x871A44")]
		private void OnPointerExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x871D0C", Offset = "0x871D0C", VA = "0x871D0C")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x871D70", Offset = "0x871D70", VA = "0x871D70", Slot = "9")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x871DE8", Offset = "0x871DE8", VA = "0x871DE8", Slot = "10")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x871FE8", Offset = "0x871FE8", VA = "0x871FE8", Slot = "11")]
		public virtual void OnPointerClick(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x871FEC", Offset = "0x871FEC", VA = "0x871FEC", Slot = "12")]
		protected virtual void GetTriggerPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x87206C", Offset = "0x87206C", VA = "0x87206C", Slot = "13")]
		protected virtual void OnPressRelease(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x872070", Offset = "0x872070", VA = "0x872070", Slot = "14")]
		protected virtual void OnPressBegin(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x872074", Offset = "0x872074", VA = "0x872074", Slot = "15")]
		public virtual void OnPressHold(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x872078", Offset = "0x872078", VA = "0x872078", Slot = "16")]
		protected virtual void OnHoverExit(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x87207C", Offset = "0x87207C", VA = "0x87207C", Slot = "17")]
		protected virtual void OnHoverEnter(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x872080", Offset = "0x872080", VA = "0x872080", Slot = "18")]
		protected virtual void OnHoverStay(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x871DF4", Offset = "0x871DF4", VA = "0x871DF4")]
		private void EnableCollider(float delay = 0f)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x871D98", Offset = "0x871D98", VA = "0x871D98")]
		private void DisableCollider()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x872084", Offset = "0x872084", VA = "0x872084")]
		protected InteractableMenuItem()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x8721F0", Offset = "0x8721F0", VA = "0x8721F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1BCC", Offset = "0x6F1BCC")]
		private void <EnableCollider>b__28_0()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public interface IRemovableMenuItem : IMenuItem
	{
		[Token(Token = "0x1400003D")]
		event Action<IMenuItem> OnMenuItemDestroyed;
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1DD8", Offset = "0x6E1DD8")]
	public class Menu : MonoBehaviour, IMenu
	{
		[Token(Token = "0x20003D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CDC", Offset = "0x6E2CDC")]
		private sealed class <DoDisableMenuItems>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Menu <>4__this;

			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x17000229")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001851")]
				[Address(RVA = "0x874968", Offset = "0x874968", VA = "0x874968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001853")]
				[Address(RVA = "0x8749D8", Offset = "0x8749D8", VA = "0x8749D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600184E")]
			[Address(RVA = "0x8744C8", Offset = "0x8744C8", VA = "0x8744C8")]
			[DebuggerHidden]
			public <DoDisableMenuItems>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600184F")]
			[Address(RVA = "0x87472C", Offset = "0x87472C", VA = "0x87472C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001850")]
			[Address(RVA = "0x874730", Offset = "0x874730", VA = "0x874730", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001852")]
			[Address(RVA = "0x874970", Offset = "0x874970", VA = "0x874970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CEC", Offset = "0x6E2CEC")]
		private sealed class <DoEnableMenuItems>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Menu <>4__this;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700022B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001857")]
				[Address(RVA = "0x874C18", Offset = "0x874C18", VA = "0x874C18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001859")]
				[Address(RVA = "0x874C88", Offset = "0x874C88", VA = "0x874C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001854")]
			[Address(RVA = "0x8744F4", Offset = "0x8744F4", VA = "0x8744F4")]
			[DebuggerHidden]
			public <DoEnableMenuItems>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001855")]
			[Address(RVA = "0x8749E0", Offset = "0x8749E0", VA = "0x8749E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001856")]
			[Address(RVA = "0x8749E4", Offset = "0x8749E4", VA = "0x8749E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001858")]
			[Address(RVA = "0x874C20", Offset = "0x874C20", VA = "0x874C20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000974")]
		private const int OperationsPerTimeSlice = 3;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_handle;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E7F5C", Offset = "0x6E7F5C")]
		[SerializeField]
		private float m_showTweenTime;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Ease m_showEase;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_hideTweenTime;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<IMenuItem> m_menuItems;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_preShowScale;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_enableRoutine;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7FC8", Offset = "0x6E7FC8")]
		private bool <IsOpen>k__BackingField;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E7FD8", Offset = "0x6E7FD8")]
		private bool <IsVisible>k__BackingField;

		[Token(Token = "0x170000FD")]
		public bool IsOpen
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x87358C", Offset = "0x87358C", VA = "0x87358C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1BFC", Offset = "0x6F1BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x873594", Offset = "0x873594", VA = "0x873594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C0C", Offset = "0x6F1C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool IsVisible
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x8735A0", Offset = "0x8735A0", VA = "0x8735A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C1C", Offset = "0x6F1C1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x8735A8", Offset = "0x8735A8", VA = "0x8735A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C2C", Offset = "0x6F1C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action OnMenuShow
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x8735B4", Offset = "0x8735B4", VA = "0x8735B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C3C", Offset = "0x6F1C3C")]
			add
			{
			}
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x8736A0", Offset = "0x8736A0", VA = "0x8736A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C4C", Offset = "0x6F1C4C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event Action OnMenuHide
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x87378C", Offset = "0x87378C", VA = "0x87378C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C5C", Offset = "0x6F1C5C")]
			add
			{
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x873878", Offset = "0x873878", VA = "0x873878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C6C", Offset = "0x6F1C6C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event Action OnMenuOpen
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x873964", Offset = "0x873964", VA = "0x873964", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C7C", Offset = "0x6F1C7C")]
			add
			{
			}
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x873A50", Offset = "0x873A50", VA = "0x873A50", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C8C", Offset = "0x6F1C8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000041")]
		public event Action OnMenuClose
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x873B3C", Offset = "0x873B3C", VA = "0x873B3C", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1C9C", Offset = "0x6F1C9C")]
			add
			{
			}
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0x873C28", Offset = "0x873C28", VA = "0x873C28", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1CAC", Offset = "0x6F1CAC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x873D14", Offset = "0x873D14", VA = "0x873D14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x873E84", Offset = "0x873E84", VA = "0x873E84")]
		private void OnMenuItemDestroyed(IMenuItem menuItem)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x873EF4", Offset = "0x873EF4", VA = "0x873EF4", Slot = "10")]
		public void Close()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x873F30", Offset = "0x873F30", VA = "0x873F30", Slot = "11")]
		public virtual void Open()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x873F68", Offset = "0x873F68", VA = "0x873F68")]
		public void Show()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x87413C", Offset = "0x87413C", VA = "0x87413C", Slot = "12")]
		public virtual void Hide()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x874144", Offset = "0x874144", VA = "0x874144")]
		public void Hide(float fadeTime)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x874298", Offset = "0x874298", VA = "0x874298")]
		private void DisableMenuItems()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x874358", Offset = "0x874358", VA = "0x874358")]
		private void EnableMenuItems()
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x874418", Offset = "0x874418", VA = "0x874418")]
		private void ShowHandle(bool shouldShow)
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x8742E4", Offset = "0x8742E4", VA = "0x8742E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1CBC", Offset = "0x6F1CBC")]
		private IEnumerator DoDisableMenuItems()
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x8743A4", Offset = "0x8743A4", VA = "0x8743A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1D20", Offset = "0x6F1D20")]
		private IEnumerator DoEnableMenuItems()
		{
			return null;
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x874520", Offset = "0x874520", VA = "0x874520")]
		public Menu()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x8745E8", Offset = "0x8745E8", VA = "0x8745E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1D84", Offset = "0x6F1D84")]
		private void <Awake>b__31_0(IMenuItem menuItem)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x8746F4", Offset = "0x8746F4", VA = "0x8746F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1D94", Offset = "0x6F1D94")]
		private void <Show>b__35_0()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x874704", Offset = "0x874704", VA = "0x874704")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1DA4", Offset = "0x6F1DA4")]
		private void <Hide>b__37_0()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class MenuCard : MonoBehaviour, IMenuItem
	{
		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuButton m_button;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Card m_card;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CardChoiceData m_cardChoiceData;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8058", Offset = "0x6E8058")]
		private Vector3 <StartPosition>k__BackingField;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8068", Offset = "0x6E8068")]
		private Quaternion <StartRotation>k__BackingField;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8078", Offset = "0x6E8078")]
		private Vector3 <StartScale>k__BackingField;

		[Token(Token = "0x170000FF")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0x96E7D8", Offset = "0x96E7D8", VA = "0x96E7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1DB4", Offset = "0x6F1DB4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0x96E7E4", Offset = "0x96E7E4", VA = "0x96E7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1DC4", Offset = "0x6F1DC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public Quaternion StartRotation
		{
			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0x96E7F0", Offset = "0x96E7F0", VA = "0x96E7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1DD4", Offset = "0x6F1DD4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x96E7FC", Offset = "0x96E7FC", VA = "0x96E7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1DE4", Offset = "0x6F1DE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public Vector3 StartScale
		{
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x96E808", Offset = "0x96E808", VA = "0x96E808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1DF4", Offset = "0x6F1DF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x96E814", Offset = "0x96E814", VA = "0x96E814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E04", Offset = "0x6F1E04")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x96E820", Offset = "0x96E820", VA = "0x96E820")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x96E928", Offset = "0x96E928", VA = "0x96E928", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x96E92C", Offset = "0x96E92C", VA = "0x96E92C", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x96EB28", Offset = "0x96EB28", VA = "0x96EB28")]
		public void ToggleHoverType()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x96EBE8", Offset = "0x96EBE8", VA = "0x96EBE8")]
		public MenuCard()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class MenuCardController : MonoBehaviour, IMenuItem
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_cardTarget;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_moveUpOffset;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_moveUpTime;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Ease m_moveUpEasing;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_scaleTime;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_scaleDelay;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_rotationDelay;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_rotationTime;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_moveDelay;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_moveTime;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Ease m_moveEase;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_moveBackDistance;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<MenuCard, Sequence> m_sequences;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MenuCard m_currentCard;

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x96EBF0", Offset = "0x96EBF0", VA = "0x96EBF0", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x96EBF4", Offset = "0x96EBF4", VA = "0x96EBF4", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x96EE10", Offset = "0x96EE10", VA = "0x96EE10")]
		public void Select(MenuCard card)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x96EEF0", Offset = "0x96EEF0", VA = "0x96EEF0")]
		private void ReturnSelect(MenuCard card)
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x96F1F8", Offset = "0x96F1F8", VA = "0x96F1F8")]
		private void MoveSelect(MenuCard card)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x96F594", Offset = "0x96F594", VA = "0x96F594")]
		public MenuCardController()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class MenuOpener : MonoBehaviour
	{
		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_heightDistance;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Menu m_mainMenu;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_grabbableTransform;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8188", Offset = "0x6E8188")]
		[SerializeField]
		private SoundEffect m_openSfx;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundEffect m_closeSfx;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E81E4", Offset = "0x6E81E4")]
		[SerializeField]
		private UnityEvent m_onMenuOpen;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent m_onMenuClose;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Menu[] m_menus;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_defaultScale;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_relativeScale;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_openMenuCount;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_canBeOpened;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_isInitialized;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_defaultRotation;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_cameraEventToken;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_canShowMenu;

		[Token(Token = "0x17000102")]
		public bool IsOpen
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x96F634", Offset = "0x96F634", VA = "0x96F634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x96F644", Offset = "0x96F644", VA = "0x96F644")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x96F94C", Offset = "0x96F94C", VA = "0x96F94C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x96FB28", Offset = "0x96FB28", VA = "0x96FB28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x96FC3C", Offset = "0x96FC3C", VA = "0x96FC3C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x970098", Offset = "0x970098", VA = "0x970098")]
		private void OnFirstPersonCameraEvent(CameraEvents.FirstPersonCameraEvent eventData)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x96FCF4", Offset = "0x96FCF4", VA = "0x96FCF4")]
		public void Close()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x96FEEC", Offset = "0x96FEEC", VA = "0x96FEEC")]
		private void Open()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x9703BC", Offset = "0x9703BC", VA = "0x9703BC")]
		private void OnAfterFadeIn()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x9703D0", Offset = "0x9703D0", VA = "0x9703D0")]
		private void OnGameStarted()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x9703DC", Offset = "0x9703DC", VA = "0x9703DC")]
		private void OnBeforeFadeOut()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x97040C", Offset = "0x97040C", VA = "0x97040C")]
		private void OnMenuClose()
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x97041C", Offset = "0x97041C", VA = "0x97041C")]
		private void OnMenuOpen()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x97042C", Offset = "0x97042C", VA = "0x97042C")]
		private void OnScaleChanged(Vector3 scale)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x9700F0", Offset = "0x9700F0", VA = "0x9700F0")]
		private void SetPositionAndRotation()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x97050C", Offset = "0x97050C", VA = "0x97050C")]
		public MenuOpener()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1E3C", Offset = "0x6E1E3C")]
	public class MeshMenuItem : MonoBehaviour, IRemovableMenuItem, IMenuItem
	{
		[Token(Token = "0x20003D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2CFC", Offset = "0x6E2CFC")]
		private sealed class <DoFadeIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshMenuItem <>4__this;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700022D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600185D")]
				[Address(RVA = "0x9724F4", Offset = "0x9724F4", VA = "0x9724F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600185F")]
				[Address(RVA = "0x972564", Offset = "0x972564", VA = "0x972564", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600185A")]
			[Address(RVA = "0x9721E8", Offset = "0x9721E8", VA = "0x9721E8")]
			[DebuggerHidden]
			public <DoFadeIn>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x600185B")]
			[Address(RVA = "0x972358", Offset = "0x972358", VA = "0x972358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600185C")]
			[Address(RVA = "0x97235C", Offset = "0x97235C", VA = "0x97235C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600185E")]
			[Address(RVA = "0x9724FC", Offset = "0x9724FC", VA = "0x9724FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D0C", Offset = "0x6E2D0C")]
		private sealed class <DoFadeOut>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshMenuItem <>4__this;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700022F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001863")]
				[Address(RVA = "0x972700", Offset = "0x972700", VA = "0x972700", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000230")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001865")]
				[Address(RVA = "0x972770", Offset = "0x972770", VA = "0x972770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001860")]
			[Address(RVA = "0x972214", Offset = "0x972214", VA = "0x972214")]
			[DebuggerHidden]
			public <DoFadeOut>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001861")]
			[Address(RVA = "0x97256C", Offset = "0x97256C", VA = "0x97256C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001862")]
			[Address(RVA = "0x972570", Offset = "0x972570", VA = "0x972570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001864")]
			[Address(RVA = "0x972708", Offset = "0x972708", VA = "0x972708", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AB")]
		private const float PunchInTime = 0.15f;

		[Token(Token = "0x40009AC")]
		private const float PunchOutTime = 0.3f;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8240", Offset = "0x6E8240")]
		[SerializeField]
		private bool m_doScaleOnEnable;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_doScaleDelay;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_fromScale;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_scaleTime;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E82BC", Offset = "0x6E82BC")]
		[SerializeField]
		private string m_colorProp;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_colorPropHash;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer m_renderer;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_scaleTween;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_fadeRoutine;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_defaultColor;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_defaultScale;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_punchScale;

		[Token(Token = "0x14000042")]
		public event Action<IMenuItem> OnMenuItemDestroyed
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x971A4C", Offset = "0x971A4C", VA = "0x971A4C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E14", Offset = "0x6F1E14")]
			add
			{
			}
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x971B38", Offset = "0x971B38", VA = "0x971B38", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1E24", Offset = "0x6F1E24")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x971C24", Offset = "0x971C24", VA = "0x971C24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x971DF0", Offset = "0x971DF0", VA = "0x971DF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x971E54", Offset = "0x971E54", VA = "0x971E54", Slot = "6")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x972030", Offset = "0x972030", VA = "0x972030", Slot = "7")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x971F30", Offset = "0x971F30", VA = "0x971F30")]
		public void PunchScaleFrom(float delay)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x9720F0", Offset = "0x9720F0", VA = "0x9720F0")]
		public void PunchScale()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x971EBC", Offset = "0x971EBC", VA = "0x971EBC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1E34", Offset = "0x6F1E34")]
		private IEnumerator DoFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x97207C", Offset = "0x97207C", VA = "0x97207C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1E98", Offset = "0x6F1E98")]
		private IEnumerator DoFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x972240", Offset = "0x972240", VA = "0x972240")]
		public MeshMenuItem()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x972318", Offset = "0x972318", VA = "0x972318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1EFC", Offset = "0x6F1EFC")]
		private void <PunchScale>b__23_0()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public abstract class MenuSlider : MonoBehaviour
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuSliderHandle m_handle;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8338", Offset = "0x6E8338")]
		[SerializeField]
		private float m_minValue;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_maxValue;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_wholeNumbers;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E83A4", Offset = "0x6E83A4")]
		private bool m_saveNormalizedValue;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_value;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E83F0", Offset = "0x6E83F0")]
		private float <HandleMax>k__BackingField;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E8400", Offset = "0x6E8400")]
		private float <HandleMin>k__BackingField;

		[Token(Token = "0x17000103")]
		public bool WholeNumbers
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x970528", Offset = "0x970528", VA = "0x970528")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public float Value
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x970530", Offset = "0x970530", VA = "0x970530")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000105")]
		public float NormalizedValue
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x97061C", Offset = "0x97061C", VA = "0x97061C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000106")]
		public float StepLength
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x970648", Offset = "0x970648", VA = "0x970648")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000107")]
		protected float HandleMax
		{
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0x970664", Offset = "0x970664", VA = "0x970664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F0C", Offset = "0x6F1F0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0x97066C", Offset = "0x97066C", VA = "0x97066C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F1C", Offset = "0x6F1F1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000108")]
		protected float HandleMin
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0x970674", Offset = "0x970674", VA = "0x970674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F2C", Offset = "0x6F1F2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x97067C", Offset = "0x97067C", VA = "0x97067C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F3C", Offset = "0x6F1F3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x970684", Offset = "0x970684", VA = "0x970684")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x970880", Offset = "0x970880", VA = "0x970880")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x9708C0", Offset = "0x9708C0", VA = "0x9708C0")]
		public float GetValue(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x970A3C", Offset = "0x970A3C", VA = "0x970A3C")]
		public Vector3 GetHandlePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x970B94", Offset = "0x970B94", VA = "0x970B94")]
		public void GetClampedPosition(out bool clamped, ref Vector3 position)
		{
		}

		[Token(Token = "0x6000D54")]
		protected abstract void SetValue(float value);

		[Token(Token = "0x6000D55")]
		protected abstract float GetValue();

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x970C70", Offset = "0x970C70", VA = "0x970C70")]
		protected void ChangeValue(float value)
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x970DD0", Offset = "0x970DD0", VA = "0x970DD0")]
		private void UpdateValue()
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x970E54", Offset = "0x970E54", VA = "0x970E54")]
		protected MenuSlider()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x6E1EA0", Offset = "0x6E1EA0")]
	public class MenuSliderHandle : MonoBehaviour
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuButton m_handleButton;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MenuSlider m_slider;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_valueText;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HapticClip m_hapticClip;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_currentValue;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_pointerPreviousPosition;

		[Token(Token = "0x14000043")]
		public event Action OnHandleReleased
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x970E64", Offset = "0x970E64", VA = "0x970E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F4C", Offset = "0x6F1F4C")]
			add
			{
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x970F50", Offset = "0x970F50", VA = "0x970F50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F5C", Offset = "0x6F1F5C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event Action OnHandleMoved
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x970794", Offset = "0x970794", VA = "0x970794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F6C", Offset = "0x6F1F6C")]
			add
			{
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0x97103C", Offset = "0x97103C", VA = "0x97103C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F7C", Offset = "0x6F1F7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x971128", Offset = "0x971128", VA = "0x971128")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x970CF0", Offset = "0x970CF0", VA = "0x970CF0")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x971300", Offset = "0x971300", VA = "0x971300")]
		private void OnHold(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x971250", Offset = "0x971250", VA = "0x971250")]
		private void SetValue(float value)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x9717EC", Offset = "0x9717EC", VA = "0x9717EC")]
		private void OnRelease(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x971800", Offset = "0x971800", VA = "0x971800")]
		private void OnClick(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x9718CC", Offset = "0x9718CC", VA = "0x9718CC")]
		public MenuSliderHandle()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class MusicVolumeSlider : SettingSlider
	{
		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x972778", Offset = "0x972778", VA = "0x972778", Slot = "7")]
		protected override float GetValue(GameSettings settings)
		{
			return default(float);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x9727A8", Offset = "0x9727A8", VA = "0x9727A8", Slot = "6")]
		protected override void SetValue(GameSettings settings, float value)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x9727E8", Offset = "0x9727E8", VA = "0x9727E8")]
		public MusicVolumeSlider()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public abstract class SettingSlider : MenuSlider
	{
		[Token(Token = "0x6000D67")]
		protected abstract void SetValue(GameSettings settings, float value);

		[Token(Token = "0x6000D68")]
		protected abstract float GetValue(GameSettings settings);

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x972ECC", Offset = "0x972ECC", VA = "0x972ECC", Slot = "4")]
		protected sealed override void SetValue(float value)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x972F54", Offset = "0x972F54", VA = "0x972F54", Slot = "5")]
		protected sealed override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x9727F8", Offset = "0x9727F8", VA = "0x9727F8")]
		protected SettingSlider()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class SfxVolumeSlider : SettingSlider
	{
		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x9730D4", Offset = "0x9730D4", VA = "0x9730D4", Slot = "7")]
		protected override float GetValue(GameSettings settings)
		{
			return default(float);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x973104", Offset = "0x973104", VA = "0x973104", Slot = "6")]
		protected override void SetValue(GameSettings settings, float value)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x973144", Offset = "0x973144", VA = "0x973144")]
		public SfxVolumeSlider()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class TimeScaleSlider : MenuSlider
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x973DF4", Offset = "0x973DF4", VA = "0x973DF4")]
		public void ResetTimeScale()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x973E30", Offset = "0x973E30", VA = "0x973E30", Slot = "5")]
		protected override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x973E38", Offset = "0x973E38", VA = "0x973E38", Slot = "4")]
		protected override void SetValue(float value)
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x973E40", Offset = "0x973E40", VA = "0x973E40")]
		public TimeScaleSlider()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class VOVolumeSlider : SettingSlider
	{
		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x97469C", Offset = "0x97469C", VA = "0x97469C", Slot = "7")]
		protected override float GetValue(GameSettings settings)
		{
			return default(float);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x9746CC", Offset = "0x9746CC", VA = "0x9746CC", Slot = "6")]
		protected override void SetValue(GameSettings settings, float value)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x97470C", Offset = "0x97470C", VA = "0x97470C")]
		public VOVolumeSlider()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x6E1EB4", Offset = "0x6E1EB4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1EB4", Offset = "0x6E1EB4")]
	public class TextMenuItem : MonoBehaviour, IRemovableMenuItem, IMenuItem
	{
		[Token(Token = "0x20003DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D1C", Offset = "0x6E2D1C")]
		private sealed class <FadeText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMenuItem <>4__this;

			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetAlpha;

			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startAlpha>5__2;

			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000231")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001869")]
				[Address(RVA = "0x973D7C", Offset = "0x973D7C", VA = "0x973D7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000232")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600186B")]
				[Address(RVA = "0x973DEC", Offset = "0x973DEC", VA = "0x973DEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001866")]
			[Address(RVA = "0x973828", Offset = "0x973828", VA = "0x973828")]
			[DebuggerHidden]
			public <FadeText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001867")]
			[Address(RVA = "0x973B08", Offset = "0x973B08", VA = "0x973B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001868")]
			[Address(RVA = "0x973B0C", Offset = "0x973B0C", VA = "0x973B0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600186A")]
			[Address(RVA = "0x973D84", Offset = "0x973D84", VA = "0x973D84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D2C", Offset = "0x6E2D2C")]
		private sealed class <FadeCanvas>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMenuItem <>4__this;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetAlpha;

			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startAlpha>5__2;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600186F")]
				[Address(RVA = "0x973A90", Offset = "0x973A90", VA = "0x973A90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001871")]
				[Address(RVA = "0x973B00", Offset = "0x973B00", VA = "0x973B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600186C")]
			[Address(RVA = "0x973854", Offset = "0x973854", VA = "0x973854")]
			[DebuggerHidden]
			public <FadeCanvas>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600186D")]
			[Address(RVA = "0x973890", Offset = "0x973890", VA = "0x973890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600186E")]
			[Address(RVA = "0x973894", Offset = "0x973894", VA = "0x973894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001870")]
			[Address(RVA = "0x973A98", Offset = "0x973A98", VA = "0x973A98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_routine;

		[Token(Token = "0x14000045")]
		public event Action<IMenuItem> OnMenuItemDestroyed
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0x9731C4", Offset = "0x9731C4", VA = "0x9731C4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F8C", Offset = "0x6F1F8C")]
			add
			{
			}
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x9732B0", Offset = "0x9732B0", VA = "0x9732B0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F1F9C", Offset = "0x6F1F9C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x97339C", Offset = "0x97339C", VA = "0x97339C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x9734C4", Offset = "0x9734C4", VA = "0x9734C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x973528", Offset = "0x973528", VA = "0x973528", Slot = "7")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x97376C", Offset = "0x97376C", VA = "0x97376C", Slot = "6")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x9736BC", Offset = "0x9736BC", VA = "0x9736BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F1FAC", Offset = "0x6F1FAC")]
		private IEnumerator FadeText(float delay, float targetAlpha)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x97360C", Offset = "0x97360C", VA = "0x97360C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2010", Offset = "0x6F2010")]
		private IEnumerator FadeCanvas(float delay, float targetAlpha)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x973880", Offset = "0x973880", VA = "0x973880")]
		public TextMenuItem()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class CharacterToggle : MenuToggle
	{
		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		[SerializeField]
		private bool m_value;

		[Token(Token = "0x17000109")]
		public bool Value
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x86C498", Offset = "0x86C498", VA = "0x86C498")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x86C4A0", Offset = "0x86C4A0", VA = "0x86C4A0", Slot = "20")]
		protected override bool GetValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x86C4A8", Offset = "0x86C4A8", VA = "0x86C4A8", Slot = "19")]
		protected override void SetValue(bool value)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x86C4B4", Offset = "0x86C4B4", VA = "0x86C4B4")]
		public CharacterToggle()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public abstract class MenuToggle : MenuButton
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E84D0", Offset = "0x6E84D0")]
		[SerializeField]
		private Image m_onImage;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Image m_offImage;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool m_state;

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x9718D4", Offset = "0x9718D4", VA = "0x9718D4", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x971960", Offset = "0x971960", VA = "0x971960")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6000D85")]
		protected abstract void SetValue(bool value);

		[Token(Token = "0x6000D86")]
		protected abstract bool GetValue();

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x971A04", Offset = "0x971A04", VA = "0x971A04")]
		private void Toggle(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x971994", Offset = "0x971994", VA = "0x971994")]
		private void SetState(bool state)
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x971A44", Offset = "0x971A44", VA = "0x971A44")]
		protected MenuToggle()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class MuteToggle : SettingsToggle
	{
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x972808", Offset = "0x972808", VA = "0x972808", Slot = "21")]
		protected override bool GetValue(GameSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x972838", Offset = "0x972838", VA = "0x972838", Slot = "22")]
		protected override void SetValue(GameSettings settings, bool value)
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x972870", Offset = "0x972870", VA = "0x972870")]
		public MuteToggle()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public abstract class SettingsToggle : MenuToggle
	{
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x972FCC", Offset = "0x972FCC", VA = "0x972FCC", Slot = "20")]
		protected sealed override bool GetValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x973048", Offset = "0x973048", VA = "0x973048", Slot = "19")]
		protected sealed override void SetValue(bool value)
		{
		}

		[Token(Token = "0x6000D8F")]
		protected abstract bool GetValue(GameSettings settings);

		[Token(Token = "0x6000D90")]
		protected abstract void SetValue(GameSettings settings, bool value);

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x972878", Offset = "0x972878", VA = "0x972878")]
		protected SettingsToggle()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class SubtitlesToggle : SettingsToggle
	{
		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x973154", Offset = "0x973154", VA = "0x973154", Slot = "21")]
		protected override bool GetValue(GameSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x973184", Offset = "0x973184", VA = "0x973184", Slot = "22")]
		protected override void SetValue(GameSettings settings, bool value)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x9731BC", Offset = "0x9731BC", VA = "0x9731BC")]
		public SubtitlesToggle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E2")]
	public struct TriggerBox
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Center;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Size;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask LayerMask;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_isIntersecting;

		[Token(Token = "0x14000046")]
		public event Action<PlayerPointer> OnTriggerEnter
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x766050", Offset = "0x766050", VA = "0x766050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2074", Offset = "0x6F2074")]
			add
			{
			}
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x766058", Offset = "0x766058", VA = "0x766058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2084", Offset = "0x6F2084")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event Action<PlayerPointer> OnTriggerExit
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x766060", Offset = "0x766060", VA = "0x766060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2094", Offset = "0x6F2094")]
			add
			{
			}
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0x766068", Offset = "0x766068", VA = "0x766068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F20A4", Offset = "0x6F20A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action<PlayerPointer> OnTriggerStay
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x766070", Offset = "0x766070", VA = "0x766070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F20B4", Offset = "0x6F20B4")]
			add
			{
			}
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0x766078", Offset = "0x766078", VA = "0x766078")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F20C4", Offset = "0x6F20C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x766080", Offset = "0x766080", VA = "0x766080")]
		public void Update(Vector3 position, Quaternion rotation, Vector3 scale, PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x766098", Offset = "0x766098", VA = "0x766098")]
		public void ForceExit(PlayerPointer pointer)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class ConditionalDestroy : MonoBehaviour
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlatformType m_destroyIfPlatform;

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x86C4C4", Offset = "0x86C4C4", VA = "0x86C4C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x86C590", Offset = "0x86C590", VA = "0x86C590")]
		public ConditionalDestroy()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Dialogues
{
	[Token(Token = "0x20001E4")]
	public class DialogueButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundEffectPlayer m_pointerPresentSoundEffectPlayer;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E858C", Offset = "0x6E858C")]
		[SerializeField]
		private Image m_pointerPresentBackground;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isPointerPresent;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_timer;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISet<PlayerPointer> m_presentPointers;

		[Token(Token = "0x40009E5")]
		private const float PointTime = 1.5f;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E85E8", Offset = "0x6E85E8")]
		private int <OptionIndex>k__BackingField;

		[Token(Token = "0x1700010A")]
		public int OptionIndex
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x86DC3C", Offset = "0x86DC3C", VA = "0x86DC3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F20D4", Offset = "0x6F20D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x86DC44", Offset = "0x86DC44", VA = "0x86DC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F20E4", Offset = "0x6F20E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x86DC4C", Offset = "0x86DC4C", VA = "0x86DC4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x86DE08", Offset = "0x86DE08", VA = "0x86DE08", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x86DE0C", Offset = "0x86DE0C", VA = "0x86DE0C")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x86DF6C", Offset = "0x86DF6C", VA = "0x86DF6C")]
		public void EnableButton(string optionTerm, int index)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x86E04C", Offset = "0x86E04C", VA = "0x86E04C")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x86DF10", Offset = "0x86DF10", VA = "0x86DF10")]
		private void DisableTouchEffect()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x86E084", Offset = "0x86E084", VA = "0x86E084")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x86E24C", Offset = "0x86E24C", VA = "0x86E24C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x86DD84", Offset = "0x86DD84", VA = "0x86DD84")]
		private void ButtonClick()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x86E46C", Offset = "0x86E46C", VA = "0x86E46C")]
		public DialogueButton()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class DialogueChoice : MonoBehaviour
	{
		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_parameterIsSpawned;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int m_parameterChosenTrigger;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_parameterOpacity;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int m_disabledStateName;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int m_materialColorPropertyID;

		[Token(Token = "0x40009EC")]
		private const int MeshTypeCount = 3;

		[Token(Token = "0x40009ED")]
		private const float TextFadeDelay = 0.5f;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PointerInteractableHold m_pointerInteractable;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8628", Offset = "0x6E8628")]
		[SerializeField]
		private TextMenuItem m_textFader;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8684", Offset = "0x6E8684")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer m_currentRenderer;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DialogueChoiceManager m_dialogueChoiceManager;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_index;

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x86E4DC", Offset = "0x86E4DC", VA = "0x86E4DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x86E5B0", Offset = "0x86E5B0", VA = "0x86E5B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x86E70C", Offset = "0x86E70C", VA = "0x86E70C")]
		public void InitilizeChoice(DialogueChoiceManager manager)
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x86E738", Offset = "0x86E738", VA = "0x86E738")]
		public void SetMeshRenderType(DialogueChoicePosition position)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0x86E844", Offset = "0x86E844", VA = "0x86E844")]
		public void StartSpawn(float delayTime)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x86EAE8", Offset = "0x86EAE8", VA = "0x86EAE8")]
		public void StartDespawn(float delayTime)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x86EC64", Offset = "0x86EC64", VA = "0x86EC64")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x86EC9C", Offset = "0x86EC9C", VA = "0x86EC9C")]
		public void Choose()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x86EFD0", Offset = "0x86EFD0", VA = "0x86EFD0")]
		private void SetSpawnParameters()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x86F060", Offset = "0x86F060", VA = "0x86F060")]
		public void SetChoiceIndex(int index)
		{
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x86F068", Offset = "0x86F068", VA = "0x86F068")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x86F0EC", Offset = "0x86F0EC", VA = "0x86F0EC")]
		private void SetDespawnParameters()
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x86F128", Offset = "0x86F128", VA = "0x86F128")]
		private void OnPointerExit()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x86F1C0", Offset = "0x86F1C0", VA = "0x86F1C0")]
		private void OnPointerEnter()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x86F270", Offset = "0x86F270", VA = "0x86F270")]
		public DialogueChoice()
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x86F348", Offset = "0x86F348", VA = "0x86F348")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F20F4", Offset = "0x6F20F4")]
		private IPromise <StartSpawn>b__21_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20001E6")]
	public class DialogueChoiceManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003DC")]
		public struct LayoutPosition
		{
			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform LayoutTransform;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DialogueChoicePosition RendererType;
		}

		[Token(Token = "0x20003DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D3C", Offset = "0x6E2D3C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueChoice choice;

			[Token(Token = "0x6001872")]
			[Address(RVA = "0x86FB24", Offset = "0x86FB24", VA = "0x86FB24")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001873")]
			[Address(RVA = "0x86FBB8", Offset = "0x86FBB8", VA = "0x86FBB8")]
			internal void <DespawnAll>b__0()
			{
			}
		}

		[Token(Token = "0x40009F8")]
		private const int DialogueChoicePoolSize = 4;

		[Token(Token = "0x40009F9")]
		private const float DisableAnimationTime = 0.5f;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E86D0", Offset = "0x6E86D0")]
		[SerializeField]
		private DialogueChoice m_dialogueChoicePrefab;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E871C", Offset = "0x6E871C")]
		[SerializeField]
		private LayoutPosition[] m_twoChoiceLayout;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayoutPosition[] m_threeChoiceLayout;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LayoutPosition[] m_fourChoiceLayout;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8788", Offset = "0x6E8788")]
		[SerializeField]
		private float m_spawnDelayIncrement;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_despawnDelayIncrement;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogueChoice[] m_dialogueChoicePool;

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x86F47C", Offset = "0x86F47C", VA = "0x86F47C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x86F6A0", Offset = "0x86F6A0", VA = "0x86F6A0")]
		public void SpawnTwoChoiceLayout(string[] optionTitles)
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x86FAFC", Offset = "0x86FAFC", VA = "0x86FAFC")]
		public void SpawnThreeChoiceLayout(string[] optionTitles)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x86FB10", Offset = "0x86FB10", VA = "0x86FB10")]
		public void SpawnFourChoiceLayout(string[] optionTitles)
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x86ED8C", Offset = "0x86ED8C", VA = "0x86ED8C")]
		public void DespawnAll()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x86F6B4", Offset = "0x86F6B4", VA = "0x86F6B4")]
		private void SpawnLayout(LayoutPosition[] layoutPositions, string[] optionTitles)
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x86FB2C", Offset = "0x86FB2C", VA = "0x86FB2C")]
		public DialogueChoiceManager()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public enum DialogueChoicePosition
	{
		[Token(Token = "0x4000A02")]
		Left,
		[Token(Token = "0x4000A03")]
		Center,
		[Token(Token = "0x4000A04")]
		Right,
		[Token(Token = "0x4000A05")]
		Disabled
	}
	[Token(Token = "0x20001E8")]
	public class DialogueUI : MonoBehaviour
	{
		[Token(Token = "0x20003DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D4C", Offset = "0x6E2D4C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueUI <>4__this;

			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool showOnRightSide;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite portrait;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string subtitleTerm;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int newIndex;

			[Token(Token = "0x6001874")]
			[Address(RVA = "0x8708E8", Offset = "0x8708E8", VA = "0x8708E8")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6001875")]
			[Address(RVA = "0x870C04", Offset = "0x870C04", VA = "0x870C04")]
			internal void <UpdateSubtitle>b__0()
			{
			}
		}

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_isScrollSpawnedParameter;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_portraitDisplayedParameter;

		[Token(Token = "0x4000A08")]
		private const float PortraitDisappearTime = 0.5f;

		[Token(Token = "0x4000A09")]
		private const float ScrollAppearTime = 1f;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E87E4", Offset = "0x6E87E4")]
		[SerializeField]
		private DialogueChoiceManager m_choiceManager;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8830", Offset = "0x6E8830")]
		[SerializeField]
		private Animator m_dialogueScrollAnimator;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E887C", Offset = "0x6E887C")]
		[SerializeField]
		private float m_optionsForwardMultiplier;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_optionsDownMultiplier;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E88D8", Offset = "0x6E88D8")]
		[SerializeField]
		private Localize m_subtitleLocalize;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_subtitleText;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMenuItem m_textFader;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8944", Offset = "0x6E8944")]
		[SerializeField]
		private Image m_npcPortrait;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image m_characterPortrait;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E89A0", Offset = "0x6E89A0")]
		[SerializeField]
		private SoundEffect m_showSfx;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SoundEffect m_hideSfx;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Image m_activePortait;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform m_cameraTransform;

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x86FBE8", Offset = "0x86FBE8", VA = "0x86FBE8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x86FF4C", Offset = "0x86FF4C", VA = "0x86FF4C")]
		public void DisableDialogue()
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x870024", Offset = "0x870024", VA = "0x870024")]
		public void ShowOptions(string[] optionTitles)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x8702DC", Offset = "0x8702DC", VA = "0x8702DC")]
		public void PlaceSubtitles(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x870598", Offset = "0x870598", VA = "0x870598")]
		public void UpdateSubtitle(bool showOnRightSide, Sprite portrait, string subtitleTerm)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x8708F0", Offset = "0x8708F0", VA = "0x8708F0")]
		private void UpdatePortrait(bool showOnRightSide, Sprite portrait, string subtitleTerm, int newIndex)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x86FD30", Offset = "0x86FD30", VA = "0x86FD30")]
		private void ClearSubtitles()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x8709E4", Offset = "0x8709E4", VA = "0x8709E4")]
		private void SetPortraitActive(Image portrait, Sprite sprite)
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x870A68", Offset = "0x870A68", VA = "0x870A68")]
		private void DisableActivePortrait()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x870B1C", Offset = "0x870B1C", VA = "0x870B1C")]
		public DialogueUI()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x870BB8", Offset = "0x870BB8", VA = "0x870BB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2104", Offset = "0x6F2104")]
		private void <ClearSubtitles>b__23_0()
		{
		}
	}
}
namespace Cortopia.Scripts.Inventories
{
	[Serializable]
	[Token(Token = "0x20001E9")]
	public class InventoryItem : SaveObject
	{
		[Serializable]
		[Token(Token = "0x20003DF")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InventoryItemState State;

			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SavableTransform Transform;

			[Token(Token = "0x6001876")]
			[Address(RVA = "0x8F1F9C", Offset = "0x8F1F9C", VA = "0x8F1F9C")]
			public SaveData(InventoryItemState state, SavableTransform transform)
			{
			}
		}

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected InventoryItemData m_itemData;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_toggleMeshOnPickup;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_toggleMeshOnLoad;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8A3C", Offset = "0x6E8A3C")]
		[SerializeField]
		private SoundEffect m_overrideSoundEffect;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8A88", Offset = "0x6E8A88")]
		[SerializeField]
		private UnityEvent m_onPickup;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SaveData m_saveData;

		[Token(Token = "0x1700010B")]
		protected InventoryItemState CurrentState
		{
			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x8F1640", Offset = "0x8F1640", VA = "0x8F1640")]
			get
			{
				return default(InventoryItemState);
			}
			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x8F166C", Offset = "0x8F166C", VA = "0x8F166C")]
			set
			{
			}
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x8F169C", Offset = "0x8F169C", VA = "0x8F169C", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x8F1998", Offset = "0x8F1998", VA = "0x8F1998", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x8F1A8C", Offset = "0x8F1A8C", VA = "0x8F1A8C", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x8F1C3C", Offset = "0x8F1C3C", VA = "0x8F1C3C")]
		public void SaveTransform()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x8F1C94", Offset = "0x8F1C94", VA = "0x8F1C94", Slot = "11")]
		public virtual void Pickup()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x8F1EB8", Offset = "0x8F1EB8", VA = "0x8F1EB8")]
		public void Drop()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x8F1C04", Offset = "0x8F1C04", VA = "0x8F1C04")]
		private void ToggleMeshEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x8F1D80", Offset = "0x8F1D80", VA = "0x8F1D80")]
		private void PlayGrabSoundEffect()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x8F1840", Offset = "0x8F1840", VA = "0x8F1840")]
		private SaveData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0x8F1FD8", Offset = "0x8F1FD8", VA = "0x8F1FD8")]
		public InventoryItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E1F2C", Offset = "0x6E1F2C")]
	public class InventoryItemData : ScriptableObject
	{
		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_itemID;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_allowDuplicates;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_instanceGuid;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private RoomType m_instanceRoom;

		[Token(Token = "0x1700010C")]
		public int ItemID
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x8F18C4", Offset = "0x8F18C4", VA = "0x8F18C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010D")]
		public bool AllowDuplicates
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x8F18CC", Offset = "0x8F18CC", VA = "0x8F18CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public string InstanceGuid
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x8F2048", Offset = "0x8F2048", VA = "0x8F2048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		public RoomType InstanceRoom
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x8F2050", Offset = "0x8F2050", VA = "0x8F2050")]
			get
			{
				return default(RoomType);
			}
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x8F2058", Offset = "0x8F2058", VA = "0x8F2058")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x8F18D4", Offset = "0x8F18D4", VA = "0x8F18D4")]
		public static InventoryItemData CreateInstance(int itemID, bool allowDuplicates, string instanceGuid, RoomType roomType)
		{
			return null;
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x8F209C", Offset = "0x8F209C", VA = "0x8F209C")]
		public InventoryItemData()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public enum InventoryItemState
	{
		[Token(Token = "0x4000A23")]
		NotFound,
		[Token(Token = "0x4000A24")]
		Found,
		[Token(Token = "0x4000A25")]
		Disabled
	}
	[Token(Token = "0x20001EC")]
	public class InventoryUpdateListener : RoomBehaviour
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_checkConditionOnInitialize;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool m_checkConditionOnInventoryUpdate;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_disableOnConditionMet;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8B94", Offset = "0x6E8B94")]
		[SerializeField]
		private InventoryCondition[] m_conditions;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8BE0", Offset = "0x6E8BE0")]
		[SerializeField]
		private CortopiaEventType m_conditionMetEventType;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_onConditionMet;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent m_onConditionMetUnityEvent;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CortopiaEventType m_conditionNotMetEventType;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScriptableEvent m_onConditionNotMet;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onConditionNotMetUnityEvent;

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x8F20FC", Offset = "0x8F20FC", VA = "0x8F20FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x8F21D8", Offset = "0x8F21D8", VA = "0x8F21D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x8F22B4", Offset = "0x8F22B4", VA = "0x8F22B4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x8F22C4", Offset = "0x8F22C4", VA = "0x8F22C4")]
		public void CheckConditions()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x8F25D0", Offset = "0x8F25D0", VA = "0x8F25D0")]
		private void OnInventoryUpdated(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x8F2490", Offset = "0x8F2490", VA = "0x8F2490")]
		private void ConditionMet()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x8F2364", Offset = "0x8F2364", VA = "0x8F2364")]
		private void ConditionNotMet()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x8F2688", Offset = "0x8F2688", VA = "0x8F2688")]
		private bool IsApplicationPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x8F2690", Offset = "0x8F2690", VA = "0x8F2690")]
		public InventoryUpdateListener()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class InvitationAchievements : MonoBehaviour
	{
		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InvitationsHandler m_invitationsHandler;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Achievement m_firstFoundAchievement;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IncrementalAchievement[] m_invitationAchievements;

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x8F2744", Offset = "0x8F2744", VA = "0x8F2744")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x8F28BC", Offset = "0x8F28BC", VA = "0x8F28BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x8F2A34", Offset = "0x8F2A34", VA = "0x8F2A34")]
		private void OnInvitationFound()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x8F2A38", Offset = "0x8F2A38", VA = "0x8F2A38")]
		public InvitationAchievements()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EE")]
	public class InvitationsDictionary : Dictionary<RoomType, InvitationGuids>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<RoomType> m_keys;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<InvitationGuids> m_values;

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x8F30E8", Offset = "0x8F30E8", VA = "0x8F30E8", Slot = "43")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x8F32E0", Offset = "0x8F32E0", VA = "0x8F32E0", Slot = "44")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x8F3518", Offset = "0x8F3518", VA = "0x8F3518")]
		public InvitationsDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EF")]
	public class InvitationGuids
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> Guids;

		[Token(Token = "0x17000110")]
		public int Count
		{
			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x8F2A98", Offset = "0x8F2A98", VA = "0x8F2A98")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x8F2AF8", Offset = "0x8F2AF8", VA = "0x8F2AF8")]
		public InvitationGuids(string guid)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x8F2B9C", Offset = "0x8F2B9C", VA = "0x8F2B9C")]
		public InvitationGuids(string[] guids)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class InvitationsBiomeDictionary : Dictionary<BiomeType, int>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<BiomeType> m_keys;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<int> m_values;

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x8F2C20", Offset = "0x8F2C20", VA = "0x8F2C20", Slot = "43")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x8F2E10", Offset = "0x8F2E10", VA = "0x8F2E10", Slot = "44")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x8F3048", Offset = "0x8F3048", VA = "0x8F3048")]
		public InvitationsBiomeDictionary()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class InvitationsHandler : ScriptableObject
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitationsDictionary Invitations;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InvitationsBiomeDictionary InvitationsPerBiome;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IntVariable m_invitationsFoundVariable;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IntVariable m_invitationsTotalVariable;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InvitationsDictionary m_foundInvitations;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InvitationGuids m_filterGuids;

		[Token(Token = "0x17000111")]
		public IntVariable InvitationsTotalVariable
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x8F35B8", Offset = "0x8F35B8", VA = "0x8F35B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000049")]
		public event Action OnInvitationFound
		{
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x8F27D0", Offset = "0x8F27D0", VA = "0x8F27D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2114", Offset = "0x6F2114")]
			add
			{
			}
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x8F2948", Offset = "0x8F2948", VA = "0x8F2948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2124", Offset = "0x6F2124")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x8F35C0", Offset = "0x8F35C0", VA = "0x8F35C0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F2134", Offset = "0x6F2134")]
		public void OnExitPlayMode()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x8F35C4", Offset = "0x8F35C4", VA = "0x8F35C4")]
		public bool TryAddInvitation(string instanceGuid, RoomType roomType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x8F3990", Offset = "0x8F3990", VA = "0x8F3990")]
		public bool UpdateInvitationsPerBiome()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x8F3CE4", Offset = "0x8F3CE4", VA = "0x8F3CE4")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x8F382C", Offset = "0x8F382C", VA = "0x8F382C")]
		public int GetCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x8F3D44", Offset = "0x8F3D44", VA = "0x8F3D44")]
		public int GetCount(RoomType roomType)
		{
			return default(int);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x8EFB40", Offset = "0x8EFB40", VA = "0x8EFB40")]
		public int GetCount(BiomeType biomeType)
		{
			return default(int);
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x8E9968", Offset = "0x8E9968", VA = "0x8E9968")]
		public int GetFoundCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x8F3DEC", Offset = "0x8F3DEC", VA = "0x8F3DEC")]
		public int GetFoundCount(RoomType roomType)
		{
			return default(int);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x8F0A74", Offset = "0x8F0A74", VA = "0x8F0A74")]
		public int GetFoundCount(BiomeType biomeType)
		{
			return default(int);
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x8F3E94", Offset = "0x8F3E94", VA = "0x8F3E94")]
		public void SetFound(string instanceGuid)
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x8F4208", Offset = "0x8F4208", VA = "0x8F4208")]
		public void Serialize(ref InventoryManager.SaveData saveData)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x8F4444", Offset = "0x8F4444", VA = "0x8F4444")]
		public void Deserialize(InventoryManager.SaveData saveData)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x8F3F04", Offset = "0x8F3F04", VA = "0x8F3F04")]
		private void InternalSetFound(string instanceGuid)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x8F452C", Offset = "0x8F452C", VA = "0x8F452C")]
		public InvitationsHandler()
		{
		}
	}
}
namespace Cortopia.Scripts.Inventories.Items
{
	[Token(Token = "0x20001F2")]
	public class Butterfly : InventoryItem
	{
		[Token(Token = "0x20003E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D5C", Offset = "0x6E2D5C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Butterfly <>4__this;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioMixerGroup endAudioMixerGroup;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onPathCompleted;

			[Token(Token = "0x6001877")]
			[Address(RVA = "0x8F4DF8", Offset = "0x8F4DF8", VA = "0x8F4DF8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001878")]
			[Address(RVA = "0x8F5114", Offset = "0x8F5114", VA = "0x8F5114")]
			internal void <StartSplineTraversal>b__0()
			{
			}
		}

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8D1C", Offset = "0x6E8D1C")]
		[SerializeField]
		private ButterflyAnimation m_butterflyAnimation;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BezierSpline m_pickUpSpline;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ParticleSystem m_flyParticles;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_pointerInteraction;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8D98", Offset = "0x6E8D98")]
		[SerializeField]
		private AudioMixerGroup m_flyMixerGroup;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioMixerGroup m_pickupMixerGroup;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SoundEffectPlayer m_idleSfxPlayer;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource m_flyAudioSource;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<AudioSource> m_audioSources;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IDictionary<string, object> m_analyticsData;

		[Token(Token = "0x17000112")]
		public ButterflyAnimation ButterflyAnimation
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x8F45C8", Offset = "0x8F45C8", VA = "0x8F45C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x8F45D0", Offset = "0x8F45D0", VA = "0x8F45D0", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x8F46FC", Offset = "0x8F46FC", VA = "0x8F46FC", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x8F4A78", Offset = "0x8F4A78", VA = "0x8F4A78")]
		public void PickupButterfly()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x8F4A7C", Offset = "0x8F4A7C", VA = "0x8F4A7C")]
		public void PickupButterfly(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x8F4B8C", Offset = "0x8F4B8C", VA = "0x8F4B8C")]
		public void StartSplineTraversal(InventoryItemState state, BezierSpline spline, AudioMixerGroup endAudioMixerGroup, Action onPathCompleted)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x8F4604", Offset = "0x8F4604", VA = "0x8F4604")]
		public void SetPointerInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x8F4978", Offset = "0x8F4978", VA = "0x8F4978")]
		private void PickupTraversalCompleted(AudioMixerGroup endAudioMixerGroup, Action customCompletedEvent)
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x8F463C", Offset = "0x8F463C", VA = "0x8F463C")]
		private void SetFlyParticlesActive(bool active)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x8F4E00", Offset = "0x8F4E00", VA = "0x8F4E00")]
		private void SetAudioMixerGroup(AudioMixerGroup audioMixerGroup)
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x8F4F30", Offset = "0x8F4F30", VA = "0x8F4F30")]
		public Butterfly()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x8F4FCC", Offset = "0x8F4FCC", VA = "0x8F4FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F216C", Offset = "0x6F216C")]
		private void <PickupButterfly>b__15_0()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class Invitation : InventoryItem
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8E24", Offset = "0x6E8E24")]
		[SerializeField]
		private float m_tweenDuration;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_usePickupJump;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_jumpForce;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_numberOfJumps;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent m_onTweenCompleted;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E8EB0", Offset = "0x6E8EB0")]
		[SerializeField]
		private int m_roomSortIndex;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Sequence m_pickupSequence;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IDictionary<string, object> m_analyticsData;

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x8F5154", Offset = "0x8F5154", VA = "0x8F5154")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x8F5174", Offset = "0x8F5174", VA = "0x8F5174", Slot = "11")]
		public override void Pickup()
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x8F5288", Offset = "0x8F5288", VA = "0x8F5288")]
		public void ReleaseInvitation(Transform newParent)
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x8F54DC", Offset = "0x8F54DC", VA = "0x8F54DC")]
		private void SetFallSequence()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x8F5374", Offset = "0x8F5374", VA = "0x8F5374")]
		private void SetJumpSequence()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x8F563C", Offset = "0x8F563C", VA = "0x8F563C")]
		public Invitation()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x8F56E8", Offset = "0x8F56E8", VA = "0x8F56E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F217C", Offset = "0x6F217C")]
		private void <Pickup>b__9_0()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x8F5848", Offset = "0x8F5848", VA = "0x8F5848")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F218C", Offset = "0x6F218C")]
		private void <ReleaseInvitation>b__10_0()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class RoastedRabbit : InventoryItem
	{
		[Token(Token = "0x20003E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D6C", Offset = "0x6E2D6C")]
		private sealed class <JumpToGround>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoastedRabbit <>4__this;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600187C")]
				[Address(RVA = "0x8F5B40", Offset = "0x8F5B40", VA = "0x8F5B40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600187E")]
				[Address(RVA = "0x8F5BB0", Offset = "0x8F5BB0", VA = "0x8F5BB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001879")]
			[Address(RVA = "0x8F5950", Offset = "0x8F5950", VA = "0x8F5950")]
			[DebuggerHidden]
			public <JumpToGround>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600187A")]
			[Address(RVA = "0x8F5990", Offset = "0x8F5990", VA = "0x8F5990", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600187B")]
			[Address(RVA = "0x8F5994", Offset = "0x8F5994", VA = "0x8F5994", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600187D")]
			[Address(RVA = "0x8F5B48", Offset = "0x8F5B48", VA = "0x8F5B48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_jumpPower;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int m_numberOfJumps;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_tweenDuration;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_tweenDelay;

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x8F5880", Offset = "0x8F5880", VA = "0x8F5880")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x8F5888", Offset = "0x8F5888", VA = "0x8F5888")]
		public void EnableRoastedRabbit()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x8F58DC", Offset = "0x8F58DC", VA = "0x8F58DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F219C", Offset = "0x6F219C")]
		private IEnumerator JumpToGround()
		{
			return null;
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x8F597C", Offset = "0x8F597C", VA = "0x8F597C")]
		public RoastedRabbit()
		{
		}
	}
}
namespace Cortopia.Scripts.Grab
{
	[Token(Token = "0x20001F5")]
	public enum CoordinateSystem
	{
		[Token(Token = "0x4000A56")]
		World,
		[Token(Token = "0x4000A57")]
		Local
	}
	[Token(Token = "0x20001F6")]
	public enum GrabHandle
	{
		[Token(Token = "0x4000A59")]
		Primary,
		[Token(Token = "0x4000A5A")]
		Secondary
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E1F9C", Offset = "0x6E1F9C")]
	public class Grabbable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E2")]
		public class GrabEvent : UnityEvent<Grabber>
		{
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x8D8754", Offset = "0x8D8754", VA = "0x8D8754")]
			public GrabEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20003E3")]
		public class DetailedGrabEvent : UnityEvent<Grabber, Vector3, Vector3>
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x8D8704", Offset = "0x8D8704", VA = "0x8D8704")]
			public DetailedGrabEvent()
			{
			}
		}

		[Token(Token = "0x4000A5B")]
		private const string InteractableShaderName = "Cortopia/Interactable";

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_fadeProperty;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_panProperty;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int sm_rimProperty;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_lockXPosition;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_lockYPosition;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_lockZPosition;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_minPositionRange;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_maxPositionRange;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private CoordinateSystem m_positionCoordinateSystem;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_lockRotation;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x6E8FAC", Offset = "0x6E8FAC")]
		private Transform m_grabTransform;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_allowDualHandGrab;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool m_applyMotionWhenReleased;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool m_hasBreakDistance;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_breakDistance;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_allowAnyPointGrab;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool m_lockHandAtGrabTransform;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GrabEvent m_onGrabBegin;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GrabEvent m_onGrab;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private DetailedGrabEvent m_onGrabEnd;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HapticClip m_onGrabHapticClip;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private HapticClip m_onTickHapticClip;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_hapticTickDistanceSqr;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material m_material;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion m_grabBeginRotation;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_lastAngle;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Grabber m_activeGrabber;

		[Token(Token = "0x4000A7B")]
		private const float VelocityScale = 5f;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E90E8", Offset = "0x6E90E8")]
		private bool <IsLocked>k__BackingField;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E90F8", Offset = "0x6E90F8")]
		private bool <IgnorePositionUpdates>k__BackingField;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9108", Offset = "0x6E9108")]
		private bool <IgnoreRotationUpdates>k__BackingField;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9118", Offset = "0x6E9118")]
		private Vector3 <TargetPosition>k__BackingField;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9128", Offset = "0x6E9128")]
		private Quaternion <TargetRotation>k__BackingField;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9138", Offset = "0x6E9138")]
		private float <BreakDistanceSqr>k__BackingField;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 m_originalGrabPosition;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Quaternion m_originalGrabRotation;

		[Token(Token = "0x17000113")]
		public bool IsLocked
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0x8948D8", Offset = "0x8948D8", VA = "0x8948D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2200", Offset = "0x6F2200")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x8948E0", Offset = "0x8948E0", VA = "0x8948E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2210", Offset = "0x6F2210")]
			private set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public Vector3 MinPositionRange
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0x894664", Offset = "0x894664", VA = "0x894664")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000115")]
		public Vector3 MaxPositionRange
		{
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x894658", Offset = "0x894658", VA = "0x894658")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000116")]
		public bool IgnorePositionUpdates
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x8948EC", Offset = "0x8948EC", VA = "0x8948EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2220", Offset = "0x6F2220")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x8948F4", Offset = "0x8948F4", VA = "0x8948F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2230", Offset = "0x6F2230")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public bool IgnoreRotationUpdates
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0x894900", Offset = "0x894900", VA = "0x894900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2240", Offset = "0x6F2240")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x894908", Offset = "0x894908", VA = "0x894908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2250", Offset = "0x6F2250")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public Vector3 TargetPosition
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0x894914", Offset = "0x894914", VA = "0x894914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2260", Offset = "0x6F2260")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x894920", Offset = "0x894920", VA = "0x894920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2270", Offset = "0x6F2270")]
			private set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public Quaternion TargetRotation
		{
			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x89492C", Offset = "0x89492C", VA = "0x89492C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2280", Offset = "0x6F2280")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x894938", Offset = "0x894938", VA = "0x894938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2290", Offset = "0x6F2290")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public bool HasBreakDistance
		{
			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0x894944", Offset = "0x894944", VA = "0x894944")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011B")]
		public float BreakDistanceSqr
		{
			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x89494C", Offset = "0x89494C", VA = "0x89494C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F22A0", Offset = "0x6F22A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0x894954", Offset = "0x894954", VA = "0x894954")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F22B0", Offset = "0x6F22B0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public Vector3 GrabPosition
		{
			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x89495C", Offset = "0x89495C", VA = "0x89495C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700011D")]
		public Quaternion GrabRotation
		{
			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x89498C", Offset = "0x89498C", VA = "0x89498C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700011E")]
		public Transform GrabTransform
		{
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x8949BC", Offset = "0x8949BC", VA = "0x8949BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public bool LockHandWhileGrabbing
		{
			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x8949C4", Offset = "0x8949C4", VA = "0x8949C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000120")]
		public Grabber Grabber
		{
			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x8949F4", Offset = "0x8949F4", VA = "0x8949F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x894A78", Offset = "0x894A78", VA = "0x894A78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x894A80", Offset = "0x894A80", VA = "0x894A80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x894ABC", Offset = "0x894ABC", VA = "0x894ABC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x894CE0", Offset = "0x894CE0", VA = "0x894CE0")]
		public void DestroyGrabbable()
		{
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x894D78", Offset = "0x894D78", VA = "0x894D78")]
		public void AddGrabBeginListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x894DE8", Offset = "0x894DE8", VA = "0x894DE8")]
		public void RemoveGrabBeginListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x894E58", Offset = "0x894E58", VA = "0x894E58")]
		public void AddGrabListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x894EC8", Offset = "0x894EC8", VA = "0x894EC8")]
		public void RemoveGrabListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x894F38", Offset = "0x894F38", VA = "0x894F38")]
		public void AddGrabEndListener(UnityAction<Grabber, Vector3, Vector3> action)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x894FA8", Offset = "0x894FA8", VA = "0x894FA8")]
		public void RemoveGrabEndListener(UnityAction<Grabber, Vector3, Vector3> action)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x895018", Offset = "0x895018", VA = "0x895018")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x8952C0", Offset = "0x8952C0", VA = "0x8952C0")]
		public void SetLocked(bool isLocked)
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x89530C", Offset = "0x89530C", VA = "0x89530C")]
		public void SetBreak(bool hasBreakDistance, float breakDistance)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x895324", Offset = "0x895324", VA = "0x895324")]
		public void BeginGrab(Grabber activatedGrabber)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x895618", Offset = "0x895618", VA = "0x895618")]
		public void Grab(Grabber activatedGrabber)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x896080", Offset = "0x896080", VA = "0x896080")]
		public void EndGrab(Grabber activatedGrabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x8963BC", Offset = "0x8963BC", VA = "0x8963BC")]
		public void SetApplyMotionWhenReleased(bool value)
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x8963C8", Offset = "0x8963C8", VA = "0x8963C8")]
		public void SetPositionLimits(Vector3 minLimits, Vector3 maxLimits)
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x8963D8", Offset = "0x8963D8", VA = "0x8963D8")]
		public void SetPositionLocked(bool shouldLockAllAxis)
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x8963EC", Offset = "0x8963EC", VA = "0x8963EC")]
		public void SetRotationLocked(bool setLocked)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x895720", Offset = "0x895720", VA = "0x895720")]
		private void TryRotateToRotation(Quaternion handRotation)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x8958E0", Offset = "0x8958E0", VA = "0x8958E0")]
		private void TryMoveToPosition(Vector3 handPosition)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x895EBC", Offset = "0x895EBC", VA = "0x895EBC")]
		private void UpdateHaptic(Grabber grabber)
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x8963F8", Offset = "0x8963F8", VA = "0x8963F8")]
		public void SetHoverMaterial(bool isHovering)
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x89650C", Offset = "0x89650C", VA = "0x89650C")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x4000A84")]
		private const int MaxNodes = 20;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sm_grabbableLayer;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9148", Offset = "0x6E9148")]
		[SerializeField]
		private bool m_hideTrackerPointOnHover;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_useGrabShape;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_enableGrabParticles;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider[] m_grabVolumes;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_handCenter;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E91D4", Offset = "0x6E91D4")]
		[SerializeField]
		private GameObject m_pointShape;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer m_grabShape;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_distanceToCenterOfHand;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_shouldReleaseGrabbable;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool m_isGrabbing;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool m_isGrabVolumesActive;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDictionary<Grabbable, int> m_grabbables;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LinkedList<PositionRotation> m_previousPositionAndRotations;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PositionRotation m_deltaPositionAndRotation;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform m_grabShapeOriginalParent;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9250", Offset = "0x6E9250")]
		private Vector3 <PreviousPosition>k__BackingField;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9260", Offset = "0x6E9260")]
		private Vector3 <GrabBeginFoward>k__BackingField;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9270", Offset = "0x6E9270")]
		private PointerType <PointerType>k__BackingField;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9280", Offset = "0x6E9280")]
		private Grabbable <HoveredGrabbable>k__BackingField;

		[Token(Token = "0x17000122")]
		public Vector3 PreviousPosition
		{
			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x8D87A4", Offset = "0x8D87A4", VA = "0x8D87A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F22C0", Offset = "0x6F22C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E50")]
			[Address(RVA = "0x8D87B0", Offset = "0x8D87B0", VA = "0x8D87B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F22D0", Offset = "0x6F22D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public Vector3 GrabBeginFoward
		{
			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x8D87BC", Offset = "0x8D87BC", VA = "0x8D87BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F22E0", Offset = "0x6F22E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x8D87C8", Offset = "0x8D87C8", VA = "0x8D87C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F22F0", Offset = "0x6F22F0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public PointerType PointerType
		{
			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x8D87D4", Offset = "0x8D87D4", VA = "0x8D87D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2300", Offset = "0x6F2300")]
			get
			{
				return default(PointerType);
			}
			[Token(Token = "0x6000E54")]
			[Address(RVA = "0x8D87DC", Offset = "0x8D87DC", VA = "0x8D87DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2310", Offset = "0x6F2310")]
			private set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public Transform GrabShapeTransform
		{
			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x8D87E4", Offset = "0x8D87E4", VA = "0x8D87E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000126")]
		public Grabbable HoveredGrabbable
		{
			[Token(Token = "0x6000E56")]
			[Address(RVA = "0x8D8814", Offset = "0x8D8814", VA = "0x8D8814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2320", Offset = "0x6F2320")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x8D881C", Offset = "0x8D881C", VA = "0x8D881C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2330", Offset = "0x6F2330")]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public bool HasGrabbable
		{
			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x8D8824", Offset = "0x8D8824", VA = "0x8D8824")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000128")]
		public Transform HandCenter
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x8D8894", Offset = "0x8D8894", VA = "0x8D8894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action OnGrab
		{
			[Token(Token = "0x6000E5A")]
			[Address(RVA = "0x8D889C", Offset = "0x8D889C", VA = "0x8D889C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2340", Offset = "0x6F2340")]
			add
			{
			}
			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x8D8988", Offset = "0x8D8988", VA = "0x8D8988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2350", Offset = "0x6F2350")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event Action OnRelease
		{
			[Token(Token = "0x6000E5C")]
			[Address(RVA = "0x8D8A74", Offset = "0x8D8A74", VA = "0x8D8A74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2360", Offset = "0x6F2360")]
			add
			{
			}
			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x8D8B60", Offset = "0x8D8B60", VA = "0x8D8B60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2370", Offset = "0x6F2370")]
			remove
			{
			}
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x8D8C4C", Offset = "0x8D8C4C", VA = "0x8D8C4C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x8D8D08", Offset = "0x8D8D08", VA = "0x8D8D08")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x8D9068", Offset = "0x8D9068", VA = "0x8D9068")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x8D9260", Offset = "0x8D9260", VA = "0x8D9260")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x8D95A8", Offset = "0x8D95A8", VA = "0x8D95A8")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x8D95DC", Offset = "0x8D95DC", VA = "0x8D95DC")]
		public void DropGrabbables()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x8D940C", Offset = "0x8D940C", VA = "0x8D940C")]
		public void DropGrabbable(Grabbable grabbable, bool clearGrabbables)
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x8D9B60", Offset = "0x8D9B60", VA = "0x8D9B60")]
		public void TryGrab()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x8D9CCC", Offset = "0x8D9CCC", VA = "0x8D9CCC")]
		private Grabbable GetValidGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x8D9850", Offset = "0x8D9850", VA = "0x8D9850")]
		public void TryRelease()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x8D91D0", Offset = "0x8D91D0", VA = "0x8D91D0")]
		private void ReleaseGrabbable()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x8DA39C", Offset = "0x8DA39C", VA = "0x8DA39C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0x8DA920", Offset = "0x8DA920", VA = "0x8DA920")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x8D96E8", Offset = "0x8D96E8", VA = "0x8D96E8")]
		private void SetGrabVolumesActive(bool enabled)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x8D9E58", Offset = "0x8D9E58", VA = "0x8D9E58")]
		private void GrabShapeStart()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x8DA120", Offset = "0x8DA120", VA = "0x8DA120")]
		private void GrabShapeEnd()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x8DA648", Offset = "0x8DA648", VA = "0x8DA648")]
		private void EnableHover()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x8D8F80", Offset = "0x8D8F80", VA = "0x8D8F80")]
		public void DisableHover()
		{
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0x8DAC5C", Offset = "0x8DAC5C", VA = "0x8DAC5C")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class GrabPoser : MonoBehaviour
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabber m_grabber;

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x894710", Offset = "0x894710", VA = "0x894710")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x8947EC", Offset = "0x8947EC", VA = "0x8947EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x8948C8", Offset = "0x8948C8", VA = "0x8948C8", Slot = "4")]
		protected virtual void OnGrabBegin()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x8948CC", Offset = "0x8948CC", VA = "0x8948CC", Slot = "5")]
		protected virtual void OnGrabEnd()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x8948D0", Offset = "0x8948D0", VA = "0x8948D0")]
		public GrabPoser()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class OculusGrabPoser : GrabPoser
	{
		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x8DACDC", Offset = "0x8DACDC", VA = "0x8DACDC")]
		public OculusGrabPoser()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class SteamGrabPoser : GrabPoser
	{
		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x8DACE4", Offset = "0x8DACE4", VA = "0x8DACE4")]
		public SteamGrabPoser()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class ConstrainedLever : MonoBehaviour
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabEvent m_onGrabStartEvent;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GrabEvent m_onGrabEvent;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabEvent m_onGrabEndEvent;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_resetOnRelease;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_leverProgress;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x894340", Offset = "0x894340", VA = "0x894340")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x894384", Offset = "0x894384", VA = "0x894384")]
		public void StartGrab()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x8944EC", Offset = "0x8944EC", VA = "0x8944EC")]
		public void Grab()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x894564", Offset = "0x894564", VA = "0x894564")]
		public void EndGrab()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x8943FC", Offset = "0x8943FC", VA = "0x8943FC")]
		private void CalculateLeverProgress()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x894670", Offset = "0x894670", VA = "0x894670")]
		public ConstrainedLever()
		{
		}
	}
}
namespace Cortopia.Scripts.DebugUtils
{
	[Token(Token = "0x20001FD")]
	public class DebugInput : IPlatformInput, IPlatformService
	{
		[Token(Token = "0x4000AA6")]
		private const string Horizontal = "Horizontal";

		[Token(Token = "0x4000AA7")]
		private const string Vertical = "Vertical";

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyDictionary<ButtonType, KeyCode> m_buttonMappings;

		[Token(Token = "0x17000129")]
		public InputDeviceType InputDeviceType
		{
			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x892744", Offset = "0x892744", VA = "0x892744", Slot = "4")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x1700012A")]
		public IEnumerable<ButtonType> MappedButtons
		{
			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x89274C", Offset = "0x89274C", VA = "0x89274C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public bool UseStickAxisPlayerMovement
		{
			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x892804", Offset = "0x892804", VA = "0x892804", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x89280C", Offset = "0x89280C", VA = "0x89280C", Slot = "14")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x89286C", Offset = "0x89286C", VA = "0x89286C", Slot = "8")]
		public Vector2 GetAxis(AxisType axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x892978", Offset = "0x892978", VA = "0x892978", Slot = "7")]
		public bool Any()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x892980", Offset = "0x892980", VA = "0x892980", Slot = "9")]
		public float GetTrigger(TriggerType trigger)
		{
			return default(float);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x892988", Offset = "0x892988", VA = "0x892988", Slot = "10")]
		public bool GetButtonDown(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x892A58", Offset = "0x892A58", VA = "0x892A58", Slot = "11")]
		public bool GetButton(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x892B28", Offset = "0x892B28", VA = "0x892B28", Slot = "12")]
		public bool GetButtonUp(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x892BF8", Offset = "0x892BF8", VA = "0x892BF8", Slot = "13")]
		public bool GetTouch(Cortopia.Scripts.Platform.Input.TouchType touch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x892C00", Offset = "0x892C00", VA = "0x892C00", Slot = "15")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x892C04", Offset = "0x892C04", VA = "0x892C04")]
		public DebugInput()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E2000", Offset = "0x6E2000")]
	public class DebugInputOptions : ScriptableObject
	{
		[Token(Token = "0x20003E4")]
		private struct DefaultValues
		{
			[Token(Token = "0x4001339")]
			public const float CameraZoomSpeed = 60f;

			[Token(Token = "0x400133A")]
			public const float CameraMoveSpeed = 3f;

			[Token(Token = "0x400133B")]
			public const float CameraMoveSpeedWASD = 10f;

			[Token(Token = "0x400133C")]
			public const float MinLookY = -60f;

			[Token(Token = "0x400133D")]
			public const float MaxLookY = 80f;
		}

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CameraZoomSpeed;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CameraMoveSpeed;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CameraMoveSpeedWASD;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinLookY;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxLookY;

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x892D7C", Offset = "0x892D7C", VA = "0x892D7C")]
		public DebugInputOptions()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x892DB4", Offset = "0x892DB4", VA = "0x892DB4")]
		public DebugInputOptions(float cameraZoomSpeed, float cameraMoveSpeed, float cameraMoveSpeedWASD, float minLookY, float maxLookY)
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class DebugTeleport : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D7C", Offset = "0x6E2D7C")]
		private sealed class <>c
		{
			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PlayableDirector, bool> <>9__8_0;

			[Token(Token = "0x6001882")]
			[Address(RVA = "0x893D18", Offset = "0x893D18", VA = "0x893D18")]
			public <>c()
			{
			}

			[Token(Token = "0x6001883")]
			[Address(RVA = "0x893D20", Offset = "0x893D20", VA = "0x893D20")]
			internal bool <SkipToNextRoom>b__8_0(PlayableDirector dir)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D8C", Offset = "0x6E2D8C")]
		private sealed class <SkipTimelines>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugTeleport <>4__this;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<PlayableDirector> directors;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <playing>5__2;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <finished>5__3;

			[Token(Token = "0x17000237")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001887")]
				[Address(RVA = "0x8941F8", Offset = "0x8941F8", VA = "0x8941F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000238")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001889")]
				[Address(RVA = "0x894268", Offset = "0x894268", VA = "0x894268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001884")]
			[Address(RVA = "0x8939EC", Offset = "0x8939EC", VA = "0x8939EC")]
			[DebuggerHidden]
			public <SkipTimelines>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001885")]
			[Address(RVA = "0x894000", Offset = "0x894000", VA = "0x894000", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001886")]
			[Address(RVA = "0x894004", Offset = "0x894004", VA = "0x894004", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001888")]
			[Address(RVA = "0x894200", Offset = "0x894200", VA = "0x894200", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2D9C", Offset = "0x6E2D9C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType nextBiome;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DebugTeleport <>4__this;

			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomType nextRoomType;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Room nextRoom;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__1;

			[Token(Token = "0x600188A")]
			[Address(RVA = "0x893A18", Offset = "0x893A18", VA = "0x893A18")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x600188B")]
			[Address(RVA = "0x893D5C", Offset = "0x893D5C", VA = "0x893D5C")]
			internal void <RequestNextRoom>b__0(RoomEvents.BiomeActivatedEvent biomeEvent)
			{
			}

			[Token(Token = "0x600188C")]
			[Address(RVA = "0x893E50", Offset = "0x893E50", VA = "0x893E50")]
			internal void <RequestNextRoom>b__1()
			{
			}
		}

		[Token(Token = "0x4000AAE")]
		private const float PressToSkipToNextRoomTime = 2f;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Promise<Room> m_nextRoomPromise;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Promise m_skipTimelinePromise;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_loadBiomeEventToken;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_elapsedTime;

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x892E10", Offset = "0x892E10", VA = "0x892E10")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x6F2380", Offset = "0x6F2380")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x892F50", Offset = "0x892F50", VA = "0x892F50")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x8933F0", Offset = "0x8933F0", VA = "0x8933F0")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x8930C8", Offset = "0x8930C8", VA = "0x8930C8")]
		private void SkipToNextRoom()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x8933F8", Offset = "0x8933F8", VA = "0x8933F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2394", Offset = "0x6F2394")]
		private IEnumerator SkipTimelines(List<PlayableDirector> directors)
		{
			return null;
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x893490", Offset = "0x893490", VA = "0x893490")]
		private IPromise<Room> RequestNextRoom(Room currentRoom)
		{
			return null;
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x893A20", Offset = "0x893A20", VA = "0x893A20")]
		public DebugTeleport()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x893A28", Offset = "0x893A28", VA = "0x893A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F23F8", Offset = "0x6F23F8")]
		private void <SkipToNextRoom>b__8_1(Room nextRoom)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public interface IDebugGrabbable
	{
		[Token(Token = "0x6000E95")]
		void OnDebugGrab();

		[Token(Token = "0x6000E96")]
		void OnDebugRelease();
	}
	[Token(Token = "0x2000201")]
	public class RoomInitializationDebug : RoomBehaviour
	{
		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_loopOnInitialization;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_loops;

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x894270", Offset = "0x894270", VA = "0x894270")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x894318", Offset = "0x894318", VA = "0x894318", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x894280", Offset = "0x894280", VA = "0x894280")]
		private void RunLoop()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x894328", Offset = "0x894328", VA = "0x894328")]
		public RoomInitializationDebug()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class CortopiaDebug
	{
		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x89253C", Offset = "0x89253C", VA = "0x89253C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F2408", Offset = "0x6F2408")]
		public static void DrawPath(NavMeshPath path, Color color, float duration)
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x89273C", Offset = "0x89273C", VA = "0x89273C")]
		public CortopiaDebug()
		{
		}
	}
}
namespace Cortopia.Scripts.Cutscenes
{
	[Token(Token = "0x2000203")]
	public class CharacterCutscenePlayer : RoomBehaviour
	{
		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_playOnCharacterSpawned;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool m_playOnRoomInitialization;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected PlayableDirector m_director;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterData[] m_characterData;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9370", Offset = "0x6E9370")]
		[SerializeField]
		private InteractableObject[] m_interactables;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E93BC", Offset = "0x6E93BC")]
		[SerializeField]
		private bool m_disableNavAgent;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_initializeAnimatedScale;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9418", Offset = "0x6E9418")]
		[SerializeField]
		private bool m_reenableNavAgent;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		private bool m_finalizeAnimatedScale;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9474", Offset = "0x6E9474")]
		[SerializeField]
		private CortopiaEventType m_cutsceneStartedEventType;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScriptableEvent m_cutsceneStartedEvent;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PlayableCharacterEvent m_cutsceneStartedUnityEvent;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CortopiaEventType m_cutsceneFinishedEventType;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ScriptableEvent m_cutsceneFinishedEvent;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayableCharacterEvent m_cutsceneFinishedUnityEvent;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayableCharacter m_eventCharacterControl;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_onAllCharactersSpawnedEventToken;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isApplicationQuitting;

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x88FDF0", Offset = "0x88FDF0", VA = "0x88FDF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x88FEC0", Offset = "0x88FEC0", VA = "0x88FEC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x88FF40", Offset = "0x88FF40", VA = "0x88FF40")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x88FF4C", Offset = "0x88FF4C", VA = "0x88FF4C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x88FF64", Offset = "0x88FF64", VA = "0x88FF64", Slot = "6")]
		public virtual void PlayCutscene()
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x8906C8", Offset = "0x8906C8", VA = "0x8906C8")]
		public void ForceStopCutscene()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0x8906F8", Offset = "0x8906F8", VA = "0x8906F8")]
		public void SetDirector(PlayableDirector newDirector)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x890158", Offset = "0x890158", VA = "0x890158")]
		private void SetCharacterBindings()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x890700", Offset = "0x890700", VA = "0x890700")]
		private void OnDirectorStopped(PlayableDirector director)
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x890B98", Offset = "0x890B98", VA = "0x890B98")]
		private void OnAllCharactersSpawned(CharacterEvents.AllCharactersSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x890C20", Offset = "0x890C20", VA = "0x890C20")]
		private bool IsCharacterDataEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x890614", Offset = "0x890614", VA = "0x890614")]
		private void SetInteractablesActive(bool active)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x890C94", Offset = "0x890C94", VA = "0x890C94")]
		public CharacterCutscenePlayer()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class FallProp : MonoBehaviour
	{
		[Token(Token = "0x20003E8")]
		public enum PropSize
		{
			[Token(Token = "0x400134C")]
			Small,
			[Token(Token = "0x400134D")]
			Large
		}

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PropSize m_propSize;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_speed;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isFalling;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_targetTravelDistance;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_currentTravelDistance;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FallPropLauncher m_myPooler;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MathUtils.MinMax m_rotationSpeedRange;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_randomRotationDirection;

		[Token(Token = "0x1700012C")]
		public PropSize Size
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x890D60", Offset = "0x890D60", VA = "0x890D60")]
			get
			{
				return default(PropSize);
			}
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x890D68", Offset = "0x890D68", VA = "0x890D68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x891014", Offset = "0x891014", VA = "0x891014")]
		public void InitilizeFallProp(float travelDistance, FallPropLauncher pooler)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x891024", Offset = "0x891024", VA = "0x891024")]
		public void Launch(Vector3 startingPosition, float speed, Vector3 rotationSpeed, Vector3 scale)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x8911B0", Offset = "0x8911B0", VA = "0x8911B0")]
		private void EnableVisuals()
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x890FDC", Offset = "0x890FDC", VA = "0x890FDC")]
		private void DisableVisuals()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x8911E8", Offset = "0x8911E8", VA = "0x8911E8")]
		public FallProp()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class FallPropLauncher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003E9")]
		public class FallPropInteractable
		{
			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animator Animator;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PointerInteractable Interactable;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int LaunchPropCount;

			[Token(Token = "0x600188D")]
			[Address(RVA = "0x892010", Offset = "0x892010", VA = "0x892010")]
			public FallPropInteractable()
			{
			}
		}

		[Token(Token = "0x20003EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DAC", Offset = "0x6E2DAC")]
		private sealed class <ShowHintAfterDuration>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FallPropLauncher <>4__this;

			[Token(Token = "0x17000239")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001891")]
				[Address(RVA = "0x891F98", Offset = "0x891F98", VA = "0x891F98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001893")]
				[Address(RVA = "0x892008", Offset = "0x892008", VA = "0x892008", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600188E")]
			[Address(RVA = "0x891A84", Offset = "0x891A84", VA = "0x891A84")]
			[DebuggerHidden]
			public <ShowHintAfterDuration>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600188F")]
			[Address(RVA = "0x891EB0", Offset = "0x891EB0", VA = "0x891EB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001890")]
			[Address(RVA = "0x891EB4", Offset = "0x891EB4", VA = "0x891EB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001892")]
			[Address(RVA = "0x891FA0", Offset = "0x891FA0", VA = "0x891FA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ACF")]
		private const int NumberOfSpawnPoints = 3;

		[Token(Token = "0x4000AD0")]
		private const int BackSpawnIndex = 2;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_animParamSpawn;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onFirstInteractable;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_delayHint;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9540", Offset = "0x6E9540")]
		[SerializeField]
		private int m_poolSize;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FallProp[] m_fallPropPrefabs;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E959C", Offset = "0x6E959C")]
		[SerializeField]
		private float m_startDelay;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_travelDistance;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Transform> m_propSpawnPoints;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MathUtils.MinMax m_spawnTime;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MathUtils.MinMax m_scaleRange;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9628", Offset = "0x6E9628")]
		[SerializeField]
		private MathUtils.MinMax m_speedRange;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9674", Offset = "0x6E9674")]
		private MathUtils.MinMax m_rotationRange;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E96C0", Offset = "0x6E96C0")]
		[SerializeField]
		private FallPropInteractable[] m_interactables;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IList<FallProp> m_fallPropsLarge;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<FallProp> m_fallPropObjectPool;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_interactableSpawnPoint;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_previousSpawnLocation;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_isPropLaunchedActive;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_hasLaunchedInteractable;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_currentPropCount;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_currentInteractable;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_currentSpawnTime;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_elapsedTime;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_isHintRoutineStarted;

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x8911F0", Offset = "0x8911F0", VA = "0x8911F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x891540", Offset = "0x891540", VA = "0x891540")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x891548", Offset = "0x891548", VA = "0x891548")]
		private void Update()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x891944", Offset = "0x891944", VA = "0x891944")]
		public void EnablePropLauncher()
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x8914A0", Offset = "0x8914A0", VA = "0x8914A0")]
		public void DisablePropLauncher()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x891214", Offset = "0x891214", VA = "0x891214")]
		private void BuildPool()
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x891784", Offset = "0x891784", VA = "0x891784")]
		private void TryLaunchInteractable()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0x89198C", Offset = "0x89198C", VA = "0x89198C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2440", Offset = "0x6F2440")]
		private IEnumerator ShowHintAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x891A00", Offset = "0x891A00", VA = "0x891A00")]
		private void LaunchInteractable(Animator fallingInteractable)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x891AB0", Offset = "0x891AB0", VA = "0x891AB0")]
		public void ReturnInteractableSpawn()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x8915B8", Offset = "0x8915B8", VA = "0x8915B8")]
		private void LaunchObject()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0x891ADC", Offset = "0x891ADC", VA = "0x891ADC")]
		private Transform GetRandomSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x891C00", Offset = "0x891C00", VA = "0x891C00")]
		private FallProp GetRandomObjectFromPool(Transform spawnLocation)
		{
			return null;
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0x891CF4", Offset = "0x891CF4", VA = "0x891CF4")]
		private FallProp RandomProp()
		{
			return null;
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x891D8C", Offset = "0x891D8C", VA = "0x891D8C")]
		private FallProp RandomPropNoLarge()
		{
			return null;
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x890F6C", Offset = "0x890F6C", VA = "0x890F6C")]
		public void ReturnObjectToPool(FallProp selectedObject)
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x891918", Offset = "0x891918", VA = "0x891918")]
		private void SetNewSpawnTime()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x891DCC", Offset = "0x891DCC", VA = "0x891DCC")]
		public FallPropLauncher()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class PatchesCutscenePlayer : CharacterCutscenePlayer
	{
		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E970C", Offset = "0x6E970C")]
		[SerializeField]
		private IntVariable m_patchesChoiceIndex;

		[Token(Token = "0x4000AEA")]
		private const string PatchesCatTrackName = "PatchesCatTrack";

		[Token(Token = "0x4000AEB")]
		private const string PatchesLizardTrackName = "PatchesLizardTrack";

		[Token(Token = "0x4000AEC")]
		private const string PatchesTurtleTrackName = "PatchesTurtleTrack";

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x892018", Offset = "0x892018", VA = "0x892018", Slot = "6")]
		public override void PlayCutscene()
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x89201C", Offset = "0x89201C", VA = "0x89201C")]
		private void ConfigurePatchesTimeline()
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x8924F0", Offset = "0x8924F0", VA = "0x8924F0")]
		private void BindingCheck(TrackAsset track, bool shouldKeepBinding)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x892538", Offset = "0x892538", VA = "0x892538")]
		public PatchesCutscenePlayer()
		{
		}
	}
}
namespace Cortopia.Scripts.CortopiaEvents
{
	[Token(Token = "0x2000207")]
	public class CheckpointEvent : ScriptableObject, IScriptableEvent
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IScriptableEventListener> m_listeners;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolVariable m_writeToDisk;

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x88F450", Offset = "0x88F450", VA = "0x88F450")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x88F47C", Offset = "0x88F47C", VA = "0x88F47C")]
		public void CheckpointReached(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x88F608", Offset = "0x88F608", VA = "0x88F608")]
		public void SaveGame(bool writeToDisk)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x88F4C0", Offset = "0x88F4C0", VA = "0x88F4C0", Slot = "4")]
		public void RaiseEvent(ScriptableVariable variable)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x88BF44", Offset = "0x88BF44", VA = "0x88BF44", Slot = "5")]
		public void RegisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x88BDF0", Offset = "0x88BDF0", VA = "0x88BDF0", Slot = "6")]
		public void UnregisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x88F658", Offset = "0x88F658", VA = "0x88F658")]
		private void SaveButton()
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x88F660", Offset = "0x88F660", VA = "0x88F660")]
		public CheckpointEvent()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public sealed class EventToken
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9758", Offset = "0x6E9758")]
		private Type <Type>k__BackingField;

		[Token(Token = "0x1700012D")]
		public Type Type
		{
			[Token(Token = "0x6000ECF")]
			[Address(RVA = "0x88F754", Offset = "0x88F754", VA = "0x88F754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F24A4", Offset = "0x6F24A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x88F75C", Offset = "0x88F75C", VA = "0x88F75C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F24B4", Offset = "0x6F24B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x88F764", Offset = "0x88F764", VA = "0x88F764")]
		public EventToken(Type type)
		{
		}
	}
	[Token(Token = "0x2000209")]
	public sealed class SubscriptionItem
	{
		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9768", Offset = "0x6E9768")]
		private IEventSubscription <Subscription>k__BackingField;

		[Token(Token = "0x1700012E")]
		public IEventSubscription Subscription
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x88FDB4", Offset = "0x88FDB4", VA = "0x88FDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F24C4", Offset = "0x6F24C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED3")]
			[Address(RVA = "0x88FDBC", Offset = "0x88FDBC", VA = "0x88FDBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F24D4", Offset = "0x6F24D4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x88FDC4", Offset = "0x88FDC4", VA = "0x88FDC4")]
		public SubscriptionItem(IEventSubscription subscription)
		{
		}
	}
	[Token(Token = "0x200020A")]
	public sealed class EventSubscription<T> : IEventSubscription where T : EventBase, IEvent
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9778", Offset = "0x6E9778")]
		private EventToken <SubscriptionToken>k__BackingField;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> Action;

		[Token(Token = "0x1700012F")]
		public EventToken SubscriptionToken
		{
			[Token(Token = "0x6000ED5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F24E4", Offset = "0x6F24E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ED6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F24F4", Offset = "0x6F24F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ED7")]
		public EventSubscription(EventToken token, Action<T> action)
		{
		}

		[Token(Token = "0x6000ED8")]
		public void Deliver(IEvent message)
		{
		}
	}
	[Token(Token = "0x200020B")]
	public interface IEventSubscription
	{
		[Token(Token = "0x17000130")]
		EventToken SubscriptionToken
		{
			[Token(Token = "0x6000ED9")]
			get;
		}

		[Token(Token = "0x6000EDA")]
		void Deliver(IEvent message);
	}
	[Token(Token = "0x200020C")]
	public interface IEvent
	{
		[Token(Token = "0x17000131")]
		Type Type
		{
			[Token(Token = "0x6000EDB")]
			get;
		}
	}
	[Token(Token = "0x200020D")]
	public abstract class EventBase : IEvent
	{
		[Token(Token = "0x17000132")]
		public Type Type
		{
			[Token(Token = "0x6000EDC")]
			[Address(RVA = "0x88F6D4", Offset = "0x88F6D4", VA = "0x88F6D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x88F408", Offset = "0x88F408", VA = "0x88F408")]
		public EventBase()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public enum CortopiaEventType
	{
		[Token(Token = "0x4000AF4")]
		UnityEvent,
		[Token(Token = "0x4000AF5")]
		ScriptableEvent,
		[Token(Token = "0x4000AF6")]
		None
	}
	[Token(Token = "0x200020F")]
	public static class EventHub
	{
		[Token(Token = "0x4000AF7")]
		private const int DefaultEventDictionarySize = 4;

		[Token(Token = "0x4000AF8")]
		private const int DefaultSubscribeListSize = 2;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<Type, List<SubscriptionItem>> sm_events;

		[Token(Token = "0x6000EDE")]
		public static EventToken Subscribe<T>(Action<T> callback) where T : EventBase, IEvent
		{
			return null;
		}

		[Token(Token = "0x6000EDF")]
		public static void Unsubscribe<T>(EventToken token) where T : EventBase, IEvent
		{
		}

		[Token(Token = "0x6000EE0")]
		public static void Publish<T>(T message) where T : EventBase, IEvent
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class CharacterEvents
	{
		[Token(Token = "0x20003EB")]
		public class AllCharactersSpawnedEvent : EventBase
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x88F420", Offset = "0x88F420", VA = "0x88F420")]
			public AllCharactersSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x20003EC")]
		public class CharacterActivatedEvent : EventBase
		{
			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter CharacterControl;

			[Token(Token = "0x6001895")]
			[Address(RVA = "0x88F430", Offset = "0x88F430", VA = "0x88F430")]
			public CharacterActivatedEvent()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		public class CharacterDisabledEvent : EventBase
		{
			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter CharacterControl;

			[Token(Token = "0x6001896")]
			[Address(RVA = "0x88F438", Offset = "0x88F438", VA = "0x88F438")]
			public CharacterDisabledEvent()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		public class ProxyEnabledEvent : EventBase
		{
			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterData ProxyCharacterData;

			[Token(Token = "0x6001897")]
			[Address(RVA = "0x88F448", Offset = "0x88F448", VA = "0x88F448")]
			public ProxyEnabledEvent()
			{
			}
		}

		[Token(Token = "0x20003EF")]
		public class ProxyDisabledEvent : EventBase
		{
			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterData ProxyCharacterData;

			[Token(Token = "0x6001898")]
			[Address(RVA = "0x88F440", Offset = "0x88F440", VA = "0x88F440")]
			public ProxyDisabledEvent()
			{
			}
		}

		[Token(Token = "0x20003F0")]
		public class BabyRabbitRespawnEvent : EventBase
		{
			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BabyRabbitControl BabyRabbit;

			[Token(Token = "0x6001899")]
			[Address(RVA = "0x88F428", Offset = "0x88F428", VA = "0x88F428")]
			public BabyRabbitRespawnEvent()
			{
			}
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x88F418", Offset = "0x88F418", VA = "0x88F418")]
		public CharacterEvents()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class RoomEvents
	{
		[Token(Token = "0x20003F1")]
		public class BiomeActivatedEvent : EventBase
		{
			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType BiomeType;

			[Token(Token = "0x600189A")]
			[Address(RVA = "0x8868B4", Offset = "0x8868B4", VA = "0x8868B4")]
			public BiomeActivatedEvent()
			{
			}
		}

		[Token(Token = "0x20003F2")]
		public class BiomeDeactivatedEvent : EventBase
		{
			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType BiomeType;

			[Token(Token = "0x600189B")]
			[Address(RVA = "0x885984", Offset = "0x885984", VA = "0x885984")]
			public BiomeDeactivatedEvent()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		public class RoomLoadedEvent : EventBase
		{
			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Room Room;

			[Token(Token = "0x600189C")]
			[Address(RVA = "0x8868BC", Offset = "0x8868BC", VA = "0x8868BC")]
			public RoomLoadedEvent()
			{
			}
		}

		[Token(Token = "0x20003F4")]
		public class BeforeRoomUnloadedEvent : EventBase
		{
			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomType RoomType;

			[Token(Token = "0x600189D")]
			[Address(RVA = "0x88619C", Offset = "0x88619C", VA = "0x88619C")]
			public BeforeRoomUnloadedEvent()
			{
			}
		}

		[Token(Token = "0x20003F5")]
		public class RoomActivatedEvent : EventBase
		{
			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomType RoomType;

			[Token(Token = "0x600189E")]
			[Address(RVA = "0x88F7E8", Offset = "0x88F7E8", VA = "0x88F7E8")]
			public RoomActivatedEvent()
			{
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x88F7E0", Offset = "0x88F7E0", VA = "0x88F7E0")]
		public RoomEvents()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class PlayerEvents
	{
		[Token(Token = "0x20003F6")]
		public class ScreenFadeEvent : EventBase
		{
			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool FadeIn;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float FadeTime;

			[Token(Token = "0x600189F")]
			[Address(RVA = "0x88F7B0", Offset = "0x88F7B0", VA = "0x88F7B0")]
			public ScreenFadeEvent()
			{
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x88F7A8", Offset = "0x88F7A8", VA = "0x88F7A8")]
		public PlayerEvents()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class PuzzleEvents
	{
		[Token(Token = "0x20003F7")]
		public class DominoBellRungEvent : EventBase
		{
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int BellCount;

			[Token(Token = "0x60018A0")]
			[Address(RVA = "0x88F7D0", Offset = "0x88F7D0", VA = "0x88F7D0")]
			public DominoBellRungEvent()
			{
			}
		}

		[Token(Token = "0x20003F8")]
		public class DominoMovedEvent : EventBase
		{
			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Domino Domino;

			[Token(Token = "0x60018A1")]
			[Address(RVA = "0x88F7D8", Offset = "0x88F7D8", VA = "0x88F7D8")]
			public DominoMovedEvent()
			{
			}
		}

		[Token(Token = "0x20003F9")]
		public class ButterflyFoundEvent : EventBase
		{
			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Butterfly Butterfly;

			[Token(Token = "0x60018A2")]
			[Address(RVA = "0x88F7C8", Offset = "0x88F7C8", VA = "0x88F7C8")]
			public ButterflyFoundEvent()
			{
			}
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x88F7C0", Offset = "0x88F7C0", VA = "0x88F7C0")]
		public PuzzleEvents()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class CameraEvents
	{
		[Token(Token = "0x20003FA")]
		public class RecenterCameraEvent : EventBase
		{
			[Token(Token = "0x60018A3")]
			[Address(RVA = "0x88F410", Offset = "0x88F410", VA = "0x88F410")]
			public RecenterCameraEvent()
			{
			}
		}

		[Token(Token = "0x20003FB")]
		public class FirstPersonCameraEvent : EventBase
		{
			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool EnterFirstPerson;

			[Token(Token = "0x60018A4")]
			[Address(RVA = "0x88F400", Offset = "0x88F400", VA = "0x88F400")]
			public FirstPersonCameraEvent()
			{
			}
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x88F3F8", Offset = "0x88F3F8", VA = "0x88F3F8")]
		public CameraEvents()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class PlatformEvents
	{
		[Token(Token = "0x20003FC")]
		public class InputDeviceChangedEvent : EventBase
		{
			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputDeviceType InputDeviceType;

			[Token(Token = "0x60018A5")]
			[Address(RVA = "0x88F798", Offset = "0x88F798", VA = "0x88F798")]
			public InputDeviceChangedEvent()
			{
			}
		}

		[Token(Token = "0x20003FD")]
		public class HMDActivityStatusChangedEvent : EventBase
		{
			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HMDActivityStatusType HMDActivityStatus;

			[Token(Token = "0x60018A6")]
			[Address(RVA = "0x879E08", Offset = "0x879E08", VA = "0x879E08")]
			public HMDActivityStatusChangedEvent()
			{
			}
		}

		[Token(Token = "0x20003FE")]
		public class HMDMountStatusChangedEvent : EventBase
		{
			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HMDMountStatusType HMDMountStatus;

			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x879F04", Offset = "0x879F04", VA = "0x879F04")]
			public HMDMountStatusChangedEvent()
			{
			}
		}

		[Token(Token = "0x20003FF")]
		public class RecenterControllerEvent : EventBase
		{
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x88F7A0", Offset = "0x88F7A0", VA = "0x88F7A0")]
			public RecenterControllerEvent()
			{
			}
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x88F790", Offset = "0x88F790", VA = "0x88F790")]
		public PlatformEvents()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public interface IScriptableEvent
	{
		[Token(Token = "0x6000EE8")]
		void RaiseEvent(ScriptableVariable variable);

		[Token(Token = "0x6000EE9")]
		void RegisterListener(IScriptableEventListener listener);

		[Token(Token = "0x6000EEA")]
		void UnregisterListener(IScriptableEventListener listener);
	}
	[Token(Token = "0x2000217")]
	public interface IScriptableEventListener
	{
		[Token(Token = "0x6000EEB")]
		void OnEventRaised(ScriptableVariable eventData);
	}
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E2070", Offset = "0x6E2070")]
	public class ScriptableEvent : ScriptableObject, IScriptableEvent
	{
		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IScriptableEventListener> m_listeners;

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x884C80", Offset = "0x884C80", VA = "0x884C80")]
		public void RaiseBoolEvent(bool value)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x88F7F0", Offset = "0x88F7F0", VA = "0x88F7F0")]
		public void RaiseIntEvent(int value)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x88F820", Offset = "0x88F820", VA = "0x88F820")]
		public void RaiseFloatEvent(float value)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x88F84C", Offset = "0x88F84C", VA = "0x88F84C")]
		public void RaiseStringEvent(string value)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x87FEA4", Offset = "0x87FEA4", VA = "0x87FEA4")]
		public void RaiseEvent()
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x8809A8", Offset = "0x8809A8", VA = "0x8809A8", Slot = "4")]
		public void RaiseEvent(ScriptableVariable variable)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x8888F8", Offset = "0x8888F8", VA = "0x8888F8", Slot = "5")]
		public void RegisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x888770", Offset = "0x888770", VA = "0x888770", Slot = "6")]
		public void UnregisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x88F8CC", Offset = "0x88F8CC", VA = "0x88F8CC")]
		public ScriptableEvent()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class ScriptableEventListener : MonoBehaviour, IScriptableEventListener
	{
		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9788", Offset = "0x6E9788")]
		public ScriptableEvent Event;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E97C0", Offset = "0x6E97C0")]
		public ScriptableVariableEvent Response;

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x88F940", Offset = "0x88F940", VA = "0x88F940")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x88F974", Offset = "0x88F974", VA = "0x88F974")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x88F9A8", Offset = "0x88F9A8", VA = "0x88F9A8", Slot = "4")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x88FA18", Offset = "0x88FA18", VA = "0x88FA18")]
		public ScriptableEventListener()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class ScriptableEventsListener : MonoBehaviour, IScriptableEventListener
	{
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E97F8", Offset = "0x6E97F8")]
		public List<ScriptableEvent> Events;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6E9830", Offset = "0x6E9830")]
		public ScriptableVariableEvent Response;

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x88FA20", Offset = "0x88FA20", VA = "0x88FA20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x88FB48", Offset = "0x88FB48", VA = "0x88FB48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x88FC70", Offset = "0x88FC70", VA = "0x88FC70")]
		public void OnEventRaised()
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x88FCD4", Offset = "0x88FCD4", VA = "0x88FCD4", Slot = "4")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x88FD44", Offset = "0x88FD44", VA = "0x88FD44")]
		public ScriptableEventsListener()
		{
		}
	}
}
namespace Cortopia.Scripts.Core
{
	[Token(Token = "0x200021B")]
	public class CharacterManager : MonoBehaviour, ISavable, IScriptableEventListener
	{
		[Serializable]
		[Token(Token = "0x2000400")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool AreCharactersTethered;

			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool IsFourHalfUnlocked;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<PlayableCharacterSaveData> CharacterData;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, NPCSaveData> NPCData;

			[Token(Token = "0x60018A9")]
			[Address(RVA = "0x9A2958", Offset = "0x9A2958", VA = "0x9A2958")]
			public SaveData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000401")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DBC", Offset = "0x6E2DBC")]
		private sealed class <>c
		{
			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NPCCharacter, bool> <>9__40_0;

			[Token(Token = "0x60018AB")]
			[Address(RVA = "0x9A6DF0", Offset = "0x9A6DF0", VA = "0x9A6DF0")]
			public <>c()
			{
			}

			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x9A6DF8", Offset = "0x9A6DF8", VA = "0x9A6DF8")]
			internal bool <GetCharacter>b__40_0(NPCCharacter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DCC", Offset = "0x6E2DCC")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> onDestinationReached;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractableObject interactable;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayableCharacter character;

			[Token(Token = "0x60018AD")]
			[Address(RVA = "0x9A67D0", Offset = "0x9A67D0", VA = "0x9A67D0")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60018AE")]
			[Address(RVA = "0x9A6E2C", Offset = "0x9A6E2C", VA = "0x9A6E2C")]
			internal void <SetCharacterDestination>b__0(bool success)
			{
			}

			[Token(Token = "0x60018AF")]
			[Address(RVA = "0x9A6ED0", Offset = "0x9A6ED0", VA = "0x9A6ED0")]
			internal void <SetCharacterDestination>b__1(bool success)
			{
			}
		}

		[Token(Token = "0x2000403")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DDC", Offset = "0x6E2DDC")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onDestinationReached;

			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractableObject interactable;

			[Token(Token = "0x4001372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayableCharacter character;

			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x9A67D8", Offset = "0x9A67D8", VA = "0x9A67D8")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x9A6F74", Offset = "0x9A6F74", VA = "0x9A6F74")]
			internal void <SetCharacterDestination>b__0(bool success)
			{
			}
		}

		[Token(Token = "0x4000AFF")]
		private const string SaveID = "CharacterManager";

		[Token(Token = "0x4000B00")]
		private const float FourHalfForwardSpawnOffset = 0.5f;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacter[] m_characterControllers;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9878", Offset = "0x6E9878")]
		[SerializeField]
		private ScriptableEvent m_fourHalfUnlockedEvent;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoolVariable m_areCharactersTethered;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasInstantiatedCharacters;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveData m_saveData;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDictionary<CharacterType, PlayableCharacter> m_availableCharacters;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDictionary<CharacterData, List<NPCCharacter>> m_availableNPCs;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<NPCCharacter> m_filterList;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ISet<PlayableCharacter> m_nonSelectableCharacters;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IDictionary<CharacterType, CharacterState> m_previousCharacterStates;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E98D4", Offset = "0x6E98D4")]
		private PlayableCharacter <ActiveCharacter>k__BackingField;

		[Token(Token = "0x17000133")]
		public PlayableCharacter ActiveCharacter
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x99AB88", Offset = "0x99AB88", VA = "0x99AB88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2504", Offset = "0x6F2504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x9A2384", Offset = "0x9A2384", VA = "0x9A2384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2514", Offset = "0x6F2514")]
			private set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public bool AreCharactersTethered
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x9A238C", Offset = "0x9A238C", VA = "0x9A238C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x9A2398", Offset = "0x9A2398", VA = "0x9A2398")]
			private set
			{
			}
		}

		[Token(Token = "0x17000135")]
		private CharacterType ActiveCharacterType
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x9A23D0", Offset = "0x9A23D0", VA = "0x9A23D0")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x9A246C", Offset = "0x9A246C", VA = "0x9A246C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x9A24A4", Offset = "0x9A24A4", VA = "0x9A24A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9A24DC", Offset = "0x9A24DC", VA = "0x9A24DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x9A28CC", Offset = "0x9A28CC", VA = "0x9A28CC", Slot = "6")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x9A28FC", Offset = "0x9A28FC", VA = "0x9A28FC")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x9A2A00", Offset = "0x9A2A00", VA = "0x9A2A00", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x9A3484", Offset = "0x9A3484", VA = "0x9A3484", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x9A3598", Offset = "0x9A3598", VA = "0x9A3598")]
		public Adventurer InstantiateCharacters()
		{
			return null;
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x9A3A8C", Offset = "0x9A3A8C", VA = "0x9A3A8C")]
		public bool TrySpawnFourHalf(RoomType roomType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x994AE8", Offset = "0x994AE8", VA = "0x994AE8")]
		public PlayableCharacter SpawnCharacter(CharacterType characterType, CharacterState startState, RoomType roomType, Vector3 position, Quaternion rotation, CharacterInstantiationFallbackState fallbackState)
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x9A3D8C", Offset = "0x9A3D8C", VA = "0x9A3D8C")]
		public void LoadCharactersFromSave()
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x9A4108", Offset = "0x9A4108", VA = "0x9A4108")]
		public void DebugInstantiateCharacters(CharacterType startCharactersFlag, Room startRoom)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x99C3CC", Offset = "0x99C3CC", VA = "0x99C3CC")]
		public void AddNPCCharacter(CharacterData data, NPCCharacter npcCharacter)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x99C1D4", Offset = "0x99C1D4", VA = "0x99C1D4")]
		public void DisableActiveNPCCharacter(CharacterData data)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x99C6F4", Offset = "0x99C6F4", VA = "0x99C6F4")]
		public bool TryLoadCharacter(string guid, out NPCSaveData saveData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x9A45F8", Offset = "0x9A45F8", VA = "0x9A45F8")]
		public bool CanGetPlayableCharacter(CharacterType characterType, out PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x997A20", Offset = "0x997A20", VA = "0x997A20")]
		public bool IsPlayableCharacterAvailable(PlayableCharacterData characterData, out PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x9A3CBC", Offset = "0x9A3CBC", VA = "0x9A3CBC")]
		public bool IsPlayableCharacterAvailable(CharacterType characterType, out PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x996368", Offset = "0x996368", VA = "0x996368")]
		public Character GetCharacter(CharacterData characterData)
		{
			return null;
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x9A46D0", Offset = "0x9A46D0", VA = "0x9A46D0")]
		public void DisableAllCharacters(bool includeNPCs)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x997828", Offset = "0x997828", VA = "0x997828")]
		public void SetCharacterState(PlayableCharacterData characterData, CharacterState characterState)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x9A069C", Offset = "0x9A069C", VA = "0x9A069C")]
		public void SetCharacterState(PlayableCharacter character, CharacterState state, bool forceSet = false)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x997B80", Offset = "0x997B80", VA = "0x997B80")]
		public void SetCharacterStates(CharacterState characterState)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x997FD4", Offset = "0x997FD4", VA = "0x997FD4")]
		public void ResetCharacterStates()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x9A4ED0", Offset = "0x9A4ED0", VA = "0x9A4ED0")]
		public void ResetCharacterStates(RoomType activeRoom)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x9A5354", Offset = "0x9A5354", VA = "0x9A5354")]
		public void ForceSetTetheredState(bool isTethered, CharacterType desiredActiveCharacterType, Transform companionTeleportPoint)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x9A5814", Offset = "0x9A5814", VA = "0x9A5814")]
		public bool TrySetTetheredState(bool isTethered)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x9A5890", Offset = "0x9A5890", VA = "0x9A5890")]
		public bool TrySetTetheredState(bool isTethered, CharacterType desiredActiveCharacterType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x9A58E0", Offset = "0x9A58E0", VA = "0x9A58E0")]
		public bool TrySetTetheredState(bool isTethered, Transform companionTeleportPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x99CD68", Offset = "0x99CD68", VA = "0x99CD68")]
		public void TryRemoveCharacter(CharacterType characterType)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x9A5A14", Offset = "0x9A5A14", VA = "0x9A5A14")]
		public void TryRemoveCharacter(CharacterData data, NPCCharacter npcCharacter)
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x9A5C34", Offset = "0x9A5C34", VA = "0x9A5C34")]
		public void OnBiomeLoadStarted(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x9A5E20", Offset = "0x9A5E20", VA = "0x9A5E20")]
		public void OnBiomeLoadComplete(BiomeType biomeType, RoomType roomType)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x9A5860", Offset = "0x9A5860", VA = "0x9A5860")]
		private void SetTetheredState(bool isTethered)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x9A548C", Offset = "0x9A548C", VA = "0x9A548C")]
		private void SetTetheredState(bool isTethered, CharacterType desiredActiveCharacterType)
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x9A5F64", Offset = "0x9A5F64", VA = "0x9A5F64")]
		public void TeleportCharacters(CharacterType characterType, Vector3 position, Quaternion rotation, RoomType activeRoom)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x9A4318", Offset = "0x9A4318", VA = "0x9A4318")]
		public void TeleportPassiveCharacter(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x9A63E8", Offset = "0x9A63E8", VA = "0x9A63E8")]
		public void SelectCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x9A6464", Offset = "0x9A6464", VA = "0x9A6464")]
		public void SetCharacterDestination(InteractableObject interactable, LocomotionLockState lockState)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x9A67AC", Offset = "0x9A67AC", VA = "0x9A67AC")]
		public void SetCharacterDestination(InteractableObject interactable, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x9A6484", Offset = "0x9A6484", VA = "0x9A6484")]
		public void SetCharacterDestination(PlayableCharacter character, InteractableObject interactable, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x99682C", Offset = "0x99682C", VA = "0x99682C")]
		public void SetCharacterDestination(PlayableCharacter character, Vector3 destination, InteractableObject interactable, Action onDestinationReached)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x9A67E0", Offset = "0x9A67E0", VA = "0x9A67E0")]
		public void SetZoomInStateActive(bool isZoomedIn, CharacterType zoomInTargetType)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x99E870", Offset = "0x99E870", VA = "0x99E870")]
		public bool HasCharacter(CharacterType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x9A3E58", Offset = "0x9A3E58", VA = "0x9A3E58")]
		private void LoadAllCharacters()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x9A43FC", Offset = "0x9A43FC", VA = "0x9A43FC")]
		private void DebugSpawnAllCharacters(CharacterType startCharacterFlag, Room startRoom)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x9A4D50", Offset = "0x9A4D50", VA = "0x9A4D50")]
		private bool TrySetActiveCharacter(PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x9A2768", Offset = "0x9A2768", VA = "0x9A2768")]
		private void TrySwitchCharacter(int currentCharacterIndex)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x9A3924", Offset = "0x9A3924", VA = "0x9A3924")]
		private void InactivateCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x9A5F38", Offset = "0x9A5F38", VA = "0x9A5F38")]
		private CharacterState GetPassiveState()
		{
			return default(CharacterState);
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x9A2650", Offset = "0x9A2650", VA = "0x9A2650")]
		private bool CanToggleTetheredState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x9A33F0", Offset = "0x9A33F0", VA = "0x9A33F0")]
		private void SaveNPC(NPCSaveData saveData)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x9A275C", Offset = "0x9A275C", VA = "0x9A275C")]
		private int GetCharacterIndex(CharacterType characterType)
		{
			return default(int);
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x9A6BD0", Offset = "0x9A6BD0", VA = "0x9A6BD0")]
		private int CharacterTypeLength()
		{
			return default(int);
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x9A6BD4", Offset = "0x9A6BD4", VA = "0x9A6BD4")]
		private string[] CharacterTypeNames()
		{
			return null;
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x9A6BD8", Offset = "0x9A6BD8", VA = "0x9A6BD8")]
		public CharacterManager()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public static class CortopiaPrefs
	{
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_isDirty;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int sm_changeCount;

		[Token(Token = "0x17000136")]
		private static bool IsDirty
		{
			[Token(Token = "0x6000F3B")]
			[Address(RVA = "0x9A6FF4", Offset = "0x9A6FF4", VA = "0x9A6FF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F3C")]
			[Address(RVA = "0x9A7044", Offset = "0x9A7044", VA = "0x9A7044")]
			set
			{
			}
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x9A70BC", Offset = "0x9A70BC", VA = "0x9A70BC")]
		public static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x9A70E0", Offset = "0x9A70E0", VA = "0x9A70E0")]
		public static bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x9A7100", Offset = "0x9A7100", VA = "0x9A7100")]
		public static int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x9A7108", Offset = "0x9A7108", VA = "0x9A7108")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x9A7110", Offset = "0x9A7110", VA = "0x9A7110")]
		public static float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x9A7118", Offset = "0x9A7118", VA = "0x9A7118")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x9A7120", Offset = "0x9A7120", VA = "0x9A7120")]
		public static string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x9A7128", Offset = "0x9A7128", VA = "0x9A7128")]
		public static string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6000F45")]
		public static TEnum GetEnum<TEnum>(string key, TEnum defaultValue)
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6000F46")]
		public static TEnum GetEnum<TEnum>(string key)
		{
			return (TEnum)null;
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x9A7130", Offset = "0x9A7130", VA = "0x9A7130")]
		public static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x9A7150", Offset = "0x9A7150", VA = "0x9A7150")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x9A716C", Offset = "0x9A716C", VA = "0x9A716C")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x9A7188", Offset = "0x9A7188", VA = "0x9A7188")]
		public static void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6000F4B")]
		public static void SetEnum<TEnum>(string key, TEnum value)
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x9A71A4", Offset = "0x9A71A4", VA = "0x9A71A4")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x9A71AC", Offset = "0x9A71AC", VA = "0x9A71AC")]
		public static void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x9A71B4", Offset = "0x9A71B4", VA = "0x9A71B4")]
		public static void Save()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public struct PendingDialogData
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E98E4", Offset = "0x6E98E4")]
		private CharacterData <CharacterData>k__BackingField;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E98F4", Offset = "0x6E98F4")]
		private CharacterVoiceLine <Line>k__BackingField;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9904", Offset = "0x6E9904")]
		private bool <IsPending>k__BackingField;

		[Token(Token = "0x17000137")]
		public CharacterData CharacterData
		{
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0x7645CC", Offset = "0x7645CC", VA = "0x7645CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2524", Offset = "0x6F2524")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x7645D4", Offset = "0x7645D4", VA = "0x7645D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2534", Offset = "0x6F2534")]
			private set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public CharacterVoiceLine Line
		{
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0x7645DC", Offset = "0x7645DC", VA = "0x7645DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2544", Offset = "0x6F2544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0x7645E4", Offset = "0x7645E4", VA = "0x7645E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2554", Offset = "0x6F2554")]
			private set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool IsPending
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x7645EC", Offset = "0x7645EC", VA = "0x7645EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2564", Offset = "0x6F2564")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x7645F4", Offset = "0x7645F4", VA = "0x7645F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2574", Offset = "0x6F2574")]
			set
			{
			}
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x7645BC", Offset = "0x7645BC", VA = "0x7645BC")]
		public PendingDialogData(CharacterData characterData, CharacterVoiceLine line)
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class DialogueManager : MonoBehaviour
	{
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DEC", Offset = "0x6E2DEC")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueManager <>4__this;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BehaviourSystem dialogue;

			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x9A7A88", Offset = "0x9A7A88", VA = "0x9A7A88")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60018B3")]
			[Address(RVA = "0x9A89C4", Offset = "0x9A89C4", VA = "0x9A89C4")]
			internal void <StartOutroDialogue>b__0()
			{
			}
		}

		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2DFC", Offset = "0x6E2DFC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueManager <>4__this;

			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BehaviourSystem dialogue;

			[Token(Token = "0x60018B4")]
			[Address(RVA = "0x87775C", Offset = "0x87775C", VA = "0x87775C")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x877764", Offset = "0x877764", VA = "0x877764")]
			internal void <StartDialogue>b__0()
			{
			}
		}

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Quaternion sm_mirroredRotation;

		[Token(Token = "0x4000B12")]
		private const float SpawnDialogueTime = 1f;

		[Token(Token = "0x4000B13")]
		private const float SkipDialogueHoldTime = 1f;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DialogueUI m_ui;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DialogueBehaviour m_dialogueBehaviour;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IList<CharacterAnimationHandler> m_activeLookAtComponents;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Voice m_currentSpeaker;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isPlayingDialogue;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isOutroDialogue;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_skipDialogueTimer;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action m_onDialogueCompleted;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PendingDialogData m_pendingDialogData;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9934", Offset = "0x6E9934")]
		private int <OptionIndex>k__BackingField;

		[Token(Token = "0x1700013A")]
		public DialogueUI UI
		{
			[Token(Token = "0x6000F56")]
			[Address(RVA = "0x9A724C", Offset = "0x9A724C", VA = "0x9A724C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		public int OptionIndex
		{
			[Token(Token = "0x6000F57")]
			[Address(RVA = "0x9A7254", Offset = "0x9A7254", VA = "0x9A7254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2584", Offset = "0x6F2584")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F58")]
			[Address(RVA = "0x9A725C", Offset = "0x9A725C", VA = "0x9A725C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2594", Offset = "0x6F2594")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool IsVoiceActive
		{
			[Token(Token = "0x6000F59")]
			[Address(RVA = "0x9A7264", Offset = "0x9A7264", VA = "0x9A7264")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x9A7304", Offset = "0x9A7304", VA = "0x9A7304")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x9A730C", Offset = "0x9A730C", VA = "0x9A730C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x9A733C", Offset = "0x9A733C", VA = "0x9A733C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0x9A789C", Offset = "0x9A789C", VA = "0x9A789C")]
		public void StartOutroDialogue(BehaviourSystem dialogue, Transform subtitleAnchorPoint, Action onDialogueCompleted)
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x9A7A90", Offset = "0x9A7A90", VA = "0x9A7A90")]
		public void StartDialogue(BehaviourSystem dialogue, Transform subtitleAnchorPoint, Action onDialogueCompleted)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x9A7D80", Offset = "0x9A7D80", VA = "0x9A7D80")]
		public void PlayLine(CharacterData characterData, CharacterVoiceLine line)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x9A8008", Offset = "0x9A8008", VA = "0x9A8008")]
		public void LoadFacialExpressions(ExpressionData[] expressionData)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x9A80F0", Offset = "0x9A80F0", VA = "0x9A80F0")]
		public void TriggerAnimation(AnimationData animationData)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x9A8184", Offset = "0x9A8184", VA = "0x9A8184")]
		public void TriggerAnimation(AnimationData animationData, AnimatedVoice animatedVoice)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x9A8214", Offset = "0x9A8214", VA = "0x9A8214")]
		public void AddLookAtTarget(CharacterAnimationHandler animationHandler, Transform targetTransform, float blendSpeed)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x9A83B0", Offset = "0x9A83B0", VA = "0x9A83B0")]
		public void RemoveLookAtTarget(CharacterAnimationHandler animationHandler, float blendSpeed)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x9A84B4", Offset = "0x9A84B4", VA = "0x9A84B4")]
		public void ShowOptions(string[] optionTitles)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x9A84F4", Offset = "0x9A84F4", VA = "0x9A84F4")]
		public void OptionSelected(int optionIndex)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x9A7744", Offset = "0x9A7744", VA = "0x9A7744")]
		public void EndDialogue()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x9A8894", Offset = "0x9A8894", VA = "0x9A8894")]
		private void RaiseDialogueCompletedEvent()
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x9A7F38", Offset = "0x9A7F38", VA = "0x9A7F38")]
		private void TryUpdateCurrentVoice(CharacterData character)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x9A84FC", Offset = "0x9A84FC", VA = "0x9A84FC")]
		private void ResetCurrentSpeaker()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x9A7594", Offset = "0x9A7594", VA = "0x9A7594")]
		private void SkipLine()
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x9A8598", Offset = "0x9A8598", VA = "0x9A8598")]
		private void ResetLookAtTargets()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x9A7650", Offset = "0x9A7650", VA = "0x9A7650")]
		private static bool IsPlayableCharacter(CharacterData character)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x9A88C4", Offset = "0x9A88C4", VA = "0x9A88C4")]
		public DialogueManager()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public enum HMDActivityStatusType
	{
		[Token(Token = "0x4000B1F")]
		Aquired,
		[Token(Token = "0x4000B20")]
		Lost
	}
	[Token(Token = "0x2000220")]
	public enum HMDMountStatusType
	{
		[Token(Token = "0x4000B22")]
		Mounted,
		[Token(Token = "0x4000B23")]
		Unmounted
	}
	[Token(Token = "0x2000221")]
	public static class Game
	{
		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_shouldPause;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9944", Offset = "0x6E9944")]
		private static HUDMessage <HUD>k__BackingField;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9954", Offset = "0x6E9954")]
		private static GameOptions <Options>k__BackingField;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9964", Offset = "0x6E9964")]
		private static GameSettings <Settings>k__BackingField;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9974", Offset = "0x6E9974")]
		private static LevelManager <LevelManager>k__BackingField;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9984", Offset = "0x6E9984")]
		private static CharacterManager <CharacterManager>k__BackingField;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9994", Offset = "0x6E9994")]
		private static InputManager <Input>k__BackingField;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E99A4", Offset = "0x6E99A4")]
		private static InteractionsManager <Interactions>k__BackingField;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E99B4", Offset = "0x6E99B4")]
		private static DialogueManager <DialogueManager>k__BackingField;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E99C4", Offset = "0x6E99C4")]
		private static PlayerControl <Player>k__BackingField;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E99D4", Offset = "0x6E99D4")]
		private static InventoryManager <Inventory>k__BackingField;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E99E4", Offset = "0x6E99E4")]
		private static SaveManager <SaveManager>k__BackingField;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E99F4", Offset = "0x6E99F4")]
		private static RoomManager <RoomManager>k__BackingField;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A04", Offset = "0x6E9A04")]
		private static VOManager <VOManager>k__BackingField;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A14", Offset = "0x6E9A14")]
		private static AudioManager <AudioManager>k__BackingField;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A24", Offset = "0x6E9A24")]
		private static MusicManager <MusicManager>k__BackingField;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A34", Offset = "0x6E9A34")]
		private static LoadingScreen <LoadingScreen>k__BackingField;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A44", Offset = "0x6E9A44")]
		private static GameState <GameState>k__BackingField;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A54", Offset = "0x6E9A54")]
		private static HMDActivityStatusType <HMDActivityStatus>k__BackingField;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9A64", Offset = "0x6E9A64")]
		private static HMDMountStatusType <HMDMountStatus>k__BackingField;

		[Token(Token = "0x1700013D")]
		public static HUDMessage HUD
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x8777D4", Offset = "0x8777D4", VA = "0x8777D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F25A4", Offset = "0x6F25A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x87783C", Offset = "0x87783C", VA = "0x87783C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F25B4", Offset = "0x6F25B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013E")]
		public static GameOptions Options
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0x8778A8", Offset = "0x8778A8", VA = "0x8778A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F25C4", Offset = "0x6F25C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0x877910", Offset = "0x877910", VA = "0x877910")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F25D4", Offset = "0x6F25D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public static GameSettings Settings
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0x87797C", Offset = "0x87797C", VA = "0x87797C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F25E4", Offset = "0x6F25E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0x8779E4", Offset = "0x8779E4", VA = "0x8779E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F25F4", Offset = "0x6F25F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public static LevelManager LevelManager
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0x877A50", Offset = "0x877A50", VA = "0x877A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2604", Offset = "0x6F2604")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0x877AB8", Offset = "0x877AB8", VA = "0x877AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2614", Offset = "0x6F2614")]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public static CharacterManager CharacterManager
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0x877B24", Offset = "0x877B24", VA = "0x877B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2624", Offset = "0x6F2624")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0x877B8C", Offset = "0x877B8C", VA = "0x877B8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2634", Offset = "0x6F2634")]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public static InputManager Input
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0x877BF8", Offset = "0x877BF8", VA = "0x877BF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2644", Offset = "0x6F2644")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0x877C60", Offset = "0x877C60", VA = "0x877C60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2654", Offset = "0x6F2654")]
			private set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public static InteractionsManager Interactions
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0x877CCC", Offset = "0x877CCC", VA = "0x877CCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2664", Offset = "0x6F2664")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0x877D34", Offset = "0x877D34", VA = "0x877D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2674", Offset = "0x6F2674")]
			private set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public static DialogueManager DialogueManager
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x877DA0", Offset = "0x877DA0", VA = "0x877DA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2684", Offset = "0x6F2684")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F7F")]
			[Address(RVA = "0x877E08", Offset = "0x877E08", VA = "0x877E08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2694", Offset = "0x6F2694")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public static PlayerControl Player
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x877E74", Offset = "0x877E74", VA = "0x877E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F26A4", Offset = "0x6F26A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F81")]
			[Address(RVA = "0x877EDC", Offset = "0x877EDC", VA = "0x877EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F26B4", Offset = "0x6F26B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public static InventoryManager Inventory
		{
			[Token(Token = "0x6000F82")]
			[Address(RVA = "0x877F48", Offset = "0x877F48", VA = "0x877F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F26C4", Offset = "0x6F26C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F83")]
			[Address(RVA = "0x877FB0", Offset = "0x877FB0", VA = "0x877FB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F26D4", Offset = "0x6F26D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public static SaveManager SaveManager
		{
			[Token(Token = "0x6000F84")]
			[Address(RVA = "0x87801C", Offset = "0x87801C", VA = "0x87801C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F26E4", Offset = "0x6F26E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F85")]
			[Address(RVA = "0x878084", Offset = "0x878084", VA = "0x878084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F26F4", Offset = "0x6F26F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public static RoomManager RoomManager
		{
			[Token(Token = "0x6000F86")]
			[Address(RVA = "0x8780F0", Offset = "0x8780F0", VA = "0x8780F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2704", Offset = "0x6F2704")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0x878158", Offset = "0x878158", VA = "0x878158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2714", Offset = "0x6F2714")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public static VOManager VOManager
		{
			[Token(Token = "0x6000F88")]
			[Address(RVA = "0x8781C4", Offset = "0x8781C4", VA = "0x8781C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2724", Offset = "0x6F2724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0x87822C", Offset = "0x87822C", VA = "0x87822C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2734", Offset = "0x6F2734")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public static AudioManager AudioManager
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0x878298", Offset = "0x878298", VA = "0x878298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2744", Offset = "0x6F2744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0x878300", Offset = "0x878300", VA = "0x878300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2754", Offset = "0x6F2754")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public static MusicManager MusicManager
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0x87836C", Offset = "0x87836C", VA = "0x87836C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2764", Offset = "0x6F2764")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x8783D4", Offset = "0x8783D4", VA = "0x8783D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2774", Offset = "0x6F2774")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public static LoadingScreen LoadingScreen
		{
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x878440", Offset = "0x878440", VA = "0x878440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2784", Offset = "0x6F2784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F8F")]
			[Address(RVA = "0x8784A8", Offset = "0x8784A8", VA = "0x8784A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2794", Offset = "0x6F2794")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public static GameState GameState
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0x878514", Offset = "0x878514", VA = "0x878514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F27A4", Offset = "0x6F27A4")]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x87857C", Offset = "0x87857C", VA = "0x87857C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F27B4", Offset = "0x6F27B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public static HMDActivityStatusType HMDActivityStatus
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0x8785E8", Offset = "0x8785E8", VA = "0x8785E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F27C4", Offset = "0x6F27C4")]
			get
			{
				return default(HMDActivityStatusType);
			}
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x878650", Offset = "0x878650", VA = "0x878650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F27D4", Offset = "0x6F27D4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public static HMDMountStatusType HMDMountStatus
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x8786BC", Offset = "0x8786BC", VA = "0x8786BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F27E4", Offset = "0x6F27E4")]
			get
			{
				return default(HMDMountStatusType);
			}
			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x878724", Offset = "0x878724", VA = "0x878724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F27F4", Offset = "0x6F27F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public static bool IsPaused
		{
			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x878790", Offset = "0x878790", VA = "0x878790")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400004C")]
		public static event Action OnGameStarted
		{
			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x8787F8", Offset = "0x8787F8", VA = "0x8787F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2804", Offset = "0x6F2804")]
			add
			{
			}
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x878928", Offset = "0x878928", VA = "0x878928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2814", Offset = "0x6F2814")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x878A58", Offset = "0x878A58", VA = "0x878A58")]
		public static IPromise InitializeHUD()
		{
			return null;
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0x878C14", Offset = "0x878C14", VA = "0x878C14")]
		public static IPromise LoadOptions()
		{
			return null;
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x878CC0", Offset = "0x878CC0", VA = "0x878CC0")]
		public static IPromise LoadSettings()
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x8791EC", Offset = "0x8791EC", VA = "0x8791EC")]
		public static IPromise InitializeGame()
		{
			return null;
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x879614", Offset = "0x879614", VA = "0x879614")]
		public static IPromise LoadAndCacheSaveData()
		{
			return null;
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x8798CC", Offset = "0x8798CC", VA = "0x8798CC")]
		public static void RaiseOnGameStarted()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0x8799B4", Offset = "0x8799B4", VA = "0x8799B4")]
		public static void StartGame()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0x879950", Offset = "0x879950", VA = "0x879950")]
		public static void SetGameState(GameState newGameState)
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x879AB8", Offset = "0x879AB8", VA = "0x879AB8")]
		public static void PauseGame(bool shouldPause)
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x879B84", Offset = "0x879B84", VA = "0x879B84")]
		public static void HandlePause()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x879D14", Offset = "0x879D14", VA = "0x879D14")]
		public static void SetHMDActivityStatus(HMDActivityStatusType hmdActivityStatus)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x879E10", Offset = "0x879E10", VA = "0x879E10")]
		public static void SetHMDMountStatus(HMDMountStatusType hmdMountStatus)
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0x879F0C", Offset = "0x879F0C", VA = "0x879F0C")]
		public static void SendAnalyticsEvent(string eventName)
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0x879FF0", Offset = "0x879FF0", VA = "0x879FF0")]
		public static void SendAnalyticsEvent(string eventName, IDictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x87A0E8", Offset = "0x87A0E8", VA = "0x87A0E8")]
		public static void SendGameSavedAnalyticsEvent(IDictionary<string, object> eventData)
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class GameOptions : ScriptableObject
	{
		[Token(Token = "0x4000B39")]
		public const string Name = "PitGameOptions";

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9A84", Offset = "0x6E9A84")]
		public PlatformType Platform;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9ABC", Offset = "0x6E9ABC")]
		public bool Release;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameVersion GameVersion;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Region;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object MainManifest;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Object QuestManifest;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Object QuestManifestRelease;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9AF4", Offset = "0x6E9AF4")]
		public float RecenterForwardMultiplier;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float RecenterUpAddOn;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float RotationIncrement;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementIncrement;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9B2C", Offset = "0x6E9B2C")]
		public bool ShowTitleScene;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LoadFromSave;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SaveSlot;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool LoadBiome;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public BiomeType CustomStartBiome;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public RoomType CustomStartRoom;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public CharacterType CustomStartCharacters;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9B64", Offset = "0x6E9B64")]
		public bool RenderTrailerCamera;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int MaximumLoadedBiomes;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9B9C", Offset = "0x6E9B9C")]
		public bool ShowFPSCounter;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool UseDebugInput;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool UseDebugPlatform;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool EnableLog;

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x87A15C", Offset = "0x87A15C", VA = "0x87A15C")]
		public GameOptions()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public enum GameState
	{
		[Token(Token = "0x4000B53")]
		Starting,
		[Token(Token = "0x4000B54")]
		Loading,
		[Token(Token = "0x4000B55")]
		Running,
		[Token(Token = "0x4000B56")]
		Paused
	}
	[Serializable]
	[Token(Token = "0x2000224")]
	public struct GameVersion
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Major;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Minor;

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x76451C", Offset = "0x76451C", VA = "0x76451C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0x87A228", Offset = "0x87A228", VA = "0x87A228")]
		public static implicit operator string(GameVersion version)
		{
			return null;
		}
	}
	[Token(Token = "0x2000225")]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x2000406")]
		private enum ButtonState
		{
			[Token(Token = "0x4001378")]
			None,
			[Token(Token = "0x4001379")]
			Down,
			[Token(Token = "0x400137A")]
			Hold,
			[Token(Token = "0x400137B")]
			Up
		}

		[Token(Token = "0x2000407")]
		private enum InputType
		{
			[Token(Token = "0x400137D")]
			Axis = 1,
			[Token(Token = "0x400137E")]
			Button = 2,
			[Token(Token = "0x400137F")]
			Trigger = 4
		}

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlatformInput m_currentInput;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IDictionary<AxisType, Vector3> m_axisStates;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IDictionary<ButtonType, ButtonState> m_buttonStates;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IDictionary<TriggerType, float> m_triggerStates;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IDictionary<Cortopia.Scripts.Platform.Input.TouchType, bool> m_touchStates;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9BD4", Offset = "0x6E9BD4")]
		private bool <IsInputLocked>k__BackingField;

		[Token(Token = "0x17000151")]
		public bool IsInputLocked
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x87A24C", Offset = "0x87A24C", VA = "0x87A24C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2824", Offset = "0x6F2824")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x87A254", Offset = "0x87A254", VA = "0x87A254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2834", Offset = "0x6F2834")]
			private set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public InputDeviceType InputDeviceType
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x87A260", Offset = "0x87A260", VA = "0x87A260")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x87A314", Offset = "0x87A314", VA = "0x87A314")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x87A748", Offset = "0x87A748", VA = "0x87A748")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x87B0FC", Offset = "0x87B0FC", VA = "0x87B0FC")]
		public void SetInputLocked(bool setLocked)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x87B60C", Offset = "0x87B60C", VA = "0x87B60C")]
		public Vector2 GetAxis(AxisType axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x87B720", Offset = "0x87B720", VA = "0x87B720")]
		public float GetTrigger(TriggerType trigger)
		{
			return default(float);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x87B7E4", Offset = "0x87B7E4", VA = "0x87B7E4")]
		public bool GetButtonDown(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x87B8B4", Offset = "0x87B8B4", VA = "0x87B8B4")]
		public bool GetButton(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x87B984", Offset = "0x87B984", VA = "0x87B984")]
		public bool GetButtonUp(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x87BA54", Offset = "0x87BA54", VA = "0x87BA54")]
		public bool GetTouch(Cortopia.Scripts.Platform.Input.TouchType touch)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x87B148", Offset = "0x87B148", VA = "0x87B148")]
		private void ClearInputStates(InputType inputTypeMask)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x87A3B0", Offset = "0x87A3B0", VA = "0x87A3B0")]
		private void TryClearOldInputs()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x87A3C4", Offset = "0x87A3C4", VA = "0x87A3C4")]
		private void DefineButtonStates()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x87BB18", Offset = "0x87BB18", VA = "0x87BB18")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class InteractionsManager : MonoBehaviour
	{
		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PointerInteractionHighlight m_pointerInteractionHighlightPrefab;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_pointerHighlightCount;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractionHighlight m_highlightPrefab;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputIconType m_inputIconType;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_isHighlightBlocked;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractionHighlight m_highlightInstance;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PointerInteractionHighlight[] m_interactionHighlightPool;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISet<IHighlightableInteractable> m_pointerInteractables;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IDictionary<Character, List<ICharacterInteractable>> m_characterInteractables;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<ICharacterInteractable> m_filterList;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_characterActivatedEventToken;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_characterDisabledEventToken;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x87BEC0", Offset = "0x87BEC0", VA = "0x87BEC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x87BF54", Offset = "0x87BF54", VA = "0x87BF54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x87C3CC", Offset = "0x87C3CC", VA = "0x87C3CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x87C31C", Offset = "0x87C31C", VA = "0x87C31C")]
		public void UpdateHighlightInteractableInputIcon(Sprite sprite)
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x87C490", Offset = "0x87C490", VA = "0x87C490")]
		public void SetInteractionsHighlightBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x87C56C", Offset = "0x87C56C", VA = "0x87C56C")]
		public void ClearAllInteractables()
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x87C8F4", Offset = "0x87C8F4", VA = "0x87C8F4")]
		public void ClearInteractables(Character character)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x87CAF4", Offset = "0x87CAF4", VA = "0x87CAF4")]
		public void ClearInteractable(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x87CE3C", Offset = "0x87CE3C", VA = "0x87CE3C")]
		public void TryAddInteractable(Character character, ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x87D128", Offset = "0x87D128", VA = "0x87D128")]
		public void TryRemoveInteractable(Character character, ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x87D0F0", Offset = "0x87D0F0", VA = "0x87D0F0")]
		public void EnableHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x87D2F4", Offset = "0x87D2F4", VA = "0x87D2F4")]
		public void DisableHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x87C4A8", Offset = "0x87C4A8", VA = "0x87C4A8")]
		private void DisableHighlight()
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x87D368", Offset = "0x87D368", VA = "0x87D368")]
		public void EnablePointerHighlight(IHighlightableInteractable interactable, float hintTime)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x87D598", Offset = "0x87D598", VA = "0x87D598")]
		public void DisablePointerHighlight(IHighlightableInteractable interactable, bool interactAndDisable)
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x87C4D8", Offset = "0x87C4D8", VA = "0x87C4D8")]
		public void UpdateHighlightInteractable(bool defaultDisableHighlight = true)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x87D78C", Offset = "0x87D78C", VA = "0x87D78C")]
		private void UpdateHighlightInteractable(Character characterControl, bool defaultDisableHighlight = true)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x87D4F8", Offset = "0x87D4F8", VA = "0x87D4F8")]
		private PointerInteractionHighlight GetInteractionHighlightFromPool()
		{
			return null;
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x87C1C8", Offset = "0x87C1C8", VA = "0x87C1C8")]
		private void SpawnInteractionHighlightPool()
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x87DA30", Offset = "0x87DA30", VA = "0x87DA30")]
		private PointerInteractionHighlight SpawnAdditionalInteractionHighlight()
		{
			return null;
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x87DB60", Offset = "0x87DB60", VA = "0x87DB60")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x87DB98", Offset = "0x87DB98", VA = "0x87DB98")]
		private void OnCharacterDisabled(CharacterEvents.CharacterDisabledEvent eventData)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x87DBD8", Offset = "0x87DBD8", VA = "0x87DBD8")]
		public InteractionsManager()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class IntroManager : TitleManager
	{
		[Serializable]
		[Token(Token = "0x2000408")]
		public struct SaveSlotInfo
		{
			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TMP_Text InvitationsFoundText;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TMP_Text BiomeText;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image BiomeIcon;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image InvitationIcon;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Localize Localize;
		}

		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E0C", Offset = "0x6E2E0C")]
		private sealed class <PlayIntroSequence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018B9")]
				[Address(RVA = "0x8819F0", Offset = "0x8819F0", VA = "0x8819F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018BB")]
				[Address(RVA = "0x881A60", Offset = "0x881A60", VA = "0x881A60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018B6")]
			[Address(RVA = "0x87E858", Offset = "0x87E858", VA = "0x87E858")]
			[DebuggerHidden]
			public <PlayIntroSequence>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60018B7")]
			[Address(RVA = "0x88124C", Offset = "0x88124C", VA = "0x88124C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018B8")]
			[Address(RVA = "0x881250", Offset = "0x881250", VA = "0x881250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018BA")]
			[Address(RVA = "0x8819F8", Offset = "0x8819F8", VA = "0x8819F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E1C", Offset = "0x6E2E1C")]
		private sealed class <PlayTitleSequence>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018BF")]
				[Address(RVA = "0x881B7C", Offset = "0x881B7C", VA = "0x881B7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C1")]
				[Address(RVA = "0x881BEC", Offset = "0x881BEC", VA = "0x881BEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x87E884", Offset = "0x87E884", VA = "0x87E884")]
			[DebuggerHidden]
			public <PlayTitleSequence>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x881A68", Offset = "0x881A68", VA = "0x881A68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x881A6C", Offset = "0x881A6C", VA = "0x881A6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x881B84", Offset = "0x881B84", VA = "0x881B84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E2C", Offset = "0x6E2E2C")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool awaitMainLoad;

			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x8803D8", Offset = "0x8803D8", VA = "0x8803D8")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x8803E0", Offset = "0x8803E0", VA = "0x8803E0")]
			internal void <LoadCore>b__0()
			{
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E3C", Offset = "0x6E2E3C")]
		private sealed class <LoadCore>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass25_0 <>8__1;

			[Token(Token = "0x1700023F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018C7")]
				[Address(RVA = "0x8810B4", Offset = "0x8810B4", VA = "0x8810B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018C9")]
				[Address(RVA = "0x881124", Offset = "0x881124", VA = "0x881124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x87EA24", Offset = "0x87EA24", VA = "0x87EA24")]
			[DebuggerHidden]
			public <LoadCore>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x880E9C", Offset = "0x880E9C", VA = "0x880E9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x880EA0", Offset = "0x880EA0", VA = "0x880EA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x8810BC", Offset = "0x8810BC", VA = "0x8810BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E4C", Offset = "0x6E2E4C")]
		private sealed class <LoadSavedBiome>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018CD")]
				[Address(RVA = "0x8811D4", Offset = "0x8811D4", VA = "0x8811D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018CF")]
				[Address(RVA = "0x881244", Offset = "0x881244", VA = "0x881244", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x87EAC4", Offset = "0x87EAC4", VA = "0x87EAC4")]
			[DebuggerHidden]
			public <LoadSavedBiome>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x88112C", Offset = "0x88112C", VA = "0x88112C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CC")]
			[Address(RVA = "0x881130", Offset = "0x881130", VA = "0x881130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x8811DC", Offset = "0x8811DC", VA = "0x8811DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E5C", Offset = "0x6E2E5C")]
		private sealed class <StartNewGame>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D3")]
				[Address(RVA = "0x881FE8", Offset = "0x881FE8", VA = "0x881FE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D5")]
				[Address(RVA = "0x882058", Offset = "0x882058", VA = "0x882058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x87F1E4", Offset = "0x87F1E4", VA = "0x87F1E4")]
			[DebuggerHidden]
			public <StartNewGame>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60018D1")]
			[Address(RVA = "0x881BF4", Offset = "0x881BF4", VA = "0x881BF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D2")]
			[Address(RVA = "0x881BF8", Offset = "0x881BF8", VA = "0x881BF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018D4")]
			[Address(RVA = "0x881FF0", Offset = "0x881FF0", VA = "0x881FF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200040F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E6C", Offset = "0x6E2E6C")]
		private sealed class <ContinueGame>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int saveSlotIndex;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018D9")]
				[Address(RVA = "0x880774", Offset = "0x880774", VA = "0x880774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018DB")]
				[Address(RVA = "0x8807E4", Offset = "0x8807E4", VA = "0x8807E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018D6")]
			[Address(RVA = "0x87F210", Offset = "0x87F210", VA = "0x87F210")]
			[DebuggerHidden]
			public <ContinueGame>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60018D7")]
			[Address(RVA = "0x8803F8", Offset = "0x8803F8", VA = "0x8803F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x8803FC", Offset = "0x8803FC", VA = "0x8803FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018DA")]
			[Address(RVA = "0x88077C", Offset = "0x88077C", VA = "0x88077C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E7C", Offset = "0x6E2E7C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isLoadingGame;

			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x8803E8", Offset = "0x8803E8", VA = "0x8803E8")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x8803F0", Offset = "0x8803F0", VA = "0x8803F0")]
			internal void <Load>b__0()
			{
			}
		}

		[Token(Token = "0x2000411")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E8C", Offset = "0x6E2E8C")]
		private sealed class <Load>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400139A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400139B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400139C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int saveSlotToLoad;

			[Token(Token = "0x400139D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass31_0 <>8__1;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018E1")]
				[Address(RVA = "0x880E24", Offset = "0x880E24", VA = "0x880E24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E3")]
				[Address(RVA = "0x880E94", Offset = "0x880E94", VA = "0x880E94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x87F2B0", Offset = "0x87F2B0", VA = "0x87F2B0")]
			[DebuggerHidden]
			public <Load>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x880B48", Offset = "0x880B48", VA = "0x880B48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x880B4C", Offset = "0x880B4C", VA = "0x880B4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E2")]
			[Address(RVA = "0x880E2C", Offset = "0x880E2C", VA = "0x880E2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000412")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2E9C", Offset = "0x6E2E9C")]
		private sealed class <InitializeNewGame>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400139E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400139F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018E7")]
				[Address(RVA = "0x880AD0", Offset = "0x880AD0", VA = "0x880AD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018E9")]
				[Address(RVA = "0x880B40", Offset = "0x880B40", VA = "0x880B40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x87F350", Offset = "0x87F350", VA = "0x87F350")]
			[DebuggerHidden]
			public <InitializeNewGame>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0x8807EC", Offset = "0x8807EC", VA = "0x8807EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018E6")]
			[Address(RVA = "0x8807F0", Offset = "0x8807F0", VA = "0x8807F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x880AD8", Offset = "0x880AD8", VA = "0x880AD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000413")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2EAC", Offset = "0x6E2EAC")]
		private sealed class <>c
		{
			[Token(Token = "0x40013A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__33_0;

			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x880358", Offset = "0x880358", VA = "0x880358")]
			public <>c()
			{
			}

			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x880360", Offset = "0x880360", VA = "0x880360")]
			internal void <OnCharacterActivated>b__33_0()
			{
			}
		}

		[Token(Token = "0x4000B6B")]
		private const string NewGameStartedAnalyticsEvent = "NewGameStarted";

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly YieldInstruction m_waitForButtonDisplay;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9C24", Offset = "0x6E9C24")]
		[SerializeField]
		private ScriptableEvent m_introTimelineStartEvent;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScriptableEvent m_startTutorialEvent;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CustomButtonHandler m_newGameButtonHandler;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CustomButtonHandler m_mainButtonHandler;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CustomButtonHandler m_newGameConfirmButtonHandler;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9CB0", Offset = "0x6E9CB0")]
		[SerializeField]
		protected AudioClip m_pressButtonStinger;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9CFC", Offset = "0x6E9CFC")]
		[SerializeField]
		private Sprite[] m_biomeSprites;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9D48", Offset = "0x6E9D48")]
		[SerializeField]
		private SaveSlotInfo[] m_saveSlotsInfo;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SaveSlotInfo[] m_loadSlotsInfo;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_playerActivatedEventToken;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Adventurer m_adventurer;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CustomButtonHandler m_activeMainButtons;

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x87DC80", Offset = "0x87DC80", VA = "0x87DC80", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x87DE14", Offset = "0x87DE14", VA = "0x87DE14")]
		public void StartIntro(ScriptableVariable skipLogoSequence)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x87E170", Offset = "0x87E170", VA = "0x87E170")]
		public void NewGame()
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x87E408", Offset = "0x87E408", VA = "0x87E408")]
		public void UpdateCurrentSaveSlot(int saveslotindex)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x87E484", Offset = "0x87E484", VA = "0x87E484")]
		public void TryNewSaveSlot(int saveSlotIndex)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x87E6B0", Offset = "0x87E6B0", VA = "0x87E6B0")]
		public void TryLoadSaveSlot(int saveSlotIndex)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x87E824", Offset = "0x87E824", VA = "0x87E824")]
		public void Back()
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x87E0FC", Offset = "0x87E0FC", VA = "0x87E0FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2844", Offset = "0x6F2844")]
		private IEnumerator PlayIntroSequence()
		{
			return null;
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x87E088", Offset = "0x87E088", VA = "0x87E088")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F28A8", Offset = "0x6F28A8")]
		private IEnumerator PlayTitleSequence()
		{
			return null;
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x87E8B0", Offset = "0x87E8B0", VA = "0x87E8B0")]
		private void SpawnCharacters()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x87E9C4", Offset = "0x87E9C4", VA = "0x87E9C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F290C", Offset = "0x6F290C")]
		private IEnumerator LoadCore()
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x87EA50", Offset = "0x87EA50", VA = "0x87EA50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2970", Offset = "0x6F2970")]
		private IEnumerator LoadSavedBiome()
		{
			return null;
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x87EAF0", Offset = "0x87EAF0", VA = "0x87EAF0")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x87F048", Offset = "0x87F048", VA = "0x87F048")]
		private void SetStartupLanguage()
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x87E394", Offset = "0x87E394", VA = "0x87E394")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F29D4", Offset = "0x6F29D4")]
		private IEnumerator StartNewGame()
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x87E78C", Offset = "0x87E78C", VA = "0x87E78C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2A38", Offset = "0x6F2A38")]
		private IEnumerator ContinueGame(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x87F23C", Offset = "0x87F23C", VA = "0x87F23C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2A9C", Offset = "0x6F2A9C")]
		private IEnumerator Load(int saveSlotToLoad)
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x87F2DC", Offset = "0x87F2DC", VA = "0x87F2DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2B00", Offset = "0x6F2B00")]
		private IEnumerator InitializeNewGame()
		{
			return null;
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x87F37C", Offset = "0x87F37C", VA = "0x87F37C")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x87EC5C", Offset = "0x87EC5C", VA = "0x87EC5C")]
		private void InitializeSaveSlots()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x87F5DC", Offset = "0x87F5DC", VA = "0x87F5DC")]
		private void SetSaveSlotInfoText(int saveSlotIndex, SaveSlotInfo saveSlotInfo)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x87FA1C", Offset = "0x87FA1C", VA = "0x87FA1C")]
		private void InitializeOldGame()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x87FAB8", Offset = "0x87FAB8", VA = "0x87FAB8")]
		private void LoadBiome()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x87FDAC", Offset = "0x87FDAC", VA = "0x87FDAC")]
		private void TryActivateTutorial()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x87FEAC", Offset = "0x87FEAC", VA = "0x87FEAC", Slot = "5")]
		protected override void DisableLogos()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x87DD74", Offset = "0x87DD74", VA = "0x87DD74")]
		private void DisableInputButtons(bool immediate = false)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x880134", Offset = "0x880134", VA = "0x880134")]
		public IntroManager()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x880218", Offset = "0x880218", VA = "0x880218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2B64", Offset = "0x6F2B64")]
		private void <StartGame>b__27_0(bool hasSave)
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class LevelManager : MonoBehaviour
	{
		[Token(Token = "0x2000414")]
		private struct Levels
		{
			[Token(Token = "0x40013A3")]
			public const string StartScene = "StartScene";

			[Token(Token = "0x40013A4")]
			public const string Main = "Main";

			[Token(Token = "0x40013A5")]
			public const string NavMesh = "NavMesh";

			[Token(Token = "0x40013A6")]
			public const string Title = "Title";

			[Token(Token = "0x40013A7")]
			public const string LOD = "LOD";
		}

		[Token(Token = "0x2000415")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2EBC", Offset = "0x6E2EBC")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40013A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LevelManager <>4__this;

			[Token(Token = "0x40013A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool saveGame;

			[Token(Token = "0x40013AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BiomeType biomeType;

			[Token(Token = "0x40013AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x8851E8", Offset = "0x8851E8", VA = "0x8851E8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x8869AC", Offset = "0x8869AC", VA = "0x8869AC")]
			internal void <SwitchBiome>b__0()
			{
			}

			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x886EE4", Offset = "0x886EE4", VA = "0x886EE4")]
			internal void <SwitchBiome>b__1()
			{
			}
		}

		[Token(Token = "0x2000416")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2ECC", Offset = "0x6E2ECC")]
		private sealed class <LoadLevelQueue>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelManager <>4__this;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018F3")]
				[Address(RVA = "0x8872A4", Offset = "0x8872A4", VA = "0x8872A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018F5")]
				[Address(RVA = "0x887314", Offset = "0x887314", VA = "0x887314", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x886218", Offset = "0x886218", VA = "0x886218")]
			[DebuggerHidden]
			public <LoadLevelQueue>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x887168", Offset = "0x887168", VA = "0x887168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x88716C", Offset = "0x88716C", VA = "0x88716C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x8872AC", Offset = "0x8872AC", VA = "0x8872AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B79")]
		public const BiomeType DefaultBiome = BiomeType.Intro;

		[Token(Token = "0x4000B7A")]
		public const RoomType DefaultStartRoom = RoomType.HomeScene;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableEvent m_playTitleEvent;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolVariable m_skipLogoSequence;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_sendBiomeActivatedEvent;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_saveOnBiomeActivated;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_waitForStartup;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Room m_lastLoadedRoom;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RoomType m_customStartRoom;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISet<RoomType> m_loadedRooms;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISet<RoomType> m_pendingRooms;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IList<BiomeType> m_loadedBiomes;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IReadOnlyDictionary<RoomType, string> m_roomNames;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_loadQueueCoroutine;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Queue<string> m_loadQueue;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, object> m_analyticsData;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_biomeLoadedEventToken;

		[Token(Token = "0x4000B8A")]
		private const string RoomRootObjectName = "Gameplay";

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E9DC4", Offset = "0x6E9DC4")]
		private BiomeType <ActiveBiome>k__BackingField;

		[Token(Token = "0x17000153")]
		public BiomeType ActiveBiome
		{
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0x884840", Offset = "0x884840", VA = "0x884840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2B94", Offset = "0x6F2B94")]
			get
			{
				return default(BiomeType);
			}
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0x884848", Offset = "0x884848", VA = "0x884848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2BA4", Offset = "0x6F2BA4")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004D")]
		private event Action OnMainSceneLoaded
		{
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0x884668", Offset = "0x884668", VA = "0x884668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2B74", Offset = "0x6F2B74")]
			add
			{
			}
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0x884754", Offset = "0x884754", VA = "0x884754")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2B84", Offset = "0x6F2B84")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x884850", Offset = "0x884850", VA = "0x884850")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x884878", Offset = "0x884878", VA = "0x884878")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x884954", Offset = "0x884954", VA = "0x884954")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x884A30", Offset = "0x884A30", VA = "0x884A30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x884B18", Offset = "0x884B18", VA = "0x884B18")]
		public void LoadStartScene(Action onMainSceneLoaded)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x880FF8", Offset = "0x880FF8", VA = "0x880FF8")]
		public void LoadCore(bool tryLoadNavMesh, LoadSceneMode loadSceneMode, Action onMainSceneLoaded)
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x879A24", Offset = "0x879A24", VA = "0x879A24")]
		public void LoadTitle()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x884C14", Offset = "0x884C14", VA = "0x884C14")]
		public void ResetTitleSequence()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x884CB0", Offset = "0x884CB0", VA = "0x884CB0")]
		public void ValidateStartRoom(RoomType customStartRoom, out RoomType startRoom)
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x884EBC", Offset = "0x884EBC", VA = "0x884EBC")]
		public void MoveGameObjectToRoom(GameObject gameObject, RoomType roomType)
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x885060", Offset = "0x885060", VA = "0x885060")]
		public YieldInstruction UnloadSceneAsync(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x8850CC", Offset = "0x8850CC", VA = "0x8850CC")]
		public void SendBiomeLoadedAnalyticsEvent()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x87FC48", Offset = "0x87FC48", VA = "0x87FC48")]
		public void SwitchBiome(BiomeType biomeType, bool saveGame)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x8851F0", Offset = "0x8851F0", VA = "0x8851F0")]
		public void LoadBiome(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x8856EC", Offset = "0x8856EC", VA = "0x8856EC")]
		public void UnloadBiome(BiomeType biomeType, RoomType[] roomsToKeepLoaded)
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x8855BC", Offset = "0x8855BC", VA = "0x8855BC")]
		public void LoadRooms(params RoomType[] rooms)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x886168", Offset = "0x886168", VA = "0x886168")]
		public void LoadRoom(RoomType roomType)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x88598C", Offset = "0x88598C", VA = "0x88598C")]
		private void UnloadRooms(IReadOnlyList<RoomType> roomTypes)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x885EA8", Offset = "0x885EA8", VA = "0x885EA8")]
		private bool TryEnqueueRoom(RoomType room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x886128", Offset = "0x886128", VA = "0x886128")]
		private void TryStartLevelQueue()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x8861A4", Offset = "0x8861A4", VA = "0x8861A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2BB4", Offset = "0x6F2BB4")]
		private IEnumerator LoadLevelQueue()
		{
			return null;
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x884B2C", Offset = "0x884B2C", VA = "0x884B2C")]
		private void LoadLOD()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x884BA0", Offset = "0x884BA0", VA = "0x884BA0")]
		private void LoadNavMesh()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x886244", Offset = "0x886244", VA = "0x886244")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x886660", Offset = "0x886660", VA = "0x886660")]
		private void OnSceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x886418", Offset = "0x886418", VA = "0x886418")]
		private void OnRoomLoaded(Scene scene, RoomType roomType)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x885484", Offset = "0x885484", VA = "0x885484")]
		private void ActivateBiome()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x8867FC", Offset = "0x8867FC", VA = "0x8867FC")]
		private void RoomLoaded(Room room)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x8868C4", Offset = "0x8868C4", VA = "0x8868C4")]
		public LevelManager()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x2000417")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2EDC", Offset = "0x6E2EDC")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40013AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40013B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x887AF8", Offset = "0x887AF8", VA = "0x887AF8")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x887B00", Offset = "0x887B00", VA = "0x887B00")]
			internal void <DoShow>b__2()
			{
			}

			[Token(Token = "0x60018F8")]
			[Address(RVA = "0x887B34", Offset = "0x887B34", VA = "0x887B34")]
			internal void <DoShow>b__3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2EEC", Offset = "0x6E2EEC")]
		private sealed class <>c
		{
			[Token(Token = "0x40013B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static DOGetter<float> <>9__26_0;

			[Token(Token = "0x40013B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static DOSetter<float> <>9__26_1;

			[Token(Token = "0x40013B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static DOGetter<float> <>9__27_0;

			[Token(Token = "0x40013B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static DOSetter<float> <>9__27_1;

			[Token(Token = "0x60018FA")]
			[Address(RVA = "0x887AD0", Offset = "0x887AD0", VA = "0x887AD0")]
			public <>c()
			{
			}

			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x887AD8", Offset = "0x887AD8", VA = "0x887AD8")]
			internal float <DoShow>b__26_0()
			{
				return default(float);
			}

			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x887AE0", Offset = "0x887AE0", VA = "0x887AE0")]
			internal void <DoShow>b__26_1(float vol)
			{
			}

			[Token(Token = "0x60018FD")]
			[Address(RVA = "0x887AE8", Offset = "0x887AE8", VA = "0x887AE8")]
			internal float <DoHide>b__27_0()
			{
				return default(float);
			}

			[Token(Token = "0x60018FE")]
			[Address(RVA = "0x887AF0", Offset = "0x887AF0", VA = "0x887AF0")]
			internal void <DoHide>b__27_1(float vol)
			{
			}
		}

		[Token(Token = "0x2000419")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2EFC", Offset = "0x6E2EFC")]
		private sealed class <DoShow>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x1700024D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001902")]
				[Address(RVA = "0x8886B8", Offset = "0x8886B8", VA = "0x8886B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001904")]
				[Address(RVA = "0x888728", Offset = "0x888728", VA = "0x888728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018FF")]
			[Address(RVA = "0x8879F0", Offset = "0x8879F0", VA = "0x8879F0")]
			[DebuggerHidden]
			public <DoShow>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001900")]
			[Address(RVA = "0x8880CC", Offset = "0x8880CC", VA = "0x8880CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001901")]
			[Address(RVA = "0x8880D0", Offset = "0x8880D0", VA = "0x8880D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001903")]
			[Address(RVA = "0x8886C0", Offset = "0x8886C0", VA = "0x8886C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F0C", Offset = "0x6E2F0C")]
		private sealed class <DoHide>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001908")]
				[Address(RVA = "0x888054", Offset = "0x888054", VA = "0x888054", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600190A")]
				[Address(RVA = "0x8880C4", Offset = "0x8880C4", VA = "0x8880C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001905")]
			[Address(RVA = "0x887A1C", Offset = "0x887A1C", VA = "0x887A1C")]
			[DebuggerHidden]
			public <DoHide>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001906")]
			[Address(RVA = "0x887B88", Offset = "0x887B88", VA = "0x887B88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001907")]
			[Address(RVA = "0x887B8C", Offset = "0x887B8C", VA = "0x887B8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001909")]
			[Address(RVA = "0x88805C", Offset = "0x88805C", VA = "0x88805C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B8D")]
		private const int Infinite = -1;

		[Token(Token = "0x4000B8E")]
		private const float FadeTime = 0.5f;

		[Token(Token = "0x4000B8F")]
		private const float TargetFps = 90f;

		[Token(Token = "0x4000B90")]
		private const float FadeOutSoundTime = 0.5f;

		[Token(Token = "0x4000B91")]
		private const float FadeInSoundTime = 1f;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_sprite;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_psvrDistance;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_rotationTime;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Ease m_rotationEasing;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_minDisplayTime;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween m_fadeTween;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween m_rotationTween;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_previousPosition;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_startTime;

		[Token(Token = "0x17000154")]
		public float TimeDisplayed
		{
			[Token(Token = "0x6001010")]
			[Address(RVA = "0x88731C", Offset = "0x88731C", VA = "0x88731C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000155")]
		public float Distance
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x887348", Offset = "0x887348", VA = "0x887348")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x887350", Offset = "0x887350", VA = "0x887350")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x8873E8", Offset = "0x8873E8", VA = "0x8873E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x8817C8", Offset = "0x8817C8", VA = "0x8817C8")]
		public YieldInstruction Show()
		{
			return null;
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x880744", Offset = "0x880744", VA = "0x880744")]
		public YieldInstruction Hide()
		{
			return null;
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x886E58", Offset = "0x886E58", VA = "0x886E58")]
		public void Show(Action onCompleted)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x887960", Offset = "0x887960", VA = "0x887960")]
		public void Hide(Action onCompleted)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x887668", Offset = "0x887668", VA = "0x887668")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0x887830", Offset = "0x887830", VA = "0x887830")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2C18", Offset = "0x6F2C18")]
		private IEnumerator DoShow(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x8878C8", Offset = "0x8878C8", VA = "0x8878C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2C7C", Offset = "0x6F2C7C")]
		private IEnumerator DoHide(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x887A48", Offset = "0x887A48", VA = "0x887A48")]
		public LoadingScreen()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class LODManager : MonoBehaviour
	{
		[Token(Token = "0x200041B")]
		private enum LODStage
		{
			[Token(Token = "0x40013C0")]
			Intro,
			[Token(Token = "0x40013C1")]
			IntroEstate,
			[Token(Token = "0x40013C2")]
			Estate,
			[Token(Token = "0x40013C3")]
			EstateMirrorRealm,
			[Token(Token = "0x40013C4")]
			MirrorRealm,
			[Token(Token = "0x40013C5")]
			CaterpillarForest,
			[Token(Token = "0x40013C6")]
			CaterpillarForestFourCastles,
			[Token(Token = "0x40013C7")]
			FourCastles,
			[Token(Token = "0x40013C8")]
			KeepOfHearts,
			[Token(Token = "0x40013C9")]
			Party
		}

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_lodRootObjects;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_biomeDeactivatedEventToken;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_firstTimeActivatingBiome;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<BiomeType, LODStage[]> m_lodMap;

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x883CC0", Offset = "0x883CC0", VA = "0x883CC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x883D60", Offset = "0x883D60", VA = "0x883D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x883E58", Offset = "0x883E58", VA = "0x883E58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x883EE0", Offset = "0x883EE0", VA = "0x883EE0")]
		private void OnBiomeActivated(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x8840EC", Offset = "0x8840EC", VA = "0x8840EC")]
		private void OnBiomeDeactivated(RoomEvents.BiomeDeactivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x884024", Offset = "0x884024", VA = "0x884024")]
		private void TryDisableLODForBiome(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x883F5C", Offset = "0x883F5C", VA = "0x883F5C")]
		private void TryEnableLODForBiome(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x884200", Offset = "0x884200", VA = "0x884200")]
		private void TryEnableLOD(LODStage lodStage)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x884120", Offset = "0x884120", VA = "0x884120")]
		private void TryDisableLOD(LODStage lodStage)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x8842E0", Offset = "0x8842E0", VA = "0x8842E0")]
		public LODManager()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class MusicManager : MonoBehaviour, IScriptableEventListener
	{
		[Token(Token = "0x200041C")]
		private struct Defaults
		{
			[Token(Token = "0x40013CA")]
			public const float FadeInTime = 1f;

			[Token(Token = "0x40013CB")]
			public const float FadeOutTime = 1f;
		}

		[Token(Token = "0x200041D")]
		private enum PlayState
		{
			[Token(Token = "0x40013CD")]
			None,
			[Token(Token = "0x40013CE")]
			FadeOut,
			[Token(Token = "0x40013CF")]
			FadeIn,
			[Token(Token = "0x40013D0")]
			Switch
		}

		[Token(Token = "0x200041E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F1C", Offset = "0x6E2F1C")]
		private sealed class <FadeMusic>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeOutTime;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeInTime;

			[Token(Token = "0x17000251")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600190E")]
				[Address(RVA = "0x889678", Offset = "0x889678", VA = "0x889678", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000252")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001910")]
				[Address(RVA = "0x8896E8", Offset = "0x8896E8", VA = "0x8896E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600190B")]
			[Address(RVA = "0x889180", Offset = "0x889180", VA = "0x889180")]
			[DebuggerHidden]
			public <FadeMusic>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600190C")]
			[Address(RVA = "0x88953C", Offset = "0x88953C", VA = "0x88953C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600190D")]
			[Address(RVA = "0x889540", Offset = "0x889540", VA = "0x889540", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600190F")]
			[Address(RVA = "0x889680", Offset = "0x889680", VA = "0x889680", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F2C", Offset = "0x6E2F2C")]
		private sealed class <FadeMusic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeOutTime;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeInTime;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip[] audioClips;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001914")]
				[Address(RVA = "0x889A20", Offset = "0x889A20", VA = "0x889A20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001916")]
				[Address(RVA = "0x889A90", Offset = "0x889A90", VA = "0x889A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001911")]
			[Address(RVA = "0x8891AC", Offset = "0x8891AC", VA = "0x8891AC")]
			[DebuggerHidden]
			public <FadeMusic>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001912")]
			[Address(RVA = "0x8896F0", Offset = "0x8896F0", VA = "0x8896F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001913")]
			[Address(RVA = "0x8896F4", Offset = "0x8896F4", VA = "0x8896F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001915")]
			[Address(RVA = "0x889A28", Offset = "0x889A28", VA = "0x889A28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F3C", Offset = "0x6E2F3C")]
		private sealed class <FadeOutMusic>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayState state;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startVolume>5__3;

			[Token(Token = "0x17000255")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600191A")]
				[Address(RVA = "0x889C84", Offset = "0x889C84", VA = "0x889C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600191C")]
				[Address(RVA = "0x889CF4", Offset = "0x889CF4", VA = "0x889CF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001917")]
			[Address(RVA = "0x8891D8", Offset = "0x8891D8", VA = "0x8891D8")]
			[DebuggerHidden]
			public <FadeOutMusic>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001918")]
			[Address(RVA = "0x889A98", Offset = "0x889A98", VA = "0x889A98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001919")]
			[Address(RVA = "0x889A9C", Offset = "0x889A9C", VA = "0x889A9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600191B")]
			[Address(RVA = "0x889C8C", Offset = "0x889C8C", VA = "0x889C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000421")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F4C", Offset = "0x6E2F4C")]
		private sealed class <FadeInMusic>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x40013E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x40013E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startVolume>5__3;

			[Token(Token = "0x17000257")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001920")]
				[Address(RVA = "0x8894C4", Offset = "0x8894C4", VA = "0x8894C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000258")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001922")]
				[Address(RVA = "0x889534", Offset = "0x889534", VA = "0x889534", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600191D")]
			[Address(RVA = "0x889204", Offset = "0x889204", VA = "0x889204")]
			[DebuggerHidden]
			public <FadeInMusic>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600191E")]
			[Address(RVA = "0x889304", Offset = "0x889304", VA = "0x889304", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600191F")]
			[Address(RVA = "0x889308", Offset = "0x889308", VA = "0x889308", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001921")]
			[Address(RVA = "0x8894CC", Offset = "0x8894CC", VA = "0x8894CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BA1")]
		private const float PuzzleResolvedWait = 0.5f;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly MathUtils.MinMax sm_defaultVolume;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CustomWaitForEndOfFrame m_customWaitForEndOfFrame;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_musicAudioSource;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_stingerAudioSource;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_playStingerEvent;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_puzzleResolved;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayState m_state;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioClip m_pendingMusicClip;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioClip[] m_pendingMusicClips;

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x888730", Offset = "0x888730", VA = "0x888730")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x88881C", Offset = "0x88881C", VA = "0x88881C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x8889A4", Offset = "0x8889A4", VA = "0x8889A4", Slot = "4")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x8806E4", Offset = "0x8806E4", VA = "0x8806E4")]
		public void StopAllMusic(float fadeTime = 0f)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x888A98", Offset = "0x888A98", VA = "0x888A98")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x888BC8", Offset = "0x888BC8", VA = "0x888BC8")]
		public void PlayPuzzleResolvedStinger()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x881DC8", Offset = "0x881DC8", VA = "0x881DC8")]
		public void PlayStinger(AudioClip clip, float wait = 0f)
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x888BD4", Offset = "0x888BD4", VA = "0x888BD4")]
		public void SwitchMusic(AudioClip clip, float fadeOutTime, float fadeInTime)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x888FCC", Offset = "0x888FCC", VA = "0x888FCC")]
		public void SwitchMusic(AudioClip[] clips, float fadeOutTime, float fadeInTime)
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0x888EF4", Offset = "0x888EF4", VA = "0x888EF4")]
		private void PlayMusic(AudioClip clip)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0x888D34", Offset = "0x888D34", VA = "0x888D34")]
		private void TryFadeInMusic(AudioClip clip, float fadeInTime)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x888E44", Offset = "0x888E44", VA = "0x888E44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2CE0", Offset = "0x6F2CE0")]
		private IEnumerator FadeMusic(float fadeOutTime, float fadeInTime)
		{
			return null;
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x88903C", Offset = "0x88903C", VA = "0x88903C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2D44", Offset = "0x6F2D44")]
		private IEnumerator FadeMusic(AudioClip[] audioClips, float fadeOutTime, float fadeInTime)
		{
			return null;
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x888B14", Offset = "0x888B14", VA = "0x888B14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2DA8", Offset = "0x6F2DA8")]
		private IEnumerator FadeOutMusic(float fadeTime, PlayState state)
		{
			return null;
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x88910C", Offset = "0x88910C", VA = "0x88910C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2E0C", Offset = "0x6F2E0C")]
		private IEnumerator FadeInMusic(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x889230", Offset = "0x889230", VA = "0x889230")]
		public MusicManager()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class OutroManager : TitleManager
	{
		[Token(Token = "0x2000422")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F5C", Offset = "0x6E2F5C")]
		private sealed class <PlayOutroSequence>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialWait;

			[Token(Token = "0x40013EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OutroManager <>4__this;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001926")]
				[Address(RVA = "0x88AB54", Offset = "0x88AB54", VA = "0x88AB54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001928")]
				[Address(RVA = "0x88ABC4", Offset = "0x88ABC4", VA = "0x88ABC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001923")]
			[Address(RVA = "0x88A060", Offset = "0x88A060", VA = "0x88A060")]
			[DebuggerHidden]
			public <PlayOutroSequence>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001924")]
			[Address(RVA = "0x88A718", Offset = "0x88A718", VA = "0x88A718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001925")]
			[Address(RVA = "0x88A71C", Offset = "0x88A71C", VA = "0x88A71C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001927")]
			[Address(RVA = "0x88AB5C", Offset = "0x88AB5C", VA = "0x88AB5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000423")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F6C", Offset = "0x6E2F6C")]
		private sealed class <ShowCredits>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OutroManager <>4__this;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <moveTime>5__2;

			[Token(Token = "0x1700025B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600192C")]
				[Address(RVA = "0x88AEA4", Offset = "0x88AEA4", VA = "0x88AEA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600192E")]
				[Address(RVA = "0x88AF14", Offset = "0x88AF14", VA = "0x88AF14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001929")]
			[Address(RVA = "0x88A358", Offset = "0x88A358", VA = "0x88A358")]
			[DebuggerHidden]
			public <ShowCredits>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600192A")]
			[Address(RVA = "0x88ABCC", Offset = "0x88ABCC", VA = "0x88ABCC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600192B")]
			[Address(RVA = "0x88ABD0", Offset = "0x88ABD0", VA = "0x88ABD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600192D")]
			[Address(RVA = "0x88AEAC", Offset = "0x88AEAC", VA = "0x88AEAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000424")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F7C", Offset = "0x6E2F7C")]
		private sealed class <WaitForNarrationEnd>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OutroManager <>4__this;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001932")]
				[Address(RVA = "0x88AFE8", Offset = "0x88AFE8", VA = "0x88AFE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001934")]
				[Address(RVA = "0x88B058", Offset = "0x88B058", VA = "0x88B058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600192F")]
			[Address(RVA = "0x88A4E0", Offset = "0x88A4E0", VA = "0x88A4E0")]
			[DebuggerHidden]
			public <WaitForNarrationEnd>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001930")]
			[Address(RVA = "0x88AF1C", Offset = "0x88AF1C", VA = "0x88AF1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001931")]
			[Address(RVA = "0x88AF20", Offset = "0x88AF20", VA = "0x88AF20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001933")]
			[Address(RVA = "0x88AFF0", Offset = "0x88AFF0", VA = "0x88AFF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BAB")]
		private const float UnhookBabiesThreshold = 50.25f;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9E84", Offset = "0x6E9E84")]
		[SerializeField]
		private float m_timeToCreditsRoll;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_titleLoadDelay;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BehaviourSystem m_outroDialogue;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_narratorSubtitleAnchor;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9F00", Offset = "0x6E9F00")]
		[SerializeField]
		private GameObject m_creditsCanvasGo;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI m_credits;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI m_productionBabies;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_defaultPositionY;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_creditsMoveTime;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_babiesFadeTime;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isNarrating;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_startPositionBabies;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x889CFC", Offset = "0x889CFC", VA = "0x889CFC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x889E48", Offset = "0x889E48", VA = "0x889E48")]
		public void StartOutro(ScriptableVariable initialWait)
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x889FC8", Offset = "0x889FC8", VA = "0x889FC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2E70", Offset = "0x6F2E70")]
		private IEnumerator PlayOutroSequence(float initialWait)
		{
			return null;
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x88A08C", Offset = "0x88A08C", VA = "0x88A08C")]
		private void PlaceCameraAndLockPlayer()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x88A210", Offset = "0x88A210", VA = "0x88A210")]
		private void PlayOutroNarration()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x88A2E4", Offset = "0x88A2E4", VA = "0x88A2E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2ED4", Offset = "0x6F2ED4")]
		private IEnumerator ShowCredits()
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x88A384", Offset = "0x88A384", VA = "0x88A384")]
		private void UnloadPartyBiome()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x88A46C", Offset = "0x88A46C", VA = "0x88A46C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2F38", Offset = "0x6F2F38")]
		private IEnumerator WaitForNarrationEnd()
		{
			return null;
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x88A50C", Offset = "0x88A50C", VA = "0x88A50C")]
		private void ResetCredits()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x88A6D8", Offset = "0x88A6D8", VA = "0x88A6D8")]
		public OutroManager()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x88A710", Offset = "0x88A710", VA = "0x88A710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F2F9C", Offset = "0x6F2F9C")]
		private void <PlayOutroNarration>b__17_0()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class TitleManager : MonoBehaviour
	{
		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F8C", Offset = "0x6E2F8C")]
		private sealed class <LoadTitleScenes>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TitleManager <>4__this;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001938")]
				[Address(RVA = "0x88E354", Offset = "0x88E354", VA = "0x88E354", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600193A")]
				[Address(RVA = "0x88E3C4", Offset = "0x88E3C4", VA = "0x88E3C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001935")]
			[Address(RVA = "0x88DF1C", Offset = "0x88DF1C", VA = "0x88DF1C")]
			[DebuggerHidden]
			public <LoadTitleScenes>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001936")]
			[Address(RVA = "0x88E168", Offset = "0x88E168", VA = "0x88E168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001937")]
			[Address(RVA = "0x88E16C", Offset = "0x88E16C", VA = "0x88E16C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001939")]
			[Address(RVA = "0x88E35C", Offset = "0x88E35C", VA = "0x88E35C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BB8")]
		protected const float FadeTime = 0.5f;

		[Token(Token = "0x4000BB9")]
		protected const float FadeInTime = 2f;

		[Token(Token = "0x4000BBA")]
		protected const float LogoFadeTime = 0.5f;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform m_playerSpawnPoint;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6E9FAC", Offset = "0x6E9FAC")]
		[SerializeField]
		protected AudioClip m_titleMusic;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float m_fadeOutPreviousMusicTime;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float m_fadeOutMusicTime;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA018", Offset = "0x6EA018")]
		[SerializeField]
		protected MeshRenderer m_companyLogo;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MeshRenderer m_gameLogo;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA074", Offset = "0x6EA074")]
		[SerializeField]
		protected float m_companyLogoDisplayTime;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool m_awaitBiomeLoad;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IPlatformInput m_input;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static EventToken sm_biomeLoadedEventToken;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static EventToken sm_homeLoadedEventToken;

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x88DF14", Offset = "0x88DF14", VA = "0x88DF14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x87DCA8", Offset = "0x87DCA8", VA = "0x87DCA8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x8817F8", Offset = "0x8817F8", VA = "0x8817F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F2FAC", Offset = "0x6F2FAC")]
		protected IEnumerator LoadTitleScenes()
		{
			return null;
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x88DF48", Offset = "0x88DF48", VA = "0x88DF48")]
		protected void OnBiomeLoaded(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x88DFD4", Offset = "0x88DFD4", VA = "0x88DFD4")]
		private void OnRoomLoaded(RoomEvents.RoomLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x8815D0", Offset = "0x8815D0", VA = "0x8815D0")]
		protected YieldInstruction FadeInCompanyLogo()
		{
			return null;
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x8816CC", Offset = "0x8816CC", VA = "0x8816CC")]
		protected YieldInstruction FadeOutCompanyLogo()
		{
			return null;
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x88186C", Offset = "0x88186C", VA = "0x88186C")]
		public void PrepareGameLogo()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x8818B8", Offset = "0x8818B8", VA = "0x8818B8")]
		protected YieldInstruction FadeInGameLogo()
		{
			return null;
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x881EEC", Offset = "0x881EEC", VA = "0x881EEC")]
		protected YieldInstruction FadeOutGameLogo()
		{
			return null;
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x87FF00", Offset = "0x87FF00", VA = "0x87FF00", Slot = "5")]
		protected virtual void DisableLogos()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x881960", Offset = "0x881960", VA = "0x881960")]
		protected void PlayTitleMusic()
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x8801F8", Offset = "0x8801F8", VA = "0x8801F8")]
		public TitleManager()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x88E084", Offset = "0x88E084", VA = "0x88E084")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3010", Offset = "0x6F3010")]
		private void <FadeInCompanyLogo>b__19_0()
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x88E0D0", Offset = "0x88E0D0", VA = "0x88E0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3020", Offset = "0x6F3020")]
		private void <FadeOutCompanyLogo>b__20_0()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x88E11C", Offset = "0x88E11C", VA = "0x88E11C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3030", Offset = "0x6F3030")]
		private void <FadeOutGameLogo>b__23_0()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class VOManager : MonoBehaviour
	{
		[Token(Token = "0x2000426")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2F9C", Offset = "0x6E2F9C")]
		private sealed class <PlayLines>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40013F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterVoiceLine[] voiceLines;

			[Token(Token = "0x40013FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VOManager <>4__this;

			[Token(Token = "0x40013FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CharacterVoiceLine[] <>7__wrap1;

			[Token(Token = "0x40013FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x17000261")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600193E")]
				[Address(RVA = "0x88F380", Offset = "0x88F380", VA = "0x88F380", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000262")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001940")]
				[Address(RVA = "0x88F3F0", Offset = "0x88F3F0", VA = "0x88F3F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600193B")]
			[Address(RVA = "0x88F008", Offset = "0x88F008", VA = "0x88F008")]
			[DebuggerHidden]
			public <PlayLines>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600193C")]
			[Address(RVA = "0x88F0A8", Offset = "0x88F0A8", VA = "0x88F0A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600193D")]
			[Address(RVA = "0x88F0AC", Offset = "0x88F0AC", VA = "0x88F0AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600193F")]
			[Address(RVA = "0x88F388", Offset = "0x88F388", VA = "0x88F388", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Voice m_narratorVoice;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDictionary<CharacterData, Voice> m_voices;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Voice m_currentSpeaker;

		[Token(Token = "0x1400004E")]
		private event Action<bool> OnVoiceLinesCompleted
		{
			[Token(Token = "0x6001052")]
			[Address(RVA = "0x88E3CC", Offset = "0x88E3CC", VA = "0x88E3CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3040", Offset = "0x6F3040")]
			add
			{
			}
			[Token(Token = "0x6001053")]
			[Address(RVA = "0x88E4B8", Offset = "0x88E4B8", VA = "0x88E4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3050", Offset = "0x6F3050")]
			remove
			{
			}
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x88E5A4", Offset = "0x88E5A4", VA = "0x88E5A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x88E5AC", Offset = "0x88E5AC", VA = "0x88E5AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x88E794", Offset = "0x88E794", VA = "0x88E794")]
		public void SetNarratorSubtitleAnchor(Transform anchorPoint)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x88E61C", Offset = "0x88E61C", VA = "0x88E61C")]
		public void AddVoice(Voice voice)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x88E898", Offset = "0x88E898", VA = "0x88E898")]
		public void RemoveVoice(Voice voice)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x88EAB0", Offset = "0x88EAB0", VA = "0x88EAB0")]
		public AnimatedVoice GetAnimatedVoice(CharacterData characterData)
		{
			return null;
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x88EC64", Offset = "0x88EC64", VA = "0x88EC64")]
		public Voice GetVoice(CharacterData characterData)
		{
			return null;
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x88EB60", Offset = "0x88EB60", VA = "0x88EB60")]
		private bool CanGetVoice(CharacterData characterData, out Voice voice)
		{
			return default(bool);
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x886AF8", Offset = "0x886AF8", VA = "0x886AF8")]
		public void AbortAllVO()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x88ED00", Offset = "0x88ED00", VA = "0x88ED00")]
		public void AbortVO(CharacterData speaker, bool stopTalking)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x88EE54", Offset = "0x88EE54", VA = "0x88EE54")]
		public void PlayVoiceLines(CharacterVoiceLine[] voiceLines, Action<bool> onVoiceLinesCompleted)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x88EE7C", Offset = "0x88EE7C", VA = "0x88EE7C")]
		public void PlayVoiceLines(CharacterVoiceLine[] voiceLines)
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x88EF70", Offset = "0x88EF70", VA = "0x88EF70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3060", Offset = "0x6F3060")]
		private IEnumerator PlayLines(CharacterVoiceLine[] voiceLines)
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x88EED0", Offset = "0x88EED0", VA = "0x88EED0")]
		private void SoftResetCurrentSpeaker()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x88EC94", Offset = "0x88EC94", VA = "0x88EC94")]
		private void VoiceLinesCompleted(bool speakSuccess)
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x88F034", Offset = "0x88F034", VA = "0x88F034")]
		public VOManager()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class InventoryManager : MonoBehaviour, ISavable
	{
		[Serializable]
		[Token(Token = "0x2000427")]
		public class InventoryItemSaveData : SavableData
		{
			[Token(Token = "0x40013FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ItemID;

			[Token(Token = "0x40013FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool AllowDuplicates;

			[Token(Token = "0x40013FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string InstanceGuid;

			[Token(Token = "0x4001400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomType InstanceRoom;

			[Token(Token = "0x6001941")]
			[Address(RVA = "0x882A3C", Offset = "0x882A3C", VA = "0x882A3C")]
			public InventoryItemSaveData(int itemID, bool allowDuplicates, string instanceGuid, RoomType instanceRoom)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000428")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x4001401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<int, List<InventoryItemSaveData>> Items;

			[Token(Token = "0x4001402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StringArray InvitationInstancesFound;

			[Token(Token = "0x6001942")]
			[Address(RVA = "0x882338", Offset = "0x882338", VA = "0x882338")]
			public SaveData()
			{
			}
		}

		[Token(Token = "0x2000429")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FAC", Offset = "0x6E2FAC")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string instanceGuid;

			[Token(Token = "0x6001943")]
			[Address(RVA = "0x8835F8", Offset = "0x8835F8", VA = "0x8835F8")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001944")]
			[Address(RVA = "0x883C80", Offset = "0x883C80", VA = "0x883C80")]
			internal bool <CanGetItem>b__0(InventoryItemData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InvitationsHandler m_invitationsManager;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SaveData m_saveData;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDictionary<int, List<InventoryItemData>> m_items;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<InventoryItemData> m_filterList;

		[Token(Token = "0x4000BCE")]
		private const string SaveID = "InventoryManager";

		[Token(Token = "0x17000156")]
		public InvitationsHandler Invitations
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0x882238", Offset = "0x882238", VA = "0x882238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action<InventoryItemData> OnInventoryUpdated
		{
			[Token(Token = "0x6001064")]
			[Address(RVA = "0x882060", Offset = "0x882060", VA = "0x882060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F30C4", Offset = "0x6F30C4")]
			add
			{
			}
			[Token(Token = "0x6001065")]
			[Address(RVA = "0x88214C", Offset = "0x88214C", VA = "0x88214C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F30D4", Offset = "0x6F30D4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x882240", Offset = "0x882240", VA = "0x882240")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x8823AC", Offset = "0x8823AC", VA = "0x8823AC", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x882A94", Offset = "0x882A94", VA = "0x882A94", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x883030", Offset = "0x883030", VA = "0x883030")]
		public bool ContainsItem(int itemID)
		{
			return default(bool);
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x88313C", Offset = "0x88313C", VA = "0x88313C")]
		public int GetItemCount(int itemID)
		{
			return default(int);
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x883248", Offset = "0x883248", VA = "0x883248")]
		public int GetItemCount(int itemID, RoomType roomFilter)
		{
			return default(int);
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x883424", Offset = "0x883424", VA = "0x883424")]
		public bool CanGetItem(int itemID, string instanceGuid, out InventoryItemData item)
		{
			return default(bool);
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x883600", Offset = "0x883600", VA = "0x883600")]
		public bool CanGetItems(int itemID, out List<InventoryItemData> items)
		{
			return default(bool);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x8836D0", Offset = "0x8836D0", VA = "0x8836D0")]
		public void TryAdd(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x883A64", Offset = "0x883A64", VA = "0x883A64")]
		public void TryRemove(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x883854", Offset = "0x883854", VA = "0x883854")]
		private void AddItem(InventoryItemData itemData, bool newItem)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x883AC0", Offset = "0x883AC0", VA = "0x883AC0")]
		private void RemoveItem(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x883BF0", Offset = "0x883BF0", VA = "0x883BF0")]
		public InventoryManager()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x6E20E0", Offset = "0x6E20E0")]
	public class Save
	{
		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FBC", Offset = "0x6E2FBC")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4001404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Save save;

			[Token(Token = "0x4001405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string json;

			[Token(Token = "0x4001406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise<Save> promise;

			[Token(Token = "0x6001945")]
			[Address(RVA = "0x88B790", Offset = "0x88B790", VA = "0x88B790")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6001946")]
			[Address(RVA = "0x88BA6C", Offset = "0x88BA6C", VA = "0x88BA6C")]
			internal void <FromJson>b__0()
			{
			}

			[Token(Token = "0x6001947")]
			[Address(RVA = "0x88BB38", Offset = "0x88BB38", VA = "0x88BB38")]
			internal void <FromJson>b__1(System.Threading.Tasks.Task t)
			{
			}
		}

		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FCC", Offset = "0x6E2FCC")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string json;

			[Token(Token = "0x4001408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Save <>4__this;

			[Token(Token = "0x4001409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise<string> promise;

			[Token(Token = "0x6001948")]
			[Address(RVA = "0x88B940", Offset = "0x88B940", VA = "0x88B940")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6001949")]
			[Address(RVA = "0x88BC14", Offset = "0x88BC14", VA = "0x88BC14")]
			internal void <ToJson>b__0()
			{
			}

			[Token(Token = "0x600194A")]
			[Address(RVA = "0x88BCD8", Offset = "0x88BCD8", VA = "0x88BCD8")]
			internal void <ToJson>b__1(System.Threading.Tasks.Task t)
			{
			}
		}

		[Token(Token = "0x4000BD0")]
		private const int DefaultSaveCapacity = 150;

		[Token(Token = "0x4000BD1")]
		private const string SaveFileDateKey = "SaveFileDateKey";

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly JsonSerializerSettings sm_jsonSerializerSettings;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, SavableData> m_saveMap;

		[Token(Token = "0x17000157")]
		public SavableData Item
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x88B0A4", Offset = "0x88B0A4", VA = "0x88B0A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001075")]
			[Address(RVA = "0x88B114", Offset = "0x88B114", VA = "0x88B114")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public DateTime Date
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x88B18C", Offset = "0x88B18C", VA = "0x88B18C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x88B2FC", Offset = "0x88B2FC", VA = "0x88B2FC")]
		public Save()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x88B3C0", Offset = "0x88B3C0", VA = "0x88B3C0")]
		public Save(Save copy)
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x88B478", Offset = "0x88B478", VA = "0x88B478")]
		public void SetDate()
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x88B5E4", Offset = "0x88B5E4", VA = "0x88B5E4")]
		public static Promise<Save> FromJson(string json)
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x88B798", Offset = "0x88B798", VA = "0x88B798")]
		public Promise<string> ToJson()
		{
			return null;
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x88B948", Offset = "0x88B948", VA = "0x88B948")]
		public bool Contains(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600107D")]
		public bool TryGetValue<T>(string key, out T data) where T : SavableData
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000231")]
	public class SaveManager : MonoBehaviour, IWriteSave, IReadSave, IScriptableEventListener
	{
		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FDC", Offset = "0x6E2FDC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400140A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x400140B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveManager <>4__this;

			[Token(Token = "0x600194B")]
			[Address(RVA = "0x88C1C0", Offset = "0x88C1C0", VA = "0x88C1C0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x600194C")]
			[Address(RVA = "0x88C6E8", Offset = "0x88C6E8", VA = "0x88C6E8")]
			internal void <LoadAndCacheSaveData>b__0(string save)
			{
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FEC", Offset = "0x6E2FEC")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x400140C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveManager <>4__this;

			[Token(Token = "0x600194D")]
			[Address(RVA = "0x88C23C", Offset = "0x88C23C", VA = "0x88C23C")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x600194E")]
			[Address(RVA = "0x88C798", Offset = "0x88C798", VA = "0x88C798")]
			internal void <SaveGame>b__0()
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E2FFC", Offset = "0x6E2FFC")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveManager <>4__this;

			[Token(Token = "0x600194F")]
			[Address(RVA = "0x88C3E8", Offset = "0x88C3E8", VA = "0x88C3E8")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6001950")]
			[Address(RVA = "0x88C7D8", Offset = "0x88C7D8", VA = "0x88C7D8")]
			internal void <SaveToDisk>b__0()
			{
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E300C", Offset = "0x6E300C")]
		private sealed class <DoSave>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onError;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001954")]
				[Address(RVA = "0x88CDE4", Offset = "0x88CDE4", VA = "0x88CDE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001956")]
				[Address(RVA = "0x88CE54", Offset = "0x88CE54", VA = "0x88CE54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001951")]
			[Address(RVA = "0x88C540", Offset = "0x88C540", VA = "0x88C540")]
			[DebuggerHidden]
			public <DoSave>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001952")]
			[Address(RVA = "0x88CD34", Offset = "0x88CD34", VA = "0x88CD34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001953")]
			[Address(RVA = "0x88CD38", Offset = "0x88CD38", VA = "0x88CD38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001955")]
			[Address(RVA = "0x88CDEC", Offset = "0x88CDEC", VA = "0x88CDEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E301C", Offset = "0x6E301C")]
		private sealed class <DoSerialize>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600195A")]
				[Address(RVA = "0x88D040", Offset = "0x88D040", VA = "0x88D040", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600195C")]
				[Address(RVA = "0x88D0B0", Offset = "0x88D0B0", VA = "0x88D0B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001957")]
			[Address(RVA = "0x88C56C", Offset = "0x88C56C", VA = "0x88C56C")]
			[DebuggerHidden]
			public <DoSerialize>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001958")]
			[Address(RVA = "0x88CE5C", Offset = "0x88CE5C", VA = "0x88CE5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001959")]
			[Address(RVA = "0x88CE60", Offset = "0x88CE60", VA = "0x88CE60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600195B")]
			[Address(RVA = "0x88D048", Offset = "0x88D048", VA = "0x88D048", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E302C", Offset = "0x6E302C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveManager <>4__this;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onError;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__2;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x600195D")]
			[Address(RVA = "0x88C598", Offset = "0x88C598", VA = "0x88C598")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600195E")]
			[Address(RVA = "0x88C818", Offset = "0x88C818", VA = "0x88C818")]
			internal void <WriteToDisk>b__0(string json)
			{
			}

			[Token(Token = "0x600195F")]
			[Address(RVA = "0x88CA0C", Offset = "0x88CA0C", VA = "0x88CA0C")]
			internal void <WriteToDisk>b__2()
			{
			}

			[Token(Token = "0x6001960")]
			[Address(RVA = "0x88CA20", Offset = "0x88CA20", VA = "0x88CA20")]
			internal void <WriteToDisk>b__3(Exception e)
			{
			}

			[Token(Token = "0x6001961")]
			[Address(RVA = "0x88CA34", Offset = "0x88CA34", VA = "0x88CA34")]
			internal void <WriteToDisk>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E303C", Offset = "0x6E303C")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveManager <>4__this;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6001962")]
			[Address(RVA = "0x88C5A0", Offset = "0x88C5A0", VA = "0x88C5A0")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x6001963")]
			[Address(RVA = "0x88CA48", Offset = "0x88CA48", VA = "0x88CA48")]
			internal void <LoadGame>b__0(Save deserializedSave)
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E304C", Offset = "0x6E304C")]
		private sealed class <DoLoad>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001967")]
				[Address(RVA = "0x88CCBC", Offset = "0x88CCBC", VA = "0x88CCBC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001969")]
				[Address(RVA = "0x88CD2C", Offset = "0x88CD2C", VA = "0x88CD2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001964")]
			[Address(RVA = "0x88C640", Offset = "0x88C640", VA = "0x88C640")]
			[DebuggerHidden]
			public <DoLoad>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001965")]
			[Address(RVA = "0x88CAD0", Offset = "0x88CAD0", VA = "0x88CAD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001966")]
			[Address(RVA = "0x88CAD4", Offset = "0x88CAD4", VA = "0x88CAD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001968")]
			[Address(RVA = "0x88CCC4", Offset = "0x88CCC4", VA = "0x88CCC4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BD4")]
		public const int MaxSaveSlots = 3;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GlobalVariableHandler m_globalVariableHandler;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CheckpointEvent m_checkpointEvent;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JObject[] m_cachedSaveData;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Save m_save;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlatformStorage m_storage;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isSavingLocked;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_saveTimeStart;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentSaveSlotIndex;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EA120", Offset = "0x6EA120")]
		private bool <HasInitialized>k__BackingField;

		[Token(Token = "0x17000159")]
		public bool HasInitialized
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0x88BDB4", Offset = "0x88BDB4", VA = "0x88BDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F30E4", Offset = "0x6F30E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001080")]
			[Address(RVA = "0x881EE0", Offset = "0x881EE0", VA = "0x881EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F30F4", Offset = "0x6F30F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x88BDBC", Offset = "0x88BDBC", VA = "0x88BDBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x88BE9C", Offset = "0x88BE9C", VA = "0x88BE9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x88BFF0", Offset = "0x88BFF0", VA = "0x88BFF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x88C080", Offset = "0x88C080", VA = "0x88C080", Slot = "6")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6001085")]
		public void Write<T>(string guid, T data) where T : SavableData
		{
		}

		[Token(Token = "0x6001086")]
		public T Read<T>(string guid, T defaultData) where T : SavableData
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x87E59C", Offset = "0x87E59C", VA = "0x87E59C")]
		public bool HasSave(int saveSlotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x87EF54", Offset = "0x87EF54", VA = "0x87EF54")]
		public IPromise<bool> CheckForSaves()
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x8796AC", Offset = "0x8796AC", VA = "0x8796AC")]
		public void LoadAndCacheSaveData()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x87F784", Offset = "0x87F784", VA = "0x87F784")]
		public string GetInvitationsFoundInSave(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x87F8CC", Offset = "0x87F8CC", VA = "0x87F8CC")]
		public int GetCurrentBiomeIndexInSave(int saveSlotIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x87E47C", Offset = "0x87E47C", VA = "0x87E47C")]
		public void UpdateSaveIndex(int saveSlotIndex)
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x87E224", Offset = "0x87E224", VA = "0x87E224")]
		public void ClearCurrentSaveData()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x88C17C", Offset = "0x88C17C", VA = "0x88C17C")]
		public void SaveCheckpoint()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x87F4D4", Offset = "0x87F4D4", VA = "0x87F4D4")]
		public void SaveGame([Optional] Action onComplete, [Optional] Action onError)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x88C2F0", Offset = "0x88C2F0", VA = "0x88C2F0")]
		public void SaveToDisk([Optional] Action onComplete, [Optional] Action onError)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x88C244", Offset = "0x88C244", VA = "0x88C244")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3104", Offset = "0x6F3104")]
		private IEnumerator DoSave(Action onComplete, Action onError)
		{
			return null;
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x88C1C8", Offset = "0x88C1C8", VA = "0x88C1C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3168", Offset = "0x6F3168")]
		private IEnumerator DoSerialize()
		{
			return null;
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x88C3F0", Offset = "0x88C3F0", VA = "0x88C3F0")]
		private void WriteToDisk(Action onComplete, Action onError)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x880CB4", Offset = "0x880CB4", VA = "0x880CB4")]
		public void LoadGame([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x88C5A8", Offset = "0x88C5A8", VA = "0x88C5A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F31CC", Offset = "0x6F31CC")]
		private IEnumerator DoLoad(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x88C66C", Offset = "0x88C66C", VA = "0x88C66C")]
		public SaveManager()
		{
		}
	}
}
namespace Cortopia.Scripts.Core.Settings
{
	[Token(Token = "0x2000232")]
	public class GameSettings : ScriptableObject
	{
		[Token(Token = "0x2000434")]
		private struct Constants
		{
			[Token(Token = "0x4001423")]
			public const string MasterVolume = "MasterVolume";

			[Token(Token = "0x4001424")]
			public const string MusicVolume = "MusicVolume";

			[Token(Token = "0x4001425")]
			public const string SfxVolume = "SfxVolume";

			[Token(Token = "0x4001426")]
			public const string VOVolume = "VOVolume";
		}

		[Token(Token = "0x4000BDE")]
		public const string Name = "GameSettings";

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MathUtils.MinMax m_masterVolumeMinMax;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixer m_mixer;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameSettingsData m_data;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IPlatformSettingsStorage m_settingsStorage;

		[Token(Token = "0x1700015A")]
		public float MusicVolume
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0x88D0B8", Offset = "0x88D0B8", VA = "0x88D0B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001098")]
			[Address(RVA = "0x88D0EC", Offset = "0x88D0EC", VA = "0x88D0EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public float SfxVolume
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0x88D2B4", Offset = "0x88D2B4", VA = "0x88D2B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109A")]
			[Address(RVA = "0x88D2E0", Offset = "0x88D2E0", VA = "0x88D2E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public float VOVolume
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0x88D404", Offset = "0x88D404", VA = "0x88D404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600109C")]
			[Address(RVA = "0x88D430", Offset = "0x88D430", VA = "0x88D430")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public bool Mute
		{
			[Token(Token = "0x600109D")]
			[Address(RVA = "0x88D554", Offset = "0x88D554", VA = "0x88D554")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x88D580", Offset = "0x88D580", VA = "0x88D580")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool Subtitles
		{
			[Token(Token = "0x600109F")]
			[Address(RVA = "0x88D6BC", Offset = "0x88D6BC", VA = "0x88D6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60010A0")]
			[Address(RVA = "0x88D6E8", Offset = "0x88D6E8", VA = "0x88D6E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public string Language
		{
			[Token(Token = "0x60010A1")]
			[Address(RVA = "0x88D7D8", Offset = "0x88D7D8", VA = "0x88D7D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010A2")]
			[Address(RVA = "0x87F0CC", Offset = "0x87F0CC", VA = "0x87F0CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		private GameSettingsData Data
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0x88D0E4", Offset = "0x88D0E4", VA = "0x88D0E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x878D84", Offset = "0x878D84", VA = "0x878D84")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x88D804", Offset = "0x88D804", VA = "0x88D804")]
		public void SetInitialAudioMixerValues()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x88D970", Offset = "0x88D970", VA = "0x88D970")]
		public void Clear()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x88DCD4", Offset = "0x88DCD4", VA = "0x88DCD4")]
		public void Save()
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x88D210", Offset = "0x88D210", VA = "0x88D210")]
		private float GetConvertedVolumeFloat(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x88DD8C", Offset = "0x88DD8C", VA = "0x88DD8C")]
		public GameSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000233")]
	public class GameSettingsData
	{
		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA150", Offset = "0x6EA150")]
		public bool Mute;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EA188", Offset = "0x6EA188")]
		public float MusicVolume;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EA1A0", Offset = "0x6EA1A0")]
		public float SfxVolume;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EA1B8", Offset = "0x6EA1B8")]
		public float VOVolume;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA1D0", Offset = "0x6EA1D0")]
		public bool ShowSubtitles;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Language;

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x88DDD8", Offset = "0x88DDD8", VA = "0x88DDD8")]
		public GameSettingsData Clone()
		{
			return null;
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x88DEAC", Offset = "0x88DEAC", VA = "0x88DEAC")]
		public GameSettingsData()
		{
		}
	}
}
namespace Cortopia.Scripts.Choices
{
	[Token(Token = "0x2000234")]
	public class Card : MonoBehaviour
	{
		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_localizeHeader;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_localizeBody;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA228", Offset = "0x6EA228")]
		[SerializeField]
		private Image m_image;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA274", Offset = "0x6EA274")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DeltaCorrectionLink m_deltaCorrection;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PointerInteractableHold m_pointerInteractable;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int m_resetTriggerHash;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private readonly int m_snapTriggerHash;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int m_selectedBoolHash;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x99F254", Offset = "0x99F254", VA = "0x99F254")]
		public void SetVisuals(CardData cardData)
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x99F308", Offset = "0x99F308", VA = "0x99F308")]
		public void InitilizeCard()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x99F4C8", Offset = "0x99F4C8", VA = "0x99F4C8")]
		public void CardChosen(Transform finalPosition)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x99F66C", Offset = "0x99F66C", VA = "0x99F66C")]
		private void OnPointerEnter()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x99F6A8", Offset = "0x99F6A8", VA = "0x99F6A8")]
		private void OnPointerExit()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x99F6E4", Offset = "0x99F6E4", VA = "0x99F6E4")]
		public Card()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class CardChoice : MonoBehaviour
	{
		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CardChoiceData m_cardChoiceData;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VoiceLineCollection[] m_selectResponses;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Card[] m_cards;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] m_joints;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_finalCardPosition;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA330", Offset = "0x6EA330")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int m_isSpawnedParameter;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_cardStartOffset;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_delayFrames;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_currentDelay;

		[Token(Token = "0x17000161")]
		public bool HasMadeChoice
		{
			[Token(Token = "0x60010B2")]
			[Address(RVA = "0x99F774", Offset = "0x99F774", VA = "0x99F774")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000050")]
		private event Action OnChoiceMade
		{
			[Token(Token = "0x60010B3")]
			[Address(RVA = "0x99F7BC", Offset = "0x99F7BC", VA = "0x99F7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3230", Offset = "0x6F3230")]
			add
			{
			}
			[Token(Token = "0x60010B4")]
			[Address(RVA = "0x99F8A8", Offset = "0x99F8A8", VA = "0x99F8A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3240", Offset = "0x6F3240")]
			remove
			{
			}
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x99F994", Offset = "0x99F994", VA = "0x99F994")]
		public void StartCardChoice(Action onChoiceMade)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x99F9A4", Offset = "0x99F9A4", VA = "0x99F9A4")]
		public void StartCardChoice()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x99F9B0", Offset = "0x99F9B0", VA = "0x99F9B0")]
		public void ChooseCard(int cardIndex)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x99FB98", Offset = "0x99FB98", VA = "0x99FB98")]
		private void ChooseCard(Card chosenCard)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x99FC54", Offset = "0x99FC54", VA = "0x99FC54")]
		private void ResetCards()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x99FE48", Offset = "0x99FE48", VA = "0x99FE48")]
		private string[] GetCardNames()
		{
			return null;
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x99FFA0", Offset = "0x99FFA0", VA = "0x99FFA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x9A0018", Offset = "0x9A0018", VA = "0x9A0018")]
		public CardChoice()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E2118", Offset = "0x6E2118")]
	public class CardChoiceData : ScriptableObject
	{
		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntVariable m_choiceIndex;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CardData[] m_cardData;

		[Token(Token = "0x17000162")]
		public bool HasChoiceBeenMade
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x99FB3C", Offset = "0x99FB3C", VA = "0x99FB3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x99FB60", Offset = "0x99FB60", VA = "0x99FB60")]
		public void SetChoice(int index)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x99F7B0", Offset = "0x99F7B0", VA = "0x99F7B0")]
		public int GetChoice()
		{
			return default(int);
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x9A014C", Offset = "0x9A014C", VA = "0x9A014C")]
		public CardData GetChosenCardData()
		{
			return null;
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x99FDF4", Offset = "0x99FDF4", VA = "0x99FDF4")]
		public CardData GetCardData(int index)
		{
			return null;
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x9A017C", Offset = "0x9A017C", VA = "0x9A017C")]
		public CardChoiceData()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class CardChoicePlacement : MonoBehaviour
	{
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CardChoiceData m_cardChoiceData;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Card m_card;

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x9A01DC", Offset = "0x9A01DC", VA = "0x9A01DC")]
		public void CheckChoiceMade()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x9A02CC", Offset = "0x9A02CC", VA = "0x9A02CC")]
		public CardChoicePlacement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000238")]
	public class CardData
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_question;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_response;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite m_image;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_questionTerm;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string m_responseTerm;

		[Token(Token = "0x17000163")]
		public string QuestionTerm
		{
			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x99F2F0", Offset = "0x99F2F0", VA = "0x99F2F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public string ResponseTerm
		{
			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x99F2F8", Offset = "0x99F2F8", VA = "0x99F2F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000165")]
		public Sprite Image
		{
			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x99F300", Offset = "0x99F300", VA = "0x99F300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x9A02D4", Offset = "0x9A02D4", VA = "0x9A02D4")]
		private void OnStringChanged()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x9A034C", Offset = "0x9A034C", VA = "0x9A034C")]
		public CardData()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class ChoiceTrigger : RoomBehaviour
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CardChoice m_cardChoice;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EA42C", Offset = "0x6EA42C")]
		private bool m_saveCheckpoint;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA478", Offset = "0x6EA478")]
		[SerializeField]
		private CharacterReactor m_narrationBanter;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_cardAppears;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_cardChosen;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA4E4", Offset = "0x6EA4E4")]
		[SerializeField]
		private GameObject m_vfxParent;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_vfxActive;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_vfxEnd;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private Collider m_collider;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayableCharacter m_choosingCharacter;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDictionary<string, object> m_analyticsData;

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x9A03B8", Offset = "0x9A03B8", VA = "0x9A03B8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x9A0478", Offset = "0x9A0478", VA = "0x9A0478")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x9A0644", Offset = "0x9A0644", VA = "0x9A0644")]
		private void TriggerVfx()
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x9A0A94", Offset = "0x9A0A94", VA = "0x9A0A94")]
		private void OnChoiceMade()
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x9A0BE0", Offset = "0x9A0BE0", VA = "0x9A0BE0")]
		public ChoiceTrigger()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x9A0C5C", Offset = "0x9A0C5C", VA = "0x9A0C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3250", Offset = "0x6F3250")]
		private void <OnChoiceMade>b__14_0()
		{
		}
	}
}
namespace Cortopia.Scripts.Characters
{
	[Token(Token = "0x200023A")]
	public class Adventurer : PlayableCharacter
	{
		[Token(Token = "0x4000C11")]
		private const int CloakStartIndex = 1;

		[Token(Token = "0x4000C12")]
		private const int MaterialCount = 4;

		[Token(Token = "0x4000C13")]
		private const float FogLerpTime = 0.5f;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly int m_materialFogProperty;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA588", Offset = "0x6EA588")]
		[SerializeField]
		private Cloth m_cloth;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private IntVariable m_cloakChoiceIndex;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Texture[] m_cloakTextures;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Material[] m_fogMaterials;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Material[] m_defaultMaterials;

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x994624", Offset = "0x994624", VA = "0x994624")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x9946B4", Offset = "0x9946B4", VA = "0x9946B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x994744", Offset = "0x994744", VA = "0x994744", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData data)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x994990", Offset = "0x994990", VA = "0x994990")]
		public void EnableIntro()
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x995004", Offset = "0x995004", VA = "0x995004", Slot = "9")]
		public override void SetStateAndUpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x995098", Offset = "0x995098", VA = "0x995098", Slot = "11")]
		public override void Teleport(Vector3 position, Quaternion rotation, RoomType activeRoom)
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x994FBC", Offset = "0x994FBC", VA = "0x994FBC")]
		public void ChangeMaterial(bool useFogMaterial)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x995364", Offset = "0x995364", VA = "0x995364")]
		private void SetDefaultMaterial()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x995208", Offset = "0x995208", VA = "0x995208")]
		private void SetMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x994884", Offset = "0x994884", VA = "0x994884")]
		private void UpdateCloakTexture()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x99560C", Offset = "0x99560C", VA = "0x99560C")]
		public Adventurer()
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x995738", Offset = "0x995738", VA = "0x995738")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3260", Offset = "0x6F3260")]
		private void <SetDefaultMaterial>b__16_0()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public abstract class Character : MonoBehaviour
	{
		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomType Room;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected CharacterData m_data;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Voice m_voice;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected CharacterAnimationHandler m_animationHandler;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Locomotion m_locomotion;

		[Token(Token = "0x17000166")]
		public Voice Voice
		{
			[Token(Token = "0x60010DD")]
			[Address(RVA = "0x995740", Offset = "0x995740", VA = "0x995740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public CharacterAnimationHandler AnimationHandler
		{
			[Token(Token = "0x60010DE")]
			[Address(RVA = "0x98C600", Offset = "0x98C600", VA = "0x98C600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		public Locomotion Locomotion
		{
			[Token(Token = "0x60010DF")]
			[Address(RVA = "0x995748", Offset = "0x995748", VA = "0x995748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		public abstract bool IsActive
		{
			[Token(Token = "0x60010E0")]
			get;
		}

		[Token(Token = "0x60010E1")]
		public abstract CharacterSaveData SaveCharacter();

		[Token(Token = "0x60010E2")]
		public abstract void LoadCharacter(CharacterSaveData saveData);

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x995750", Offset = "0x995750", VA = "0x995750")]
		protected Character()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E2188", Offset = "0x6E2188")]
	public class CharacterData : ScriptableObject
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomType Room;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite m_characterPortrait;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA664", Offset = "0x6EA664")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EA664", Offset = "0x6EA664")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EA664", Offset = "0x6EA664")]
		private int m_avoidancePriority;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_climbStartForwardOffset;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_climbEndVerticalOffset;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_climbDownStartForwardOffset;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_climbDownEndVerticalOffset;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_dropDownStartForwardOffset;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_dropDownEndVerticalOffset;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_defaultAnimatorStateName;

		[Token(Token = "0x1700016A")]
		public Sprite Portrait
		{
			[Token(Token = "0x60010E4")]
			[Address(RVA = "0x993028", Offset = "0x993028", VA = "0x993028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016B")]
		public int AvoidancePriority
		{
			[Token(Token = "0x60010E5")]
			[Address(RVA = "0x995758", Offset = "0x995758", VA = "0x995758")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700016C")]
		public float ClimbStartForwardOffset
		{
			[Token(Token = "0x60010E6")]
			[Address(RVA = "0x995760", Offset = "0x995760", VA = "0x995760")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016D")]
		public float ClimbEndVerticalOffset
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0x995768", Offset = "0x995768", VA = "0x995768")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016E")]
		public float ClimbDownForwardOffset
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0x995770", Offset = "0x995770", VA = "0x995770")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016F")]
		public float ClimbDownVerticalOffset
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0x995778", Offset = "0x995778", VA = "0x995778")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000170")]
		public float DropDownStartForwardOffset
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0x995780", Offset = "0x995780", VA = "0x995780")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000171")]
		public float DropDownEndVerticalOffset
		{
			[Token(Token = "0x60010EB")]
			[Address(RVA = "0x995788", Offset = "0x995788", VA = "0x995788")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000172")]
		public string DefaultAnimatorStateName
		{
			[Token(Token = "0x60010EC")]
			[Address(RVA = "0x995790", Offset = "0x995790", VA = "0x995790")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x995798", Offset = "0x995798", VA = "0x995798")]
		public CharacterData()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class CharacterGrabbable : MonoBehaviour
	{
		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacterData m_data;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_characterRoot;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EA790", Offset = "0x6EA790")]
		[SerializeField]
		private float m_interactableCollisionRadius;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA7DC", Offset = "0x6EA7DC")]
		[SerializeField]
		private float m_smoothEndPositionMoveSpeed;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TrailRenderer m_trailRenderer;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_glow;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem[] m_visuals;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isGrabbed;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isDefaultColor;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_sampleAreaMaskIndex;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_defaultFxColor;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color m_defaultTrailColor;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_positionOffset;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_samplePosition;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Tweener m_moveTweener;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider[] m_interactableSampleColliders;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] m_sampleColliders;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private NavMeshPath m_path;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterOrientationState m_grabbedOrientationState;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private readonly Color m_nonWalkableColor;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private readonly Vector3 m_sampleBox;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly Vector3[] m_sampleBoxOffsets;

		[Token(Token = "0x4000C40")]
		private const float VerticalSampleDistance = 2.5f;

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x995800", Offset = "0x995800", VA = "0x995800")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x995A50", Offset = "0x995A50", VA = "0x995A50")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x995F44", Offset = "0x995F44", VA = "0x995F44")]
		public void OnGrab()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x99603C", Offset = "0x99603C", VA = "0x99603C")]
		public void OnRelease()
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x996970", Offset = "0x996970", VA = "0x996970")]
		public void ResetGrabbable(bool immediate = false)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x996614", Offset = "0x996614", VA = "0x996614")]
		private InteractableObject TryGetTransitionInteractable()
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x995AAC", Offset = "0x995AAC", VA = "0x995AAC")]
		private bool SamplePosition()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x995980", Offset = "0x995980", VA = "0x995980")]
		private void SetGrabbedEffectActive(bool active, bool immediate = false)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x996A2C", Offset = "0x996A2C", VA = "0x996A2C")]
		private void SetTrailActive(bool active)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x995DCC", Offset = "0x995DCC", VA = "0x995DCC")]
		private void SetGrabbedEffectColor(bool useDefault)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x9958C4", Offset = "0x9958C4", VA = "0x9958C4")]
		private void SetGrabbedEffectColorReferences()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x996200", Offset = "0x996200", VA = "0x996200")]
		private void SmoothSetLastPosition()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x996ABC", Offset = "0x996ABC", VA = "0x996ABC")]
		public CharacterGrabbable()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x996C6C", Offset = "0x996C6C", VA = "0x996C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3270", Offset = "0x6F3270")]
		private void <OnRelease>b__27_0()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class CharacterIndicator : MonoBehaviour
	{
		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color sm_nonSelectColor;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_selectColor;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA868", Offset = "0x6EA868")]
		[SerializeField]
		private float m_blendSpeed;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_targetTransform;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA8C4", Offset = "0x6EA8C4")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MultiLookAtConstraint m_lookAtConstraint;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LerpConstraint m_lerpConstraint;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isIndicatorActive;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_defaultParent;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_defaultLocalPosition;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly int m_parameterIsActive;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int m_parameterReset;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private readonly int m_stateSpawn;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int m_stateDeSpawn;

		[Token(Token = "0x4000C50")]
		private const float AnimationStartTime = 0.9f;

		[Token(Token = "0x4000C51")]
		private const int AnimationLayer = 0;

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x996C74", Offset = "0x996C74", VA = "0x996C74")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x996DF8", Offset = "0x996DF8", VA = "0x996DF8")]
		public void EnableSelectIndicator(bool isActiveCharacter, CharacterOrientationState orientation)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x997160", Offset = "0x997160", VA = "0x997160")]
		public void DisableSelectIndicator()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x997100", Offset = "0x997100", VA = "0x997100")]
		private void EnableIndicatorConstraint(float blendSpeed)
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x9971E0", Offset = "0x9971E0", VA = "0x9971E0")]
		private void DisableIndicatorConstraint()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x997240", Offset = "0x997240", VA = "0x997240")]
		public CharacterIndicator()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public enum CharacterInstantiationFallbackState
	{
		[Token(Token = "0x4000C53")]
		None,
		[Token(Token = "0x4000C54")]
		TeleportToPoint,
		[Token(Token = "0x4000C55")]
		MoveToPoint
	}
	[Token(Token = "0x2000240")]
	public class CharacterMaterialSetter : MonoBehaviour
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_useFogMaterial;

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x99735C", Offset = "0x99735C", VA = "0x99735C")]
		public void SetMaterials(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x997488", Offset = "0x997488", VA = "0x997488")]
		public CharacterMaterialSetter()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public enum CharacterOrientationState
	{
		[Token(Token = "0x4000C58")]
		Up,
		[Token(Token = "0x4000C59")]
		Down
	}
	[Token(Token = "0x2000242")]
	public class CharacterParentSetter : MonoBehaviour
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_newParent;

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x997490", Offset = "0x997490", VA = "0x997490")]
		public void SetCharacterParent(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x9974E4", Offset = "0x9974E4", VA = "0x9974E4")]
		public CharacterParentSetter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class CharacterSaveData : SavableData
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomType Room;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SavableTransform Transform;

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x9974EC", Offset = "0x9974EC", VA = "0x9974EC")]
		public CharacterSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000244")]
	public class PlayableCharacterSaveData : CharacterSaveData
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterType Type;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CharacterState State;

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x99CF2C", Offset = "0x99CF2C", VA = "0x99CF2C")]
		public PlayableCharacterSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000245")]
	public class NPCSaveData : CharacterSaveData
	{
		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Guid;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NPCState State;

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x99C77C", Offset = "0x99C77C", VA = "0x99C77C")]
		public NPCSaveData()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class CharacterSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterState m_characterState;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_spawnPoint;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterInstantiationFallbackState m_spawnState;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_disableAgentOnSpawn;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool m_disableRenderersOnSpawn;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EA9C0", Offset = "0x6EA9C0")]
		[SerializeField]
		private RoomType m_activeRoomType;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x9974F4", Offset = "0x9974F4", VA = "0x9974F4")]
		public void SpawnCharacter()
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x997734", Offset = "0x997734", VA = "0x997734")]
		public CharacterSpawner()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public enum CharacterState
	{
		[Token(Token = "0x4000C69")]
		None = 0,
		[Token(Token = "0x4000C6A")]
		Active = 1,
		[Token(Token = "0x4000C6B")]
		Passive = 2,
		[Token(Token = "0x4000C6C")]
		Tethered = 4,
		[Token(Token = "0x4000C6D")]
		FirstPerson = 8,
		[Token(Token = "0x4000C6E")]
		Disabled = 16,
		[Token(Token = "0x4000C6F")]
		Inactive = 32,
		[Token(Token = "0x4000C70")]
		NonSelectable = 60,
		[Token(Token = "0x4000C71")]
		Unavailable = 48
	}
	[Token(Token = "0x2000248")]
	public static class EnumExtensions
	{
		[Token(Token = "0x600110C")]
		[Address(RVA = "0x9985A8", Offset = "0x9985A8", VA = "0x9985A8")]
		public static bool ContainsFlag(this CharacterState a, CharacterState b)
		{
			return default(bool);
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x9985B4", Offset = "0x9985B4", VA = "0x9985B4")]
		public static bool ContainsFlag(this CharacterType a, CharacterType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000249")]
	public class CharacterStateSetter : MonoBehaviour
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacterData m_characterData;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterState m_newState;

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x997750", Offset = "0x997750", VA = "0x997750")]
		public void SetCharacterState()
		{
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x997930", Offset = "0x997930", VA = "0x997930")]
		public void SetCharacterVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x997B00", Offset = "0x997B00", VA = "0x997B00")]
		public void SetCharacterStates()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x997F5C", Offset = "0x997F5C", VA = "0x997F5C")]
		public void ResetCharacterStates()
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x997FDC", Offset = "0x997FDC", VA = "0x997FDC")]
		public CharacterStateSetter()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public enum CharacterType
	{
		[Token(Token = "0x4000C75")]
		None = 0,
		[Token(Token = "0x4000C76")]
		Adventurer = 1,
		[Token(Token = "0x4000C77")]
		FourHalf = 2,
		[Token(Token = "0x4000C78")]
		All = -1
	}
	[Token(Token = "0x200024B")]
	public static class CharacterUtils
	{
		[Token(Token = "0x2000435")]
		public struct AvoidancePriorities
		{
			[Token(Token = "0x4001427")]
			public const int Active = 55;

			[Token(Token = "0x4001428")]
			public const int Passive = 60;

			[Token(Token = "0x4001429")]
			public const int Disabled = 45;
		}

		[Serializable]
		[Token(Token = "0x2000436")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E305C", Offset = "0x6E305C")]
		private sealed class <>c
		{
			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CharacterType, bool> <>9__5_0;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, bool> <>9__6_0;

			[Token(Token = "0x600196B")]
			[Address(RVA = "0x99846C", Offset = "0x99846C", VA = "0x99846C")]
			public <>c()
			{
			}

			[Token(Token = "0x600196C")]
			[Address(RVA = "0x998474", Offset = "0x998474", VA = "0x998474")]
			internal bool <GetCharacterTypes>b__5_0(CharacterType x)
			{
				return default(bool);
			}

			[Token(Token = "0x600196D")]
			[Address(RVA = "0x998484", Offset = "0x998484", VA = "0x998484")]
			internal bool <GetCharacterNames>b__6_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C79")]
		public const CharacterType MainCharacter = CharacterType.Adventurer;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CharacterType[] sm_characterTypes;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] sm_characterNames;

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x997FEC", Offset = "0x997FEC", VA = "0x997FEC")]
		public static int GetNumberOfCharacters()
		{
			return default(int);
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x998018", Offset = "0x998018", VA = "0x998018")]
		public static CharacterType[] GetCharacterTypes()
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x998224", Offset = "0x998224", VA = "0x998224")]
		public static string[] GetCharacterNames()
		{
			return null;
		}
	}
	[Token(Token = "0x200024C")]
	public class FourHalf : PlayableCharacter
	{
		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private BoolVariable m_hasFollowerBool;

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x9985C0", Offset = "0x9985C0", VA = "0x9985C0", Slot = "10")]
		public override void UpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x998654", Offset = "0x998654", VA = "0x998654", Slot = "7")]
		public override void AddFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x998760", Offset = "0x998760", VA = "0x998760", Slot = "8")]
		public override void RemoveFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x9987A8", Offset = "0x9987A8", VA = "0x9987A8")]
		public FourHalf()
		{
		}
	}
	[Token(Token = "0x200024D")]
	public interface ITaskable
	{
		[Token(Token = "0x600111A")]
		void SetIdle(bool isIdle);

		[Token(Token = "0x600111B")]
		void GoToTask(Transform destination, Action<bool> onDestinationReached);

		[Token(Token = "0x600111C")]
		void StartTask(int taskID);

		[Token(Token = "0x600111D")]
		void FinishTask();

		[Token(Token = "0x600111E")]
		void AbortTask();
	}
	[Token(Token = "0x200024E")]
	public enum UnfollowState
	{
		[Token(Token = "0x4000C7E")]
		Wait,
		[Token(Token = "0x4000C7F")]
		Complete,
		[Token(Token = "0x4000C80")]
		Replaced,
		[Token(Token = "0x4000C81")]
		PathBlocked,
		[Token(Token = "0x4000C82")]
		WrongGarden,
		[Token(Token = "0x4000C83")]
		SceneUnload
	}
	[Token(Token = "0x200024F")]
	public interface IFollower
	{
		[Token(Token = "0x600111F")]
		void EnableFollow(Locomotion leadLocomotion);

		[Token(Token = "0x6001120")]
		void DisableFollow(UnfollowState unfollowState);

		[Token(Token = "0x6001121")]
		void FollowCharacter();
	}
	[Token(Token = "0x2000250")]
	public class NPCCharacter : Character
	{
		[Serializable]
		[Token(Token = "0x2000437")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E306C", Offset = "0x6E306C")]
		private sealed class <>c
		{
			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__10_0;

			[Token(Token = "0x600196F")]
			[Address(RVA = "0x99C89C", Offset = "0x99C89C", VA = "0x99C89C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001970")]
			[Address(RVA = "0x99C8A4", Offset = "0x99C8A4", VA = "0x99C8A4")]
			internal bool <Awake>b__10_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_saveGuid;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Renderer[] m_renderers;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NPCState m_state;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_roomActivatedEventToken;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_onBiomeDeactivated;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NPCSaveData m_saveData;

		[Token(Token = "0x17000173")]
		public override bool IsActive
		{
			[Token(Token = "0x6001122")]
			[Address(RVA = "0x99BA34", Offset = "0x99BA34", VA = "0x99BA34", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x99BA44", Offset = "0x99BA44", VA = "0x99BA44", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x99ADC4", Offset = "0x99ADC4", VA = "0x99ADC4", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x99BA48", Offset = "0x99BA48", VA = "0x99BA48", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x99BD54", Offset = "0x99BD54", VA = "0x99BD54", Slot = "5")]
		public override CharacterSaveData SaveCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x99BDF0", Offset = "0x99BDF0", VA = "0x99BDF0", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x99C0B4", Offset = "0x99C0B4", VA = "0x99C0B4")]
		public void InactivateNPC()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x99BFA4", Offset = "0x99BFA4", VA = "0x99BFA4")]
		public void DisableNPC()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x99A49C", Offset = "0x99A49C", VA = "0x99A49C")]
		public void EnableNPC()
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x99C0F8", Offset = "0x99C0F8", VA = "0x99C0F8")]
		private void TryRemoveVoice()
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x99B598", Offset = "0x99B598", VA = "0x99B598", Slot = "10")]
		protected virtual void SetNPCActive(bool active)
		{
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x99BC9C", Offset = "0x99BC9C", VA = "0x99BC9C")]
		private void TryLoadCharacter()
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x99BFF4", Offset = "0x99BFF4", VA = "0x99BFF4")]
		private void AwaitRoomActivation()
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x99ACF4", Offset = "0x99ACF4", VA = "0x99ACF4")]
		public NPCCharacter()
		{
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x99C78C", Offset = "0x99C78C", VA = "0x99C78C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F32A0", Offset = "0x6F32A0")]
		private void <AwaitRoomActivation>b__19_0(RoomEvents.RoomActivatedEvent eventData)
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class NPCDestinationSetter : MonoBehaviour
	{
		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NPCCharacter m_targetCharacter;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAA94", Offset = "0x6EAA94")]
		[SerializeField]
		private bool m_teleportToNewStartPosition;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_startPosition;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAAF0", Offset = "0x6EAAF0")]
		[SerializeField]
		private Transform m_destinationTransform;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_faceDestinationOnArrival;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onDestinationReached;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x99C91C", Offset = "0x99C91C", VA = "0x99C91C")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x99CB68", Offset = "0x99CB68", VA = "0x99CB68")]
		private void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x99CB98", Offset = "0x99CB98", VA = "0x99CB98")]
		public NPCDestinationSetter()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public enum NPCState
	{
		[Token(Token = "0x4000C91")]
		Active,
		[Token(Token = "0x4000C92")]
		InActive,
		[Token(Token = "0x4000C93")]
		Disabled
	}
	[Token(Token = "0x2000253")]
	public class PlayableCharacter : Character
	{
		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAB5C", Offset = "0x6EAB5C")]
		[SerializeField]
		private CapsuleCollider m_collider;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_selectIndicatorOffset;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CharacterSfxHandler m_sfxHandler;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EABC8", Offset = "0x6EABC8")]
		[SerializeField]
		protected CharacterIndicator m_characterIndicator;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SkinnedMeshRenderer[] m_renderers;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool m_trackInput;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_resetAxis;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool m_resetMovement;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		private bool m_followMainCharacter;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_isSelectIndicatorActive;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Locomotion m_leadLocomotion;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayableCharacterSaveData m_saveData;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC24", Offset = "0x6EAC24")]
		private CharacterState <State>k__BackingField;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EAC34", Offset = "0x6EAC34")]
		private IFollower <Follower>k__BackingField;

		[Token(Token = "0x17000174")]
		public PlayableCharacterData Data
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0x99CC00", Offset = "0x99CC00", VA = "0x99CC00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public CharacterType Type
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0x99745C", Offset = "0x99745C", VA = "0x99745C")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x17000176")]
		public CharacterState State
		{
			[Token(Token = "0x6001136")]
			[Address(RVA = "0x99CC8C", Offset = "0x99CC8C", VA = "0x99CC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F32B0", Offset = "0x6F32B0")]
			get
			{
				return default(CharacterState);
			}
			[Token(Token = "0x6001137")]
			[Address(RVA = "0x99CC94", Offset = "0x99CC94", VA = "0x99CC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F32C0", Offset = "0x6F32C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public override bool IsActive
		{
			[Token(Token = "0x6001138")]
			[Address(RVA = "0x99CC9C", Offset = "0x99CC9C", VA = "0x99CC9C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		public CharacterOrientationState OrientationState
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0x992330", Offset = "0x992330", VA = "0x992330")]
			get
			{
				return default(CharacterOrientationState);
			}
		}

		[Token(Token = "0x17000179")]
		public IFollower Follower
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0x998750", Offset = "0x998750", VA = "0x998750")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F32D0", Offset = "0x6F32D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600113B")]
			[Address(RVA = "0x998758", Offset = "0x998758", VA = "0x998758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F32E0", Offset = "0x6F32E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x99CCAC", Offset = "0x99CCAC", VA = "0x99CCAC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x99CE30", Offset = "0x99CE30", VA = "0x99CE30")]
		private void Awake()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x99CF34", Offset = "0x99CF34", VA = "0x99CF34")]
		private void Update()
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x99D214", Offset = "0x99D214", VA = "0x99D214", Slot = "5")]
		public override CharacterSaveData SaveCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0x994784", Offset = "0x994784", VA = "0x994784", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData data)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x99D434", Offset = "0x99D434", VA = "0x99D434", Slot = "7")]
		public virtual void AddFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0x99D438", Offset = "0x99D438", VA = "0x99D438", Slot = "8")]
		public virtual void RemoveFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0x99D43C", Offset = "0x99D43C", VA = "0x99D43C")]
		public void SetLeadCharacterLocomotion(Locomotion leadLocomotion)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x99D4C4", Offset = "0x99D4C4", VA = "0x99D4C4")]
		public void SetRoom(RoomType roomType)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x994ED8", Offset = "0x994ED8", VA = "0x994ED8")]
		public void ForceSetRoom(RoomType roomType)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x995054", Offset = "0x995054", VA = "0x995054", Slot = "9")]
		public virtual void SetStateAndUpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x99D4D8", Offset = "0x99D4D8", VA = "0x99D4D8", Slot = "10")]
		public virtual void UpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x99D550", Offset = "0x99D550", VA = "0x99D550")]
		public void PlaySelectSound()
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x99D5D0", Offset = "0x99D5D0", VA = "0x99D5D0")]
		public void RequireInputAxisReset()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x9976A8", Offset = "0x9976A8", VA = "0x9976A8")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x9950D0", Offset = "0x9950D0", VA = "0x9950D0", Slot = "11")]
		public virtual void Teleport(Vector3 position, Quaternion rotation, RoomType activeRoom)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0x99D5DC", Offset = "0x99D5DC", VA = "0x99D5DC")]
		public void SetSfxHandlerActive(bool isActive)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x99D2B4", Offset = "0x99D2B4", VA = "0x99D2B4")]
		private void SetState(CharacterState state)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x99D614", Offset = "0x99D614", VA = "0x99D614")]
		private void SetInputLocked(bool isLocked)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x99D024", Offset = "0x99D024", VA = "0x99D024")]
		protected void UpdateCharacterMoveInput()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x99D668", Offset = "0x99D668", VA = "0x99D668")]
		private void ResetCharacterInput()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x994FCC", Offset = "0x994FCC", VA = "0x994FCC")]
		protected void SetColliderActive(bool isActive)
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x9956A8", Offset = "0x9956A8", VA = "0x9956A8")]
		public PlayableCharacter()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class PlayableCharacterData : CharacterData
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MathUtils.MinMax m_minMaxFollowDistance;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAC54", Offset = "0x6EAC54")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip m_selectSound;

		[Token(Token = "0x1700017A")]
		public CharacterType Type
		{
			[Token(Token = "0x6001153")]
			[Address(RVA = "0x99CC84", Offset = "0x99CC84", VA = "0x99CC84")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x1700017B")]
		public MathUtils.MinMax MinMaxFollowDistance
		{
			[Token(Token = "0x6001154")]
			[Address(RVA = "0x99D718", Offset = "0x99D718", VA = "0x99D718")]
			get
			{
				return default(MathUtils.MinMax);
			}
		}

		[Token(Token = "0x1700017C")]
		public AudioClip SelectSound
		{
			[Token(Token = "0x6001155")]
			[Address(RVA = "0x99D5C8", Offset = "0x99D5C8", VA = "0x99D5C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x99D720", Offset = "0x99D720", VA = "0x99D720")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F32F0", Offset = "0x6F32F0")]
		public void ResetData()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x99D724", Offset = "0x99D724", VA = "0x99D724")]
		public PlayableCharacterData()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class PlayableCharacterDestinationSetter : MonoBehaviour
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EACB0", Offset = "0x6EACB0")]
		[SerializeField]
		private PlayableCharacterData m_playableCharacterData;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EACFC", Offset = "0x6EACFC")]
		[SerializeField]
		private bool m_teleportToNewStartPosition;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_startPosition;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAD58", Offset = "0x6EAD58")]
		[SerializeField]
		private Transform m_destinationTransform;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_faceDestinationOnArrival;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayableCharacterEvent m_onDestinationReached;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayableCharacter m_targetCharacter;

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x99D768", Offset = "0x99D768", VA = "0x99D768")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x99DA28", Offset = "0x99DA28", VA = "0x99DA28")]
		private void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x99DA90", Offset = "0x99DA90", VA = "0x99DA90")]
		public PlayableCharacterDestinationSetter()
		{
		}
	}
}
namespace Cortopia.Scripts.Characters.Sockets
{
	[Token(Token = "0x2000256")]
	public class CharacterSocket : MonoBehaviour
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SocketType m_type;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_attachedObject;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_attachedObjectsOrigin;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PositionRotation m_attachedObjectsOriginOffset;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject m_queuedAttachObject;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_queuedAttachMaintainOffset;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_queuedDetachObject;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_queuedDetachMaintainWorldPosition;

		[Token(Token = "0x1700017D")]
		public SocketType SocketType
		{
			[Token(Token = "0x600115B")]
			[Address(RVA = "0x99DAF8", Offset = "0x99DAF8", VA = "0x99DAF8")]
			get
			{
				return default(SocketType);
			}
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x99DB00", Offset = "0x99DB00", VA = "0x99DB00")]
		public void AttachDuplicate(GameObject targetObject, bool maintainOffset)
		{
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0x99DE68", Offset = "0x99DE68", VA = "0x99DE68")]
		public void AttachObject(GameObject targetObject, bool maintainOffset)
		{
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0x99DCE8", Offset = "0x99DCE8", VA = "0x99DCE8")]
		public void DetachObject(bool keepWorldPosition)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0x99E160", Offset = "0x99E160", VA = "0x99E160")]
		public void DetachObjectNewParent(Transform newParent)
		{
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0x99E220", Offset = "0x99E220", VA = "0x99E220")]
		public void AddQueuedAttach(GameObject targetObject, bool maintainOffset)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0x99E230", Offset = "0x99E230", VA = "0x99E230")]
		public void AddQueuedDetach(bool maintainWorldPosition)
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0x99E244", Offset = "0x99E244", VA = "0x99E244")]
		public void AttachQueuedObject()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0x99E2D4", Offset = "0x99E2D4", VA = "0x99E2D4")]
		public void DetachQueuedObject()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0x99E308", Offset = "0x99E308", VA = "0x99E308")]
		public CharacterSocket()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class SavableSocketAttacher : SocketAttacher, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EADD4", Offset = "0x6EADD4")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolVariable m_isAttached;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SavablePose m_localPose;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_allCharactersSpawnedEventToken;

		[Token(Token = "0x1700017E")]
		public string Guid
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0x99E310", Offset = "0x99E310", VA = "0x99E310", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001166")]
			[Address(RVA = "0x99E318", Offset = "0x99E318", VA = "0x99E318", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x99E320", Offset = "0x99E320", VA = "0x99E320", Slot = "6")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x99E500", Offset = "0x99E500", VA = "0x99E500", Slot = "7")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0x99E938", Offset = "0x99E938", VA = "0x99E938")]
		private void LoadAttachObject()
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x99E410", Offset = "0x99E410", VA = "0x99E410")]
		private void SetLocalPose()
		{
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x99E750", Offset = "0x99E750", VA = "0x99E750")]
		private SavablePose GetDefaultPose()
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x99EB1C", Offset = "0x99EB1C", VA = "0x99EB1C")]
		public SavableSocketAttacher()
		{
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x99EC44", Offset = "0x99EC44", VA = "0x99EC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3328", Offset = "0x6F3328")]
		private void <Deserialize>b__8_0(CharacterEvents.AllCharactersSpawnedEvent eventData)
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class SocketAttacher : MonoBehaviour
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAE30", Offset = "0x6EAE30")]
		[SerializeField]
		protected bool m_usingDataSocketHandler;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected CharacterData m_characterData;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAE9C", Offset = "0x6EAE9C")]
		[SerializeField]
		private SocketType m_socketType;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected GameObject m_socketableObject;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_maintainOffsetOnAttach;

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x99EA40", Offset = "0x99EA40", VA = "0x99EA40")]
		public void AttachObject()
		{
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x99ECC0", Offset = "0x99ECC0", VA = "0x99ECC0")]
		private SocketHandler GetSocketHandlerFromData()
		{
			return null;
		}

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x99EC34", Offset = "0x99EC34", VA = "0x99EC34")]
		public SocketAttacher()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class SocketDetacher : MonoBehaviour
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAF08", Offset = "0x6EAF08")]
		[SerializeField]
		private bool m_usingDataSocketHandler;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterData m_characterData;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EAF74", Offset = "0x6EAF74")]
		[SerializeField]
		private SocketType m_socketType;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_detachToNewParent;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_newParent;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_maintainOffsetOnAttach;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x99EE0C", Offset = "0x99EE0C", VA = "0x99EE0C")]
		public void DetachObject()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x99EF30", Offset = "0x99EF30", VA = "0x99EF30")]
		private SocketHandler GetSocketHandlerFromData()
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x99F0A0", Offset = "0x99F0A0", VA = "0x99F0A0")]
		public SocketDetacher()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public enum SocketEventType
	{
		[Token(Token = "0x4000CC7")]
		Attach,
		[Token(Token = "0x4000CC8")]
		Detach
	}
	[Token(Token = "0x200025B")]
	public class SocketHandler : MonoBehaviour
	{
		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSocket m_leftHandSocket;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterSocket m_rightHandSocket;

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x99B1B4", Offset = "0x99B1B4", VA = "0x99B1B4")]
		public void QueueAttachObject(SocketType attachLocation, GameObject objectToAttach, bool maintainObjectOffset)
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x99B334", Offset = "0x99B334", VA = "0x99B334")]
		public void QueueDetach(SocketType detachLocation, bool maintainWorldPosition)
		{
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x99F19C", Offset = "0x99F19C", VA = "0x99F19C")]
		public void AttachQueuedObject(SocketType attachLocation)
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x99F1C8", Offset = "0x99F1C8", VA = "0x99F1C8")]
		public void DetachQueuedObject(SocketType detachLocation)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x99F208", Offset = "0x99F208", VA = "0x99F208")]
		public void AttachDuplucate(SocketType attachLocation, GameObject objectToAttach, bool maintainObjectOffset)
		{
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x99EDC8", Offset = "0x99EDC8", VA = "0x99EDC8")]
		public void AttachObject(SocketType attachLocation, GameObject objectToAttach, bool maintainObjectOffset)
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x99F06C", Offset = "0x99F06C", VA = "0x99F06C")]
		public void DetachObject(SocketType detachLocation, bool maintainWorldPosition)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x99F038", Offset = "0x99F038", VA = "0x99F038")]
		public void DetachObjectNewParent(SocketType detachLocation, Transform newParent)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x99F0B0", Offset = "0x99F0B0", VA = "0x99F0B0")]
		private CharacterSocket GetSocket(SocketType socketType)
		{
			return null;
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x99F24C", Offset = "0x99F24C", VA = "0x99F24C")]
		public SocketHandler()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public enum SocketType
	{
		[Token(Token = "0x4000CCC")]
		LeftHand,
		[Token(Token = "0x4000CCD")]
		RightHand
	}
}
namespace Cortopia.Scripts.Characters.NPC
{
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E2208", Offset = "0x6E2208")]
	public class BabyRabbitControl : Character
	{
		[Token(Token = "0x2000438")]
		private enum BabyRabbitState
		{
			[Token(Token = "0x4001430")]
			Active,
			[Token(Token = "0x4001431")]
			Inactive,
			[Token(Token = "0x4001432")]
			Poked,
			[Token(Token = "0x4001433")]
			Recovering,
			[Token(Token = "0x4001434")]
			Destroyed,
			[Token(Token = "0x4001435")]
			Idle
		}

		[Token(Token = "0x4000CCE")]
		private const float WalkDistance = 1.5f;

		[Token(Token = "0x4000CCF")]
		private const float PokeForce = 4f;

		[Token(Token = "0x4000CD0")]
		private const float RecoveryTime = 0.25f;

		[Token(Token = "0x4000CD1")]
		private const float MinFallThreshold = -5f;

		[Token(Token = "0x4000CD2")]
		private const float MinFallScreamThreshold = -5f;

		[Token(Token = "0x4000CD3")]
		private const float ScreamStartTime = 0.25f;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int m_parameterIsFalling;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int m_parameterIsRolling;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve m_jumpCurve;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Renderer[] m_renderers;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MathUtils.MinMax m_idleTimeRange;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB068", Offset = "0x6EB068")]
		[SerializeField]
		private SoundEffect m_pokeSoundEffect;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource m_screamAudio;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_spawnSequence;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BabyRabbitState m_currentState;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_recoverRotation;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_recoveryTimer;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_screamTimer;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_isDestroying;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_elapsedTime;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_idleTime;

		[Token(Token = "0x1700017F")]
		public override bool IsActive
		{
			[Token(Token = "0x600117E")]
			[Address(RVA = "0x9987AC", Offset = "0x9987AC", VA = "0x9987AC", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x9987B4", Offset = "0x9987B4", VA = "0x9987B4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x9987C0", Offset = "0x9987C0", VA = "0x9987C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x998818", Offset = "0x998818", VA = "0x998818")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x998DC0", Offset = "0x998DC0", VA = "0x998DC0", Slot = "5")]
		public override CharacterSaveData SaveCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x998DC8", Offset = "0x998DC8", VA = "0x998DC8", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x998DCC", Offset = "0x998DCC", VA = "0x998DCC")]
		public void Initialize(Vector3 spawnPoint)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x998F28", Offset = "0x998F28", VA = "0x998F28")]
		public void Spawn(Transform spawnPoint, Vector3 jumpPosition, float tweenTime)
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x999150", Offset = "0x999150", VA = "0x999150")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x999318", Offset = "0x999318", VA = "0x999318")]
		public void Poke(Vector3 pointerDirection)
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x998AA0", Offset = "0x998AA0", VA = "0x998AA0")]
		private void UpdatePoked()
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x999194", Offset = "0x999194", VA = "0x999194")]
		private void ResetBunny()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x9989FC", Offset = "0x9989FC", VA = "0x9989FC")]
		private void Respawn()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x998C5C", Offset = "0x998C5C", VA = "0x998C5C")]
		private void Recover()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x999578", Offset = "0x999578", VA = "0x999578")]
		private void StopScream()
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x998D54", Offset = "0x998D54", VA = "0x998D54")]
		private void SetNewDestination()
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x9995AC", Offset = "0x9995AC", VA = "0x9995AC")]
		private void SetDestination()
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x999778", Offset = "0x999778", VA = "0x999778")]
		private void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x999788", Offset = "0x999788", VA = "0x999788")]
		public BabyRabbitControl()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x99986C", Offset = "0x99986C", VA = "0x99986C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3338", Offset = "0x6F3338")]
		private void <Spawn>b__31_0()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class BabyRabbitPoolHandler : RoomBehaviour
	{
		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_characterParent;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB0D4", Offset = "0x6EB0D4")]
		private int m_poolCount;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_spawnTime;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BabyRabbitControl m_babyRabbitPrefab;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] m_respawnPoints;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<BabyRabbitControl> m_availableRabbits;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_respawnBabyRabbitEventToken;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_biomeDeactivatedEventToken;

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x9998F4", Offset = "0x9998F4", VA = "0x9998F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x999A3C", Offset = "0x999A3C", VA = "0x999A3C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x999C98", Offset = "0x999C98", VA = "0x999C98")]
		private void RespawnBabyRabbit(CharacterEvents.BabyRabbitRespawnEvent eventData)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x999B3C", Offset = "0x999B3C", VA = "0x999B3C")]
		private void EnableAllRabbits()
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x999E98", Offset = "0x999E98", VA = "0x999E98")]
		private void DisableAllRabbits()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x9998F8", Offset = "0x9998F8", VA = "0x9998F8")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x999D7C", Offset = "0x999D7C", VA = "0x999D7C")]
		private Vector3 JumpPosition(Transform spawnPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x999F5C", Offset = "0x999F5C", VA = "0x999F5C")]
		public BabyRabbitPoolHandler()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x999FC8", Offset = "0x999FC8", VA = "0x999FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3348", Offset = "0x6F3348")]
		private void <Initialize>b__10_0(RoomEvents.BiomeDeactivatedEvent eventData)
		{
		}
	}
	[Token(Token = "0x200025F")]
	public abstract class CardWorkerControl : NPCCharacter, ITaskable, IFollower
	{
		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterIsWorking;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly int m_parameterActionType;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB144", Offset = "0x6EB144")]
		[SerializeField]
		private CharacterIndicator m_selectIndicator;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected NPCWorker m_workerBehaviour;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_defaultWalkSpeed;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_followWalkSpeed;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB1C0", Offset = "0x6EB1C0")]
		[SerializeField]
		private VoiceLineCollection m_selectVO;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected VoiceLine m_interactionFailedVO;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private VoiceLineCollection m_unfollowReactions;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_isIdle;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Locomotion m_leadLocomotion;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private NavMeshPath m_path;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EB22C", Offset = "0x6EB22C")]
		private CastlesTree <CurrentTree>k__BackingField;

		[Token(Token = "0x17000180")]
		protected CastlesTree CurrentTree
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x99A058", Offset = "0x99A058", VA = "0x99A058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3358", Offset = "0x6F3358")]
			get
			{
				return null;
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x99A060", Offset = "0x99A060", VA = "0x99A060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3368", Offset = "0x6F3368")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		protected virtual CastlesTree.ParticleType WorkParticleType
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x99A068", Offset = "0x99A068", VA = "0x99A068", Slot = "19")]
			get
			{
				return default(CastlesTree.ParticleType);
			}
		}

		[Token(Token = "0x600119E")]
		public abstract bool TryAddTreeWork(CastlesTree tree);

		[Token(Token = "0x600119F")]
		public abstract void TryStartTreeInteraction(CastlesTree tree);

		[Token(Token = "0x60011A0")]
		public abstract void TryCompleteTreeInteraction(CastlesTree tree);

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x99A070", Offset = "0x99A070", VA = "0x99A070")]
		private void Start()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x99A190", Offset = "0x99A190", VA = "0x99A190")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x99A250", Offset = "0x99A250", VA = "0x99A250", Slot = "23")]
		public virtual void TryTreeInteraction(CastlesTree tree, PlayableCharacter character, CardWork work)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x99A448", Offset = "0x99A448", VA = "0x99A448", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x99A0D8", Offset = "0x99A0D8", VA = "0x99A0D8", Slot = "11")]
		public void SetIdle(bool activateIdle)
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x99A5E8", Offset = "0x99A5E8", VA = "0x99A5E8", Slot = "12")]
		public void GoToTask(Transform location, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x99A6A0", Offset = "0x99A6A0", VA = "0x99A6A0", Slot = "13")]
		public void StartTask(int taskID)
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x99A74C", Offset = "0x99A74C", VA = "0x99A74C", Slot = "15")]
		public void AbortTask()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x99A898", Offset = "0x99A898", VA = "0x99A898", Slot = "14")]
		public void FinishTask()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x99A8A0", Offset = "0x99A8A0", VA = "0x99A8A0")]
		public void OnInteract(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x99A9B4", Offset = "0x99A9B4", VA = "0x99A9B4", Slot = "16")]
		public void EnableFollow(Locomotion leadLocomotion)
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x99A2C4", Offset = "0x99A2C4", VA = "0x99A2C4", Slot = "17")]
		public void DisableFollow(UnfollowState unfollowState)
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x99A218", Offset = "0x99A218", VA = "0x99A218", Slot = "18")]
		public void FollowCharacter()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x99AB90", Offset = "0x99AB90", VA = "0x99AB90")]
		public void SetCurrentTree(CastlesTree tree)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x99A858", Offset = "0x99A858", VA = "0x99A858")]
		protected void SetDefaultSpeed()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x99A77C", Offset = "0x99A77C", VA = "0x99A77C")]
		protected void UnoccupyCurrentTree()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x99AB98", Offset = "0x99AB98", VA = "0x99AB98")]
		protected bool IsWorkReachable(Vector3 workPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x99AC74", Offset = "0x99AC74", VA = "0x99AC74")]
		protected CardWorkerControl()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class CookControl : NPCCharacter, ITaskable
	{
		[Serializable]
		[Token(Token = "0x2000439")]
		public struct Task : IEquatable<Task>
		{
			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform TaskDestination;

			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TaskID;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject LeftHandProp;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject RightHandProp;

			[Token(Token = "0x6001971")]
			[Address(RVA = "0x7663B0", Offset = "0x7663B0", VA = "0x7663B0", Slot = "4")]
			public bool Equals(Task other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CFA")]
		private const int ChopsTrim = 8;

		[Token(Token = "0x4000CFB")]
		private const float DefaultChopIteractionWait = 0.2f;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterIsWorking;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly int m_parameterActionType;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int m_parameterAtAttention;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private readonly int m_stateOutsideIdle;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB23C", Offset = "0x6EB23C")]
		[SerializeField]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Task m_potTask;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Task m_cuttingBoardTask;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Task m_dishesTask;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MathUtils.MinMax m_taskTimerRange;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_isLyingdown;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_isGirlCooking;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<Task> m_taskList;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Task m_currentTask;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_elapsedTime;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_currentTaskDuration;

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x99AD9C", Offset = "0x99AD9C", VA = "0x99AD9C", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x99AE50", Offset = "0x99AE50", VA = "0x99AE50")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x99AFBC", Offset = "0x99AFBC", VA = "0x99AFBC", Slot = "11")]
		public void SetIdle(bool isIdle)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x99AFC0", Offset = "0x99AFC0", VA = "0x99AFC0", Slot = "12")]
		public void GoToTask(Transform location, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x99B00C", Offset = "0x99B00C", VA = "0x99B00C", Slot = "13")]
		public void StartTask(int taskID)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x99B1F8", Offset = "0x99B1F8", VA = "0x99B1F8", Slot = "14")]
		public void FinishTask()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x99B370", Offset = "0x99B370", VA = "0x99B370", Slot = "15")]
		public void AbortTask()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x99AED4", Offset = "0x99AED4", VA = "0x99AED4")]
		public void PerformTask()
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x99B420", Offset = "0x99B420", VA = "0x99B420")]
		public void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x99B428", Offset = "0x99B428", VA = "0x99B428")]
		public void UpdateTaskList()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x99B44C", Offset = "0x99B44C", VA = "0x99B44C")]
		public void RevertTaskList()
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x99B454", Offset = "0x99B454", VA = "0x99B454")]
		public void StopAllTasks()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x99B460", Offset = "0x99B460", VA = "0x99B460", Slot = "10")]
		protected override void SetNPCActive(bool active)
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x99B374", Offset = "0x99B374", VA = "0x99B374")]
		private Task GetRandomTask()
		{
			return default(Task);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x99B648", Offset = "0x99B648", VA = "0x99B648")]
		public void SetStateToLyingDown()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x99B6E8", Offset = "0x99B6E8", VA = "0x99B6E8")]
		public void SetStateToAttention(bool atAttention)
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x99B748", Offset = "0x99B748", VA = "0x99B748")]
		public CookControl()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class KeepGuardControl : NPCCharacter
	{
		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_paremeterGuardPose;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x99B82C", Offset = "0x99B82C", VA = "0x99B82C", Slot = "7")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x99B830", Offset = "0x99B830", VA = "0x99B830", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x99B834", Offset = "0x99B834", VA = "0x99B834", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x99B844", Offset = "0x99B844", VA = "0x99B844", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x99B848", Offset = "0x99B848", VA = "0x99B848")]
		public void EnterGuardPose()
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0x99B8A0", Offset = "0x99B8A0", VA = "0x99B8A0")]
		public void ExitGuardPose()
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0x99B91C", Offset = "0x99B91C", VA = "0x99B91C")]
		public KeepGuardControl()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class MadHatterControl : NPCCharacter
	{
		[Token(Token = "0x60011CB")]
		[Address(RVA = "0x99B978", Offset = "0x99B978", VA = "0x99B978")]
		public MadHatterControl()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class PatchesControl : NPCCharacter
	{
		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int m_patchesIndexDefinition;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVariable m_patchesIndexGlobalVariable;

		[Token(Token = "0x4000D0E")]
		private const int PatchesUndefinedIndex = -1;

		[Token(Token = "0x4000D0F")]
		private const int PatchesDefaultChoiceIndex = 0;

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0x99B97C", Offset = "0x99B97C", VA = "0x99B97C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0x99BA24", Offset = "0x99BA24", VA = "0x99BA24", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0x99BA28", Offset = "0x99BA28", VA = "0x99BA28")]
		public PatchesControl()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class QueenControl : NPCCharacter
	{
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x99BA2C", Offset = "0x99BA2C", VA = "0x99BA2C")]
		public QueenControl()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class WhiteRabbitControl : NPCCharacter
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x99BA30", Offset = "0x99BA30", VA = "0x99BA30")]
		public WhiteRabbitControl()
		{
		}
	}
}
namespace Cortopia.Scripts.Audio
{
	[Token(Token = "0x2000266")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixerSnapshot[] m_audioMixerSnapshots;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixerGroup[] m_audioMixerGroups;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<SoundEffectPlayer> m_freeSoundEffectPlayers;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB318", Offset = "0x6EB318")]
		[SerializeField]
		private SoundEffect m_defaultGrabAudio;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SoundEffectPlayer> m_activeSoundEffectPlayers;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<AudioPlayOrderType> m_unSupportedPlayOrders;

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x98DD10", Offset = "0x98DD10", VA = "0x98DD10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0x98DD78", Offset = "0x98DD78", VA = "0x98DD78")]
		private void Start()
		{
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0x98DDF0", Offset = "0x98DDF0", VA = "0x98DDF0")]
		public void TransitionToSnapshot(AudioMixerSnapshotType audioMixerSnapshotType, float timeToSnapshot)
		{
		}

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0x98DE68", Offset = "0x98DE68", VA = "0x98DE68")]
		public SoundEffectPlayer PlaySoundEffectForTarget(SoundEffect soundEffect, Vector3 position, AudioMixerGroupType mixerGroupType)
		{
			return null;
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0x98E240", Offset = "0x98E240", VA = "0x98E240")]
		public SoundEffectPlayer PlaySoundEffectForTarget(SoundEffect soundEffect, Transform target, AudioMixerGroupType mixerGroupType)
		{
			return null;
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x98E3FC", Offset = "0x98E3FC", VA = "0x98E3FC")]
		public SoundEffectPlayer PlaySoundEffectForTarget(SoundEffect soundEffect, Transform target)
		{
			return null;
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x98E404", Offset = "0x98E404", VA = "0x98E404")]
		public void PlayDefaultGrabSound(Transform target)
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x98E13C", Offset = "0x98E13C", VA = "0x98E13C")]
		private void TryPlaySoundEffect(SoundEffectPlayer soundEffectPlayer, SoundEffect soundEffect, Transform target, AudioMixerGroup audioMixerGroup)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x98E00C", Offset = "0x98E00C", VA = "0x98E00C")]
		private bool GetFreeSoundEffectPlayer(out SoundEffectPlayer freeSoundEffectPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x98DF90", Offset = "0x98DF90", VA = "0x98DF90")]
		private bool IsValidPlayOrder(AudioPlayOrderType playOrder)
		{
			return default(bool);
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x98E634", Offset = "0x98E634", VA = "0x98E634")]
		private void OnSoundEffectComplete(SoundEffectPlayer soundEffectPlayer)
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x98E6E0", Offset = "0x98E6E0", VA = "0x98E6E0")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public enum AudioMixerGroupType
	{
		[Token(Token = "0x4000D17")]
		SoundEffects,
		[Token(Token = "0x4000D18")]
		Music,
		[Token(Token = "0x4000D19")]
		UI,
		[Token(Token = "0x4000D1A")]
		VO
	}
	[Token(Token = "0x2000268")]
	public enum AudioMixerSnapshotType
	{
		[Token(Token = "0x4000D1C")]
		Default,
		[Token(Token = "0x4000D1D")]
		Dialogue
	}
	[Token(Token = "0x2000269")]
	public enum AudioPlayOrderType
	{
		[Token(Token = "0x4000D1F")]
		OneShot,
		[Token(Token = "0x4000D20")]
		Sequential,
		[Token(Token = "0x4000D21")]
		RandomOneShot,
		[Token(Token = "0x4000D22")]
		RandomLoop,
		[Token(Token = "0x4000D23")]
		RandomSequential,
		[Token(Token = "0x4000D24")]
		Loop
	}
	[Token(Token = "0x200026A")]
	public enum VOPlayOrderType
	{
		[Token(Token = "0x4000D26")]
		RandomOneShot,
		[Token(Token = "0x4000D27")]
		RandomLoop
	}
	[Token(Token = "0x200026B")]
	public class AudioSnapshotTransitioner : MonoBehaviour
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixerSnapshot m_targetSnapshot;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_transitionTime;

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x98E830", Offset = "0x98E830", VA = "0x98E830")]
		public void TransitionToSnapshot()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x98E870", Offset = "0x98E870", VA = "0x98E870")]
		public AudioSnapshotTransitioner()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class CharacterSfxHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SoundEffectPlayer m_locomotionSfxPlayer;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundEffectPlayer m_footStepSfxPlayer;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isBlocked;

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x98E880", Offset = "0x98E880", VA = "0x98E880")]
		public void SetSoundEffectBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x98E88C", Offset = "0x98E88C", VA = "0x98E88C")]
		public void PlayFootStep()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x98E8C0", Offset = "0x98E8C0", VA = "0x98E8C0")]
		public void PlaySoundEffect(SoundEffect soundEffect)
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x98EA4C", Offset = "0x98EA4C", VA = "0x98EA4C")]
		public void StopSoundEffects()
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x98EA78", Offset = "0x98EA78", VA = "0x98EA78")]
		public CharacterSfxHandler()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class MusicPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip[] m_musicClips;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EB3B4", Offset = "0x6EB3B4")]
		private float m_fadeOutTime;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EB400", Offset = "0x6EB400")]
		private float m_fadeInTime;

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x98EA80", Offset = "0x98EA80", VA = "0x98EA80")]
		public void StopAllMusic(float fadeTime)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x98EB08", Offset = "0x98EB08", VA = "0x98EB08")]
		public void PlayStinger()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x98EBBC", Offset = "0x98EBBC", VA = "0x98EBBC")]
		public void SwitchMusic()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x98ECF8", Offset = "0x98ECF8", VA = "0x98ECF8")]
		public MusicPlayer()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public class RoomSoundHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_narratorSubtitleAnchor;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB45C", Offset = "0x6EB45C")]
		[SerializeField]
		private bool m_fadeOutPrevious;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip m_musicClip;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_fadeOutTime;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_fadeInTime;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB4D8", Offset = "0x6EB4D8")]
		[SerializeField]
		private AudioSource m_ambience;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_enableAmbienceOnLevelLoad;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool m_disableAmbienceOnLeaveRoom;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB544", Offset = "0x6EB544")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EB544", Offset = "0x6EB544")]
		[SerializeField]
		private List<AudioSource> m_audioSources;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SoundEffectPlayer[] m_loopingSoundEffectPlayers;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<AudioSource> m_loopingAudioSources;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_defaultAmbienceVolume;

		[Token(Token = "0x4000D3C")]
		private const float AmbienceFadeTime = 0.5f;

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x98ED60", Offset = "0x98ED60", VA = "0x98ED60")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x98ED70", Offset = "0x98ED70", VA = "0x98ED70")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x98F18C", Offset = "0x98F18C", VA = "0x98F18C")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x98F358", Offset = "0x98F358", VA = "0x98F358")]
		private void EnableRoomSfx()
		{
		}

		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x98F414", Offset = "0x98F414", VA = "0x98F414")]
		private void DisableRoomSfx()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0x98F4D4", Offset = "0x98F4D4", VA = "0x98F4D4")]
		private void TrySetAmbienceActive(bool active)
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0x98ED94", Offset = "0x98ED94", VA = "0x98ED94")]
		private void LoadAudioData()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x98F040", Offset = "0x98F040", VA = "0x98F040")]
		private void SetupAmbience()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0x98F6C8", Offset = "0x98F6C8", VA = "0x98F6C8")]
		private void SetLoopingAudioSourcesActive(bool active)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0x98F97C", Offset = "0x98F97C", VA = "0x98F97C")]
		public RoomSoundHandler()
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x98FA14", Offset = "0x98FA14", VA = "0x98FA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3378", Offset = "0x6F3378")]
		private void <TrySetAmbienceActive>b__18_0()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E226C", Offset = "0x6E226C")]
	public class SoundEffect : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200043A")]
		public struct AudioClipWait
		{
			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Wait;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip AudioClip;
		}

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB5C4", Offset = "0x6EB5C4")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB5C4", Offset = "0x6EB5C4")]
		private float m_pitchMin;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB62C", Offset = "0x6EB62C")]
		private float m_pitchMax;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB670", Offset = "0x6EB670")]
		[SerializeField]
		private bool m_overrideVolume;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB6BC", Offset = "0x6EB6BC")]
		private float m_volume;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x6EB700", Offset = "0x6EB700")]
		[SerializeField]
		private MathUtils.MinMax m_waitTime;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioPlayOrderType m_playOrder;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_playIterations;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<AudioClipWait> m_audioSequence;

		[Token(Token = "0x17000182")]
		public AudioPlayOrderType PlayOrder
		{
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x98DF88", Offset = "0x98DF88", VA = "0x98DF88")]
			get
			{
				return default(AudioPlayOrderType);
			}
		}

		[Token(Token = "0x17000183")]
		public IReadOnlyList<AudioClipWait> AudioSequence
		{
			[Token(Token = "0x60011F4")]
			[Address(RVA = "0x98FA44", Offset = "0x98FA44", VA = "0x98FA44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public bool HasOverrideVolume
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0x98FA4C", Offset = "0x98FA4C", VA = "0x98FA4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x98FA54", Offset = "0x98FA54", VA = "0x98FA54")]
		public void LoadAudioClipData()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x98FB84", Offset = "0x98FB84", VA = "0x98FB84")]
		public AudioClipWait GetFirstSequence()
		{
			return default(AudioClipWait);
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x98FBE8", Offset = "0x98FBE8", VA = "0x98FBE8")]
		public AudioClipWait GetRandomSequence()
		{
			return default(AudioClipWait);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x98FC5C", Offset = "0x98FC5C", VA = "0x98FC5C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x98FC68", Offset = "0x98FC68", VA = "0x98FC68")]
		public float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x98FC70", Offset = "0x98FC70", VA = "0x98FC70")]
		public float GetRandomWaitTime()
		{
			return default(float);
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x98FC7C", Offset = "0x98FC7C", VA = "0x98FC7C")]
		public void SetPlayIterations(int iterations)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x98FC84", Offset = "0x98FC84", VA = "0x98FC84")]
		public int GetPlayIterations()
		{
			return default(int);
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x98FC8C", Offset = "0x98FC8C", VA = "0x98FC8C")]
		public SoundEffect()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class SoundEffectPlayer : MonoBehaviour
	{
		[Token(Token = "0x200043B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E307C", Offset = "0x6E307C")]
		private sealed class <PlayOneShot>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float wait;

			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip audioClip;

			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float pitch;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool hasOverrideVolume;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float volume;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001975")]
				[Address(RVA = "0x990A84", Offset = "0x990A84", VA = "0x990A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001977")]
				[Address(RVA = "0x990AF4", Offset = "0x990AF4", VA = "0x990AF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001972")]
			[Address(RVA = "0x9906DC", Offset = "0x9906DC", VA = "0x9906DC")]
			[DebuggerHidden]
			public <PlayOneShot>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001973")]
			[Address(RVA = "0x9908F4", Offset = "0x9908F4", VA = "0x9908F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001974")]
			[Address(RVA = "0x9908F8", Offset = "0x9908F8", VA = "0x9908F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001976")]
			[Address(RVA = "0x990A8C", Offset = "0x990A8C", VA = "0x990A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E308C", Offset = "0x6E308C")]
		private sealed class <PlaySequence>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEffect clipContainer;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SoundEffect.AudioClipWait <clip>5__3;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600197B")]
				[Address(RVA = "0x991298", Offset = "0x991298", VA = "0x991298", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600197D")]
				[Address(RVA = "0x991308", Offset = "0x991308", VA = "0x991308", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001978")]
			[Address(RVA = "0x990708", Offset = "0x990708", VA = "0x990708")]
			[DebuggerHidden]
			public <PlaySequence>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001979")]
			[Address(RVA = "0x990FB0", Offset = "0x990FB0", VA = "0x990FB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600197A")]
			[Address(RVA = "0x990FB4", Offset = "0x990FB4", VA = "0x990FB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600197C")]
			[Address(RVA = "0x9912A0", Offset = "0x9912A0", VA = "0x9912A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E309C", Offset = "0x6E309C")]
		private sealed class <PlayRandomLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEffect clipContainer;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001981")]
				[Address(RVA = "0x990CA8", Offset = "0x990CA8", VA = "0x990CA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001983")]
				[Address(RVA = "0x990D18", Offset = "0x990D18", VA = "0x990D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600197E")]
			[Address(RVA = "0x990734", Offset = "0x990734", VA = "0x990734")]
			[DebuggerHidden]
			public <PlayRandomLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600197F")]
			[Address(RVA = "0x990AFC", Offset = "0x990AFC", VA = "0x990AFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001980")]
			[Address(RVA = "0x990B00", Offset = "0x990B00", VA = "0x990B00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001982")]
			[Address(RVA = "0x990CB0", Offset = "0x990CB0", VA = "0x990CB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200043E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E30AC", Offset = "0x6E30AC")]
		private sealed class <PlayRandomSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEffect clipContainer;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001987")]
				[Address(RVA = "0x990F38", Offset = "0x990F38", VA = "0x990F38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001989")]
				[Address(RVA = "0x990FA8", Offset = "0x990FA8", VA = "0x990FA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001984")]
			[Address(RVA = "0x990760", Offset = "0x990760", VA = "0x990760")]
			[DebuggerHidden]
			public <PlayRandomSequence>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001985")]
			[Address(RVA = "0x990D20", Offset = "0x990D20", VA = "0x990D20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001986")]
			[Address(RVA = "0x990D24", Offset = "0x990D24", VA = "0x990D24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001988")]
			[Address(RVA = "0x990F40", Offset = "0x990F40", VA = "0x990F40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_playOnStart;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_target;

		[Token(Token = "0x14000051")]
		private event Action<SoundEffectPlayer> OnPlayCompleted
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0x98FD14", Offset = "0x98FD14", VA = "0x98FD14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3388", Offset = "0x6F3388")]
			add
			{
			}
			[Token(Token = "0x6001200")]
			[Address(RVA = "0x98FE00", Offset = "0x98FE00", VA = "0x98FE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3398", Offset = "0x6F3398")]
			remove
			{
			}
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x98FEEC", Offset = "0x98FEEC", VA = "0x98FEEC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x98FEF4", Offset = "0x98FEF4", VA = "0x98FEF4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x98FFA4", Offset = "0x98FFA4", VA = "0x98FFA4")]
		private void FollowTarget(Transform target)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x98FFAC", Offset = "0x98FFAC", VA = "0x98FFAC")]
		public void AssignAudioSource(AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x98E41C", Offset = "0x98E41C", VA = "0x98E41C")]
		public void AssignSoundEffect(SoundEffect soundEffect)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x98E424", Offset = "0x98E424", VA = "0x98E424")]
		public void SetAudioMixerGroup(AudioMixerGroup audioMixerGroup)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x98E9A0", Offset = "0x98E9A0", VA = "0x98E9A0")]
		public void StopSoundEffect()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x98FFB4", Offset = "0x98FFB4", VA = "0x98FFB4")]
		public void PlaySoundEffectOnManager()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x990058", Offset = "0x990058", VA = "0x990058")]
		public void TryPlaySoundEffect()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x98E45C", Offset = "0x98E45C", VA = "0x98E45C")]
		public void TryPlaySoundEffect(Action<SoundEffectPlayer> onPlayCompleted, [Optional] Transform followTarget)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x990064", Offset = "0x990064", VA = "0x990064")]
		private void PlaySoundEffect()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x990338", Offset = "0x990338", VA = "0x990338")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F33A8", Offset = "0x6F33A8")]
		private IEnumerator PlayOneShot(AudioClip audioClip, float pitch, float wait, bool hasOverrideVolume, float volume)
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x990514", Offset = "0x990514", VA = "0x990514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F340C", Offset = "0x6F340C")]
		private IEnumerator PlaySequence(SoundEffect clipContainer)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x9905AC", Offset = "0x9905AC", VA = "0x9905AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3470", Offset = "0x6F3470")]
		private IEnumerator PlayRandomLoop(SoundEffect clipContainer)
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x990644", Offset = "0x990644", VA = "0x990644")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F34D4", Offset = "0x6F34D4")]
		private IEnumerator PlayRandomSequence(SoundEffect clipContainer)
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x99078C", Offset = "0x99078C", VA = "0x99078C")]
		private void TryFollowTarget()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x990440", Offset = "0x990440", VA = "0x990440")]
		private void Play(AudioClip clip, float pitch, bool overrideVolume, float volume = 1f)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x990880", Offset = "0x990880", VA = "0x990880")]
		private void RaiseEvent()
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x9908EC", Offset = "0x9908EC", VA = "0x9908EC")]
		public SoundEffectPlayer()
		{
		}
	}
}
namespace Cortopia.Scripts.Audio.VO
{
	[Token(Token = "0x2000271")]
	[Flags]
	public enum ExpressionType
	{
		[Token(Token = "0x4000D4B")]
		Default = 1,
		[Token(Token = "0x4000D4C")]
		Happy = 2,
		[Token(Token = "0x4000D4D")]
		Angry = 4,
		[Token(Token = "0x4000D4E")]
		Sad = 8,
		[Token(Token = "0x4000D4F")]
		Scared = 0x10,
		[Token(Token = "0x4000D50")]
		Disgusted = 0x20,
		[Token(Token = "0x4000D51")]
		Shocked = 0x40
	}
	[Token(Token = "0x2000272")]
	public class AnimatedVoice : Voice
	{
		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB7A8", Offset = "0x6EB7A8")]
		[SerializeField]
		private CharacterAnimationHandler m_animationHandler;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB7F4", Offset = "0x6EB7F4")]
		[SerializeField]
		private int m_samplesize;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB840", Offset = "0x6EB840")]
		private int m_lowerFreqLimit;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB884", Offset = "0x6EB884")]
		private int m_upperFreqLimit;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_volumeCutOff;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EB8D8", Offset = "0x6EB8D8")]
		private float m_amplitude;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int m_jitterFilterSampleSize;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_currentVOExpressionStartTime;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private ExpressionType m_currentVOExpressionType;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ExpressionType m_currentExpression;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Queue<ExpressionData> m_queuedVOExpressions;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_isLipSyncActive;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float[] m_spectrum;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_audioSampleRate;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_arrayLowFreq;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int m_arrayHighFreq;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[] m_jitterFilterSamples;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_jitterFilterSum;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_mouthPosition;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_currentJitterSampleCount;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int m_currentJitterFilterSampleIndex;

		[Token(Token = "0x4000D67")]
		private const float DefaultVOTimerValue = -1f;

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x991310", Offset = "0x991310", VA = "0x991310", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x9913C0", Offset = "0x9913C0", VA = "0x9913C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x9918FC", Offset = "0x9918FC", VA = "0x9918FC", Slot = "6")]
		public override void StopTalking()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x9919E4", Offset = "0x9919E4", VA = "0x9919E4")]
		public void TryPlayAnimation(AnimationData animationData)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x991A90", Offset = "0x991A90", VA = "0x991A90")]
		public void LoadVOExpressions(ExpressionData[] expressionData)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x991B94", Offset = "0x991B94", VA = "0x991B94")]
		public void EnableLipSync(AudioClip clip)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x991980", Offset = "0x991980", VA = "0x991980")]
		public void DisableLipSync()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x991C08", Offset = "0x991C08", VA = "0x991C08", Slot = "8")]
		protected override void Speak(AudioClip clip)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x991450", Offset = "0x991450", VA = "0x991450")]
		private float BandVolume(float lowFrequencyCutoff, float highFrequencyCutoff)
		{
			return default(float);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x991600", Offset = "0x991600", VA = "0x991600")]
		private float MovingAverage(float sample)
		{
			return default(float);
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x991704", Offset = "0x991704", VA = "0x991704")]
		private void VOExpressionQueueHandler()
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x991B88", Offset = "0x991B88", VA = "0x991B88")]
		private void SetCurrentVOExpressionValues(ExpressionData expressionData)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x991C38", Offset = "0x991C38", VA = "0x991C38")]
		public AnimatedVoice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000273")]
	public struct ExpressionData
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExpressionType Expression;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float StartTime;
	}
	[Token(Token = "0x2000274")]
	public class FourHalfSewerVoice : Voice
	{
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x991D60", Offset = "0x991D60", VA = "0x991D60")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x991DE0", Offset = "0x991DE0", VA = "0x991DE0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x991EA4", Offset = "0x991EA4", VA = "0x991EA4")]
		public FourHalfSewerVoice()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public class Narrator : Voice
	{
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E30BC", Offset = "0x6E30BC")]
		private sealed class <HideSubtitlesAfterSpeaking>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Narrator <>4__this;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600198D")]
				[Address(RVA = "0x992110", Offset = "0x992110", VA = "0x992110", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600198F")]
				[Address(RVA = "0x992180", Offset = "0x992180", VA = "0x992180", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600198A")]
			[Address(RVA = "0x991F7C", Offset = "0x991F7C", VA = "0x991F7C")]
			[DebuggerHidden]
			public <HideSubtitlesAfterSpeaking>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600198B")]
			[Address(RVA = "0x992010", Offset = "0x992010", VA = "0x992010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600198C")]
			[Address(RVA = "0x992014", Offset = "0x992014", VA = "0x992014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600198E")]
			[Address(RVA = "0x992118", Offset = "0x992118", VA = "0x992118", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x991F08", Offset = "0x991F08", VA = "0x991F08", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3538", Offset = "0x6F3538")]
		protected override IEnumerator HideSubtitlesAfterSpeaking()
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x991FA8", Offset = "0x991FA8", VA = "0x991FA8", Slot = "9")]
		protected override void UpdateSubtitleRotation()
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x991FAC", Offset = "0x991FAC", VA = "0x991FAC")]
		public Narrator()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class PlayableCharacterVoice : AnimatedVoice
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_defaultPosition;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly Vector3 sm_upsideDownPosition;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayableCharacter m_character;

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x992188", Offset = "0x992188", VA = "0x992188", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x992218", Offset = "0x992218", VA = "0x992218", Slot = "9")]
		protected override void UpdateSubtitleRotation()
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x99263C", Offset = "0x99263C", VA = "0x99263C")]
		public PlayableCharacterVoice()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class RandomVOPlayer : MonoBehaviour
	{
		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E30CC", Offset = "0x6E30CC")]
		private sealed class <PlayRandomLoop>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RandomVOPlayer <>4__this;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001993")]
				[Address(RVA = "0x992E34", Offset = "0x992E34", VA = "0x992E34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001995")]
				[Address(RVA = "0x992EA4", Offset = "0x992EA4", VA = "0x992EA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001990")]
			[Address(RVA = "0x992B1C", Offset = "0x992B1C", VA = "0x992B1C")]
			[DebuggerHidden]
			public <PlayRandomLoop>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001991")]
			[Address(RVA = "0x992BEC", Offset = "0x992BEC", VA = "0x992BEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001992")]
			[Address(RVA = "0x992BF0", Offset = "0x992BF0", VA = "0x992BF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001994")]
			[Address(RVA = "0x992E3C", Offset = "0x992E3C", VA = "0x992E3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VOPlayOrderType m_playOrder;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Voice m_voice;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_initialWaitTime;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private MathUtils.MinMax m_randomDelayBetweenVO;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<VoiceLine> m_voiceLines;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IList<VoiceLine> m_linesCopy;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_playIndex;

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x9926E0", Offset = "0x9926E0", VA = "0x9926E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x9926E8", Offset = "0x9926E8", VA = "0x9926E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x9927A4", Offset = "0x9927A4", VA = "0x9927A4")]
		public void Stop(bool resetVoice)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x9927F8", Offset = "0x9927F8", VA = "0x9927F8")]
		public void Play()
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0x992AA8", Offset = "0x992AA8", VA = "0x992AA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F359C", Offset = "0x6F359C")]
		private IEnumerator PlayRandomLoop()
		{
			return null;
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x992878", Offset = "0x992878", VA = "0x992878")]
		private VoiceLine GetRandomLine()
		{
			return null;
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x9926EC", Offset = "0x9926EC", VA = "0x9926EC")]
		private void ShuffleLines()
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x992B48", Offset = "0x992B48", VA = "0x992B48")]
		public RandomVOPlayer()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E22EC", Offset = "0x6E22EC")]
	public class Voice : MonoBehaviour
	{
		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E30DC", Offset = "0x6E30DC")]
		private sealed class <SpeakLines>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IList<CharacterVoiceLine> lines;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Voice <>4__this;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001999")]
				[Address(RVA = "0x993F2C", Offset = "0x993F2C", VA = "0x993F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600199B")]
				[Address(RVA = "0x993F9C", Offset = "0x993F9C", VA = "0x993F9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001996")]
			[Address(RVA = "0x993568", Offset = "0x993568", VA = "0x993568")]
			[DebuggerHidden]
			public <SpeakLines>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001997")]
			[Address(RVA = "0x993CF8", Offset = "0x993CF8", VA = "0x993CF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001998")]
			[Address(RVA = "0x993CFC", Offset = "0x993CFC", VA = "0x993CFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600199A")]
			[Address(RVA = "0x993F34", Offset = "0x993F34", VA = "0x993F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E30EC", Offset = "0x6E30EC")]
		private sealed class <SpeakLine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Voice <>4__this;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VoiceLine line;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600199F")]
				[Address(RVA = "0x993C80", Offset = "0x993C80", VA = "0x993C80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A1")]
				[Address(RVA = "0x993CF0", Offset = "0x993CF0", VA = "0x993CF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600199C")]
			[Address(RVA = "0x993594", Offset = "0x993594", VA = "0x993594")]
			[DebuggerHidden]
			public <SpeakLine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600199D")]
			[Address(RVA = "0x993B14", Offset = "0x993B14", VA = "0x993B14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600199E")]
			[Address(RVA = "0x993B18", Offset = "0x993B18", VA = "0x993B18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x993C88", Offset = "0x993C88", VA = "0x993C88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E30FC", Offset = "0x6E30FC")]
		private sealed class <HideSubtitlesAfterSpeaking>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Voice <>4__this;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019A5")]
				[Address(RVA = "0x993A9C", Offset = "0x993A9C", VA = "0x993A9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019A7")]
				[Address(RVA = "0x993B0C", Offset = "0x993B0C", VA = "0x993B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x993634", Offset = "0x993634", VA = "0x993634")]
			[DebuggerHidden]
			public <HideSubtitlesAfterSpeaking>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x9939E0", Offset = "0x9939E0", VA = "0x9939E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x9939E4", Offset = "0x9939E4", VA = "0x9939E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x993AA4", Offset = "0x993AA4", VA = "0x993AA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterData m_characterData;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected AudioSource m_audioSource;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EB99C", Offset = "0x6EB99C")]
		[SerializeField]
		private bool m_overridePortrait;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite[] m_overridePortraits;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntVariable m_portraitSelectionIndex;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBA08", Offset = "0x6EBA08")]
		[SerializeField]
		private bool m_enableUI;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_canvasTransform;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Localize m_subtitleLocalize;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image m_subtitleImage;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_startSpatialBlend;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_subtitleDirection;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_speakCoroutine;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_rotationAddon;

		[Token(Token = "0x17000185")]
		private bool AreSubtitlesEnabled
		{
			[Token(Token = "0x6001233")]
			[Address(RVA = "0x992EAC", Offset = "0x992EAC", VA = "0x992EAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000186")]
		public CharacterData CharacterData
		{
			[Token(Token = "0x6001234")]
			[Address(RVA = "0x992F44", Offset = "0x992F44", VA = "0x992F44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000187")]
		public bool IsSpeaking
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0x992080", Offset = "0x992080", VA = "0x992080")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000188")]
		public Sprite Portrait
		{
			[Token(Token = "0x6001236")]
			[Address(RVA = "0x992F4C", Offset = "0x992F4C", VA = "0x992F4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0x991380", Offset = "0x991380", VA = "0x991380", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0x991E78", Offset = "0x991E78", VA = "0x991E78", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0x993030", Offset = "0x993030", VA = "0x993030")]
		public void TryHideSubtitles(bool forceHide)
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0x99208C", Offset = "0x99208C", VA = "0x99208C")]
		protected void DisableSubtitles()
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0x99192C", Offset = "0x99192C", VA = "0x99192C", Slot = "6")]
		public virtual void StopTalking()
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0x993158", Offset = "0x993158", VA = "0x993158")]
		public void SetSpatialBlend(float value)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x993198", Offset = "0x993198", VA = "0x993198")]
		public void ResetSpatialBlend()
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x993124", Offset = "0x993124", VA = "0x993124")]
		public void TryCancelSpeakCoroutine()
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0x9931D8", Offset = "0x9931D8", VA = "0x9931D8")]
		public void TrySpeak(AudioClip clip)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0x993298", Offset = "0x993298", VA = "0x993298")]
		public void TrySpeak(AudioClip clip, string subtitles)
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0x9929D0", Offset = "0x9929D0", VA = "0x9929D0")]
		public void TrySpeak(VoiceLine data, float delay)
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0x9933DC", Offset = "0x9933DC", VA = "0x9933DC")]
		public void TrySpeak(IList<CharacterVoiceLine> lines)
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x9934D0", Offset = "0x9934D0", VA = "0x9934D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3600", Offset = "0x6F3600")]
		private IEnumerator SpeakLines(IList<CharacterVoiceLine> lines)
		{
			return null;
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x992D7C", Offset = "0x992D7C", VA = "0x992D7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3664", Offset = "0x6F3664")]
		public IEnumerator SpeakLine(VoiceLine line, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0x9935C0", Offset = "0x9935C0", VA = "0x9935C0", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F36C8", Offset = "0x6F36C8")]
		protected virtual IEnumerator HideSubtitlesAfterSpeaking()
		{
			return null;
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x991C34", Offset = "0x991C34", VA = "0x991C34", Slot = "8")]
		protected virtual void Speak(AudioClip clip)
		{
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0x993660", Offset = "0x993660", VA = "0x993660")]
		private void PlayAudioClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x992400", Offset = "0x992400", VA = "0x992400", Slot = "9")]
		protected virtual void UpdateSubtitleRotation()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x99377C", Offset = "0x99377C", VA = "0x99377C")]
		private void ShowSubtitles(VoiceLine line)
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x993360", Offset = "0x993360", VA = "0x993360")]
		private void EnableSubtitles(string subtitle)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x991CF0", Offset = "0x991CF0", VA = "0x991CF0")]
		public Voice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000279")]
	public class VoiceLine
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip Clip;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite SubtitleImage;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Subtitles;

		[Token(Token = "0x17000189")]
		public string Subtitle
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x99387C", Offset = "0x99387C", VA = "0x99387C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x993FA4", Offset = "0x993FA4", VA = "0x993FA4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F372C", Offset = "0x6F372C")]
		public void OnAudioClipChanged()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x991D58", Offset = "0x991D58", VA = "0x991D58")]
		public VoiceLine()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027A")]
	public class CharacterVoiceLine : VoiceLine
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterData Character;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Delay;

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x991D50", Offset = "0x991D50", VA = "0x991D50")]
		public CharacterVoiceLine()
		{
		}
	}
	[Token(Token = "0x200027B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E2350", Offset = "0x6E2350")]
	public class VoiceLineCollection : ScriptableObject
	{
		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterVoiceLine[] VoiceLines;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDictionary<CharacterData, IList<CharacterVoiceLine>> m_characterLines;

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x993FA8", Offset = "0x993FA8", VA = "0x993FA8")]
		public bool CanGetCharacterLines(CharacterData characterData, out IList<CharacterVoiceLine> lines)
		{
			return default(bool);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x994458", Offset = "0x994458", VA = "0x994458")]
		public CharacterVoiceLine GetRandomVoiceLine()
		{
			return null;
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0x9944CC", Offset = "0x9944CC", VA = "0x9944CC")]
		public void Play()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0x9945C4", Offset = "0x9945C4", VA = "0x9945C4")]
		public VoiceLineCollection()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions
{
	[Token(Token = "0x200027C")]
	public class ClothTrigger : RoomBehaviour
	{
		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TriggerEnterType m_triggerType;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_resetClothConfig;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ClothConfig m_clothConfig;

		[Token(Token = "0x6001255")]
		[Address(RVA = "0x8DB0A4", Offset = "0x8DB0A4", VA = "0x8DB0A4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x8DB0A8", Offset = "0x8DB0A8", VA = "0x8DB0A8")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x8DB368", Offset = "0x8DB368", VA = "0x8DB368")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x8DB274", Offset = "0x8DB274", VA = "0x8DB274")]
		public void TriggerCloth(ClothController clothController)
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x8DB528", Offset = "0x8DB528", VA = "0x8DB528")]
		public ClothTrigger()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class BabyRabbitInteractable : PointerInteractable, IInteractable
	{
		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBAB4", Offset = "0x6EBAB4")]
		[SerializeField]
		private BabyRabbitControl m_babyRabbitControl;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_pokeDirection;

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x8DACEC", Offset = "0x8DACEC", VA = "0x8DACEC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x8DAE14", Offset = "0x8DAE14", VA = "0x8DAE14", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x8DAECC", Offset = "0x8DAECC", VA = "0x8DAECC", Slot = "8")]
		public override void OnEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0x8DB008", Offset = "0x8DB008", VA = "0x8DB008", Slot = "9")]
		public override void OnExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0x8DADBC", Offset = "0x8DADBC", VA = "0x8DADBC")]
		private void PokeRabbit(Vector3 pokeDirection)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x8DB00C", Offset = "0x8DB00C", VA = "0x8DB00C")]
		public BabyRabbitInteractable()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public abstract class CharacterInteractable<TEvent, TParam> : RoomBehaviour, ICharacterInteractable, IHighlightableInteractable, IInteractable where TEvent : UnityEvent<TParam>
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform m_highlightPoint;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EBB10", Offset = "0x6EBB10")]
		private bool m_isMovable;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TEvent m_onInteract;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<Collider> m_colliders;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ISet<Character> m_presentCharacters;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EBB7C", Offset = "0x6EBB7C")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x1700018A")]
		public Transform HighlightPoint
		{
			[Token(Token = "0x6001260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public virtual string LocalizedTerm
		{
			[Token(Token = "0x6001261")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public bool IsMovable
		{
			[Token(Token = "0x6001262")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018D")]
		public bool IsNew
		{
			[Token(Token = "0x6001263")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3764", Offset = "0x6F3764")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3774", Offset = "0x6F3774")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001265")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001266")]
		public abstract void Interact();

		[Token(Token = "0x6001267")]
		public virtual void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6001268")]
		public bool IsCharacterPresentAndActive(Character character)
		{
			return default(bool);
		}

		[Token(Token = "0x6001269")]
		public void OnCharacterEnter(Character characterControl)
		{
		}

		[Token(Token = "0x600126A")]
		public void OnCharacterExit(Character characterControl)
		{
		}

		[Token(Token = "0x600126B")]
		protected virtual void EnableInteractable()
		{
		}

		[Token(Token = "0x600126C")]
		protected virtual void DisableInteractable()
		{
		}

		[Token(Token = "0x600126D")]
		protected CharacterInteractable()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E23C0", Offset = "0x6E23C0")]
	public class Door : InteractableObject
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PlayableCharacterEvent m_onDoorOpenInteract;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBB9C", Offset = "0x6EBB9C")]
		[SerializeField]
		private CharacterType m_characterTarget;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EBBE8", Offset = "0x6EBBE8")]
		[SerializeField]
		private VoiceLineCollection m_interactionFailedResponse;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TriggerEnterType m_triggerEnterType;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private PlayableCharacterEvent m_onTransitionTriggered;

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x8DB538", Offset = "0x8DB538", VA = "0x8DB538")]
		private void Awake()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x8DB5A0", Offset = "0x8DB5A0", VA = "0x8DB5A0", Slot = "19")]
		public override void Interact(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x8DB540", Offset = "0x8DB540", VA = "0x8DB540")]
		public void SetDoorOpened(bool isOpen)
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x8DB804", Offset = "0x8DB804", VA = "0x8DB804")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x8DBA34", Offset = "0x8DBA34", VA = "0x8DBA34")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x8DB9C4", Offset = "0x8DB9C4", VA = "0x8DB9C4")]
		private void TriggerTransition(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x8DB728", Offset = "0x8DB728", VA = "0x8DB728")]
		private void TryPlayInteractionFailed(CharacterData character, Voice voice)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x8DBBF4", Offset = "0x8DBBF4", VA = "0x8DBBF4")]
		public Door()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class Elevator : RoomBehaviour
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBC54", Offset = "0x6EBC54")]
		[SerializeField]
		private ElevatorDestination[] m_elevatorDestinations;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBCA0", Offset = "0x6EBCA0")]
		[SerializeField]
		private Vector3 m_platformSize;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_elevatorPlatform;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBD0C", Offset = "0x6EBD0C")]
		[SerializeField]
		private AnimationCurve m_accelerationCurve;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EBD58", Offset = "0x6EBD58")]
		private float m_autoPilotThreshold;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_nextBaseLocation;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_currentBaseLocation;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_currentProgress;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lerpDirection;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_autoPilotDirection;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_currentSpeed;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_isAtDestination;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_charactersLocked;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LayerMask m_layerMask;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IList<PlayableCharacter> m_charactersOnElevator;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_SampleColliders;

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x8DBD08", Offset = "0x8DBD08", VA = "0x8DBD08", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x8DC180", Offset = "0x8DC180", VA = "0x8DC180")]
		private void Update()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x8DC8C8", Offset = "0x8DC8C8", VA = "0x8DC8C8")]
		public void SetElevatorSpeed(float speed)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0x8DC210", Offset = "0x8DC210", VA = "0x8DC210")]
		private bool HasValidTargetLocation(int baseLocation, float direction)
		{
			return default(bool);
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0x8DD0C8", Offset = "0x8DD0C8", VA = "0x8DD0C8")]
		private void LocationReached(int targetLocation)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0x8DC2AC", Offset = "0x8DC2AC", VA = "0x8DC2AC")]
		private void MovePlatform(float speed)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0x8DC530", Offset = "0x8DC530", VA = "0x8DC530")]
		private void AutoFinishMovePlatform()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0x8DC0CC", Offset = "0x8DC0CC", VA = "0x8DC0CC")]
		private void ActivateNavObstacleExclusivly(int elevatorDestination)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0x8DD01C", Offset = "0x8DD01C", VA = "0x8DD01C")]
		private void ActivateAllNavObstacles()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0x8DC8D0", Offset = "0x8DC8D0", VA = "0x8DC8D0")]
		private void AttachCharactersToElevator()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x8DC56C", Offset = "0x8DC56C", VA = "0x8DC56C")]
		private void DetachCharactersToElevator()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x8DD0DC", Offset = "0x8DD0DC", VA = "0x8DD0DC")]
		public Elevator()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class EventTrigger : RoomBehaviour
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TriggerEnterType m_triggerEnterType;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EBDA8", Offset = "0x6EBDA8")]
		private float m_directionThreshold;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayableCharacterEvent m_onTriggered;

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x8DD224", Offset = "0x8DD224", VA = "0x8DD224", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x8DD228", Offset = "0x8DD228", VA = "0x8DD228")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x8DD494", Offset = "0x8DD494", VA = "0x8DD494")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x8DD3EC", Offset = "0x8DD3EC", VA = "0x8DD3EC")]
		private void TriggerEvent(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0x8DD658", Offset = "0x8DD658", VA = "0x8DD658")]
		public EventTrigger()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class Firefly : MonoBehaviour
	{
		[Token(Token = "0x2000444")]
		private enum EmitterType
		{
			[Token(Token = "0x4001467")]
			Base,
			[Token(Token = "0x4001468")]
			SparkDefault,
			[Token(Token = "0x4001469")]
			Bling,
			[Token(Token = "0x400146A")]
			SparkAlternate,
			[Token(Token = "0x400146B")]
			Rings
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E310C", Offset = "0x6E310C")]
		private sealed class <DisableAfterStopEmitting>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Firefly <>4__this;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019AB")]
				[Address(RVA = "0x8DE40C", Offset = "0x8DE40C", VA = "0x8DE40C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019AD")]
				[Address(RVA = "0x8DE47C", Offset = "0x8DE47C", VA = "0x8DE47C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x8DE25C", Offset = "0x8DE25C", VA = "0x8DE25C")]
			[DebuggerHidden]
			public <DisableAfterStopEmitting>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x8DE2E8", Offset = "0x8DE2E8", VA = "0x8DE2E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x8DE2EC", Offset = "0x8DE2EC", VA = "0x8DE2EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x8DE414", Offset = "0x8DE414", VA = "0x8DE414", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandHint m_handHint;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBE08", Offset = "0x6EBE08")]
		[SerializeField]
		private Animator m_effectAnimator;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_interactFx;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] m_emitters;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_updatePosition;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isDisabling;

		[Token(Token = "0x4000DB2")]
		private const float MoveSpeed = 4f;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EBE74", Offset = "0x6EBE74")]
		private IHighlightableInteractable <Interactable>k__BackingField;

		[Token(Token = "0x1700018E")]
		public IHighlightableInteractable Interactable
		{
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x8DD6C8", Offset = "0x8DD6C8", VA = "0x8DD6C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3784", Offset = "0x6F3784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x8DD6D0", Offset = "0x8DD6D0", VA = "0x8DD6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3794", Offset = "0x6F3794")]
			private set
			{
			}
		}

		[Token(Token = "0x1700018F")]
		public bool IsAvailable
		{
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x8DD6D8", Offset = "0x8DD6D8", VA = "0x8DD6D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x8DD6F8", Offset = "0x8DD6F8", VA = "0x8DD6F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x8DD874", Offset = "0x8DD874", VA = "0x8DD874")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x8DD8B0", Offset = "0x8DD8B0", VA = "0x8DD8B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x8DD948", Offset = "0x8DD948", VA = "0x8DD948")]
		private void Update()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x8DDB1C", Offset = "0x8DDB1C", VA = "0x8DDB1C")]
		public void Interact()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x8DDE54", Offset = "0x8DDE54", VA = "0x8DDE54")]
		public void EnableFirefly(IHighlightableInteractable interactable)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x8DE180", Offset = "0x8DE180", VA = "0x8DE180")]
		public void DisableFireflyEmitters()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x8DD8E8", Offset = "0x8DD8E8", VA = "0x8DD8E8")]
		public void DisableFirefly()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x8DD958", Offset = "0x8DD958", VA = "0x8DD958")]
		private void FollowInteractable()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x8DDD68", Offset = "0x8DDD68", VA = "0x8DDD68")]
		private void PlayInteractFx()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x8DD7C4", Offset = "0x8DD7C4", VA = "0x8DD7C4")]
		private void SetAnimatorActive(bool active)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x8DD724", Offset = "0x8DD724", VA = "0x8DD724")]
		private void SetEmittersActive(bool active)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x8DE1E8", Offset = "0x8DE1E8", VA = "0x8DE1E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F37A4", Offset = "0x6F37A4")]
		private IEnumerator DisableAfterStopEmitting()
		{
			return null;
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x8DDC14", Offset = "0x8DDC14", VA = "0x8DDC14")]
		private void SetAlternateEmittersActive(bool isNew)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x8DE288", Offset = "0x8DE288", VA = "0x8DE288")]
		public Firefly()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class FireflyPointerInteractable : PointerInteractable, IHighlightableInteractable, IInteractable, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBEBC", Offset = "0x6EBEBC")]
		[SerializeField]
		private bool m_skipInteractEffect;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool m_toggleHandHintWithInteractableState;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_customHintTime;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_highlightPoint;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_isMovable;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InteractableSaveData m_saveData;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EBF48", Offset = "0x6EBF48")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x17000190")]
		public Transform HighlightPoint
		{
			[Token(Token = "0x600129A")]
			[Address(RVA = "0x8DE484", Offset = "0x8DE484", VA = "0x8DE484", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public bool IsMovable
		{
			[Token(Token = "0x600129B")]
			[Address(RVA = "0x8DE514", Offset = "0x8DE514", VA = "0x8DE514", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public bool IsNew
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x8DE51C", Offset = "0x8DE51C", VA = "0x8DE51C", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3808", Offset = "0x6F3808")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600129D")]
			[Address(RVA = "0x8DE524", Offset = "0x8DE524", VA = "0x8DE524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3818", Offset = "0x6F3818")]
			private set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public string Guid
		{
			[Token(Token = "0x600129E")]
			[Address(RVA = "0x8DE530", Offset = "0x8DE530", VA = "0x8DE530", Slot = "15")]
			get
			{
				return null;
			}
			[Token(Token = "0x600129F")]
			[Address(RVA = "0x8DE538", Offset = "0x8DE538", VA = "0x8DE538", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x8DE540", Offset = "0x8DE540", VA = "0x8DE540", Slot = "17")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x8DE67C", Offset = "0x8DE67C", VA = "0x8DE67C", Slot = "18")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x8DE858", Offset = "0x8DE858", VA = "0x8DE858", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x8DE978", Offset = "0x8DE978", VA = "0x8DE978")]
		public void MirrorInteraction(bool disableInteraction)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x8DEA20", Offset = "0x8DEA20", VA = "0x8DEA20", Slot = "7")]
		public override void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x8DEA40", Offset = "0x8DEA40", VA = "0x8DEA40")]
		public void SetHighlightActive(bool active)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x8DE7C0", Offset = "0x8DE7C0", VA = "0x8DE7C0")]
		private InteractableSaveData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x8DEB28", Offset = "0x8DEB28", VA = "0x8DEB28")]
		public FireflyPointerInteractable()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class HandHint : MonoBehaviour
	{
		[Token(Token = "0x4000DBC")]
		public const float DefaultHintTime = 5f;

		[Token(Token = "0x4000DBD")]
		public const float DisableHintTime = 2f;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_isEnabledParameter;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_handAppearSfx;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] m_vfxObject;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_hintTime;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_elapsedTime;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isTimerActive;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_isActive;

		[Token(Token = "0x17000194")]
		public bool IsActiveOrPendingActive
		{
			[Token(Token = "0x60012A8")]
			[Address(RVA = "0x8E166C", Offset = "0x8E166C", VA = "0x8E166C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x8E168C", Offset = "0x8E168C", VA = "0x8E168C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x8E16CC", Offset = "0x8E16CC", VA = "0x8E16CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x8DE16C", Offset = "0x8DE16C", VA = "0x8DE16C")]
		public void InitilizeHintTimer()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x8E1898", Offset = "0x8E1898", VA = "0x8E1898")]
		public void InitilizeHintTimer(float hintTime)
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x8DDD98", Offset = "0x8DDD98", VA = "0x8DDD98")]
		public void DisableHint(bool fadeOut)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x8E179C", Offset = "0x8E179C", VA = "0x8E179C")]
		private void EnableHint(bool fadeIn)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x8E18AC", Offset = "0x8E18AC", VA = "0x8E18AC")]
		public HandHint()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class HighlightTrigger : MonoBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractableObject m_interactable;

		[Token(Token = "0x17000195")]
		public string Guid
		{
			[Token(Token = "0x60012B0")]
			[Address(RVA = "0x8E1924", Offset = "0x8E1924", VA = "0x8E1924", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012B1")]
			[Address(RVA = "0x8E192C", Offset = "0x8E192C", VA = "0x8E192C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x8E1934", Offset = "0x8E1934", VA = "0x8E1934", Slot = "6")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x8E1AC4", Offset = "0x8E1AC4", VA = "0x8E1AC4", Slot = "7")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x8E1D18", Offset = "0x8E1D18", VA = "0x8E1D18")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x8E1DE4", Offset = "0x8E1DE4", VA = "0x8E1DE4")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x8E1EB0", Offset = "0x8E1EB0", VA = "0x8E1EB0")]
		public HighlightTrigger()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public interface IInteractable
	{
		[Token(Token = "0x60012B7")]
		void Interact();

		[Token(Token = "0x60012B8")]
		void SetInteractableActive(bool active);
	}
	[Token(Token = "0x2000287")]
	public interface IHighlightableInteractable : IInteractable
	{
		[Token(Token = "0x17000196")]
		Transform HighlightPoint
		{
			[Token(Token = "0x60012B9")]
			get;
		}

		[Token(Token = "0x17000197")]
		bool IsMovable
		{
			[Token(Token = "0x60012BA")]
			get;
		}

		[Token(Token = "0x17000198")]
		bool IsNew
		{
			[Token(Token = "0x60012BB")]
			get;
		}
	}
	[Token(Token = "0x2000288")]
	public interface ICharacterInteractable : IHighlightableInteractable, IInteractable
	{
		[Token(Token = "0x17000199")]
		string LocalizedTerm
		{
			[Token(Token = "0x60012BC")]
			get;
		}

		[Token(Token = "0x60012BD")]
		bool IsCharacterPresentAndActive(Character character);
	}
	[Token(Token = "0x2000289")]
	public class InteractableObject : CharacterInteractable<PlayableCharacterEvent, PlayableCharacter>, ICharacterInteractable, IHighlightableInteractable, IInteractable
	{
		[Token(Token = "0x2000446")]
		private enum CharacterPresenceStatus
		{
			[Token(Token = "0x4001470")]
			NoneAvailable,
			[Token(Token = "0x4001471")]
			OtherCharacterPresent,
			[Token(Token = "0x4001472")]
			CharacterCanInteract,
			[Token(Token = "0x4001473")]
			CharacterIsPresent
		}

		[Token(Token = "0x2000447")]
		private enum PickUpState
		{
			[Token(Token = "0x4001475")]
			None,
			[Token(Token = "0x4001476")]
			AutoPickup,
			[Token(Token = "0x4001477")]
			DisableMesh
		}

		[Token(Token = "0x4000DC8")]
		private const float MinAcceptableDistanceToInteractable = 0.015f;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EBFA8", Offset = "0x6EBFA8")]
		[SerializeField]
		private LocalizationTerm m_localizationTerm;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_interactPoint;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool m_shouldLookAtObjectOnInteract;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private InteractionType m_interactionType;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC024", Offset = "0x6EC024")]
		[SerializeField]
		private PickUpAnimationType m_pickUpHeight;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private PickUpState m_pickUpState;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InventoryItem m_pickupItem;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_pickupObject;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC0A0", Offset = "0x6EC0A0")]
		[SerializeField]
		protected UsableVariableType m_activeControlType;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		protected bool m_isInteractable;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected BoolVariable m_isInteractableGlobal;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_reverseCompareGlobalVariable;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool m_isListeningToGlobalBool;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool m_hasPendingInteraction;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InteractableSaveData m_saveData;

		[Token(Token = "0x1700019A")]
		public override string LocalizedTerm
		{
			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x8E1EB8", Offset = "0x8E1EB8", VA = "0x8E1EB8", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019B")]
		public Transform InteractPosition
		{
			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x8E1F64", Offset = "0x8E1F64", VA = "0x8E1F64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public InteractionType InteractionType
		{
			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x8E1FF4", Offset = "0x8E1FF4", VA = "0x8E1FF4")]
			get
			{
				return default(InteractionType);
			}
		}

		[Token(Token = "0x1700019D")]
		public bool ShouldLookAtObjectOnInteract
		{
			[Token(Token = "0x60012C1")]
			[Address(RVA = "0x8E1FFC", Offset = "0x8E1FFC", VA = "0x8E1FFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x8E2004", Offset = "0x8E2004", VA = "0x8E2004", Slot = "18")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x8E20B8", Offset = "0x8E20B8", VA = "0x8E20B8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x8E20BC", Offset = "0x8E20BC", VA = "0x8E20BC", Slot = "14")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x8E25AC", Offset = "0x8E25AC", VA = "0x8E25AC", Slot = "19")]
		public virtual void Interact(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x8E1A30", Offset = "0x8E1A30", VA = "0x8E1A30")]
		public InteractableSaveData Save()
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x8E1BE8", Offset = "0x8E1BE8", VA = "0x8E1BE8")]
		public void Load(InteractableSaveData saveData)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x8E27A4", Offset = "0x8E27A4", VA = "0x8E27A4", Slot = "16")]
		protected override void EnableInteractable()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x8E2800", Offset = "0x8E2800", VA = "0x8E2800", Slot = "17")]
		protected override void DisableInteractable()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x8E2718", Offset = "0x8E2718", VA = "0x8E2718")]
		protected void OnInteractableStateChanged()
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x8E28C4", Offset = "0x8E28C4", VA = "0x8E28C4")]
		private void OnPickupAnimationComplete()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x8E22E4", Offset = "0x8E22E4", VA = "0x8E22E4")]
		private CharacterPresenceStatus GetCharacterPresenceStatus(PlayableCharacter characterControl)
		{
			return default(CharacterPresenceStatus);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x8E2940", Offset = "0x8E2940", VA = "0x8E2940")]
		private bool HidePickupItem()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x8E2964", Offset = "0x8E2964", VA = "0x8E2964")]
		private bool HidePickupObject()
		{
			return default(bool);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x8DBC88", Offset = "0x8DBC88", VA = "0x8DBC88")]
		public InteractableObject()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x8E2988", Offset = "0x8E2988", VA = "0x8E2988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3828", Offset = "0x6F3828")]
		private void <Interact>b__28_0(bool success)
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class InteractableTrigger : InteractableObject
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC11C", Offset = "0x6EC11C")]
		[SerializeField]
		private TriggerEnterType m_triggerEnterType;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private PlayableCharacterEvent m_onCharacterTriggered;

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x8E2990", Offset = "0x8E2990", VA = "0x8E2990", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x8E2A68", Offset = "0x8E2A68", VA = "0x8E2A68")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x8E2CD0", Offset = "0x8E2CD0", VA = "0x8E2CD0")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x8E2B1C", Offset = "0x8E2B1C", VA = "0x8E2B1C")]
		private void TriggerInteractable(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x8E2D84", Offset = "0x8E2D84", VA = "0x8E2D84")]
		public InteractableTrigger()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public struct PendingHighlight
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EC178", Offset = "0x6EC178")]
		private ICharacterInteractable <Interactable>k__BackingField;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EC188", Offset = "0x6EC188")]
		private bool <IsPending>k__BackingField;

		[Token(Token = "0x1700019E")]
		public ICharacterInteractable Interactable
		{
			[Token(Token = "0x60012D7")]
			[Address(RVA = "0x764EB0", Offset = "0x764EB0", VA = "0x764EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3838", Offset = "0x6F3838")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012D8")]
			[Address(RVA = "0x764EB8", Offset = "0x764EB8", VA = "0x764EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3848", Offset = "0x6F3848")]
			private set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsPending
		{
			[Token(Token = "0x60012D9")]
			[Address(RVA = "0x764EC0", Offset = "0x764EC0", VA = "0x764EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3858", Offset = "0x6F3858")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60012DA")]
			[Address(RVA = "0x764EC8", Offset = "0x764EC8", VA = "0x764EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3868", Offset = "0x6F3868")]
			set
			{
			}
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x764EA0", Offset = "0x764EA0", VA = "0x764EA0")]
		public PendingHighlight(ICharacterInteractable interactable)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class InteractionHighlight : MonoBehaviour
	{
		[Token(Token = "0x2000448")]
		private enum UpdateState
		{
			[Token(Token = "0x4001479")]
			None,
			[Token(Token = "0x400147A")]
			Rotation,
			[Token(Token = "0x400147B")]
			RotationAndPosition
		}

		[Token(Token = "0x4000DDC")]
		private const float MoveSpeed = 0.5f;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color m_defaultTextColor;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Color m_isNewTextColor;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC1A8", Offset = "0x6EC1A8")]
		[SerializeField]
		private Image m_interactButtonImage;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_messageGroupObject;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI m_interactText;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Localize m_interactMessage;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UpdateState m_updateState;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_velocity;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_lookDirection;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tweener m_scaleTween;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PendingHighlight m_pendingHighlight;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EC224", Offset = "0x6EC224")]
		private IHighlightableInteractable <Interactable>k__BackingField;

		[Token(Token = "0x170001A0")]
		public bool IsActive
		{
			[Token(Token = "0x60012DB")]
			[Address(RVA = "0x8E2DF0", Offset = "0x8E2DF0", VA = "0x8E2DF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public IHighlightableInteractable Interactable
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x8E2E24", Offset = "0x8E2E24", VA = "0x8E2E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3878", Offset = "0x6F3878")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x8E2E2C", Offset = "0x8E2E2C", VA = "0x8E2E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3888", Offset = "0x6F3888")]
			private set
			{
			}
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x8E2E34", Offset = "0x8E2E34", VA = "0x8E2E34")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x8E2E54", Offset = "0x8E2E54", VA = "0x8E2E54")]
		private void Update()
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x8E36C4", Offset = "0x8E36C4", VA = "0x8E36C4")]
		public void SetInteractIcon(Sprite sprite)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x8E36FC", Offset = "0x8E36FC", VA = "0x8E36FC")]
		public void Interact()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x8E37B4", Offset = "0x8E37B4", VA = "0x8E37B4")]
		public void EnableHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x8E2EC4", Offset = "0x8E2EC4", VA = "0x8E2EC4")]
		public void ShowPendingHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x8E3A24", Offset = "0x8E3A24", VA = "0x8E3A24")]
		public void DisableHighlight()
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x8E37D0", Offset = "0x8E37D0", VA = "0x8E37D0")]
		private void ShowHighlight()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x8E3A30", Offset = "0x8E3A30", VA = "0x8E3A30")]
		private void HideHighlight()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x8E332C", Offset = "0x8E332C", VA = "0x8E332C")]
		private void LookAtPlayer()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x8E3510", Offset = "0x8E3510", VA = "0x8E3510")]
		private void FollowInteractable()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x8E392C", Offset = "0x8E392C", VA = "0x8E392C")]
		private bool TrySetTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x8E3BD4", Offset = "0x8E3BD4", VA = "0x8E3BD4")]
		public InteractionHighlight()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x8E3C20", Offset = "0x8E3C20", VA = "0x8E3C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3898", Offset = "0x6F3898")]
		private void <HideHighlight>b__28_0()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public enum InteractionType
	{
		[Token(Token = "0x4000DEB")]
		Default = 0,
		[Token(Token = "0x4000DEC")]
		Pickup = 1,
		[Token(Token = "0x4000DED")]
		Transition = 2,
		[Token(Token = "0x4000DEE")]
		Traversable = 4,
		[Token(Token = "0x4000DEF")]
		FirstPerson = 8,
		[Token(Token = "0x4000DF0")]
		Observation = 0x10
	}
	[Token(Token = "0x200028E")]
	public static class EnumExtensions
	{
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x8DD218", Offset = "0x8DD218", VA = "0x8DD218")]
		public static bool ContainsFlag(this InteractionType a, InteractionType b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x8DB268", Offset = "0x8DB268", VA = "0x8DB268")]
		public static bool ContainsFlag(this TriggerEnterType a, TriggerEnterType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200028F")]
	public class ManualFireFlyHint : SaveObject
	{
		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandHint m_handHint;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_customHintTime;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SavableBool m_hasPlayed;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isHintActive;

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x8EA70C", Offset = "0x8EA70C", VA = "0x8EA70C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x8EA73C", Offset = "0x8EA73C", VA = "0x8EA73C")]
		public void ActivateHint()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x8EA79C", Offset = "0x8EA79C", VA = "0x8EA79C")]
		public void DeactivateHint()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x8EA7FC", Offset = "0x8EA7FC", VA = "0x8EA7FC", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x8EA900", Offset = "0x8EA900", VA = "0x8EA900", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x8EA9F4", Offset = "0x8EA9F4", VA = "0x8EA9F4")]
		public ManualFireFlyHint()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class PointerEffectTrigger : RoomBehaviour
	{
		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_pointerEffectPrefab;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EC264", Offset = "0x6EC264")]
		private Collider m_referenceCollider;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC2B0", Offset = "0x6EC2B0")]
		[SerializeField]
		private bool m_hasInitEffect;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem m_initEffectPrefab;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_initEffectPoolCount;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC31C", Offset = "0x6EC31C")]
		[SerializeField]
		private SoundEffectPlayer m_enterSoundEffectPlayer;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SoundEffectPlayer m_exitSoundEffectPlayer;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource[] m_loopingAudioSources;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem[] m_pointerEffectPool;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystem[] m_effectPool;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDictionary<PlayerPointer, int> m_pointers;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isPointerPresent;

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x8EAA70", Offset = "0x8EAA70", VA = "0x8EAA70", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x8EAE08", Offset = "0x8EAE08", VA = "0x8EAE08")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x8EB3A4", Offset = "0x8EB3A4", VA = "0x8EB3A4")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x8EB750", Offset = "0x8EB750", VA = "0x8EB750")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x8EB49C", Offset = "0x8EB49C", VA = "0x8EB49C")]
		private void OnPointerEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x8EB848", Offset = "0x8EB848", VA = "0x8EB848")]
		private void OnPointerExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x8EBB2C", Offset = "0x8EBB2C", VA = "0x8EBB2C")]
		private void EnableParticles(int pointerIndex, Vector3 position)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x8EBC14", Offset = "0x8EBC14", VA = "0x8EBC14")]
		private void DisableParticles(int pointerIndex)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x8EBDB0", Offset = "0x8EBDB0", VA = "0x8EBDB0")]
		private void PlayInitEffect(Vector3 position)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x8EBF88", Offset = "0x8EBF88", VA = "0x8EBF88")]
		private ParticleSystem GetPoolEffect(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x8EB350", Offset = "0x8EB350", VA = "0x8EB350")]
		private ParticleSystem GetPointerEffect(int pointerIndex)
		{
			return null;
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x8EAB48", Offset = "0x8EAB48", VA = "0x8EAB48")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x8EBE80", Offset = "0x8EBE80", VA = "0x8EBE80")]
		private void TryPlayEnterSoundEffect(Vector3 position)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x8EBCA8", Offset = "0x8EBCA8", VA = "0x8EBCA8")]
		private void TryPlayExitSoundEffect(Vector3 position)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x8EC04C", Offset = "0x8EC04C", VA = "0x8EC04C")]
		public PointerEffectTrigger()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class PointerHighlightEnabler : MonoBehaviour
	{
		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FireflyPointerInteractable[] m_pointerInteractables;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_toggleInteractableState;

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x8EC054", Offset = "0x8EC054", VA = "0x8EC054")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x8EC164", Offset = "0x8EC164", VA = "0x8EC164")]
		public PointerHighlightEnabler()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class PointerInteractable : MonoBehaviour, IInteractable
	{
		[Token(Token = "0x2000449")]
		public enum PointerEnterType
		{
			[Token(Token = "0x400147D")]
			OnEnter,
			[Token(Token = "0x400147E")]
			OnExit
		}

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC398", Offset = "0x6EC398")]
		[SerializeField]
		private PointerEnterType m_pointerEnterType;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected bool m_isInteractable;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EC3F4", Offset = "0x6EC3F4")]
		private int m_requiredPokes;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC434", Offset = "0x6EC434")]
		[SerializeField]
		protected UnityEvent m_onInteract;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onPokeConditionMet;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC490", Offset = "0x6EC490")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EC490", Offset = "0x6EC490")]
		private HapticClip m_hapticClip;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC500", Offset = "0x6EC500")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EC500", Offset = "0x6EC500")]
		private SoundEffect m_pokeSoundEffect;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentPokes;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x170001A2")]
		public bool IsInteractable
		{
			[Token(Token = "0x6001305")]
			[Address(RVA = "0x8EC15C", Offset = "0x8EC15C", VA = "0x8EC15C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		public PointerEnterType EnterType
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x8ED0A4", Offset = "0x8ED0A4", VA = "0x8ED0A4")]
			get
			{
				return default(PointerEnterType);
			}
		}

		[Token(Token = "0x170001A4")]
		public HapticClip OverrideHapticClip
		{
			[Token(Token = "0x6001307")]
			[Address(RVA = "0x8ED0AC", Offset = "0x8ED0AC", VA = "0x8ED0AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x8DE8F8", Offset = "0x8DE8F8", VA = "0x8DE8F8", Slot = "6")]
		public virtual void Interact()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x8ED1D4", Offset = "0x8ED1D4", VA = "0x8ED1D4", Slot = "7")]
		public virtual void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0x8ED1F0", Offset = "0x8ED1F0", VA = "0x8ED1F0", Slot = "8")]
		public virtual void OnEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x8ED1FC", Offset = "0x8ED1FC", VA = "0x8ED1FC", Slot = "9")]
		public virtual void OnExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0x8ED208", Offset = "0x8ED208", VA = "0x8ED208", Slot = "10")]
		public virtual bool CanInteract(PointerEnterType enterType)
		{
			return default(bool);
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x8ED22C", Offset = "0x8ED22C", VA = "0x8ED22C", Slot = "11")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x8ED0B4", Offset = "0x8ED0B4", VA = "0x8ED0B4")]
		protected void TryPlayPokeSound()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x8ED230", Offset = "0x8ED230", VA = "0x8ED230")]
		protected void TryAbortPokeSound()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0x8DB010", Offset = "0x8DB010", VA = "0x8DB010")]
		public PointerInteractable()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class PointerInteractableHold : PointerInteractable, IInteractable
	{
		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_deactivateOnInteract;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HapticClip m_onInteractHapticClip;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_holdTime;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_elapsedTime;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isPointerPresent;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ISet<PlayerPointer> m_presentPointers;

		[Token(Token = "0x170001A5")]
		public float NormalizedTime
		{
			[Token(Token = "0x6001315")]
			[Address(RVA = "0x8ED4A0", Offset = "0x8ED4A0", VA = "0x8ED4A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000052")]
		public event Action OnPointerEnter
		{
			[Token(Token = "0x6001311")]
			[Address(RVA = "0x8EC320", Offset = "0x8EC320", VA = "0x8EC320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F38C8", Offset = "0x6F38C8")]
			add
			{
			}
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x8ED2C8", Offset = "0x8ED2C8", VA = "0x8ED2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F38D8", Offset = "0x6F38D8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Action OnPointerExit
		{
			[Token(Token = "0x6001313")]
			[Address(RVA = "0x8EC40C", Offset = "0x8EC40C", VA = "0x8EC40C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F38E8", Offset = "0x6F38E8")]
			add
			{
			}
			[Token(Token = "0x6001314")]
			[Address(RVA = "0x8ED3B4", Offset = "0x8ED3B4", VA = "0x8ED3B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F38F8", Offset = "0x6F38F8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x8ED4AC", Offset = "0x8ED4AC", VA = "0x8ED4AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x8ED91C", Offset = "0x8ED91C", VA = "0x8ED91C", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0x8ED94C", Offset = "0x8ED94C", VA = "0x8ED94C", Slot = "8")]
		public override void OnEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x8EDA48", Offset = "0x8EDA48", VA = "0x8EDA48", Slot = "9")]
		public override void OnExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x8ED4D4", Offset = "0x8ED4D4", VA = "0x8ED4D4")]
		private void IncreaseTimer()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x8ED88C", Offset = "0x8ED88C", VA = "0x8ED88C")]
		private void DecreaseTimer()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x8EDBEC", Offset = "0x8EDBEC", VA = "0x8EDBEC", Slot = "10")]
		public override bool CanInteract(PointerEnterType enterType)
		{
			return default(bool);
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x8EDBF4", Offset = "0x8EDBF4", VA = "0x8EDBF4", Slot = "11")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x8EDF84", Offset = "0x8EDF84", VA = "0x8EDF84")]
		public PointerInteractableHold()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class PointerInteractionHighlight : MonoBehaviour
	{
		[Token(Token = "0x4000E14")]
		private const float MoveSpeed = 0.25f;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandHint m_handHint;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_interactVfx;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_interactSfx;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_updatePosition;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_followTransform;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_velocity;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_lookDirection;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EC5F0", Offset = "0x6EC5F0")]
		private IHighlightableInteractable <Interactable>k__BackingField;

		[Token(Token = "0x170001A6")]
		public IHighlightableInteractable Interactable
		{
			[Token(Token = "0x600131F")]
			[Address(RVA = "0x8EE000", Offset = "0x8EE000", VA = "0x8EE000")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3908", Offset = "0x6F3908")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x8EE008", Offset = "0x8EE008", VA = "0x8EE008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3918", Offset = "0x6F3918")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001321")]
			[Address(RVA = "0x8EE010", Offset = "0x8EE010", VA = "0x8EE010")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x8EE060", Offset = "0x8EE060", VA = "0x8EE060")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x8EE068", Offset = "0x8EE068", VA = "0x8EE068")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x8EE0C4", Offset = "0x8EE0C4", VA = "0x8EE0C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x8EE3FC", Offset = "0x8EE3FC", VA = "0x8EE3FC")]
		public void Interact()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x8EE668", Offset = "0x8EE668", VA = "0x8EE668")]
		public void EnableHighlight(IHighlightableInteractable interactable, float hintTime)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x8EE48C", Offset = "0x8EE48C", VA = "0x8EE48C")]
		public void DisableHighlight(bool immediate)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x8EE9FC", Offset = "0x8EE9FC", VA = "0x8EE9FC")]
		private void EnableMovement(Transform followTransform)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x8EEA0C", Offset = "0x8EEA0C", VA = "0x8EEA0C")]
		private void DisableMovement()
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x8EE100", Offset = "0x8EE100", VA = "0x8EE100")]
		private void FollowInteractable()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x8EE240", Offset = "0x8EE240", VA = "0x8EE240")]
		private void UpdateHandRotation()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x8EEA18", Offset = "0x8EEA18", VA = "0x8EEA18")]
		public PointerInteractionHighlight()
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x8EEA20", Offset = "0x8EEA20", VA = "0x8EEA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3928", Offset = "0x6F3928")]
		private bool <DisableHighlight>b__19_0()
		{
			return default(bool);
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x8EEA60", Offset = "0x8EEA60", VA = "0x8EEA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3938", Offset = "0x6F3938")]
		private void <DisableHighlight>b__19_1()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E2434", Offset = "0x6E2434")]
	public class RockPile : PointerInteractable, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC600", Offset = "0x6EC600")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SavableBool m_savedInteractableState;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_rockCrumbleHash;

		[Token(Token = "0x170001A8")]
		public string Guid
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x8EF46C", Offset = "0x8EF46C", VA = "0x8EF46C", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x8EF474", Offset = "0x8EF474", VA = "0x8EF474", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x8EF47C", Offset = "0x8EF47C", VA = "0x8EF47C", Slot = "14")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x8EF5F0", Offset = "0x8EF5F0", VA = "0x8EF5F0", Slot = "15")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x8EF750", Offset = "0x8EF750", VA = "0x8EF750", Slot = "7")]
		public override void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x8EF588", Offset = "0x8EF588", VA = "0x8EF588")]
		private SavableBool GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x8EF76C", Offset = "0x8EF76C", VA = "0x8EF76C")]
		public RockPile()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public enum TriggerEnterType
	{
		[Token(Token = "0x4000E22")]
		OnEnter = 1,
		[Token(Token = "0x4000E23")]
		OnExit = 2,
		[Token(Token = "0x4000E24")]
		OnActive = 4,
		[Token(Token = "0x4000E25")]
		OnInactive = 8,
		[Token(Token = "0x4000E26")]
		BlockPassiveCharacters = 0x10,
		[Token(Token = "0x4000E27")]
		Directional = 0x20
	}
	[Token(Token = "0x2000297")]
	public class PointerHoldButton : MonoBehaviour
	{
		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_parameterIsSpawned;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int m_parameterChosenTrigger;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_parameterOpacity;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int m_disabledStateName;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int m_materialColorPropertyID;

		[Token(Token = "0x4000E2D")]
		private const float TextFadeDelay = 0.5f;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PointerInteractableHold m_pointerInteractable;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC6A4", Offset = "0x6EC6A4")]
		[SerializeField]
		private TextMenuItem[] m_textFaders;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC6F0", Offset = "0x6EC6F0")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshRenderer[] m_renderers;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x8EC16C", Offset = "0x8EC16C", VA = "0x8EC16C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x8EC4F8", Offset = "0x8EC4F8", VA = "0x8EC4F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x8EC63C", Offset = "0x8EC63C", VA = "0x8EC63C")]
		public void StartSpawn(float delayTime)
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x8EC924", Offset = "0x8EC924", VA = "0x8EC924")]
		public void StartDespawn(float delayTime)
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x8ECAC0", Offset = "0x8ECAC0", VA = "0x8ECAC0")]
		public void Disable()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x8ECB1C", Offset = "0x8ECB1C", VA = "0x8ECB1C")]
		public void Select()
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x8ECB88", Offset = "0x8ECB88", VA = "0x8ECB88")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x8ECB8C", Offset = "0x8ECB8C", VA = "0x8ECB8C")]
		public void EnableButton()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x8ECB94", Offset = "0x8ECB94", VA = "0x8ECB94")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x8ECBD0", Offset = "0x8ECBD0", VA = "0x8ECBD0")]
		private void EnableText()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x8ECC78", Offset = "0x8ECC78", VA = "0x8ECC78")]
		private void SetSpawnParameters()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x8ECD08", Offset = "0x8ECD08", VA = "0x8ECD08")]
		private void SetDespawnParameters()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x8ECD44", Offset = "0x8ECD44", VA = "0x8ECD44")]
		private void OnPointerExit()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x8ECDE0", Offset = "0x8ECDE0", VA = "0x8ECDE0")]
		private void OnPointerEnter()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x8ECE90", Offset = "0x8ECE90", VA = "0x8ECE90")]
		public PointerHoldButton()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x8ECF80", Offset = "0x8ECF80", VA = "0x8ECF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3948", Offset = "0x6F3948")]
		private IPromise <StartSpawn>b__15_0()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Interactions.Transitions
{
	[Token(Token = "0x2000298")]
	public class CaterpillarMirror : InteractableObject
	{
		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_materialProperty;

		[Token(Token = "0x4000E36")]
		private const float InvitationFadeTime = 0.25f;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC75C", Offset = "0x6EC75C")]
		[SerializeField]
		private IntVariable m_unlockedCompareIndex;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool m_autoLoadBiome;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[SerializeField]
		private bool m_autoCheckUnlockCondition;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private BiomeLoader m_biomeLoader;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Renderer m_mirrorRenderer;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform m_teleportPoint;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem m_unlockEffect;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SoundEffect m_unlockSoundEffect;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Condition m_unlockedCondition;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC828", Offset = "0x6EC828")]
		[SerializeField]
		private bool m_forceCharactersToBeTethered;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private CharacterReactor m_notTetheredReactor;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC884", Offset = "0x6EC884")]
		[SerializeField]
		private BoolVariable m_isFirstTimeTravel;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private VoiceLineCollection m_customFirstReaction;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private VoiceLineCollection m_lockedReaction;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private VoiceLineCollection m_unlockedReaction;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC900", Offset = "0x6EC900")]
		[SerializeField]
		private SoundEffect m_teleportOutSoundEffect;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private SoundEffect m_teleportInSoundEffect;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EC95C", Offset = "0x6EC95C")]
		[SerializeField]
		private bool m_showUI;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private BiomeType m_biomeType;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private CanvasGroup m_invitationInfoCanvasGroup;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private TextMeshProUGUI m_invitationCountText;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private IList<CharacterVoiceLine> m_filterList;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool m_isUnlocked;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int m_invitationCount;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Tweener m_invitationDisplayTween;

		[Token(Token = "0x170001A9")]
		private bool ShouldShowUI
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0x8EF7C8", Offset = "0x8EF7C8", VA = "0x8EF7C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public override string LocalizedTerm
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0x8EF7E8", Offset = "0x8EF7E8", VA = "0x8EF7E8", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x8EF84C", Offset = "0x8EF84C", VA = "0x8EF84C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x8EF9B4", Offset = "0x8EF9B4", VA = "0x8EF9B4", Slot = "18")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x8EFA64", Offset = "0x8EFA64", VA = "0x8EFA64")]
		private void Awake()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x8EFBC8", Offset = "0x8EFBC8", VA = "0x8EFBC8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x8EFBCC", Offset = "0x8EFBCC", VA = "0x8EFBCC", Slot = "19")]
		public override void Interact(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x8EF904", Offset = "0x8EF904", VA = "0x8EF904")]
		public void CheckConditionMet()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x8F0318", Offset = "0x8F0318", VA = "0x8F0318")]
		public void CheckConditionMet(bool playEffect)
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x8F050C", Offset = "0x8F050C", VA = "0x8F050C")]
		public void TeleportArrivals()
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x8F0068", Offset = "0x8F0068", VA = "0x8F0068")]
		private void PlayTeleportSoundEffect(SoundEffect soundEffect)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x8F0710", Offset = "0x8F0710", VA = "0x8F0710")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x8F0854", Offset = "0x8F0854", VA = "0x8F0854")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x8F01A0", Offset = "0x8F01A0", VA = "0x8F01A0")]
		private void LoadBiome(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x8F0438", Offset = "0x8F0438", VA = "0x8F0438")]
		private void SetMirrorMaterialProperty(bool isUnlocked)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x8F0938", Offset = "0x8F0938", VA = "0x8F0938")]
		private float GetMaterialPropertyValue(bool isUnlocked)
		{
			return default(float);
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x8EFDB4", Offset = "0x8EFDB4", VA = "0x8EFDB4")]
		private bool CanGetMirrorLockedReaction(PlayableCharacter character, out VoiceLine voiceLine)
		{
			return default(bool);
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x8F07F4", Offset = "0x8F07F4", VA = "0x8F07F4")]
		private void TryShowInvitationUI()
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x8F0148", Offset = "0x8F0148", VA = "0x8F0148")]
		private void TryHideInvitationUI()
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x8F0950", Offset = "0x8F0950", VA = "0x8F0950")]
		private void UpdateInvitationsFoundCount()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x8F0B54", Offset = "0x8F0B54", VA = "0x8F0B54")]
		public CaterpillarMirror()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class CaterpillarMirrorHandler : RoomBehaviour
	{
		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E311C", Offset = "0x6E311C")]
		private sealed class <UnlockMirrors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int previousIndex;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CaterpillarMirrorHandler <>4__this;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019B1")]
				[Address(RVA = "0x8F120C", Offset = "0x8F120C", VA = "0x8F120C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019B3")]
				[Address(RVA = "0x8F127C", Offset = "0x8F127C", VA = "0x8F127C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019AE")]
			[Address(RVA = "0x8F0FEC", Offset = "0x8F0FEC", VA = "0x8F0FEC")]
			[DebuggerHidden]
			public <UnlockMirrors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60019AF")]
			[Address(RVA = "0x8F1080", Offset = "0x8F1080", VA = "0x8F1080", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x8F1084", Offset = "0x8F1084", VA = "0x8F1084", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019B2")]
			[Address(RVA = "0x8F1214", Offset = "0x8F1214", VA = "0x8F1214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BiomeType m_biomeType;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IntVariable m_biomesUnlockedIndex;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_checkConditionOnInitialize;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_unlockDelay;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialScroll m_invitationsReminder;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CaterpillarMirror[] m_caterpillarMirrors;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SoundEffect m_unlockSoundEffect;

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x8F0BC4", Offset = "0x8F0BC4", VA = "0x8F0BC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x8F0BF4", Offset = "0x8F0BF4", VA = "0x8F0BF4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x8F0DC0", Offset = "0x8F0DC0", VA = "0x8F0DC0")]
		public void UnlockMirrorTravel()
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x8F0CAC", Offset = "0x8F0CAC", VA = "0x8F0CAC")]
		private void UpdateMirrorUnlockConditions()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x8F0F54", Offset = "0x8F0F54", VA = "0x8F0F54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3958", Offset = "0x6F3958")]
		private IEnumerator UnlockMirrors(int previousIndex)
		{
			return null;
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x8F0EF8", Offset = "0x8F0EF8", VA = "0x8F0EF8")]
		private void TryUpdateUnlockedIndex()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x8F1018", Offset = "0x8F1018", VA = "0x8F1018")]
		public CaterpillarMirrorHandler()
		{
		}
	}
	[Token(Token = "0x200029A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E2498", Offset = "0x6E2498")]
	public class TransitionData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200044B")]
		public struct DoorTimelineAsset
		{
			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CharacterType CharacterType;

			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TimelineAsset[] TimelineAssets;
		}

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DoorTimelineAsset> m_doorTimelineAssets;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDictionary<CharacterType, TimelineAsset[]> m_doorTimelinePairs;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x8F1284", Offset = "0x8F1284", VA = "0x8F1284")]
		public void LoadData()
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x8F148C", Offset = "0x8F148C", VA = "0x8F148C")]
		public TimelineAsset GetTimelineAsset(CharacterType characterType, int doorDirectionIndex)
		{
			return null;
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x8F15D0", Offset = "0x8F15D0", VA = "0x8F15D0")]
		public TransitionData()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions.PressurePlates
{
	[Token(Token = "0x200029B")]
	public class PressurePlate : RoomBehaviour
	{
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterType m_characterTarget;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PressurePlateEvent m_onTargetEnter;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PressurePlateEvent m_onTargetExit;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ISet<Collider> m_presentCollider;

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x8EEAA8", Offset = "0x8EEAA8", VA = "0x8EEAA8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x8EEAAC", Offset = "0x8EEAAC", VA = "0x8EEAAC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x8EED90", Offset = "0x8EED90", VA = "0x8EED90")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x8EEB98", Offset = "0x8EEB98", VA = "0x8EEB98")]
		private void TryTriggerPlate(Collider collider)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x8EEE7C", Offset = "0x8EEE7C", VA = "0x8EEE7C")]
		private void TryReleasePlate(Collider collider)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x8EF034", Offset = "0x8EF034", VA = "0x8EF034")]
		public PressurePlate()
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class PressurePlateConnector : RoomBehaviour
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ECA88", Offset = "0x6ECA88")]
		[SerializeField]
		private int m_triggerTarget;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onAllPlatesActivated;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<PressurePlate> m_activePlates;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x8EF0EC", Offset = "0x8EF0EC", VA = "0x8EF0EC", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x8EF0F0", Offset = "0x8EF0F0", VA = "0x8EF0F0")]
		public void AddPressure(PressurePlate pressurePlate)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x8EF330", Offset = "0x8EF330", VA = "0x8EF330")]
		public void RemovePressure(PressurePlate pressurePlate)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x8EF1D4", Offset = "0x8EF1D4", VA = "0x8EF1D4")]
		private void TriggerPressurePlateComplete()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x8EF3DC", Offset = "0x8EF3DC", VA = "0x8EF3DC")]
		public PressurePlateConnector()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions.Listeners
{
	[Token(Token = "0x200029D")]
	public class AnimationPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ECAE4", Offset = "0x6ECAE4")]
		private bool m_useCharacterAnimator;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_customAnimator;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationData m_animationData;

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x8E3C58", Offset = "0x8E3C58", VA = "0x8E3C58")]
		public void TriggerAnimator(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x8E3CD8", Offset = "0x8E3CD8", VA = "0x8E3CD8")]
		public void TriggerAnimator()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x8E3D7C", Offset = "0x8E3D7C", VA = "0x8E3D7C")]
		public AnimationPlayer()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class BiomeLoader : MonoBehaviour
	{
		[Token(Token = "0x200044C")]
		private enum CameraFocusType
		{
			[Token(Token = "0x4001487")]
			None,
			[Token(Token = "0x4001488")]
			ActiveCharacter,
			[Token(Token = "0x4001489")]
			CustomPoint
		}

		[Token(Token = "0x200044D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E312C", Offset = "0x6E312C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter character;

			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x8E4348", Offset = "0x8E4348", VA = "0x8E4348")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x8E4E08", Offset = "0x8E4E08", VA = "0x8E4E08")]
			internal bool <TryLoadBiome>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BiomeType m_biomeType;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.Object m_newRoom;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ECB70", Offset = "0x6ECB70")]
		private int m_blockerIndex;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_teleportPoint;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_saveGameAfterBiomeSwitch;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ECBDC", Offset = "0x6ECBDC")]
		[SerializeField]
		private CameraFocusType m_cameraFocusOnLoad;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_cameraFocusPoint;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ECC38", Offset = "0x6ECC38")]
		[SerializeField]
		private ScriptableEvent m_biomeLoadedEvent;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private RoomType m_newRoomType;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_cameraFocusPosition;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SavablePose m_destinationPoint;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_biomeLoadedEventToken;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x8E3D84", Offset = "0x8E3D84", VA = "0x8E3D84")]
		public void Load(BiomeType biomeType, RoomType roomType)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x8E3D90", Offset = "0x8E3D90", VA = "0x8E3D90")]
		public void LoadBiome()
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x8E40D8", Offset = "0x8E40D8", VA = "0x8E40D8")]
		public void TryLoadBiome(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x8E3F9C", Offset = "0x8E3F9C", VA = "0x8E3F9C")]
		private void SwitchBiome()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0x8E4534", Offset = "0x8E4534", VA = "0x8E4534")]
		private void OnBiomeLoaded(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0x8E3E78", Offset = "0x8E3E78", VA = "0x8E3E78")]
		private void TryTeleportToNewRoom()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x8E46BC", Offset = "0x8E46BC", VA = "0x8E46BC")]
		private void TeleportCharacters()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x8E49C4", Offset = "0x8E49C4", VA = "0x8E49C4")]
		private void MoveToNewRoom(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x8E4BB0", Offset = "0x8E4BB0", VA = "0x8E4BB0")]
		private void FocusOnCharactersAndFadeIn()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x8E4B10", Offset = "0x8E4B10", VA = "0x8E4B10")]
		private void TryRaiseEvent()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x8E4498", Offset = "0x8E4498", VA = "0x8E4498")]
		private void SaveCameraFocusPosition()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x8E4350", Offset = "0x8E4350", VA = "0x8E4350")]
		private SavablePose GetTeleportTransform()
		{
			return null;
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x8E484C", Offset = "0x8E484C", VA = "0x8E484C")]
		private SavablePose GetRoomSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x8E4D30", Offset = "0x8E4D30", VA = "0x8E4D30")]
		public BiomeLoader()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x8E4D4C", Offset = "0x8E4D4C", VA = "0x8E4D4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F39BC", Offset = "0x6F39BC")]
		private void <OnBiomeLoaded>b__17_0()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0x8E4DDC", Offset = "0x8E4DDC", VA = "0x8E4DDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F39CC", Offset = "0x6F39CC")]
		private void <TryTeleportToNewRoom>b__18_0()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class CameraRedirector : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E313C", Offset = "0x6E313C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableCharacter character;

			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x8E5130", Offset = "0x8E5130", VA = "0x8E5130")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60019B7")]
			[Address(RVA = "0x8E59F8", Offset = "0x8E59F8", VA = "0x8E59F8")]
			internal void <FocusOnCharacter>b__0()
			{
			}
		}

		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E314C", Offset = "0x6E314C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform focusPoint;

			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x8E5744", Offset = "0x8E5744", VA = "0x8E5744")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x8E5A28", Offset = "0x8E5A28", VA = "0x8E5A28")]
			internal void <FocusOnPoint>b__0()
			{
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E315C", Offset = "0x6E315C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter character;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x8E58FC", Offset = "0x8E58FC", VA = "0x8E58FC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x8E5A94", Offset = "0x8E5A94", VA = "0x8E5A94")]
			internal void <LookAtCharacter>b__0()
			{
			}
		}

		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E316C", Offset = "0x6E316C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x8E5904", Offset = "0x8E5904", VA = "0x8E5904")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x8E5BC4", Offset = "0x8E5BC4", VA = "0x8E5BC4")]
			internal void <LookAtPosition>b__0()
			{
			}
		}

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterOrientationState m_characterOrientationOverride;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_moveDelay;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_useFade;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_cameraFadeTime;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ECCFC", Offset = "0x6ECCFC")]
		[SerializeField]
		private CortopiaEventType m_onRedirectEventType;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onRedirectUnityEvent;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_onRedirectEvent;

		[Token(Token = "0x6001384")]
		[Address(RVA = "0x8E4E5C", Offset = "0x8E4E5C", VA = "0x8E4E5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0x8E4E64", Offset = "0x8E4E64", VA = "0x8E4E64")]
		public void SetCameraHeightAdjustment(float heightAdjustment)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0x8E4F04", Offset = "0x8E4F04", VA = "0x8E4F04")]
		public void ResetCameraHeightAdjustment()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0x8E4F94", Offset = "0x8E4F94", VA = "0x8E4F94")]
		public void FocusOnCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0x8E52D8", Offset = "0x8E52D8", VA = "0x8E52D8")]
		public void FocusOnCharacter(PlayableCharacterData characterData)
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0x8E5380", Offset = "0x8E5380", VA = "0x8E5380")]
		public void FocusOnActiveCharacter()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0x8E5408", Offset = "0x8E5408", VA = "0x8E5408")]
		public void FocusOnCharacterIfActive(PlayableCharacterData characterData)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0x8E5594", Offset = "0x8E5594", VA = "0x8E5594")]
		public void FocusOnPoint(Transform focusPoint)
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0x8E5138", Offset = "0x8E5138", VA = "0x8E5138")]
		private void LookAtCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0x8E574C", Offset = "0x8E574C", VA = "0x8E574C")]
		private void LookAtPosition(Vector3 position)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0x8E590C", Offset = "0x8E590C", VA = "0x8E590C")]
		private void InvokeEvent()
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0x8E597C", Offset = "0x8E597C", VA = "0x8E597C")]
		public CameraRedirector()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class CameraZoomer : MonoBehaviour
	{
		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E317C", Offset = "0x6E317C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter characterControl;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraZoomer <>4__this;

			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x8E6174", Offset = "0x8E6174", VA = "0x8E6174")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x8E626C", Offset = "0x8E626C", VA = "0x8E626C")]
			internal void <ZoomIn>b__0()
			{
			}
		}

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_zoomInPoint;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ECD78", Offset = "0x6ECD78")]
		[SerializeField]
		private Transform m_companionTeleportPoint;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_isManualZoomedOutBlocked;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ECDD4", Offset = "0x6ECDD4")]
		[SerializeField]
		private bool m_playEventOnManualZoomOut;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onZoomOut;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isZoomedOut;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_firstPersonCameraEventToken;

		[Token(Token = "0x6001390")]
		[Address(RVA = "0x8E5CE8", Offset = "0x8E5CE8", VA = "0x8E5CE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0x8E5D94", Offset = "0x8E5D94", VA = "0x8E5D94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0x8E5E08", Offset = "0x8E5E08", VA = "0x8E5E08")]
		private void Update()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0x8E5FB0", Offset = "0x8E5FB0", VA = "0x8E5FB0")]
		public void ZoomIn(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0x8E617C", Offset = "0x8E617C", VA = "0x8E617C")]
		public void ZoomOut()
		{
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0x8E5EB4", Offset = "0x8E5EB4", VA = "0x8E5EB4")]
		public void ZoomOut(bool playEvent)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0x8E6184", Offset = "0x8E6184", VA = "0x8E6184")]
		private void OnFirstPersonCameraStateChanged(CameraEvents.FirstPersonCameraEvent eventData)
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0x8E61C0", Offset = "0x8E61C0", VA = "0x8E61C0")]
		public CameraZoomer()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0x8E623C", Offset = "0x8E623C", VA = "0x8E623C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F39DC", Offset = "0x6F39DC")]
		private void <ZoomOut>b__12_0()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class CharacterReactor : SaveObject
	{
		[Token(Token = "0x2000453")]
		public enum PlayState
		{
			[Token(Token = "0x4001496")]
			Multiple,
			[Token(Token = "0x4001497")]
			Once,
			[Token(Token = "0x4001498")]
			OnceDisable
		}

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayState m_playState;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ECE40", Offset = "0x6ECE40")]
		private bool m_forceStopOnReact;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ECE8C", Offset = "0x6ECE8C")]
		[SerializeField]
		protected bool m_useSingleLine;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected VoiceLineCollection m_dataCollection;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected PlayableCharacterData m_playableCharacterData;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float m_delay;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected VoiceLine m_voiceLine;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SavableBool m_hasPlayed;

		[Token(Token = "0x170001AB")]
		protected bool IsPlayBlocked
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x8E64C8", Offset = "0x8E64C8", VA = "0x8E64C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x8E64E4", Offset = "0x8E64E4", VA = "0x8E64E4", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x8E65F0", Offset = "0x8E65F0", VA = "0x8E65F0", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x8E674C", Offset = "0x8E674C", VA = "0x8E674C")]
		public void AbortVO(CharacterData character)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x8E67D0", Offset = "0x8E67D0", VA = "0x8E67D0")]
		public void TryPlayBanter()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x8E6A60", Offset = "0x8E6A60", VA = "0x8E6A60")]
		public void TrySpeak(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x8E69F0", Offset = "0x8E69F0", VA = "0x8E69F0")]
		public void SetPlayed()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x8E6DC0", Offset = "0x8E6DC0", VA = "0x8E6DC0")]
		public CharacterReactor()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class CharacterReactorInteractive : CharacterReactor
	{
		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E318C", Offset = "0x6E318C")]
		private sealed class <SpeakLine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterData characterData;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoiceLine voiceLine;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float delay;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CharacterReactorInteractive <>4__this;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019C3")]
				[Address(RVA = "0x8E72A8", Offset = "0x8E72A8", VA = "0x8E72A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019C5")]
				[Address(RVA = "0x8E7318", Offset = "0x8E7318", VA = "0x8E7318", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x8E70D0", Offset = "0x8E70D0", VA = "0x8E70D0")]
			[DebuggerHidden]
			public <SpeakLine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x8E7190", Offset = "0x8E7190", VA = "0x8E7190", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x8E7194", Offset = "0x8E7194", VA = "0x8E7194", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x8E72B0", Offset = "0x8E72B0", VA = "0x8E72B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onLinesCompleted;

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x8E6E2C", Offset = "0x8E6E2C", VA = "0x8E6E2C")]
		public void TryPlayBanterWithCallback()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x8E7004", Offset = "0x8E7004", VA = "0x8E7004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F39EC", Offset = "0x6F39EC")]
		private IEnumerator SpeakLine(CharacterData characterData, VoiceLine voiceLine, float delay)
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x8E70FC", Offset = "0x8E70FC", VA = "0x8E70FC")]
		public CharacterReactorInteractive()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x8E7160", Offset = "0x8E7160", VA = "0x8E7160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3A50", Offset = "0x6F3A50")]
		private void <TryPlayBanterWithCallback>b__1_0(bool success)
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class CharacterTetherHandler : MonoBehaviour
	{
		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_enableTethered;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_shouldTeleportCompanion;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_setCustomActiveCharacter;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterType m_activeCharacterType;

		[Token(Token = "0x170001AC")]
		private bool ShouldTeleportCompanion
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0x8E7320", Offset = "0x8E7320", VA = "0x8E7320")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x8E7340", Offset = "0x8E7340", VA = "0x8E7340")]
		public void ForceSetTetheredState(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x8E748C", Offset = "0x8E748C", VA = "0x8E748C")]
		public void SetTetheredState(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x8E7604", Offset = "0x8E7604", VA = "0x8E7604")]
		public void SetTetheredState()
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x8E76D0", Offset = "0x8E76D0", VA = "0x8E76D0")]
		public CharacterTetherHandler()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class CharacterTetherModifier : MonoBehaviour
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_resetFollow;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ECF78", Offset = "0x6ECF78")]
		private float m_followMaxDistance;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ECFBC", Offset = "0x6ECFBC")]
		private float m_followMinDistance;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly MathUtils.MinMax m_minMaxFollowDistance;

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x8E76E8", Offset = "0x8E76E8", VA = "0x8E76E8")]
		private CharacterTetherModifier()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x8E773C", Offset = "0x8E773C", VA = "0x8E773C")]
		public void ModifyTetheredValues(PlayableCharacter characterControl)
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class CompanionCatcherUpper : MonoBehaviour
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_teleportTransform;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_maxDistance;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshPath m_path;

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x8E780C", Offset = "0x8E780C", VA = "0x8E780C")]
		public void TryTeleport(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x8E7B80", Offset = "0x8E7B80", VA = "0x8E7B80")]
		public CompanionCatcherUpper()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class DestinationSetter : MonoBehaviour
	{
		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_destinationTransform;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x8E7B90", Offset = "0x8E7B90", VA = "0x8E7B90")]
		public void OverrideDestination()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x8E7C88", Offset = "0x8E7C88", VA = "0x8E7C88")]
		public void OverrideDestination(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x8E7D20", Offset = "0x8E7D20", VA = "0x8E7D20")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x8E7DA8", Offset = "0x8E7DA8", VA = "0x8E7DA8")]
		public void SetDestination(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x8E7EB0", Offset = "0x8E7EB0", VA = "0x8E7EB0")]
		public DestinationSetter()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class DialogueHandler : MonoBehaviour
	{
		[Token(Token = "0x2000455")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E319C", Offset = "0x6E319C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueHandler <>4__this;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableCharacter character;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x8E80C0", Offset = "0x8E80C0", VA = "0x8E80C0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x8E81F0", Offset = "0x8E81F0", VA = "0x8E81F0")]
			internal void <StartDialogue>b__0()
			{
			}

			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x8E85F8", Offset = "0x8E85F8", VA = "0x8E85F8")]
			internal void <StartDialogue>b__1()
			{
			}
		}

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_zoomInPoint;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_subtitleAnchorPoint;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ED060", Offset = "0x6ED060")]
		[SerializeField]
		private Transform m_companionTeleportPoint;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED0AC", Offset = "0x6ED0AC")]
		[SerializeField]
		private BehaviourSystem m_dialogue;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED0F8", Offset = "0x6ED0F8")]
		[SerializeField]
		private PlayableCharacterEvent m_onDialogueStart;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ED144", Offset = "0x6ED144")]
		private PlayableCharacterEvent m_onDialogueCompleted;

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x8E7EB8", Offset = "0x8E7EB8", VA = "0x8E7EB8")]
		public void StartDialogue(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x8E80C8", Offset = "0x8E80C8", VA = "0x8E80C8", Slot = "4")]
		protected virtual void OnDialogueCompleted(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x8E8168", Offset = "0x8E8168", VA = "0x8E8168")]
		public DialogueHandler()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class DominoBellRinger : MonoBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31AC", Offset = "0x6E31AC")]
		private sealed class <Ring>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DominoBellRinger <>4__this;

			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int bellValue;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019CC")]
				[Address(RVA = "0x8E8DE8", Offset = "0x8E8DE8", VA = "0x8E8DE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019CE")]
				[Address(RVA = "0x8E8E58", Offset = "0x8E8E58", VA = "0x8E8E58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x8E89F0", Offset = "0x8E89F0", VA = "0x8E89F0")]
			[DebuggerHidden]
			public <Ring>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x8E8B74", Offset = "0x8E8B74", VA = "0x8E8B74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x8E8B78", Offset = "0x8E8B78", VA = "0x8E8B78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x8E8DF0", Offset = "0x8E8DF0", VA = "0x8E8DF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_parameterRing;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_parameterBellHit;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ED1C8", Offset = "0x6ED1C8")]
		private int m_bellCount;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_isCoolDownEnabled;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool m_sendEventWhenPoked;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_meshRenderer;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_defaultMaterial;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material m_ringingMaterial;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SoundEffectPlayer m_sfx;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onCooldownComplete;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SavableBool m_isCoolingDown;

		[Token(Token = "0x170001AD")]
		public string Guid
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x8E8630", Offset = "0x8E8630", VA = "0x8E8630", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0x8E8638", Offset = "0x8E8638", VA = "0x8E8638", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x8E8640", Offset = "0x8E8640", VA = "0x8E8640")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x8E8648", Offset = "0x8E8648", VA = "0x8E8648", Slot = "6")]
		public void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x8E8730", Offset = "0x8E8730", VA = "0x8E8730", Slot = "7")]
		public void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0x8E88A4", Offset = "0x8E88A4", VA = "0x8E88A4")]
		public void SetEventActive(bool active)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x8E88B0", Offset = "0x8E88B0", VA = "0x8E88B0")]
		public void RingBell(int bellValue)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x8E8958", Offset = "0x8E8958", VA = "0x8E8958")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3A60", Offset = "0x6F3A60")]
		private IEnumerator Ring(int bellValue)
		{
			return null;
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x8E8850", Offset = "0x8E8850", VA = "0x8E8850")]
		private void CooldownCompleted()
		{
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0x8E8A1C", Offset = "0x8E8A1C", VA = "0x8E8A1C")]
		private void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x8E8A54", Offset = "0x8E8A54", VA = "0x8E8A54")]
		public DominoBellRinger()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class EventRaiser : MonoBehaviour
	{
		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableVariable m_variable;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScriptableEvent m_interactEvent;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x8E8E60", Offset = "0x8E8E60", VA = "0x8E8E60")]
		public void RaiseEvent()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x8E8E94", Offset = "0x8E8E94", VA = "0x8E8E94")]
		public EventRaiser()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class HatterDialogue : DialogueHandler
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED2A8", Offset = "0x6ED2A8")]
		[SerializeField]
		private IntVariable m_hatterResponseIndex;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BiomeLoader m_biomeLoader;

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x8E8E9C", Offset = "0x8E8E9C", VA = "0x8E8E9C", Slot = "4")]
		protected override void OnDialogueCompleted(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0x8E9004", Offset = "0x8E9004", VA = "0x8E9004")]
		private bool IsActiveCharacterPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0x8E911C", Offset = "0x8E911C", VA = "0x8E911C")]
		private void CompareDialogueChoice()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x8E9228", Offset = "0x8E9228", VA = "0x8E9228")]
		public HatterDialogue()
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x8E922C", Offset = "0x8E922C", VA = "0x8E922C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3AC4", Offset = "0x6F3AC4")]
		private void <CompareDialogueChoice>b__4_0()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class InteractionSplitter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000457")]
		public struct CharacterInteraction
		{
			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CharacterType CharacterTarget;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PlayableCharacterEvent OnInteract;
		}

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6ED304", Offset = "0x6ED304")]
		[SerializeField]
		private VoiceLineCollection m_interactionFailedResponse;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_treatFailedResponseAsBanter;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterInteraction[] m_characterInteractions;

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x8E9258", Offset = "0x8E9258", VA = "0x8E9258")]
		public void TryInteract()
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x8E936C", Offset = "0x8E936C", VA = "0x8E936C")]
		public void Interact(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x8E94FC", Offset = "0x8E94FC", VA = "0x8E94FC")]
		private void PlayInteractionFailedResponse(CharacterData character, Voice voice)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x8E9608", Offset = "0x8E9608", VA = "0x8E9608")]
		public InteractionSplitter()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class InvitationPickupReaction : MonoBehaviour
	{
		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VoiceLineCollection m_invitationPickupVO;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x8E9668", Offset = "0x8E9668", VA = "0x8E9668")]
		public void TrySpeak(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x8E9ACC", Offset = "0x8E9ACC", VA = "0x8E9ACC")]
		public InvitationPickupReaction()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class RoomBlockerDisabler : MonoBehaviour
	{
		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_disableAllBlockers;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_blockerIndex;

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x8E9AD4", Offset = "0x8E9AD4", VA = "0x8E9AD4")]
		public void DisableBlocker()
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x8E9B84", Offset = "0x8E9B84", VA = "0x8E9B84")]
		public RoomBlockerDisabler()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class RoomBlockerEnabler : MonoBehaviour
	{
		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_blockerIndex;

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x8E9B8C", Offset = "0x8E9B8C", VA = "0x8E9B8C")]
		public void EnableBlocker()
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x8E9C20", Offset = "0x8E9C20", VA = "0x8E9C20")]
		public RoomBlockerEnabler()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public class RoomLoader : MonoBehaviour
	{
		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x8E9C28", Offset = "0x8E9C28", VA = "0x8E9C28")]
		public void LoadRoom()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x8E9CAC", Offset = "0x8E9CAC", VA = "0x8E9CAC")]
		public RoomLoader()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class RoomTransitioner : MonoBehaviour
	{
		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_disableAllBlockers;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_blockerIndex;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_manuallySetRoomActive;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayableCharacterData[] m_playableCharacterData;

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x8E9CB4", Offset = "0x8E9CB4", VA = "0x8E9CB4")]
		public void SetRoomActive(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x8E9E24", Offset = "0x8E9E24", VA = "0x8E9E24")]
		public void SetRoomActiveCharacterData()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x8E9FDC", Offset = "0x8E9FDC", VA = "0x8E9FDC")]
		public RoomTransitioner()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public class StairsMirrorTransition : InteractableObject
	{
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31BC", Offset = "0x6E31BC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StairsMirrorTransition <>4__this;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableCharacter character;

			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x8EA328", Offset = "0x8EA328", VA = "0x8EA328")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x8EA3E8", Offset = "0x8EA3E8", VA = "0x8EA3E8")]
			internal void <Interact>b__0(bool success)
			{
			}

			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x8EA560", Offset = "0x8EA560", VA = "0x8EA560")]
			internal void <Interact>b__1()
			{
			}
		}

		[Token(Token = "0x4000EB9")]
		private const float SfxHandlerEnableWait = 0.25f;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED430", Offset = "0x6ED430")]
		[SerializeField]
		protected Transform m_destinationTransform;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ScriptableEvent m_onDestinationReachedEvent;

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x8EA03C", Offset = "0x8EA03C", VA = "0x8EA03C", Slot = "14")]
		public override void Interact()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x8EA1A0", Offset = "0x8EA1A0", VA = "0x8EA1A0", Slot = "19")]
		public override void Interact(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x8EA330", Offset = "0x8EA330", VA = "0x8EA330")]
		public StairsMirrorTransition()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x8EA334", Offset = "0x8EA334", VA = "0x8EA334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3AD4", Offset = "0x6F3AD4")]
		private void <Interact>b__3_0(bool success)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class ValueCounter : RoomBehaviour
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IntVariable m_value;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_allowNegativeValue;

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x8EA594", Offset = "0x8EA594", VA = "0x8EA594", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x8EA5C8", Offset = "0x8EA5C8", VA = "0x8EA5C8")]
		public void Add(int addOnValue)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x8EA634", Offset = "0x8EA634", VA = "0x8EA634")]
		public void Remove(int removeValue)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x8EA6FC", Offset = "0x8EA6FC", VA = "0x8EA6FC")]
		public ValueCounter()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions.Grabbables
{
	[Token(Token = "0x20002B3")]
	public class ButterflyHandle : RootHandle, IScriptableEventListener, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int m_parameterIdleSpeed;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int m_parameterSpawnTrigger;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int m_parameterIdleStateName;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED4AC", Offset = "0x6ED4AC")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED4F8", Offset = "0x6ED4F8")]
		[SerializeField]
		private float m_spawnDelay;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ScriptableEvent m_scriptableEvent;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasTriggered;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_idleFloat;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SavableAnimationFloat m_animationSavableData;

		[Token(Token = "0x170001AE")]
		public string Guid
		{
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0x8DEB40", Offset = "0x8DEB40", VA = "0x8DEB40", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0x8DEB48", Offset = "0x8DEB48", VA = "0x8DEB48", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x8DEB50", Offset = "0x8DEB50", VA = "0x8DEB50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x8DEB88", Offset = "0x8DEB88", VA = "0x8DEB88")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x8DEBC0", Offset = "0x8DEBC0", VA = "0x8DEBC0", Slot = "9")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x8DECF0", Offset = "0x8DECF0", VA = "0x8DECF0", Slot = "10")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x8DEE7C", Offset = "0x8DEE7C", VA = "0x8DEE7C", Slot = "6")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x8DEE80", Offset = "0x8DEE80", VA = "0x8DEE80")]
		private void InitilizeSpawn()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x8DEFF8", Offset = "0x8DEFF8", VA = "0x8DEFF8")]
		private void TriggerAnimation()
		{
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x8DF048", Offset = "0x8DF048", VA = "0x8DF048")]
		public ButterflyHandle()
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class Cookie : MonoBehaviour
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_despawnThresholdY;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6ED594", Offset = "0x6ED594")]
		private bool <IsAvailable>k__BackingField;

		[Token(Token = "0x170001AF")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x60013EA")]
			[Address(RVA = "0x8DF100", Offset = "0x8DF100", VA = "0x8DF100")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public bool IsAvailable
		{
			[Token(Token = "0x60013EB")]
			[Address(RVA = "0x8DF130", Offset = "0x8DF130", VA = "0x8DF130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3AE4", Offset = "0x6F3AE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013EC")]
			[Address(RVA = "0x8DF138", Offset = "0x8DF138", VA = "0x8DF138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3AF4", Offset = "0x6F3AF4")]
			private set
			{
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x8DF144", Offset = "0x8DF144", VA = "0x8DF144")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x8DF190", Offset = "0x8DF190", VA = "0x8DF190")]
		private void Update()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x8DF220", Offset = "0x8DF220", VA = "0x8DF220")]
		public void SetAvailable(bool isAvailable)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x8DF348", Offset = "0x8DF348", VA = "0x8DF348")]
		public void EnableCookie()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x8DF1E8", Offset = "0x8DF1E8", VA = "0x8DF1E8")]
		public void DisableCookie()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x8DF3A8", Offset = "0x8DF3A8", VA = "0x8DF3A8")]
		public void DisableGrabber()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x8DF3E8", Offset = "0x8DF3E8", VA = "0x8DF3E8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x8DF418", Offset = "0x8DF418", VA = "0x8DF418")]
		public Cookie()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class CrankHandle : RoomBehaviour
	{
		[Token(Token = "0x2000459")]
		private enum InterpolationDirection
		{
			[Token(Token = "0x40014AC")]
			None,
			[Token(Token = "0x40014AD")]
			Start,
			[Token(Token = "0x40014AE")]
			End
		}

		[Token(Token = "0x200045A")]
		private struct AudioConstants
		{
			[Token(Token = "0x40014AF")]
			public const float MinRotationAngleThreshold = 0.25f;

			[Token(Token = "0x40014B0")]
			public const float MaxAudioPlayThreshold = 0.15f;
		}

		[Token(Token = "0x4000ECC")]
		private const float MaxRotationSnapValue = 0.9f;

		[Token(Token = "0x4000ECD")]
		private const float MinRotationSnapValue = 0.05f;

		[Token(Token = "0x4000ECE")]
		private const float InterpValueSpeed = 0.001f;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_rotationProgress;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_limitNumberOfRotations;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6ED5C4", Offset = "0x6ED5C4")]
		private int m_maxRotations;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED604", Offset = "0x6ED604")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_resetTransform;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_graphicsPivot;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_rotationPivot;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SoundEffect m_onSnapToEndSound;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HapticClip m_snapToEndHaptic;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED6B0", Offset = "0x6ED6B0")]
		[SerializeField]
		private Vector3 m_rotationAxis;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_handleOffset;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool m_clockWiseIsPositive;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED71C", Offset = "0x6ED71C")]
		[SerializeField]
		private bool m_isGrabbed;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool m_isTrackingOtherHandle;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool m_interpolateToEndPosition;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private InterpolationDirection m_interpolationDirection;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion m_previousRotation;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_currentRotatedAngle;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_audioPlayThreshold;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_previousAngle;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_currentAngle;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_rotationInDegrees;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_maxTargetRotateDegrees;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_floatValueChange;

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x8DF428", Offset = "0x8DF428", VA = "0x8DF428")]
		private bool IsApplicationNotPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x8DF448", Offset = "0x8DF448", VA = "0x8DF448", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x8DFB4C", Offset = "0x8DFB4C", VA = "0x8DFB4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x8DFB54", Offset = "0x8DFB54", VA = "0x8DFB54")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x8DFDCC", Offset = "0x8DFDCC", VA = "0x8DFDCC")]
		public void GrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x8DFE14", Offset = "0x8DFE14", VA = "0x8DFE14")]
		public void GrabEnd(Grabber grabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x8DFE50", Offset = "0x8DFE50", VA = "0x8DFE50")]
		public void SetGrabbableActive(bool active)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x8DFA28", Offset = "0x8DFA28", VA = "0x8DFA28")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x8DF52C", Offset = "0x8DF52C", VA = "0x8DF52C")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x8E0068", Offset = "0x8E0068", VA = "0x8E0068")]
		private void TryStartInterpolateSplineValue(InterpolationDirection direction)
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x8DFC64", Offset = "0x8DFC64", VA = "0x8DFC64")]
		private void InterpolateToEndPosition()
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x8DFF10", Offset = "0x8DFF10", VA = "0x8DFF10")]
		private void NormalizePreviousAngle()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x8DFF78", Offset = "0x8DFF78", VA = "0x8DFF78")]
		private void TryLimitRotation()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x8DF9B0", Offset = "0x8DF9B0", VA = "0x8DF9B0")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x8DFBA4", Offset = "0x8DFBA4", VA = "0x8DFBA4")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x8E01A8", Offset = "0x8E01A8", VA = "0x8E01A8")]
		private void TryPlayAudio()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x8DFE1C", Offset = "0x8DFE1C", VA = "0x8DFE1C")]
		private void StopAudio()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x8E0284", Offset = "0x8E0284", VA = "0x8E0284")]
		public CrankHandle()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class DoorKnob : SaveObject
	{
		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_isGrabbed;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_knobRigidbody;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_hingeTransform;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED7A8", Offset = "0x6ED7A8")]
		[SerializeField]
		private VectorAxisType m_compareAxis;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Condition m_interactableActivationCondition;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED804", Offset = "0x6ED804")]
		[SerializeField]
		private InteractableObject[] m_interactables;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isInteractablesActive;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_graphicsDefaultPosition;

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x8E031C", Offset = "0x8E031C", VA = "0x8E031C")]
		private bool IsApplicationNotPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x8E033C", Offset = "0x8E033C", VA = "0x8E033C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x8E0470", Offset = "0x8E0470", VA = "0x8E0470", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x8E05C8", Offset = "0x8E05C8", VA = "0x8E05C8", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x8E07BC", Offset = "0x8E07BC", VA = "0x8E07BC")]
		public void GrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x8E07C8", Offset = "0x8E07C8", VA = "0x8E07C8")]
		public void GrabEnd(Grabber grabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x8E07D0", Offset = "0x8E07D0", VA = "0x8E07D0")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x8E0378", Offset = "0x8E0378", VA = "0x8E0378")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x8E03F0", Offset = "0x8E03F0", VA = "0x8E03F0")]
		private void CheckInteractableCondition()
		{
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x8E0A90", Offset = "0x8E0A90", VA = "0x8E0A90")]
		private void SetInteractablesActive(bool active)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x8E0954", Offset = "0x8E0954", VA = "0x8E0954")]
		private float GetAxisValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x8E0B28", Offset = "0x8E0B28", VA = "0x8E0B28")]
		public DoorKnob()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x6E2508", Offset = "0x6E2508")]
	public class MagicDrawer : MonoBehaviour
	{
		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ObjectTransformable m_objectTransformable;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED898", Offset = "0x6ED898")]
		[SerializeField]
		private UnityEvent m_onMaxPositionReached;

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x8E0B90", Offset = "0x8E0B90", VA = "0x8E0B90")]
		public void SetInteractable(bool interactable)
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x8E0BC8", Offset = "0x8E0BC8", VA = "0x8E0BC8")]
		public void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x8E0D80", Offset = "0x8E0D80", VA = "0x8E0D80")]
		public void UpdatePosition(MinMaxType valueType)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x8E0D3C", Offset = "0x8E0D3C", VA = "0x8E0D3C")]
		private void UpdateScale(float t)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x8E0F5C", Offset = "0x8E0F5C", VA = "0x8E0F5C")]
		public MagicDrawer()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class MagicDrawerHandler : RoomBehaviour
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MagicDrawer[] m_grabbableDrawers;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ObjectTransformable[] m_objectTransformables;

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x8E0FC4", Offset = "0x8E0FC4", VA = "0x8E0FC4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x8E1180", Offset = "0x8E1180", VA = "0x8E1180", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x8E0FF4", Offset = "0x8E0FF4", VA = "0x8E0FF4")]
		private void SetDrawersActive(bool active, int interactableIndex = 0)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x8E10F0", Offset = "0x8E10F0", VA = "0x8E10F0")]
		private void SetTransformablesOpened(bool open)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x8E11C8", Offset = "0x8E11C8", VA = "0x8E11C8")]
		private void TweenCloseMagicDrawers()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x8E129C", Offset = "0x8E129C", VA = "0x8E129C")]
		public MagicDrawerHandler()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public class RootHandle : RoomBehaviour
	{
		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_grabbableObject;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED924", Offset = "0x6ED924")]
		[SerializeField]
		private SoundEffect m_soundEffectGrab;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x8E1314", Offset = "0x8E1314", VA = "0x8E1314")]
		private void Awake()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x8E1438", Offset = "0x8E1438", VA = "0x8E1438", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x8E1524", Offset = "0x8E1524", VA = "0x8E1524")]
		public void GrabBegin(Grabber activatedGrabber)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x8E1634", Offset = "0x8E1634", VA = "0x8E1634")]
		public void GrabEnd(Grabber activatedGrabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x8E1388", Offset = "0x8E1388", VA = "0x8E1388")]
		private void SetGrabbableObjectActive(bool active)
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x8DF0F8", Offset = "0x8DF0F8", VA = "0x8DF0F8")]
		public RootHandle()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation
{
	[Token(Token = "0x20002BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x6E256C", Offset = "0x6E256C")]
	public class AnimationData : ScriptableObject
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6ED970", Offset = "0x6ED970")]
		[SerializeField]
		public string ParameterName;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public AnimatorParameterType ParameterType;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float FloatValue;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public int IntValue;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public bool BoolValue;

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x932D00", Offset = "0x932D00", VA = "0x932D00")]
		public void TriggerAnimator(Animator animator)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x92EC30", Offset = "0x92EC30", VA = "0x92EC30")]
		public static AnimationData CreateInstance(string parameterName, AnimatorParameterType parameterType, float floatValue = 0f, int intValue = 0, bool boolValue = false)
		{
			return null;
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x932F14", Offset = "0x932F14", VA = "0x932F14")]
		public AnimationData()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class AnimationEventListener : MonoBehaviour
	{
		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent[] m_onAnimationEventTriggered;

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x933448", Offset = "0x933448", VA = "0x933448")]
		public void TriggerCustomEvent(int eventIndex)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x9334E8", Offset = "0x9334E8", VA = "0x9334E8")]
		public void DisableGameObject()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0x933520", Offset = "0x933520", VA = "0x933520")]
		public AnimationEventListener()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class AnimationEventParticles : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200045B")]
		private struct ParticleEvent
		{
			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ID;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ParticleSystem ParticleSystem;
		}

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleEvent[] m_particleEvents;

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x933580", Offset = "0x933580", VA = "0x933580")]
		public void PlayParticleSystem(string particleID, bool includeChilden)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x933628", Offset = "0x933628", VA = "0x933628")]
		public void StopParticleSystem(string particleID, bool includeChildren, ParticleSystemStopBehavior stopBehaviour)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0x9336D8", Offset = "0x9336D8", VA = "0x9336D8")]
		public AnimationEventParticles()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class AnimationHandler : MonoBehaviour
	{
		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDA1C", Offset = "0x6EDA1C")]
		[SerializeField]
		protected Transform m_rootBone;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDA68", Offset = "0x6EDA68")]
		[SerializeField]
		protected Animator m_mainAnimator;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Animator[] m_slaveAnimators;

		[Token(Token = "0x600142D")]
		[Address(RVA = "0x933738", Offset = "0x933738", VA = "0x933738")]
		public float GetFloatParameter(int hash)
		{
			return default(float);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0x933770", Offset = "0x933770", VA = "0x933770")]
		public void SetFloatParameter(int hash, float value)
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0x933834", Offset = "0x933834", VA = "0x933834")]
		public bool GetBoolParameter(int hash)
		{
			return default(bool);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0x93386C", Offset = "0x93386C", VA = "0x93386C")]
		public void SetBoolParameter(int hash, bool value)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0x933930", Offset = "0x933930", VA = "0x933930")]
		public int GetIntParameter(int hash)
		{
			return default(int);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x933968", Offset = "0x933968", VA = "0x933968")]
		public void SetIntParameter(int hash, int value)
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0x933A2C", Offset = "0x933A2C", VA = "0x933A2C")]
		public void SetTriggerParameter(int hash, bool reset)
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0x933B64", Offset = "0x933B64", VA = "0x933B64")]
		public AnimationHandler()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public enum AnimatorParameterType
	{
		[Token(Token = "0x4000F04")]
		Trigger,
		[Token(Token = "0x4000F05")]
		Bool,
		[Token(Token = "0x4000F06")]
		Int,
		[Token(Token = "0x4000F07")]
		Float
	}
	[Token(Token = "0x20002BF")]
	public class ButterflyAnimation : MonoBehaviour
	{
		[Token(Token = "0x200045C")]
		private struct AnimatorParameters
		{
			[Token(Token = "0x40014B3")]
			public const string FlyingSpeed = "Speed";

			[Token(Token = "0x40014B4")]
			public const string IsFlying = "IsFlying";

			[Token(Token = "0x40014B5")]
			public const string AnimationSpeed = "AnimationSpeed";

			[Token(Token = "0x40014B6")]
			public const string IdleFlip = "Flip";
		}

		[Token(Token = "0x200045D")]
		private struct DefaultSettings
		{
			[Token(Token = "0x40014B7")]
			public const float MinAnimationSpeed = 0.95f;

			[Token(Token = "0x40014B8")]
			public const float MaxAnimationSpeed = 1.05f;
		}

		[Token(Token = "0x200045E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31CC", Offset = "0x6E31CC")]
		private sealed class <AnimateFloatParameterOvertime>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40014B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40014BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Animator animator;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string parameter;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float endFloatValue;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float time;

			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ButterflyAnimation <>4__this;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startFloatValue>5__2;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019D5")]
				[Address(RVA = "0x93494C", Offset = "0x93494C", VA = "0x93494C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019D7")]
				[Address(RVA = "0x9349BC", Offset = "0x9349BC", VA = "0x9349BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x934590", Offset = "0x934590", VA = "0x934590")]
			[DebuggerHidden]
			public <AnimateFloatParameterOvertime>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x9347BC", Offset = "0x9347BC", VA = "0x9347BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x9347C0", Offset = "0x9347C0", VA = "0x9347C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x934954", Offset = "0x934954", VA = "0x934954", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDAC4", Offset = "0x6EDAC4")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDB10", Offset = "0x6EDB10")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_defaultTravelDuration;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve m_speedCurve;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDB7C", Offset = "0x6EDB7C")]
		[SerializeField]
		private MathUtils.MinMax m_normalizedTimeThresholds;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BezierSpline m_targetSpline;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isTraversingSpline;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_reverseSpline;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_elapsedTime;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_travelDuration;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_targetDirection;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_currentDirection;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_startPosition;

		[Token(Token = "0x14000054")]
		private event Action OnPathCompleted
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x933BD8", Offset = "0x933BD8", VA = "0x933BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3B04", Offset = "0x6F3B04")]
			add
			{
			}
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x933CC4", Offset = "0x933CC4", VA = "0x933CC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3B14", Offset = "0x6F3B14")]
			remove
			{
			}
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0x933DB0", Offset = "0x933DB0", VA = "0x933DB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0x9340D4", Offset = "0x9340D4", VA = "0x9340D4")]
		public void StartSplineTraversal(BezierSpline spline, bool reverseDirection, float startingProgress, float travelDuration, Action onPathCompleted)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x9342BC", Offset = "0x9342BC", VA = "0x9342BC")]
		public void StartSplineTraversal(BezierSpline spline, Action onPathCompleted)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x934318", Offset = "0x934318", VA = "0x934318")]
		public void StartSplineTraversal(BezierSpline spline, bool reverseDirection, Action onPathCompleted)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0x934328", Offset = "0x934328", VA = "0x934328")]
		public void ResetAnimation()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0x9343BC", Offset = "0x9343BC", VA = "0x9343BC")]
		public void SetAnimationToHover()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x9344B0", Offset = "0x9344B0", VA = "0x9344B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3B24", Offset = "0x6F3B24")]
		private IEnumerator AnimateFloatParameterOvertime(float endFloatValue, float time, Animator animator, string parameter)
		{
			return null;
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x933DC0", Offset = "0x933DC0", VA = "0x933DC0")]
		private void SplineMovementHandler()
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x9345BC", Offset = "0x9345BC", VA = "0x9345BC")]
		private float CurrentProgression()
		{
			return default(float);
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x934658", Offset = "0x934658", VA = "0x934658")]
		private Vector3 GetSplineDirection(BezierSpline spline, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x93428C", Offset = "0x93428C", VA = "0x93428C")]
		private void OnDestinationReached()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x93477C", Offset = "0x93477C", VA = "0x93477C")]
		public ButterflyAnimation()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class CharacterAnimationHandler : AnimationHandler
	{
		[Token(Token = "0x200045F")]
		[Flags]
		private enum AnimationType
		{
			[Token(Token = "0x40014C3")]
			Talk = 1,
			[Token(Token = "0x40014C4")]
			Blink = 2,
			[Token(Token = "0x40014C5")]
			Expressions = 4
		}

		[Token(Token = "0x4000F16")]
		private const float SecondsPerMinute = 60f;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDBD8", Offset = "0x6EDBD8")]
		[SerializeField]
		private AnimationType m_supportedAnimations;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDC24", Offset = "0x6EDC24")]
		[SerializeField]
		private ExpressionType m_supportedExpressions;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_blinksPerMinute;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EDC80", Offset = "0x6EDC80")]
		private float m_blinksPollRate;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDCCC", Offset = "0x6EDCCC")]
		[SerializeField]
		private LookIKGeneric m_lookIKGeneric;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_canBlink;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_elapsedBlinkTime;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_blinksPerSecond;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_blinkChance;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly int m_parameterLipSync;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private readonly int m_parameterChangeExpressionTrigger;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly int m_parameterExpressionType;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private readonly int m_parameterBlink;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterPickUp;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EDD28", Offset = "0x6EDD28")]
		private ExpressionType <CurrentExpression>k__BackingField;

		[Token(Token = "0x170001B1")]
		public ExpressionType CurrentExpression
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0x934B9C", Offset = "0x934B9C", VA = "0x934B9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3BA8", Offset = "0x6F3BA8")]
			get
			{
				return default(ExpressionType);
			}
			[Token(Token = "0x6001446")]
			[Address(RVA = "0x934BA4", Offset = "0x934BA4", VA = "0x934BA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3BB8", Offset = "0x6F3BB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public bool CanTalk
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0x934BAC", Offset = "0x934BAC", VA = "0x934BAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B3")]
		public Transform HeadJoint
		{
			[Token(Token = "0x6001448")]
			[Address(RVA = "0x92EA1C", Offset = "0x92EA1C", VA = "0x92EA1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public Transform RootBone
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0x934BE4", Offset = "0x934BE4", VA = "0x934BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public Animator MainAnimator
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0x934BEC", Offset = "0x934BEC", VA = "0x934BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000055")]
		private event Action OnPickupAnimationComplete
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0x9349C4", Offset = "0x9349C4", VA = "0x9349C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3B88", Offset = "0x6F3B88")]
			add
			{
			}
			[Token(Token = "0x6001444")]
			[Address(RVA = "0x934AB0", Offset = "0x934AB0", VA = "0x934AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3B98", Offset = "0x6F3B98")]
			remove
			{
			}
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x934BF4", Offset = "0x934BF4", VA = "0x934BF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x934C3C", Offset = "0x934C3C", VA = "0x934C3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x934D04", Offset = "0x934D04", VA = "0x934D04")]
		public void OpenMouth(float amount)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x934D4C", Offset = "0x934D4C", VA = "0x934D4C")]
		public ExpressionType GetExpression()
		{
			return default(ExpressionType);
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x934D84", Offset = "0x934D84", VA = "0x934D84")]
		public void SetExpression(ExpressionType newExpression)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x934E34", Offset = "0x934E34", VA = "0x934E34")]
		public void PlayAnimation(AnimationData animation)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x934E68", Offset = "0x934E68", VA = "0x934E68")]
		public void SetRandomExpression()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x934EE0", Offset = "0x934EE0", VA = "0x934EE0")]
		private ExpressionType GetRandom(ExpressionType exclude)
		{
			return default(ExpressionType);
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x934F24", Offset = "0x934F24", VA = "0x934F24")]
		private ExpressionType GetRandom()
		{
			return default(ExpressionType);
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x934D8C", Offset = "0x934D8C", VA = "0x934D8C")]
		public void SetAnimatorExpression(ExpressionType newExpression)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x934F50", Offset = "0x934F50", VA = "0x934F50")]
		public void ResetExpression()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x934F60", Offset = "0x934F60", VA = "0x934F60")]
		public void SetBlinkFrequency(float frequency)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x934F68", Offset = "0x934F68", VA = "0x934F68")]
		public void PlayPickUpAnimation(PickUpAnimationType type, Action onPickedUp)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x934FB4", Offset = "0x934FB4", VA = "0x934FB4")]
		public void PickupAnimationComplete()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x934FE4", Offset = "0x934FE4", VA = "0x934FE4")]
		public bool EnableLookIK(Transform target, float blendSpeed)
		{
			return default(bool);
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x93514C", Offset = "0x93514C", VA = "0x93514C")]
		public bool EnableLookIK(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x935204", Offset = "0x935204", VA = "0x935204")]
		public void EnableLookIK(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x9352E4", Offset = "0x9352E4", VA = "0x9352E4")]
		public void DisableLookIK(float blendSpeed)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x9353B4", Offset = "0x9353B4", VA = "0x9353B4")]
		public void DisableLookIK()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x934C4C", Offset = "0x934C4C", VA = "0x934C4C")]
		private void BlinkHandler()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0x93547C", Offset = "0x93547C", VA = "0x93547C")]
		public CharacterAnimationHandler()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class ClothController : MonoBehaviour
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cloth m_cloth;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ClothConfig m_standardConfig;

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x935560", Offset = "0x935560", VA = "0x935560")]
		public void UpdateClothConfig(ClothConfig config)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0x93561C", Offset = "0x93561C", VA = "0x93561C")]
		public void ResetClothConfig()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0x9356D4", Offset = "0x9356D4", VA = "0x9356D4")]
		public ClothController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public struct ClothConfig
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool GravityEnabled;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 ExternalForce;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 RandomForce;

		[Token(Token = "0x6001463")]
		[Address(RVA = "0x765578", Offset = "0x765578", VA = "0x765578")]
		public ClothConfig(bool gravityEnabled, Vector3 externalForce, Vector3 randomForce)
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class DeltaCorrectionLink : MonoBehaviour
	{
		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EDD68", Offset = "0x6EDD68")]
		private bool <HasDeltaCorrection>k__BackingField;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EDD78", Offset = "0x6EDD78")]
		private PositionRotation <DeltaCorrection>k__BackingField;

		[Token(Token = "0x170001B6")]
		public bool HasDeltaCorrection
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x937BD4", Offset = "0x937BD4", VA = "0x937BD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3BC8", Offset = "0x6F3BC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x937BDC", Offset = "0x937BDC", VA = "0x937BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3BD8", Offset = "0x6F3BD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public PositionRotation DeltaCorrection
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x937BE8", Offset = "0x937BE8", VA = "0x937BE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3BE8", Offset = "0x6F3BE8")]
			get
			{
				return default(PositionRotation);
			}
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x937BFC", Offset = "0x937BFC", VA = "0x937BFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3BF8", Offset = "0x6F3BF8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0x937C18", Offset = "0x937C18", VA = "0x937C18")]
		private bool ValidateAnimator(Animator animator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x937D00", Offset = "0x937D00", VA = "0x937D00")]
		public void SetDeltaCorrectionValues(Vector3 position, Quaternion rotation, bool hasDeltaCorrection)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x937D54", Offset = "0x937D54", VA = "0x937D54")]
		public DeltaCorrectionLink()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class DoorAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000460")]
		private enum DoorDirectionType
		{
			[Token(Token = "0x40014C7")]
			Pull,
			[Token(Token = "0x40014C8")]
			Push
		}

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TransitionData m_transitionData;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableDirector m_director;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_doorAnimator;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_doorSoundSource;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] m_characterSyncPoints;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDDD8", Offset = "0x6EDDD8")]
		[SerializeField]
		private PlayableCharacterEvent m_onDoorPulledOpened;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PlayableCharacterEvent m_onDoorPushedOpened;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayableCharacter m_characterControl;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DoorDirectionType m_direction;

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x937D5C", Offset = "0x937D5C", VA = "0x937D5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x937D8C", Offset = "0x937D8C", VA = "0x937D8C")]
		public void PullOpenDoor(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x937FA8", Offset = "0x937FA8", VA = "0x937FA8")]
		public void PushOpenDoor(PlayableCharacter character)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x937D94", Offset = "0x937D94", VA = "0x937D94")]
		private void OpenDoor(PlayableCharacter character, DoorDirectionType direction)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x937FB0", Offset = "0x937FB0", VA = "0x937FB0")]
		private void OnDirectorStopped(PlayableDirector director)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x938090", Offset = "0x938090", VA = "0x938090")]
		private void TriggerEvent()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x93811C", Offset = "0x93811C", VA = "0x93811C")]
		public DoorAnimator()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class EntranceClockAnimation : RoomBehaviour
	{
		[Token(Token = "0x2000461")]
		public enum ClockAnimationState
		{
			[Token(Token = "0x40014CA")]
			Forward,
			[Token(Token = "0x40014CB")]
			Backward,
			[Token(Token = "0x40014CC")]
			Stop
		}

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Animator m_animator;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EDE44", Offset = "0x6EDE44")]
		private float m_clockSpeed;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ClockAnimationState m_startState;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EDE94", Offset = "0x6EDE94")]
		private float m_clockOffset;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_speed;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_interact;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int sm_idleStateName;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int sm_idleStateLayer;

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x9381BC", Offset = "0x9381BC", VA = "0x9381BC", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x938270", Offset = "0x938270", VA = "0x938270")]
		public void InteractClock()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x9382F8", Offset = "0x9382F8", VA = "0x9382F8")]
		public void StartAnimation()
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x938468", Offset = "0x938468", VA = "0x938468")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x9381C0", Offset = "0x9381C0", VA = "0x9381C0")]
		protected void RandomizeAnimator()
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x938300", Offset = "0x938300", VA = "0x938300")]
		protected void SetState(ClockAnimationState state)
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x938470", Offset = "0x938470", VA = "0x938470")]
		public EntranceClockAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C6")]
	public struct SMBEventCollection
	{
		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ClipName;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationClip Clip;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SMBEvent> Events;

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x7662EC", Offset = "0x7662EC", VA = "0x7662EC")]
		public void EnableFire()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x7662F4", Offset = "0x7662F4", VA = "0x7662F4")]
		public void EnableFire(int eventIndex)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x7662FC", Offset = "0x7662FC", VA = "0x7662FC")]
		public void DisableFire()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x766304", Offset = "0x766304", VA = "0x766304")]
		public void DisableFire(int eventIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C7")]
	public class SMBEvent
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EventName;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FireTime;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool CanFire;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EventIndex;

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x98D178", Offset = "0x98D178", VA = "0x98D178")]
		public SMBEvent()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class GenericSplineTraverser : MonoBehaviour
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDED4", Offset = "0x6EDED4")]
		[SerializeField]
		private Transform m_traversingTransform;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDF20", Offset = "0x6EDF20")]
		[SerializeField]
		private BezierSpline m_targetSpline;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_reverseSpline;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_travelDuration;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDF8C", Offset = "0x6EDF8C")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_speedCurve;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EDFE8", Offset = "0x6EDFE8")]
		[SerializeField]
		private MathUtils.MinMax m_normalizedTimeThresholds;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE034", Offset = "0x6EE034")]
		[SerializeField]
		private UnityEvent m_onTraversalStart;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onTraversalEnd;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isTraversingSpline;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_elapsedTime;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_targetDirection;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_currentDirection;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_startPosition;

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x939D10", Offset = "0x939D10", VA = "0x939D10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x939FD8", Offset = "0x939FD8", VA = "0x939FD8")]
		public void StartSplineTraversal()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x93A0A4", Offset = "0x93A0A4", VA = "0x93A0A4")]
		public void StartSplineTraversal(Transform traversingTransform)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x939D20", Offset = "0x939D20", VA = "0x939D20")]
		private void SplineMovementHandler()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x93A0B0", Offset = "0x93A0B0", VA = "0x93A0B0")]
		private float CurrentProgression()
		{
			return default(float);
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x93A14C", Offset = "0x93A14C", VA = "0x93A14C")]
		private Vector3 GetSplineDirection(BezierSpline spline, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x93A270", Offset = "0x93A270", VA = "0x93A270")]
		public GenericSplineTraverser()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class InputSplineTraverser : MonoBehaviour
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE090", Offset = "0x6EE090")]
		[SerializeField]
		protected Transform m_traversingTransform;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE0DC", Offset = "0x6EE0DC")]
		[SerializeField]
		private BezierSpline m_targetSpline;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_useScriptableFloat;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable m_scriptableFloat;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_reverseSpline;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE158", Offset = "0x6EE158")]
		[SerializeField]
		private bool m_isElasticFollow;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_orientToSplineDirection;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_targetProgress;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_currentProgress;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_elasticProgress;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_targetDirection;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_currentDirection;

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x93A314", Offset = "0x93A314", VA = "0x93A314")]
		private void Update()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x93A4EC", Offset = "0x93A4EC", VA = "0x93A4EC")]
		public void SetCurrentProgress(float normalizedProgress)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x93A318", Offset = "0x93A318", VA = "0x93A318")]
		private void SplineMovementHandler()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x93A568", Offset = "0x93A568", VA = "0x93A568")]
		private float GetCurrentProgression()
		{
			return default(float);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x93A660", Offset = "0x93A660", VA = "0x93A660")]
		private Vector3 GetSplineDirection(BezierSpline spline, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x93A73C", Offset = "0x93A73C", VA = "0x93A73C")]
		public InputSplineTraverser()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class Locomotion : MonoBehaviour
	{
		[Token(Token = "0x2000462")]
		private enum OffMeshLocomotionState
		{
			[Token(Token = "0x40014CE")]
			None,
			[Token(Token = "0x40014CF")]
			Start,
			[Token(Token = "0x40014D0")]
			Loop,
			[Token(Token = "0x40014D1")]
			Finish
		}

		[Token(Token = "0x2000463")]
		private struct AnimatorOffMeshLinkTypes
		{
			[Token(Token = "0x40014D2")]
			public const int ClimbUp = 1;

			[Token(Token = "0x40014D3")]
			public const int DropDown = 2;

			[Token(Token = "0x40014D4")]
			public const int GapJump = 3;

			[Token(Token = "0x40014D5")]
			public const int SkipJump = 4;

			[Token(Token = "0x40014D6")]
			public const int ClimbDown = 5;
		}

		[Token(Token = "0x2000464")]
		private struct DefaultSettings
		{
			[Token(Token = "0x40014D7")]
			public const float TransitionStartThreshold = 0.25f;

			[Token(Token = "0x40014D8")]
			public const float FollowUpdateDistance = 1f;

			[Token(Token = "0x40014D9")]
			public const float FollowStoppingDistance = 1f;

			[Token(Token = "0x40014DA")]
			public const float SpeedReductionFactor = 2f;

			[Token(Token = "0x40014DB")]
			public const float DestinationReachedSpeedBuffer = 0.1f;

			[Token(Token = "0x40014DC")]
			public const float ObstacleCheckRayLength = 2f;

			[Token(Token = "0x40014DD")]
			public const float FaceDestinationDeadAngle = 2.5f;

			[Token(Token = "0x40014DE")]
			public const float RemainingDistanceThreshold = 0.05f;

			[Token(Token = "0x40014DF")]
			public const float BaseOffsetLerpDistance = 0.005f;

			[Token(Token = "0x40014E0")]
			public const float NavSampleDistance = 1f;
		}

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE1C4", Offset = "0x6EE1C4")]
		[SerializeField]
		private CharacterData m_data;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE210", Offset = "0x6EE210")]
		[SerializeField]
		private float m_turnDeadAngle;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_offMeshLookAtDeadZone;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_enableObstacleAvoidance;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private LayerMask m_obstacleAvoidLayer;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE28C", Offset = "0x6EE28C")]
		[SerializeField]
		private bool m_debugTeleport;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE2D8", Offset = "0x6EE2D8")]
		[SerializeField]
		private CharacterAnimationHandler m_animatorHandler;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NavMeshAgent m_navMeshAgent;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EE334", Offset = "0x6EE334")]
		private bool <HasDeltaCorrection>k__BackingField;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EE344", Offset = "0x6EE344")]
		private bool <IsLocomotionLocked>k__BackingField;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EE354", Offset = "0x6EE354")]
		private Vector3 <DeltaCorrectionPosition>k__BackingField;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EE364", Offset = "0x6EE364")]
		private Quaternion <DeltaCorrectionRotation>k__BackingField;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isUsingAgentLocomotion;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_faceDestinationOnArrival;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_targetSpeed;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_currentSpeed;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_inputDirection;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_cachedDestination;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LocomotionLockState m_lockState;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isTraversingOffMeshLink;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OffMeshLocomotionState m_currentOffMeshLocomotionState;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private OffMeshLinkAnimation m_currentOffMeshLinkAnimation;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_offMeshLinkOrientation;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 m_offMeshWalkStartPosition;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NavMeshQueryFilter m_navMeshQueryFilter;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_isFollowingTarget;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private MathUtils.MinMax m_minMaxFollowDistance;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private readonly Quaternion m_avoidanceAngle;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private readonly int m_parameterSpeed;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly int m_parameterIsOffMeshAnimating;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private readonly int m_parameterIsOffMeshTraversing;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly int m_parameterOffMeshLinkType;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private readonly int m_parameterIsTalking;

		[Token(Token = "0x170001B8")]
		public bool HasDeltaCorrection
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x93A744", Offset = "0x93A744", VA = "0x93A744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C08", Offset = "0x6F3C08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x93A74C", Offset = "0x93A74C", VA = "0x93A74C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C18", Offset = "0x6F3C18")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public bool IsLocomotionLocked
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x93A758", Offset = "0x93A758", VA = "0x93A758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C28", Offset = "0x6F3C28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x93A760", Offset = "0x93A760", VA = "0x93A760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C38", Offset = "0x6F3C38")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public Vector3 DeltaCorrectionPosition
		{
			[Token(Token = "0x6001490")]
			[Address(RVA = "0x93A76C", Offset = "0x93A76C", VA = "0x93A76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C48", Offset = "0x6F3C48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x93A778", Offset = "0x93A778", VA = "0x93A778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C58", Offset = "0x6F3C58")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public Quaternion DeltaCorrectionRotation
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x93A784", Offset = "0x93A784", VA = "0x93A784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C68", Offset = "0x6F3C68")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x93A790", Offset = "0x93A790", VA = "0x93A790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C78", Offset = "0x6F3C78")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public int WalkableAreas
		{
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x93A79C", Offset = "0x93A79C", VA = "0x93A79C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001BD")]
		public float NavAgentSpeed
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x93AB7C", Offset = "0x93AB7C", VA = "0x93AB7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x93ABAC", Offset = "0x93ABAC", VA = "0x93ABAC")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		private Vector3 AgentPosition
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x93ABEC", Offset = "0x93ABEC", VA = "0x93ABEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x93AC20", Offset = "0x93AC20", VA = "0x93AC20")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		private Quaternion AgentRotation
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x93AC7C", Offset = "0x93AC7C", VA = "0x93AC7C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x93ACB0", Offset = "0x93ACB0", VA = "0x93ACB0")]
			set
			{
			}
		}

		[Token(Token = "0x14000056")]
		private event Action<bool> OnDestinationReached
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x93A7CC", Offset = "0x93A7CC", VA = "0x93A7CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C88", Offset = "0x6F3C88")]
			add
			{
			}
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x93A8B8", Offset = "0x93A8B8", VA = "0x93A8B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3C98", Offset = "0x6F3C98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		private event Action OnOffMeshLinkTraversed
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x93A9A4", Offset = "0x93A9A4", VA = "0x93A9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3CA8", Offset = "0x6F3CA8")]
			add
			{
			}
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x93AA90", Offset = "0x93AA90", VA = "0x93AA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3CB8", Offset = "0x6F3CB8")]
			remove
			{
			}
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x93AD14", Offset = "0x93AD14", VA = "0x93AD14")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x93AEE0", Offset = "0x93AEE0", VA = "0x93AEE0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x93BACC", Offset = "0x93BACC", VA = "0x93BACC")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x93B4C0", Offset = "0x93B4C0", VA = "0x93B4C0")]
		public bool IsUsingAgentLocomotion()
		{
			return default(bool);
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x93BDAC", Offset = "0x93BDAC", VA = "0x93BDAC")]
		public void SetDestination(Vector3 destination)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x93BEC8", Offset = "0x93BEC8", VA = "0x93BEC8")]
		public void SetDestination(Vector3 destination, LocomotionLockState lockState)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x93BDB8", Offset = "0x93BDB8", VA = "0x93BDB8")]
		public void SetDestination(Vector3 destination, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x93BF48", Offset = "0x93BF48", VA = "0x93BF48")]
		public void SetDestination(Transform destination, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x93C028", Offset = "0x93C028", VA = "0x93C028")]
		public void TryAbortDestination()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x93BED0", Offset = "0x93BED0", VA = "0x93BED0")]
		public void SetInputLockState(LocomotionLockState lockState)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x93C0D0", Offset = "0x93C0D0", VA = "0x93C0D0")]
		public void LockLocomotion()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x93C0DC", Offset = "0x93C0DC", VA = "0x93C0DC")]
		public void UnlockLocomotion()
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x93C0E4", Offset = "0x93C0E4", VA = "0x93C0E4")]
		public void FollowLocomotion(Locomotion targetLocomotion)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x93C4CC", Offset = "0x93C4CC", VA = "0x93C4CC")]
		public bool InputMove(Vector3 directionalMagnitude)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x93C600", Offset = "0x93C600", VA = "0x93C600")]
		public bool TryMove(Vector3 directionalMagnitude)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x93C690", Offset = "0x93C690", VA = "0x93C690")]
		public void TryResetInput()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x93C714", Offset = "0x93C714", VA = "0x93C714")]
		public void Teleport(Vector3 location, Quaternion rotation)
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x93C900", Offset = "0x93C900", VA = "0x93C900")]
		public void CompleteDeltaCorrection()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x93C908", Offset = "0x93C908", VA = "0x93C908")]
		public void SetFollowThresholds(MathUtils.MinMax minMaxFollowDistance)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x93AE58", Offset = "0x93AE58", VA = "0x93AE58")]
		public void ResetFollowThresholds()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x93C910", Offset = "0x93C910", VA = "0x93C910")]
		public void SetNavAgentActive(bool enabled)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x93CAAC", Offset = "0x93CAAC", VA = "0x93CAAC")]
		public bool TryGetNavmeshBaseOffset(out float baseOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x93C7F8", Offset = "0x93C7F8", VA = "0x93C7F8")]
		public void ResetPath(bool abortCurrentOffmeshlink = false)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x93AD9C", Offset = "0x93AD9C", VA = "0x93AD9C")]
		private void InitilizeNavAgent()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x93C0A8", Offset = "0x93C0A8", VA = "0x93C0A8")]
		private void AbortDestination()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x93BED8", Offset = "0x93BED8", VA = "0x93BED8")]
		private void MoveToDestination(Vector3 destination)
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x93C20C", Offset = "0x93C20C", VA = "0x93C20C")]
		private void FollowLocomotionHandler(Locomotion targetLocomotion)
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x93BA08", Offset = "0x93BA08", VA = "0x93BA08")]
		private void InputLocomotionHandler()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x93B51C", Offset = "0x93B51C", VA = "0x93B51C")]
		private void AgentLocomotionHandler()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x93CE58", Offset = "0x93CE58", VA = "0x93CE58")]
		private bool IsAgentDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x93CF04", Offset = "0x93CF04", VA = "0x93CF04")]
		private bool IsAgentStopping()
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x93D110", Offset = "0x93D110", VA = "0x93D110")]
		private void ObstacleAvoidanceCheck(Vector3 walkDirection)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x93B3DC", Offset = "0x93B3DC", VA = "0x93B3DC")]
		private void SetCurrentSpeed()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x93CCE8", Offset = "0x93CCE8", VA = "0x93CCE8")]
		private void TurnToDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x93CF6C", Offset = "0x93CF6C", VA = "0x93CF6C")]
		private void TryInitilizeOffMeshTraversing(NavMeshAgent agent)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x93CC1C", Offset = "0x93CC1C", VA = "0x93CC1C")]
		private void AbortOffMeshTraversal()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x93D2E4", Offset = "0x93D2E4", VA = "0x93D2E4")]
		private void FinishOffMeshTraversing()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x93D338", Offset = "0x93D338", VA = "0x93D338")]
		private void FinishOffMeshTraversing(bool CompensateVerticalOffset)
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x93B0B0", Offset = "0x93B0B0", VA = "0x93B0B0")]
		private void OffMeshLinkHandler()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x93D4B8", Offset = "0x93D4B8", VA = "0x93D4B8")]
		private void OffMeshTeleportHandler(OffMeshLinkData linkData)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x93D594", Offset = "0x93D594", VA = "0x93D594")]
		private void OffMeshWalkHandler(OffMeshLinkData linkData)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x93D810", Offset = "0x93D810", VA = "0x93D810")]
		private void OffMeshClimbingHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x93DE90", Offset = "0x93DE90", VA = "0x93DE90")]
		private void OffMeshDropDownHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x93E9FC", Offset = "0x93E9FC", VA = "0x93E9FC")]
		private void OffMeshClimbDownHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x93E494", Offset = "0x93E494", VA = "0x93E494")]
		private void OffMeshJumpHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x93E7F0", Offset = "0x93E7F0", VA = "0x93E7F0")]
		private void OffMeshTimelineHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x93F158", Offset = "0x93F158", VA = "0x93F158")]
		private void SetOffMeshLinkOrientation(OffMeshLinkData linkdata, bool upIsDefault)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x93F3F0", Offset = "0x93F3F0", VA = "0x93F3F0")]
		private void EnableOffMeshTraversalAnimation(int offMeshLinkType)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x93F540", Offset = "0x93F540", VA = "0x93F540")]
		private void DisableOffMeshTraversalAnimation()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x93AD64", Offset = "0x93AD64", VA = "0x93AD64")]
		public void SetAvoidancePriority(int avoidancePriority)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x93F694", Offset = "0x93F694", VA = "0x93F694")]
		public Locomotion()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public enum LocomotionLockState
	{
		[Token(Token = "0x4000F87")]
		Open,
		[Token(Token = "0x4000F88")]
		Locked,
		[Token(Token = "0x4000F89")]
		Cancelable
	}
	[Token(Token = "0x20002CC")]
	[DisallowMultipleComponent]
	public class OffMeshLinkAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE394", Offset = "0x6EE394")]
		[SerializeField]
		private NavMeshLinkType m_linkType;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OffMeshLink m_offMeshLink;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NavMeshLink m_navMeshLink;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE400", Offset = "0x6EE400")]
		[SerializeField]
		private OffMeshLinkAnimationType m_animationType;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OffMeshLinkTimeline m_timelineTraversal;

		[Token(Token = "0x170001C0")]
		public OffMeshLinkAnimationType OffMeshAnimationType
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x93D58C", Offset = "0x93D58C", VA = "0x93D58C")]
			get
			{
				return default(OffMeshLinkAnimationType);
			}
		}

		[Token(Token = "0x170001C1")]
		public NavMeshLinkType LinkType
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x93EFF8", Offset = "0x93EFF8", VA = "0x93EFF8")]
			get
			{
				return default(NavMeshLinkType);
			}
		}

		[Token(Token = "0x170001C2")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0x93F074", Offset = "0x93F074", VA = "0x93F074")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C3")]
		public Quaternion StartRotation
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0x93F1D4", Offset = "0x93F1D4", VA = "0x93F1D4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001C4")]
		public Vector3 EndPosition
		{
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0x93F45C", Offset = "0x93F45C", VA = "0x93F45C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001C5")]
		public Quaternion EndRotation
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0x93F000", Offset = "0x93F000", VA = "0x93F000")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170001C6")]
		public OffMeshLinkTimeline TimelineTraversal
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x93F5A8", Offset = "0x93F5A8", VA = "0x93F5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C7")]
		public Vector3 OffMeshDistance
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x93F248", Offset = "0x93F248", VA = "0x93F248")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x93F7B8", Offset = "0x93F7B8", VA = "0x93F7B8")]
		private bool IsNavMeshLink()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x93F7C8", Offset = "0x93F7C8", VA = "0x93F7C8")]
		private bool IsUpsidedownOffMeshLink()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x93F8A8", Offset = "0x93F8A8", VA = "0x93F8A8")]
		private void ClearOpposite()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x93F8C4", Offset = "0x93F8C4", VA = "0x93F8C4")]
		private void VerifyOffMeshLinkTransform()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x93F9A8", Offset = "0x93F9A8", VA = "0x93F9A8")]
		private void VerifyNavMeshLinkTransform()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x93FA8C", Offset = "0x93FA8C", VA = "0x93FA8C")]
		public OffMeshLinkAnimation()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public enum OffMeshLinkAnimationType
	{
		[Token(Token = "0x4000F90")]
		Walk,
		[Token(Token = "0x4000F91")]
		ClimbUp,
		[Token(Token = "0x4000F92")]
		DropDown,
		[Token(Token = "0x4000F93")]
		GapJump,
		[Token(Token = "0x4000F94")]
		Teleport,
		[Token(Token = "0x4000F95")]
		Timeline,
		[Token(Token = "0x4000F96")]
		SkipJump,
		[Token(Token = "0x4000F97")]
		ClimbDown
	}
	[Token(Token = "0x20002CE")]
	public enum NavMeshLinkType
	{
		[Token(Token = "0x4000F99")]
		OffMeshLink,
		[Token(Token = "0x4000F9A")]
		NavMeshLink
	}
	[Token(Token = "0x20002CF")]
	public class OffMeshLinkTimeline : MonoBehaviour
	{
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector m_playableDirector;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EE46C", Offset = "0x6EE46C")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x170001C8")]
		public bool IsPlaying
		{
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x93F68C", Offset = "0x93F68C", VA = "0x93F68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3CC8", Offset = "0x6F3CC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x93FA94", Offset = "0x93FA94", VA = "0x93FA94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3CD8", Offset = "0x6F3CD8")]
			private set
			{
			}
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x93F5B0", Offset = "0x93F5B0", VA = "0x93F5B0")]
		public void StartTimelineTransition(Animator animator)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x93FAA0", Offset = "0x93FAA0", VA = "0x93FAA0")]
		private void FinishTimeline(PlayableDirector director)
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x93FB40", Offset = "0x93FB40", VA = "0x93FB40")]
		public OffMeshLinkTimeline()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public enum PickUpAnimationType
	{
		[Token(Token = "0x4000F9E")]
		Low,
		[Token(Token = "0x4000F9F")]
		Middle,
		[Token(Token = "0x4000FA0")]
		High
	}
	[Token(Token = "0x20002D1")]
	public class RecipeCheckMark : MonoBehaviour
	{
		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_panProperty;

		[Token(Token = "0x4000FA2")]
		private const float VisiblePanValue = 0f;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InventoryItemData m_inventoryItemData;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_isListeningToEvent;

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x93FB48", Offset = "0x93FB48", VA = "0x93FB48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x93FD10", Offset = "0x93FD10", VA = "0x93FD10")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x93FDEC", Offset = "0x93FDEC", VA = "0x93FDEC")]
		private void OnInventoryUpdated(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x93FFE0", Offset = "0x93FFE0", VA = "0x93FFE0")]
		public RecipeCheckMark()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class RigScaler : MonoBehaviour
	{
		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x98C4E4", Offset = "0x98C4E4", VA = "0x98C4E4")]
		public void ResetScale(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x98C608", Offset = "0x98C608", VA = "0x98C608")]
		public void RetainTimelineScale(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x98C774", Offset = "0x98C774", VA = "0x98C774")]
		public RigScaler()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class SelectionAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PointerInteractableHold m_interactable;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_cardProgressHash;

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x98D954", Offset = "0x98D954", VA = "0x98D954")]
		public void Update()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x98D9BC", Offset = "0x98D9BC", VA = "0x98D9BC")]
		public SelectionAnimationController()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class AnimationActiveSerializer : SaveObject
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_defaultActiveSaveState;

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x932A78", Offset = "0x932A78", VA = "0x932A78", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x932BC4", Offset = "0x932BC4", VA = "0x932BC4", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x932CF8", Offset = "0x932CF8", VA = "0x932CF8")]
		public AnimationActiveSerializer()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class AnimationDataSerializer : SaveObject
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE4EC", Offset = "0x6EE4EC")]
		[SerializeField]
		private AnimationData m_animationData;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE548", Offset = "0x6EE548")]
		[SerializeField]
		private bool m_triggerOnLoad;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasTriggered;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AnimationSavableData m_animationSavableData;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x932F1C", Offset = "0x932F1C", VA = "0x932F1C")]
		public void TriggerAnimation()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x932F64", Offset = "0x932F64", VA = "0x932F64")]
		public void SetHasTriggered(bool hasTriggered)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x932F70", Offset = "0x932F70", VA = "0x932F70", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x933160", Offset = "0x933160", VA = "0x933160", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x9332BC", Offset = "0x9332BC", VA = "0x9332BC")]
		private AnimationSavableData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x933440", Offset = "0x933440", VA = "0x933440")]
		public AnimationDataSerializer()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public abstract class AnimationSavableData : SavableData
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasTriggered;

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x933BC4", Offset = "0x933BC4", VA = "0x933BC4", Slot = "4")]
		public virtual void SetValue(bool value)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x933BC8", Offset = "0x933BC8", VA = "0x933BC8", Slot = "5")]
		public virtual void SetValue(float value)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x933BCC", Offset = "0x933BCC", VA = "0x933BCC", Slot = "6")]
		public virtual void SetValue(int value)
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x933BD0", Offset = "0x933BD0", VA = "0x933BD0")]
		protected AnimationSavableData()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class SavableAnimationBool : AnimationSavableData
	{
		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool Value;

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x98D918", Offset = "0x98D918", VA = "0x98D918", Slot = "4")]
		public override void SetValue(bool value)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x98D924", Offset = "0x98D924", VA = "0x98D924")]
		public SavableAnimationBool()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class SavableAnimationFloat : AnimationSavableData
	{
		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Value;

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x98D92C", Offset = "0x98D92C", VA = "0x98D92C", Slot = "5")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x98D934", Offset = "0x98D934", VA = "0x98D934")]
		public SavableAnimationFloat()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public class SavableAnimationInt : AnimationSavableData
	{
		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Value;

		[Token(Token = "0x6001500")]
		[Address(RVA = "0x98D93C", Offset = "0x98D93C", VA = "0x98D93C", Slot = "6")]
		public override void SetValue(int value)
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0x98D944", Offset = "0x98D944", VA = "0x98D944")]
		public SavableAnimationInt()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class SavableAnimationTrigger : AnimationSavableData
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x98D94C", Offset = "0x98D94C", VA = "0x98D94C")]
		public SavableAnimationTrigger()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public class SMBDeltaCorrection : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		private struct TargetWeightMask
		{
			[Token(Token = "0x40014E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PositionXYZWeight;

			[Token(Token = "0x40014E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float RotationWeight;

			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x766294", Offset = "0x766294", VA = "0x766294")]
			public TargetWeightMask(Vector3 positionXYZWeight, float rotationWeight)
			{
			}

			[Token(Token = "0x60019D9")]
			[Address(RVA = "0x98D134", Offset = "0x98D134", VA = "0x98D134")]
			public static implicit operator MatchTargetWeightMask(TargetWeightMask myMask)
			{
				return default(MatchTargetWeightMask);
			}
		}

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE594", Offset = "0x6EE594")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EE594", Offset = "0x6EE594")]
		private float m_normalizedStartTime;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EE5F8", Offset = "0x6EE5F8")]
		private float m_normalizedFinishTime;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE638", Offset = "0x6EE638")]
		[SerializeField]
		private TargetWeightMask m_targetWeightMask;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DeltaCorrectionLink m_deltaCorrectionComponent;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_hasDeltaCorrection;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isCorrectionExecuted;

		[Token(Token = "0x6001503")]
		[Address(RVA = "0x98CEE8", Offset = "0x98CEE8", VA = "0x98CEE8", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x98CFC0", Offset = "0x98CFC0", VA = "0x98CFC0", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x98D164", Offset = "0x98D164", VA = "0x98D164")]
		public SMBDeltaCorrection()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class SMBLocomotionDeltaCorrection : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000466")]
		private struct TargetWeightMask
		{
			[Token(Token = "0x40014E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PositionXYZWeight;

			[Token(Token = "0x40014E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float RotationWeight;

			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x76630C", Offset = "0x76630C", VA = "0x76630C")]
			public TargetWeightMask(Vector3 positionXYZWeight, float rotationWeight)
			{
			}

			[Token(Token = "0x60019DB")]
			[Address(RVA = "0x98D6C0", Offset = "0x98D6C0", VA = "0x98D6C0")]
			public static implicit operator MatchTargetWeightMask(TargetWeightMask myMask)
			{
				return default(MatchTargetWeightMask);
			}
		}

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE684", Offset = "0x6EE684")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EE684", Offset = "0x6EE684")]
		private float m_normalizedStartTime;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EE6E8", Offset = "0x6EE6E8")]
		private float m_normalizedFinishTime;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE728", Offset = "0x6EE728")]
		[SerializeField]
		private TargetWeightMask m_targetWeightMask;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Locomotion m_locomotion;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isCorrectionExecuted;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isFinished;

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x98D3A4", Offset = "0x98D3A4", VA = "0x98D3A4", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x98D480", Offset = "0x98D480", VA = "0x98D480", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x98D6F0", Offset = "0x98D6F0", VA = "0x98D6F0")]
		public SMBLocomotionDeltaCorrection()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class SMBLoopVelocity : StateMachineBehaviour
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EE774", Offset = "0x6EE774")]
		private float m_startingFallSpeed;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EE7C0", Offset = "0x6EE7C0")]
		private string m_fallingSpeedParameter;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EE80C", Offset = "0x6EE80C")]
		private float m_defaultParameterSpeed;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EE858", Offset = "0x6EE858")]
		private float m_terminalVelocity;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_currentFallSpeed;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_elapsedTime;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x98D704", Offset = "0x98D704", VA = "0x98D704", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0x98D764", Offset = "0x98D764", VA = "0x98D764", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x98D870", Offset = "0x98D870", VA = "0x98D870", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0x98D8B8", Offset = "0x98D8B8", VA = "0x98D8B8")]
		public SMBLoopVelocity()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class TransformRotationLerper : MonoBehaviour
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE8A4", Offset = "0x6EE8A4")]
		[SerializeField]
		private Transform m_targetTransform;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_useScriptableFloat;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_scriptableFloat;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE910", Offset = "0x6EE910")]
		[SerializeField]
		private Vector3 m_startRotation;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_finalRotation;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_cachedStartRotation;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_cachedFinalRotation;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_internalLerpValue;

		[Token(Token = "0x170001C9")]
		private float LerpValue
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x98DA1C", Offset = "0x98DA1C", VA = "0x98DA1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x98DA5C", Offset = "0x98DA5C", VA = "0x98DA5C")]
			set
			{
			}
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0x98DAB8", Offset = "0x98DAB8", VA = "0x98DAB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x98DB70", Offset = "0x98DB70", VA = "0x98DB70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x98DC84", Offset = "0x98DC84", VA = "0x98DC84")]
		public void SetLerpValue(float newValue)
		{
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x98DB74", Offset = "0x98DB74", VA = "0x98DB74")]
		private void SlerpRotation()
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x98DC88", Offset = "0x98DC88", VA = "0x98DC88")]
		public TransformRotationLerper()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.SMB
{
	[Token(Token = "0x20002DF")]
	public class SMBIdleRandomizer : StateMachineBehaviour
	{
		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_flavorIdleTriggerParameter;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE97C", Offset = "0x6EE97C")]
		[SerializeField]
		private float m_variationChance;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EE9C8", Offset = "0x6EE9C8")]
		[SerializeField]
		private int m_minLoops;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_maxLoops;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_elapsedTime;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLoop;

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x98C77C", Offset = "0x98C77C", VA = "0x98C77C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x98C784", Offset = "0x98C784", VA = "0x98C784", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x98C844", Offset = "0x98C844", VA = "0x98C844")]
		private void RandomIdleTrigger(Animator animator)
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x98C8A0", Offset = "0x98C8A0", VA = "0x98C8A0")]
		public SMBIdleRandomizer()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class SMBLocomotionLocker : StateMachineBehaviour
	{
		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_lockLocomotion;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SMBState m_executionState;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EEA44", Offset = "0x6EEA44")]
		private float m_normalizedExecuteTime;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_canExecuteInOverrideControllers;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Locomotion m_locomotion;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasExecuted;

		[Token(Token = "0x6001518")]
		[Address(RVA = "0x98C900", Offset = "0x98C900", VA = "0x98C900", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x98CB2C", Offset = "0x98CB2C", VA = "0x98CB2C", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x98CB80", Offset = "0x98CB80", VA = "0x98CB80", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0x98CA28", Offset = "0x98CA28", VA = "0x98CA28")]
		private bool IsStateExecutable(SMBState state)
		{
			return default(bool);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0x98CAC8", Offset = "0x98CAC8", VA = "0x98CAC8")]
		private void Execute()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x98CBB8", Offset = "0x98CBB8", VA = "0x98CBB8")]
		public SMBLocomotionLocker()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class SMBParameterController : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000467")]
		public struct IntParameter
		{
			[Token(Token = "0x40014E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ParameterID;

			[Token(Token = "0x40014E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int NewValue;
		}

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_boolsToEnable;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] m_boolsToDisable;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] m_triggersToSet;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] m_triggersToReset;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntParameter[] m_intsToSet;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SMBState m_executionState;

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x98CBC0", Offset = "0x98CBC0", VA = "0x98CBC0", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x98CE18", Offset = "0x98CE18", VA = "0x98CE18", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x98CE2C", Offset = "0x98CE2C", VA = "0x98CE2C", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x98CBD0", Offset = "0x98CBD0", VA = "0x98CBD0")]
		private void SetParameters(Animator animator)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x98CE40", Offset = "0x98CE40", VA = "0x98CE40")]
		public SMBParameterController()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public enum SMBState
	{
		[Token(Token = "0x4000FE2")]
		OnEnter,
		[Token(Token = "0x4000FE3")]
		OnUpdate,
		[Token(Token = "0x4000FE4")]
		OnExit
	}
}
namespace Cortopia.Scripts.Animation.Events
{
	[Token(Token = "0x20002E3")]
	public abstract class SMBAnimationEvent : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31EC", Offset = "0x6E31EC")]
		private sealed class <>c
		{
			[Token(Token = "0x40014E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40014E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SMBEventCollection, AnimationClip> <>9__7_0;

			[Token(Token = "0x60019DD")]
			[Address(RVA = "0x938F20", Offset = "0x938F20", VA = "0x938F20")]
			public <>c()
			{
			}

			[Token(Token = "0x60019DE")]
			[Address(RVA = "0x938F28", Offset = "0x938F28", VA = "0x938F28")]
			internal AnimationClip <OnStateEnter>b__7_0(SMBEventCollection x)
			{
				return null;
			}
		}

		[Token(Token = "0x4000FE5")]
		private const float ResetTimeThreshold = 0.999f;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinBlendWeight;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SMBEventCollection> EventCollections;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanExecuteInOverrideControllers;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected ISet<AnimationClip> m_eventClips;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<AnimatorClipInfo> sm_animatorClipInfos;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_normalizedTime;

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x93852C", Offset = "0x93852C", VA = "0x93852C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0x938860", Offset = "0x938860", VA = "0x938860", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x938DC0", Offset = "0x938DC0", VA = "0x938DC0", Slot = "18")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F3CE8", Offset = "0x6F3CE8")]
		public virtual void ResetData()
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x938DC4", Offset = "0x938DC4", VA = "0x938DC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F3D20", Offset = "0x6F3D20")]
		public void UpdateEventData(AnimationClip animationClip, int eventIndex = 0)
		{
		}

		[Token(Token = "0x6001527")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x6F3D58", Offset = "0x6F3D58")]
		protected abstract void SetEventParameters(IReadOnlyList<SMBEvent> events);

		[Token(Token = "0x6001528")]
		protected abstract void SetBehaviourReferences(Animator animator);

		[Token(Token = "0x6001529")]
		protected abstract void TriggeredEvent(int eventIndex, int paramIndex);

		[Token(Token = "0x600152A")]
		[Address(RVA = "0x938C08", Offset = "0x938C08", VA = "0x938C08")]
		private void CheckEventFireConditions(SMBEventCollection eventCollection, float normalizedTime, float clipWeight)
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x93871C", Offset = "0x93871C", VA = "0x93871C")]
		private void ResetEvents()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x938DC8", Offset = "0x938DC8", VA = "0x938DC8")]
		protected SMBAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class SMBAudioEvent : SMBAnimationEvent
	{
		[Token(Token = "0x2000469")]
		public enum SMBAudioEventType
		{
			[Token(Token = "0x40014EA")]
			SoundEffect,
			[Token(Token = "0x40014EB")]
			FootStep,
			[Token(Token = "0x40014EC")]
			StopSoundEffect
		}

		[Serializable]
		[Token(Token = "0x200046A")]
		public struct SMBEventParam
		{
			[Token(Token = "0x40014ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SMBAudioEventType[] EventTypes;

			[Token(Token = "0x40014EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SoundEffect[] SoundEffects;

			[Token(Token = "0x60019DF")]
			[Address(RVA = "0x7655DC", Offset = "0x7655DC", VA = "0x7655DC")]
			public SMBEventParam(int size)
			{
			}
		}

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseUnifiedEventCall;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SMBEventParam> EventParams;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterSfxHandler m_characterSFXHandler;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundEffect m_eventSfx;

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x938F30", Offset = "0x938F30", VA = "0x938F30", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x938FE4", Offset = "0x938FE4", VA = "0x938FE4", Slot = "18")]
		public override void ResetData()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x938FE8", Offset = "0x938FE8", VA = "0x938FE8", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x938FEC", Offset = "0x938FEC", VA = "0x938FEC", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x93914C", Offset = "0x93914C", VA = "0x93914C", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x939314", Offset = "0x939314", VA = "0x939314")]
		public SMBAudioEvent()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public class SMBParticleEvent : SMBAnimationEvent
	{
		[Token(Token = "0x200046B")]
		public enum ParticleSystemAction
		{
			[Token(Token = "0x40014F0")]
			Play,
			[Token(Token = "0x40014F1")]
			Stop
		}

		[Serializable]
		[Token(Token = "0x200046C")]
		public struct SMBEventParam
		{
			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ParticleSystemAction[] Actions;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ParticleSystemStopBehavior[] StopBehaviours;

			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool[] IncludeChildren;

			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] ParticleSystemIDs;

			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x765630", Offset = "0x765630", VA = "0x765630")]
			public SMBEventParam(int size)
			{
			}
		}

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SMBEventParam> EventParams;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimationEventParticles m_eventParticleHandler;

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x939424", Offset = "0x939424", VA = "0x939424", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x9394CC", Offset = "0x9394CC", VA = "0x9394CC", Slot = "18")]
		public override void ResetData()
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x9394D0", Offset = "0x9394D0", VA = "0x9394D0", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x9394D4", Offset = "0x9394D4", VA = "0x9394D4", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x939704", Offset = "0x939704", VA = "0x939704")]
		public SMBParticleEvent()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class SMBPickupEvent : SMBAnimationEvent
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterAnimationHandler m_characterAnimationHandler;

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x939844", Offset = "0x939844", VA = "0x939844", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x939848", Offset = "0x939848", VA = "0x939848", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x9398F0", Offset = "0x9398F0", VA = "0x9398F0", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x93992C", Offset = "0x93992C", VA = "0x93992C")]
		public SMBPickupEvent()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class SMBSocketEvent : SMBAnimationEvent
	{
		[Serializable]
		[Token(Token = "0x200046D")]
		public struct SMBEventParam
		{
			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SocketEventType[] EventTypes;

			[Token(Token = "0x40014F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SocketType[] SocketTypes;

			[Token(Token = "0x60019E1")]
			[Address(RVA = "0x765638", Offset = "0x765638", VA = "0x765638")]
			public SMBEventParam(int size)
			{
			}
		}

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SMBEventParam> EventParams;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x939990", Offset = "0x939990", VA = "0x939990", Slot = "18")]
		public override void ResetData()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x939994", Offset = "0x939994", VA = "0x939994", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x939998", Offset = "0x939998", VA = "0x939998", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x939A40", Offset = "0x939A40", VA = "0x939A40", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x939C00", Offset = "0x939C00", VA = "0x939C00")]
		public SMBSocketEvent()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.Constraints
{
	[Token(Token = "0x20002E8")]
	public class CustomParentConstraint : MonoBehaviour
	{
		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEB00", Offset = "0x6EEB00")]
		[SerializeField]
		private Transform m_defaultParent;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_defaultChild;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEB5C", Offset = "0x6EEB5C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EEB5C", Offset = "0x6EEB5C")]
		private float m_weight;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_updateParentTransform;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool m_constrainOverTime;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_constraintBlendTime;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EEBF0", Offset = "0x6EEBF0")]
		private float m_startingWeight;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EEC30", Offset = "0x6EEC30")]
		private float m_targetWeight;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEC70", Offset = "0x6EEC70")]
		[SerializeField]
		private bool m_constrainPosition;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_keepCurrentPositionOffsets;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 m_customPositionOffset;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EECDC", Offset = "0x6EECDC")]
		[SerializeField]
		private bool m_constrainRotation;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_keepCurrentRotationOffset;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 m_customRotationOffset;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_parent;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_child;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_childStartingPosition;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_childStartingRotation;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_childPositionOffset;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Matrix4x4 m_parentMatrix;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool m_isConstraintActive;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_elapsedTime;

		[Token(Token = "0x170001CA")]
		public float Weight
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x9356DC", Offset = "0x9356DC", VA = "0x9356DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x9356E4", Offset = "0x9356E4", VA = "0x9356E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x935C90", Offset = "0x935C90", VA = "0x935C90")]
		public void EnableConstraint(Transform newParent, Transform newChild)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x935F18", Offset = "0x935F18", VA = "0x935F18")]
		public void EnableConstraint(Transform newChild)
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x935F2C", Offset = "0x935F2C", VA = "0x935F2C")]
		public void EnableConstraint()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x935F34", Offset = "0x935F34", VA = "0x935F34")]
		public void DisableConstraint()
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x935934", Offset = "0x935934", VA = "0x935934")]
		private void UpdateParentPositionTransforms()
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x935ACC", Offset = "0x935ACC", VA = "0x935ACC")]
		private void UpdateParentRotationTransforms()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x935ED8", Offset = "0x935ED8", VA = "0x935ED8")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x935F3C", Offset = "0x935F3C", VA = "0x935F3C")]
		public CustomParentConstraint()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class LerpConstraint : MonoBehaviour
	{
		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EED48", Offset = "0x6EED48")]
		[SerializeField]
		private Transform m_parentJoint;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_childJoint;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEDA4", Offset = "0x6EEDA4")]
		[SerializeField]
		private bool m_constrainPosition;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_keepPositionOffset;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_positionLerpStrength;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEE10", Offset = "0x6EEE10")]
		[SerializeField]
		private bool m_constrainRotation;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_keepRotationOffset;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_rotationLerpStrength;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEE7C", Offset = "0x6EEE7C")]
		[SerializeField]
		private bool m_constrainOnStart;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_constrainActive;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_childPositionOffset;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_childRotationOffset;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_parentRotationOffset;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Matrix4x4 m_parentMatrix;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_deltaAngle;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_deltaDistance;

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x935FD0", Offset = "0x935FD0", VA = "0x935FD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x936204", Offset = "0x936204", VA = "0x936204")]
		private void Update()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x935FE0", Offset = "0x935FE0", VA = "0x935FE0")]
		public void ActivateConstraint()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x93672C", Offset = "0x93672C", VA = "0x93672C")]
		public void DeactivateConstraint()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x936214", Offset = "0x936214", VA = "0x936214")]
		private void Constrain()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x9366EC", Offset = "0x9366EC", VA = "0x9366EC")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x936734", Offset = "0x936734", VA = "0x936734")]
		public LerpConstraint()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class LookAtPlayer : LookIKGeneric
	{
		[Token(Token = "0x400101F")]
		private const float TargetUpdateSpeed = 0.5f;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_constraintOnStart;

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x93673C", Offset = "0x93673C", VA = "0x93673C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x93674C", Offset = "0x93674C", VA = "0x93674C")]
		public void UpdateTarget()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x936838", Offset = "0x936838", VA = "0x936838")]
		public LookAtPlayer()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public class LookIKGeneric : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046E")]
		public class JointConstraint
		{
			[Token(Token = "0x40014F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Joint;

			[Token(Token = "0x40014F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 RotationForwardOffset;

			[Token(Token = "0x40014FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float LookWeight;

			[Token(Token = "0x40014FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public Quaternion CurrentAnimatorRotation;

			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x9371F0", Offset = "0x9371F0", VA = "0x9371F0")]
			public JointConstraint()
			{
			}
		}

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEED8", Offset = "0x6EEED8")]
		[SerializeField]
		private JointConstraint[] m_eyeJoints;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JointConstraint m_headJoint;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JointConstraint m_chestJoint;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private JointConstraint[] m_additionalJoints;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEF54", Offset = "0x6EEF54")]
		[SerializeField]
		private float m_defaultBlendSpeed;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve m_constraintTweenCurve;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform m_target;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isIKActive;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_masterLerpValue;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_targetWeight;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_lerpSpeed;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_startLerpValue;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_startPosition;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_lerpProgression;

		[Token(Token = "0x170001CB")]
		public Transform HeadJoint
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x934BB8", Offset = "0x934BB8", VA = "0x934BB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x9368C0", Offset = "0x9368C0", VA = "0x9368C0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x936ED8", Offset = "0x936ED8", VA = "0x936ED8")]
		public void EnableLookIK(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x9351FC", Offset = "0x9351FC", VA = "0x9351FC")]
		public void EnableLookIK(Transform target)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x9350A0", Offset = "0x9350A0", VA = "0x9350A0")]
		public void EnableLookIK(Transform target, float blendSpeed)
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0x935450", Offset = "0x935450", VA = "0x935450")]
		public void DisableLookIK()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0x93538C", Offset = "0x93538C", VA = "0x93538C")]
		public void DisableLookIK(float blendSpeed)
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0x936914", Offset = "0x936914", VA = "0x936914")]
		private void SetCurrentAnimationValues()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x936F48", Offset = "0x936F48", VA = "0x936F48")]
		private void InitilizeLerp(float blendSpeed)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x936B7C", Offset = "0x936B7C", VA = "0x936B7C")]
		private void LookIKSolver()
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0x936FBC", Offset = "0x936FBC", VA = "0x936FBC")]
		private void ApplyConstraintBlend(JointConstraint jointConstraint, Vector3 targetLookAtPoint, float masterLerpValue)
		{
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0x93683C", Offset = "0x93683C", VA = "0x93683C")]
		public LookIKGeneric()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class MultiLookAtConstraint : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046F")]
		public class JointConstraint
		{
			[Token(Token = "0x40014FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Joint;

			[Token(Token = "0x40014FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 RotationForwardOffset;

			[Token(Token = "0x40014FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float ConstrainWeight;

			[Token(Token = "0x60019E3")]
			[Address(RVA = "0x937854", Offset = "0x937854", VA = "0x937854")]
			public JointConstraint()
			{
			}
		}

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EEFB0", Offset = "0x6EEFB0")]
		[SerializeField]
		private bool m_lookAtPlayer;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EF00C", Offset = "0x6EF00C")]
		[SerializeField]
		private JointConstraint[] m_jointConstraints;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EF058", Offset = "0x6EF058")]
		[SerializeField]
		private bool m_constraintOnStart;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_defaultBlendSpeed;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isConstraintActive;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_masterLerpValue;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_targetWeight;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_lerpSpeed;

		[Token(Token = "0x6001562")]
		[Address(RVA = "0x9371F8", Offset = "0x9371F8", VA = "0x9371F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x937348", Offset = "0x937348", VA = "0x937348")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0x93777C", Offset = "0x93777C", VA = "0x93777C")]
		public void EnableConstraint(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x9377C8", Offset = "0x9377C8", VA = "0x9377C8")]
		public void EnableConstraint(float blendSpeed)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x937334", Offset = "0x937334", VA = "0x937334")]
		public void EnableConstraint(Transform target, float blendSpeed)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x9377D8", Offset = "0x9377D8", VA = "0x9377D8")]
		public void DisableConstraint(float blendSpeed)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x937464", Offset = "0x937464", VA = "0x937464")]
		private void ConstraintHandler()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0x9377E4", Offset = "0x9377E4", VA = "0x9377E4")]
		public MultiLookAtConstraint()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class TranslationToRotationConstraint : MonoBehaviour
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EF0B4", Offset = "0x6EF0B4")]
		[SerializeField]
		private Transform m_motionSource;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_motionAxis;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EF110", Offset = "0x6EF110")]
		private Vector3 m_rotationAxis;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_rotationPerUnit;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EF16C", Offset = "0x6EF16C")]
		[SerializeField]
		private bool m_enableOnAwake;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_isAnimatorDriven;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x6EF1C8", Offset = "0x6EF1C8")]
		private float m_weight;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_motionSourceLastFramePosition;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_motionSourceDeltaMovement;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_isEnabled;

		[Token(Token = "0x170001CC")]
		public float Weight
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x93785C", Offset = "0x93785C", VA = "0x93785C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x937864", Offset = "0x937864", VA = "0x937864")]
		private void Awake()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x937870", Offset = "0x937870", VA = "0x937870")]
		private void Update()
		{
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x937A90", Offset = "0x937A90", VA = "0x937A90")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x937958", Offset = "0x937958", VA = "0x937958")]
		private void ApplyConstraint()
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x937918", Offset = "0x937918", VA = "0x937918")]
		private void UpdateLastFramePosition()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0x937B38", Offset = "0x937B38", VA = "0x937B38")]
		public void EnableConstraint()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0x937B44", Offset = "0x937B44", VA = "0x937B44")]
		public void DisableConstraint()
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x937B4C", Offset = "0x937B4C", VA = "0x937B4C")]
		public TranslationToRotationConstraint()
		{
		}
	}
}
namespace Cortopia.Scripts.AI
{
	[Token(Token = "0x20002EE")]
	public class DialogueBehaviour : BE_AI
	{
		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_delayTimer;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF208", Offset = "0x6EF208")]
		private bool <IsDelayingSpeak>k__BackingField;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF218", Offset = "0x6EF218")]
		private float <SpeakDelay>k__BackingField;

		[Token(Token = "0x170001CD")]
		public bool IsDelayingSpeak
		{
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x92F670", Offset = "0x92F670", VA = "0x92F670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3D90", Offset = "0x6F3D90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x92FD3C", Offset = "0x92FD3C", VA = "0x92FD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3DA0", Offset = "0x6F3DA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public float SpeakDelay
		{
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x92FD50", Offset = "0x92FD50", VA = "0x92FD50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3DB0", Offset = "0x6F3DB0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x92FD34", Offset = "0x92FD34", VA = "0x92FD34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3DC0", Offset = "0x6F3DC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0x92FD58", Offset = "0x92FD58", VA = "0x92FD58", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0x92FDCC", Offset = "0x92FDCC", VA = "0x92FDCC")]
		public void EnableDialogueBehaviour(BehaviourSystem dialogue)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x92FDFC", Offset = "0x92FDFC", VA = "0x92FDFC")]
		public void DisableDialogueBehaviour()
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x92FE08", Offset = "0x92FE08", VA = "0x92FE08")]
		public void SkipDialogueLine()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x92FD20", Offset = "0x92FD20", VA = "0x92FD20")]
		public void ResetDelay()
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x92FE14", Offset = "0x92FE14", VA = "0x92FE14")]
		public DialogueBehaviour()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Tutorial
{
	[Token(Token = "0x20002EF")]
	public class ClimbTutorial : TutorialBehaviour
	{
		[Token(Token = "0x2000470")]
		private enum TutorialState
		{
			[Token(Token = "0x4001500")]
			FirstRoot,
			[Token(Token = "0x4001501")]
			SecondRoot,
			[Token(Token = "0x4001502")]
			ThirdRoot,
			[Token(Token = "0x4001503")]
			Rotate
		}

		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E31FC", Offset = "0x6E31FC")]
		private sealed class <HideRotationHintRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClimbTutorial <>4__this;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019E7")]
				[Address(RVA = "0x932144", Offset = "0x932144", VA = "0x932144", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019E9")]
				[Address(RVA = "0x9321B4", Offset = "0x9321B4", VA = "0x9321B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019E4")]
			[Address(RVA = "0x931F68", Offset = "0x931F68", VA = "0x931F68")]
			[DebuggerHidden]
			public <HideRotationHintRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x932088", Offset = "0x932088", VA = "0x932088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x93208C", Offset = "0x93208C", VA = "0x93208C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x93214C", Offset = "0x93214C", VA = "0x93214C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001046")]
		private const float HideRotationHintAfterDuration = 8f;

		[Token(Token = "0x4001047")]
		private const float EndAfterDuration = 4f;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Grabbable[] m_roots;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CharacterReactor[] m_characterReactors;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform[] m_narrationSubtitleTransforms;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TutorialState m_currentState;

		[Token(Token = "0x170001CF")]
		private bool IncludeRotationInstruction
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x931608", Offset = "0x931608", VA = "0x931608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0x931610", Offset = "0x931610", VA = "0x931610", Slot = "7")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0x9319B0", Offset = "0x9319B0", VA = "0x9319B0")]
		public void OnGrabbedFirstRoot(Grabber grabber)
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0x931B2C", Offset = "0x931B2C", VA = "0x931B2C")]
		public void OnGrabbedSecondRoot(Grabber grabber)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x931B84", Offset = "0x931B84", VA = "0x931B84")]
		public void OnGrabbedThirdRoot(Grabber grabber)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x931C7C", Offset = "0x931C7C", VA = "0x931C7C")]
		public void OnHideRotationHint()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x931C8C", Offset = "0x931C8C", VA = "0x931C8C", Slot = "8")]
		protected override void OnTutorialEnded()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x9316F0", Offset = "0x9316F0", VA = "0x9316F0")]
		private void AddGrabBeginListeners()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x931D74", Offset = "0x931D74", VA = "0x931D74")]
		private void RemoveGrabBeginListeners()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0x931898", Offset = "0x931898", VA = "0x931898")]
		private void ShowRootAtCurrentState()
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0x931A18", Offset = "0x931A18", VA = "0x931A18")]
		private void PlayBanterAtCurrentState()
		{
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0x931C08", Offset = "0x931C08", VA = "0x931C08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3DD0", Offset = "0x6F3DD0")]
		private IEnumerator HideRotationHintRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0x931F94", Offset = "0x931F94", VA = "0x931F94")]
		public ClimbTutorial()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class StartGameTutorial : TutorialBehaviour
	{
		[Token(Token = "0x2000472")]
		private enum TutorialState
		{
			[Token(Token = "0x4001508")]
			Move,
			[Token(Token = "0x4001509")]
			Interact,
			[Token(Token = "0x400150A")]
			FindKey,
			[Token(Token = "0x400150B")]
			OpenHatch
		}

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_locationIndicator;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InteractableObject m_hatchInteractionLocked;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private InteractableObject m_hatchInteractionUnlocked;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InteractableObject m_keyInteraction;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TutorialState m_currentState;

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x9321BC", Offset = "0x9321BC", VA = "0x9321BC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0x932274", Offset = "0x932274", VA = "0x932274", Slot = "7")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0x932380", Offset = "0x932380", VA = "0x932380")]
		public void OnEnterLocationTrigger()
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x932408", Offset = "0x932408", VA = "0x932408")]
		public void OnHatchAnimationCompleted()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0x932470", Offset = "0x932470", VA = "0x932470")]
		public void OnGotKeyAnimationCompleted()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0x932500", Offset = "0x932500", VA = "0x932500")]
		public StartGameTutorial()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class TutorialBehaviour : BE_AI
	{
		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6E320C", Offset = "0x6E320C")]
		private sealed class <EndAfterDelay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400150C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400150D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400150E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialBehaviour <>4__this;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60019ED")]
				[Address(RVA = "0x932A00", Offset = "0x932A00", VA = "0x932A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60019EF")]
				[Address(RVA = "0x932A70", Offset = "0x932A70", VA = "0x932A70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x93290C", Offset = "0x93290C", VA = "0x93290C")]
			[DebuggerHidden]
			public <EndAfterDelay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x932938", Offset = "0x932938", VA = "0x932938", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60019EC")]
			[Address(RVA = "0x93293C", Offset = "0x93293C", VA = "0x93293C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60019EE")]
			[Address(RVA = "0x932A08", Offset = "0x932A08", VA = "0x932A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialScroll[] m_scrolls;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent m_onTutorialEnded;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TutorialScroll m_currentScroll;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF2B8", Offset = "0x6EF2B8")]
		private int <CurrentObjective>k__BackingField;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF2C8", Offset = "0x6EF2C8")]
		private int <TargetObjective>k__BackingField;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF2D8", Offset = "0x6EF2D8")]
		private int <NumberOfObjectives>k__BackingField;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF2E8", Offset = "0x6EF2E8")]
		private float <EndDelay>k__BackingField;

		[Token(Token = "0x170001D0")]
		protected int CurrentObjective
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x932504", Offset = "0x932504", VA = "0x932504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E34", Offset = "0x6F3E34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x93250C", Offset = "0x93250C", VA = "0x93250C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E44", Offset = "0x6F3E44")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		protected int TargetObjective
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x932514", Offset = "0x932514", VA = "0x932514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E54", Offset = "0x6F3E54")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x93251C", Offset = "0x93251C", VA = "0x93251C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E64", Offset = "0x6F3E64")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		protected int NumberOfObjectives
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x932524", Offset = "0x932524", VA = "0x932524")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E74", Offset = "0x6F3E74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x93252C", Offset = "0x93252C", VA = "0x93252C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E84", Offset = "0x6F3E84")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		protected float EndDelay
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x932534", Offset = "0x932534", VA = "0x932534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3E94", Offset = "0x6F3E94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x93253C", Offset = "0x93253C", VA = "0x93253C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3EA4", Offset = "0x6F3EA4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x932270", Offset = "0x932270", VA = "0x932270", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x9325E0", Offset = "0x9325E0", VA = "0x9325E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x9316EC", Offset = "0x9316EC", VA = "0x9316EC", Slot = "7")]
		public virtual void StartTutorial()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x931A08", Offset = "0x931A08", VA = "0x931A08")]
		public void SetObjectiveCompleted()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x932724", Offset = "0x932724", VA = "0x932724")]
		public void HasCompletedObjective(BE_Action action)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x9325E8", Offset = "0x9325E8", VA = "0x9325E8")]
		public bool TryOpenNextScroll()
		{
			return default(bool);
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x9327A4", Offset = "0x9327A4", VA = "0x9327A4")]
		public void CloseCurrentScroll()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x931BFC", Offset = "0x931BFC", VA = "0x931BFC")]
		public void SkipToLastObjective()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x9316E4", Offset = "0x9316E4", VA = "0x9316E4")]
		protected void SetNumberOfObjectives(int objectivesNum)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x931F1C", Offset = "0x931F1C", VA = "0x931F1C", Slot = "8")]
		protected virtual void OnTutorialEnded()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x931BF4", Offset = "0x931BF4", VA = "0x931BF4")]
		protected void SetEndDelay(float newEndDelay)
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x93283C", Offset = "0x93283C", VA = "0x93283C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x6F3EB4", Offset = "0x6F3EB4")]
		private IEnumerator EndAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x9328B0", Offset = "0x9328B0", VA = "0x9328B0")]
		private void EndTutorial()
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x932544", Offset = "0x932544", VA = "0x932544")]
		private void DeactivateAllScrolls()
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x932020", Offset = "0x932020", VA = "0x932020")]
		public TutorialBehaviour()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.NPC.Workers
{
	[Token(Token = "0x20002F2")]
	public abstract class CardWork : Work
	{
		[Token(Token = "0x4001058")]
		protected const float RestFactor = 0.6f;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CastlesTree m_castlesTree;

		[Token(Token = "0x170001D4")]
		public CastlesTree CastlesTree
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x92FE24", Offset = "0x92FE24", VA = "0x92FE24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x92FE2C", Offset = "0x92FE2C", VA = "0x92FE2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A9")]
		public abstract void CreateWork(float duration, Transform location);

		[Token(Token = "0x60015AA")]
		public abstract void ReplaceWithRest();

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x92FE8C", Offset = "0x92FE8C", VA = "0x92FE8C", Slot = "4")]
		public override void OnWorkStarted(Character character)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x930074", Offset = "0x930074", VA = "0x930074", Slot = "5")]
		public override void OnWorkCompleted(Character character)
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x930218", Offset = "0x930218", VA = "0x930218")]
		protected CardWork()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class LumberjackWork : CardWork
	{
		[Token(Token = "0x2000474")]
		public enum LumberjackWorkType
		{
			[Token(Token = "0x4001510")]
			CutWood = 1,
			[Token(Token = "0x4001511")]
			CutTree,
			[Token(Token = "0x4001512")]
			Rest
		}

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LumberjackWorkType m_workType;

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x9302C8", Offset = "0x9302C8", VA = "0x9302C8", Slot = "6")]
		public override void CreateWork(float duration, Transform location)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x9303F4", Offset = "0x9303F4", VA = "0x9303F4", Slot = "7")]
		public override void ReplaceWithRest()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x930458", Offset = "0x930458", VA = "0x930458")]
		public LumberjackWork()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class NPCWorker : BE_AI
	{
		[Token(Token = "0x2000475")]
		public enum WorkerState
		{
			[Token(Token = "0x4001514")]
			Idle,
			[Token(Token = "0x4001515")]
			Moving,
			[Token(Token = "0x4001516")]
			Working
		}

		[Token(Token = "0x400105B")]
		private const float TaskInteractionDistance = 0.5f;

		[Token(Token = "0x400105C")]
		private const float RemainingWorkDecreaseFactor = 0.5f;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CardWork[] m_work;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WorkerState m_workerState;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_remainingDuration;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CardWork m_currentWork;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task m_currentTask;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ITaskable m_taskable;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isAtTaskLocation;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_idle;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Queue<CardWork> m_remainingWork;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CardWork[] m_workCopy;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_workCount;

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x930464", Offset = "0x930464", VA = "0x930464")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x930590", Offset = "0x930590", VA = "0x930590")]
		public void IsIdle(BE_Action action)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x93068C", Offset = "0x93068C", VA = "0x93068C")]
		public void HasCompletedTask(BE_Action action)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x93085C", Offset = "0x93085C", VA = "0x93085C")]
		public void HasReachedTask(BE_Action action)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x9309D8", Offset = "0x9309D8", VA = "0x9309D8")]
		public void PickNewTask(BE_Action action)
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x930A0C", Offset = "0x930A0C", VA = "0x930A0C")]
		private void PickNextAssignment()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x930A9C", Offset = "0x930A9C", VA = "0x930A9C")]
		public void PerformIdle(BE_Action action)
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x930AF8", Offset = "0x930AF8", VA = "0x930AF8")]
		public void PerformMoveToTask(BE_Action action)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x930B3C", Offset = "0x930B3C", VA = "0x930B3C")]
		public void PerformTask(BE_Action action)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x930D74", Offset = "0x930D74", VA = "0x930D74")]
		public void EnterIdle()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x930D80", Offset = "0x930D80", VA = "0x930D80")]
		public void ExitIdle()
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x930D88", Offset = "0x930D88", VA = "0x930D88")]
		public void SetNewWork(Work[] newWork)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x930E34", Offset = "0x930E34", VA = "0x930E34")]
		public void AddSelectedWork(CardWork work)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x930F60", Offset = "0x930F60", VA = "0x930F60")]
		public void SetTaskDurationRemaining(float remainingDuration)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x930AD8", Offset = "0x930AD8", VA = "0x930AD8")]
		private bool TryChangeWorkerState(WorkerState workerState)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x930F68", Offset = "0x930F68", VA = "0x930F68")]
		private void CreateNewRandomWork()
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x9304C8", Offset = "0x9304C8", VA = "0x9304C8")]
		private void AddWorkToQueue()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x93104C", Offset = "0x93104C", VA = "0x93104C")]
		private void OnTaskLocationReached(bool success)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x9311E8", Offset = "0x9311E8", VA = "0x9311E8")]
		public NPCWorker()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class PainterWork : CardWork
	{
		[Token(Token = "0x2000476")]
		public enum PainterWorkType
		{
			[Token(Token = "0x4001518")]
			Paint = 1,
			[Token(Token = "0x4001519")]
			Rest
		}

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PainterWorkType m_workType;

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x93128C", Offset = "0x93128C", VA = "0x93128C", Slot = "6")]
		public override void CreateWork(float duration, Transform location)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x931390", Offset = "0x931390", VA = "0x931390", Slot = "7")]
		public override void ReplaceWithRest()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x9313F4", Offset = "0x9313F4", VA = "0x9313F4")]
		public PainterWork()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public struct Task
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF358", Offset = "0x6EF358")]
		private int <AnimationParam>k__BackingField;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF368", Offset = "0x6EF368")]
		private TaskType <TaskType>k__BackingField;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF378", Offset = "0x6EF378")]
		private float <RemainingDuration>k__BackingField;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF388", Offset = "0x6EF388")]
		private readonly Transform <Location>k__BackingField;

		[Token(Token = "0x170001D5")]
		public int AnimationParam
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x76546C", Offset = "0x76546C", VA = "0x76546C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F18", Offset = "0x6F3F18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x765474", Offset = "0x765474", VA = "0x765474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F28", Offset = "0x6F3F28")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public TaskType TaskType
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x76547C", Offset = "0x76547C", VA = "0x76547C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F38", Offset = "0x6F3F38")]
			get
			{
				return default(TaskType);
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x765484", Offset = "0x765484", VA = "0x765484")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F48", Offset = "0x6F3F48")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public float RemainingDuration
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x76548C", Offset = "0x76548C", VA = "0x76548C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F58", Offset = "0x6F3F58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x765494", Offset = "0x765494", VA = "0x765494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F68", Offset = "0x6F3F68")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public Transform Location
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x76549C", Offset = "0x76549C", VA = "0x76549C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F78", Offset = "0x6F3F78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x7654A4", Offset = "0x7654A4", VA = "0x7654A4")]
		public Task(int animationParam, TaskType taskType, float duration, Transform location)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x7654B4", Offset = "0x7654B4", VA = "0x7654B4")]
		public void ReplaceWithRest()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public enum TaskType
	{
		[Token(Token = "0x400106E")]
		Unassigned,
		[Token(Token = "0x400106F")]
		Rest,
		[Token(Token = "0x4001070")]
		Work
	}
	[Token(Token = "0x20002F8")]
	public class TrimmerWork : CardWork
	{
		[Token(Token = "0x2000477")]
		public enum TrimmerWorkType
		{
			[Token(Token = "0x400151B")]
			Trim = 1,
			[Token(Token = "0x400151C")]
			Sharpen,
			[Token(Token = "0x400151D")]
			Rest
		}

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrimmerWorkType m_workType;

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x931424", Offset = "0x931424", VA = "0x931424", Slot = "6")]
		public override void CreateWork(float duration, Transform location)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x93152C", Offset = "0x93152C", VA = "0x93152C", Slot = "7")]
		public override void ReplaceWithRest()
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x931590", Offset = "0x931590", VA = "0x931590")]
		public TrimmerWork()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class Work : MonoBehaviour
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MathUtils.MinMax m_duration;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x6EF3B8", Offset = "0x6EF3B8")]
		[SerializeField]
		private CharacterEvent m_onWorkStarted;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterEvent m_onWorkCompleted;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6EF414", Offset = "0x6EF414")]
		private Task <Task>k__BackingField;

		[Token(Token = "0x170001D9")]
		public Task Task
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x930058", Offset = "0x930058", VA = "0x930058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F88", Offset = "0x6F3F88")]
			get
			{
				return default(Task);
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x9303E0", Offset = "0x9303E0", VA = "0x9303E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x6F3F98", Offset = "0x6F3F98")]
			protected set
			{
			}
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x92FFE8", Offset = "0x92FFE8", VA = "0x92FFE8", Slot = "4")]
		public virtual void OnWorkStarted(Character character)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x9301A8", Offset = "0x9301A8", VA = "0x9301A8", Slot = "5")]
		public virtual void OnWorkCompleted(Character character)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x92FE80", Offset = "0x92FE80", VA = "0x92FE80")]
		protected float GetRandomDuration()
		{
			return default(float);
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x93021C", Offset = "0x93021C", VA = "0x93021C")]
		public Work()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class WorkScheduler : MonoBehaviour
	{
		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NPCWorker m_npcWorker;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_onlyFireOnce;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Work[] m_newWork;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_fired;

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x93159C", Offset = "0x93159C", VA = "0x93159C")]
		public void ScheduleNewWork()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x9315F8", Offset = "0x9315F8", VA = "0x9315F8")]
		public WorkScheduler()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Actions
{
	[Token(Token = "0x20002FB")]
	public class AddLookAtConstraint : BE_Action
	{
		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float BlendSpeed;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterData CharacterData;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool LookAtPlayer;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CharacterData TargetCharacterData;

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x92E754", Offset = "0x92E754", VA = "0x92E754", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x92E7A8", Offset = "0x92E7A8", VA = "0x92E7A8", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x92E7D0", Offset = "0x92E7D0", VA = "0x92E7D0")]
		private void LookAtTarget()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x92EA58", Offset = "0x92EA58", VA = "0x92EA58")]
		public AddLookAtConstraint()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class Animate : BE_Action
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EF454", Offset = "0x6EF454")]
		public CharacterData CharacterDataOverride;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ParameterName;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimatorParameterType ParameterType;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FloatValue;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int IntValue;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool BoolValue;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimationData sm_animationData;

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x92EA68", Offset = "0x92EA68", VA = "0x92EA68", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x92EABC", Offset = "0x92EABC", VA = "0x92EABC", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x92ED10", Offset = "0x92ED10", VA = "0x92ED10")]
		private void TriggerAnimation(AnimationData animationData)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x92EE50", Offset = "0x92EE50", VA = "0x92EE50")]
		public Animate()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class CompleteDialogue : BE_Action
	{
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x92EE58", Offset = "0x92EE58", VA = "0x92EE58", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x92EEAC", Offset = "0x92EEAC", VA = "0x92EEAC", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0x92EF34", Offset = "0x92EF34", VA = "0x92EF34")]
		public CompleteDialogue()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class FlavorTalk : BE_Action
	{
		[Token(Token = "0x4001085")]
		private const string FlavorTalkParamTypeID = "FlavorTalkType";

		[Token(Token = "0x4001086")]
		private const string FlavorTalkParamTriggerID = "FlavorTalk";

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x6EF48C", Offset = "0x6EF48C")]
		public CharacterData CharacterDataOverride;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int FlavorTalkID;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimationData sm_flavorTalkAnimationTypeData;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AnimationData sm_flavorTalkAnimationTriggerData;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0x92EF3C", Offset = "0x92EF3C", VA = "0x92EF3C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0x92EF90", Offset = "0x92EF90", VA = "0x92EF90", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x92F0EC", Offset = "0x92F0EC", VA = "0x92F0EC")]
		private void TriggerAnimations()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x92F2B0", Offset = "0x92F2B0", VA = "0x92F2B0")]
		public FlavorTalk()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class RemoveLookAtConstraint : BE_Action
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float BlendSpeed;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterData CharacterData;

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x92F2B8", Offset = "0x92F2B8", VA = "0x92F2B8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x92F30C", Offset = "0x92F30C", VA = "0x92F30C", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x92F334", Offset = "0x92F334", VA = "0x92F334")]
		private void ResetLookAtTarget()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x92F414", Offset = "0x92F414", VA = "0x92F414")]
		public RemoveLookAtConstraint()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class SetBoolVariable : BE_Action
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoolVariable BoolVariable;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool BoolValue;

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x92F424", Offset = "0x92F424", VA = "0x92F424", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x92F478", Offset = "0x92F478", VA = "0x92F478", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x92F4B4", Offset = "0x92F4B4", VA = "0x92F4B4")]
		public SetBoolVariable()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class SetFacialExpression : BE_Action
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExpressionData[] ExpressionData;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogueBehaviour m_dialogueBehaviour;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x92F4BC", Offset = "0x92F4BC", VA = "0x92F4BC", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x92F510", Offset = "0x92F510", VA = "0x92F510", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x92F678", Offset = "0x92F678", VA = "0x92F678")]
		public SetFacialExpression()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class SetIntVariable : BE_Action
	{
		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable IntVariable;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int IntValue;

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x92F680", Offset = "0x92F680", VA = "0x92F680", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x92F6D4", Offset = "0x92F6D4", VA = "0x92F6D4", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x92F724", Offset = "0x92F724", VA = "0x92F724")]
		public SetIntVariable()
		{
		}
	}
	[Token(Token = "0x2000303")]
	public class ShowOptions : BE_Action
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable SelectedOptionIndex;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] OptionTitles;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_showOptions;

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x92F72C", Offset = "0x92F72C", VA = "0x92F72C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x92F780", Offset = "0x92F780", VA = "0x92F780", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x92F908", Offset = "0x92F908", VA = "0x92F908")]
		private void SetIntVariable(int optionIndex)
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x92F9B8", Offset = "0x92F9B8", VA = "0x92F9B8")]
		public ShowOptions()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class Speak : BE_Action
	{
		[Token(Token = "0x2000478")]
		private enum SpeakState
		{
			[Token(Token = "0x400151F")]
			Delay,
			[Token(Token = "0x4001520")]
			Speak,
			[Token(Token = "0x4001521")]
			WaitForFinish
		}

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CharacterVoiceLine Line;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogueBehaviour m_dialogueBehaviour;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpeakState m_currentState;

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x92FA20", Offset = "0x92FA20", VA = "0x92FA20", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x92FA74", Offset = "0x92FA74", VA = "0x92FA74", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x92FC98", Offset = "0x92FC98", VA = "0x92FC98")]
		private void ProcessDelay()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x92FD48", Offset = "0x92FD48", VA = "0x92FD48")]
		public Speak()
		{
		}
	}
}
