using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using ByteDance.Picoverse.ALog;
using ByteDance.Picoverse.AudioSystem;
using ByteDance.Picoverse.AvatarStudio;
using ByteDance.Picoverse.Builder;
using ByteDance.Picoverse.Builder.Components;
using ByteDance.Picoverse.Builder.Data;
using ByteDance.Picoverse.Builder.DataModels;
using ByteDance.Picoverse.Builder.DataModelsInternal;
using ByteDance.Picoverse.Builder.Prop;
using ByteDance.Picoverse.Builder.UI;
using ByteDance.Picoverse.Character;
using ByteDance.Picoverse.Config;
using ByteDance.Picoverse.Data;
using ByteDance.Picoverse.GradientEffect;
using ByteDance.Picoverse.InputSystem;
using ByteDance.Picoverse.InputSystem.Interactable;
using ByteDance.Picoverse.Multiplayer;
using ByteDance.Picoverse.Multiplayer.Report;
using ByteDance.Picoverse.Network;
using ByteDance.Picoverse.Scene;
using ByteDance.Picoverse.Systems;
using ByteDance.Picoverse.Systems.WorldBuilderProps;
using ByteDance.Picoverse.UIFramework;
using ByteDance.Picoverse.UIFramework.UIExtension;
using ByteDance.Picoverse.Wwise;
using Bytedance.Picoverse.GameCommon;
using Bytedance.Picoverse.Multiplayer;
using CatJson;
using CatJson.Object;
using Com.Bytedance.Picoverse.Protobuf.Engine;
using Com.Bytedance.Picoverse.Protobuf.Map;
using Com.Bytedance.Picoverse.Protobuf.World;
using Com.Bytedance.Picoverse.Protobuf.World.Element;
using ConfigToolGenerator;
using Cysharp.Threading.Tasks;
using Cysharp.Threading.Tasks.CompilerServices;
using DG.Tweening;
using Data.Trackers;
using GameCommon;
using Google.Protobuf;
using Il2CppDummyDll;
using Linefy.Primitives;
using LitJson;
using Microsoft.CodeAnalysis;
using Multiplayer;
using PaintIn3D;
using Pico.Platform;
using Pico.Platform.Models;
using Picoverse.Common;
using Picoverse.Keyboard;
using Poliq;
using Poliq.Foundation.FSM;
using Poliq.Foundation.Log;
using Poliq.Foundation.Pool;
using Poliq.Framework;
using Poliq.Framework.Command;
using Poliq.Framework.DataNode;
using Poliq.Framework.Network;
using Poliq.Framework.Systems;
using Seeker;
using TMPro;
using Unity.Netcode;
using Unity.Netcode.Components;
using Unity.Profiling;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.XR;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.Serialization;
using UnityEngine.UI;
using UnityEngine.UI.ProceduralImage;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using XLua;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000001")]
internal class <Module>
{
	[Token(Token = "0x6000001")]
	[Address(RVA = "0x2E7C314", Offset = "0x2E7C314", VA = "0x2E7C314")]
	static <Module>()
	{
	}
}
namespace Microsoft.CodeAnalysis
{
	[Token(Token = "0x2000002")]
	[CompilerGenerated]
	[Microsoft.CodeAnalysis.Embedded]
	internal sealed class EmbeddedAttribute : Attribute
	{
		[Token(Token = "0x6000002")]
		[Address(RVA = "0x2E7C630", Offset = "0x2E7C630", VA = "0x2E7C630")]
		public EmbeddedAttribute()
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000003")]
	[Microsoft.CodeAnalysis.Embedded]
	[CompilerGenerated]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Field | AttributeTargets.Event | AttributeTargets.Parameter | AttributeTargets.ReturnValue | AttributeTargets.GenericParameter, AllowMultiple = false, Inherited = false)]
	internal sealed class NullableAttribute : Attribute
	{
		[Token(Token = "0x4000001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] NullableFlags;

		[Token(Token = "0x6000003")]
		[Address(RVA = "0x2E7C638", Offset = "0x2E7C638", VA = "0x2E7C638")]
		public NullableAttribute(byte P_0)
		{
		}

		[Token(Token = "0x6000004")]
		[Address(RVA = "0x2E7C6C0", Offset = "0x2E7C6C0", VA = "0x2E7C6C0")]
		public NullableAttribute(byte[] P_0)
		{
		}
	}
	[Token(Token = "0x2000004")]
	[CompilerGenerated]
	[Microsoft.CodeAnalysis.Embedded]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Method | AttributeTargets.Interface | AttributeTargets.Delegate, AllowMultiple = false, Inherited = false)]
	internal sealed class NullableContextAttribute : Attribute
	{
		[Token(Token = "0x4000002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte Flag;

		[Token(Token = "0x6000005")]
		[Address(RVA = "0x2E7C6F0", Offset = "0x2E7C6F0", VA = "0x2E7C6F0")]
		public NullableContextAttribute(byte P_0)
		{
		}
	}
}
[Token(Token = "0x2000005")]
public class AssetLoadConfig : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000006")]
	[CompilerGenerated]
	private struct <LoadClothes>d__5 : IAsyncStateMachine
	{
		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<ByteDance.AssetManagement.AssetLoadResult<TextAsset>>.Awaiter <>u__1;

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x2E7C840", Offset = "0x2E7C840", VA = "0x2E7C840", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600000B")]
		[Address(RVA = "0x2E7CBE8", Offset = "0x2E7CBE8", VA = "0x2E7CBE8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AssetTempCell prefab;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterAssetController CharacterAssetController;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> assetClothesList;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x2E7C718", Offset = "0x2E7C718", VA = "0x2E7C718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x2E7C7B4", Offset = "0x2E7C7B4", VA = "0x2E7C7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x2E7C71C", Offset = "0x2E7C71C", VA = "0x2E7C71C")]
	[AsyncStateMachine(typeof(<LoadClothes>d__5))]
	private void LoadClothes()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x2E7C7B8", Offset = "0x2E7C7B8", VA = "0x2E7C7B8")]
	public AssetLoadConfig()
	{
	}
}
[Token(Token = "0x2000007")]
public class JengaInfo : NetworkBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> targetList;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> startPosition;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Quaternion> startRotation;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x2E7CBF4", Offset = "0x2E7CBF4", VA = "0x2E7CBF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x2E7CE64", Offset = "0x2E7CE64", VA = "0x2E7CE64")]
	public void ResetAllObject()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x2E7CFA0", Offset = "0x2E7CFA0", VA = "0x2E7CFA0")]
	[ServerRpc]
	public void SetAllObjectAuthorityOnServerRpc(ulong ownerClientId, NetworkObjectReference target)
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x2E7D184", Offset = "0x2E7D184", VA = "0x2E7D184")]
	public JengaInfo()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x2E7D2AC", Offset = "0x2E7D2AC", VA = "0x2E7D2AC")]
	private static void __rpc_handler_4187639654(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x2E7D428", Offset = "0x2E7D428", VA = "0x2E7D428", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000008")]
public class ArcheryBuffCountdown : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LightingIcon;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BombIcon;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image LightingRing;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image BombRing;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _showIcon;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _buffTime;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _elapseTime;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image _curCountdownRing;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x2E7D468", Offset = "0x2E7D468", VA = "0x2E7D468")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x2E7D46C", Offset = "0x2E7D46C", VA = "0x2E7D46C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x2E7D470", Offset = "0x2E7D470", VA = "0x2E7D470")]
	private void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x2E7D5D0", Offset = "0x2E7D5D0", VA = "0x2E7D5D0")]
	public void ShowBuffCountdown(float buffTime, ArcheryTargetGroupType buffType)
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x2E7D4E4", Offset = "0x2E7D4E4", VA = "0x2E7D4E4")]
	private void HideBuffCountdown()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x2E7D7AC", Offset = "0x2E7D7AC", VA = "0x2E7D7AC")]
	public ArcheryBuffCountdown()
	{
	}
}
[Token(Token = "0x2000009")]
public class ArcheryDoubleHit : NetworkBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite[] SliderSprs;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite[] TimesBg;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Slider TimeSlider;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI TextMeshTimes;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshProUGUI TextMeshRise;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image TimesBG;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image SliderBar;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _doubleHitTimes;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _totalTime;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _curTime;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _doubleHiting;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool _isPause;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _curStageIndex;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tween _hidenTween;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isShowing;

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x2E7D7B4", Offset = "0x2E7D7B4", VA = "0x2E7D7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x2E7D7B8", Offset = "0x2E7D7B8", VA = "0x2E7D7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x2E7D8CC", Offset = "0x2E7D8CC", VA = "0x2E7D8CC")]
	public void UpdateDoubleHit()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x2E7DE6C", Offset = "0x2E7DE6C", VA = "0x2E7DE6C")]
	public int GetDoubleHitTimes()
	{
		return default(int);
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x2E7DE78", Offset = "0x2E7DE78", VA = "0x2E7DE78")]
	public void DoubleHitPause()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x2E7DF7C", Offset = "0x2E7DF7C", VA = "0x2E7DF7C")]
	public void DoubleHitPlay()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x2E7E094", Offset = "0x2E7E094", VA = "0x2E7E094")]
	public void DoubleHitReset()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x2E7D848", Offset = "0x2E7D848", VA = "0x2E7D848")]
	private void DoubleHitTimeout()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x2E7DACC", Offset = "0x2E7DACC", VA = "0x2E7DACC")]
	private void DisplayDoubleHit(bool show)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x2E7E0A8", Offset = "0x2E7E0A8", VA = "0x2E7E0A8")]
	private void ChangeImageByTimes()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x2E7DA44", Offset = "0x2E7DA44", VA = "0x2E7DA44")]
	private float GetCurTotalTimeByTimes(int times)
	{
		return default(float);
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x2E7D810", Offset = "0x2E7D810", VA = "0x2E7D810")]
	private void UpdateTimeSlider(float elapseTime)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x2E7DCE4", Offset = "0x2E7DCE4", VA = "0x2E7DCE4")]
	private void CheckPlaySoundDoubleHit()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x2E7E314", Offset = "0x2E7E314", VA = "0x2E7E314")]
	public ArcheryDoubleHit()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x2E7E36C", Offset = "0x2E7E36C", VA = "0x2E7E36C", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x200000A")]
public enum ArcheryHitType
{
	[Token(Token = "0x4000024")]
	Normal,
	[Token(Token = "0x4000025")]
	Lighting,
	[Token(Token = "0x4000026")]
	Bomb
}
[Token(Token = "0x200000B")]
public class ArcheryHitTarget
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200000C")]
	[CompilerGenerated]
	private struct <HitByLighting>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArcheryHitTarget <>4__this;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StaticTarget> <list>5__2;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x2E7EFB0", Offset = "0x2E7EFB0", VA = "0x2E7EFB0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x2E7F480", Offset = "0x2E7F480", VA = "0x2E7F480", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Arrow _hitArrow;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StaticTarget _hitTarget;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArcheryHitType _hitType;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _damageValue;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TargetType _arrowShootType;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ArcheryDoubleHit _doubleHit;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ulong _localClientId;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _bombEffectPrefab;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject _lightingEffectPrefab;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _curEffect;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _lightingAttackEffect;

	[Token(Token = "0x4000032")]
	private const float _lightingRadius = 3.4f;

	[Token(Token = "0x4000033")]
	private const float _bombRadius = 1.7f;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x2E7E3AC", Offset = "0x2E7E3AC", VA = "0x2E7E3AC")]
	public void ArrowHitTarget(Arrow arrow, StaticTarget target, ArcheryHitType type, GameObject bombEffect, GameObject lightingEffect, GameObject lightingAttackEffect)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x2E7E500", Offset = "0x2E7E500", VA = "0x2E7E500")]
	private void HitNormal()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x2E7E510", Offset = "0x2E7E510", VA = "0x2E7E510")]
	[AsyncStateMachine(typeof(<HitByLighting>d__15))]
	private void HitByLighting()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x2E7E5C8", Offset = "0x2E7E5C8", VA = "0x2E7E5C8")]
	private void HitByBomb()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x2E7E7FC", Offset = "0x2E7E7FC", VA = "0x2E7E7FC")]
	private List<StaticTarget> GetWithinKillingRangeTargets(float radius, [Optional] Func<StaticTarget, bool> predicate)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x2E7E730", Offset = "0x2E7E730", VA = "0x2E7E730")]
	private void HitTarget(StaticTarget target, ArcheryHitType archeryHitType, float reduceRadio = 1f)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x2E7EAD4", Offset = "0x2E7EAD4", VA = "0x2E7EAD4")]
	private void PlayBombEffect()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x2E7ECC8", Offset = "0x2E7ECC8", VA = "0x2E7ECC8")]
	private void PlayLightingEffect(Vector3 pos)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x2E7EE58", Offset = "0x2E7EE58", VA = "0x2E7EE58")]
	public ArcheryHitTarget()
	{
	}
}
[Token(Token = "0x200000D")]
public delegate void ArcheryReportStartGameDelegate(LuaTable reportInfo);
[Token(Token = "0x200000E")]
public delegate void ArcheryReportStartCoveringPositionDelegate(LuaTable reportInfo);
[Token(Token = "0x200000F")]
public delegate void ArcheryReportEndCoveringPositionDelegate(LuaTable reportInfo);
[Token(Token = "0x2000010")]
public delegate void ArcheryReportEndGameDelegate(LuaTable reportInfo);
[Token(Token = "0x2000011")]
public delegate void ArcheryReportStayRoomDelegate(LuaTable reportInfo);
[Token(Token = "0x2000012")]
public delegate void ArcheryDrawBowReportDelegate();
[Token(Token = "0x2000013")]
public delegate void ArcheryArrowShotReportDelegate(LuaTable reportInfo);
[Token(Token = "0x2000014")]
public delegate void ArcheryArrowShotResultReportDelegate(LuaTable reportInfo);
[Token(Token = "0x2000015")]
public delegate void ArcheryAddFriendReportDelegate(JsonObject paras);
[Token(Token = "0x2000016")]
public class ArcheryReportManager
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ArcheryReportStartGameDelegate archeryReportStartGame;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ArcheryReportStartCoveringPositionDelegate archeryReportStartCoveringPosition;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ArcheryReportEndCoveringPositionDelegate archeryReportEndCoveringPosition;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ArcheryReportEndGameDelegate archeryReportEndGame;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static ArcheryReportStayRoomDelegate archeryReportStayRoom;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static ArcheryDrawBowReportDelegate archeryDrawBowReport;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ArcheryArrowShotReportDelegate archeryArrowShotReport;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static ArcheryArrowShotResultReportDelegate arrowShotResultReport;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static ArcheryAddFriendReportDelegate archeryAddFriendReport;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x2E80178", Offset = "0x2E80178", VA = "0x2E80178")]
	public static void ReportStartGame(string battleId, string matchId, int matchOrder, string queueName, string startStatus, int waitTime)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x2E80408", Offset = "0x2E80408", VA = "0x2E80408")]
	public static void ReportStartCoveringPosition(string battleId, string queueName)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x2E80600", Offset = "0x2E80600", VA = "0x2E80600")]
	public static void ReportEndCoveringPosition(int coverTime, string battleId, string queueName)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x2E80830", Offset = "0x2E80830", VA = "0x2E80830")]
	public static void ReportEndGame(string battleId, string matchId, int matchOrder, int ifBattleEnd, string queueName, string startStatus, string endStatus, int teamScore, int opponentScore, int selfScore, string battleSituation, int gameTime, int selfRemainCnt, int opponentRemainCnt, int opponentWinCnt, int teamWinCnt, string matchSituation)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x2E80C90", Offset = "0x2E80C90", VA = "0x2E80C90")]
	public static void ArcheryReportStayRoom(string battle_id, string batter_rule, string match_id, int match_order, int if_battle_end, string queue_name, string room_status, int team_score, int opponent_score, int self_score, string battle_situation, int self_remain_cnt, int opponent_remain_cnt, int remain_battle_time, int is_buff_time, string buff_id, string buff_name)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x2E810EC", Offset = "0x2E810EC", VA = "0x2E810EC")]
	public static void DrawBowReport()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x2E811D4", Offset = "0x2E811D4", VA = "0x2E811D4")]
	public static void ArrowShotReport(int distance, int stayTime)
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x2E8135C", Offset = "0x2E8135C", VA = "0x2E8135C")]
	public static void ArrowShotResultReport(string targetType, string targetID, int isHit, string hitPosition, int isBuffTarget, int isBuffTime, string buffID, string buffName, int score)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x2E81664", Offset = "0x2E81664", VA = "0x2E81664")]
	public static void ArcheryAddFriendReport(JsonObject paras)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x2E81754", Offset = "0x2E81754", VA = "0x2E81754")]
	public ArcheryReportManager()
	{
	}
}
[Token(Token = "0x2000017")]
public class Arrow : NetworkBehaviour
{
	[Token(Token = "0x2000018")]
	[CompilerGenerated]
	private sealed class <QueueDestroy>d__37 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Arrow <>4__this;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000083")]
			[Address(RVA = "0x2E83FA8", Offset = "0x2E83FA8", VA = "0x2E83FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000085")]
			[Address(RVA = "0x2E83FF0", Offset = "0x2E83FF0", VA = "0x2E83FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0x2E81FDC", Offset = "0x2E81FDC", VA = "0x2E81FDC")]
		[DebuggerHidden]
		public <QueueDestroy>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x2E83E98", Offset = "0x2E83E98", VA = "0x2E83E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000082")]
		[Address(RVA = "0x2E83E9C", Offset = "0x2E83E9C", VA = "0x2E83E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000084")]
		[Address(RVA = "0x2E83FB0", Offset = "0x2E83FB0", VA = "0x2E83FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000019")]
	[CompilerGenerated]
	private sealed class <ReEnableCollider>d__40 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arrow <>4__this;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <waitFrames>5__2;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <x>5__3;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000089")]
			[Address(RVA = "0x2E840D0", Offset = "0x2E840D0", VA = "0x2E840D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600008B")]
			[Address(RVA = "0x2E84118", Offset = "0x2E84118", VA = "0x2E84118", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000086")]
		[Address(RVA = "0x2E82224", Offset = "0x2E82224", VA = "0x2E82224")]
		[DebuggerHidden]
		public <ReEnableCollider>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0x2E83FF8", Offset = "0x2E83FF8", VA = "0x2E83FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000088")]
		[Address(RVA = "0x2E83FFC", Offset = "0x2E83FFC", VA = "0x2E83FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x2E840D8", Offset = "0x2E840D8", VA = "0x2E840D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float ArrowDamage;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform ArrowHeadTransform;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject ArrowModel;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float ArrowHitRadius;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TrailRenderer arrowTrailRenderer;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TargetType CanShootTargetType;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public Bow BelongBow;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject LightingEffect;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject LightingArrowEffect;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject LightingTrailEffect;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject LightingAttackEffect;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject BombEffect;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject BombArrowEffect;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject BombTrailEffect;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject ArrowTrailNode;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float ZVel;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 prePosition;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody rb;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float flightTime;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float destroyTime;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Coroutine queueDestroy;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool Flying;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private NetworkObject arrowNetworkObject;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private RaycastHit currentHitInfo;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Damageable currentDamageable;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float totalPacketLossTime;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float currentPacketLossTime;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private ArcheryHitType _curHitType;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GameObject _arrowBuffFx;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GameObject _arrowBuffTrail;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool haveNetWorkSpawn;

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x2E8175C", Offset = "0x2E8175C", VA = "0x2E8175C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x2E81910", Offset = "0x2E81910", VA = "0x2E81910", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x2E8191C", Offset = "0x2E8191C", VA = "0x2E8191C", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x2E819F4", Offset = "0x2E819F4", VA = "0x2E819F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x2E81D60", Offset = "0x2E81D60", VA = "0x2E81D60")]
	public void ShootArrow(Vector3 shotForce)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x2E81F58", Offset = "0x2E81F58", VA = "0x2E81F58")]
	[IteratorStateMachine(typeof(<QueueDestroy>d__37))]
	private IEnumerator QueueDestroy(float delayTime)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x2E817F4", Offset = "0x2E817F4", VA = "0x2E817F4")]
	public void ResetArrow()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x2E820BC", Offset = "0x2E820BC", VA = "0x2E820BC")]
	[ServerRpc(RequireOwnership = true)]
	private void DestroyArrowServerRpc()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x2E81EE4", Offset = "0x2E81EE4", VA = "0x2E81EE4")]
	[IteratorStateMachine(typeof(<ReEnableCollider>d__40))]
	private IEnumerator ReEnableCollider()
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x2E81C14", Offset = "0x2E81C14", VA = "0x2E81C14")]
	private void CheckAttack()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x2E8224C", Offset = "0x2E8224C", VA = "0x2E8224C")]
	private void CheckCollisionEnter(RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x2E825CC", Offset = "0x2E825CC", VA = "0x2E825CC")]
	public void CheckAttack(bool isAttack)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x2E8283C", Offset = "0x2E8283C", VA = "0x2E8283C")]
	private void tryStickArrow(RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x2E82B5C", Offset = "0x2E82B5C", VA = "0x2E82B5C")]
	[ServerRpc(RequireOwnership = true)]
	public void InstepArrowModelServerRpc()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x2E82D98", Offset = "0x2E82D98", VA = "0x2E82D98")]
	[ClientRpc]
	public void ReceiveInstepArrowModelClientRpc()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x2E82E9C", Offset = "0x2E82E9C", VA = "0x2E82E9C")]
	[ServerRpc(RequireOwnership = true)]
	public void InstepArrowTrailServerRpc()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x2E82FF4", Offset = "0x2E82FF4", VA = "0x2E82FF4")]
	[ClientRpc]
	public void ReceiveInstepArrowTrailClientRpc()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x2E831B4", Offset = "0x2E831B4", VA = "0x2E831B4")]
	public void SetBuff(ArcheryHitType type)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x2E830E8", Offset = "0x2E830E8", VA = "0x2E830E8")]
	private void ShowArrowDefaultTrail()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x2E82004", Offset = "0x2E82004", VA = "0x2E82004")]
	private void CloseArrowDefaultTrail()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x2E83704", Offset = "0x2E83704", VA = "0x2E83704")]
	public Arrow()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x2E839C0", Offset = "0x2E839C0", VA = "0x2E839C0")]
	private static void __rpc_handler_2803015914(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x2E83AD8", Offset = "0x2E83AD8", VA = "0x2E83AD8")]
	private static void __rpc_handler_1078445838(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x2E83BF0", Offset = "0x2E83BF0", VA = "0x2E83BF0")]
	private static void __rpc_handler_140535170(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x2E83C98", Offset = "0x2E83C98", VA = "0x2E83C98")]
	private static void __rpc_handler_3119030821(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x2E83DB0", Offset = "0x2E83DB0", VA = "0x2E83DB0")]
	private static void __rpc_handler_912761933(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x2E83E58", Offset = "0x2E83E58", VA = "0x2E83E58", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x200001A")]
public class ArrowFingerPoint : MonoBehaviour
{
	[Token(Token = "0x600008C")]
	[Address(RVA = "0x2E84120", Offset = "0x2E84120", VA = "0x2E84120")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x2E84124", Offset = "0x2E84124", VA = "0x2E84124")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x2E84128", Offset = "0x2E84128", VA = "0x2E84128")]
	public ArrowFingerPoint()
	{
	}
}
[Token(Token = "0x200001B")]
public class ArrowGrabArea : MonoBehaviour
{
	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Bow theBow;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool startGetArrowGrabber;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x2E84130", Offset = "0x2E84130", VA = "0x2E84130")]
	public void InitArrowGrabArea(Bow bow)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x2E84150", Offset = "0x2E84150", VA = "0x2E84150")]
	public void StartGetArrowGrabber()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x2E8415C", Offset = "0x2E8415C", VA = "0x2E8415C")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x2E845D0", Offset = "0x2E845D0", VA = "0x2E845D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x2E84278", Offset = "0x2E84278", VA = "0x2E84278")]
	private bool IsSameHand(ActionBasedController bowGrabHand, ActionBasedController waitStringHand)
	{
		return default(bool);
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x2E846F4", Offset = "0x2E846F4", VA = "0x2E846F4")]
	public ArrowGrabArea()
	{
	}
}
[Token(Token = "0x200001C")]
public enum ArrowState
{
	[Token(Token = "0x400006F")]
	None,
	[Token(Token = "0x4000070")]
	Stay,
	[Token(Token = "0x4000071")]
	Ready,
	[Token(Token = "0x4000072")]
	Fly,
	[Token(Token = "0x4000073")]
	InTatget
}
[Token(Token = "0x200001D")]
public class ArrowStateFSM : MonoBehaviour
{
	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody ArrowRigidbody;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider ArrowCollider;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ArrowState currentArrowState;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x2E846FC", Offset = "0x2E846FC", VA = "0x2E846FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x2E847BC", Offset = "0x2E847BC", VA = "0x2E847BC")]
	public void OnSelectStart()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x2E848A0", Offset = "0x2E848A0", VA = "0x2E848A0")]
	public void OnSelectEnd()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x2E84ABC", Offset = "0x2E84ABC", VA = "0x2E84ABC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x2E84708", Offset = "0x2E84708", VA = "0x2E84708")]
	private void ChangeState()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x2E84A74", Offset = "0x2E84A74", VA = "0x2E84A74")]
	private void Archery()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x2E84B44", Offset = "0x2E84B44", VA = "0x2E84B44")]
	public ArrowStateFSM()
	{
	}
}
[Token(Token = "0x200001E")]
public enum BowType
{
	[Token(Token = "0x4000078")]
	BlueBow = 1,
	[Token(Token = "0x4000079")]
	RedBow
}
[Token(Token = "0x200001F")]
public class Bow : NetworkBehaviour
{
	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Bow Settings")]
	[Tooltip("")]
	public float BowForce;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Tooltip("If True the BowModel Transform will align itself with the grabber holding the arrow")]
	public bool AlignBowToArrow;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 BowUp;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float AlignBowSpeed;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("If AlignBowToArrow is true this transform will align itself with the grabber holding the arrow")]
	public Transform BowModel;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Arrow Settings")]
	[Tooltip("Arrow will rotate around this if bow is held in left hand or ArrowRestLeftHanded is null")]
	public Transform ArrowRest;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform ArrowKnock;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public NetworkObject ArrowPrefab;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem drawBowEffect;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float particleSpeed;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Header("Arrow Positioning")]
	public bool IgnoreXPosition;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	public bool IgnoreYPosition;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	public bool AllowNegativeZ;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("String Settings")]
	public float MaxStringDistance;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ArrowGrabArea MyArrowGrabArea;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BowType MyBowType;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ArcheryDoubleHit DoubleHit;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ArcheryBuffCountdown ArcheryBuff;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public HandPose LeftArrowHandPose;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public HandPose RighArrowtHandPose;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public CapsuleCollider MyGrabCollider;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Vector3 initialKnockPosition;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BoxCollider KnockCollider;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<BowArm> MyBowArmList;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject GetBombBuffTrailFx;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject GetBombFx;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject GetLightBuffTrailFx;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject GetLightFx;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public bool CanGrabArrow;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public ActionBasedController ClosestGrabber;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public Arrow GrabbedArrow;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private XRGrabInteractable arrowGrabbable;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public ArrowFingerPoint arrowGrabber;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[HideInInspector]
	public float StringDistance;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[HideInInspector]
	public ActionBasedController bowActionBasedController;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	public ControllerDriver bowControllerDriver;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public bool haveDestroy;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float lastDrawPercent;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float lastDrawHapticTime;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float simulationSpeed;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool holdingArrow;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	private bool OnString;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
	private bool beingHeld;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private XRGrabInteractable xrGrabInteractable;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform[] trans;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 initBowPosition;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private bool isResetPos;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private readonly float TotalResetTime;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float currentResetTime;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private ArcheryHitType _curHitType;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float interval;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float stayTime;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool inStayTime;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float maxStringDis;

	[Token(Token = "0x17000005")]
	public float DrawPercent
	{
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x2E84B4C", Offset = "0x2E84B4C", VA = "0x2E84B4C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600009D")]
		[Address(RVA = "0x2E84B54", Offset = "0x2E84B54", VA = "0x2E84B54")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public NetworkVariable<int> BowIndex
	{
		[Token(Token = "0x600009E")]
		[Address(RVA = "0x2E84B5C", Offset = "0x2E84B5C", VA = "0x2E84B5C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600009F")]
		[Address(RVA = "0x2E84B64", Offset = "0x2E84B64", VA = "0x2E84B64")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public NetworkVariable<bool> haveOtherGrab
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x2E84B6C", Offset = "0x2E84B6C", VA = "0x2E84B6C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x2E84B74", Offset = "0x2E84B74", VA = "0x2E84B74")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x2E84B7C", Offset = "0x2E84B7C", VA = "0x2E84B7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x2E84C18", Offset = "0x2E84C18", VA = "0x2E84C18")]
	public void InitBow()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x2E853C0", Offset = "0x2E853C0", VA = "0x2E853C0", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x2E854BC", Offset = "0x2E854BC", VA = "0x2E854BC", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x2E85710", Offset = "0x2E85710", VA = "0x2E85710")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x2E855D0", Offset = "0x2E855D0", VA = "0x2E855D0")]
	private void CheckReleaseArrow()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x2E8619C", Offset = "0x2E8619C", VA = "0x2E8619C")]
	private Transform getArrowRest()
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x2E861A4", Offset = "0x2E861A4", VA = "0x2E861A4")]
	private bool canGrabArrowFromKnock()
	{
		return default(bool);
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x2E85A98", Offset = "0x2E85A98", VA = "0x2E85A98")]
	private void setKnockPosition()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x2E85FB8", Offset = "0x2E85FB8", VA = "0x2E85FB8")]
	private void updateDrawDistance()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x2E863B8", Offset = "0x2E863B8", VA = "0x2E863B8")]
	private void checkBowHaptics()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x2E859E4", Offset = "0x2E859E4", VA = "0x2E859E4")]
	private void resetStringPosition()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x2E86560", Offset = "0x2E86560", VA = "0x2E86560", Slot = "12")]
	protected virtual void alignArrow()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x2E86644", Offset = "0x2E86644", VA = "0x2E86644", Slot = "13")]
	protected virtual void alignBow()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x2E869BC", Offset = "0x2E869BC", VA = "0x2E869BC", Slot = "14")]
	public virtual void ResetBowAlignment()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x2E86A7C", Offset = "0x2E86A7C", VA = "0x2E86A7C")]
	public void GrabArrow(Arrow arrow)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x2E86BB4", Offset = "0x2E86BB4", VA = "0x2E86BB4")]
	public void ReleaseArrow(bool needResetString)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x2E86D78", Offset = "0x2E86D78", VA = "0x2E86D78")]
	private void resetArrowValues()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x2E86DE4", Offset = "0x2E86DE4", VA = "0x2E86DE4")]
	public void OnGrabEntry(SelectEnterEventArgs selectEnterEventArgs)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x2E85618", Offset = "0x2E85618", VA = "0x2E85618")]
	public void OnGrabExit(SelectExitEventArgs selectExitEventArgs)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x2E87090", Offset = "0x2E87090", VA = "0x2E87090")]
	[ServerRpc(RequireOwnership = true)]
	public void ChangeHaveOtherGrabServerRpc(bool changeValue)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x2E8595C", Offset = "0x2E8595C", VA = "0x2E8595C")]
	private void ResetBow()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x2E87234", Offset = "0x2E87234", VA = "0x2E87234")]
	public void OnHoverEntry(HoverEnterEventArgs hoverEnterEventArgs)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x2E860CC", Offset = "0x2E860CC", VA = "0x2E860CC")]
	public void OnReleaseArrowEvent(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x2E87318", Offset = "0x2E87318", VA = "0x2E87318")]
	public void OnStringBowEvent(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x2E878FC", Offset = "0x2E878FC", VA = "0x2E878FC")]
	[ClientRpc]
	public void InitArrowClientRpc(NetworkObjectReference arrowObjectReference, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x2E87558", Offset = "0x2E87558", VA = "0x2E87558")]
	[ServerRpc(RequireOwnership = true)]
	public void InstantiateArrowServerRpc(ulong clientID, Vector3 initPosition, Vector3 lookAtpoint)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x2E843A4", Offset = "0x2E843A4", VA = "0x2E843A4")]
	public void OnShooterHandEntry(ActionBasedController grabObject)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x2E87A78", Offset = "0x2E87A78", VA = "0x2E87A78")]
	public void OnShooterHandExit()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x2E8439C", Offset = "0x2E8439C", VA = "0x2E8439C")]
	public void ArrowTriggerExit()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x2E87CD4", Offset = "0x2E87CD4", VA = "0x2E87CD4")]
	public bool BowBeingHeld()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x2E87CDC", Offset = "0x2E87CDC", VA = "0x2E87CDC")]
	[ClientRpc]
	public void InitBowClientRpc(Vector3 pos, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x2E85DA0", Offset = "0x2E85DA0", VA = "0x2E85DA0")]
	private void DrawBowEffect()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x2E87E2C", Offset = "0x2E87E2C", VA = "0x2E87E2C")]
	[ClientRpc]
	public void DoubleHitPauseClientRpc()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x2E87F7C", Offset = "0x2E87F7C", VA = "0x2E87F7C")]
	[ClientRpc]
	public void DoubleHitPlayClientRpc()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x2E880CC", Offset = "0x2E880CC", VA = "0x2E880CC")]
	[ClientRpc]
	public void DoubleHitResetClientRpc()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x2E8822C", Offset = "0x2E8822C", VA = "0x2E8822C")]
	[ClientRpc]
	public void SetBuffClientRpc(ArcheryTargetGroupType type, Vector3 pos, float time = 0f)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x2E86300", Offset = "0x2E86300", VA = "0x2E86300")]
	private bool IsLeftHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x2E84F68", Offset = "0x2E84F68", VA = "0x2E84F68")]
	public void ChangeBowGrabStateInWait(bool preValue = false, bool newValue = false)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x2E851A4", Offset = "0x2E851A4", VA = "0x2E851A4")]
	public void InitGrabStateInGame()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x2E8889C", Offset = "0x2E8889C", VA = "0x2E8889C")]
	private bool IsSameTeam()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x2E887D8", Offset = "0x2E887D8", VA = "0x2E887D8")]
	private bool IsMyBow()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x2E88968", Offset = "0x2E88968", VA = "0x2E88968", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x2E88988", Offset = "0x2E88988", VA = "0x2E88988")]
	public Bow()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x2E88E84", Offset = "0x2E88E84", VA = "0x2E88E84")]
	private static void __rpc_handler_562610983(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x2E88FDC", Offset = "0x2E88FDC", VA = "0x2E88FDC")]
	private static void __rpc_handler_323477592(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x2E89104", Offset = "0x2E89104", VA = "0x2E89104")]
	private static void __rpc_handler_3688729402(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x2E892DC", Offset = "0x2E892DC", VA = "0x2E892DC")]
	private static void __rpc_handler_2748029847(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x2E89418", Offset = "0x2E89418", VA = "0x2E89418")]
	private static void __rpc_handler_1052899070(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x2E894C0", Offset = "0x2E894C0", VA = "0x2E894C0")]
	private static void __rpc_handler_1533788794(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x2E89568", Offset = "0x2E89568", VA = "0x2E89568")]
	private static void __rpc_handler_2007516959(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x2E89610", Offset = "0x2E89610", VA = "0x2E89610")]
	private static void __rpc_handler_3331224408(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x2E89770", Offset = "0x2E89770", VA = "0x2E89770", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000021")]
public class BowArm : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Bow ParentBow;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int BowPercentStart;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateDegrees;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Speed;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 _startRotation;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 _startLocalPosition;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x2E84F1C", Offset = "0x2E84F1C", VA = "0x2E84F1C")]
	public void InitBowArm()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x2E89820", Offset = "0x2E89820", VA = "0x2E89820")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x2E89964", Offset = "0x2E89964", VA = "0x2E89964")]
	private void RefreshRotate(float percent)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x2E899A8", Offset = "0x2E899A8", VA = "0x2E899A8")]
	public BowArm()
	{
	}
}
[Token(Token = "0x2000022")]
public class BowStateFSM : MonoBehaviour
{
	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x2E899C4", Offset = "0x2E899C4", VA = "0x2E899C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x2E899C8", Offset = "0x2E899C8", VA = "0x2E899C8")]
	public void OnSelectStart()
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x2E89A9C", Offset = "0x2E89A9C", VA = "0x2E89A9C")]
	public void OnSelectEnd()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x2E89B5C", Offset = "0x2E89B5C", VA = "0x2E89B5C")]
	public BowStateFSM()
	{
	}
}
[Token(Token = "0x2000023")]
public class Damageable : NetworkBehaviour
{
	[Token(Token = "0x2000024")]
	[CompilerGenerated]
	private sealed class <WaitForReturnObject>d__45 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Damageable <>4__this;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0x2E8CFD4", Offset = "0x2E8CFD4", VA = "0x2E8CFD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0x2E8D01C", Offset = "0x2E8D01C", VA = "0x2E8D01C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x2E8B89C", Offset = "0x2E8B89C", VA = "0x2E8B89C")]
		[DebuggerHidden]
		public <WaitForReturnObject>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x2E8CF04", Offset = "0x2E8CF04", VA = "0x2E8CF04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x2E8CF08", Offset = "0x2E8CF08", VA = "0x2E8CF08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x2E8CFDC", Offset = "0x2E8CFDC", VA = "0x2E8CFDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000025")]
	[CompilerGenerated]
	private sealed class <RespawnRoutine>d__49 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float seconds;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Damageable <>4__this;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0x2E8D444", Offset = "0x2E8D444", VA = "0x2E8D444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0x2E8D48C", Offset = "0x2E8D48C", VA = "0x2E8D48C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0x2E8C060", Offset = "0x2E8C060", VA = "0x2E8C060")]
		[DebuggerHidden]
		public <RespawnRoutine>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0x2E8D024", Offset = "0x2E8D024", VA = "0x2E8D024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0x2E8D028", Offset = "0x2E8D028", VA = "0x2E8D028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0x2E8D44C", Offset = "0x2E8D44C", VA = "0x2E8D44C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Health;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float MaxTargetRadius;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float HighScoreTargrtRadius;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool HightScoreAttack;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _startingHealth;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected float _redueceRatio;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Tooltip("If specified, this GameObject will be instantiated at this transform's position on death.")]
	public GameObject SpawnOnDeath;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("Activate these GameObjects on Death")]
	public List<GameObject> ActivateGameObjectsOnDeath;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Tooltip("Deactivate these GameObjects on Death")]
	public List<GameObject> DeactivateGameObjectsOnDeath;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Tooltip("Deactivate these Colliders on Death")]
	public List<Collider> DeactivateCollidersOnDeath;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject RedEffect;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject BlueEffect;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject ScoresTip;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject AppearEffect;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject TimeoutFx;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Tooltip("Destroy this object on Death? False if need to respawn.")]
	public bool DestroyOnDeath;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Tooltip("How long to wait before destroying this objects")]
	public float DestroyDelay;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Tooltip("If true the object will be reactivated according to RespawnTime")]
	public bool Respawn;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[Tooltip("If Respawn true, this gameObject will reactivate after RespawnTime. In seconds.")]
	public float RespawnTime;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Remove any decals that were parented to this object on death. Useful for clearing unused decals.")]
	public bool RemoveBulletHolesOnDeath;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Optional Event to be called once health is <= 0")]
	public UnityEvent onDestroyed;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Tooltip("Optional Event to be called once the object has been respawned, if Respawn is true and after RespawnTime")]
	public UnityEvent onRespawn;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TargetType MyTargetType;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected TargetType? _attackByTargetType;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected ArcheryDoubleHit _doubleHit;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected int _doubleHitTimes;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	protected ArcheryTargetGroupType _archeryTargetGroupType;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected TargetDistanceType _distanceType;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected GameObject instantiatePrefab;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected NetworkObject myNetworkObject;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool IsMoveTarget;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected Coroutine _timeOutCoroutine;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected bool destroyed;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Rigidbody rigid;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool initialWasKinematic;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private ulong attackClientID;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float dic;

	[Token(Token = "0x17000008")]
	public TargetClassicType ClassicType
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x2E89B64", Offset = "0x2E89B64", VA = "0x2E89B64")]
		[CompilerGenerated]
		get
		{
			return default(TargetClassicType);
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x2E89B6C", Offset = "0x2E89B6C", VA = "0x2E89B6C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x2E89B74", Offset = "0x2E89B74", VA = "0x2E89B74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x2E89C38", Offset = "0x2E89C38", VA = "0x2E89C38")]
	protected void ResetTarget()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x2E8A020", Offset = "0x2E8A020", VA = "0x2E8A020", Slot = "12")]
	[ServerRpc(RequireOwnership = false)]
	public virtual void DealDamageServerRpc(float damageAmount, ulong clientID, bool hightScore, TargetType type, int doubleHitTimes, ArcheryHitType archeryHitType, float reduceRatio = 1f)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x2E8A9C8", Offset = "0x2E8A9C8", VA = "0x2E8A9C8", Slot = "13")]
	public virtual void DestroyThis(ArcheryHitType archeryHitType)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x2E8B7A4", Offset = "0x2E8B7A4", VA = "0x2E8B7A4")]
	[IteratorStateMachine(typeof(<WaitForReturnObject>d__45))]
	private IEnumerator WaitForReturnObject()
	{
		return null;
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x2E8B8C4", Offset = "0x2E8B8C4", VA = "0x2E8B8C4", Slot = "14")]
	public virtual void DealDamageOnClient(float damageAmount, TargetType type, ArcheryDoubleHit doubleHit, bool isHightScoreAttack, ArcheryHitType archeryHitType)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x2E8BAFC", Offset = "0x2E8BAFC", VA = "0x2E8BAFC", Slot = "15")]
	public virtual void DestroyThisOnClient()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x2E8AF3C", Offset = "0x2E8AF3C", VA = "0x2E8AF3C")]
	private void PlayeDestroyEffect()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x2E8B818", Offset = "0x2E8B818", VA = "0x2E8B818")]
	[IteratorStateMachine(typeof(<RespawnRoutine>d__49))]
	private IEnumerator RespawnRoutine(float seconds)
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x2E824EC", Offset = "0x2E824EC", VA = "0x2E824EC")]
	public bool IsAttack(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x2E8B070", Offset = "0x2E8B070", VA = "0x2E8B070")]
	[ClientRpc]
	public void InStepActiveClientRpc(bool death, bool isHightScoreAttack, ArcheryHitType archeryHitType, TargetType type = (TargetType)0)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x2E8A45C", Offset = "0x2E8A45C", VA = "0x2E8A45C")]
	[ClientRpc]
	public void DamageResultClientRpc(ArcheryTargetGroupType targetGroupType, int isHit, bool isHigtScore, bool BuffTime, int score, int doubleHit, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x2E8C088", Offset = "0x2E8C088", VA = "0x2E8C088")]
	public void ReadyAddScoreNum(float basicScoreNum, int doubleTimes)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x2E8C268", Offset = "0x2E8C268", VA = "0x2E8C268")]
	[ClientRpc]
	public void AddScoreNumClientRpc(float basicScoreNum, float comboBonus, int doubleTimes, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x2E8A7E8", Offset = "0x2E8A7E8", VA = "0x2E8A7E8")]
	public float GetBasicScores()
	{
		return default(float);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x2E8C528", Offset = "0x2E8C528", VA = "0x2E8C528")]
	public Damageable()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x2E8C7A8", Offset = "0x2E8C7A8", VA = "0x2E8C7A8")]
	private static void __rpc_handler_2904292442(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x2E8C9CC", Offset = "0x2E8C9CC", VA = "0x2E8C9CC")]
	private static void __rpc_handler_3746720728(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x2E8CB4C", Offset = "0x2E8CB4C", VA = "0x2E8CB4C")]
	private static void __rpc_handler_1091596929(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x2E8CD48", Offset = "0x2E8CD48", VA = "0x2E8CD48")]
	private static void __rpc_handler_2961017571(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x2E8CEC4", Offset = "0x2E8CEC4", VA = "0x2E8CEC4", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000026")]
public class ArcheryEvent
{
	[Token(Token = "0x40000EB")]
	public const string ArcheryEvent_OpenGameOverHMD = "ArcheryEvent_OpenGameOverHMD";

	[Token(Token = "0x40000EC")]
	public const string ArcheryEvent_OpenReadyGoHMD = "ArcheryEvent_OpenReadyGoHMD";

	[Token(Token = "0x40000ED")]
	public const string ArcheryEvent_UpdateDoubleHit = "ArcheryEvent_UpdateDoubleHit";

	[Token(Token = "0x40000EE")]
	public const string ArcheryEvent_PauseDoubleHit = "ArcheryEvent_PauseDoubleHit";

	[Token(Token = "0x40000EF")]
	public const string ArcheryEvent_HaveShooterManagerSpawn = "ArcheryEvent_HaveShooterManagerSpawn";

	[Token(Token = "0x40000F0")]
	public const string ArcheryEvent_OpenArcheryGuideWindow = "ArcheryEvent_OpenArcheryGuideWindow";

	[Token(Token = "0x40000F1")]
	public const string ArcheryEvent_OpenArcheryTaskBow = "ArcheryEvent_OpenArcheryTaskBow";

	[Token(Token = "0x40000F2")]
	public const string ArcheryEvent_OpenStageEndTips = "ArcheryEvent_OpenStageEndTips";

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x2E8D494", Offset = "0x2E8D494", VA = "0x2E8D494")]
	public ArcheryEvent()
	{
	}
}
[Token(Token = "0x2000027")]
public class PlayerData : INetworkSerializable, IEquatable<PlayerData>
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong clientID;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long userID;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TeamState team;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float score;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string playerName;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string thumbnail;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string bust;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float coverTime;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool NetworkSerializeCalledOnWrite;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool NetworkSerializeCalledOnRead;

	[Token(Token = "0x6000107")]
	public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x2E8D49C", Offset = "0x2E8D49C", VA = "0x2E8D49C", Slot = "5")]
	public bool Equals(PlayerData other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x2E8D4E8", Offset = "0x2E8D4E8", VA = "0x2E8D4E8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x2E8D574", Offset = "0x2E8D574", VA = "0x2E8D574")]
	public PlayerData()
	{
	}
}
[Token(Token = "0x2000028")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform FollowTarget;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool MatchRotation;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x2E8D5EC", Offset = "0x2E8D5EC", VA = "0x2E8D5EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x2E8D6CC", Offset = "0x2E8D6CC", VA = "0x2E8D6CC")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x2000029")]
public class MetaDataReadFromJson
{
	[Token(Token = "0x200002A")]
	public class ReadDataClass<T>
	{
		[Token(Token = "0x1700000D")]
		public List<T> data
		{
			[Token(Token = "0x6000110")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000111")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000112")]
		public ReadDataClass()
		{
		}
	}

	[Token(Token = "0x40000FF")]
	private const string c_JsonPath = "ArcheryConfigData/json/client/";

	[Token(Token = "0x600010D")]
	public static List<T> GetMetaDataByJson<T>(string jsonName)
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	public static ReadDataClass GetMetaData<ReadDataClass>(string json)
	{
		return (ReadDataClass)null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x2E8D6DC", Offset = "0x2E8D6DC", VA = "0x2E8D6DC")]
	public MetaDataReadFromJson()
	{
	}
}
[Token(Token = "0x200002B")]
public enum UAVType
{
	[Token(Token = "0x4000102")]
	RedUAV = 1,
	[Token(Token = "0x4000103")]
	BlueUAV
}
[Token(Token = "0x200002C")]
public class LargeScreenManager : MonoBehaviour
{
	[Token(Token = "0x200002D")]
	[CompilerGenerated]
	private sealed class <ShowSettleResultIEnumerator>d__73 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeamState winTeam;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LargeScreenManager <>4__this;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerData mvpPlayerData;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isInit;

		[Token(Token = "0x1700000E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000143")]
			[Address(RVA = "0x5E3DDB8", Offset = "0x5E3DDB8", VA = "0x5E3DDB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000145")]
			[Address(RVA = "0x5E3DE00", Offset = "0x5E3DE00", VA = "0x5E3DE00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0x5E3D4BC", Offset = "0x5E3D4BC", VA = "0x5E3D4BC")]
		[DebuggerHidden]
		public <ShowSettleResultIEnumerator>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0x5E3D4E4", Offset = "0x5E3D4E4", VA = "0x5E3D4E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000142")]
		[Address(RVA = "0x5E3D4E8", Offset = "0x5E3D4E8", VA = "0x5E3D4E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000144")]
		[Address(RVA = "0x5E3DDC0", Offset = "0x5E3DDC0", VA = "0x5E3DDC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200002E")]
	[CompilerGenerated]
	private struct <ShowCrown>d__75 : IAsyncStateMachine
	{
		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isInStep;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long mvpUserID;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LargeScreenManager <>4__this;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PicoCharacter <_character>5__2;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000146")]
		[Address(RVA = "0x5E3DE08", Offset = "0x5E3DE08", VA = "0x5E3DE08", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0x5E3E188", Offset = "0x5E3E188", VA = "0x5E3E188", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200002F")]
	[CompilerGenerated]
	private struct <RemoveCrown>d__76 : IAsyncStateMachine
	{
		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long removeUserID;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PicoCharacter <lastCharacter>5__2;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6000148")]
		[Address(RVA = "0x5E3E194", Offset = "0x5E3E194", VA = "0x5E3E194", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x5E3E468", Offset = "0x5E3E468", VA = "0x5E3E468", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000030")]
	[CompilerGenerated]
	private sealed class <WaitToSetUAVShow>d__82 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LargeScreenManager <>4__this;

		[Token(Token = "0x17000010")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600014D")]
			[Address(RVA = "0x5E3E568", Offset = "0x5E3E568", VA = "0x5E3E568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000011")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600014F")]
			[Address(RVA = "0x5E3E5B0", Offset = "0x5E3E5B0", VA = "0x5E3E5B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x5E3E474", Offset = "0x5E3E474", VA = "0x5E3E474")]
		[DebuggerHidden]
		public <WaitToSetUAVShow>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0x5E3E49C", Offset = "0x5E3E49C", VA = "0x5E3E49C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600014C")]
		[Address(RVA = "0x5E3E4A0", Offset = "0x5E3E4A0", VA = "0x5E3E4A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0x5E3E570", Offset = "0x5E3E570", VA = "0x5E3E570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000031")]
	[CompilerGenerated]
	private sealed class <WaitToSetUAVMVPShow>d__86 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isInit;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LargeScreenManager <>4__this;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerData mvpPlayerData;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isStage;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000153")]
			[Address(RVA = "0x5E3E794", Offset = "0x5E3E794", VA = "0x5E3E794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000155")]
			[Address(RVA = "0x5E3E7DC", Offset = "0x5E3E7DC", VA = "0x5E3E7DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000150")]
		[Address(RVA = "0x5E3E5B8", Offset = "0x5E3E5B8", VA = "0x5E3E5B8")]
		[DebuggerHidden]
		public <WaitToSetUAVMVPShow>d__86(int <>1__state)
		{
		}

		[Token(Token = "0x6000151")]
		[Address(RVA = "0x5E3E5E0", Offset = "0x5E3E5E0", VA = "0x5E3E5E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0x5E3E5E4", Offset = "0x5E3E5E4", VA = "0x5E3E5E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0x5E3E79C", Offset = "0x5E3E79C", VA = "0x5E3E79C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000032")]
	[CompilerGenerated]
	private sealed class <WaitForPlayWaitMusic>d__87 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LargeScreenManager <>4__this;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000159")]
			[Address(RVA = "0x5E3E90C", Offset = "0x5E3E90C", VA = "0x5E3E90C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015B")]
			[Address(RVA = "0x5E3E954", Offset = "0x5E3E954", VA = "0x5E3E954", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000156")]
		[Address(RVA = "0x5E3E7E4", Offset = "0x5E3E7E4", VA = "0x5E3E7E4")]
		[DebuggerHidden]
		public <WaitForPlayWaitMusic>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0x5E3E80C", Offset = "0x5E3E80C", VA = "0x5E3E80C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0x5E3E810", Offset = "0x5E3E810", VA = "0x5E3E810", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0x5E3E914", Offset = "0x5E3E914", VA = "0x5E3E914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000033")]
	[CompilerGenerated]
	private sealed class <WaitForPlayFightingMusic>d__88 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LargeScreenManager <>4__this;

		[Token(Token = "0x17000016")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600015F")]
			[Address(RVA = "0x5E3EA84", Offset = "0x5E3EA84", VA = "0x5E3EA84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000161")]
			[Address(RVA = "0x5E3EACC", Offset = "0x5E3EACC", VA = "0x5E3EACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0x5E3E95C", Offset = "0x5E3E95C", VA = "0x5E3E95C")]
		[DebuggerHidden]
		public <WaitForPlayFightingMusic>d__88(int <>1__state)
		{
		}

		[Token(Token = "0x600015D")]
		[Address(RVA = "0x5E3E984", Offset = "0x5E3E984", VA = "0x5E3E984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600015E")]
		[Address(RVA = "0x5E3E988", Offset = "0x5E3E988", VA = "0x5E3E988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000160")]
		[Address(RVA = "0x5E3EA8C", Offset = "0x5E3EA8C", VA = "0x5E3EA8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject redPlayerInfoPrefab;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bluePlayerInfoPrefab;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RedTeamRoot;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform BlueTeamRoot;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI CountDownText;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI BlueTeamScoreText;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI RedTeamScoreText;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject TeamScoreShow;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject InSettleShow;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject BlueTeamWinShow;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject RedTeamWinShow;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Dogfall;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ReadyText;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject GoText;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject EmptyTip;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject BlueUAVPrefab;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject RedUAVPrefab;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject GroundFluxayPrefab;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject StartFireworkPrefab;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject StageFirstLightPrefab;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject StageSecondLightPrefab;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject StageThirdLightPrefab;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject StageMVPBluePrefab;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject StageMVPRedPrefab;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject WinFireworkPrefab;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject CountDownLightPrefab;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<PlayerInfoPrefab> playerInfoList;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool isPlay;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float time;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int second;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int countDownTime;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<PlayerInfoPrefab> BlueplayerInfoList;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<PlayerInfoPrefab> RedplayerInfoList;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private UAV blueUAV;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private UAV redUAV;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isInit;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool canIdleUAV;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x122")]
	private bool canShowHalfTip;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x123")]
	private bool canShowWaitStart;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private long lastMVPID;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool readyToShowTakeBow;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private VertexGradient commonVertexGradient;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private VertexGradient endVertexGradient;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private bool canShowStageStartTips;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private GameObject groundFluxayFX;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Animator groundFluxayAnimator;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string stageFirstDimianFx;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string stageSecondDimianFx;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private string stageThirdtDimianFx;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private GameObject startFireworkFX;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private GameObject stageFirstLightFX;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private GameObject stageSecondLightFx;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject stageThirdLightFx;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameObject stageMVPBlueFX;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private GameObject stageMVPRedFX;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private GameObject winFireworkFX;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private GameObject countDownLightFX;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private bool canInitBGM;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x2E8D6E4", Offset = "0x2E8D6E4", VA = "0x2E8D6E4")]
	public void InitLargeScreen()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x2E8DF9C", Offset = "0x2E8DF9C", VA = "0x2E8DF9C")]
	private void CreatAllUAV()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x2E8EB9C", Offset = "0x2E8EB9C", VA = "0x2E8EB9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x2E8F1EC", Offset = "0x2E8F1EC", VA = "0x2E8F1EC")]
	private void OnCountDownChange(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x2E8E4B8", Offset = "0x2E8E4B8", VA = "0x2E8E4B8")]
	public void RefreshLargeScreenState(ShooterGameState previousValue, ShooterGameState newValue)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x2E8E9F8", Offset = "0x2E8E9F8", VA = "0x2E8E9F8")]
	private void InitAllPlayerInfoShow()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x2E9025C", Offset = "0x2E9025C", VA = "0x2E9025C")]
	public void ReceiveInitAllPlayerInfoShow(PlayerData playerData, int index)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x2E90260", Offset = "0x2E90260", VA = "0x2E90260")]
	private void CreatPlayerInfo(PlayerData playerData, int playerIndex)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x2E90408", Offset = "0x2E90408", VA = "0x2E90408")]
	public void RefreshPlayerInfoShow(ListChangeType changeType, PlayerData playerData, int index)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x2E8EA5C", Offset = "0x2E8EA5C", VA = "0x2E8EA5C")]
	private void RefreshBlueScoreShow(float preValue, float newValue)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x2E8EAA4", Offset = "0x2E8EAA4", VA = "0x2E8EAA4")]
	private void RefreshRedScoreShow(float preValue, float newValue)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x2E8F260", Offset = "0x2E8F260", VA = "0x2E8F260")]
	private void RefreshCountDown(float preValue, float newValue)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x2E908B0", Offset = "0x2E908B0", VA = "0x2E908B0")]
	private void ChangeGameReadyShow(bool showReady)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x2E90AF4", Offset = "0x2E90AF4", VA = "0x2E90AF4")]
	public void ShowSettleResult(TeamState winTeam, PlayerData mvpPlayerData, bool isInit)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x2E90BC4", Offset = "0x2E90BC4", VA = "0x2E90BC4")]
	public void ShowSettleMVP(PlayerData mvpPlayerData)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x2E90B18", Offset = "0x2E90B18", VA = "0x2E90B18")]
	[IteratorStateMachine(typeof(<ShowSettleResultIEnumerator>d__73))]
	private IEnumerator ShowSettleResultIEnumerator(TeamState winTeam, PlayerData mvpPlayerData, bool isInit)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x2E90C00", Offset = "0x2E90C00", VA = "0x2E90C00")]
	public void ShowStageMVP(PlayerData mvpPlayerData, bool isInit)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x2E90C14", Offset = "0x2E90C14", VA = "0x2E90C14")]
	[AsyncStateMachine(typeof(<ShowCrown>d__75))]
	public System.Threading.Tasks.Task ShowCrown(long mvpUserID, bool isInStep = false)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x2E8F110", Offset = "0x2E8F110", VA = "0x2E8F110")]
	[AsyncStateMachine(typeof(<RemoveCrown>d__76))]
	public System.Threading.Tasks.Task RemoveCrown(long removeUserID)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x2E90D1C", Offset = "0x2E90D1C", VA = "0x2E90D1C")]
	private string FormatTime(float rowTime)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x2E8EAEC", Offset = "0x2E8EAEC", VA = "0x2E8EAEC")]
	private void SetCountDownText(float rowTime, bool isEnd = false)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x2E907C0", Offset = "0x2E907C0", VA = "0x2E907C0")]
	private void StartSoundCountDownTime(float countDownTime, int startTime)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x2E90800", Offset = "0x2E90800", VA = "0x2E90800")]
	private void EndSoundCountDownTime(float countDownTime, int startTime)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x2E8FD60", Offset = "0x2E8FD60", VA = "0x2E8FD60")]
	private void SetUAVShow()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x2E90E6C", Offset = "0x2E90E6C", VA = "0x2E90E6C")]
	[IteratorStateMachine(typeof(<WaitToSetUAVShow>d__82))]
	private IEnumerator WaitToSetUAVShow()
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x2E8F918", Offset = "0x2E8F918", VA = "0x2E8F918")]
	private void SetUAVIdle()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x2E8F8E8", Offset = "0x2E8F8E8", VA = "0x2E8F8E8")]
	private void SetUAVEmptyShow()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x2E90BD0", Offset = "0x2E90BD0", VA = "0x2E90BD0")]
	private void SetUAVMVPShow(PlayerData mvpPlayerData, bool isStage, bool isInit)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x2E90EE0", Offset = "0x2E90EE0", VA = "0x2E90EE0")]
	[IteratorStateMachine(typeof(<WaitToSetUAVMVPShow>d__86))]
	private IEnumerator WaitToSetUAVMVPShow(PlayerData mvpPlayerData, bool isStage, bool isInit)
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x2E8F948", Offset = "0x2E8F948", VA = "0x2E8F948")]
	[IteratorStateMachine(typeof(<WaitForPlayWaitMusic>d__87))]
	private IEnumerator WaitForPlayWaitMusic()
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x2E8FED8", Offset = "0x2E8FED8", VA = "0x2E8FED8")]
	[IteratorStateMachine(typeof(<WaitForPlayFightingMusic>d__88))]
	private IEnumerator WaitForPlayFightingMusic()
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x2E90F90", Offset = "0x2E90F90", VA = "0x2E90F90")]
	private void OnEventInitBGM(string eventID, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x2E8FBC4", Offset = "0x2E8FBC4", VA = "0x2E8FBC4")]
	private void DisplayGameReadyGo(bool show)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x2E8FAD8", Offset = "0x2E8FAD8", VA = "0x2E8FAD8")]
	private void ResetTaskBowTipsState(bool show)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x2E8FD80", Offset = "0x2E8FD80", VA = "0x2E8FD80")]
	private void ResetStageEndTips(bool show, bool isStageEnd, int tips = 0)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x2E8E100", Offset = "0x2E8E100", VA = "0x2E8E100")]
	private void CreatAllEnvironmentFX()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x2E90878", Offset = "0x2E90878", VA = "0x2E90878")]
	private void ShowStartGameFX()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x2E90088", Offset = "0x2E90088", VA = "0x2E90088")]
	private void ShowGroundFx(int stage)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x2E8FF4C", Offset = "0x2E8FF4C", VA = "0x2E8FF4C")]
	private void ShowStageLight()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x2E8F9BC", Offset = "0x2E8F9BC", VA = "0x2E8F9BC")]
	private void HideStageLight()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x2E8FA08", Offset = "0x2E8FA08", VA = "0x2E8FA08")]
	private void ResetWinFirework(bool isEnd)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x2E90180", Offset = "0x2E90180", VA = "0x2E90180")]
	private void PlaySoundStageEnd()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x2E90F9C", Offset = "0x2E90F9C", VA = "0x2E90F9C")]
	private void ShowCountDownLight()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x2E90FBC", Offset = "0x2E90FBC", VA = "0x2E90FBC")]
	private void HideCountDownLight()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x2E90FDC", Offset = "0x2E90FDC", VA = "0x2E90FDC")]
	public LargeScreenManager()
	{
	}
}
[Token(Token = "0x2000034")]
public class Mascot : MonoBehaviour
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> playerPoint;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 redPosition;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 bluePosition;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x5E3EAD4", Offset = "0x5E3EAD4", VA = "0x5E3EAD4")]
	public void InitMascot(TeamState teamState)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x5E3EB38", Offset = "0x5E3EB38", VA = "0x5E3EB38")]
	public Mascot()
	{
	}
}
[Token(Token = "0x2000035")]
public class Platform : NetworkBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform BowPoint;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform PlayerPoint;

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x5E3EB60", Offset = "0x5E3EB60", VA = "0x5E3EB60")]
	public Platform()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x5E3EBB8", Offset = "0x5E3EBB8", VA = "0x5E3EBB8", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public class PlayerInfoPrefab : MonoBehaviour
{
	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI ScoreText;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MVPText;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WebTextureImage MyWebTextureImage;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SelfBG;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float Score;

	[Token(Token = "0x17000018")]
	public ulong MyClientId
	{
		[Token(Token = "0x6000166")]
		[Address(RVA = "0x5E3EBF8", Offset = "0x5E3EBF8", VA = "0x5E3EBF8")]
		[CompilerGenerated]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000167")]
		[Address(RVA = "0x5E3EC00", Offset = "0x5E3EC00", VA = "0x5E3EC00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x5E3EC08", Offset = "0x5E3EC08", VA = "0x5E3EC08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x5E3EC54", Offset = "0x5E3EC54", VA = "0x5E3EC54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x5E3EC58", Offset = "0x5E3EC58", VA = "0x5E3EC58")]
	public void RefreshInfo(int index, PlayerData playerData)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x5E3EE10", Offset = "0x5E3EE10", VA = "0x5E3EE10")]
	public void RefreshScore(float score)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x5E3DD94", Offset = "0x5E3DD94", VA = "0x5E3DD94")]
	public void ShowMVP()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x5E3EE64", Offset = "0x5E3EE64", VA = "0x5E3EE64")]
	public PlayerInfoPrefab()
	{
	}
}
[Token(Token = "0x2000037")]
public class PlayerInputController : MonoBehaviour
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.XR.Interaction.Toolkit.XRController LeftXRController;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEngine.XR.Interaction.Toolkit.XRController RightXRController;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRInteractorLineVisual LeftXRInteractorLineVisual;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRInteractorLineVisual RightXRInteractorLineVisual;

	[Token(Token = "0x17000019")]
	public static PlayerInputController Instance
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0x5E3EE6C", Offset = "0x5E3EE6C", VA = "0x5E3EE6C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600016F")]
		[Address(RVA = "0x5E3EEB4", Offset = "0x5E3EEB4", VA = "0x5E3EEB4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public GameObject LeftGrabGameObject
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x5E3EF0C", Offset = "0x5E3EF0C", VA = "0x5E3EF0C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000171")]
		[Address(RVA = "0x5E3EF14", Offset = "0x5E3EF14", VA = "0x5E3EF14")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public GameObject RightGrabGameObject
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0x5E3EF1C", Offset = "0x5E3EF1C", VA = "0x5E3EF1C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000173")]
		[Address(RVA = "0x5E3EF24", Offset = "0x5E3EF24", VA = "0x5E3EF24")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x5E3EF2C", Offset = "0x5E3EF2C", VA = "0x5E3EF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x5E3EFA4", Offset = "0x5E3EFA4", VA = "0x5E3EFA4")]
	public void HideLeftControllerModel()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x5E3EFC4", Offset = "0x5E3EFC4", VA = "0x5E3EFC4")]
	public void ShowLeftControllerModel()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x5E3EFE4", Offset = "0x5E3EFE4", VA = "0x5E3EFE4")]
	public void HideRightControllerModel()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x5E3F004", Offset = "0x5E3F004", VA = "0x5E3F004")]
	public void ShowRightControllerModel()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x5E3F024", Offset = "0x5E3F024", VA = "0x5E3F024")]
	public void HideLeftXRInteractorLine()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x5E3F044", Offset = "0x5E3F044", VA = "0x5E3F044")]
	public void HideRightXRInteractorLine()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x5E3F064", Offset = "0x5E3F064", VA = "0x5E3F064")]
	public void ShowLeftXRInteractorLine()
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x5E3F084", Offset = "0x5E3F084", VA = "0x5E3F084")]
	public void ShowRightXRInteractorLine()
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x5E3F0A4", Offset = "0x5E3F0A4", VA = "0x5E3F0A4")]
	public PlayerInputController()
	{
	}
}
[Token(Token = "0x2000038")]
public class ScorecardManager : MonoBehaviour
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject InWaitPart;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject InReadyPart;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject InGamePart;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject InSettlePart;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("游戏中显示信息")]
	public Text GameShootTimeText;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text GameScoreTimeText;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text GameScoreRateText;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text GameScoreNumText;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text GameTimeText;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("准备倒计时显示信息")]
	public Text ReadyTimeText;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("结算阶段显示信息")]
	public Text SettleShootTimeText;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text SettleScoreTimeText;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text SettleScoreRateText;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text SettleScoreNumText;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text SettleTimeText;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int shootTime;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int scoreTime;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float scoreRate;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float scoreNum;

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x5E3F0AC", Offset = "0x5E3F0AC", VA = "0x5E3F0AC")]
	public void InitScorecardManager()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x5E3F728", Offset = "0x5E3F728", VA = "0x5E3F728")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x5E3F9B8", Offset = "0x5E3F9B8", VA = "0x5E3F9B8")]
	private void ResetScoreValues()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x5E3F394", Offset = "0x5E3F394", VA = "0x5E3F394")]
	private void ResetScorecardInformation()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x5E3F9C0", Offset = "0x5E3F9C0", VA = "0x5E3F9C0")]
	private void SetSettleInformation()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x5E3FB98", Offset = "0x5E3FB98", VA = "0x5E3FB98")]
	public void AddShootTime()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x5E3FD14", Offset = "0x5E3FD14", VA = "0x5E3FD14")]
	public void AddScoreNum(float score)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x5E3FC50", Offset = "0x5E3FC50", VA = "0x5E3FC50")]
	private void RefreshScoreRate()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x5E3FE5C", Offset = "0x5E3FE5C", VA = "0x5E3FE5C")]
	private void RefreshReadyTime(float previousValue, float newValue)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x5E3FE60", Offset = "0x5E3FE60", VA = "0x5E3FE60")]
	private void RefreshGameTime(float previousValue, float newValue)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x5E4001C", Offset = "0x5E4001C", VA = "0x5E4001C")]
	private void RefreshSettleTime(float previousValue, float newValue)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x5E3FEFC", Offset = "0x5E3FEFC", VA = "0x5E3FEFC")]
	private string FormatTime(float rowTime)
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x5E3F54C", Offset = "0x5E3F54C", VA = "0x5E3F54C")]
	public void RefreshScorecardState(ShooterGameState previousValue, ShooterGameState newValue)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x5E400B8", Offset = "0x5E400B8", VA = "0x5E400B8")]
	public ScorecardManager()
	{
	}
}
[Token(Token = "0x2000039")]
public enum ShooterGameState
{
	[Token(Token = "0x4000186")]
	InWait = 1,
	[Token(Token = "0x4000187")]
	InReady,
	[Token(Token = "0x4000188")]
	InGame,
	[Token(Token = "0x4000189")]
	InGameReady,
	[Token(Token = "0x400018A")]
	InHalfTime,
	[Token(Token = "0x400018B")]
	InSettle
}
[Token(Token = "0x200003A")]
public enum TeamState
{
	[Token(Token = "0x400018D")]
	None,
	[Token(Token = "0x400018E")]
	RedTeam,
	[Token(Token = "0x400018F")]
	BlueTeam,
	[Token(Token = "0x4000190")]
	Both
}
[Token(Token = "0x200003B")]
public enum ListChangeType
{
	[Token(Token = "0x4000192")]
	Add = 1,
	[Token(Token = "0x4000193")]
	RemoveAt,
	[Token(Token = "0x4000194")]
	Clear,
	[Token(Token = "0x4000195")]
	Change,
	[Token(Token = "0x4000196")]
	InGameAdd,
	[Token(Token = "0x4000197")]
	InGameRemove
}
[Token(Token = "0x200003C")]
public enum PressButtonType
{
	[Token(Token = "0x4000199")]
	LeftPrimaryButton = 1,
	[Token(Token = "0x400019A")]
	RightPrimaryButton,
	[Token(Token = "0x400019B")]
	LeftSecondaryButton,
	[Token(Token = "0x400019C")]
	RightSecondaryButton
}
[Token(Token = "0x200003D")]
public class ShooterGameManager : NetworkBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private struct <RefreshAllPlayerDataServer>d__178 : IAsyncStateMachine
	{
		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShooterGameManager <>4__this;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Group[] <groups>5__2;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerInfo[] <>7__wrap2;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <>7__wrap3;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayerInfo <player>5__5;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UniTask<UserProfile>.Awaiter <>u__1;

		[Token(Token = "0x6000236")]
		[Address(RVA = "0x5E4D604", Offset = "0x5E4D604", VA = "0x5E4D604", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0x5E4E1E8", Offset = "0x5E4E1E8", VA = "0x5E4E1E8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000040")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass181_0
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShooterGameManager <>4__this;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong clientId;

		[Token(Token = "0x6000238")]
		[Address(RVA = "0x63970E4", Offset = "0x63970E4", VA = "0x63970E4")]
		public <>c__DisplayClass181_0()
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0x63970EC", Offset = "0x63970EC", VA = "0x63970EC")]
		internal bool <AddPlayerServerAsync>b__0()
		{
			return default(bool);
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000041")]
	[CompilerGenerated]
	private struct <AddPlayerServerAsync>d__181 : IAsyncStateMachine
	{
		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShooterGameManager <>4__this;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ulong clientId;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass181_0 <>8__1;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UniTask<UserProfile>.Awaiter <>u__2;

		[Token(Token = "0x600023A")]
		[Address(RVA = "0x6397160", Offset = "0x6397160", VA = "0x6397160", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600023B")]
		[Address(RVA = "0x63980BC", Offset = "0x63980BC", VA = "0x63980BC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ShooterGameManager Instance;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NetworkObject TargetManagerPrefab;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject ScorecardManagerPrefab;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject LargeScreenManagerPrefab;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NetworkObject BowBlue;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NetworkObject BowRed;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float TotalGameReadyTime;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float TotalSettleTime;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public NetworkObject PlatformBluePrefab;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public NetworkObject PlatformRedPrefab;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro VersionText;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform RankListRoot;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public NetworkObject MascotPrefab;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public TargetManager GameTargetManager;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[HideInInspector]
	public LargeScreenManager GameLargeScreenManager;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private List<PlayerData> BluePlayerDataList;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<PlayerData> RedPlayerDataList;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform ArcheryGuideWindowRoot;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private RoomManager roomManager;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private bool HaveNetWorkSpawn;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Dictionary<int, NetworkObject> bowBlueObjectDic;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Dictionary<int, NetworkObject> bowRedObjectDic;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int inGamePlayerNum;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private int maxPlayerNum;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float preDistance;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Dictionary<int, Platform> platformBlueDic;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Dictionary<int, Platform> platformRedDic;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool SetPlayerToWait;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private TeamState winTeam;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private PlayerData mvpPlayer;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool isServer;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private Dictionary<int, Bow> bowGrabBlueClientList;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Dictionary<int, Bow> bowGrabRedClientList;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private bool isToWait;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private Vector3 needToSetPos;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private bool canSetMatchConfig;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private long _curRedTeamBuffTimerID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private long _curBlueTeamBuffTimerID;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Mascot BlueMascot;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private Mascot RedMascot;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private bool havePressLeftPrimaryButton;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
	private bool havePressLeftSecondaryButton;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x252")]
	private bool havePressRightPrimaryButton;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x253")]
	private bool havePressRightSecondaryButton;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	private readonly float totalPressTime;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private float currentPressTime;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	private bool isPressing;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private float reportWaitTime;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private bool needCountReportWaitTime;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string startStatus;

	[Token(Token = "0x1700001C")]
	public NetworkVariable<ShooterGameState> CurrentGameState
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x5E400C0", Offset = "0x5E400C0", VA = "0x5E400C0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x5E400C8", Offset = "0x5E400C8", VA = "0x5E400C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public NetworkVariable<float> CurrentGameTime
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x5E400D0", Offset = "0x5E400D0", VA = "0x5E400D0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x5E400D8", Offset = "0x5E400D8", VA = "0x5E400D8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public NetworkVariable<float> CurrentGameReadyTime
	{
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x5E400E0", Offset = "0x5E400E0", VA = "0x5E400E0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x5E400E8", Offset = "0x5E400E8", VA = "0x5E400E8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public NetworkVariable<float> CurrentHalfTime
	{
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x5E400F0", Offset = "0x5E400F0", VA = "0x5E400F0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x5E400F8", Offset = "0x5E400F8", VA = "0x5E400F8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public NetworkVariable<float> CurrentSettleTime
	{
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x5E40100", Offset = "0x5E40100", VA = "0x5E40100")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x5E40108", Offset = "0x5E40108", VA = "0x5E40108")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public NetworkVariable<float> BlueTeamScore
	{
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x5E40118", Offset = "0x5E40118", VA = "0x5E40118")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x5E40120", Offset = "0x5E40120", VA = "0x5E40120")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public NetworkVariable<float> RedTeamScore
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x5E40130", Offset = "0x5E40130", VA = "0x5E40130")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x5E40138", Offset = "0x5E40138", VA = "0x5E40138")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public NetworkVariable<int> CurrentRedTeamPlayerNum
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x5E40148", Offset = "0x5E40148", VA = "0x5E40148")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x5E40150", Offset = "0x5E40150", VA = "0x5E40150")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public NetworkVariable<int> CurrentBlueTeamPlayerNum
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x5E40160", Offset = "0x5E40160", VA = "0x5E40160")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x5E40168", Offset = "0x5E40168", VA = "0x5E40168")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public NetworkVariable<int> CurrentHalfTimeNum
	{
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x5E40178", Offset = "0x5E40178", VA = "0x5E40178")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x5E40180", Offset = "0x5E40180", VA = "0x5E40180")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public NetworkVariable<bool> haveSettled
	{
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x5E40190", Offset = "0x5E40190", VA = "0x5E40190")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x5E40198", Offset = "0x5E40198", VA = "0x5E40198")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public NetworkVariable<int> CurrentConfigIndex
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x5E401A8", Offset = "0x5E401A8", VA = "0x5E401A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x5E401B0", Offset = "0x5E401B0", VA = "0x5E401B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public NetworkVariable<long> RoomID
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x5E401C0", Offset = "0x5E401C0", VA = "0x5E401C0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x5E401C8", Offset = "0x5E401C8", VA = "0x5E401C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public NetworkVariable<long> RoomCreatTimesTamp
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x5E401D8", Offset = "0x5E401D8", VA = "0x5E401D8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x5E401E0", Offset = "0x5E401E0", VA = "0x5E401E0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public NetworkVariable<int> RoomBattleIndex
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x5E401F0", Offset = "0x5E401F0", VA = "0x5E401F0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x5E401F8", Offset = "0x5E401F8", VA = "0x5E401F8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public NetworkVariable<int> HaveGameTime
	{
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x5E40208", Offset = "0x5E40208", VA = "0x5E40208")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AB")]
		[Address(RVA = "0x5E40210", Offset = "0x5E40210", VA = "0x5E40210")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public ArcheryHitType CurrentArcheryHitType
	{
		[Token(Token = "0x60001AC")]
		[Address(RVA = "0x5E40220", Offset = "0x5E40220", VA = "0x5E40220")]
		[CompilerGenerated]
		get
		{
			return default(ArcheryHitType);
		}
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x5E40228", Offset = "0x5E40228", VA = "0x5E40228")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public ArrowFingerPoint LeftHandFingerPoint
	{
		[Token(Token = "0x60001AE")]
		[Address(RVA = "0x5E40230", Offset = "0x5E40230", VA = "0x5E40230")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AF")]
		[Address(RVA = "0x5E40238", Offset = "0x5E40238", VA = "0x5E40238")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public ArrowFingerPoint RightHandFingePoint
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x5E40248", Offset = "0x5E40248", VA = "0x5E40248")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x5E40250", Offset = "0x5E40250", VA = "0x5E40250")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public int PlayersCount
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0x5E40260", Offset = "0x5E40260", VA = "0x5E40260")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000030")]
	public ArcheryConstData ArcheryGameConfigData
	{
		[Token(Token = "0x60001B3")]
		[Address(RVA = "0x5E402A8", Offset = "0x5E402A8", VA = "0x5E402A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B4")]
		[Address(RVA = "0x5E402B0", Offset = "0x5E402B0", VA = "0x5E402B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000031")]
	public bool HaveBowBeingGrab
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0x5E402C0", Offset = "0x5E402C0", VA = "0x5E402C0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0x5E402C8", Offset = "0x5E402C8", VA = "0x5E402C8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000032")]
	public PlayerData MyPlayerData
	{
		[Token(Token = "0x60001B7")]
		[Address(RVA = "0x5E402D4", Offset = "0x5E402D4", VA = "0x5E402D4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B8")]
		[Address(RVA = "0x5E402DC", Offset = "0x5E402DC", VA = "0x5E402DC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public int MyIndex
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0x5E402EC", Offset = "0x5E402EC", VA = "0x5E402EC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0x5E402F4", Offset = "0x5E402F4", VA = "0x5E402F4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x5E402FC", Offset = "0x5E402FC", VA = "0x5E402FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x5E403B8", Offset = "0x5E403B8", VA = "0x5E403B8")]
	private void InitArrowPoint()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x5E40640", Offset = "0x5E40640", VA = "0x5E40640")]
	private void OnUpdateArrowPoint(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x5E40644", Offset = "0x5E40644", VA = "0x5E40644", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x5E41C18", Offset = "0x5E41C18", VA = "0x5E41C18", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x5E432B8", Offset = "0x5E432B8", VA = "0x5E432B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x5E44070", Offset = "0x5E44070", VA = "0x5E44070")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x5E44074", Offset = "0x5E44074", VA = "0x5E44074")]
	private void OnStartGame(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x5E443BC", Offset = "0x5E443BC", VA = "0x5E443BC")]
	private void OnStartReady(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x5E41218", Offset = "0x5E41218", VA = "0x5E41218")]
	private void CreatPlatformAndBow()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x5E42294", Offset = "0x5E42294", VA = "0x5E42294")]
	private void DestroyPlatformAndBow()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x5E4113C", Offset = "0x5E4113C", VA = "0x5E4113C")]
	private void InitTargetManager()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x5E42210", Offset = "0x5E42210", VA = "0x5E42210")]
	private void DestroyTargetManager()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x5E443F4", Offset = "0x5E443F4", VA = "0x5E443F4")]
	private void InitLargeScreenManager(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x5E446D0", Offset = "0x5E446D0", VA = "0x5E446D0")]
	private void StartGame()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x5E43710", Offset = "0x5E43710", VA = "0x5E43710")]
	private void StopStartGame()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x5E448C4", Offset = "0x5E448C4", VA = "0x5E448C4")]
	private void CheckPressOrder(PressButtonType buttonType)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x5E44960", Offset = "0x5E44960", VA = "0x5E44960")]
	private void PressLeftPrimaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x5E44988", Offset = "0x5E44988", VA = "0x5E44988")]
	private void PressRightPrimaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x5E44990", Offset = "0x5E44990", VA = "0x5E44990")]
	private void PressLeftSecondaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x5E449BC", Offset = "0x5E449BC", VA = "0x5E449BC")]
	private void PressRightSecondaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x5E447A8", Offset = "0x5E447A8", VA = "0x5E447A8")]
	[ServerRpc(RequireOwnership = false)]
	public void StartGameServerRpc()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x5E41748", Offset = "0x5E41748", VA = "0x5E41748")]
	private void ChangeGameState(ShooterGameState state)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x5E4412C", Offset = "0x5E4412C", VA = "0x5E4412C")]
	private void ClearAllPlayerData()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x5E45270", Offset = "0x5E45270", VA = "0x5E45270")]
	private void SettleResult()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x5E45714", Offset = "0x5E45714", VA = "0x5E45714")]
	private void RefreshMVPData()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x5E44FE8", Offset = "0x5E44FE8", VA = "0x5E44FE8")]
	private void SetStageMVP()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x5E45E38", Offset = "0x5E45E38", VA = "0x5E45E38")]
	private void CreatAllMascot(TeamState winTeam)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x5E449E0", Offset = "0x5E449E0", VA = "0x5E449E0")]
	private void DestroyAllMascot()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x5E459D8", Offset = "0x5E459D8", VA = "0x5E459D8")]
	private void ReportLeaderBoardInfo()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x5E46028", Offset = "0x5E46028", VA = "0x5E46028")]
	[ClientRpc]
	public void ReceiveSettleResultClientRpc(TeamState winTeam, PlayerData mvpPlayerData, bool isInit, [Optional] ClientRpcParams reveiveClient)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x5E463DC", Offset = "0x5E463DC", VA = "0x5E463DC")]
	[ClientRpc]
	public void ReceiveSettleMVPInitClientRpc(PlayerData mvpPlayerData, [Optional] ClientRpcParams reveiveClient)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x5E4621C", Offset = "0x5E4621C", VA = "0x5E4621C")]
	[ClientRpc]
	public void ReceiveMVPClientRpc(PlayerData mvpPlayerData, bool isInit)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x5E46574", Offset = "0x5E46574", VA = "0x5E46574")]
	[ClientRpc]
	public void ReceiveStageMVPInitClientRpc(PlayerData mvpPlayerData, [Optional] ClientRpcParams reveiveClient)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x5E44208", Offset = "0x5E44208", VA = "0x5E44208")]
	[AsyncStateMachine(typeof(<RefreshAllPlayerDataServer>d__178))]
	private void RefreshAllPlayerDataServer()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x5E46710", Offset = "0x5E46710", VA = "0x5E46710")]
	private void SetPlayerBornPos(ulong clientId)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x5E46924", Offset = "0x5E46924", VA = "0x5E46924")]
	private void AddPlayerServer(ulong clientId)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x5E46928", Offset = "0x5E46928", VA = "0x5E46928")]
	[AsyncStateMachine(typeof(<AddPlayerServerAsync>d__181))]
	private void AddPlayerServerAsync(ulong clientId)
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x5E469EC", Offset = "0x5E469EC", VA = "0x5E469EC")]
	private TeamState GetInvitorTeam(long userID)
	{
		return default(TeamState);
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x5E46CD4", Offset = "0x5E46CD4", VA = "0x5E46CD4")]
	private void RemovePlayerServer(ulong clientId)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x5E470B0", Offset = "0x5E470B0", VA = "0x5E470B0")]
	public void CheckOwnBow(ulong playerClientId)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x5E47590", Offset = "0x5E47590", VA = "0x5E47590")]
	public void UpdatePlayerScore(ulong changeClient, float scoreNum)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x5E453D0", Offset = "0x5E453D0", VA = "0x5E453D0")]
	[ClientRpc]
	public void ChangePlayerDataListClientRpc(ListChangeType changeType, PlayerData playerData, int index)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x5E47CE0", Offset = "0x5E47CE0", VA = "0x5E47CE0")]
	public void AskServerInitPlayerInfo()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x5E47D10", Offset = "0x5E47D10", VA = "0x5E47D10")]
	[ServerRpc(RequireOwnership = false)]
	public void ReceiveInitPlayerInfoAskServerRpc(ulong askClientID)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x5E48158", Offset = "0x5E48158", VA = "0x5E48158")]
	[ClientRpc]
	public void ReceiveInitPlayerInfoClientRpc(PlayerData playerData, int index, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x5E48328", Offset = "0x5E48328", VA = "0x5E48328")]
	private void DestroyClientInstantiates()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x5E483D0", Offset = "0x5E483D0", VA = "0x5E483D0")]
	private TeamState GetNextTeamState()
	{
		return default(TeamState);
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x5E48428", Offset = "0x5E48428", VA = "0x5E48428")]
	[ServerRpc(RequireOwnership = false)]
	public void RequestGetBowOwnerServerRpc(BowType bowType, int bowIndex, ulong clientId)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x5E43964", Offset = "0x5E43964", VA = "0x5E43964")]
	private void ResetAllBowPosition()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x5E43A20", Offset = "0x5E43A20", VA = "0x5E43A20")]
	private void SetAllPlayerToPosition(bool toGame)
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x5E48CC8", Offset = "0x5E48CC8", VA = "0x5E48CC8")]
	public float GetDoubleHitRise(int doubleHit)
	{
		return default(float);
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x5E488C4", Offset = "0x5E488C4", VA = "0x5E488C4")]
	[ClientRpc]
	public void SetPlayerToPlatformPosClientRpc(bool isInit, Vector3 playerPosition, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x5E48DD4", Offset = "0x5E48DD4", VA = "0x5E48DD4")]
	private void SetPlayerToPlatformPosClient(bool isInit, Vector3 playerPosition)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x5E467DC", Offset = "0x5E467DC", VA = "0x5E467DC")]
	[ClientRpc]
	public void SetPlayerToWaitPosClientRpc(bool isInit, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x5E49194", Offset = "0x5E49194", VA = "0x5E49194")]
	private void SetPlayerToWaitPosClient(bool isInit)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x5E48A54", Offset = "0x5E48A54", VA = "0x5E48A54")]
	[ClientRpc]
	public void SetPlayerToMascotPosClientRpc(int index, TeamState winTeamState, Vector3 playerPosition, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x5E44B18", Offset = "0x5E44B18", VA = "0x5E44B18")]
	public void StartInGame()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x5E44D80", Offset = "0x5E44D80", VA = "0x5E44D80")]
	public void StartInhalfTime()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x5E45008", Offset = "0x5E45008", VA = "0x5E45008")]
	public void StartInSettle()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x5E495C4", Offset = "0x5E495C4", VA = "0x5E495C4")]
	public void SetTeamBuff(TargetType team, Vector3 pos, ArcheryTargetGroupType groupType = ArcheryTargetGroupType.End)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x5E49A0C", Offset = "0x5E49A0C", VA = "0x5E49A0C")]
	private void FindBowInfomation()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x5E49BEC", Offset = "0x5E49BEC", VA = "0x5E49BEC")]
	public void ChangeBowGrabInClient(int index, bool isBlue, bool isHold)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x5E487D0", Offset = "0x5E487D0", VA = "0x5E487D0")]
	[ClientRpc]
	public void ResetAllBowGrabStateInClientClientRpc()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x5E49DA8", Offset = "0x5E49DA8", VA = "0x5E49DA8")]
	public void ResetAllBowGrabStateInClient()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x5E453B8", Offset = "0x5E453B8", VA = "0x5E453B8")]
	private void UpdateGameConfig()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x5E49E18", Offset = "0x5E49E18", VA = "0x5E49E18")]
	[ClientRpc]
	private void LoadGameConfigClientRpc()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x5E40F7C", Offset = "0x5E40F7C", VA = "0x5E40F7C")]
	private void LoadGameConfig([Optional] string key, [Optional] object sender, [Optional] IArgs args)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x5E48F3C", Offset = "0x5E48F3C", VA = "0x5E48F3C")]
	private void CanSetPosition(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x5E49F98", Offset = "0x5E49F98", VA = "0x5E49F98")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x5E4A0A0", Offset = "0x5E4A0A0", VA = "0x5E4A0A0")]
	[ServerRpc(RequireOwnership = false)]
	public void RequireResetPositionServerRpc(ulong clientId)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x5E49F0C", Offset = "0x5E49F0C", VA = "0x5E49F0C")]
	private void SetMatchConfig()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x5E4A474", Offset = "0x5E4A474", VA = "0x5E4A474")]
	private void OnNetworkPoolSpawn(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x5E4A56C", Offset = "0x5E4A56C", VA = "0x5E4A56C")]
	private void OnNetworkPoolDeSpawn(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x5E471D0", Offset = "0x5E471D0", VA = "0x5E471D0")]
	private void ResetBowState(TeamState teamState, int index)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x5E3DDB4", Offset = "0x5E3DDB4", VA = "0x5E3DDB4")]
	public void RequireInStepCrown(long MVPUserID)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x5E4A678", Offset = "0x5E4A678", VA = "0x5E4A678")]
	[ServerRpc(RequireOwnership = false)]
	public void InStepCrownServerRpc(long MVPUserID)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x5E4A798", Offset = "0x5E4A798", VA = "0x5E4A798")]
	[ClientRpc]
	public void InStepCrownClientRpc(long MVPUserID)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x5E4A928", Offset = "0x5E4A928", VA = "0x5E4A928")]
	public void CheckEndGameResetAllBowState(ShooterGameState preValue, ShooterGameState newValue)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x5E47BAC", Offset = "0x5E47BAC", VA = "0x5E47BAC")]
	private void ResetAllBowState(bool isEndGame)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x5E419E4", Offset = "0x5E419E4", VA = "0x5E419E4")]
	private void RegisterArcheryReport()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x5E427B8", Offset = "0x5E427B8", VA = "0x5E427B8")]
	private void RemoveRegisterArcheryReport()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x5E4A970", Offset = "0x5E4A970", VA = "0x5E4A970")]
	private void EnterRoomResultReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x5E42E3C", Offset = "0x5E42E3C", VA = "0x5E42E3C")]
	private void StayRoomReport()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x5E42A18", Offset = "0x5E42A18", VA = "0x5E42A18")]
	public bool IsInGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x5E4AAD4", Offset = "0x5E4AAD4", VA = "0x5E4AAD4")]
	private string GetCurrentSituationType()
	{
		return null;
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x5E4AC90", Offset = "0x5E4AC90", VA = "0x5E4AC90")]
	private int GetLeftTime()
	{
		return default(int);
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x5E442C4", Offset = "0x5E442C4", VA = "0x5E442C4")]
	[ClientRpc]
	public void ReceiveStartGameClientRpc()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x5E41B20", Offset = "0x5E41B20", VA = "0x5E41B20")]
	private void StartCountReportWaitTime(bool isStart)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x5E477A4", Offset = "0x5E477A4", VA = "0x5E477A4")]
	private void ReportStartGame(bool isBegin, int waitTime, TeamState teamState)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x5E47984", Offset = "0x5E47984", VA = "0x5E47984")]
	public string GetBattleID()
	{
		return null;
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x5E47AB0", Offset = "0x5E47AB0", VA = "0x5E47AB0")]
	public string GetQueueName()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x5E428F4", Offset = "0x5E428F4", VA = "0x5E428F4")]
	private void CheckReportStartCoveringPosition()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x5E43720", Offset = "0x5E43720", VA = "0x5E43720")]
	private void UpdatePlayerDataCoverTime()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x5E43F6C", Offset = "0x5E43F6C", VA = "0x5E43F6C")]
	[ClientRpc]
	public void EndGameReportClientRpc()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x5E42B1C", Offset = "0x5E42B1C", VA = "0x5E42B1C")]
	private void EndGameReport(bool isExit)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x5E4B014", Offset = "0x5E4B014", VA = "0x5E4B014")]
	private bool OtherTeamNone(TeamState myTeamState)
	{
		return default(bool);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x5E4B0B4", Offset = "0x5E4B0B4", VA = "0x5E4B0B4")]
	private void AddFriendReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x5E4B2DC", Offset = "0x5E4B2DC", VA = "0x5E4B2DC")]
	public ShooterGameManager()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x5E4BF78", Offset = "0x5E4BF78", VA = "0x5E4BF78")]
	private static void __rpc_handler_3301777140(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x5E4C020", Offset = "0x5E4C020", VA = "0x5E4C020")]
	private static void __rpc_handler_3328096844(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x5E4C1E4", Offset = "0x5E4C1E4", VA = "0x5E4C1E4")]
	private static void __rpc_handler_304669156(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x5E4C350", Offset = "0x5E4C350", VA = "0x5E4C350")]
	private static void __rpc_handler_1015016585(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x5E4C49C", Offset = "0x5E4C49C", VA = "0x5E4C49C")]
	private static void __rpc_handler_707904718(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x5E4C608", Offset = "0x5E4C608", VA = "0x5E4C608")]
	private static void __rpc_handler_2745345517(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x5E4C798", Offset = "0x5E4C798", VA = "0x5E4C798")]
	private static void __rpc_handler_1411836346(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x5E4C87C", Offset = "0x5E4C87C", VA = "0x5E4C87C")]
	private static void __rpc_handler_1107902037(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x5E4CA18", Offset = "0x5E4CA18", VA = "0x5E4CA18")]
	private static void __rpc_handler_160330159(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x5E4CB60", Offset = "0x5E4CB60", VA = "0x5E4CB60")]
	private static void __rpc_handler_1299118094(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x5E4CCD8", Offset = "0x5E4CCD8", VA = "0x5E4CCD8")]
	private static void __rpc_handler_793117523(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x5E4CE04", Offset = "0x5E4CE04", VA = "0x5E4CE04")]
	private static void __rpc_handler_3007629373(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x5E4CFA4", Offset = "0x5E4CFA4", VA = "0x5E4CFA4")]
	private static void __rpc_handler_3892886993(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x5E4D04C", Offset = "0x5E4D04C", VA = "0x5E4D04C")]
	private static void __rpc_handler_1824035972(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x5E4D0F4", Offset = "0x5E4D0F4", VA = "0x5E4D0F4")]
	private static void __rpc_handler_3932532939(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x5E4D1D8", Offset = "0x5E4D1D8", VA = "0x5E4D1D8")]
	private static void __rpc_handler_2388099244(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x5E4D2BC", Offset = "0x5E4D2BC", VA = "0x5E4D2BC")]
	private static void __rpc_handler_1162648333(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x5E4D3A0", Offset = "0x5E4D3A0", VA = "0x5E4D3A0")]
	private static void __rpc_handler_4203428112(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x5E4D448", Offset = "0x5E4D448", VA = "0x5E4D448")]
	private static void __rpc_handler_3259660731(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x5E4D4F0", Offset = "0x5E4D4F0", VA = "0x5E4D4F0", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000043")]
public enum ArcheryTargetGroupType
{
	[Token(Token = "0x40001FC")]
	HorizontalThree,
	[Token(Token = "0x40001FD")]
	VerticalThree,
	[Token(Token = "0x40001FE")]
	LeftfallingThree,
	[Token(Token = "0x40001FF")]
	RightfallingThree,
	[Token(Token = "0x4000200")]
	CrossFive,
	[Token(Token = "0x4000201")]
	CakeFive,
	[Token(Token = "0x4000202")]
	MoveRightThree,
	[Token(Token = "0x4000203")]
	MoveLeftThree,
	[Token(Token = "0x4000204")]
	LightingAward,
	[Token(Token = "0x4000205")]
	BombAward,
	[Token(Token = "0x4000206")]
	End
}
[Token(Token = "0x2000044")]
public enum TargetDistanceType
{
	[Token(Token = "0x4000208")]
	Near,
	[Token(Token = "0x4000209")]
	Middle,
	[Token(Token = "0x400020A")]
	Far
}
[Token(Token = "0x2000045")]
public enum TargetClassicType
{
	[Token(Token = "0x400020C")]
	Static,
	[Token(Token = "0x400020D")]
	Motion,
	[Token(Token = "0x400020E")]
	Award
}
[Token(Token = "0x2000046")]
public class ArcheryTargetGenerator
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private NetworkObject _targetGo;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _genTimes;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int[] _distanceConfig;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Vector3Int, Vector3> _mapInfo;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3Int[] _mapNumber;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3Int[] _awardMapNumber;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[][] _timeLines;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[][][] _weightsList;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _timeSlot;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _stage;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int[] _practiseWeights;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] _practiseDistance;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _lastAreaIndex;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _lastGenGroup;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, StaticTarget> _targets;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float[] _lifeTimes;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int[] _OcclusionMap;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int[] _MyOcclusionMapIndex;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _targetsSpacing;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector2[] _sizeArea;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _inAwardTime;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _inPractise;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private ArcheryTargetGroupType? _curAwardType;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[][] _awardStageWeights;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x63984F0", Offset = "0x63984F0", VA = "0x63984F0")]
	public ArcheryTargetGenerator(Dictionary<Vector3Int, Vector3> mapInfo, NetworkObject go)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x6398770", Offset = "0x6398770", VA = "0x6398770")]
	public void Update(float time)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x63989C4", Offset = "0x63989C4", VA = "0x63989C4")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x6398D98", Offset = "0x6398D98", VA = "0x6398D98")]
	public void RemoveTarget(string id)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x6398FA0", Offset = "0x6398FA0", VA = "0x6398FA0")]
	public void SetGenerateData(int count, int stage, bool isPractise = false)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x6399710", Offset = "0x6399710", VA = "0x6399710")]
	public void GenerateAwardTargetByConfig(NetworkObject go, ArcheryTargetGroupType type, int dis, float leftTime, float speed)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x6399F24", Offset = "0x6399F24", VA = "0x6399F24")]
	public void SetAwardMapArea(Dictionary<Vector3Int, Vector3> mapInfo)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x6398D4C", Offset = "0x6398D4C", VA = "0x6398D4C")]
	public void SwitchAwardStage(ArcheryTargetGroupType? type)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x63988F8", Offset = "0x63988F8", VA = "0x63988F8")]
	private void RandomGenTarget()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x639902C", Offset = "0x639902C", VA = "0x639902C")]
	public void SetConfigData()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x63987F4", Offset = "0x63987F4", VA = "0x63987F4")]
	private bool CheckGenerate()
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x639A3B0", Offset = "0x639A3B0", VA = "0x639A3B0")]
	private void RecordMapIndex(int index)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x6398F44", Offset = "0x6398F44", VA = "0x6398F44")]
	private void RemoveMapIndex(int index)
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x6398CF8", Offset = "0x6398CF8", VA = "0x6398CF8")]
	private void ResetMyOcclusionMapIndex()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x639B128", Offset = "0x639B128", VA = "0x639B128")]
	private Vector3Int GetPosNumberMapIndex(int p)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x6399C1C", Offset = "0x6399C1C", VA = "0x6399C1C")]
	private void CreateAwardTarget(ArcheryTargetGroupType type, Vector3Int posNumber, float leftTime, int index, TargetDistanceType distance, NetworkObject go, float speed)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x639A408", Offset = "0x639A408", VA = "0x639A408")]
	private void CreateTargetGroup(ArcheryTargetGroupType type, Vector3Int posNumber, float leftTime, int index, TargetDistanceType distance)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x639B48C", Offset = "0x639B48C", VA = "0x639B48C")]
	private NetworkObject[] InstantiateTarget(Vector3Int posNumber, int[] factor)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x639B164", Offset = "0x639B164", VA = "0x639B164")]
	private Vector3 GetRandomOffsetByDistance(int z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x63997B8", Offset = "0x63997B8", VA = "0x63997B8")]
	private int GetAwardTargetRandomPosNumber()
	{
		return default(int);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x639A0A4", Offset = "0x639A0A4", VA = "0x639A0A4")]
	private int GetRandomNoOcclusionIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x6399BE0", Offset = "0x6399BE0", VA = "0x6399BE0")]
	public Vector3Int GetRandomPosNumber(int distanceLimit, int index)
	{
		return default(Vector3Int);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x6399FFC", Offset = "0x6399FFC", VA = "0x6399FFC")]
	private int GetRandomTargetGroupType()
	{
		return default(int);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x639B884", Offset = "0x639B884", VA = "0x639B884")]
	private int[] GetCurTargetTypeWeights()
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x6399FA4", Offset = "0x6399FA4", VA = "0x6399FA4")]
	private int GetDistanceByConfig()
	{
		return default(int);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x639B97C", Offset = "0x639B97C", VA = "0x639B97C")]
	private int GetRandomIndexByWeight(int[] weights)
	{
		return default(int);
	}
}
[Token(Token = "0x2000048")]
public class ArcheryTargetMapInfo : ScriptableObject, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<Vector3Int> _keys;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<Vector3> _values;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public Dictionary<Vector3Int, Vector3> MapDictionary;

	[Token(Token = "0x17000034")]
	public Vector3 this[Vector3Int k]
	{
		[Token(Token = "0x600025F")]
		[Address(RVA = "0x639C058", Offset = "0x639C058", VA = "0x639C058")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000260")]
		[Address(RVA = "0x639C120", Offset = "0x639C120", VA = "0x639C120")]
		set
		{
		}
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x639BAF8", Offset = "0x639BAF8", VA = "0x639BAF8", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x639BEE4", Offset = "0x639BEE4", VA = "0x639BEE4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x639C1B0", Offset = "0x639C1B0", VA = "0x639C1B0")]
	public ArcheryTargetMapInfo()
	{
	}
}
[Token(Token = "0x2000049")]
public class StaticTarget : Damageable
{
	[Token(Token = "0x200004A")]
	[CompilerGenerated]
	private sealed class <TargetTimeout>d__22 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StaticTarget <>4__this;

		[Token(Token = "0x17000036")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x639D66C", Offset = "0x639D66C", VA = "0x639D66C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027B")]
			[Address(RVA = "0x639D6B4", Offset = "0x639D6B4", VA = "0x639D6B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x639CBDC", Offset = "0x639CBDC", VA = "0x639CBDC")]
		[DebuggerHidden]
		public <TargetTimeout>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x639D544", Offset = "0x639D544", VA = "0x639D544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x639D548", Offset = "0x639D548", VA = "0x639D548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x639D674", Offset = "0x639D674", VA = "0x639D674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[HideInInspector]
	public int OcclusionIndex;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool StartSurvive;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float currentSurvivalTime;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float maxSurvivalTime;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string _id;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float _speed;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float _maxMoveDistance;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private Vector3 _dir;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private Vector3 _originalPosition;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private Vector3 _trave;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float SpeedB;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float SpeedK;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private bool _right;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float allAngle;

	[Token(Token = "0x17000035")]
	public string ID
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0x639C2D8", Offset = "0x639C2D8", VA = "0x639C2D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x639C2E0", Offset = "0x639C2E0", VA = "0x639C2E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x639B204", Offset = "0x639B204", VA = "0x639B204")]
	public void InitTarget(string id, float survivalTime, GameObject InsPrefab, [Optional] Vector3 moveDir, int occlusionIndex = 0, TargetDistanceType distance = TargetDistanceType.Far, TargetClassicType classicType = TargetClassicType.Static, ArcheryTargetGroupType groupType = ArcheryTargetGroupType.End)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x639C57C", Offset = "0x639C57C", VA = "0x639C57C")]
	[ClientRpc]
	private void InitTargetClientRpc(TargetClassicType classicType, ArcheryTargetGroupType type)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x639C8C8", Offset = "0x639C8C8", VA = "0x639C8C8")]
	[ClientRpc]
	private void InStepTargetDisAppearClientRpc()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x639C9D4", Offset = "0x639C9D4", VA = "0x639C9D4")]
	public void ShootDestroy()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x6398BF8", Offset = "0x6398BF8", VA = "0x6398BF8")]
	[ClientRpc]
	public void FinishDestroyClientRpc()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x639C508", Offset = "0x639C508", VA = "0x639C508")]
	[IteratorStateMachine(typeof(<TargetTimeout>d__22))]
	private IEnumerator TargetTimeout()
	{
		return null;
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x639CC04", Offset = "0x639CC04", VA = "0x639CC04")]
	[ClientRpc]
	private void ShowTimeoutFxClientRpc()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x639CD64", Offset = "0x639CD64", VA = "0x639CD64")]
	private void DestroyTarget()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x639C740", Offset = "0x639C740", VA = "0x639C740")]
	private void ShowTarget()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x639CE64", Offset = "0x639CE64", VA = "0x639CE64")]
	public StaticTarget()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x639D1F8", Offset = "0x639D1F8", VA = "0x639D1F8")]
	private static void __rpc_handler_3672982547(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x639D30C", Offset = "0x639D30C", VA = "0x639D30C")]
	private static void __rpc_handler_1369096879(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x639D3B4", Offset = "0x639D3B4", VA = "0x639D3B4")]
	private static void __rpc_handler_3213903883(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x639D45C", Offset = "0x639D45C", VA = "0x639D45C")]
	private static void __rpc_handler_715382689(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x639D504", Offset = "0x639D504", VA = "0x639D504", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x200004B")]
public enum TargetType
{
	[Token(Token = "0x400023E")]
	RedTarget = 1,
	[Token(Token = "0x400023F")]
	BlueTarget,
	[Token(Token = "0x4000240")]
	PublicTarget
}
[Token(Token = "0x200004C")]
public class TargetManager : NetworkBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("固定靶参数")]
	public NetworkObject BlueTargetGo;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NetworkObject RedTargetGo;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NetworkObject PublicTargetGo;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NetworkObject Award1TargetGo;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NetworkObject Award2TargetGo;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Space]
	public ArcheryTargetMapInfo MapInfo;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _isInGame;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _isInPtactices;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool _generatePublic;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _realTimeSinceStart;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _realTimeSinceStartSec;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _curStage;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _bInit;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<int> _showPublicTimes;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _leftTime;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _speed;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ArcheryTargetGroupType _awardType;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int _awardTargetDistance;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ArcheryTargetGenerator RedGenerator;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private ArcheryTargetGenerator BlueGenerator;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private ArcheryTargetGenerator PublicGenerator;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x639D6BC", Offset = "0x639D6BC", VA = "0x639D6BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x639D6C0", Offset = "0x639D6C0", VA = "0x639D6C0")]
	private void InitGenerator()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x639DFD4", Offset = "0x639DFD4", VA = "0x639DFD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x639CB94", Offset = "0x639CB94", VA = "0x639CB94")]
	public void RemoveTarget(string id)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x639E4D0", Offset = "0x639E4D0", VA = "0x639E4D0")]
	public void StartCreatTarget(int stage)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x639E60C", Offset = "0x639E60C", VA = "0x639E60C")]
	public void StopCreatTarget()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x63982A0", Offset = "0x63982A0", VA = "0x63982A0")]
	public void SwitchToAwardTargetStage(ArcheryTargetGroupType? type)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x639E654", Offset = "0x639E654", VA = "0x639E654")]
	public void StartCreatePracticeTargets()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x639E6D8", Offset = "0x639E6D8", VA = "0x639E6D8")]
	public float GetBuffTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x639E140", Offset = "0x639E140", VA = "0x639E140")]
	private bool CheckCreateAwardTarget(out float awardLeftTime, out float awardTargetSpeed)
	{
		return default(bool);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x639E768", Offset = "0x639E768", VA = "0x639E768")]
	public TargetManager()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x639E7C8", Offset = "0x639E7C8", VA = "0x639E7C8", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x200004E")]
public class TargetScoreTips : MonoBehaviour
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isCombo;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _score;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _comboBonus;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI NormalScores;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI NormalCombo;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI HighScores;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI HighCombo;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CanvasGroup CGroup;

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x639ECDC", Offset = "0x639ECDC", VA = "0x639ECDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x639ECE0", Offset = "0x639ECE0", VA = "0x639ECE0")]
	public void Show(float scores, float comboBonus, bool hightScore, int doubleHit)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x639F110", Offset = "0x639F110", VA = "0x639F110")]
	public TargetScoreTips()
	{
	}
}
[Token(Token = "0x200004F")]
public class UAV : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000050")]
	[CompilerGenerated]
	private struct <ShowMVP>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UAV <>4__this;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerData playerData;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isStage;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x639FA88", Offset = "0x639FA88", VA = "0x639FA88", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x63A0090", Offset = "0x63A0090", VA = "0x63A0090", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UAVType MyUAVType;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 IdlePosition;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 ShowPosition;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 IdleAngle;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 ShowAngle;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject MVPShow;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WebTextureImage MVPBust;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI MVPName;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject RedMVPBG;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject BlueMVPBG;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject EmptyShow;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject BlueBestTips;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject RedBestTips;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject BlueMVPTips;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject RedMVPTips;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject FlyingFX;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("DoPath的中间点，以show的顺序写")]
	public List<Vector3> pathPointList;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion idleQuaternion;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion showQuaternion;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3[] showPath;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3[] idlePath;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool canChanged;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x639F118", Offset = "0x639F118", VA = "0x639F118")]
	public void InitUAV()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x639F590", Offset = "0x639F590", VA = "0x639F590")]
	public void UAVShow()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x639F73C", Offset = "0x639F73C", VA = "0x639F73C")]
	public void UAVIdle()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x639F8E8", Offset = "0x639F8E8", VA = "0x639F8E8")]
	public void ShowEmpty()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x639F920", Offset = "0x639F920", VA = "0x639F920")]
	[AsyncStateMachine(typeof(<ShowMVP>d__26))]
	public System.Threading.Tasks.Task ShowMVP(PlayerData playerData, bool isStage)
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x639F1C4", Offset = "0x639F1C4", VA = "0x639F1C4")]
	private void InitPathPoint()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x639FA34", Offset = "0x639FA34", VA = "0x639FA34")]
	public UAV()
	{
	}
}
[Token(Token = "0x2000051")]
public enum EffectPoolType
{
	[Token(Token = "0x4000288")]
	None,
	[Token(Token = "0x4000289")]
	SubmachineBulletAttackEffect,
	[Token(Token = "0x400028A")]
	MonsterDestroyEffect,
	[Token(Token = "0x400028B")]
	GateWayEffect
}
[Token(Token = "0x2000052")]
public class AttackedEffect : MonoBehaviour
{
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowTime;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isShow;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentShowTime;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObjectPool mybelongPool;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EffectPoolType myEffectPoolType;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x63A009C", Offset = "0x63A009C", VA = "0x63A009C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x63A0290", Offset = "0x63A0290", VA = "0x63A0290")]
	public void InitAttackedEffect(GameObjectPool belongPool, float initScale = 1f, EffectPoolType effectPoolType = EffectPoolType.None)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x63A02F8", Offset = "0x63A02F8", VA = "0x63A02F8")]
	public AttackedEffect()
	{
	}
}
[Token(Token = "0x2000053")]
public enum BulletType
{
	[Token(Token = "0x4000292")]
	None,
	[Token(Token = "0x4000293")]
	RPGBullet,
	[Token(Token = "0x4000294")]
	SubmachineBullet,
	[Token(Token = "0x4000295")]
	SniperRifleBullet,
	[Token(Token = "0x4000296")]
	ShotBullet,
	[Token(Token = "0x4000297")]
	Parclose
}
[Token(Token = "0x2000054")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x2000055")]
	[CompilerGenerated]
	private sealed class <QueueDestroy>d__41 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Bullet <>4__this;

		[Token(Token = "0x17000038")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0x63A47CC", Offset = "0x63A47CC", VA = "0x63A47CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0x63A4814", Offset = "0x63A4814", VA = "0x63A4814", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x63A1654", Offset = "0x63A1654", VA = "0x63A1654")]
		[DebuggerHidden]
		public <QueueDestroy>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x63A4710", Offset = "0x63A4710", VA = "0x63A4710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x63A4714", Offset = "0x63A4714", VA = "0x63A4714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x63A47D4", Offset = "0x63A47D4", VA = "0x63A47D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BulletType MyBulletType;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform HeadTransform;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DestroyTime;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ParcloseScaleChangeSpeed;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrailRenderer SubmachineNormalBulletTrail;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrailRenderer SubmachineSpecialBulletTrail;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailRenderer RPGNormalBulletTrail;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool NeedCheckAttack;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float initHitRadius;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float initDamage;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float initRPGMiddleDamage;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float initRPGOuterDamage;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float initRPGMiddleBomeRange;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float initRPGOuterBomeRange;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 prePosition;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 lastPosition;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine queueDestroy;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool Flying;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private RaycastHit currentHitInfo;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CSFMonster currentDamageable;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObjectPool belongGameObjectPool;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool canDamageTarget;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int myWeaponIndex;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float myBulletSacle;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int myBulletIndex;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObjectPool myAttackEffectPool;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float myEnergyAbsorptionDamageRatio;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Gun myBelongGun;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int currentAttackNum;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int totalCanAttackNum;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float myShotForce;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool canTrace;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Transform traceTarget;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float rotateSpeed;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObjectPool myTimeBomObjectPool;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private CSFMonster lastAttackMonster;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float currentFlyTime;

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x63A0300", Offset = "0x63A0300", VA = "0x63A0300")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x63A0650", Offset = "0x63A0650", VA = "0x63A0650")]
	private void UpdateForWard(float changeSpeed)
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x63A0960", Offset = "0x63A0960", VA = "0x63A0960")]
	private void InitBullet()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x63A0BDC", Offset = "0x63A0BDC", VA = "0x63A0BDC")]
	public void ShootBullet(int weaponIndex, float shotForce, GameObjectPool belongPool, bool canDamage, float initScale, float energyAbsorptionDamageRatio, int bulletIndex = 1, [Optional] GameObjectPool attackEffectPool, [Optional] Gun belongGun, [Optional] GameObjectPool timeBombPool)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x63A15D0", Offset = "0x63A15D0", VA = "0x63A15D0")]
	[IteratorStateMachine(typeof(<QueueDestroy>d__41))]
	private IEnumerator QueueDestroy(float delayTime)
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x63A167C", Offset = "0x63A167C", VA = "0x63A167C")]
	private void DestroyBullet()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x63A04F4", Offset = "0x63A04F4", VA = "0x63A04F4")]
	private void CheckAttack()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x63A1724", Offset = "0x63A1724", VA = "0x63A1724")]
	private void CheckCollisionEnter(RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x63A19A4", Offset = "0x63A19A4", VA = "0x63A19A4")]
	public void CheckAttack(bool isAttack)
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x63A156C", Offset = "0x63A156C", VA = "0x63A156C")]
	private void ResetDelayAutoDestroy(float delayTime)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x63A369C", Offset = "0x63A369C", VA = "0x63A369C")]
	private void BomeDamageMonster(Vector3 bombCenter, CSFMonsterDamageInfo damageInfo, float middleDamage, float outerDamage, float middleBomeRange, float outerBomeRange, DamageType middleDamageType, DamageType outerDamageType)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x63A3B50", Offset = "0x63A3B50", VA = "0x63A3B50")]
	private void CheckSplitBombDamage(Vector3 startCenter, CSFMonsterDamageInfo damageInfo, float middleDamage, float outerDamage, float middleBomeRange, float outerBomeRange, DamageType middleDamageType, DamageType outerDamageType)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x63A40B8", Offset = "0x63A40B8", VA = "0x63A40B8")]
	private void FindNextAttackTarget(CSFMonster currentAttack, float findRange)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x63A0E5C", Offset = "0x63A0E5C", VA = "0x63A0E5C")]
	private void FindTraceTarget()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x63A3DE4", Offset = "0x63A3DE4", VA = "0x63A3DE4")]
	private void CheckTimeBombSkill(CSFMonsterDamageInfo damageInfo, float middleDamage, float outerDamage, float middleBomeRange, float outerBomeRange, DamageType middleDamageType, DamageType outerDamageType)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x63A4540", Offset = "0x63A4540", VA = "0x63A4540")]
	private void CreatTimeBomb(CSFMonsterDamageInfo damageInfo, float middleDamage, float outerDamage, float middleBomeRange, float outerBomeRange, Vector3 position, float delayTime, DamageType middleDamageType, DamageType outerDamageType)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x63A2DD0", Offset = "0x63A2DD0", VA = "0x63A2DD0")]
	private List<CSFMonster> GetNearestMonsterBySpecifiedNumber(CSFMonster currentAttack, int num, float range)
	{
		return null;
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x63A13AC", Offset = "0x63A13AC", VA = "0x63A13AC")]
	private void SelectedTrail(int level)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x63A12DC", Offset = "0x63A12DC", VA = "0x63A12DC")]
	private void InitTrail()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x63A46C8", Offset = "0x63A46C8", VA = "0x63A46C8")]
	public Bullet()
	{
	}
}
[Token(Token = "0x2000056")]
public class SingletonMonoBehaviour<T> : MonoBehaviour where T : SingletonMonoBehaviour<T>
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700003A")]
	public static T Instance
	{
		[Token(Token = "0x60002C1")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public static bool Instantiated
	{
		[Token(Token = "0x60002C2")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C3")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public static bool Destroyed
	{
		[Token(Token = "0x60002C4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C5")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002C6")]
	private static void CreateInstance()
	{
	}

	[Token(Token = "0x60002C7")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60002C8")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x60002C9")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002CA")]
	public SingletonMonoBehaviour()
	{
	}
}
[Token(Token = "0x2000057")]
public class SingletonNetworkBehaviour<T> : NetworkBehaviour where T : SingletonNetworkBehaviour<T>
{
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static T _instance;

	[Token(Token = "0x1700003D")]
	public static T Instance
	{
		[Token(Token = "0x60002CB")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003E")]
	public static bool Instantiated
	{
		[Token(Token = "0x60002CC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CD")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public static bool Destroyed
	{
		[Token(Token = "0x60002CE")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002CF")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002D0")]
	private static void CreateInstance()
	{
	}

	[Token(Token = "0x60002D1")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60002D2")]
	protected virtual void OnAwake()
	{
	}

	[Token(Token = "0x60002D3")]
	protected new virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002D4")]
	public SingletonNetworkBehaviour()
	{
	}

	[Token(Token = "0x60002D5")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000058")]
public class CSFGameConfigManager
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000059")]
	[CompilerGenerated]
	private struct <UpdateConfig>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CSFGameConfigManager <>4__this;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <req>5__2;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityAsyncExtensions.UnityWebRequestAsyncOperationAwaiter <>u__1;

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x63A647C", Offset = "0x63A647C", VA = "0x63A647C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x63A68A0", Offset = "0x63A68A0", VA = "0x63A68A0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CSFGameConfigManager _instance;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string path;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _allContentJsonPath;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CSFGameAllConfigContent _allConfig;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JsonData _allJsonData;

	[Token(Token = "0x17000040")]
	public static CSFGameConfigManager Instance
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x63A481C", Offset = "0x63A481C", VA = "0x63A481C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public CSFGameAllConfigContent CSFConfigData
	{
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x63A4A18", Offset = "0x63A4A18", VA = "0x63A4A18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x63A48A8", Offset = "0x63A48A8", VA = "0x63A48A8")]
	public CSFGameConfigManager()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x63A4A34", Offset = "0x63A4A34", VA = "0x63A4A34")]
	[AsyncStateMachine(typeof(<UpdateConfig>d__10))]
	public UniTask<bool> UpdateConfig()
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x63A4AF4", Offset = "0x63A4AF4", VA = "0x63A4AF4")]
	public bool UpdateGameFielConfigConfig()
	{
		return default(bool);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x63A4934", Offset = "0x63A4934", VA = "0x63A4934")]
	private void Init()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x63A5674", Offset = "0x63A5674", VA = "0x63A5674")]
	private string GetJsonData(string name)
	{
		return null;
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x63A4C1C", Offset = "0x63A4C1C", VA = "0x63A4C1C")]
	private void ReadConfigJson(string text)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x63A5760", Offset = "0x63A5760", VA = "0x63A5760")]
	private void ToDictionary()
	{
	}
}
[Token(Token = "0x200005B")]
public class CSFGameAllConfigContent
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<BossStage> dataBossStageList;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MonsterSkill> dataMonsterSkillList;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Const> dataConstList;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<MonsterBasic> dataMonsterBasicList;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameLevel> dataGameLevelList;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<CooperationFireConstData> dataCooperationFireConstDataList;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<RogueLikeSkill> dataRogueLikeSkillList;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<SeasonLevel> dataSeasonLevelList;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<SeasonTime> dataSeasonTimeList;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Dictionary<string, BossStage> dataBossStageMap;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<int, MonsterSkill> dataMonsterSkillMap;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dictionary<string, Const> dataConstMap;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Dictionary<int, MonsterBasic> dataMonsterBasicMap;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<int, GameLevel> dataGameLevelMap;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<int, CooperationFireConstData> dataCooperationFireConstDataMap;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<int, RogueLikeSkill> dataRogueLikeSkillMap;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Dictionary<int, SeasonLevel> dataSeasonLevelMap;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Dictionary<int, SeasonTime> dataSeasonTimeMap;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x63A509C", Offset = "0x63A509C", VA = "0x63A509C")]
	public CSFGameAllConfigContent()
	{
	}
}
[Token(Token = "0x200005C")]
public class CSFMapMgr
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float HorAngle;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float HorEndAngle;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float VerDownAngle;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VerUpAngle;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ZOffset;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float NearDistance;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FarDistance;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[] MapDistances;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] MapHorSegment;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[] MapVerSegment;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int MaxMapDistance;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int[][] HorAreaAngle;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int[][] VerAreaAngle;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int[] _mapZoneWeights;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] _mapHorZoneAngles;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] _mapVerZoneAngles;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CSFMapMgr _instance;

	[Token(Token = "0x17000042")]
	public static CSFMapMgr Instance
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x63A6A90", Offset = "0x63A6A90", VA = "0x63A6A90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x63A7004", Offset = "0x63A7004", VA = "0x63A7004")]
	public void InitMapInfo()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x63A7310", Offset = "0x63A7310", VA = "0x63A7310")]
	public Vector3 GetNormalBirthPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x63A734C", Offset = "0x63A734C", VA = "0x63A734C")]
	public Vector3 GetRandomPos(float distance, bool left)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x63A7448", Offset = "0x63A7448", VA = "0x63A7448")]
	private float GetRandomHorAngle(bool left)
	{
		return default(float);
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x63A74C0", Offset = "0x63A74C0", VA = "0x63A74C0")]
	private float GetRandomVerAngle()
	{
		return default(float);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x63A7600", Offset = "0x63A7600", VA = "0x63A7600")]
	private int GetRandomIndexByWeight(int[] weights)
	{
		return default(int);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x63A6B1C", Offset = "0x63A6B1C", VA = "0x63A6B1C")]
	public CSFMapMgr()
	{
	}
}
[Token(Token = "0x200005D")]
public enum DamageType
{
	[Token(Token = "0x4000308")]
	None,
	[Token(Token = "0x4000309")]
	Normal,
	[Token(Token = "0x400030A")]
	Critical,
	[Token(Token = "0x400030B")]
	Bleed
}
[Token(Token = "0x200005E")]
public class CSFMonster : NetworkBehaviour, ICSFDamageable
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string ID;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int GroupID;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CSFMonsterType Type;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NetworkObject Networkobject;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Dictionary<string, GameObject> MonsterParts;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CSFMonsterProperty Property;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameLevel LevelInfo;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform MonsterPartAttackPoint;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action OnMonsterBeKillEvent;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action<CSFMonster> OnMonsterBeDestroyEvent;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Action OnMonsterStateIdle;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Action OnMonsterStatePrefire;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Action OnMonsterStateFire;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject ViewNode;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject HUDNode;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SphereCollider MonsterCollider;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public float MaxHP;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public ulong CurAttackTargetClientID;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public Vector3 CurAttackTargetPos;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float VulnerabilityRatio;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public CSFMonsterView MonsterView;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public bool SplitLeft;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float _survivalTime;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _splitTimes;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _canBeHurt;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject MonsterModel;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject MonsterHUD;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CSFMonsterHUD HUD;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<CSFMonsterBuff> Buffs;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MonsterWeapon _weapon;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private CSFMonsterMovement _movement;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private CSFMonsterState _monsterState;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private MonsterState _curState;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private Vector3? _formationPos;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private bool _startCheckCollision;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 _lastPosition;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Collider[] _colliders;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private long _destroyTimerId;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private bool _isSpawned;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private long[] _recordAttackTargetUserID;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int _curTargetPlayerIndex;

	[Token(Token = "0x17000043")]
	public float HP
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x63A198C", Offset = "0x63A198C", VA = "0x63A198C", Slot = "12")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x63A7768", Offset = "0x63A7768", VA = "0x63A7768", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	public float SurvivalTime
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x63A7778", Offset = "0x63A7778", VA = "0x63A7778")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000045")]
	public bool IsClinet
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x63A7780", Offset = "0x63A7780", VA = "0x63A7780")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000046")]
	public int SplitTimes
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0x63A7788", Offset = "0x63A7788", VA = "0x63A7788")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x63A7790", Offset = "0x63A7790", VA = "0x63A7790")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public CSFMonsterMovement Movement
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x63A7798", Offset = "0x63A7798", VA = "0x63A7798")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x63A77A0", Offset = "0x63A77A0", VA = "0x63A77A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public MonsterWeapon Weapon
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x63A77B0", Offset = "0x63A77B0", VA = "0x63A77B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x63A77B8", Offset = "0x63A77B8", VA = "0x63A77B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x63A77C8", Offset = "0x63A77C8", VA = "0x63A77C8", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x63A7BFC", Offset = "0x63A7BFC", VA = "0x63A7BFC")]
	private void ResetMonster()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x63A7F68", Offset = "0x63A7F68", VA = "0x63A7F68", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x63A833C", Offset = "0x63A833C", VA = "0x63A833C", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x63A8504", Offset = "0x63A8504", VA = "0x63A8504")]
	private void Update()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x63A8ABC", Offset = "0x63A8ABC", VA = "0x63A8ABC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x63A79A0", Offset = "0x63A79A0", VA = "0x63A79A0")]
	private void Init()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x63A7A10", Offset = "0x63A7A10", VA = "0x63A7A10")]
	[ServerRpc(RequireOwnership = false)]
	private void RequestInitClientServerRpc(ulong clientId)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x63A8B18", Offset = "0x63A8B18", VA = "0x63A8B18")]
	[ClientRpc]
	private void InitClientRpc(CSFMonsterType type, int levelId, string id, bool splitLeft, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x63A9DB4", Offset = "0x63A9DB4", VA = "0x63A9DB4")]
	private void DestroyMonsterClient()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x63A81AC", Offset = "0x63A81AC", VA = "0x63A81AC")]
	private void RecycleMonster()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x63A9FC0", Offset = "0x63A9FC0", VA = "0x63A9FC0")]
	[ClientRpc]
	public void ChangeStateClientRpc(MonsterState state)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x63AA180", Offset = "0x63AA180", VA = "0x63AA180")]
	[ClientRpc]
	public void FireClientRpc(int bulletCount)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x63AA4DC", Offset = "0x63AA4DC", VA = "0x63AA4DC")]
	[ClientRpc]
	public void StopFireClientRpc()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x63AA5E4", Offset = "0x63AA5E4", VA = "0x63AA5E4")]
	[ClientRpc]
	private void ChangeAttackTargetClientRpc(ulong userID, Vector3 pos)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x63AA76C", Offset = "0x63AA76C", VA = "0x63AA76C")]
	[ClientRpc]
	private void DealDamageClientRpc(float health, ulong clientID, DamageType damageType, BulletType attackBulletType, Vector3 attackPosition)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x63AAD8C", Offset = "0x63AAD8C", VA = "0x63AAD8C")]
	[ClientRpc]
	public void UpdateVulnerabilityRatioClientRpc(float ratio)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x63AAECC", Offset = "0x63AAECC", VA = "0x63AAECC")]
	[ClientRpc]
	private void ResetHPClientRpc(float hp)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x63AB01C", Offset = "0x63AB01C", VA = "0x63AB01C")]
	[ClientRpc]
	private void ResetBulletSpeedClientRpc(float speed, float interval)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x63AA104", Offset = "0x63AA104", VA = "0x63AA104")]
	public void ChangeStateClient(MonsterState state)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x63AB188", Offset = "0x63AB188", VA = "0x63AB188")]
	public List<CSFMonsterBuff> GetAllBuff()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x63AB190", Offset = "0x63AB190", VA = "0x63AB190")]
	public void SetFormationInfo(Vector3 pos)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x63AB21C", Offset = "0x63AB21C", VA = "0x63AB21C")]
	public void SetCanBeHurt(bool b)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x63AB228", Offset = "0x63AB228", VA = "0x63AB228")]
	private void OnMonsterFireEnd()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x63AB24C", Offset = "0x63AB24C", VA = "0x63AB24C")]
	public void OnMonsterBeKill()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x63AB2F0", Offset = "0x63AB2F0", VA = "0x63AB2F0")]
	public void OnMonsterBeDestroy()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x63AB34C", Offset = "0x63AB34C", VA = "0x63AB34C")]
	public void ChangeAttackTarget(ulong clientId = 0uL)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x63AB408", Offset = "0x63AB408", VA = "0x63AB408")]
	public void DeadSplit()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x63A3244", Offset = "0x63A3244", VA = "0x63A3244", Slot = "14")]
	public void DealDamage(CSFMonsterDamageInfo damageInfo, DamageType damageType)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x63A3238", Offset = "0x63A3238", VA = "0x63A3238")]
	public void DealBuffEffect(int skillClass, CSFMonsterBuffEffect effect)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x63AB504", Offset = "0x63AB504", VA = "0x63AB504")]
	[ServerRpc(RequireOwnership = false)]
	public void DealDamageServerRpc(float damageValue, ulong clientID, BulletType attackBulletType, Vector3 attackPosition)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x63AB6DC", Offset = "0x63AB6DC", VA = "0x63AB6DC")]
	[ServerRpc(RequireOwnership = false)]
	private void DealBuffEffectServerRpc(int skillClass, CSFMonsterBuffEffect effect, [Optional] ServerRpcParams serverRpcParams)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x63AC7CC", Offset = "0x63AC7CC", VA = "0x63AC7CC")]
	public void DamageServer(float damageValue, ulong clientID, DamageType damageType, BulletType attackBulletType = BulletType.None, [Optional] Vector3 attackPosition)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x63AAA4C", Offset = "0x63AAA4C", VA = "0x63AAA4C")]
	private void PlayDamage(float damageValue)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x63ACBFC", Offset = "0x63ACBFC", VA = "0x63ACBFC")]
	private void OnBeHurt(float damage, ulong clientID)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x63AAC1C", Offset = "0x63AAC1C", VA = "0x63AAC1C")]
	private void ShowMonsterBeHurtClientUI(float damage, DamageType damageType)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x63ACD58", Offset = "0x63ACD58", VA = "0x63ACD58")]
	private void ChangeIdleState()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x63A7EF0", Offset = "0x63A7EF0", VA = "0x63A7EF0")]
	public void TurnOnRotateAsync(bool isOn = true)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x63ACD7C", Offset = "0x63ACD7C", VA = "0x63ACD7C")]
	[ClientRpc]
	private void TurnOnRotateAsyncClientRpc(bool isOn)
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x63A8F68", Offset = "0x63A8F68", VA = "0x63A8F68")]
	private void CombineMonsterByType(CSFMonsterType type)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x63ACEF0", Offset = "0x63ACEF0", VA = "0x63ACEF0")]
	private void CreateMonsterView(GameObject monsterModel)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x63AD5D8", Offset = "0x63AD5D8", VA = "0x63AD5D8")]
	public void SetMonsterView(CSFMonsterHUD hud, GameObject monsterModel)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x63AD634", Offset = "0x63AD634", VA = "0x63AD634")]
	public void ResetHP(float hp)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x63AD638", Offset = "0x63AD638", VA = "0x63AD638")]
	public void ResetBulletSpeed(float speed, float interval)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x63AD63C", Offset = "0x63AD63C", VA = "0x63AD63C")]
	public void SetColliderSize(Vector3 center, float radius)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x63AD730", Offset = "0x63AD730", VA = "0x63AD730")]
	public void UpdateVulnerabilityRatio()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x63ADB68", Offset = "0x63ADB68", VA = "0x63ADB68")]
	public void PauseChangeState(bool pause)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x63ADB84", Offset = "0x63ADB84", VA = "0x63ADB84")]
	public void SetWeapon(MonsterWeaponType type, bool isLeft = false)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x63ADEAC", Offset = "0x63ADEAC", VA = "0x63ADEAC")]
	public void SetMovement()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x63AE06C", Offset = "0x63AE06C", VA = "0x63AE06C")]
	public void SetMonsterState(CSFMonsterBoss boss)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x63AE10C", Offset = "0x63AE10C", VA = "0x63AE10C")]
	[ClientRpc]
	private void SetMonsterStateClientRpc()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x63ADF20", Offset = "0x63ADF20", VA = "0x63ADF20")]
	[ClientRpc]
	private void SetMovementClientRpc()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x63ADC8C", Offset = "0x63ADC8C", VA = "0x63ADC8C")]
	[ClientRpc]
	private void SetWeaponClientRpc(MonsterWeaponType type, bool isLeft)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x63A875C", Offset = "0x63A875C", VA = "0x63A875C")]
	public void CheckMonsterCollision()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x63AE2B8", Offset = "0x63AE2B8", VA = "0x63AE2B8")]
	private void DestroyZombieClient()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x63AE260", Offset = "0x63AE260", VA = "0x63AE260")]
	private void OnMonsterDestroyBySelf()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x63AE530", Offset = "0x63AE530", VA = "0x63AE530")]
	[ServerRpc(RequireOwnership = false)]
	private void MonsterDestroyBySelfServerRpc(ulong clientId)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x63AE6C8", Offset = "0x63AE6C8", VA = "0x63AE6C8")]
	[ClientRpc]
	private void MonsterDestroyBySelfClientRpc(ulong clientId)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x63AE844", Offset = "0x63AE844", VA = "0x63AE844")]
	public long FindRandomTargetUserID()
	{
		return default(long);
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x63AEC8C", Offset = "0x63AEC8C", VA = "0x63AEC8C")]
	private int GetRandomIndexByWeight(int[] weights)
	{
		return default(int);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x63AA2F8", Offset = "0x63AA2F8", VA = "0x63AA2F8")]
	private void PlayAnim(string name)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x63AAAEC", Offset = "0x63AAAEC", VA = "0x63AAAEC")]
	private void ShowAttackedEffect(BulletType bulletType, Vector3 attackPosition)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x63AEDC4", Offset = "0x63AEDC4", VA = "0x63AEDC4")]
	[ClientRpc]
	public void RefreshDecelerateBuffClientRpc(bool isShow)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x63AEF18", Offset = "0x63AEF18", VA = "0x63AEF18")]
	[ClientRpc]
	public void RefreshDazeBuffClientRpc(bool isShow)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x63AF06C", Offset = "0x63AF06C", VA = "0x63AF06C")]
	[ClientRpc]
	public void RefreshBurningBuffClientRpc(bool isShow)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x63AF1C0", Offset = "0x63AF1C0", VA = "0x63AF1C0")]
	[ClientRpc]
	public void ShowSpeedUpEffectClientRpc()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x63AD4D4", Offset = "0x63AD4D4", VA = "0x63AD4D4")]
	private void ShowGateWayEffect()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x63AF2C0", Offset = "0x63AF2C0", VA = "0x63AF2C0")]
	public CSFMonster()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x63B0124", Offset = "0x63B0124", VA = "0x63B0124")]
	private static void __rpc_handler_1199937284(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x63B0208", Offset = "0x63B0208", VA = "0x63B0208")]
	private static void __rpc_handler_2396593872(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x63B03E0", Offset = "0x63B03E0", VA = "0x63B03E0")]
	private static void __rpc_handler_3172262101(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x63B04C4", Offset = "0x63B04C4", VA = "0x63B04C4")]
	private static void __rpc_handler_3809541676(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x63B05A8", Offset = "0x63B05A8", VA = "0x63B05A8")]
	private static void __rpc_handler_922604171(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x63B0650", Offset = "0x63B0650", VA = "0x63B0650")]
	private static void __rpc_handler_653412299(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x63B0780", Offset = "0x63B0780", VA = "0x63B0780")]
	private static void __rpc_handler_735410431(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x63B0948", Offset = "0x63B0948", VA = "0x63B0948")]
	private static void __rpc_handler_698018365(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x63B0A2C", Offset = "0x63B0A2C", VA = "0x63B0A2C")]
	private static void __rpc_handler_2039990534(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x63B0B10", Offset = "0x63B0B10", VA = "0x63B0B10")]
	private static void __rpc_handler_3788364587(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x63B0C10", Offset = "0x63B0C10", VA = "0x63B0C10")]
	private static void __rpc_handler_526744708(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x63B0DA4", Offset = "0x63B0DA4", VA = "0x63B0DA4")]
	private static void __rpc_handler_1265600028(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x63B0F10", Offset = "0x63B0F10", VA = "0x63B0F10")]
	private static void __rpc_handler_3811572334(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x63B0FFC", Offset = "0x63B0FFC", VA = "0x63B0FFC")]
	private static void __rpc_handler_3749929822(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x63B10A4", Offset = "0x63B10A4", VA = "0x63B10A4")]
	private static void __rpc_handler_2741675426(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x63B114C", Offset = "0x63B114C", VA = "0x63B114C")]
	private static void __rpc_handler_2416043333(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x63B1270", Offset = "0x63B1270", VA = "0x63B1270")]
	private static void __rpc_handler_900502661(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x63B1354", Offset = "0x63B1354", VA = "0x63B1354")]
	private static void __rpc_handler_479001667(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x63B1438", Offset = "0x63B1438", VA = "0x63B1438")]
	private static void __rpc_handler_2836337795(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x63B1524", Offset = "0x63B1524", VA = "0x63B1524")]
	private static void __rpc_handler_63564176(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x63B1610", Offset = "0x63B1610", VA = "0x63B1610")]
	private static void __rpc_handler_353420002(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x63B16FC", Offset = "0x63B16FC", VA = "0x63B16FC")]
	private static void __rpc_handler_728417996(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x63B17A4", Offset = "0x63B17A4", VA = "0x63B17A4", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000060")]
public class CSFMonsterBeHurtUI : MonoBehaviour
{
	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CanvasGroup CGroup;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI NormalUI;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI CriticalUI;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI BleedUI;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _showTime;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _endAlpha;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPosOffset;

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x6581878", Offset = "0x6581878", VA = "0x6581878")]
	private void Start()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x658187C", Offset = "0x658187C", VA = "0x658187C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x6581918", Offset = "0x6581918", VA = "0x6581918")]
	public void Show(float damage, DamageType showType)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x6581C84", Offset = "0x6581C84", VA = "0x6581C84")]
	private void PlayAnim(DamageType showType)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x6581C14", Offset = "0x6581C14", VA = "0x6581C14")]
	private void HideAllUI()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x658203C", Offset = "0x658203C", VA = "0x658203C")]
	private List<Vector3> GetMovePath(Vector3 endPos)
	{
		return null;
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x658227C", Offset = "0x658227C", VA = "0x658227C")]
	public CSFMonsterBeHurtUI()
	{
	}
}
[Token(Token = "0x2000061")]
public class CSFMonsterBoss : NetworkBehaviour
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform HeadCollision;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform BodyCollision;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform LeftHandCollision;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform RightHandCollision;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject _bossModel;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _monsterHUD0;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject _monsterHUD1;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject _monsterHUD2;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject _monsterHUD3;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject _leftHand;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject _rightHand;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CSFMonster _headMonster;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CSFMonster _leftMonster;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CSFMonster _rightMonster;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private CSFMonster bodyMonster;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public CSFMonsterView MonsterView;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameLevel LevelData;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Dictionary<string, BossStage> BossStageData;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameLevel[] BossGenMonsterInfos;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Dictionary<string, ulong> lastAttackRecord;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Dictionary<string, ulong> beAttackingRecord;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _rotateTime;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _rotateDir;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Quaternion _start;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Quaternion _end;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float _playerHeight;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool _startRotate;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float _rotateSpeed;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool _handMonsterBeKill;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int _curBossStage;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string _stage1TransitionAnim;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string _stage2TransitionAnim;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string _stage3TransitionAnim;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string _stageDieAnim;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x658239C", Offset = "0x658239C", VA = "0x658239C", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x6582500", Offset = "0x6582500", VA = "0x6582500", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x6582568", Offset = "0x6582568", VA = "0x6582568")]
	private void Update()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x65826F4", Offset = "0x65826F4", VA = "0x65826F4", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x658276C", Offset = "0x658276C", VA = "0x658276C")]
	private void ChangeBossStage(int stage)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x6582A4C", Offset = "0x6582A4C", VA = "0x6582A4C")]
	private void StartBossFirstStage()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x6582B14", Offset = "0x6582B14", VA = "0x6582B14")]
	private void StartBossSecondStage()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x6582B18", Offset = "0x6582B18", VA = "0x6582B18")]
	private void StartBossThirdStage()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x6582B20", Offset = "0x6582B20", VA = "0x6582B20")]
	private void StartBossFourthStage()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x6583190", Offset = "0x6583190", VA = "0x6583190")]
	private void OnAllSmallMonsterBeKill()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x6582890", Offset = "0x6582890", VA = "0x6582890")]
	private void BossGenMonster()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x658321C", Offset = "0x658321C", VA = "0x658321C")]
	private void BossStopGenMonster()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x6582410", Offset = "0x6582410", VA = "0x6582410")]
	public void InitBoss()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x65833A0", Offset = "0x65833A0", VA = "0x65833A0")]
	private void InitBossClient()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x6583B18", Offset = "0x6583B18", VA = "0x6583B18")]
	private CSFMonster CreateBossPartsMonster(float hp, float bulletInterval, float bulletSpeed, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x6582C28", Offset = "0x6582C28", VA = "0x6582C28")]
	private void CreateBossBody()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x6582B24", Offset = "0x6582B24", VA = "0x6582B24")]
	[ClientRpc]
	private void StartFirstStageClientRpc()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x6583FF4", Offset = "0x6583FF4", VA = "0x6583FF4")]
	[ClientRpc]
	private void CreateBossBodyClientRPC(string id)
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x6582D68", Offset = "0x6582D68", VA = "0x6582D68")]
	private void CreateBossHand()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x6582F9C", Offset = "0x6582F9C", VA = "0x6582F9C")]
	private void CreateBossHead()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x6584B50", Offset = "0x6584B50", VA = "0x6584B50")]
	[ClientRpc]
	private void CreateBossHeadClientRpc(string id)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x6584E54", Offset = "0x6584E54", VA = "0x6584E54")]
	private void OnBossBodyBeKill()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x6584EE8", Offset = "0x6584EE8", VA = "0x6584EE8")]
	private void OnBossHandBeKill(string id, bool isLeft)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x6585058", Offset = "0x6585058", VA = "0x6585058")]
	[ClientRpc]
	private void BossHandKilledClientRpc(bool isLeft)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x65851D0", Offset = "0x65851D0", VA = "0x65851D0")]
	private void OnBossHeadBeKill()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x6584774", Offset = "0x6584774", VA = "0x6584774")]
	private void UpdateBossHeadToward()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x658262C", Offset = "0x658262C", VA = "0x658262C")]
	private void RotateBossHead(Quaternion quat)
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x6584EE4", Offset = "0x6584EE4", VA = "0x6584EE4")]
	public void ResetView()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x6585030", Offset = "0x6585030", VA = "0x6585030")]
	public void OnBossMonsterPartBeDestroy(string id)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x6585254", Offset = "0x6585254", VA = "0x6585254")]
	public void OnBossStageEnd()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x6585694", Offset = "0x6585694", VA = "0x6585694")]
	[ClientRpc]
	private void OnBossStageEndClientRpc()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x65853A0", Offset = "0x65853A0", VA = "0x65853A0")]
	[ClientRpc]
	private void ResetBossViewClientRpc()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x658466C", Offset = "0x658466C", VA = "0x658466C")]
	public void SetBossHand(CSFMonster leftMonster, CSFMonster rightMonster)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x65858BC", Offset = "0x65858BC", VA = "0x65858BC")]
	private CSFMonster GetBossPartsMonster(string id)
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x65859FC", Offset = "0x65859FC", VA = "0x65859FC")]
	private ulong GetLastAttackTargetID(string monsterID)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x6585A90", Offset = "0x6585A90", VA = "0x6585A90")]
	private void SetLastAttackTargetID(string monsterID, ulong clientId)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x6585B5C", Offset = "0x6585B5C", VA = "0x6585B5C")]
	private ulong GetAttackingTargetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x6585C9C", Offset = "0x6585C9C", VA = "0x6585C9C")]
	private void SetBeAttackingTargetID(string monsterID, ulong clientId)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x6585604", Offset = "0x6585604", VA = "0x6585604")]
	private void RemoveBeAttackingTargetID(string monsterID)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x6585574", Offset = "0x6585574", VA = "0x6585574")]
	private void RemoveLastAttackTargetID(string monsterID)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x6585D68", Offset = "0x6585D68", VA = "0x6585D68")]
	public bool ChangeAttackTarget(string id)
	{
		return default(bool);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x658654C", Offset = "0x658654C", VA = "0x658654C")]
	public void OnAttackEnd(ulong clientId, string monsterID)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x658663C", Offset = "0x658663C", VA = "0x658663C")]
	[ClientRpc]
	private void SetHandViewClientRpc(string leftMonsterID, string rightMonsterID)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x6586B40", Offset = "0x6586B40", VA = "0x6586B40")]
	public void DestroyBoss()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x6585ECC", Offset = "0x6585ECC", VA = "0x6585ECC")]
	private ulong FindBossHandAttackTargetClientId(ulong myLastAttackTargetClientID, ulong attackingTargetClientID)
	{
		return default(ulong);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x6586F2C", Offset = "0x6586F2C", VA = "0x6586F2C")]
	private int GetRandomIndexByWeight(int[] weights)
	{
		return default(int);
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x658430C", Offset = "0x658430C", VA = "0x658430C")]
	private void PlayBossAnim(int stage)
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x6587064", Offset = "0x6587064", VA = "0x6587064")]
	public CSFMonsterBoss()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x65875C4", Offset = "0x65875C4", VA = "0x65875C4")]
	private static void __rpc_handler_430116933(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x658766C", Offset = "0x658766C", VA = "0x658766C")]
	private static void __rpc_handler_3171256017(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x6587780", Offset = "0x6587780", VA = "0x6587780")]
	private static void __rpc_handler_499342084(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x6587894", Offset = "0x6587894", VA = "0x6587894")]
	private static void __rpc_handler_1706479865(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x6587980", Offset = "0x6587980", VA = "0x6587980")]
	private static void __rpc_handler_805372756(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x6587A28", Offset = "0x6587A28", VA = "0x6587A28")]
	private static void __rpc_handler_1639415298(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x6587AD0", Offset = "0x6587AD0", VA = "0x6587AD0")]
	private static void __rpc_handler_1707975489(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x6587C24", Offset = "0x6587C24", VA = "0x6587C24", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000064")]
public class CSFMonsterBossMgr
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CSFMonsterBossMgr _instance;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameLevel LevelData;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, BossStage> _bossStageData;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameLevel[] _bossGenMonsterInfos;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject BossModel;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CSFMonsterBoss _bossMain;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _bossStageEnd;

	[Token(Token = "0x17000049")]
	public static CSFMonsterBossMgr Instance
	{
		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x6583290", Offset = "0x6583290", VA = "0x6583290")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004A")]
	public bool BossStageEnd
	{
		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x6587E6C", Offset = "0x6587E6C", VA = "0x6587E6C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700004B")]
	public CSFMonsterBoss Boss
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x6587E74", Offset = "0x6587E74", VA = "0x6587E74")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x6587F50", Offset = "0x6587F50", VA = "0x6587F50")]
		set
		{
		}
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x6587F58", Offset = "0x6587F58", VA = "0x6587F58")]
	public void GenBossMonster(int groupID, GameLevel data)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x6587CF4", Offset = "0x6587CF4", VA = "0x6587CF4")]
	public void DestroyBoss()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x658815C", Offset = "0x658815C", VA = "0x658815C")]
	private void GetBossGenMonsterInfos()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x65884C0", Offset = "0x65884C0", VA = "0x65884C0")]
	public void InitBossStageEnd()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x6587E5C", Offset = "0x6587E5C", VA = "0x6587E5C")]
	public CSFMonsterBossMgr()
	{
	}
}
[Token(Token = "0x2000065")]
public enum MonsterBuffType
{
	[Token(Token = "0x400036F")]
	None,
	[Token(Token = "0x4000370")]
	SpeedUp,
	[Token(Token = "0x4000371")]
	StopMove,
	[Token(Token = "0x4000372")]
	AddBullet,
	[Token(Token = "0x4000373")]
	Decelerate,
	[Token(Token = "0x4000374")]
	Burning,
	[Token(Token = "0x4000375")]
	Vulnerability,
	[Token(Token = "0x4000376")]
	Confusion
}
[Token(Token = "0x2000066")]
public struct CSFMonsterBuffInfo
{
	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public MonsterBuffType Type;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string[] Args;

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x65884CC", Offset = "0x65884CC", VA = "0x65884CC")]
	public CSFMonsterBuffInfo(MonsterBuffType type, params string[] args)
	{
	}
}
[Token(Token = "0x2000067")]
public class CSFMonsterBuffMgr
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CSFMonsterBuffMgr _instance;

	[Token(Token = "0x1700004C")]
	public static CSFMonsterBuffMgr Instance
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x65884DC", Offset = "0x65884DC", VA = "0x65884DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x6588574", Offset = "0x6588574", VA = "0x6588574")]
	public void AddMonsterBuff(CSFMonster monster, CSFMonsterBuffInfo info)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x6588B98", Offset = "0x6588B98", VA = "0x6588B98")]
	public void CoverMonsterBuff(CSFMonster monster, MonsterBuffType type, CSFMonsterBuff newBuff)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x6588D14", Offset = "0x6588D14", VA = "0x6588D14")]
	public void RemoveMonsterBuff(CSFMonster monster, int ID)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x658869C", Offset = "0x658869C", VA = "0x658869C")]
	private CSFMonsterBuff CreateMonsterBuff(MonsterBuffType type, params string[] args)
	{
		return null;
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x658856C", Offset = "0x658856C", VA = "0x658856C")]
	public CSFMonsterBuffMgr()
	{
	}
}
[Token(Token = "0x2000068")]
public class CSFMonsterBuff
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CSFMonster Owner;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonsterBuffType Type;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool CanStack;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int ID;

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x6589020", Offset = "0x6589020", VA = "0x6589020")]
	public CSFMonsterBuff()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x658905C", Offset = "0x658905C", VA = "0x658905C", Slot = "4")]
	public virtual void OnBuffBeforStart()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x6589060", Offset = "0x6589060", VA = "0x6589060", Slot = "5")]
	public virtual void OnBuffStart()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x6589064", Offset = "0x6589064", VA = "0x6589064", Slot = "6")]
	public virtual void OnBuffUpdate()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x6589068", Offset = "0x6589068", VA = "0x6589068", Slot = "7")]
	public virtual void CheckBuffCondition(params object[] args)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x658906C", Offset = "0x658906C", VA = "0x658906C", Slot = "8")]
	public virtual void OnBuffBeforeEnd()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x6589070", Offset = "0x6589070", VA = "0x6589070", Slot = "9")]
	public virtual void OnBuffEnd()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x6589074", Offset = "0x6589074", VA = "0x6589074", Slot = "10")]
	public virtual void BuffCover(CSFMonsterBuff buff)
	{
	}
}
[Token(Token = "0x2000069")]
public class SpeedupBuff : CSFMonsterBuff
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _condition;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _moveSpeed;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x6588E14", Offset = "0x6588E14", VA = "0x6588E14")]
	public SpeedupBuff(MonsterBuffType type, float speed, float condition)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x6589078", Offset = "0x6589078", VA = "0x6589078", Slot = "7")]
	public override void CheckBuffCondition(params object[] args)
	{
	}
}
[Token(Token = "0x200006A")]
public class AddBulletBuff : CSFMonsterBuff
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _intervalTime;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _bulletCount;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _buffTime;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x6588E9C", Offset = "0x6588E9C", VA = "0x6588E9C")]
	public AddBulletBuff(MonsterBuffType type, float intervalTime, int bulletCount)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x65891A8", Offset = "0x65891A8", VA = "0x65891A8", Slot = "6")]
	public override void OnBuffUpdate()
	{
	}
}
[Token(Token = "0x200006B")]
public class StopMoveBuff : CSFMonsterBuff
{
	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float StopTime;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _buffTime;

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x6588E60", Offset = "0x6588E60", VA = "0x6588E60")]
	public StopMoveBuff(MonsterBuffType type, float stopTime)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x658920C", Offset = "0x658920C", VA = "0x658920C", Slot = "5")]
	public override void OnBuffStart()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x6589268", Offset = "0x6589268", VA = "0x6589268", Slot = "6")]
	public override void OnBuffUpdate()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x65892FC", Offset = "0x65892FC", VA = "0x65892FC", Slot = "10")]
	public override void BuffCover(CSFMonsterBuff buff)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x6589398", Offset = "0x6589398", VA = "0x6589398", Slot = "9")]
	public override void OnBuffEnd()
	{
	}
}
[Token(Token = "0x200006C")]
public class DecelerateBuff : CSFMonsterBuff
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _decelerateTime;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float DecelerateRate;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _buffTime;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x6588EE4", Offset = "0x6588EE4", VA = "0x6588EE4")]
	public DecelerateBuff(MonsterBuffType type, float time, float rate)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x65893B8", Offset = "0x65893B8", VA = "0x65893B8", Slot = "5")]
	public override void OnBuffStart()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x65893F8", Offset = "0x65893F8", VA = "0x65893F8", Slot = "6")]
	public override void OnBuffUpdate()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x6589450", Offset = "0x6589450", VA = "0x6589450", Slot = "9")]
	public override void OnBuffEnd()
	{
	}
}
[Token(Token = "0x200006D")]
public class BuringBuff : CSFMonsterBuff
{
	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] _damageRatio;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _indexDamageRatio;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _baseDamageValue;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _waitTime;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _startBurning;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ulong _damageClientID;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _intervalTime;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x6588F30", Offset = "0x6588F30", VA = "0x6588F30")]
	public BuringBuff(MonsterBuffType type, float baseDamageValue, float intervalTime, float[] damageRatio, ulong applyClientId)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x6589490", Offset = "0x6589490", VA = "0x6589490", Slot = "5")]
	public override void OnBuffStart()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x65894C0", Offset = "0x65894C0", VA = "0x65894C0", Slot = "6")]
	public override void OnBuffUpdate()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x65895A4", Offset = "0x65895A4", VA = "0x65895A4", Slot = "9")]
	public override void OnBuffEnd()
	{
	}
}
[Token(Token = "0x200006E")]
public class VulnerabilityBuff : CSFMonsterBuff
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DamageRatio;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _survivalTime;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _buffTime;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x6588FA4", Offset = "0x6588FA4", VA = "0x6588FA4")]
	public VulnerabilityBuff(MonsterBuffType type, float time, float ratio)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x65895C4", Offset = "0x65895C4", VA = "0x65895C4", Slot = "5")]
	public override void OnBuffStart()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x65895E0", Offset = "0x65895E0", VA = "0x65895E0", Slot = "6")]
	public override void OnBuffUpdate()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x6589638", Offset = "0x6589638", VA = "0x6589638", Slot = "9")]
	public override void OnBuffEnd()
	{
	}
}
[Token(Token = "0x200006F")]
public class ConfusionBuff : CSFMonsterBuff
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ValidTime;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _buffTime;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x6588FEC", Offset = "0x6588FEC", VA = "0x6588FEC")]
	public ConfusionBuff(MonsterBuffType type, float time)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x6589654", Offset = "0x6589654", VA = "0x6589654", Slot = "4")]
	public override void OnBuffBeforStart()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x6589674", Offset = "0x6589674", VA = "0x6589674", Slot = "6")]
	public override void OnBuffUpdate()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x65896CC", Offset = "0x65896CC", VA = "0x65896CC", Slot = "9")]
	public override void OnBuffEnd()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x65896EC", Offset = "0x65896EC", VA = "0x65896EC", Slot = "10")]
	public override void BuffCover(CSFMonsterBuff buff)
	{
	}
}
[Token(Token = "0x2000070")]
public enum AttackTargetType
{
	[Token(Token = "0x4000395")]
	None,
	[Token(Token = "0x4000396")]
	Player,
	[Token(Token = "0x4000397")]
	Monster
}
[Token(Token = "0x2000071")]
public class CSFMonsterBullet : MonoBehaviour
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailB01;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TrailNormal;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<TrailRenderer> AllTrailList;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _speed;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _nextPos;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _fire;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider[] _colliders;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _bulletSize;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private AttackTargetType _attackTargetType;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool canDamage;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float damageRatio;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool canTrace;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform traceTarget;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rotateSpeed;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private long timerId;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x6589788", Offset = "0x6589788", VA = "0x6589788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x6589918", Offset = "0x6589918", VA = "0x6589918")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x6589A40", Offset = "0x6589A40", VA = "0x6589A40")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x6589A90", Offset = "0x6589A90", VA = "0x6589A90")]
	public void Fire(float speed, CSFMonsterType monsterType)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x6589C3C", Offset = "0x6589C3C", VA = "0x6589C3C")]
	private void SetBulletTrail(CSFMonsterType monsterType)
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x6589CA4", Offset = "0x6589CA4", VA = "0x6589CA4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x658A4A0", Offset = "0x658A4A0", VA = "0x658A4A0")]
	private void UpdateForWard(float changeSpeed)
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x6589E00", Offset = "0x6589E00", VA = "0x6589E00")]
	private void CheckAttack()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x6589A50", Offset = "0x6589A50", VA = "0x6589A50")]
	private void CheckDestroy()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x658AA1C", Offset = "0x658AA1C", VA = "0x658AA1C")]
	private void OnEventFireGameStateChanged(FireGameState oldValue, FireGameState newValue)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x658AA34", Offset = "0x658AA34", VA = "0x658AA34")]
	public void ChangeBulletToAttackMonster(bool canDamageBullet, float damage)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x658A7B0", Offset = "0x658A7B0", VA = "0x658A7B0")]
	private void DestroyBullet()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x658AA4C", Offset = "0x658AA4C", VA = "0x658AA4C")]
	private void FindTraceTarget()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x6589AF0", Offset = "0x6589AF0", VA = "0x6589AF0")]
	private void ClearAllTrail()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x658AF24", Offset = "0x658AF24", VA = "0x658AF24")]
	public CSFMonsterBullet()
	{
	}
}
[Token(Token = "0x2000072")]
[RequireComponent(typeof(LineRenderer))]
public class CSFMonsterCollimator : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color _startColor;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color _endColor;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _changTime;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Ray _ray;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _endPoint;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _changUseTime;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x658AFBC", Offset = "0x658AFBC", VA = "0x658AFBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x658B08C", Offset = "0x658B08C", VA = "0x658B08C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x658B0C8", Offset = "0x658B0C8", VA = "0x658B0C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x658B3C4", Offset = "0x658B3C4", VA = "0x658B3C4")]
	public CSFMonsterCollimator()
	{
	}
}
[Token(Token = "0x2000073")]
public enum CSFMonsterBuffEffectType
{
	[Token(Token = "0x40003AF")]
	None,
	[Token(Token = "0x40003B0")]
	Deceleration,
	[Token(Token = "0x40003B1")]
	Daze,
	[Token(Token = "0x40003B2")]
	Burning,
	[Token(Token = "0x40003B3")]
	Confusion,
	[Token(Token = "0x40003B4")]
	Vulnerability,
	[Token(Token = "0x40003B5")]
	Magnetization
}
[Token(Token = "0x2000074")]
public class CSFMonsterDamageInfo
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong ClientID;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DamageValue;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<int, CSFMonsterBuffEffect[]> BuffInfos;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BulletType AttackBulletType;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 AttackPosition;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x658B444", Offset = "0x658B444", VA = "0x658B444")]
	public new string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x658AA14", Offset = "0x658AA14", VA = "0x658AA14")]
	public CSFMonsterDamageInfo()
	{
	}
}
[Token(Token = "0x2000075")]
public class CSFMonsterBuffEffect : INetworkSerializable
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CSFMonsterBuffEffectType EffectType;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] EffectParams;

	[Token(Token = "0x6000401")]
	public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x658B784", Offset = "0x658B784", VA = "0x658B784")]
	public new string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x658B83C", Offset = "0x658B83C", VA = "0x658B83C")]
	public CSFMonsterBuffEffect()
	{
	}
}
[Token(Token = "0x2000076")]
public class CSFMonsterEditorDrawMap : MonoBehaviour
{
	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool bShow;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int PointsCount;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HorAngle;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float VerUpAngle;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float VerDownAngle;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ZOffset;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float NearDistance;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float FarDistance;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> _points;

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x658B844", Offset = "0x658B844", VA = "0x658B844")]
	private List<Vector3> GetPoints(float distace)
	{
		return null;
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x658BCC8", Offset = "0x658BCC8", VA = "0x658BCC8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x658BFE4", Offset = "0x658BFE4", VA = "0x658BFE4")]
	public CSFMonsterEditorDrawMap()
	{
	}
}
[Token(Token = "0x2000077")]
public class CSFMonsterFishMgr
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CSFMonsterFishMgr _instance;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dictionary<int, List<CSFMonster>> Fishs;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, GameObject> _targets;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _minMoveDistance;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float Speed;

	[Token(Token = "0x1700004D")]
	public static CSFMonsterFishMgr Instance
	{
		[Token(Token = "0x6000407")]
		[Address(RVA = "0x658C09C", Offset = "0x658C09C", VA = "0x658C09C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x658C20C", Offset = "0x658C20C", VA = "0x658C20C")]
	public void AddFish(CSFMonster fish)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x658C5B0", Offset = "0x658C5B0", VA = "0x658C5B0")]
	public void StartTargetMove(GameObject target)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x658CBFC", Offset = "0x658CBFC", VA = "0x658CBFC")]
	private void RemoveFish(CSFMonster fish)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x658C968", Offset = "0x658C968", VA = "0x658C968")]
	private List<Vector3> GetRandomPointPartsOne()
	{
		return null;
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x658CAD0", Offset = "0x658CAD0", VA = "0x658CAD0")]
	private List<Vector3> GetRandomPointPartsTwo()
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x658CDC4", Offset = "0x658CDC4", VA = "0x658CDC4")]
	public Vector3 GetRandomPosByDisAndAngle(float dis, bool left)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x658C128", Offset = "0x658C128", VA = "0x658C128")]
	public CSFMonsterFishMgr()
	{
	}
}
[Token(Token = "0x2000079")]
public class CSFMonsterFishMovement : CSFMonsterMovement
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject FishTarget;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _groupID;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float RotateSpeed;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float TargetWeights;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float SeparationWeights;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float CohesionWeights;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float SeparationDistance;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _moving;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _tweenScale;

	[Token(Token = "0x1700004E")]
	private float Speed
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x658CF5C", Offset = "0x658CF5C", VA = "0x658CF5C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700004F")]
	private List<CSFMonster> fishs
	{
		[Token(Token = "0x6000412")]
		[Address(RVA = "0x658CF80", Offset = "0x658CF80", VA = "0x658CF80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x658C858", Offset = "0x658C858", VA = "0x658C858")]
	public CSFMonsterFishMovement(CSFMonster monster)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x658CFDC", Offset = "0x658CFDC", VA = "0x658CFDC", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x658D350", Offset = "0x658D350", VA = "0x658D350", Slot = "4")]
	public override void StartMovement(MovementType type)
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x658D35C", Offset = "0x658D35C", VA = "0x658D35C", Slot = "6")]
	public override void StopMovement()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x658C8B4", Offset = "0x658C8B4", VA = "0x658C8B4")]
	public void SetTarget(GameObject target)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x658D364", Offset = "0x658D364", VA = "0x658D364")]
	private Vector3 GetRandomBirthOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x658D1E0", Offset = "0x658D1E0", VA = "0x658D1E0")]
	private Vector3 GetFinalDirction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x658D388", Offset = "0x658D388", VA = "0x658D388")]
	private Vector3 GetSeparationDirction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x658D890", Offset = "0x658D890", VA = "0x658D890")]
	private Vector3 GetCohesionDirction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x658DBCC", Offset = "0x658DBCC", VA = "0x658DBCC")]
	private Vector3 GetTargetDirction()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x658DCFC", Offset = "0x658DCFC", VA = "0x658DCFC", Slot = "12")]
	public override void DecelerateMove()
	{
	}
}
[Token(Token = "0x200007B")]
public enum CSFMonsterFormationType
{
	[Token(Token = "0x40003DB")]
	N,
	[Token(Token = "0x40003DC")]
	A,
	[Token(Token = "0x40003DD")]
	X,
	[Token(Token = "0x40003DE")]
	O,
	[Token(Token = "0x40003DF")]
	Y,
	[Token(Token = "0x40003E0")]
	L
}
[Token(Token = "0x200007C")]
public class CSFMonsterFormationMgr
{
	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CSFMonsterFormationMgr _instance;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _spacing;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _formationOffset;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _curLevel;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> recordsFormationZIndex;

	[Token(Token = "0x17000050")]
	public static CSFMonsterFormationMgr Instance
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x658E240", Offset = "0x658E240", VA = "0x658E240")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public Vector3 FormationOffset
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x658E364", Offset = "0x658E364", VA = "0x658E364")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x658E384", Offset = "0x658E384", VA = "0x658E384")]
	public List<Vector3> GetFormationInfo(string typeStr, int count, int groupID, int round, float spacing)
	{
		return null;
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x658F56C", Offset = "0x658F56C", VA = "0x658F56C")]
	public void Shutdown()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x658E554", Offset = "0x658E554", VA = "0x658E554")]
	private void SetFormationParam(int round, float spacing)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x658E5FC", Offset = "0x658E5FC", VA = "0x658E5FC")]
	private List<Vector3> FormationTriangle(int pointCount = 3)
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x658EC88", Offset = "0x658EC88", VA = "0x658EC88")]
	private List<Vector3> FormationX(int pointCount = 9)
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x658F234", Offset = "0x658F234", VA = "0x658F234")]
	private List<Vector3> FormationO(int pointCount = 6)
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x658EFA4", Offset = "0x658EFA4", VA = "0x658EFA4")]
	private List<Vector3> FormationV(int pointCount = 3)
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x658F424", Offset = "0x658F424", VA = "0x658F424")]
	private List<Vector3> FormationLine(int pointCount = 3)
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x658F5C4", Offset = "0x658F5C4", VA = "0x658F5C4")]
	private int GetRandomDistance()
	{
		return default(int);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x658F5D4", Offset = "0x658F5D4", VA = "0x658F5D4")]
	private int GetRandomIndexByWeight(int[] weights)
	{
		return default(int);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x658F70C", Offset = "0x658F70C", VA = "0x658F70C")]
	private void DrawPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x658E2CC", Offset = "0x658E2CC", VA = "0x658E2CC")]
	public CSFMonsterFormationMgr()
	{
	}
}
[Token(Token = "0x200007D")]
public class CSFMonsterHUD : MonoBehaviour
{
	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider HPSlider;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProceduralImage FillImage;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _mainCamera;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _bindPosNode;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _bindPosNodeOffset;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x658F7C4", Offset = "0x658F7C4", VA = "0x658F7C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x658F7F8", Offset = "0x658F7F8", VA = "0x658F7F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x658F8D4", Offset = "0x658F8D4", VA = "0x658F8D4")]
	public void InitHUD(Vector3 commonPos, CSFMonsterType monsterType)
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x658FAE8", Offset = "0x658FAE8", VA = "0x658FAE8")]
	public void BingPositionNode(Transform node)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x658F9E0", Offset = "0x658F9E0", VA = "0x658F9E0")]
	private Vector3 GetHUDInitPosByType(Vector3 commonPos, CSFMonsterType monsterType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x658FA5C", Offset = "0x658FA5C", VA = "0x658FA5C")]
	private Vector3 GetHUDInitScaleByType(CSFMonsterType monsterType)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x658449C", Offset = "0x658449C", VA = "0x658449C")]
	public void UpdateHP(float value)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x658FB24", Offset = "0x658FB24", VA = "0x658FB24")]
	public CSFMonsterHUD()
	{
	}
}
[Token(Token = "0x200007E")]
[RequireComponent(typeof(LineRenderer))]
public class CSFMonsterLaser : MonoBehaviour
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("\ufffd\ufffd\ufffd")]
	[Range(0.001f, 1f)]
	public float Offset;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("\ufffd\ufffd\ufffd\ufffd")]
	[Range(0.001f, 1f)]
	public float Cycle;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.001f, 2f)]
	[Tooltip("\ufffd\ufffd\ufffd")]
	public float Interval;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _startPosition;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _endPosition;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _curWaitReDrawTime;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CSFMonster _owner;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _targetPosition;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _fireTime;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _bFiring;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x658FB84", Offset = "0x658FB84", VA = "0x658FB84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x658FBDC", Offset = "0x658FBDC", VA = "0x658FBDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x658FE64", Offset = "0x658FE64", VA = "0x658FE64")]
	public void LaserFire(CSFMonster owner, Vector3 targetPosition)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x658FEAC", Offset = "0x658FEAC", VA = "0x658FEAC")]
	private void CalPosition()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x658FC44", Offset = "0x658FC44", VA = "0x658FC44")]
	private void DrawLaserLine()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x658FEE4", Offset = "0x658FEE4", VA = "0x658FEE4")]
	public CSFMonsterLaser()
	{
	}
}
[Token(Token = "0x200007F")]
public enum CSFMonsterType
{
	[Token(Token = "0x40003F7")]
	Scarecrow,
	[Token(Token = "0x40003F8")]
	Zombie,
	[Token(Token = "0x40003F9")]
	Fish,
	[Token(Token = "0x40003FA")]
	Countdown,
	[Token(Token = "0x40003FB")]
	Egg,
	[Token(Token = "0x40003FC")]
	EggSon,
	[Token(Token = "0x40003FD")]
	EggGrandson,
	[Token(Token = "0x40003FE")]
	Honeybee,
	[Token(Token = "0x40003FF")]
	SpiderBoss,
	[Token(Token = "0x4000400")]
	None
}
[Token(Token = "0x2000080")]
public class CSFMonsterMgr : NetworkBehaviour
{
	[Token(Token = "0x2000081")]
	[CompilerGenerated]
	private sealed class <LoopGenMonstePerParts>d__73 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CSFMonsterMgr <>4__this;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameLevel data;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int round;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3? pos;

		[Token(Token = "0x17000053")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0x6593FDC", Offset = "0x6593FDC", VA = "0x6593FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000054")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x6594024", Offset = "0x6594024", VA = "0x6594024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000482")]
		[Address(RVA = "0x65910AC", Offset = "0x65910AC", VA = "0x65910AC")]
		[DebuggerHidden]
		public <LoopGenMonstePerParts>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x6000483")]
		[Address(RVA = "0x6593F58", Offset = "0x6593F58", VA = "0x6593F58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000484")]
		[Address(RVA = "0x6593F5C", Offset = "0x6593F5C", VA = "0x6593F5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x6593FE4", Offset = "0x6593FE4", VA = "0x6593FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[CompilerGenerated]
	private sealed class <GenMonstePerParts>d__74 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameLevel data;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int round;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CSFMonsterMgr <>4__this;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3? pos;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <partsCount>5__2;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <i>5__3;

		[Token(Token = "0x17000055")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600048B")]
			[Address(RVA = "0x65943A4", Offset = "0x65943A4", VA = "0x65943A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000056")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600048D")]
			[Address(RVA = "0x65943EC", Offset = "0x65943EC", VA = "0x65943EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x65910D4", Offset = "0x65910D4", VA = "0x65910D4")]
		[DebuggerHidden]
		public <GenMonstePerParts>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x659402C", Offset = "0x659402C", VA = "0x659402C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x6594030", Offset = "0x6594030", VA = "0x6594030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x65943AC", Offset = "0x65943AC", VA = "0x65943AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000083")]
	[CompilerGenerated]
	private sealed class <WaitPartsIntervalTime>d__75 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CSFMonsterMgr <>4__this;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <waitTime>5__2;

		[Token(Token = "0x17000057")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000491")]
			[Address(RVA = "0x659449C", Offset = "0x659449C", VA = "0x659449C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000058")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000493")]
			[Address(RVA = "0x65944E4", Offset = "0x65944E4", VA = "0x65944E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x6591180", Offset = "0x6591180", VA = "0x6591180")]
		[DebuggerHidden]
		public <WaitPartsIntervalTime>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x65943F4", Offset = "0x65943F4", VA = "0x65943F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x65943F8", Offset = "0x65943F8", VA = "0x65943F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x65944A4", Offset = "0x65944A4", VA = "0x65944A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000084")]
	[CompilerGenerated]
	private struct <DestroyMonster>d__84 : IAsyncStateMachine
	{
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayTime;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CSFMonsterMgr <>4__this;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string monsterID;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ulong clientID;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x6D7E164", Offset = "0x6D7E164", VA = "0x6D7E164", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000495")]
		[Address(RVA = "0x6D7E4A4", Offset = "0x6D7E4A4", VA = "0x6D7E4A4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CSFMonsterMgr Instance;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Space]
	public GameObject MonsterGo;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject MonsterBulletGo;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject MonsterPartsCollimator;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject MonsterBossGo;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Space]
	public GameObject MonsterBeHurtUI;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject MonsterHUD;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Space]
	public GameObject Scarecrow;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject Zombie;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject Fish;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject Countdown;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject Egg;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject EggSon;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject EggGrandson;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject Honeybee;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject Boss;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool IsDeathless;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool Is1S1K;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float DamageMultiple;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Space]
	public List<GameLevel> GameLevelData;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Dictionary<int, MonsterBasic> MonsterBasicData;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Dictionary<string, Const> GameConstConfig;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Action OnAllSmallMonsterBeKill;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject SubmachineBulletAttackEffectPrefab;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject MonsterDestroyEffectPrefab;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject GateWayEffectPrefab;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<MonsterSkill> _mosterSkillData;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Dictionary<string, BossStage> _bossStageData;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Dictionary<string, CSFMonster> _allMonsters;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameObjectPool _bulletPool;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObjectPool _monsterPartsCollimatorPool;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObjectPool _monsterBeHurtUIPool;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObjectPool _monsterHUDPool;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObjectPool _monsterScarecrowPool;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObjectPool _monsterZombiePool;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObjectPool _monsterFishPool;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private GameObjectPool _monsterCountdownPool;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GameObjectPool _monsterEggPool;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObjectPool _monsterEggSonPool;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private GameObjectPool _monsterEggGrandsonPool;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private GameObjectPool _monsterHoneybeePool;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private GameObjectPool _submachineBulletAttackEffectObjectPool;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private GameObjectPool _monsterDestroyEffectPool;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private GameObjectPool _gateWayEffectPool;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int _curRound;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int _playrought;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private int _curMonsterIndex;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private long[] _recordAttackTargetUserID;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private bool _bStop;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	private bool _endOfCurParts;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	private bool _alreadyGenAllMonsterInRound;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float OffsetX;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float OffsetY;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float MaxRange;

	[Token(Token = "0x17000052")]
	public List<CSFMonster> MonsterList
	{
		[Token(Token = "0x600043D")]
		[Address(RVA = "0x658FF04", Offset = "0x658FF04", VA = "0x658FF04")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600043E")]
		[Address(RVA = "0x658FF0C", Offset = "0x658FF0C", VA = "0x658FF0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x658FF1C", Offset = "0x658FF1C", VA = "0x658FF1C")]
	public bool TryRemoveMonster(string monsterID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x6590014", Offset = "0x6590014", VA = "0x6590014", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x659070C", Offset = "0x659070C", VA = "0x659070C", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x6590814", Offset = "0x6590814", VA = "0x6590814", Slot = "11")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x659081C", Offset = "0x659081C", VA = "0x659081C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x659013C", Offset = "0x659013C", VA = "0x659013C")]
	private void InitObjectPool()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x6590710", Offset = "0x6590710", VA = "0x6590710")]
	private void DestroyObjectPool()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x6590884", Offset = "0x6590884", VA = "0x6590884")]
	private void OnAllMonsterBeDestroy()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x6590908", Offset = "0x6590908", VA = "0x6590908")]
	public void StartGenerateMonster(int round)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x6590B44", Offset = "0x6590B44", VA = "0x6590B44")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x6590F08", Offset = "0x6590F08", VA = "0x6590F08")]
	public void UpdatePlayrought(int round)
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x6590958", Offset = "0x6590958", VA = "0x6590958")]
	private void GenMonsterByLevel(int round)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x6583354", Offset = "0x6583354", VA = "0x6583354")]
	public void GenMonstersByGameLevelConfig(GameLevel data, [Optional] Vector3? pos)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x6583328", Offset = "0x6583328", VA = "0x6583328")]
	public void LoopGenMonstersByGameLevelConfig(GameLevel data, [Optional] Vector3? pos)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x6583380", Offset = "0x6583380", VA = "0x6583380")]
	public void StopGenMonster()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x6590FFC", Offset = "0x6590FFC", VA = "0x6590FFC")]
	[IteratorStateMachine(typeof(<LoopGenMonstePerParts>d__73))]
	private IEnumerator LoopGenMonstePerParts(GameLevel data, int round, [Optional] Vector3? pos)
	{
		return null;
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x6590F50", Offset = "0x6590F50", VA = "0x6590F50")]
	[IteratorStateMachine(typeof(<GenMonstePerParts>d__74))]
	private IEnumerator GenMonstePerParts(GameLevel data, int round, [Optional] Vector3? pos)
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x65910FC", Offset = "0x65910FC", VA = "0x65910FC")]
	[IteratorStateMachine(typeof(<WaitPartsIntervalTime>d__75))]
	private IEnumerator WaitPartsIntervalTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x65911A8", Offset = "0x65911A8", VA = "0x65911A8")]
	private (CSFMonsterType, int) GetMonsterTypeAndAmount(string info, GameLevel data)
	{
		return default((CSFMonsterType, int));
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x6591408", Offset = "0x6591408", VA = "0x6591408")]
	private void GenBossMonster(int groupID, GameLevel data)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x6591428", Offset = "0x6591428", VA = "0x6591428")]
	private void GenGroupMonstersByType(CSFMonsterType type, int count, int groupID, List<Vector3> pos, GameLevel data, [Optional] Vector3? birthPos)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x6583C84", Offset = "0x6583C84", VA = "0x6583C84")]
	public CSFMonster GenerateMonsterByType(CSFMonsterType type, GameLevel data, int groupID = 0, [Optional] Vector3? birthPos)
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x6583F48", Offset = "0x6583F48", VA = "0x6583F48")]
	public float GetHPMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x6591708", Offset = "0x6591708", VA = "0x6591708")]
	public CSFMonsterProperty GetMonsterPropery(CSFMonsterType type, GameLevel gameLevel)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x6591AB0", Offset = "0x6591AB0", VA = "0x6591AB0")]
	public Dictionary<string, BossStage> GetBossConfigData()
	{
		return null;
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x6591AB8", Offset = "0x6591AB8", VA = "0x6591AB8")]
	public void KillMonster(string monsterID, ulong clientID = 0uL)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x6591B40", Offset = "0x6591B40", VA = "0x6591B40")]
	[AsyncStateMachine(typeof(<DestroyMonster>d__84))]
	public void DestroyMonster(string monsterID, float delayTime = 0f, ulong clientID = 0uL)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x6591C34", Offset = "0x6591C34", VA = "0x6591C34")]
	private void DestroyImmediatelyMonster(string monsterID, ulong clientId = 0uL)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x6586D70", Offset = "0x6586D70", VA = "0x6586D70")]
	public void CheckDestroyAllMonster()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x6590B78", Offset = "0x6590B78", VA = "0x6590B78")]
	private void DestroyAllMonster(bool destroyBoss = true)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x6591D60", Offset = "0x6591D60", VA = "0x6591D60")]
	public ulong FindRandomTargetClientID()
	{
		return default(ulong);
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x658A828", Offset = "0x658A828", VA = "0x658A828")]
	public void MonsterAttackTarget()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x6592310", Offset = "0x6592310", VA = "0x6592310")]
	[ServerRpc(RequireOwnership = false)]
	private void MonsterAttackTargetServerRpc(ulong clientID)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x659167C", Offset = "0x659167C", VA = "0x659167C")]
	public string GetMonsterID()
	{
		return null;
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x65925AC", Offset = "0x65925AC", VA = "0x65925AC")]
	public GameObject AddParts2Monster(CSFMonster monster)
	{
		return null;
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x65921A8", Offset = "0x65921A8", VA = "0x65921A8")]
	private int GetRandomIndexByWeight(int[] weights)
	{
		return default(int);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x6588398", Offset = "0x6588398", VA = "0x6588398")]
	public GameLevel GetGameLevelConfig(int index)
	{
		return null;
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x659002C", Offset = "0x659002C", VA = "0x659002C")]
	public void LoadMonsterConfig()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x6592648", Offset = "0x6592648", VA = "0x6592648")]
	public void AddMonster(CSFMonster newCSFMonster)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x6592754", Offset = "0x6592754", VA = "0x6592754")]
	public void RemoveMonster(CSFMonster removeCSFMonster)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x65845A0", Offset = "0x65845A0", VA = "0x65845A0")]
	public CSFMonster GetMonster(string id)
	{
		return null;
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x65927E4", Offset = "0x65927E4", VA = "0x65927E4")]
	public Vector3 GetRandomPointByClientID(ulong clientId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x6592A1C", Offset = "0x6592A1C", VA = "0x6592A1C")]
	public Vector3 GetRandomAttackPoint(Vector3 headPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x6592B58", Offset = "0x6592B58", VA = "0x6592B58")]
	public GameObject GetMonsterBullet()
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x658AECC", Offset = "0x658AECC", VA = "0x658AECC")]
	public void ReleaseMonsterBullet(GameObject bullet)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x6592BA8", Offset = "0x6592BA8", VA = "0x6592BA8")]
	public GameObject GetMonsterBeHurtUI()
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x658230C", Offset = "0x658230C", VA = "0x658230C")]
	public void ReleaseMonsterBeHurtUI(GameObject beHurtUI)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x6592BF8", Offset = "0x6592BF8", VA = "0x6592BF8")]
	public GameObject GetMonsterHUD()
	{
		return null;
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x6592C48", Offset = "0x6592C48", VA = "0x6592C48")]
	public void ReleaseMonsterHUD(GameObject monsterHUD)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x6592D0C", Offset = "0x6592D0C", VA = "0x6592D0C")]
	public GameObject GetSubmachineBulletAttackEffect()
	{
		return null;
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x6592D5C", Offset = "0x6592D5C", VA = "0x6592D5C")]
	public void ReleaseSubmachineBulletAttackEffect(GameObject submachineBulletAttackEffect)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x6592DE8", Offset = "0x6592DE8", VA = "0x6592DE8")]
	public GameObject GetMonsterDestroyEffect(Vector3 initPos)
	{
		return null;
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x6592E84", Offset = "0x6592E84", VA = "0x6592E84")]
	public void ReleaseMonsterDestroyEffect(GameObject monsterDestroyEffect)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x6592EDC", Offset = "0x6592EDC", VA = "0x6592EDC")]
	public GameObject GetGateWayEffect(Vector3 initPos)
	{
		return null;
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0x6592F78", Offset = "0x6592F78", VA = "0x6592F78")]
	public void ReleaseGateWayEffect(GameObject gateWayEffect)
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x6592FD0", Offset = "0x6592FD0", VA = "0x6592FD0")]
	public GameObject GetMonsterModel(CSFMonsterType type)
	{
		return null;
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x6593098", Offset = "0x6593098", VA = "0x6593098")]
	public void ReleaseMonsterModel(CSFMonsterType type, GameObject go)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x659328C", Offset = "0x659328C", VA = "0x659328C")]
	[ContextMenu("区域")]
	private void DrawMonsterArea()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x65935EC", Offset = "0x65935EC", VA = "0x65935EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x6593604", Offset = "0x6593604", VA = "0x6593604")]
	private void SimulationFire()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x6593A48", Offset = "0x6593A48", VA = "0x6593A48")]
	[ServerRpc(RequireOwnership = false)]
	private void DestroyAllMonsterServerRPC()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x65939B8", Offset = "0x65939B8", VA = "0x65939B8")]
	private void KillCurAllMonster()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x6593B44", Offset = "0x6593B44", VA = "0x6593B44")]
	public CSFMonsterMgr()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x6593D8C", Offset = "0x6593D8C", VA = "0x6593D8C")]
	private static void __rpc_handler_1492476788(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x6593E70", Offset = "0x6593E70", VA = "0x6593E70")]
	private static void __rpc_handler_2837685123(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x6593F18", Offset = "0x6593F18", VA = "0x6593F18", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x2000086")]
public struct CSFMonsterDamageInfoOLD : INetworkSerializable
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float damage;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float blackoutTime;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float slowDownRatio;

	[Token(Token = "0x6000499")]
	public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
	{
	}
}
[Token(Token = "0x2000087")]
public enum MovementType
{
	[Token(Token = "0x4000458")]
	None,
	[Token(Token = "0x4000459")]
	Normal,
	[Token(Token = "0x400045A")]
	Destination,
	[Token(Token = "0x400045B")]
	Fish,
	[Token(Token = "0x400045C")]
	Split
}
[Token(Token = "0x2000088")]
public class CSFMonsterMovement
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CSFMonster Owner;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnArriveEvent;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x6D7E55C", Offset = "0x6D7E55C", VA = "0x6D7E55C", Slot = "4")]
	public virtual void StartMovement(MovementType type)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x6D7E560", Offset = "0x6D7E560", VA = "0x6D7E560", Slot = "5")]
	public virtual void StartMovement(MovementType type, Vector3? pos, bool left = false)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x6D7E564", Offset = "0x6D7E564", VA = "0x6D7E564", Slot = "6")]
	public virtual void StopMovement()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x6D7E568", Offset = "0x6D7E568", VA = "0x6D7E568", Slot = "7")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x6D7E56C", Offset = "0x6D7E56C", VA = "0x6D7E56C", Slot = "8")]
	public virtual void ResetSpeed(float speedRatio = 1f)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x6D7E570", Offset = "0x6D7E570", VA = "0x6D7E570", Slot = "9")]
	public virtual void UpdateSpeed()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x6D7E574", Offset = "0x6D7E574", VA = "0x6D7E574", Slot = "10")]
	public virtual void StopMove()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x6D7E578", Offset = "0x6D7E578", VA = "0x6D7E578", Slot = "11")]
	public virtual void RestartMove()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x6D7E57C", Offset = "0x6D7E57C", VA = "0x6D7E57C", Slot = "12")]
	public virtual void DecelerateMove()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x6D7E580", Offset = "0x6D7E580", VA = "0x6D7E580")]
	public CSFMonsterMovement()
	{
	}
}
[Token(Token = "0x2000089")]
public class CSFMonsterNormalMovement : CSFMonsterMovement
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _recordLastPosLeft;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _tweenScale;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] _controlPoints;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _pointsIndex;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _startCatmullMove;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool _moveStop;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _moveTime;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _pathTime;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _startDestinationMove;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _dirctionDes;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _targetRotation;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _waveState;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _waveTime;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _cruiseTime;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _waveCenter;

	[Token(Token = "0x17000059")]
	private float Speed
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x6D7E588", Offset = "0x6D7E588", VA = "0x6D7E588")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x6D7E5AC", Offset = "0x6D7E5AC", VA = "0x6D7E5AC")]
	public CSFMonsterNormalMovement(CSFMonster monster)
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x6D7E694", Offset = "0x6D7E694", VA = "0x6D7E694", Slot = "5")]
	public override void StartMovement(MovementType type, [Optional] Vector3? formationPos, bool left = false)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x6D7F0D4", Offset = "0x6D7F0D4", VA = "0x6D7F0D4", Slot = "7")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x6D7EE6C", Offset = "0x6D7EE6C", VA = "0x6D7EE6C")]
	private void SplitMove(bool left)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x6D7E8FC", Offset = "0x6D7E8FC", VA = "0x6D7E8FC")]
	private void FormationMove(Vector3 pos)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x6D7EC2C", Offset = "0x6D7EC2C", VA = "0x6D7EC2C")]
	private void DestinationMove()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x6D7E7FC", Offset = "0x6D7E7FC", VA = "0x6D7E7FC")]
	private void LongMove()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x6D7F480", Offset = "0x6D7F480", VA = "0x6D7F480")]
	private Vector3 GetRandomPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x6D7F510", Offset = "0x6D7F510", VA = "0x6D7F510", Slot = "10")]
	public override void StopMove()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x6D7F51C", Offset = "0x6D7F51C", VA = "0x6D7F51C", Slot = "11")]
	public override void RestartMove()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x6D7F524", Offset = "0x6D7F524", VA = "0x6D7F524", Slot = "8")]
	public override void ResetSpeed(float speedRatio)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x6D7F528", Offset = "0x6D7F528", VA = "0x6D7F528", Slot = "12")]
	public override void DecelerateMove()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x6D7F25C", Offset = "0x6D7F25C", VA = "0x6D7F25C")]
	private void LookAtAttackTarget()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x6D7F40C", Offset = "0x6D7F40C", VA = "0x6D7F40C")]
	private Vector3 GetAttackTargetPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x6D7F2A0", Offset = "0x6D7F2A0", VA = "0x6D7F2A0")]
	private void UpdateContrlPoint()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x6D7F9D4", Offset = "0x6D7F9D4", VA = "0x6D7F9D4")]
	private Vector3 GetWaveRandomPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x6D7F318", Offset = "0x6D7F318", VA = "0x6D7F318")]
	private Vector3 GetPoint(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x6D7FA10", Offset = "0x6D7FA10", VA = "0x6D7FA10")]
	private static Vector3 GetCatmullSplinePoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x200008B")]
public class CSFMonsterProperty
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float HP;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Attack;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MoveSpeed;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinCruiseTime;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxCruiseTime;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MinFireInterval;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MaxFireInterval;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BulletInterval;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int BulletCount;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float PreFireTime;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float BulletSpeed;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x6D7FBB8", Offset = "0x6D7FBB8", VA = "0x6D7FBB8")]
	public CSFMonsterProperty()
	{
	}
}
[Token(Token = "0x200008C")]
public enum MonsterState
{
	[Token(Token = "0x400047D")]
	None,
	[Token(Token = "0x400047E")]
	Idle,
	[Token(Token = "0x400047F")]
	PreFire,
	[Token(Token = "0x4000480")]
	Fire
}
[Token(Token = "0x200008D")]
public class CSFMonsterState
{
	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CSFMonster Owner;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonsterWeapon Weapon;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonsterState CurState;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float CurStateTime;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Pause;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x6D7FBC0", Offset = "0x6D7FBC0", VA = "0x6D7FBC0", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x6D7FBC4", Offset = "0x6D7FBC4", VA = "0x6D7FBC4", Slot = "5")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x6D7FBC8", Offset = "0x6D7FBC8", VA = "0x6D7FBC8", Slot = "6")]
	public virtual void ChangeState(MonsterState state)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x6D7FBCC", Offset = "0x6D7FBCC", VA = "0x6D7FBCC", Slot = "7")]
	public virtual void PauseChangeState(bool pause)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x6D7FBD8", Offset = "0x6D7FBD8", VA = "0x6D7FBD8")]
	public CSFMonsterState()
	{
	}
}
[Token(Token = "0x200008E")]
public class CSFMonsterNormalState : CSFMonsterState
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _curFireInterval;

	[Token(Token = "0x1700005A")]
	public float PreFireDelay
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x6D7FBE0", Offset = "0x6D7FBE0", VA = "0x6D7FBE0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x6D7FC04", Offset = "0x6D7FC04", VA = "0x6D7FC04")]
	public CSFMonsterNormalState(CSFMonster monster, MonsterWeapon weapon)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x6D7FC50", Offset = "0x6D7FC50", VA = "0x6D7FC50", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x6D7FC60", Offset = "0x6D7FC60", VA = "0x6D7FC60", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x6D7FCEC", Offset = "0x6D7FCEC", VA = "0x6D7FCEC", Slot = "6")]
	public override void ChangeState(MonsterState state)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x6D7FE00", Offset = "0x6D7FE00", VA = "0x6D7FE00")]
	private void RefreshFireInterval()
	{
	}
}
[Token(Token = "0x200008F")]
public class CSFMonsterBossHandState : CSFMonsterState
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CSFMonsterBoss Boss;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float IdleTime;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float FireTime;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _minFireTime;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _maxFireTime;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x6D7FE34", Offset = "0x6D7FE34", VA = "0x6D7FE34")]
	public CSFMonsterBossHandState(CSFMonster monster, MonsterWeapon weapon, [Optional] CSFMonsterBoss boss)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x6D7FEA0", Offset = "0x6D7FEA0", VA = "0x6D7FEA0", Slot = "4")]
	public override void Init()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x6D7FEB0", Offset = "0x6D7FEB0", VA = "0x6D7FEB0", Slot = "5")]
	public override void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x6D7FF2C", Offset = "0x6D7FF2C", VA = "0x6D7FF2C", Slot = "6")]
	public override void ChangeState(MonsterState state)
	{
	}
}
[Token(Token = "0x2000090")]
public class CSFMonsterView : MonoBehaviour
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] ViewNodes;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform AttackEffectPoint;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform MonsterModel;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ExplosionEffect;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject DecelerationEffect;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject DazeEffect;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BurningEffect;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject PreFireEffect;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject FireEffect;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject SpeedUpEffect;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform ViewHUDNode;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject WuDiEffect;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject LeftHandEffect;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject RightHandEffect;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject HeadEffect;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject BodyEffect;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject[] StageTwoPartsExplosionEffect;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject LeftHand;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject RightHand;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject LeftHandExplodeEffect;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject RightHandExplodeEffect;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[FormerlySerializedAs("PartsExplosionEffect")]
	public GameObject[] StageFourPartsExplosionEffect;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Animator _monsterAnimator;

	[Token(Token = "0x1700005B")]
	public Animator MonsterAnimator
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x6D8008C", Offset = "0x6D8008C", VA = "0x6D8008C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x6D80100", Offset = "0x6D80100", VA = "0x6D80100")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x6D80158", Offset = "0x6D80158", VA = "0x6D80158")]
	public void PlayAnimBool(string name, bool play = true)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x6D8024C", Offset = "0x6D8024C", VA = "0x6D8024C")]
	public void PlayAnimTrigger(string name)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x6D802F4", Offset = "0x6D802F4", VA = "0x6D802F4")]
	public void InitMonsterView()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x6D80334", Offset = "0x6D80334", VA = "0x6D80334")]
	private void InitBossView()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x6D803F8", Offset = "0x6D803F8", VA = "0x6D803F8")]
	public void InitViewEffect()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x6D80958", Offset = "0x6D80958", VA = "0x6D80958")]
	public void RefreshDecelerationEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x6D809F0", Offset = "0x6D809F0", VA = "0x6D809F0")]
	public void RefreshDazeEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x6D80A88", Offset = "0x6D80A88", VA = "0x6D80A88")]
	public void RefreshBurningEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x6D80B20", Offset = "0x6D80B20", VA = "0x6D80B20")]
	public void ShowPreFireEffect()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x6D80BBC", Offset = "0x6D80BBC", VA = "0x6D80BBC")]
	public void ShowFireEffect()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x6D80C58", Offset = "0x6D80C58", VA = "0x6D80C58")]
	public void ShowSpeedUpEffect()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x6D80CF4", Offset = "0x6D80CF4", VA = "0x6D80CF4")]
	public void RefreshWuDiEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x6D80D8C", Offset = "0x6D80D8C", VA = "0x6D80D8C")]
	public void RefreshLeftHandEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x6D80E24", Offset = "0x6D80E24", VA = "0x6D80E24")]
	public void RefreshRightHandEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x6D80EBC", Offset = "0x6D80EBC", VA = "0x6D80EBC")]
	public void RefreshHeadEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x6D80F54", Offset = "0x6D80F54", VA = "0x6D80F54")]
	public void RefreshBodyEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x6D80798", Offset = "0x6D80798", VA = "0x6D80798")]
	public void RefreshStageTwoPartExplosionEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x6D80878", Offset = "0x6D80878", VA = "0x6D80878")]
	public void RefreshStageFourPartExplosionEffect(bool isShow)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x6D80FEC", Offset = "0x6D80FEC", VA = "0x6D80FEC")]
	public void OnHandKilledView(bool isLeft)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x6D810AC", Offset = "0x6D810AC", VA = "0x6D810AC")]
	public CSFMonsterView()
	{
	}
}
[Token(Token = "0x2000091")]
public class FireAudioManager
{
	[Token(Token = "0x40004A3")]
	public const string Game_CSF_SMGFire = "picoworld_Sound_SoundEffect_game_CSF_SMGFire";

	[Token(Token = "0x40004A4")]
	public const string Game_CSF_SMGFire_Y = "picoworld_Sound_SoundEffect_game_CSF_SMGFire_Y";

	[Token(Token = "0x40004A5")]
	public const string Game_CSF_LaserFire = "picoworld_Sound_SoundEffect_game_CSF_LaserFire";

	[Token(Token = "0x40004A6")]
	public const string Game_CSF_LaserFire_Y = "picoworld_Sound_SoundEffect_game_CSF_LaserFire_Y";

	[Token(Token = "0x40004A7")]
	public const string Game_CSF_RPGFire = "picoworld_Sound_SoundEffect_game_CSF_RPGFire";

	[Token(Token = "0x40004A8")]
	public const string Game_CSF_RPGFire_Y = "picoworld_Sound_SoundEffect_game_CSF_RPGFire_Y";

	[Token(Token = "0x40004A9")]
	public const string Game_CSF_SMGShoot = "picoworld_Sound_SoundEffect_game_CSF_SMGShoot";

	[Token(Token = "0x40004AA")]
	public const string Game_CSF_RPGShoot = "picoworld_Sound_SoundEffect_game_CSF_RPGShoot";

	[Token(Token = "0x40004AB")]
	public const string Game_CSF_LaserFireShoot = "picoworld_Sound_SoundEffect_game_CSF_LaserFireShoot";

	[Token(Token = "0x40004AC")]
	public const string Game_CSF_ShieldBlock1 = "picoworld_Sound_SoundEffect_game_CSF_ShieldBlock1";

	[Token(Token = "0x40004AD")]
	public const string Game_CSF_ShieldBlock2 = "picoworld_Sound_SoundEffect_game_CSF_ShieldBlock2";

	[Token(Token = "0x40004AE")]
	public const string Game_CSF_ShieldCharge = "picoworld_Sound_SoundEffect_game_CSF_ShieldCharge";

	[Token(Token = "0x40004AF")]
	public const string Game_CSF_MonsterCharge = "picoworld_Sound_SoundEffect_game_CSF_MonsterCharge";

	[Token(Token = "0x40004B0")]
	public const string Game_CSF_MonsterBullet_1 = "picoworld_Sound_SoundEffect_game_CSF_MonsterBullet_1";

	[Token(Token = "0x40004B1")]
	public const string Game_CSF_MonsterDeath_1 = "picoworld_Sound_SoundEffect_game_CSF_MonsterDeath_1";

	[Token(Token = "0x40004B2")]
	public const string Game_CSF_PlayerHit = "picoworld_Sound_SoundEffect_game_CSF_PlayerHit";

	[Token(Token = "0x40004B3")]
	public const string Game_CSF_PlayerRevival = "picoworld_Sound_SoundEffect_game_CSF_PlayerRevival";

	[Token(Token = "0x40004B4")]
	public const string Game_CSF_Choose = "picoworld_Sound_SoundEffect_game_CSF_Choose";

	[Token(Token = "0x40004B5")]
	public const string Game_CSF_RogueLikeAppear = "picoworld_Sound_SoundEffect_game_CSF_RogueLikeAppear";

	[Token(Token = "0x40004B6")]
	public const string Game_CSF_RogueLikeDisappear = "picoworld_Sound_SoundEffect_game_CSF_RogueLikeDisappear";

	[Token(Token = "0x40004B7")]
	public const string Game_CSF_ShieldBlockLast = "picoworld_Sound_SoundEffect_game_CSF_ShieldBlockLast";

	[Token(Token = "0x40004B8")]
	public const string Game_CSF_ShieldBlast = "picoworld_Sound_SoundEffect_game_CSF_ShieldBlast";

	[Token(Token = "0x40004B9")]
	public const string Game_CSF_MonsterSplit = "picoworld_Sound_SoundEffect_game_CSF_MonsterSplit";

	[Token(Token = "0x40004BA")]
	public const string Game_CSF_MonsterDeath_2 = "picoworld_Sound_SoundEffect_game_CSF_MonsterDeath_2";

	[Token(Token = "0x40004BB")]
	public const string Game_Archery_Countdown_1 = "picoworld_Sound_voice_game_Archery_Countdown_1";

	[Token(Token = "0x40004BC")]
	public const string Game_Archery_Countdown_2 = "picoworld_Sound_voice_game_Archery_Countdown_2";

	[Token(Token = "0x40004BD")]
	public const string Game_Archery_Countdown_3 = "picoworld_Sound_voice_game_Archery_Countdown_3";

	[Token(Token = "0x40004BE")]
	public const string Game_Archery_Start_1 = "picoworld_Sound_voice_game_Archery_Start_1";

	[Token(Token = "0x40004BF")]
	public const string Game_Archery_Countdown_4 = "picoworld_Sound_voice_game_Archery_Countdown_4";

	[Token(Token = "0x40004C0")]
	public const string Game_Archery_End_1 = "picoworld_Sound_voice_game_Archery_End_1";

	[Token(Token = "0x40004C1")]
	public const string Game_CSF_Begin = "picoworld_Sound_Voice_game_CSF_Begin";

	[Token(Token = "0x40004C2")]
	public const string Game_CSF_ChooseWeapon = "picoworld_Sound_Voice_game_CSF_ChooseWeapon";

	[Token(Token = "0x40004C3")]
	public const string Game_CSF_GrabShield = "picoworld_Sound_Voice_game_CSF_GrabShield";

	[Token(Token = "0x40004C4")]
	public const string Game_CSF_Roundend = "picoworld_Sound_Voice_game_CSF_Roundend";

	[Token(Token = "0x40004C5")]
	public const string Game_CSF_BeginNext = "picoworld_Sound_Voice_game_CSF_BeginNext";

	[Token(Token = "0x40004C6")]
	public const string Game_CSF_RoguelikeChoose = "picoworld_Sound_Voice_game_CSF_RoguelikeChoose";

	[Token(Token = "0x40004C7")]
	public const string Game_CSF_End = "picoworld_Sound_Voice_game_CSF_End";

	[Token(Token = "0x40004C8")]
	public const string Game_CSF_OneDeath = "picoworld_Sound_Voice_game_CSF_OneDeath";

	[Token(Token = "0x40004C9")]
	public const string Game_CSF_TwoDeaths = "picoworld_Sound_Voice_game_CSF_TwoDeaths";

	[Token(Token = "0x40004CA")]
	public const string Game_CSF_OneReborn = "picoworld_Sound_Voice_game_CSF_OneReborn";

	[Token(Token = "0x40004CB")]
	public const string Game_CSF_YouReborn = "picoworld_Sound_Voice_game_CSF_YouReborn";

	[Token(Token = "0x40004CC")]
	public const string Game_CSF_YouDeath = "picoworld_Sound_Voice_game_CSF_YouDeath";

	[Token(Token = "0x40004CD")]
	public const string Game_CSF_MVP = "picoworld_Sound_Voice_game_CSF_MVP";

	[Token(Token = "0x40004CE")]
	public const string Game_CSF_TimeOutSoon = "picoworld_Sound_Voice_game_CSF_TimeOutSoon";

	[Token(Token = "0x40004CF")]
	public const string Game_CSF_MatchingBGM = "picoworld_Sound_Music_game_CSF_MatchingBGM";

	[Token(Token = "0x40004D0")]
	public const string Game_CSF_BattleBGM = "picoworld_Sound_Music_game_CSF_BattleBGM";

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x6D810B4", Offset = "0x6D810B4", VA = "0x6D810B4")]
	public static void PlaySoundSMGFire(GameObject smgGameObject, int index = 0)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x6D812CC", Offset = "0x6D812CC", VA = "0x6D812CC")]
	public static void PlaySoundLaserFire(GameObject laserGameObject, int index = 0)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x6D813F4", Offset = "0x6D813F4", VA = "0x6D813F4")]
	public static void ChangeSoundLaserFirePitch(float pitchRatio, int index)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x6D81628", Offset = "0x6D81628", VA = "0x6D81628")]
	public static void ResetSoundLaserFirePitch()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x6D8168C", Offset = "0x6D8168C", VA = "0x6D8168C")]
	public static void StopSoundLaserFire(GameObject laserGameObject, int index = 0)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x6D818A4", Offset = "0x6D818A4", VA = "0x6D818A4")]
	public static void PlaySoundRPGFire(GameObject rpgGameObject, int index = 0)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x6D819CC", Offset = "0x6D819CC", VA = "0x6D819CC")]
	public static void PlaySoundSMGShoot(GameObject bulletGameObject)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x6D81A14", Offset = "0x6D81A14", VA = "0x6D81A14")]
	public static void PlaySoundRPGShoot(GameObject bulletGameObject)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x6D81A5C", Offset = "0x6D81A5C", VA = "0x6D81A5C")]
	public static void PlaySoundLaserFireShoot(GameObject bulletGameObject)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x6D81AA4", Offset = "0x6D81AA4", VA = "0x6D81AA4")]
	public static void StopSoundLaserFireShoot()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x6D81AE8", Offset = "0x6D81AE8", VA = "0x6D81AE8")]
	public static void PlaySoundShieldBlock1(GameObject shieldGameObject)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x6D81B30", Offset = "0x6D81B30", VA = "0x6D81B30")]
	public static void PlaySoundShieldBlock2(GameObject shieldGameObject)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x6D81B78", Offset = "0x6D81B78", VA = "0x6D81B78")]
	public static void PlaySoundShieldCharge(GameObject shieldGameObject)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x6D81BC0", Offset = "0x6D81BC0", VA = "0x6D81BC0")]
	public static void PlaySoundMonsterCharge(GameObject monsterGameObject)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x6D81C08", Offset = "0x6D81C08", VA = "0x6D81C08")]
	public static void StopSoundMonsterCharge(GameObject monsterGameObject)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x6D81C50", Offset = "0x6D81C50", VA = "0x6D81C50")]
	public static void PlaySoundMonsterBullet1(GameObject bulletGameObject)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x6D81C98", Offset = "0x6D81C98", VA = "0x6D81C98")]
	public static void PlaySoundMonsterDeath1(GameObject monsterGameObject)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x6D81CE0", Offset = "0x6D81CE0", VA = "0x6D81CE0")]
	public static void PlaySoundPlayerHit()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x6D81D24", Offset = "0x6D81D24", VA = "0x6D81D24")]
	public static void PlaySoundPlayerRevival()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x6D81D68", Offset = "0x6D81D68", VA = "0x6D81D68")]
	public static void PlaySoundChoose()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x6D81DAC", Offset = "0x6D81DAC", VA = "0x6D81DAC")]
	public static void PlaySoundRogueLikeDisappear()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x6D81DF0", Offset = "0x6D81DF0", VA = "0x6D81DF0")]
	public static void PlaySoundShieldBlockLast()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x6D81E34", Offset = "0x6D81E34", VA = "0x6D81E34")]
	public static void PlaySoundShieldBlast()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x6D81E78", Offset = "0x6D81E78", VA = "0x6D81E78")]
	public static void PlaySoundMonsterSplit(GameObject monster)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x6D81EC0", Offset = "0x6D81EC0", VA = "0x6D81EC0")]
	public static void PlaySoundBigMonsterDeath2(GameObject monster)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x6D81F08", Offset = "0x6D81F08", VA = "0x6D81F08")]
	public static void PlaySoundCountDown(int time)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x6D81F8C", Offset = "0x6D81F8C", VA = "0x6D81F8C")]
	public static void PlaySoundEndCountdown(int time)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x6D81FF8", Offset = "0x6D81FF8", VA = "0x6D81FF8")]
	public static void PlaySoundBegin()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x6D8203C", Offset = "0x6D8203C", VA = "0x6D8203C")]
	public static void PlaySoundChooseWeapon()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x6D82080", Offset = "0x6D82080", VA = "0x6D82080")]
	public static void PlaySoundGrabShield()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x6D820C4", Offset = "0x6D820C4", VA = "0x6D820C4")]
	public static void PlaySoundRoundend()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x6D82108", Offset = "0x6D82108", VA = "0x6D82108")]
	public static void PlaySoundBeginNext()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x6D8214C", Offset = "0x6D8214C", VA = "0x6D8214C")]
	public static void PlaySoundRoguelikeChoose()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x6D821B0", Offset = "0x6D821B0", VA = "0x6D821B0")]
	public static void PlaySoundGameEnd()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x6D821F4", Offset = "0x6D821F4", VA = "0x6D821F4")]
	public static void PlaySoundOneDeath()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x6D82238", Offset = "0x6D82238", VA = "0x6D82238")]
	public static void PlaySoundTwoDeaths()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x6D8227C", Offset = "0x6D8227C", VA = "0x6D8227C")]
	public static void PlaySoundOneReborn()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x6D822C0", Offset = "0x6D822C0", VA = "0x6D822C0")]
	public static void PlaySoundYouReborn()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x6D82304", Offset = "0x6D82304", VA = "0x6D82304")]
	public static void PlaySoundYouDeath()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x6D82348", Offset = "0x6D82348", VA = "0x6D82348")]
	public static void PlaySoundMVP()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x6D8238C", Offset = "0x6D8238C", VA = "0x6D8238C")]
	public static void PlaySoundTimeOut()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x6D823D0", Offset = "0x6D823D0", VA = "0x6D823D0")]
	public static void PlayMusicMatching()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x6D825AC", Offset = "0x6D825AC", VA = "0x6D825AC")]
	public static void PlayMusicFighting()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x6D811DC", Offset = "0x6D811DC", VA = "0x6D811DC")]
	public static void PlaySound(string eventName, [Optional] GameObject gameobject)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x6D817B4", Offset = "0x6D817B4", VA = "0x6D817B4")]
	public static void StopSound(string eventName, [Optional] GameObject gameobject)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x6D81538", Offset = "0x6D81538", VA = "0x6D81538")]
	public static void SoundRTPC(string valueName, float drawPercent)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x6D825F4", Offset = "0x6D825F4", VA = "0x6D825F4")]
	public static void SwitchMusic(bool isInit, string groupName, string soundName, string eventName, [Optional] GameObject gameObject)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x6D82788", Offset = "0x6D82788", VA = "0x6D82788")]
	public static void StopAllMusic()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x6D82418", Offset = "0x6D82418", VA = "0x6D82418")]
	public static void StopAllFireBGM()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x6D8291C", Offset = "0x6D8291C", VA = "0x6D8291C")]
	public static void SetState(string stateGroupName, string stateValue)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x6D82A0C", Offset = "0x6D82A0C", VA = "0x6D82A0C")]
	public FireAudioManager()
	{
	}
}
[Token(Token = "0x2000092")]
public class FireBoardManager : MonoBehaviour
{
	[Token(Token = "0x2000093")]
	[CompilerGenerated]
	private sealed class <ShowMVPPlayerIEnu>d__25 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isInit;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireBoardManager <>4__this;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FirePlayerData mvpPlayerData;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000526")]
			[Address(RVA = "0x6D83838", Offset = "0x6D83838", VA = "0x6D83838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000528")]
			[Address(RVA = "0x6D83880", Offset = "0x6D83880", VA = "0x6D83880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x6D834F8", Offset = "0x6D834F8", VA = "0x6D834F8")]
		[DebuggerHidden]
		public <ShowMVPPlayerIEnu>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x6D8368C", Offset = "0x6D8368C", VA = "0x6D8368C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x6D83690", Offset = "0x6D83690", VA = "0x6D83690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x6D83840", Offset = "0x6D83840", VA = "0x6D83840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI CountDownText;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PlayerNodePrefab;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PlayerNodeRoot;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI RoundText;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject FireBoard;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TimeBoard;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject MVPNode;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WebTextureImage MVPThumbnail;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI MVPName;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WebTextureImage MVPSeasonGradeIcon;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PlayerNode> playerNodeList;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VertexGradient commonVertexGradient;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private VertexGradient endVertexGradient;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x6D82A14", Offset = "0x6D82A14", VA = "0x6D82A14")]
	public void InitFireBoardManager()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x6D82CA4", Offset = "0x6D82CA4", VA = "0x6D82CA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x6D82DC0", Offset = "0x6D82DC0", VA = "0x6D82DC0")]
	public void RefreshPlayerDataShow(PlayerInfoChangeType changeType, FirePlayerData playerData, int index)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x6D83004", Offset = "0x6D83004", VA = "0x6D83004")]
	public void CreatPlayerNode(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x6D83140", Offset = "0x6D83140", VA = "0x6D83140")]
	private void RefreshRoundText(int preRound, int newRound)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x6D82B48", Offset = "0x6D82B48", VA = "0x6D82B48")]
	public void ShowEndGameTitle()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x6D831F0", Offset = "0x6D831F0", VA = "0x6D831F0")]
	private string FormatTime(float rowTime)
	{
		return null;
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x6D83340", Offset = "0x6D83340", VA = "0x6D83340")]
	public void RefreshCountDownText(float preTime, float newTime)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x6D83374", Offset = "0x6D83374", VA = "0x6D83374")]
	private void SetCountDowmColor(bool isEnd)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x6D82C3C", Offset = "0x6D82C3C", VA = "0x6D82C3C")]
	public void ShowFireBoard(bool onlyShowCountDown = false, bool isEnd = false)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x6D833EC", Offset = "0x6D833EC", VA = "0x6D833EC")]
	public void HideFireBoard()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x6D83438", Offset = "0x6D83438", VA = "0x6D83438")]
	public void ShowMVPPlayer(bool isInit, FirePlayerData mvpPlayerData)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x6D8345C", Offset = "0x6D8345C", VA = "0x6D8345C")]
	[IteratorStateMachine(typeof(<ShowMVPPlayerIEnu>d__25))]
	private IEnumerator ShowMVPPlayerIEnu(bool isInit, FirePlayerData mvpPlayerData)
	{
		return null;
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x6D83520", Offset = "0x6D83520", VA = "0x6D83520")]
	public FireBoardManager()
	{
	}
}
[Token(Token = "0x2000094")]
public class FireClientManager : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private struct <RefreshPlayerDataList>d__83 : IAsyncStateMachine
	{
		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireClientManager <>4__this;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int index;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PlayerInfoChangeType changeType;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FirePlayerData playerData;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FirePlatform <firePlatform>5__2;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UniTask<Shield>.Awaiter <>u__1;

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x6D8850C", Offset = "0x6D8850C", VA = "0x6D8850C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x6D89768", Offset = "0x6D89768", VA = "0x6D89768", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000096")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass91_0
	{
		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FireClientManager <>4__this;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerIndex;

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x6D89774", Offset = "0x6D89774", VA = "0x6D89774")]
		public <>c__DisplayClass91_0()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x6D8977C", Offset = "0x6D8977C", VA = "0x6D8977C")]
		internal bool <GetShieldByPlayerIndex>b__0()
		{
			return default(bool);
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private struct <GetShieldByPlayerIndex>d__91 : IAsyncStateMachine
	{
		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<Shield> <>t__builder;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClientManager <>4__this;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerIndex;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass91_0 <>8__1;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x6D8979C", Offset = "0x6D8979C", VA = "0x6D8979C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x6D89DE0", Offset = "0x6D89DE0", VA = "0x6D89DE0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000098")]
	[CompilerGenerated]
	private struct <ShowInvincibleEffect>d__98 : IAsyncStateMachine
	{
		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClientManager <>4__this;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerIndex;

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x6D89E38", Offset = "0x6D89E38", VA = "0x6D89E38", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0x6D89F34", Offset = "0x6D89F34", VA = "0x6D89F34", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000099")]
	[CompilerGenerated]
	private struct <RemoveInvincibleEffect>d__99 : IAsyncStateMachine
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireClientManager <>4__this;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerIndex;

		[Token(Token = "0x6000574")]
		[Address(RVA = "0x6D89F40", Offset = "0x6D89F40", VA = "0x6D89F40", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0x6D8A03C", Offset = "0x6D8A03C", VA = "0x6D8A03C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private struct <ShowPlayerReviveNode>d__108 : IAsyncStateMachine
	{
		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerIndex;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FireClientManager <>4__this;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FirePlayerData playerData;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<Shield>.Awaiter <>u__1;

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x6D8A048", Offset = "0x6D8A048", VA = "0x6D8A048", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x6D8A480", Offset = "0x6D8A480", VA = "0x6D8A480", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200009B")]
	[CompilerGenerated]
	private struct <HidePlayerReviveNode>d__109 : IAsyncStateMachine
	{
		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int playerIndex;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FireClientManager <>4__this;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UniTask<Shield>.Awaiter <>u__1;

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x6D8A48C", Offset = "0x6D8A48C", VA = "0x6D8A48C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x6D8A854", Offset = "0x6D8A854", VA = "0x6D8A854", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FireClientManager Instance;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float OffsetX;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float OffsetY;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxRange;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject FireBoardPrefab;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TotalInvincibleTime;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform GuideWindowRoot;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform RankListRoot;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform SeasonSkinChooseRoot;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform SeasonInfoRoot;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform SeasonLogoRoot;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI VersionText;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RoomManager _curRoomManager;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform PlayerTransform;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, List<WeaponManager>> weaponDics;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FireBoardManager fireBoardManager;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<RogueLikeSkill> currentCanSelectSkillList;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentInvincibleTime;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool isInitBGM;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<FirePlatform> clientFirePlatformList;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool isDeathHaptics;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float currentDeathHapticsTime;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaitWeaponManager[] waitWeaponDics;

	[Token(Token = "0x1700005E")]
	public FirePlayerData MyPlayerData
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x6D83888", Offset = "0x6D83888", VA = "0x6D83888")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x6D83890", Offset = "0x6D83890", VA = "0x6D83890")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public int MyIndex
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x6D83898", Offset = "0x6D83898", VA = "0x6D83898")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x6D838A0", Offset = "0x6D838A0", VA = "0x6D838A0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public bool IsInvincible
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x6D838A8", Offset = "0x6D838A8", VA = "0x6D838A8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x6D838B0", Offset = "0x6D838B0", VA = "0x6D838B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public float ReviveInvincibleTime
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x6D838BC", Offset = "0x6D838BC", VA = "0x6D838BC")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x6D838C4", Offset = "0x6D838C4", VA = "0x6D838C4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float CurrentTotalInvincibleTime
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0x6D838CC", Offset = "0x6D838CC", VA = "0x6D838CC")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000532")]
		[Address(RVA = "0x6D838D4", Offset = "0x6D838D4", VA = "0x6D838D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public bool IsDeath
	{
		[Token(Token = "0x6000533")]
		[Address(RVA = "0x6D838DC", Offset = "0x6D838DC", VA = "0x6D838DC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x6D838E4", Offset = "0x6D838E4", VA = "0x6D838E4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public int DeathPlayerNum
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x6D838F0", Offset = "0x6D838F0", VA = "0x6D838F0")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x6D838F8", Offset = "0x6D838F8", VA = "0x6D838F8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public int TotalPlayerNum
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x6D83900", Offset = "0x6D83900", VA = "0x6D83900")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x6D83908", Offset = "0x6D83908", VA = "0x6D83908")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public WeaponType MySelectWeaponType
	{
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x6D83910", Offset = "0x6D83910", VA = "0x6D83910")]
		[CompilerGenerated]
		get
		{
			return default(WeaponType);
		}
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x6D83918", Offset = "0x6D83918", VA = "0x6D83918")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public int MyFireCnt
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x6D83920", Offset = "0x6D83920", VA = "0x6D83920")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x6D83928", Offset = "0x6D83928", VA = "0x6D83928")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public int MyHitCnt
	{
		[Token(Token = "0x600053D")]
		[Address(RVA = "0x6D83930", Offset = "0x6D83930", VA = "0x6D83930")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600053E")]
		[Address(RVA = "0x6D83938", Offset = "0x6D83938", VA = "0x6D83938")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public int MyMonsterCnt
	{
		[Token(Token = "0x600053F")]
		[Address(RVA = "0x6D83940", Offset = "0x6D83940", VA = "0x6D83940")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000540")]
		[Address(RVA = "0x6D83948", Offset = "0x6D83948", VA = "0x6D83948")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public int MyBeHitCnt
	{
		[Token(Token = "0x6000541")]
		[Address(RVA = "0x6D83950", Offset = "0x6D83950", VA = "0x6D83950")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000542")]
		[Address(RVA = "0x6D83958", Offset = "0x6D83958", VA = "0x6D83958")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public RoomManager CurRoomManager
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x6D83960", Offset = "0x6D83960", VA = "0x6D83960")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x6D83A08", Offset = "0x6D83A08", VA = "0x6D83A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x6D83A60", Offset = "0x6D83A60", VA = "0x6D83A60")]
	private void Start()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x6D83E7C", Offset = "0x6D83E7C", VA = "0x6D83E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x6D83A64", Offset = "0x6D83A64", VA = "0x6D83A64")]
	public void InitClient()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x6D84D50", Offset = "0x6D84D50", VA = "0x6D84D50")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x6D842F4", Offset = "0x6D842F4", VA = "0x6D842F4")]
	private void OnEventFireGameStateChanged(FireGameState oldValue, FireGameState newValue)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x6D86094", Offset = "0x6D86094", VA = "0x6D86094")]
	[AsyncStateMachine(typeof(<RefreshPlayerDataList>d__83))]
	public void RefreshPlayerDataList(PlayerInfoChangeType changeType, FirePlayerData playerData, int index)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x6D84144", Offset = "0x6D84144", VA = "0x6D84144")]
	private void CreatFireBoardManager()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x6D84218", Offset = "0x6D84218", VA = "0x6D84218")]
	private void InitLastPlayerDataList()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x6D86178", Offset = "0x6D86178", VA = "0x6D86178")]
	public Vector3 GetRandomAttackPoint(Vector3 headPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x6D862B4", Offset = "0x6D862B4", VA = "0x6D862B4")]
	public void ChangeWeaponGrabInClient(int index, bool isHold)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x6D86434", Offset = "0x6D86434", VA = "0x6D86434")]
	private void FindWaitWeaponInfomation()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x6D864C0", Offset = "0x6D864C0", VA = "0x6D864C0")]
	public void RecordAllWeapons(WeaponManager weapon)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x6D86690", Offset = "0x6D86690", VA = "0x6D86690")]
	public void RemoveWeaponRecord(WeaponManager weapon)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x6D86804", Offset = "0x6D86804", VA = "0x6D86804")]
	[AsyncStateMachine(typeof(<GetShieldByPlayerIndex>d__91))]
	private UniTask<Shield> GetShieldByPlayerIndex(int playerIndex)
	{
		return default(UniTask<Shield>);
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x6D868F0", Offset = "0x6D868F0", VA = "0x6D868F0")]
	private bool HaveCreatShieldByPlayerIndex(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x6D86A94", Offset = "0x6D86A94", VA = "0x6D86A94")]
	public void GMStartGame()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x6D86BA0", Offset = "0x6D86BA0", VA = "0x6D86BA0")]
	private void OnCountDownChange(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x6D8465C", Offset = "0x6D8465C", VA = "0x6D8465C")]
	private void RefreshCountDown(float preTime, float newTime)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x6D85044", Offset = "0x6D85044", VA = "0x6D85044")]
	public void RefreshTips(bool isShow, int tipsID = 0, int tips = 0)
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x6D855B8", Offset = "0x6D855B8", VA = "0x6D855B8")]
	private void RefreshReadyGOTips(bool isShow)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x6D87898", Offset = "0x6D87898", VA = "0x6D87898")]
	[AsyncStateMachine(typeof(<ShowInvincibleEffect>d__98))]
	private System.Threading.Tasks.Task ShowInvincibleEffect(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x6D83F6C", Offset = "0x6D83F6C", VA = "0x6D83F6C")]
	[AsyncStateMachine(typeof(<RemoveInvincibleEffect>d__99))]
	public System.Threading.Tasks.Task RemoveInvincibleEffect(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x6D8798C", Offset = "0x6D8798C", VA = "0x6D8798C")]
	public void RefreshInvincibleTime(float extraTime)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x6D8799C", Offset = "0x6D8799C", VA = "0x6D8799C")]
	public void CheckDodgeInvincibleTime(float invincibleTime)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x6D879D8", Offset = "0x6D879D8", VA = "0x6D879D8")]
	private void OnEventInitAudio(string eventID, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x6D87B5C", Offset = "0x6D87B5C", VA = "0x6D87B5C")]
	private void SelectSkillFirst(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x6D87C7C", Offset = "0x6D87C7C", VA = "0x6D87C7C")]
	private void SelectSkillSecond(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x6D87D9C", Offset = "0x6D87D9C", VA = "0x6D87D9C")]
	private void SelectSkillThird(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x6D87EBC", Offset = "0x6D87EBC", VA = "0x6D87EBC")]
	private void RefreshAllClientFirePlatform()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x6D87FA8", Offset = "0x6D87FA8", VA = "0x6D87FA8")]
	private FirePlatform GetFirePlatformByIndex(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x6D88120", Offset = "0x6D88120", VA = "0x6D88120")]
	[AsyncStateMachine(typeof(<ShowPlayerReviveNode>d__108))]
	private void ShowPlayerReviveNode(FirePlayerData playerData, int playerIndex)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x6D88204", Offset = "0x6D88204", VA = "0x6D88204")]
	[AsyncStateMachine(typeof(<HidePlayerReviveNode>d__109))]
	private void HidePlayerReviveNode(int playerIndex)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x6D84060", Offset = "0x6D84060", VA = "0x6D84060")]
	public void SetDoubleHandHaptics(float strength)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x6D882C8", Offset = "0x6D882C8", VA = "0x6D882C8")]
	private void ShowDeathPlayerTips(int playerIndex)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x6D88308", Offset = "0x6D88308", VA = "0x6D88308")]
	private void ShowRevivePlayerTips(int playerIndex)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x6D883D4", Offset = "0x6D883D4", VA = "0x6D883D4")]
	public void ShowMVPData(bool isInit, FirePlayerData mvpPlayerData)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x6D856A4", Offset = "0x6D856A4", VA = "0x6D856A4")]
	private void ResetFightingParms()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x6D88404", Offset = "0x6D88404", VA = "0x6D88404")]
	public void ShowBeHitEffect()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x6D88458", Offset = "0x6D88458", VA = "0x6D88458")]
	public FireClientManager()
	{
	}
}
[Token(Token = "0x200009C")]
public class FireEvent
{
	[Token(Token = "0x400052A")]
	public const string FireEvent_OpenHMDTips = "FireEvent_OpenHMDTips";

	[Token(Token = "0x400052B")]
	public const string FireEvent_OpenReadyToast = "FireEvent_OpenReadyToast";

	[Token(Token = "0x400052C")]
	public const string FireEvent_OpenRogueLikeWindow = "FireEvent_OpenRogueLikeWindow";

	[Token(Token = "0x400052D")]
	public const string FireEvent_CloseRogueLikeWindow = "FireEvent_CloseRogueLikeWindow";

	[Token(Token = "0x400052E")]
	public const string FireEvent_OpenUnlockSkilleWindow = "FireEvent_OpenUnlockSkilleWindow";

	[Token(Token = "0x400052F")]
	public const string FireEvent_CloseUnlockSkillWindow = "FireEvent_CloseUnlockSkillWindow";

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x6D8A860", Offset = "0x6D8A860", VA = "0x6D8A860")]
	public FireEvent()
	{
	}
}
[Token(Token = "0x200009D")]
public class FireRogueLikeEvent
{
	[Token(Token = "0x4000530")]
	public const string FireRogueLikeEvent_EnhanceTrigger = "FireRogueLikeEvent_EnhanceTrigger";

	[Token(Token = "0x4000531")]
	public const string FireRogueLikeEvent_BigShield = "FireRogueLikeEvent_BigShield";

	[Token(Token = "0x4000532")]
	public const string FireRogueLikeEvent_HardnessShield = "FireRogueLikeEvent_HardnessShield";

	[Token(Token = "0x4000533")]
	public const string FireRogueLikeEvent_ChargeShield = "FireRogueLikeEvent_ChargeShield";

	[Token(Token = "0x4000534")]
	public const string FireRogueLikeEvent_BulletSpeed = "FireRogueLikeEvent_BulletSpeed";

	[Token(Token = "0x4000535")]
	public const string FireRogueLikeEvent_Boost = "FireRogueLikeEvent_Boost";

	[Token(Token = "0x4000536")]
	public const string FireRogueLikeEvent_KeepHeat = "FireRogueLikeEvent_KeepHeat";

	[Token(Token = "0x4000537")]
	public const string FireRogueLikeEvent_IncreaseHeat = "FireRogueLikeEvent_IncreaseHeat";

	[Token(Token = "0x4000538")]
	public const string FireRogueLikeEvent_HighestHeat = "FireRogueLikeEvent_HighestHeat";

	[Token(Token = "0x4000539")]
	public const string FireRogueLikeEvent_EnergyAbsorptionStart = "FireRogueLikeEvent_EnergyAbsorptionStart";

	[Token(Token = "0x400053A")]
	public const string FireRogueLikeEvent_EnergyAbsorptionEnd = "FireRogueLikeEvent_EnergyAbsorptionEnd";

	[Token(Token = "0x400053B")]
	public const string FireRogueLikeEvent_EnergyAbsorptionStartEffect = "FireRogueLikeEvent_EnergyAbsorptionStartEffect";

	[Token(Token = "0x400053C")]
	public const string FireRogueLikeEvent_EnergyAbsorptionEndEffect = "FireRogueLikeEvent_EnergyAbsorptionEndEffect";

	[Token(Token = "0x400053D")]
	public const string FireRogueLikeEvent_ForkLaser = "FireRogueLikeEvent_ForkLaser";

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x6D8A868", Offset = "0x6D8A868", VA = "0x6D8A868")]
	public FireRogueLikeEvent()
	{
	}
}
[Token(Token = "0x200009E")]
public class FireGameGM : MonoBehaviour
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool havePressLeftPrimaryButton;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool havePressLeftSecondaryButton;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool havePressRightPrimaryButton;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	private bool havePressRightSecondaryButton;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly float totalPressTime;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentPressTime;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isPressing;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x6D8A870", Offset = "0x6D8A870", VA = "0x6D8A870")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x6D8A874", Offset = "0x6D8A874", VA = "0x6D8A874")]
	private void Update()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x6D8A8D0", Offset = "0x6D8A8D0", VA = "0x6D8A8D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x6D8A8D4", Offset = "0x6D8A8D4", VA = "0x6D8A8D4")]
	private void PressLeftPrimaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x6D8A998", Offset = "0x6D8A998", VA = "0x6D8A998")]
	private void PressRightPrimaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x6D8A9A0", Offset = "0x6D8A9A0", VA = "0x6D8A9A0")]
	private void PressLeftSecondaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x6D8A9CC", Offset = "0x6D8A9CC", VA = "0x6D8A9CC")]
	private void PressRightSecondaryButton(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x6D8A8FC", Offset = "0x6D8A8FC", VA = "0x6D8A8FC")]
	private void CheckPressOrder(PressButtonType buttonType)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x6D8A8C0", Offset = "0x6D8A8C0", VA = "0x6D8A8C0")]
	private void StopStartGame()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x6D8A9F0", Offset = "0x6D8A9F0", VA = "0x6D8A9F0")]
	private void StartGame()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x6D8AAE4", Offset = "0x6D8AAE4", VA = "0x6D8AAE4")]
	public FireGameGM()
	{
	}
}
[Token(Token = "0x200009F")]
public class FirePlatform : NetworkBehaviour
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform PlayerPoint;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Transform> WeaponPointList;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PlayerReviveNode PlayerReviveNode;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject BeHitEffect;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject InvincibleEffect;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject DeathEffect;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject WaitReviveEffect;

	[Token(Token = "0x1700006C")]
	public NetworkVariable<int> FirePlatformIndex
	{
		[Token(Token = "0x6000587")]
		[Address(RVA = "0x6D8AAF4", Offset = "0x6D8AAF4", VA = "0x6D8AAF4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000588")]
		[Address(RVA = "0x6D8AAFC", Offset = "0x6D8AAFC", VA = "0x6D8AAFC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x6D8AB04", Offset = "0x6D8AB04", VA = "0x6D8AB04", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x6D89720", Offset = "0x6D89720", VA = "0x6D89720")]
	public void ResetAllEffect()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x6D88420", Offset = "0x6D88420", VA = "0x6D88420")]
	public void ShowBeHitEffect()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x6D89F14", Offset = "0x6D89F14", VA = "0x6D89F14")]
	public void ShowInvincibleEffect()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x6D8A01C", Offset = "0x6D8A01C", VA = "0x6D8A01C")]
	public void HideInvincibleEffect()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x6D896A0", Offset = "0x6D896A0", VA = "0x6D896A0")]
	public void ShowDeathEffect()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x6D896E0", Offset = "0x6D896E0", VA = "0x6D896E0")]
	public void HideDeathEffect()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x6D896C0", Offset = "0x6D896C0", VA = "0x6D896C0")]
	public void ShowWaitReviveEffect()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x6D89700", Offset = "0x6D89700", VA = "0x6D89700")]
	public void HideWaitReviveEffect()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x6D8ACAC", Offset = "0x6D8ACAC", VA = "0x6D8ACAC")]
	public FirePlatform()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x6D8AD64", Offset = "0x6D8AD64", VA = "0x6D8AD64", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x20000A0")]
public class FirePlayerData : INetworkSerializable
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong clientID;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long userID;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TeamState team;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int killNum;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float damageNum;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string playerName;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string thumbnail;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string bust;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] rogueLikeIDList;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] hp;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int deathTime;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int seasonLevel;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool NetworkSerializeCalledOnWrite;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool NetworkSerializeCalledOnRead;

	[Token(Token = "0x6000594")]
	public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x6D8ADA4", Offset = "0x6D8ADA4", VA = "0x6D8ADA4")]
	public FirePlayerData()
	{
	}
}
[Token(Token = "0x20000A1")]
public delegate void FireReportStayRoomDelegate(LuaTable reportInfo);
[Token(Token = "0x20000A2")]
public delegate void FireReportStartGameDelegate(LuaTable reportInfo);
[Token(Token = "0x20000A3")]
public delegate void FireReportEndGameDelegate(LuaTable reportInfo);
[Token(Token = "0x20000A4")]
public delegate void FireReportStartFightingDelegate(LuaTable reportInfo);
[Token(Token = "0x20000A5")]
public delegate void FireReportEndFightingDelegate(LuaTable reportInfo);
[Token(Token = "0x20000A6")]
public delegate void FireReportWeaponSelectDelegate(LuaTable reportInfo);
[Token(Token = "0x20000A7")]
public delegate void FireReportAddFriendDelegate(JsonObject paras);
[Token(Token = "0x20000A8")]
public delegate void FireReportInvitationFriendsDelegate(JsonObject paras);
[Token(Token = "0x20000A9")]
public delegate void FireReportSkillSelectDelegate(LuaTable reportInfo);
[Token(Token = "0x20000AA")]
public class FireReportManager
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FireReportStayRoomDelegate fireReportStayRoom;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static FireReportStartGameDelegate fireReportStartGame;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static FireReportEndGameDelegate fireReportEndGame;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static FireReportStartFightingDelegate fireReportStartFighting;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static FireReportEndFightingDelegate fireReportEndFighting;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static FireReportWeaponSelectDelegate fireReportWeaponSelect;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static FireReportAddFriendDelegate fireReportAddFriend;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static FireReportInvitationFriendsDelegate fireReportInvitationFriends;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static FireReportSkillSelectDelegate fireReportSkillSelect;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x6D8BB78", Offset = "0x6D8BB78", VA = "0x6D8BB78")]
	public static void RegisterFireReport()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x6D8BE00", Offset = "0x6D8BE00", VA = "0x6D8BE00")]
	public static void RemoveRegisterFireReport()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x6D8C088", Offset = "0x6D8C088", VA = "0x6D8C088")]
	private static void EnterRoomResultReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x6D8C11C", Offset = "0x6D8C11C", VA = "0x6D8C11C")]
	private static void PreGetPointsReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x6D8C330", Offset = "0x6D8C330", VA = "0x6D8C330")]
	private static void PreAwardUseReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x6D8C3C4", Offset = "0x6D8C3C4", VA = "0x6D8C3C4")]
	public static void StayRoomReport()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x6D8CA94", Offset = "0x6D8CA94", VA = "0x6D8CA94")]
	public static void StartGameReport(int waittingTime)
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x6D8CC44", Offset = "0x6D8CC44", VA = "0x6D8CC44")]
	public static void EndGameReport(string endStatus)
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x6D8D204", Offset = "0x6D8D204", VA = "0x6D8D204")]
	private static void AddFriendReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x6D8D444", Offset = "0x6D8D444", VA = "0x6D8D444")]
	private static void InvitationFriendsReport(string eventId, JsonObject paras)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x6D856AC", Offset = "0x6D856AC", VA = "0x6D856AC")]
	public static void StartFightingReport()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x6D858C8", Offset = "0x6D858C8", VA = "0x6D858C8")]
	public static void EndFightingReport(string endStatus)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x6D8D684", Offset = "0x6D8D684", VA = "0x6D8D684")]
	public static void WeaponSelectReport()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x6D8D7CC", Offset = "0x6D8D7CC", VA = "0x6D8D7CC")]
	public static void SkillSelectReport(string skillName, string selectType)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x6D8D134", Offset = "0x6D8D134", VA = "0x6D8D134")]
	private static string GetWeaponName()
	{
		return null;
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x6D8DA48", Offset = "0x6D8DA48", VA = "0x6D8DA48")]
	public FireReportManager()
	{
	}
}
[Token(Token = "0x20000AB")]
public class FireRogueLikeManager : NetworkBehaviour
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FireRogueLikeManager Instance;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<int> HaveSelectedSkillPlayerList;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, Dictionary<int, Dictionary<int, RogueLikeSkill>>> totalRogueLikeMap;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<int, List<int>> randomPool;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Dictionary<int, RogueLikeSkill>> ownSkillDicList;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int exclusiveWeaponGroup;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Dictionary<int, List<float>>> skillCDList;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, List<float>> recoverHpSkillList;

	[Token(Token = "0x1700006D")]
	public bool HaveSelectedSkill
	{
		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x6D8DA50", Offset = "0x6D8DA50", VA = "0x6D8DA50")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x6D8DA58", Offset = "0x6D8DA58", VA = "0x6D8DA58")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public bool HaveInitRandomPool
	{
		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x6D8DA64", Offset = "0x6D8DA64", VA = "0x6D8DA64")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x6D8DA6C", Offset = "0x6D8DA6C", VA = "0x6D8DA6C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x6D8DA78", Offset = "0x6D8DA78", VA = "0x6D8DA78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x6D8DAE0", Offset = "0x6D8DAE0", VA = "0x6D8DAE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x6D8E314", Offset = "0x6D8E314", VA = "0x6D8E314", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x6D8ECA4", Offset = "0x6D8ECA4", VA = "0x6D8ECA4", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x6D8EDE4", Offset = "0x6D8EDE4", VA = "0x6D8EDE4")]
	private void OnEventFireGameStateChanged(FireGameState oldValue, FireGameState newValue)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x6D8EDF4", Offset = "0x6D8EDF4", VA = "0x6D8EDF4")]
	private void ResetAllCD()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x6D8E45C", Offset = "0x6D8E45C", VA = "0x6D8E45C")]
	private void InitRogueLike()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x6D8F068", Offset = "0x6D8F068", VA = "0x6D8F068")]
	public void InitRandomPool(WeaponType selectWeaponType)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x6D86C14", Offset = "0x6D86C14", VA = "0x6D86C14")]
	public List<RogueLikeSkill> GetCanSelectSkills()
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x6D874EC", Offset = "0x6D874EC", VA = "0x6D874EC")]
	public void SelectSkill(int skillId, int selectType)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x6D90158", Offset = "0x6D90158", VA = "0x6D90158")]
	public void DebugSelectSkill(int skillId)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x6D8F7E0", Offset = "0x6D8F7E0", VA = "0x6D8F7E0")]
	private void CheckServerChange(RogueLikeSkill selectSkill)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x6D8F37C", Offset = "0x6D8F37C", VA = "0x6D8F37C")]
	private void CheckAddCDList(RogueLikeSkill selectSkill, int playerIndex)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x6D8E0F4", Offset = "0x6D8E0F4", VA = "0x6D8E0F4")]
	private void PublishCDEndEvent(int playerIndex, int skillClass)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x6D9066C", Offset = "0x6D9066C", VA = "0x6D9066C")]
	public void OtherSelectSkill(int playerIndex, int skillId)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x6D8F310", Offset = "0x6D8F310", VA = "0x6D8F310")]
	public RogueLikeSkill GetRogueLikeSkillBySkillId(int skillId)
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x6D86000", Offset = "0x6D86000", VA = "0x6D86000")]
	public List<RogueLikeSkill> GetOwnSkillListByPlayerIndex(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x6D8FEF4", Offset = "0x6D8FEF4", VA = "0x6D8FEF4")]
	[ServerRpc(RequireOwnership = false)]
	public void InStepSelectSkillServerRpc(int playerIndex, int skillId)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x6D90164", Offset = "0x6D90164", VA = "0x6D90164")]
	[ServerRpc(RequireOwnership = false)]
	public void AddRecoverHpSkillServerRpc(int playerIndex, float extraHp, float recoverHpTime)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x6D904D8", Offset = "0x6D904D8", VA = "0x6D904D8")]
	[ServerRpc(RequireOwnership = false)]
	public void ReduceReviveTimeServerRpc(int playerIndex, float reduceRatio)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x6D90794", Offset = "0x6D90794", VA = "0x6D90794")]
	[ClientRpc]
	public void InStepSelectSkillClientRpc(int playerIndex, int skillId)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x6D8F890", Offset = "0x6D8F890", VA = "0x6D8F890")]
	private void PublishSkillChangeEvent(RogueLikeSkill selectSkill, int playerIndex)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x6D90928", Offset = "0x6D90928", VA = "0x6D90928")]
	public float GetDamageIncrease(int playerIndex, float rowDamage, float NPCHp, float NPCMaxHp, CSFMonsterType monsterType)
	{
		return default(float);
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x6D90A74", Offset = "0x6D90A74", VA = "0x6D90A74")]
	public bool CheckIfEnhanceTriggerMax(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x6D90B64", Offset = "0x6D90B64", VA = "0x6D90B64")]
	public float GetElectronicElementTime(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x6D90D48", Offset = "0x6D90D48", VA = "0x6D90D48")]
	public float GetElectronicElementDamage(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x6D90E10", Offset = "0x6D90E10", VA = "0x6D90E10")]
	public bool CanSendParclose(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x6D90FE8", Offset = "0x6D90FE8", VA = "0x6D90FE8")]
	public bool CanIgnoreAttack(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x6D910D8", Offset = "0x6D910D8", VA = "0x6D910D8")]
	public bool CanDodge(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x6D91248", Offset = "0x6D91248", VA = "0x6D91248")]
	public float GetBigBulletSkillScaleValue(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x6D9131C", Offset = "0x6D9131C", VA = "0x6D9131C")]
	public int GetShotBulletNum(int playerIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x6D9143C", Offset = "0x6D9143C", VA = "0x6D9143C")]
	public List<float> GetWeakPointDamageAndSlowDown(int playerIndex, int bulletNum)
	{
		return null;
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x6D9176C", Offset = "0x6D9176C", VA = "0x6D9176C")]
	public float GetBlackoutTimeOfBoost(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x6D91834", Offset = "0x6D91834", VA = "0x6D91834")]
	public List<float> GetAnotherBulletSpeed(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x6D91A9C", Offset = "0x6D91A9C", VA = "0x6D91A9C")]
	public float GetBomeRangeScale(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x6D91B70", Offset = "0x6D91B70", VA = "0x6D91B70")]
	public int GetSplitBombNum(int playerIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x6D91C54", Offset = "0x6D91C54", VA = "0x6D91C54")]
	public float GetSlowDownRatioOfHighestHeat(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x6D91D1C", Offset = "0x6D91D1C", VA = "0x6D91D1C")]
	public float GetKeepMaxHeatTime(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x6D91DE4", Offset = "0x6D91DE4", VA = "0x6D91DE4")]
	public List<float> GetBurnSkillPars(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x6D92314", Offset = "0x6D92314", VA = "0x6D92314")]
	public List<float> GetAsphaltSkill(int playerIndex)
	{
		return null;
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x6D926A8", Offset = "0x6D926A8", VA = "0x6D926A8")]
	public float GetRPGOuterDamageIncrease(int playerIndex, float rowDamage)
	{
		return default(float);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x6D92788", Offset = "0x6D92788", VA = "0x6D92788")]
	public float GetLarsePunishmentDamage(int playerIndex, float rowDamage, float monsterHP, CSFMonsterType monsterType)
	{
		return default(float);
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x6D9287C", Offset = "0x6D9287C", VA = "0x6D9287C")]
	public float GetLarsePunishmentSlowDown(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x6D92944", Offset = "0x6D92944", VA = "0x6D92944")]
	public bool TriggerEnergyAbsorption(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x6D92CB8", Offset = "0x6D92CB8", VA = "0x6D92CB8")]
	public float GetEnergyAbsorptionDamageRatio(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x6D92E4C", Offset = "0x6D92E4C", VA = "0x6D92E4C")]
	public float GetHighDamageOfFirstAttackSkill(int playerIndex, float rowDamage, float monsterHP, CSFMonsterType monsterType, out bool isCritical)
	{
		return default(float);
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x6D92F84", Offset = "0x6D92F84", VA = "0x6D92F84")]
	public float GetPulseLaserDamage(int playerIndex, float rowDamage, int bulletIndex, out bool isCritical)
	{
		return default(float);
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x6D93330", Offset = "0x6D93330", VA = "0x6D93330")]
	public float GetPulseLaserBlackoutTime(int playerIndex, int bulletIndex)
	{
		return default(float);
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x6D9344C", Offset = "0x6D9344C", VA = "0x6D9344C")]
	public int GetBulletJumpTime(int playerIndex, int bulletIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x6D93578", Offset = "0x6D93578", VA = "0x6D93578")]
	public float GetJumpBulletDamageDecreaseRatio(int playerIndex, int bulletIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x6D93694", Offset = "0x6D93694", VA = "0x6D93694")]
	public float GetJumpBulletBlackoutTime(int playerIndex, int bulletIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x6D937B0", Offset = "0x6D937B0", VA = "0x6D937B0")]
	public float GetTraceSkillRotateSpeed(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x6D93878", Offset = "0x6D93878", VA = "0x6D93878")]
	public List<float> GetTimeBombSkillParms(int playerIndex, int bulletIndex)
	{
		return null;
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x6D93B48", Offset = "0x6D93B48", VA = "0x6D93B48")]
	public float GetShieldReboundDamageRatio(int playerIndex)
	{
		return default(float);
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x6D93C10", Offset = "0x6D93C10", VA = "0x6D93C10")]
	public List<float> GetMagnetizationShotSkill(int playerIndex, int bulletIndex)
	{
		return null;
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x6D90A68", Offset = "0x6D90A68", VA = "0x6D90A68")]
	private bool IsEffectMonsterType(CSFMonsterType monsterType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x6D93E58", Offset = "0x6D93E58", VA = "0x6D93E58")]
	public FireRogueLikeManager()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x6D941AC", Offset = "0x6D941AC", VA = "0x6D941AC")]
	private static void __rpc_handler_204921082(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x6D942AC", Offset = "0x6D942AC", VA = "0x6D942AC")]
	private static void __rpc_handler_1157356827(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x6D943E0", Offset = "0x6D943E0", VA = "0x6D943E0")]
	private static void __rpc_handler_3891335956(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x6D944F8", Offset = "0x6D944F8", VA = "0x6D944F8")]
	private static void __rpc_handler_1385707216(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x6D945F8", Offset = "0x6D945F8", VA = "0x6D945F8", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x20000AC")]
public enum FireGameState
{
	[Token(Token = "0x400056F")]
	InWait,
	[Token(Token = "0x4000570")]
	InReady,
	[Token(Token = "0x4000571")]
	InGame,
	[Token(Token = "0x4000572")]
	InSettle,
	[Token(Token = "0x4000573")]
	InWeaponSelect,
	[Token(Token = "0x4000574")]
	InRogueLikeSelect
}
[Token(Token = "0x20000AD")]
public enum PlayerInfoChangeType
{
	[Token(Token = "0x4000576")]
	Add = 1,
	[Token(Token = "0x4000577")]
	Clear,
	[Token(Token = "0x4000578")]
	KillNumChange,
	[Token(Token = "0x4000579")]
	DamageNumChange,
	[Token(Token = "0x400057A")]
	InGameRemove,
	[Token(Token = "0x400057B")]
	Death,
	[Token(Token = "0x400057C")]
	Revive,
	[Token(Token = "0x400057D")]
	RefreshHP,
	[Token(Token = "0x400057E")]
	ExtraMaxHP,
	[Token(Token = "0x400057F")]
	RefreshPlayerNode,
	[Token(Token = "0x4000580")]
	ShowLastPlayer,
	[Token(Token = "0x4000581")]
	ReviveInStage,
	[Token(Token = "0x4000582")]
	OutRoom
}
[Token(Token = "0x20000AE")]
public class FireServerManager : NetworkBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000B0")]
	[CompilerGenerated]
	private struct <ReloadGameConfig>d__156 : IAsyncStateMachine
	{
		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<bool>.Awaiter <>u__1;

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x6F0C748", Offset = "0x6F0C748", VA = "0x6F0C748", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x6F0CBC0", Offset = "0x6F0CBC0", VA = "0x6F0CBC0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000B1")]
	[CompilerGenerated]
	private struct <LoadGameConfig>d__157 : IAsyncStateMachine
	{
		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FireServerManager <>4__this;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x6F0CBCC", Offset = "0x6F0CBCC", VA = "0x6F0CBCC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x6F0D694", Offset = "0x6F0D694", VA = "0x6F0D694", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FireServerManager Instance;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject FireClientManagerPrefab;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public NetworkObject FirePlatformPrefab;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public NetworkObject SubmachineGunPrefab;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NetworkObject LaserGunGunPrefab;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public NetworkObject RPGPrefab;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public NetworkObject ShieldPrefab;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public NetworkObject FireRogueLikePrefab;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float TotalGameTime;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float TotalSettleTime;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float TotalWeaponSelectTime;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float TotalRogueLikeSelectTime;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public NetworkObject WaitSubmachineGunPrefab;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public NetworkObject WaitLaserGunGunPrefab;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public NetworkObject WaitRPGPrefab;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public NetworkObject WaitShieldPrefab;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public NetworkObject WaitWeaponShowPlatformPrefab;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool haveNetWorkSpawn;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Dictionary<int, FirePlatform> firePlatformDics;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Dictionary<int, List<WeaponManager>> weaponDics;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int maxPlayerNum;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float distanceX;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float distanceY;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<FirePlayerData> playerDataList;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int playerMaxHp;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool isToWait;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 needToSetPos;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private FirePlayerData mvpPlayerData;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<WaitWeaponManager> waitWeaponManagerList;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<float> currentResetWaitWeaponTimeList;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3[] waitWeaponPosition;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Vector3[] waitWeaponRotation;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float totalResetWaitWeaponTime;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private RoomManager roomManager;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float reportWaitTime;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private bool needCountReportWaitTime;

	[Token(Token = "0x1700006F")]
	public Dictionary<string, Const> FireGameConst
	{
		[Token(Token = "0x600060D")]
		[Address(RVA = "0x6F0261C", Offset = "0x6F0261C", VA = "0x6F0261C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600060E")]
		[Address(RVA = "0x6F02624", Offset = "0x6F02624", VA = "0x6F02624")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public NetworkVariable<FireGameState> CurrentFireGameState
	{
		[Token(Token = "0x600060F")]
		[Address(RVA = "0x6F0262C", Offset = "0x6F0262C", VA = "0x6F0262C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000610")]
		[Address(RVA = "0x6F02634", Offset = "0x6F02634", VA = "0x6F02634")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000071")]
	public NetworkVariable<float> CurrentCountDownTime
	{
		[Token(Token = "0x6000611")]
		[Address(RVA = "0x6F0263C", Offset = "0x6F0263C", VA = "0x6F0263C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000612")]
		[Address(RVA = "0x6F02644", Offset = "0x6F02644", VA = "0x6F02644")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public List<FirePlayerData> PlayerDataList
	{
		[Token(Token = "0x6000613")]
		[Address(RVA = "0x6F0264C", Offset = "0x6F0264C", VA = "0x6F0264C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public NetworkVariable<int> CurrentRound
	{
		[Token(Token = "0x6000614")]
		[Address(RVA = "0x6F02654", Offset = "0x6F02654", VA = "0x6F02654")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000615")]
		[Address(RVA = "0x6F0265C", Offset = "0x6F0265C", VA = "0x6F0265C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool HaveWeaponBeingGrab
	{
		[Token(Token = "0x6000616")]
		[Address(RVA = "0x6F0266C", Offset = "0x6F0266C", VA = "0x6F0266C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x6F02674", Offset = "0x6F02674", VA = "0x6F02674")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public NetworkVariable<long> RoomID
	{
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x6F02680", Offset = "0x6F02680", VA = "0x6F02680")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x6F02688", Offset = "0x6F02688", VA = "0x6F02688")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000076")]
	public NetworkVariable<long> RoomCreatTimesTamp
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x6F02698", Offset = "0x6F02698", VA = "0x6F02698")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x6F026A0", Offset = "0x6F026A0", VA = "0x6F026A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public NetworkVariable<int> RoomBattleIndex
	{
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x6F026B0", Offset = "0x6F026B0", VA = "0x6F026B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600061D")]
		[Address(RVA = "0x6F026B8", Offset = "0x6F026B8", VA = "0x6F026B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public NetworkVariable<float> TotalPlayerScore
	{
		[Token(Token = "0x600061E")]
		[Address(RVA = "0x6F026C8", Offset = "0x6F026C8", VA = "0x6F026C8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600061F")]
		[Address(RVA = "0x6F026D0", Offset = "0x6F026D0", VA = "0x6F026D0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public NetworkVariable<int> HaveGameTime
	{
		[Token(Token = "0x6000620")]
		[Address(RVA = "0x6F026E0", Offset = "0x6F026E0", VA = "0x6F026E0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000621")]
		[Address(RVA = "0x6F026E8", Offset = "0x6F026E8", VA = "0x6F026E8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public NetworkVariable<int> HaveFightingTime
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x6F026F8", Offset = "0x6F026F8", VA = "0x6F026F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000623")]
		[Address(RVA = "0x6F02700", Offset = "0x6F02700", VA = "0x6F02700")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public int CurrentPlayerNum
	{
		[Token(Token = "0x6000624")]
		[Address(RVA = "0x6F02710", Offset = "0x6F02710", VA = "0x6F02710")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000625")]
		[Address(RVA = "0x6F02718", Offset = "0x6F02718", VA = "0x6F02718")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public FirePlayerData MvpPlayerData
	{
		[Token(Token = "0x6000626")]
		[Address(RVA = "0x6F02720", Offset = "0x6F02720", VA = "0x6F02720")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x6F02728", Offset = "0x6F02728", VA = "0x6F02728")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x6F02790", Offset = "0x6F02790", VA = "0x6F02790", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x6F03548", Offset = "0x6F03548", VA = "0x6F03548", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x6F03C70", Offset = "0x6F03C70", VA = "0x6F03C70")]
	private void Update()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x6F03178", Offset = "0x6F03178", VA = "0x6F03178")]
	private void ChangeGameState(FireGameState newGameState)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x6F067CC", Offset = "0x6F067CC", VA = "0x6F067CC")]
	private void OnSetGameFileConfiguration(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x6F067D0", Offset = "0x6F067D0", VA = "0x6F067D0")]
	private void OnEventStartGame([Optional] string eventId, [Optional] object sender, [Optional] IArgs args)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x6F06EAC", Offset = "0x6F06EAC", VA = "0x6F06EAC")]
	private void OnStartReady(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x6F06AE4", Offset = "0x6F06AE4", VA = "0x6F06AE4")]
	private void RefreshPlayerDataList()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x6F06EB4", Offset = "0x6F06EB4", VA = "0x6F06EB4")]
	private int GetPlayerSeasonLevelByUserId(long userId)
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x6F02E64", Offset = "0x6F02E64", VA = "0x6F02E64")]
	private void CreatAllPlatform()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x6F056A8", Offset = "0x6F056A8", VA = "0x6F056A8")]
	private void CreatRogueLikeManager()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x6F04F24", Offset = "0x6F04F24", VA = "0x6F04F24")]
	private void DestroyRogueLikeManager()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x6F05764", Offset = "0x6F05764", VA = "0x6F05764")]
	private void CreatAllGameWeapon()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x6F06F3C", Offset = "0x6F06F3C", VA = "0x6F06F3C")]
	public void SelectWeapon(int playerIndex, WeaponType selectWeaponType, bool isAutoSelect = true, bool isRightHandGrab = true)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x6F044A8", Offset = "0x6F044A8", VA = "0x6F044A8")]
	private void CheckSelectWeapon()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x6F073F8", Offset = "0x6F073F8", VA = "0x6F073F8")]
	public bool HaveSelectWeaponByPlayerIndex(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x6F03B14", Offset = "0x6F03B14", VA = "0x6F03B14")]
	private void DestroyAllPlatform()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x6F07470", Offset = "0x6F07470", VA = "0x6F07470")]
	public FirePlatform TryGetPlayerFirePlatformByIndex(int index)
	{
		return null;
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x6F04C2C", Offset = "0x6F04C2C", VA = "0x6F04C2C")]
	private void DestroyAllWeapon()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x6F074E8", Offset = "0x6F074E8", VA = "0x6F074E8")]
	public void DamagePlayer(long userID, float damageNum)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x6F07904", Offset = "0x6F07904", VA = "0x6F07904")]
	private void CheckGameOver()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x6F07A88", Offset = "0x6F07A88", VA = "0x6F07A88")]
	private void RemovePlayer(ulong clientID)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x6F07C60", Offset = "0x6F07C60", VA = "0x6F07C60")]
	private void CheakOwnerWeaponDestroy(int playerIndex)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x6F07FEC", Offset = "0x6F07FEC", VA = "0x6F07FEC")]
	private void AddPlayerServer(ulong clientId)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x6F04A5C", Offset = "0x6F04A5C", VA = "0x6F04A5C")]
	private void SetAllPlayerToPosition(bool toGame)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x6F07FF0", Offset = "0x6F07FF0", VA = "0x6F07FF0")]
	private void SetPlayerBornPos(ulong clientId)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x6F08394", Offset = "0x6F08394", VA = "0x6F08394")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x6F03BD4", Offset = "0x6F03BD4", VA = "0x6F03BD4")]
	public bool IsInGame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x6F087D0", Offset = "0x6F087D0", VA = "0x6F087D0")]
	public void AddMonsterRound()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x6F04FAC", Offset = "0x6F04FAC", VA = "0x6F04FAC")]
	private void RevivePlayerByIndex(int playerIndex, PlayerInfoChangeType changeType)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x6F04808", Offset = "0x6F04808", VA = "0x6F04808")]
	private void ReviveAllDeathPlayer()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x6F088E8", Offset = "0x6F088E8", VA = "0x6F088E8")]
	public void AddPlayerKillNumByClientID(ulong clientId)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x6F089AC", Offset = "0x6F089AC", VA = "0x6F089AC")]
	public void AddPlayerDamageNumByClientID(ulong clientId, float damageNum)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x6F05AE4", Offset = "0x6F05AE4", VA = "0x6F05AE4")]
	public void RefreshAllPlayerNode()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x6F08AB0", Offset = "0x6F08AB0", VA = "0x6F08AB0")]
	public void RefreshCurrentCountDown(float newCountDown, FireGameState changeGameState)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x6F08B44", Offset = "0x6F08B44", VA = "0x6F08B44")]
	public void AddExtraHpByPlayerIndex(int playerIndex, float extraHp)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x6F08E50", Offset = "0x6F08E50", VA = "0x6F08E50")]
	public void RecoverHpByPlayerIndex(int playerIndex)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x6F08EF8", Offset = "0x6F08EF8", VA = "0x6F08EF8")]
	public bool IsPlayerLivingByPlayerIndex(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x6F08F78", Offset = "0x6F08F78", VA = "0x6F08F78")]
	public bool IsLessMaxHPByPlayerIndex(int playerIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x6F09030", Offset = "0x6F09030", VA = "0x6F09030")]
	public void ReduceReviveTimeByPlayerIndex(int playerIndex, float reduceRatio)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x6F05C14", Offset = "0x6F05C14", VA = "0x6F05C14")]
	private void RefreshMVPPlayerData()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x6F05F8C", Offset = "0x6F05F8C", VA = "0x6F05F8C")]
	private void ReportRankInfoList()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x6F051D0", Offset = "0x6F051D0", VA = "0x6F051D0")]
	private void ChangeRoomStatus(RoomStatus roomStatus)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x6F052B0", Offset = "0x6F052B0", VA = "0x6F052B0")]
	private void CreatAllWaitWeapon()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x6F05088", Offset = "0x6F05088", VA = "0x6F05088")]
	private void ResetWaitWeaponByIndex(int index)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x6F055C8", Offset = "0x6F055C8", VA = "0x6F055C8")]
	private void DestroyAllWaitWeapon()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x6F090C8", Offset = "0x6F090C8", VA = "0x6F090C8")]
	public void StartResetWaitWeapon(int index)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x6F09124", Offset = "0x6F09124", VA = "0x6F09124")]
	public void StopResetWaitWeapon(int index)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x6F07DAC", Offset = "0x6F07DAC", VA = "0x6F07DAC")]
	private void CheckResetWaitGun(ulong clientId)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x6F063C4", Offset = "0x6F063C4", VA = "0x6F063C4")]
	private void ReportAllPlayerScore()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x6F09188", Offset = "0x6F09188", VA = "0x6F09188")]
	[ServerRpc(RequireOwnership = false)]
	public void GMStartGameServerRpc()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x6F09254", Offset = "0x6F09254", VA = "0x6F09254")]
	[ServerRpc(RequireOwnership = false)]
	public void DamagePlayerServerRpc(long userID, int damageNum)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x6F0849C", Offset = "0x6F0849C", VA = "0x6F0849C")]
	[ServerRpc(RequireOwnership = false)]
	public void RequireResetPositionServerRpc(ulong clientId)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x6F093B0", Offset = "0x6F093B0", VA = "0x6F093B0")]
	[ServerRpc(RequireOwnership = false)]
	public void RequirePlayerDataListServerRpc(ulong clientId)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x6F097E8", Offset = "0x6F097E8", VA = "0x6F097E8")]
	[ServerRpc(RequireOwnership = false)]
	public void RemoveInvincibleEffectServerRpc(int playerIndex)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x6F09A80", Offset = "0x6F09A80", VA = "0x6F09A80")]
	[ServerRpc(RequireOwnership = false)]
	public void GMGameOverServerRpc()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x6F09B74", Offset = "0x6F09B74", VA = "0x6F09B74")]
	[ServerRpc(RequireOwnership = false)]
	public void GMReviveSelfServerRpc(int playerIndex)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x6F080BC", Offset = "0x6F080BC", VA = "0x6F080BC")]
	[ClientRpc]
	public void SetPlayerToPlatformPosClientRpc(bool isInit, Vector3 playerPosition, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x6F0824C", Offset = "0x6F0824C", VA = "0x6F0824C")]
	[ClientRpc]
	public void SetPlayerToWaitPosClientRpc(bool isInit, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x6F06864", Offset = "0x6F06864", VA = "0x6F06864")]
	[ClientRpc]
	public void ChangePlayerDataListClientRpc(PlayerInfoChangeType changeType, FirePlayerData playerData, int index)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x6F0A2AC", Offset = "0x6F0A2AC", VA = "0x6F0A2AC")]
	public void CanSetPosition(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x6F09E58", Offset = "0x6F09E58", VA = "0x6F09E58")]
	public void SetPlayerToPlatformPosClient(bool isInit, Vector3 playerPosition)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x6F09FE0", Offset = "0x6F09FE0", VA = "0x6F09FE0")]
	public void SetPlayerToWaitPosClient(bool isInit)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x6F095F8", Offset = "0x6F095F8", VA = "0x6F095F8")]
	[ClientRpc]
	public void ReceiveLastPlayerDataClientRpc(FirePlayerData playerData, int index, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x6F0A628", Offset = "0x6F0A628", VA = "0x6F0A628")]
	private void CreatFireClientManager(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x6F09908", Offset = "0x6F09908", VA = "0x6F09908")]
	[ClientRpc]
	public void RemoveInvincibleEffectClientRpc(int playerIndex)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x6F05DA0", Offset = "0x6F05DA0", VA = "0x6F05DA0")]
	[ClientRpc]
	public void ReceiveMVPDataClientRpc(bool isInit, FirePlayerData playerData, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x6F05B78", Offset = "0x6F05B78", VA = "0x6F05B78")]
	[AsyncStateMachine(typeof(<ReloadGameConfig>d__156))]
	public void ReloadGameConfig()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x6F030C4", Offset = "0x6F030C4", VA = "0x6F030C4")]
	[AsyncStateMachine(typeof(<LoadGameConfig>d__157))]
	public void LoadGameConfig([Optional] string key, [Optional] object sender, [Optional] IArgs args)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x6F0A72C", Offset = "0x6F0A72C", VA = "0x6F0A72C")]
	public string GetBattleID()
	{
		return null;
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x6F0A884", Offset = "0x6F0A884", VA = "0x6F0A884")]
	public string GetPreBattleID()
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x6F0A9B4", Offset = "0x6F0A9B4", VA = "0x6F0A9B4")]
	public string GetMatchID()
	{
		return null;
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x6F0AA7C", Offset = "0x6F0AA7C", VA = "0x6F0AA7C")]
	public int GetMatchOrder()
	{
		return default(int);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x6F0AAB8", Offset = "0x6F0AAB8", VA = "0x6F0AAB8")]
	public string GetRoomStatus()
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x6F0A5DC", Offset = "0x6F0A5DC", VA = "0x6F0A5DC")]
	private void StartCountReportWaitTime(bool isStart)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x6F0AB68", Offset = "0x6F0AB68", VA = "0x6F0AB68")]
	public bool IsFighting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x6F0AB98", Offset = "0x6F0AB98", VA = "0x6F0AB98")]
	public FireServerManager()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x6F0B704", Offset = "0x6F0B704", VA = "0x6F0B704")]
	private static void __rpc_handler_2039752297(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x6F0B7AC", Offset = "0x6F0B7AC", VA = "0x6F0B7AC")]
	private static void __rpc_handler_3297110418(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x6F0B8C8", Offset = "0x6F0B8C8", VA = "0x6F0B8C8")]
	private static void __rpc_handler_2313580559(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x6F0B9AC", Offset = "0x6F0B9AC", VA = "0x6F0B9AC")]
	private static void __rpc_handler_1660953538(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x6F0BA90", Offset = "0x6F0BA90", VA = "0x6F0BA90")]
	private static void __rpc_handler_4111730405(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x6F0BB74", Offset = "0x6F0BB74", VA = "0x6F0BB74")]
	private static void __rpc_handler_3011218716(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x6F0BC1C", Offset = "0x6F0BC1C", VA = "0x6F0BC1C")]
	private static void __rpc_handler_2695475034(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x6F0BD00", Offset = "0x6F0BD00", VA = "0x6F0BD00")]
	private static void __rpc_handler_3767298191(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x6F0BE78", Offset = "0x6F0BE78", VA = "0x6F0BE78")]
	private static void __rpc_handler_4152786260(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x6F0BFA4", Offset = "0x6F0BFA4", VA = "0x6F0BFA4")]
	private static void __rpc_handler_2455012093(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x6F0C134", Offset = "0x6F0C134", VA = "0x6F0C134")]
	private static void __rpc_handler_2314116786(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x6F0C2D0", Offset = "0x6F0C2D0", VA = "0x6F0C2D0")]
	private static void __rpc_handler_2597071102(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x6F0C3B4", Offset = "0x6F0C3B4", VA = "0x6F0C3B4")]
	private static void __rpc_handler_2843273102(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x6F0C548", Offset = "0x6F0C548", VA = "0x6F0C548", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x20000B2")]
public enum AttackedEffectType
{
	[Token(Token = "0x40005BE")]
	None,
	[Token(Token = "0x40005BF")]
	SubmachineBulletAttacked,
	[Token(Token = "0x40005C0")]
	RPGBulletAttacked,
	[Token(Token = "0x40005C1")]
	TimeBombAttacked
}
[Token(Token = "0x20000B3")]
public class Gun : MonoBehaviour
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponType MyWeaponType;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TriggerResetAngle;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TriggerShootAngle;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform TriggerTransform;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RPGBomeRangePrefab;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject TimeBombPrefab;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform FiringPinTransform;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftFiringTransform;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightFiringTransform;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject FireFX;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WeaponManager OwnerWeaponManager;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float HapticsStrength;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float FireFXShowTime;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject AbsorptionEffect;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("是否为单发模式")]
	public bool IsSingleFire;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("霰弹枪参数")]
	public Transform ShotGunFirePoint;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int ShotGunBulletNum;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float ShotGunCalibre;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("激光参数")]
	public float MaxRange;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public LayerMask ValidLayers;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LaserPointer MyLaserPointer;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<LaserPointer> ForkLaserPointerList;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float initForceAmount;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float initLaserGunDamage;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float initLaserDamageGrowthSpeed;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float initLaserMaxDamage;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float initLaserMaxAutoAttackRange;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float initLaserSameChangeResetHightDamageTime;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float initLaserKeepHeatRatio;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float initLaserOtherChangeResetHightDamageTime;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float currentfireFXShowTime;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObjectPool bulletObjectPool;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObjectPool bombRangeObjectPool;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObjectPool timeBombObjectPool;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float currentContinuousTime;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float currentResetHightDamageTime;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool isResetHightDamage;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int totalShotBulletNum;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<string> attackedMonsterIDList;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float> forkLaserDamageList;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<CSFMonster> forkAttackList;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private SeasonSystemPropBase myPropBase;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int currentSkinIndex;

	[Token(Token = "0x1700007D")]
	public float CurrentInterval
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x6F0D6A0", Offset = "0x6F0D6A0", VA = "0x6F0D6A0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x6F0D6A8", Offset = "0x6F0D6A8", VA = "0x6F0D6A8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public CSFMonster CurrentAttack
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x6F0D6B0", Offset = "0x6F0D6B0", VA = "0x6F0D6B0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x6F0D6B8", Offset = "0x6F0D6B8", VA = "0x6F0D6B8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public Vector3 ForkPoint
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x6F0D6C0", Offset = "0x6F0D6C0", VA = "0x6F0D6C0")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x6F0D6CC", Offset = "0x6F0D6CC", VA = "0x6F0D6CC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public int LastAttackID
	{
		[Token(Token = "0x6000692")]
		[Address(RVA = "0x6F0D6D8", Offset = "0x6F0D6D8", VA = "0x6F0D6D8")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000693")]
		[Address(RVA = "0x6F0D6E0", Offset = "0x6F0D6E0", VA = "0x6F0D6E0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float CurrentMinInterval
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0x6F0D6E8", Offset = "0x6F0D6E8", VA = "0x6F0D6E8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000695")]
		[Address(RVA = "0x6F0D6F0", Offset = "0x6F0D6F0", VA = "0x6F0D6F0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public float CurrentReadyInterval
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x6F0D6F8", Offset = "0x6F0D6F8", VA = "0x6F0D6F8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x6F0D700", Offset = "0x6F0D700", VA = "0x6F0D700")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public float CurrentForceAmount
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0x6F0D708", Offset = "0x6F0D708", VA = "0x6F0D708")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000699")]
		[Address(RVA = "0x6F0D710", Offset = "0x6F0D710", VA = "0x6F0D710")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public float CurrentLaserDamageGrowthSpeed
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0x6F0D718", Offset = "0x6F0D718", VA = "0x6F0D718")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600069B")]
		[Address(RVA = "0x6F0D720", Offset = "0x6F0D720", VA = "0x6F0D720")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public float CurrentLaserMaxDamage
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x6F0D728", Offset = "0x6F0D728", VA = "0x6F0D728")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x6F0D730", Offset = "0x6F0D730", VA = "0x6F0D730")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public float CurrentLaserKeepHeatRatio
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0x6F0D738", Offset = "0x6F0D738", VA = "0x6F0D738")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600069F")]
		[Address(RVA = "0x6F0D740", Offset = "0x6F0D740", VA = "0x6F0D740")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public float CurrentLaserSameChangeResetHightDamageTime
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x6F0D748", Offset = "0x6F0D748", VA = "0x6F0D748")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x6F0D750", Offset = "0x6F0D750", VA = "0x6F0D750")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000088")]
	public float CurrentLaserOtherChangeResetHightDamageTime
	{
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x6F0D758", Offset = "0x6F0D758", VA = "0x6F0D758")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x6F0D760", Offset = "0x6F0D760", VA = "0x6F0D760")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public float initMinInterval
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x6F0D768", Offset = "0x6F0D768", VA = "0x6F0D768")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x6F0D770", Offset = "0x6F0D770", VA = "0x6F0D770")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public float initReadyInterval
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x6F0D778", Offset = "0x6F0D778", VA = "0x6F0D778")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x6F0D780", Offset = "0x6F0D780", VA = "0x6F0D780")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x6F0D788", Offset = "0x6F0D788", VA = "0x6F0D788")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x6F0E020", Offset = "0x6F0E020", VA = "0x6F0E020")]
	private void InitWeaponConfig([Optional] string eventId, [Optional] object sender, [Optional] IArgs args)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x6F0E4E0", Offset = "0x6F0E4E0", VA = "0x6F0E4E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x6F0E8EC", Offset = "0x6F0E8EC", VA = "0x6F0E8EC")]
	public void StartShootBullet(bool needInstep = true)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x6F0E9FC", Offset = "0x6F0E9FC", VA = "0x6F0E9FC")]
	public void ShootBullet(bool needInstep = true)
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x6F10B78", Offset = "0x6F10B78", VA = "0x6F10B78")]
	private void PlayFireSound()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x6F10B10", Offset = "0x6F10B10", VA = "0x6F10B10")]
	private float GetTotalDamageByContinuousTime(float continuousTime)
	{
		return default(float);
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x6F0E5B4", Offset = "0x6F0E5B4", VA = "0x6F0E5B4")]
	private void CheckAttackMonster()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x6F109D8", Offset = "0x6F109D8", VA = "0x6F109D8")]
	private void CheckKeepHeatRatio()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x6F10DE8", Offset = "0x6F10DE8", VA = "0x6F10DE8")]
	private void GetNearestMonster()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x6F11DD8", Offset = "0x6F11DD8", VA = "0x6F11DD8")]
	private bool NeedRefreshForkAttack()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x6F12114", Offset = "0x6F12114", VA = "0x6F12114")]
	private void RefreshNearestForkAttacks()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x6F12A54", Offset = "0x6F12A54", VA = "0x6F12A54")]
	private CSFMonster GetNearestForkAttack()
	{
		return null;
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x6F10C04", Offset = "0x6F10C04", VA = "0x6F10C04")]
	private bool CheckIfOutRange()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x6F0E8B8", Offset = "0x6F0E8B8", VA = "0x6F0E8B8")]
	private void ResetLaserGunHitState()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x6F12E00", Offset = "0x6F12E00", VA = "0x6F12E00")]
	public void CancelShootBullet(bool needInstep = true)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x6F0E868", Offset = "0x6F0E868", VA = "0x6F0E868")]
	private void SetFireFXState(bool isShow)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x6F12F1C", Offset = "0x6F12F1C", VA = "0x6F12F1C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x6F13514", Offset = "0x6F13514", VA = "0x6F13514")]
	private void RefreshMinInterval(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x6F135D8", Offset = "0x6F135D8", VA = "0x6F135D8")]
	private void ReduceMinInterval(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x6F1369C", Offset = "0x6F1369C", VA = "0x6F1369C")]
	private void IncreaseMinInterval(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x6F1375C", Offset = "0x6F1375C", VA = "0x6F1375C")]
	private void ShowAbsorptionEffect(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x6F13814", Offset = "0x6F13814", VA = "0x6F13814")]
	private void HideAbsorptionEffect(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x6F138CC", Offset = "0x6F138CC", VA = "0x6F138CC")]
	private void RefreshForceAmount(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x6F1398C", Offset = "0x6F1398C", VA = "0x6F1398C")]
	private void RefreshKeepHeat(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x6F13A68", Offset = "0x6F13A68", VA = "0x6F13A68")]
	private void RefreshIncreaseHeat(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x6F13B28", Offset = "0x6F13B28", VA = "0x6F13B28")]
	private void RefreshHighestHeat(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x6F13BE8", Offset = "0x6F13BE8", VA = "0x6F13BE8")]
	public void AddAttackedMonsterID(string monsterID)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x6F13CD0", Offset = "0x6F13CD0", VA = "0x6F13CD0")]
	public bool HaveAttackedMonster(string monsterID)
	{
		return default(bool);
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x6F13D28", Offset = "0x6F13D28", VA = "0x6F13D28")]
	private void RefreshForkDamageList(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x6F13DEC", Offset = "0x6F13DEC", VA = "0x6F13DEC")]
	public void InStepAttackedEffect(AttackedEffectType effectType, Vector3 position, float initScale = 1f, float delayTime = 0f)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x6F0E974", Offset = "0x6F0E974", VA = "0x6F0E974")]
	private int GetCurrentSelectSkinIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x6F13FCC", Offset = "0x6F13FCC", VA = "0x6F13FCC")]
	public Gun()
	{
	}
}
[Token(Token = "0x20000B4")]
public class HPBox : MonoBehaviour
{
	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HPNode;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x6F14148", Offset = "0x6F14148", VA = "0x6F14148")]
	public void InitHPBox()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x6F14168", Offset = "0x6F14168", VA = "0x6F14168")]
	public void AddHP()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x6F14188", Offset = "0x6F14188", VA = "0x6F14188")]
	public void ReduceHP()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x6F141A8", Offset = "0x6F141A8", VA = "0x6F141A8")]
	public HPBox()
	{
	}
}
[Token(Token = "0x20000B5")]
public interface ICSFDamageable
{
	[Token(Token = "0x1700008B")]
	float HP
	{
		[Token(Token = "0x60006CD")]
		get;
		[Token(Token = "0x60006CE")]
		set;
	}

	[Token(Token = "0x60006CF")]
	void DealDamage(CSFMonsterDamageInfo info, DamageType damageType);
}
[Token(Token = "0x20000B6")]
public class LaserPointer : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Gun MyOwnerGun;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LaserEnd;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Active;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer line;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int VertexCount;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float StraightLineRatio;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x6F141B0", Offset = "0x6F141B0", VA = "0x6F141B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x6F141CC", Offset = "0x6F141CC", VA = "0x6F141CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x6F1139C", Offset = "0x6F1139C", VA = "0x6F1139C")]
	public void RefreshAutoTrackLaser()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x6F10B2C", Offset = "0x6F10B2C", VA = "0x6F10B2C")]
	public void RefreshLaserWidth(float widthRatio)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x6F112C8", Offset = "0x6F112C8", VA = "0x6F112C8")]
	public void RefreshLaserAlpha(float alpha)
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x6F12328", Offset = "0x6F12328", VA = "0x6F12328")]
	public void RefreshForkAutoTrackLaser(CSFMonster forkAttack)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x6F14464", Offset = "0x6F14464", VA = "0x6F14464")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000B7")]
public enum MonsterWeaponType
{
	[Token(Token = "0x4000604")]
	SingleSubmachine,
	[Token(Token = "0x4000605")]
	MultiSubmachine,
	[Token(Token = "0x4000606")]
	CollimatorGun,
	[Token(Token = "0x4000607")]
	BossHandGun,
	[Token(Token = "0x4000608")]
	BossHeadGun
}
[Token(Token = "0x20000B8")]
public abstract class MonsterWeapon
{
	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CSFMonster Owner;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsClient;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnFireEndEvent;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x6F14484", Offset = "0x6F14484", VA = "0x6F14484")]
	public MonsterWeapon(CSFMonster monster, bool isClient)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x6F144C0", Offset = "0x6F144C0", VA = "0x6F144C0", Slot = "4")]
	public virtual void ClientPreFire()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x6F144C4", Offset = "0x6F144C4", VA = "0x6F144C4", Slot = "5")]
	public virtual void ServerPreFire()
	{
	}

	[Token(Token = "0x60006DA")]
	public abstract void ServerFire();

	[Token(Token = "0x60006DB")]
	public abstract void ClientFire(int count);

	[Token(Token = "0x60006DC")]
	public abstract void Update();

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x6F144C8", Offset = "0x6F144C8", VA = "0x6F144C8", Slot = "9")]
	public virtual void ServerStopFire()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x6F144CC", Offset = "0x6F144CC", VA = "0x6F144CC", Slot = "10")]
	public virtual void ClientStopFire()
	{
	}

	[Token(Token = "0x60006DF")]
	public abstract void Destroy();
}
[Token(Token = "0x20000B9")]
public class SingleSubmachineGun : MonsterWeapon
{
	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _curFireWaitTime;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _curBulletCount;

	[Token(Token = "0x1700008C")]
	private float BulletInterval
	{
		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x6F144D0", Offset = "0x6F144D0", VA = "0x6F144D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008D")]
	private int BulletCount
	{
		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x6F144F4", Offset = "0x6F144F4", VA = "0x6F144F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x6F14518", Offset = "0x6F14518", VA = "0x6F14518")]
	public SingleSubmachineGun(CSFMonster monster, bool isClient)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x6F14554", Offset = "0x6F14554", VA = "0x6F14554", Slot = "7")]
	public override void ClientFire(int count)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x6F1455C", Offset = "0x6F1455C", VA = "0x6F1455C", Slot = "6")]
	public override void ServerFire()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x6F1464C", Offset = "0x6F1464C", VA = "0x6F1464C", Slot = "10")]
	public override void ClientStopFire()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x6F14654", Offset = "0x6F14654", VA = "0x6F14654", Slot = "9")]
	public override void ServerStopFire()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x6F14678", Offset = "0x6F14678", VA = "0x6F14678", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x6F148BC", Offset = "0x6F148BC", VA = "0x6F148BC", Slot = "11")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x6F14714", Offset = "0x6F14714", VA = "0x6F14714")]
	private void FireSingleBullet()
	{
	}
}
[Token(Token = "0x20000BA")]
public class CollimatorGun : SingleSubmachineGun
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _collimatorPartName;

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x6A748DC", Offset = "0x6A748DC", VA = "0x6A748DC")]
	public CollimatorGun(CSFMonster monster, bool isClient)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x6A7494C", Offset = "0x6A7494C", VA = "0x6A7494C", Slot = "4")]
	public override void ClientPreFire()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x6A74B48", Offset = "0x6A74B48", VA = "0x6A74B48", Slot = "7")]
	public override void ClientFire(int count)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x6A74C78", Offset = "0x6A74C78", VA = "0x6A74C78", Slot = "10")]
	public override void ClientStopFire()
	{
	}
}
[Token(Token = "0x20000BB")]
public class MultiSubmachineGun : MonsterWeapon
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _curFireWaitTime;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _curBulletCount;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] BulletDirs;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine _fireCo;

	[Token(Token = "0x1700008E")]
	private float BulletInterval
	{
		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x6A74D04", Offset = "0x6A74D04", VA = "0x6A74D04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008F")]
	private int BulletCount
	{
		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x6A74D28", Offset = "0x6A74D28", VA = "0x6A74D28")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x6A74D4C", Offset = "0x6A74D4C", VA = "0x6A74D4C")]
	public MultiSubmachineGun(CSFMonster monster, bool isClient)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x6A74DF4", Offset = "0x6A74DF4", VA = "0x6A74DF4", Slot = "7")]
	public override void ClientFire(int count)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x6A74DFC", Offset = "0x6A74DFC", VA = "0x6A74DFC", Slot = "6")]
	public override void ServerFire()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x6A74E28", Offset = "0x6A74E28", VA = "0x6A74E28", Slot = "10")]
	public override void ClientStopFire()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x6A74E30", Offset = "0x6A74E30", VA = "0x6A74E30", Slot = "9")]
	public override void ServerStopFire()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x6A74E54", Offset = "0x6A74E54", VA = "0x6A74E54", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x6A74EF0", Offset = "0x6A74EF0", VA = "0x6A74EF0", Slot = "11")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x6A74EE8", Offset = "0x6A74EE8", VA = "0x6A74EE8")]
	private void FireLineBullets()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x6A74EF4", Offset = "0x6A74EF4", VA = "0x6A74EF4")]
	private void fireLineBullet(int curBulletCount)
	{
	}
}
[Token(Token = "0x20000BC")]
public class BossHandGun : MonsterWeapon
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLeftGun;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _curFireWaitTime;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _curBulletCount;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float dis;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _firePoints;

	[Token(Token = "0x17000090")]
	private float BulletInterval
	{
		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x6A752E0", Offset = "0x6A752E0", VA = "0x6A752E0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x6A75304", Offset = "0x6A75304", VA = "0x6A75304")]
	public BossHandGun(CSFMonster monster, bool isClient)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x6A7531C", Offset = "0x6A7531C", VA = "0x6A7531C", Slot = "11")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x6A75320", Offset = "0x6A75320", VA = "0x6A75320", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x6A7566C", Offset = "0x6A7566C", VA = "0x6A7566C", Slot = "6")]
	public override void ServerFire()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x6A756F8", Offset = "0x6A756F8", VA = "0x6A756F8", Slot = "7")]
	public override void ClientFire(int count)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x6A75700", Offset = "0x6A75700", VA = "0x6A75700", Slot = "9")]
	public override void ServerStopFire()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x6A75724", Offset = "0x6A75724", VA = "0x6A75724", Slot = "10")]
	public override void ClientStopFire()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x6A75394", Offset = "0x6A75394", VA = "0x6A75394")]
	private void FireBullet()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x6A7572C", Offset = "0x6A7572C", VA = "0x6A7572C")]
	private void GetBossHandFirePoints()
	{
	}
}
[Token(Token = "0x20000BD")]
public class BossHeadGun : MonsterWeapon
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _curFireWaitTime;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _curBulletCount;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] _firePoints;

	[Token(Token = "0x17000091")]
	private float BulletInterval
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x6A75858", Offset = "0x6A75858", VA = "0x6A75858")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x6A7587C", Offset = "0x6A7587C", VA = "0x6A7587C")]
	public BossHeadGun(CSFMonster monster, bool isClient)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x6A75A8C", Offset = "0x6A75A8C", VA = "0x6A75A8C", Slot = "11")]
	public override void Destroy()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x6A75A90", Offset = "0x6A75A90", VA = "0x6A75A90", Slot = "8")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x6A75D40", Offset = "0x6A75D40", VA = "0x6A75D40", Slot = "6")]
	public override void ServerFire()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x6A75DCC", Offset = "0x6A75DCC", VA = "0x6A75DCC", Slot = "7")]
	public override void ClientFire(int count)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x6A75DD4", Offset = "0x6A75DD4", VA = "0x6A75DD4", Slot = "9")]
	public override void ServerStopFire()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x6A75DF8", Offset = "0x6A75DF8", VA = "0x6A75DF8", Slot = "10")]
	public override void ClientStopFire()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x6A75B04", Offset = "0x6A75B04", VA = "0x6A75B04")]
	private void FireBullet()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x6A75900", Offset = "0x6A75900", VA = "0x6A75900")]
	private void GetBossHeadFirePoints()
	{
	}
}
[Token(Token = "0x20000BE")]
public class PlayerNode : MonoBehaviour
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WebTextureImage ThumbnailImage;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI PlayerName;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI KillNPCNum;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI DamageNum;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> HPNodeList;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> HPMaxNodeList;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI DeathTime;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WebTextureImage SeasonGradeIcon;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int nextSkillNameIndex;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x6A75E00", Offset = "0x6A75E00", VA = "0x6A75E00")]
	public void RefreshPlayerNode(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x6A75FF4", Offset = "0x6A75FF4", VA = "0x6A75FF4")]
	public void RefreshScore(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x6A76030", Offset = "0x6A76030", VA = "0x6A76030")]
	public void RefreshDamageNum(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x6A760E8", Offset = "0x6A760E8", VA = "0x6A760E8")]
	public void RefreshHPNodeState(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x6A761F0", Offset = "0x6A761F0", VA = "0x6A761F0")]
	public PlayerNode()
	{
	}
}
[Token(Token = "0x20000BF")]
public class PlayerReviveNode : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ReviveModel;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProceduralImage ReviveProgress;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI CountDownTime;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isDeath;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentReviveTime;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float totalReviveTime;

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x6A761F8", Offset = "0x6A761F8", VA = "0x6A761F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x6A76224", Offset = "0x6A76224", VA = "0x6A76224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x6A763A8", Offset = "0x6A763A8", VA = "0x6A763A8")]
	public void PlayerDeath(float reviveTime, bool needLookAt)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x6A7637C", Offset = "0x6A7637C", VA = "0x6A7637C")]
	public void PlayerRevive()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x6A764D8", Offset = "0x6A764D8", VA = "0x6A764D8")]
	public PlayerReviveNode()
	{
	}
}
[Token(Token = "0x20000C0")]
public class RPGBomeRange : MonoBehaviour
{
	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform BombMiddleEffect;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform BombOuterEffect;

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x6A764E0", Offset = "0x6A764E0", VA = "0x6A764E0")]
	public void InitBome(float middleBomeRange, float outerBomeRange, GameObjectPool belongPool)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x6A76730", Offset = "0x6A76730", VA = "0x6A76730")]
	public RPGBomeRange()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Shield : MonoBehaviour
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform PlayerHPRoot;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PlayerHPPrefab;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ShieldEnergyRoot;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ShieldEnergyPrefab;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WeaponManager MyWeaponManager;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject ParclosePrefab;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ForceAmount;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject InvincibleFX;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerReviveNode PlayerReviveNode;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<GameObject> ShieldModelList;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform AttackedEffect;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform AbsorbEffect;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int initTotalHPValue;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float initChargeTime;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int currentHPValue;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float currentReviveTime;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool haveSkillHandler;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool isLeftHandeGrab;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObjectPool parcloseObjectPool;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int currentPlayerHp;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int currentPlayerMaxHp;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<HPBox> playerHPNodeList;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<ShieldBox> shieldEnergyNodeList;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int currentModelIndex;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float totalInvincibleFXShowTime;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float currentInvincibleFXShowTime;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool isInvincibleFXShow;

	[Token(Token = "0x17000092")]
	public int CurrentMaxHPValue
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x6A767F4", Offset = "0x6A767F4", VA = "0x6A767F4")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x6A767FC", Offset = "0x6A767FC", VA = "0x6A767FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public float CurrentReviveTime
	{
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x6A76804", Offset = "0x6A76804", VA = "0x6A76804")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x6A7680C", Offset = "0x6A7680C", VA = "0x6A7680C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public int CurrentReviveValueEveryTime
	{
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x6A76814", Offset = "0x6A76814", VA = "0x6A76814")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x6A7681C", Offset = "0x6A7681C", VA = "0x6A7681C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x6A76824", Offset = "0x6A76824", VA = "0x6A76824")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x6A76F00", Offset = "0x6A76F00", VA = "0x6A76F00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x6A77198", Offset = "0x6A77198", VA = "0x6A77198")]
	public void AddHandlerOfSkill(bool isLeftHand)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x6A772B0", Offset = "0x6A772B0", VA = "0x6A772B0")]
	public void RemoveHandlerOfSkill()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x6A773C4", Offset = "0x6A773C4", VA = "0x6A773C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x6A7760C", Offset = "0x6A7760C", VA = "0x6A7760C")]
	public void AttackShield(bool isBomb, Vector3 attackedPosition, bool needInStep = true, bool ignoreAttack = false)
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x6A7798C", Offset = "0x6A7798C", VA = "0x6A7798C")]
	public void PlayerReviveResetShield()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x6A77990", Offset = "0x6A77990", VA = "0x6A77990")]
	private void RefreshAllEnergy()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x6A77A54", Offset = "0x6A77A54", VA = "0x6A77A54")]
	private void RefreshShieldRange(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x6A77B4C", Offset = "0x6A77B4C", VA = "0x6A77B4C")]
	private void SendParcloseHandle(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x6A77B54", Offset = "0x6A77B54", VA = "0x6A77B54")]
	public void SendParclose(bool needInStep = true)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x6A77E2C", Offset = "0x6A77E2C", VA = "0x6A77E2C")]
	private void RefreshShieldMaxHP(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x6A780AC", Offset = "0x6A780AC", VA = "0x6A780AC")]
	private void RefreshReviveTime(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x6A781A4", Offset = "0x6A781A4", VA = "0x6A781A4")]
	public bool CanShieldRebound(CSFMonsterBullet monsterBullet)
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x6A78378", Offset = "0x6A78378", VA = "0x6A78378")]
	public void InitHPNodeState(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x6A7858C", Offset = "0x6A7858C", VA = "0x6A7858C")]
	public void RefreshHPNodeState(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x6A786C4", Offset = "0x6A786C4", VA = "0x6A786C4")]
	public void RefreshMaxHPNodeState(FirePlayerData playerData)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x6A76DB0", Offset = "0x6A76DB0", VA = "0x6A76DB0")]
	private void HideAllShieldModel()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x6A78868", Offset = "0x6A78868", VA = "0x6A78868")]
	public Shield()
	{
	}
}
[Token(Token = "0x20000C3")]
public class ShieldBox : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EnergyNode;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject AddEffect;

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x6A76D28", Offset = "0x6A76D28", VA = "0x6A76D28")]
	public void InitShieldBox()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x6A76D60", Offset = "0x6A76D60", VA = "0x6A76D60")]
	public void AddEnergy(bool isInit)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x6A77924", Offset = "0x6A77924", VA = "0x6A77924")]
	public void ReduceEnergy()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x6A7888C", Offset = "0x6A7888C", VA = "0x6A7888C")]
	public ShieldBox()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TimeBomb : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject BombModel;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BombEffect;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x6A78894", Offset = "0x6A78894", VA = "0x6A78894")]
	public void InitTimeBome(GameObjectPool belongPool, float delayTime, CSFMonsterDamageInfo damageInfo, float middleBombRange, float outerBombRange, float middleDamage, float outerDamage, DamageType middleDamageType, DamageType outerDamageType, float initScale, int myWeaponIndex)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x6A78AC8", Offset = "0x6A78AC8", VA = "0x6A78AC8")]
	private void BombDamage(float middleBombRange, float outerBombRange, float middleDamage, float outerDamage, CSFMonsterDamageInfo damageInfo, DamageType middleDamageType, DamageType outerDamageType, int myWeaponIndex)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x6A78EB4", Offset = "0x6A78EB4", VA = "0x6A78EB4")]
	public TimeBomb()
	{
	}
}
[Token(Token = "0x20000C6")]
public class WaitGun : MonoBehaviour
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponType MyWeaponType;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TriggerResetAngle;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TriggerShootAngle;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform TriggerTransform;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BulletPrefab;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform FiringPinTransform;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject FireFX;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaitWeaponManager OwnerWeaponManager;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float HapticsStrength;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float FireFXShowTime;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("是否为单发模式")]
	public bool IsSingleFire;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("霰弹枪参数")]
	public Transform ShotGunFirePoint;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int ShotGunBulletNum;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float ShotGunCalibre;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("激光参数")]
	public float MaxRange;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public LayerMask ValidLayers;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LaserPointer MyLaserPointer;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float initForceAmount;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float initLaserGunDamage;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float initLaserDamageGrowthSpeed;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float initLaserMaxDamage;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float initLaserMaxAutoAttackRange;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float initLaserSameChangeResetHightDamageTime;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float initLaserKeepHeatRatio;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float initLaserOtherChangeResetHightDamageTime;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float currentfireFXShowTime;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObjectPool bulletObjectPool;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float currentContinuousTime;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float currentResetHightDamageTime;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool isResetHightDamage;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int totalShotBulletNum;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<float> forkLaserDamageList;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<CSFMonster> forkAttackList;

	[Token(Token = "0x17000095")]
	public float CurrentInterval
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x6A78FE0", Offset = "0x6A78FE0", VA = "0x6A78FE0")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x6A78FE8", Offset = "0x6A78FE8", VA = "0x6A78FE8")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public CSFMonster CurrentAttack
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0x6A78FF0", Offset = "0x6A78FF0", VA = "0x6A78FF0")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000741")]
		[Address(RVA = "0x6A78FF8", Offset = "0x6A78FF8", VA = "0x6A78FF8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public Vector3 ForkPoint
	{
		[Token(Token = "0x6000742")]
		[Address(RVA = "0x6A79000", Offset = "0x6A79000", VA = "0x6A79000")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000743")]
		[Address(RVA = "0x6A7900C", Offset = "0x6A7900C", VA = "0x6A7900C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public int LastAttackID
	{
		[Token(Token = "0x6000744")]
		[Address(RVA = "0x6A79018", Offset = "0x6A79018", VA = "0x6A79018")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000745")]
		[Address(RVA = "0x6A79020", Offset = "0x6A79020", VA = "0x6A79020")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float CurrentMinInterval
	{
		[Token(Token = "0x6000746")]
		[Address(RVA = "0x6A79028", Offset = "0x6A79028", VA = "0x6A79028")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000747")]
		[Address(RVA = "0x6A79030", Offset = "0x6A79030", VA = "0x6A79030")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public float CurrentReadyInterval
	{
		[Token(Token = "0x6000748")]
		[Address(RVA = "0x6A79038", Offset = "0x6A79038", VA = "0x6A79038")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000749")]
		[Address(RVA = "0x6A79040", Offset = "0x6A79040", VA = "0x6A79040")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public float CurrentForceAmount
	{
		[Token(Token = "0x600074A")]
		[Address(RVA = "0x6A79048", Offset = "0x6A79048", VA = "0x6A79048")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600074B")]
		[Address(RVA = "0x6A79050", Offset = "0x6A79050", VA = "0x6A79050")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public float CurrentLaserDamageGrowthSpeed
	{
		[Token(Token = "0x600074C")]
		[Address(RVA = "0x6A79058", Offset = "0x6A79058", VA = "0x6A79058")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600074D")]
		[Address(RVA = "0x6A79060", Offset = "0x6A79060", VA = "0x6A79060")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public float CurrentLaserMaxDamage
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x6A79068", Offset = "0x6A79068", VA = "0x6A79068")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x6A79070", Offset = "0x6A79070", VA = "0x6A79070")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public float CurrentLaserKeepHeatRatio
	{
		[Token(Token = "0x6000750")]
		[Address(RVA = "0x6A79078", Offset = "0x6A79078", VA = "0x6A79078")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000751")]
		[Address(RVA = "0x6A79080", Offset = "0x6A79080", VA = "0x6A79080")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public float CurrentLaserSameChangeResetHightDamageTime
	{
		[Token(Token = "0x6000752")]
		[Address(RVA = "0x6A79088", Offset = "0x6A79088", VA = "0x6A79088")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000753")]
		[Address(RVA = "0x6A79090", Offset = "0x6A79090", VA = "0x6A79090")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public float CurrentLaserOtherChangeResetHightDamageTime
	{
		[Token(Token = "0x6000754")]
		[Address(RVA = "0x6A79098", Offset = "0x6A79098", VA = "0x6A79098")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000755")]
		[Address(RVA = "0x6A790A0", Offset = "0x6A790A0", VA = "0x6A790A0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float initMinInterval
	{
		[Token(Token = "0x6000756")]
		[Address(RVA = "0x6A790A8", Offset = "0x6A790A8", VA = "0x6A790A8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000757")]
		[Address(RVA = "0x6A790B0", Offset = "0x6A790B0", VA = "0x6A790B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public float initReadyInterval
	{
		[Token(Token = "0x6000758")]
		[Address(RVA = "0x6A790B8", Offset = "0x6A790B8", VA = "0x6A790B8")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000759")]
		[Address(RVA = "0x6A790C0", Offset = "0x6A790C0", VA = "0x6A790C0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x6A790C8", Offset = "0x6A790C8", VA = "0x6A790C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x6A79240", Offset = "0x6A79240", VA = "0x6A79240")]
	private void InitWeaponConfig([Optional] string eventId, [Optional] object sender, [Optional] IArgs args)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x6A796FC", Offset = "0x6A796FC", VA = "0x6A796FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x6A797C4", Offset = "0x6A797C4", VA = "0x6A797C4")]
	public void StartShootBullet(bool needInstep = true)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x6A79868", Offset = "0x6A79868", VA = "0x6A79868")]
	public void ShootBullet(bool needInstep = true)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x6A79EE4", Offset = "0x6A79EE4", VA = "0x6A79EE4")]
	private void PlayFireSound()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x6A79F34", Offset = "0x6A79F34", VA = "0x6A79F34")]
	public void CancelShootBullet(bool needInstep = true)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x6A79774", Offset = "0x6A79774", VA = "0x6A79774")]
	private void SetFireFXState(bool isShow)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x6A7A000", Offset = "0x6A7A000", VA = "0x6A7A000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x6A7A120", Offset = "0x6A7A120", VA = "0x6A7A120")]
	public WaitGun()
	{
	}
}
[Token(Token = "0x20000C7")]
public class WaitWeaponManager : NetworkBehaviour
{
	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WeaponType WeaponTypeOfManager;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WaitGun ShotGun;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public WaitGun SniperRifle;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public WaitGun SubmachineGun;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public WaitGun LaserGun;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public WaitGun RPG;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Shield;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public NetworkObject MyNetworkObject;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BoxCollider MyGrabCollider;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaitGun currentGun;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WeaponType currentWeaponType;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool beingHeld;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ActionBasedController grabHandController;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private InputAction triggerAction;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float triggerPercent;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool ReadyToFire;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	private bool ReadyToDoubleFire;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private InputAction currentInputAction;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector2 lastThumbstickValue;

	[Token(Token = "0x170000A3")]
	public bool IsPressTrigger
	{
		[Token(Token = "0x6000764")]
		[Address(RVA = "0x6A7A248", Offset = "0x6A7A248", VA = "0x6A7A248")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000765")]
		[Address(RVA = "0x6A7A250", Offset = "0x6A7A250", VA = "0x6A7A250")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public NetworkVariable<bool> haveOtherGrab
	{
		[Token(Token = "0x6000766")]
		[Address(RVA = "0x6A7A25C", Offset = "0x6A7A25C", VA = "0x6A7A25C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000767")]
		[Address(RVA = "0x6A7A264", Offset = "0x6A7A264", VA = "0x6A7A264")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public NetworkVariable<bool> canFire
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0x6A7A26C", Offset = "0x6A7A26C", VA = "0x6A7A26C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000769")]
		[Address(RVA = "0x6A7A274", Offset = "0x6A7A274", VA = "0x6A7A274")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public NetworkVariable<int> WeaponIndex
	{
		[Token(Token = "0x600076A")]
		[Address(RVA = "0x6A7A27C", Offset = "0x6A7A27C", VA = "0x6A7A27C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600076B")]
		[Address(RVA = "0x6A7A284", Offset = "0x6A7A284", VA = "0x6A7A284")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x6A7A28C", Offset = "0x6A7A28C", VA = "0x6A7A28C", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x6A7A968", Offset = "0x6A7A968", VA = "0x6A7A968", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x6A7AB88", Offset = "0x6A7AB88", VA = "0x6A7AB88")]
	private void Update()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x6A7A3E8", Offset = "0x6A7A3E8", VA = "0x6A7A3E8")]
	private void ChangeGunState(WeaponType weaponType, bool needInstep = true)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x6A7B19C", Offset = "0x6A7B19C", VA = "0x6A7B19C")]
	private void InitAllWeaponInterval()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x6A7AE38", Offset = "0x6A7AE38", VA = "0x6A7AE38")]
	private void RefreshAllWeaponInterval()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x6A7B288", Offset = "0x6A7B288", VA = "0x6A7B288")]
	private bool IsLeftHand()
	{
		return default(bool);
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x6A79EB4", Offset = "0x6A79EB4", VA = "0x6A79EB4")]
	public void InStepBullet()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x6A79838", Offset = "0x6A79838", VA = "0x6A79838")]
	public void InStepStartShootBullet()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x6A79FD0", Offset = "0x6A79FD0", VA = "0x6A79FD0")]
	public void InStepCancelShootBullet()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x6A79E0C", Offset = "0x6A79E0C", VA = "0x6A79E0C")]
	public void SetWeaponHaptics(float strength)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x6A7B798", Offset = "0x6A7B798", VA = "0x6A7B798")]
	public void OnGrabEntry(SelectEnterEventArgs selectEnterEventArgs)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x6A7BCA8", Offset = "0x6A7BCA8", VA = "0x6A7BCA8")]
	public void OnGrabExit(SelectExitEventArgs selectEnterEventArgs)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x6A7AA8C", Offset = "0x6A7AA8C", VA = "0x6A7AA8C")]
	private void ResetWeapon()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x6A7A758", Offset = "0x6A7A758", VA = "0x6A7A758")]
	public void ChangeWeaponGrabStateInWait(bool preValue = false, bool newValue = false)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x6A7A118", Offset = "0x6A7A118", VA = "0x6A7A118")]
	public bool IsClientWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x6A7BA28", Offset = "0x6A7BA28", VA = "0x6A7BA28")]
	[ServerRpc(RequireOwnership = false)]
	public void ChangWeaponOwnerShipServerRpc(ulong clientID, bool askOwner)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x6A7AFD8", Offset = "0x6A7AFD8", VA = "0x6A7AFD8")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepWeaponChangeServerRpc(WeaponType changeWeaponType, ulong ownerID)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x6A7B2F4", Offset = "0x6A7B2F4", VA = "0x6A7B2F4")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepBulletServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x6A7B480", Offset = "0x6A7B480", VA = "0x6A7B480")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepStartShootBulletServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x6A7B60C", Offset = "0x6A7B60C", VA = "0x6A7B60C")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepCancelShootBulletServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x6A7BE90", Offset = "0x6A7BE90", VA = "0x6A7BE90")]
	[ClientRpc]
	public void InStepWeaponChangeClientRpc(WeaponType changeWeaponType, ulong ownerID)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x6A7C034", Offset = "0x6A7C034", VA = "0x6A7C034")]
	[ClientRpc]
	public void InStepBulletClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x6A7C1E0", Offset = "0x6A7C1E0", VA = "0x6A7C1E0")]
	[ClientRpc]
	public void InStepStartShootBulletClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x6A7BCE4", Offset = "0x6A7BCE4", VA = "0x6A7BCE4")]
	[ClientRpc]
	public void InStepCancelShootBulletClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x6A7C38C", Offset = "0x6A7C38C", VA = "0x6A7C38C")]
	public WaitWeaponManager()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x6A7C8D4", Offset = "0x6A7C8D4", VA = "0x6A7C8D4")]
	private static void __rpc_handler_1976918989(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x6A7C9F8", Offset = "0x6A7C9F8", VA = "0x6A7C9F8")]
	private static void __rpc_handler_807503779(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x6A7CB7C", Offset = "0x6A7CB7C", VA = "0x6A7CB7C")]
	private static void __rpc_handler_1067344359(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x6A7CCCC", Offset = "0x6A7CCCC", VA = "0x6A7CCCC")]
	private static void __rpc_handler_1068766903(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x6A7CE1C", Offset = "0x6A7CE1C", VA = "0x6A7CE1C")]
	private static void __rpc_handler_2287550598(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x6A7CF6C", Offset = "0x6A7CF6C", VA = "0x6A7CF6C")]
	private static void __rpc_handler_2654375238(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x6A7D088", Offset = "0x6A7D088", VA = "0x6A7D088")]
	private static void __rpc_handler_3895267464(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x6A7D16C", Offset = "0x6A7D16C", VA = "0x6A7D16C")]
	private static void __rpc_handler_317424236(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x6A7D250", Offset = "0x6A7D250", VA = "0x6A7D250")]
	private static void __rpc_handler_3617695523(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x6A7D334", Offset = "0x6A7D334", VA = "0x6A7D334", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x20000C8")]
public enum WeaponType
{
	[Token(Token = "0x40006A1")]
	None,
	[Token(Token = "0x40006A2")]
	SubmachineGun,
	[Token(Token = "0x40006A3")]
	SniperRifle,
	[Token(Token = "0x40006A4")]
	ShotGun,
	[Token(Token = "0x40006A5")]
	Shield,
	[Token(Token = "0x40006A6")]
	LaserGun,
	[Token(Token = "0x40006A7")]
	RPG
}
[Token(Token = "0x20000C9")]
public class WeaponManager : NetworkBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WeaponType WeaponTypeOfManager;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Gun ShotGun;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Gun SniperRifle;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Gun SubmachineGun;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Gun LaserGun;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Gun RPG;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shield Shield;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public NetworkObject MyNetworkObject;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BoxCollider MyGrabCollider;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject WeaponTips;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Gun currentGun;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WeaponType currentWeaponType;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private bool beingHeld;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ActionBasedController grabHandController;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private InputAction triggerAction;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float triggerPercent;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool ReadyToFire;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool ReadyToDoubleFire;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private InputAction currentInputAction;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector2 lastThumbstickValue;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private FirePlatform myFirePlatform;

	[Token(Token = "0x170000A7")]
	public bool IsPressTrigger
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0x6A7D374", Offset = "0x6A7D374", VA = "0x6A7D374")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000792")]
		[Address(RVA = "0x6A7D37C", Offset = "0x6A7D37C", VA = "0x6A7D37C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public NetworkVariable<bool> haveOtherGrab
	{
		[Token(Token = "0x6000793")]
		[Address(RVA = "0x6A7D388", Offset = "0x6A7D388", VA = "0x6A7D388")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000794")]
		[Address(RVA = "0x6A7D390", Offset = "0x6A7D390", VA = "0x6A7D390")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public NetworkVariable<bool> canFire
	{
		[Token(Token = "0x6000795")]
		[Address(RVA = "0x6A7D398", Offset = "0x6A7D398", VA = "0x6A7D398")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000796")]
		[Address(RVA = "0x6A7D3A0", Offset = "0x6A7D3A0", VA = "0x6A7D3A0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public NetworkVariable<int> WeaponIndex
	{
		[Token(Token = "0x6000797")]
		[Address(RVA = "0x6A7D3A8", Offset = "0x6A7D3A8", VA = "0x6A7D3A8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000798")]
		[Address(RVA = "0x6A7D3B0", Offset = "0x6A7D3B0", VA = "0x6A7D3B0")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x6A7D3B8", Offset = "0x6A7D3B8", VA = "0x6A7D3B8", Slot = "5")]
	public override void OnNetworkSpawn()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x6A7DA28", Offset = "0x6A7DA28", VA = "0x6A7DA28", Slot = "6")]
	public override void OnNetworkDespawn()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x6A7DB0C", Offset = "0x6A7DB0C", VA = "0x6A7DB0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x6A7DF44", Offset = "0x6A7DF44", VA = "0x6A7DF44")]
	private void OnEventThumbstickChange(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x6A7DFA0", Offset = "0x6A7DFA0", VA = "0x6A7DFA0")]
	private void OnEventThumbstickCancle(InputAction.CallbackContext callbackContext)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x6A7D680", Offset = "0x6A7D680", VA = "0x6A7D680")]
	private void ChangeGunState(WeaponType weaponType, bool needInstep = true)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x6A7E3B8", Offset = "0x6A7E3B8", VA = "0x6A7E3B8")]
	private void InitAllWeaponInterval()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x6A7DE94", Offset = "0x6A7DE94", VA = "0x6A7DE94")]
	private void RefreshAllWeaponInterval()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x6A7E3F8", Offset = "0x6A7E3F8", VA = "0x6A7E3F8")]
	private bool IsLeftHand()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x6A7E464", Offset = "0x6A7E464", VA = "0x6A7E464")]
	public void InStepBullet()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x6A7E620", Offset = "0x6A7E620", VA = "0x6A7E620")]
	public void InStepStartShootBullet()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x6A7E7DC", Offset = "0x6A7E7DC", VA = "0x6A7E7DC")]
	public void InStepCancelShootBullet()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x6A77944", Offset = "0x6A77944", VA = "0x6A77944")]
	public void InStepAttackShield(bool ignoreAttack, bool isBomb)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x6A77DFC", Offset = "0x6A77DFC", VA = "0x6A77DFC")]
	public void InStepSendParclose()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x6A7ED10", Offset = "0x6A7ED10", VA = "0x6A7ED10")]
	public void InStepAttackedEffect(AttackedEffectType effectType, Vector3 position, float initScale = 1f, float delayTime = 0f)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x6A77564", Offset = "0x6A77564", VA = "0x6A77564")]
	public void SetWeaponHaptics(float strength)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x6A7EFEC", Offset = "0x6A7EFEC", VA = "0x6A7EFEC")]
	public void OnGrabEntry(SelectEnterEventArgs selectEnterEventArgs)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x6A7F4E4", Offset = "0x6A7F4E4", VA = "0x6A7F4E4")]
	public void OnGrabExit(SelectExitEventArgs selectEnterEventArgs)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x6A7DADC", Offset = "0x6A7DADC", VA = "0x6A7DADC")]
	private void ResetWeapon()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x6A7D8C0", Offset = "0x6A7D8C0", VA = "0x6A7D8C0")]
	private void InitGrabStateInGame()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x6A7F510", Offset = "0x6A7F510", VA = "0x6A7F510")]
	public bool IsClientWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x6A7D8E8", Offset = "0x6A7D8E8", VA = "0x6A7D8E8")]
	private bool IsMyWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x6A7D960", Offset = "0x6A7D960", VA = "0x6A7D960")]
	private void RefreshWeaponTipsStatus(bool isShow, bool needInstep)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x6A7F2C4", Offset = "0x6A7F2C4", VA = "0x6A7F2C4")]
	[ServerRpc(RequireOwnership = false)]
	public void ChangWeaponOwnerShipServerRpc(ulong clientID, bool isRightHandGrab)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x6A7E1F4", Offset = "0x6A7E1F4", VA = "0x6A7E1F4")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepWeaponChangeServerRpc(WeaponType changeWeaponType, ulong ownerID)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x6A7E494", Offset = "0x6A7E494", VA = "0x6A7E494")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepBulletServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x6A7E650", Offset = "0x6A7E650", VA = "0x6A7E650")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepStartShootBulletServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x6A7E80C", Offset = "0x6A7E80C", VA = "0x6A7E80C")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepCancelShootBulletServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x6A7E998", Offset = "0x6A7E998", VA = "0x6A7E998")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepAttackShieldServerRpc(ulong ownerID, bool ignoreAttack, bool isBomb)
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x6A7EB84", Offset = "0x6A7EB84", VA = "0x6A7EB84")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepSendParcloseServerRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x6A7ED90", Offset = "0x6A7ED90", VA = "0x6A7ED90")]
	[ServerRpc(RequireOwnership = true)]
	public void InStepAttackedEffectServerRpc(ulong ownerID, AttackedEffectType effectType, Vector3 position, float initScale = 1f, float delayTime = 0f)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x6A7F518", Offset = "0x6A7F518", VA = "0x6A7F518")]
	[ServerRpc(RequireOwnership = false)]
	public void RefreshWeaponTipsStatusServerRpc(bool isShow, ulong ownerId)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x6A7F674", Offset = "0x6A7F674", VA = "0x6A7F674")]
	[ClientRpc]
	public void InStepWeaponChangeClientRpc(WeaponType changeWeaponType, ulong ownerID)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x6A7F818", Offset = "0x6A7F818", VA = "0x6A7F818")]
	[ClientRpc]
	public void InStepBulletClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x6A7F9C8", Offset = "0x6A7F9C8", VA = "0x6A7F9C8")]
	[ClientRpc]
	public void InStepStartShootBulletClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x6A7FB78", Offset = "0x6A7FB78", VA = "0x6A7FB78")]
	[ClientRpc]
	public void InStepCancelShootBulletClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x6A7FD28", Offset = "0x6A7FD28", VA = "0x6A7FD28")]
	[ClientRpc]
	public void InStepAttackShieldClientRpc(ulong ownerID, bool ignoreAttack, bool isBomb)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x6A7FF78", Offset = "0x6A7FF78", VA = "0x6A7FF78")]
	[ClientRpc]
	public void InStepSendParcloseClientRpc(ulong ownerID)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x6A80124", Offset = "0x6A80124", VA = "0x6A80124")]
	[ClientRpc]
	public void InStepAttackedEffectClientRpc(ulong ownerID, AttackedEffectType effectType, Vector3 position, float initScale = 1f, float delayTime = 0f)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x6A80548", Offset = "0x6A80548", VA = "0x6A80548")]
	[ClientRpc]
	public void InStepAutoSelectWeaponClientRpc(WeaponType weaponType, [Optional] ClientRpcParams receiveClient)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x6A803A0", Offset = "0x6A803A0", VA = "0x6A803A0")]
	[ClientRpc]
	public void RefreshWeaponTipsStatusClientRpc(bool isShow, ulong ownerId)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x6A80730", Offset = "0x6A80730", VA = "0x6A80730")]
	public WeaponManager()
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x6A80FB4", Offset = "0x6A80FB4", VA = "0x6A80FB4")]
	private static void __rpc_handler_3648836359(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x6A810D8", Offset = "0x6A810D8", VA = "0x6A810D8")]
	private static void __rpc_handler_644688104(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x6A8125C", Offset = "0x6A8125C", VA = "0x6A8125C")]
	private static void __rpc_handler_3419021524(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x6A813AC", Offset = "0x6A813AC", VA = "0x6A813AC")]
	private static void __rpc_handler_3537055698(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x6A814FC", Offset = "0x6A814FC", VA = "0x6A814FC")]
	private static void __rpc_handler_740264304(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x6A8164C", Offset = "0x6A8164C", VA = "0x6A8164C")]
	private static void __rpc_handler_1924013481(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x6A81800", Offset = "0x6A81800", VA = "0x6A81800")]
	private static void __rpc_handler_1044159427(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x6A81950", Offset = "0x6A81950", VA = "0x6A81950")]
	private static void __rpc_handler_483268593(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x6A81B60", Offset = "0x6A81B60", VA = "0x6A81B60")]
	private static void __rpc_handler_3374533187(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x6A81C84", Offset = "0x6A81C84", VA = "0x6A81C84")]
	private static void __rpc_handler_4035887216(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x6A81DA0", Offset = "0x6A81DA0", VA = "0x6A81DA0")]
	private static void __rpc_handler_3850820699(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x6A81E84", Offset = "0x6A81E84", VA = "0x6A81E84")]
	private static void __rpc_handler_3123890487(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x6A81F68", Offset = "0x6A81F68", VA = "0x6A81F68")]
	private static void __rpc_handler_3369887874(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x6A8204C", Offset = "0x6A8204C", VA = "0x6A8204C")]
	private static void __rpc_handler_987346625(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x6A82198", Offset = "0x6A82198", VA = "0x6A82198")]
	private static void __rpc_handler_794827063(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x6A8227C", Offset = "0x6A8227C", VA = "0x6A8227C")]
	private static void __rpc_handler_1317010335(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x6A82424", Offset = "0x6A82424", VA = "0x6A82424")]
	private static void __rpc_handler_4090194729(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x6A8254C", Offset = "0x6A8254C", VA = "0x6A8254C")]
	private static void __rpc_handler_311844667(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x6A82670", Offset = "0x6A82670", VA = "0x6A82670", Slot = "4")]
	internal override string __getTypeName()
	{
		return null;
	}
}
[Token(Token = "0x20000CA")]
public class RotateSeeker : MonoBehaviour
{
	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x6A826B0", Offset = "0x6A826B0", VA = "0x6A826B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x6A82708", Offset = "0x6A82708", VA = "0x6A82708")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x6A82754", Offset = "0x6A82754", VA = "0x6A82754")]
	public RotateSeeker()
	{
	}
}
[Token(Token = "0x20000CB")]
public class Fan : MonoBehaviour
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _speed;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trans;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x6A82764", Offset = "0x6A82764", VA = "0x6A82764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x6A827BC", Offset = "0x6A827BC", VA = "0x6A827BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x6A82800", Offset = "0x6A82800", VA = "0x6A82800")]
	public Fan()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ApplyProceduralTextureProperties : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space(5f)]
	public Material m_Material;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(5f)]
	public ProceduralTexture2D proceduralTexAssetAlbedo;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ProceduralTexture2D proceduralTexAssetNormal;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ProceduralTexture2D proceduralTexAssetMask;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x6A82810", Offset = "0x6A82810", VA = "0x6A82810")]
	public void SyncMatWithProceduralTextureAsset()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x6A82EAC", Offset = "0x6A82EAC", VA = "0x6A82EAC")]
	public ApplyProceduralTextureProperties()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CD")]
[CreateAssetMenu(fileName = "New Procedural Texture 2D", menuName = "", order = 1)]
public class ProceduralTexture2D : ScriptableObject
{
	[Token(Token = "0x20000CE")]
	public enum TextureType
	{
		[Token(Token = "0x40006E0")]
		Color,
		[Token(Token = "0x40006E1")]
		Normal,
		[Token(Token = "0x40006E2")]
		Other
	}

	[Token(Token = "0x20000CF")]
	public enum CompressionLevel
	{
		[Token(Token = "0x40006E4")]
		None = -1,
		[Token(Token = "0x40006E5")]
		LowQuality = 0,
		[Token(Token = "0x40006E6")]
		NormalQuality = 50,
		[Token(Token = "0x40006E7")]
		HighQuality = 100
	}

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D input;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextureType type;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool includeAlpha;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool generateMipMaps;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FilterMode filterMode;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int anisoLevel;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CompressionLevel compressionQuality;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D Tinput;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D invT;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 colorSpaceOrigin;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 colorSpaceVector1;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 colorSpaceVector2;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 colorSpaceVector3;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector4 compressionScalers;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public long memoryUsageBytes;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D currentInput;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextureType currentType;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool currentIncludeAlpha;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool currentGenerateMipMaps;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FilterMode currentFilterMode;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int currentAnisoLevel;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CompressionLevel currentCompressionQuality;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x6952A08", Offset = "0x6952A08", VA = "0x6952A08")]
	public ProceduralTexture2D()
	{
	}
}
[Token(Token = "0x20000D0")]
public class AnimatedUVs : MonoBehaviour
{
	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x6952AF4", Offset = "0x6952AF4", VA = "0x6952AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x6952B88", Offset = "0x6952B88", VA = "0x6952B88")]
	public AnimatedUVs()
	{
	}
}
[Token(Token = "0x20000D1")]
public class StyledMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x6952B9C", Offset = "0x6952B9C", VA = "0x6952B9C")]
	public StyledMonoBehaviour()
	{
	}
}
[Token(Token = "0x20000D2")]
public class StyledScriptableObject : ScriptableObject
{
	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x6952BA4", Offset = "0x6952BA4", VA = "0x6952BA4")]
	public StyledScriptableObject()
	{
	}
}
[Token(Token = "0x20000D3")]
public class RotateCamera : MonoBehaviour
{
	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float MouseRotateSpeed;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x6952BAC", Offset = "0x6952BAC", VA = "0x6952BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x6952BB0", Offset = "0x6952BB0", VA = "0x6952BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x6952CDC", Offset = "0x6952CDC", VA = "0x6952CDC")]
	public RotateCamera()
	{
	}
}
[Token(Token = "0x20000D4")]
public class MetaDataManager
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MetaDataManager _instance;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<ArcheryConstData> dataArcheryConstDataList;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<int, ArcheryConstData> dataArcheryConstDataMap;

	[Token(Token = "0x170000AB")]
	public static MetaDataManager Instance
	{
		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x6952CEC", Offset = "0x6952CEC", VA = "0x6952CEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x6952D78", Offset = "0x6952D78", VA = "0x6952D78")]
	public MetaDataManager()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x6952E58", Offset = "0x6952E58", VA = "0x6952E58")]
	public void Init()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x6952ED4", Offset = "0x6952ED4", VA = "0x6952ED4")]
	private void ToDictionary()
	{
	}
}
[Token(Token = "0x20000D6")]
public class HeartBeat : MonoBehaviour
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _endScale;

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x6953120", Offset = "0x6953120", VA = "0x6953120")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x6953274", Offset = "0x6953274", VA = "0x6953274")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x6953124", Offset = "0x6953124", VA = "0x6953124")]
	public void StartAnimation()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x6953278", Offset = "0x6953278", VA = "0x6953278")]
	public void StopAnimation()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x69532E8", Offset = "0x69532E8", VA = "0x69532E8")]
	public HeartBeat()
	{
	}
}
[Token(Token = "0x20000D8")]
public class InputData
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HMDInputData hmdData;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerInputData leftControllerData;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerInputData rightControllerData;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x6953378", Offset = "0x6953378", VA = "0x6953378")]
	public InputData()
	{
	}
}
[Token(Token = "0x20000D9")]
public class ControllerInputData
{
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 thumbstick;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float trigger;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float grip;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool primaryButton;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool secondaryButton;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool thumbstickClicked;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool triggerPressed;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool gripPressed;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool primaryTouched;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool secondaryTouched;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool thumbstickTouched;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool touchpadTouched;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool triggerTouched;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool menu;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool isTracked;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int trackingState;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Quaternion deviceRotation;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 devicePosition;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 deviceVelocity;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 deviceAngularVelocity;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 deviceAcceleration;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 deviceAngularAcceleration;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool north;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool south;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	public bool east;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	public bool west;

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x6953380", Offset = "0x6953380", VA = "0x6953380")]
	public ControllerInputData()
	{
	}
}
[Token(Token = "0x20000DA")]
public class HMDInputData
{
	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isTracked;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool userPresence;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Quaternion deviceRotation;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 devicePosition;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 deviceVelocity;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 deviceAngularVelocity;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 deviceAcceleration;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 deviceAngularAcceleration;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x6953388", Offset = "0x6953388", VA = "0x6953388")]
	public HMDInputData()
	{
	}
}
[Token(Token = "0x20000DB")]
public class InputDebugger : MonoBehaviour
{
	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _leftColumn;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _middleColumn;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI _rightColumn;

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x6953390", Offset = "0x6953390", VA = "0x6953390")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x6953490", Offset = "0x6953490", VA = "0x6953490")]
	public InputDebugger()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SliderToTextMesh : MonoBehaviour
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _tmp;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string _unit;

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x6953498", Offset = "0x6953498", VA = "0x6953498")]
	public void SetTextToValue(float value)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x69534F0", Offset = "0x69534F0", VA = "0x69534F0")]
	public SliderToTextMesh()
	{
	}
}
[Token(Token = "0x20000DD")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector2 input;

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x6953548", Offset = "0x6953548", VA = "0x6953548")]
	private void TestMethod()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x6953624", Offset = "0x6953624", VA = "0x6953624")]
	public Test()
	{
	}
}
[Token(Token = "0x20000DE")]
public class UILogger : SingletonMono<UILogger>
{
	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _debugAreaText;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _enableDebug;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private int _maxLines;

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x695362C", Offset = "0x695362C", VA = "0x695362C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x6953690", Offset = "0x6953690", VA = "0x6953690")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x6953A5C", Offset = "0x6953A5C", VA = "0x6953A5C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x6953998", Offset = "0x6953998", VA = "0x6953998")]
	private void ClearLines()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x6953AC0", Offset = "0x6953AC0", VA = "0x6953AC0")]
	public void LogInfo(string message)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x6953D90", Offset = "0x6953D90", VA = "0x6953D90")]
	public void LogError(string message)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x6954060", Offset = "0x6954060", VA = "0x6954060")]
	public void LogWarning(string message)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x6954330", Offset = "0x6954330", VA = "0x6954330")]
	public void TestLog()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x695444C", Offset = "0x695444C", VA = "0x695444C")]
	public UILogger()
	{
	}
}
[Token(Token = "0x20000DF")]
public class LaunchLoading : MonoSingleton<LaunchLoading>
{
	[Token(Token = "0x20000E0")]
	[Flags]
	public enum UIState
	{
		[Token(Token = "0x4000739")]
		Icon = 1,
		[Token(Token = "0x400073A")]
		Loading = 2,
		[Token(Token = "0x400073B")]
		Dialog = 4,
		[Token(Token = "0x400073C")]
		Progress = 8,
		[Token(Token = "0x400073D")]
		Content = 0x10
	}

	[Token(Token = "0x20000E1")]
	public struct DlgParam
	{
		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTitle;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string mContent;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mOKTxt;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mCancelTxt;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mOtherTxt;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextAlignmentOptions mContentAlignment;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action mOnOK;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action mOnCancel;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action mOnOther;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool mClickDontClose;
	}

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas m_Canvas;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_ContentObj;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject m_ProgressObj;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject m_DialogObj;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject m_LoadingObj;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject m_IconObj;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject m_DlgCancelObj;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject m_DlgOtherObj;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject m_DlgOKObj;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private TextMeshProUGUI m_DlgCancelTxt;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI m_DlgOtherTxt;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private TextMeshProUGUI m_DlgOKTxt;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private TextMeshProUGUI m_DlgTitleTxt;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private TextMeshProUGUI m_DlgContentTxt;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private Image m_ProgressImg;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private TextMeshProUGUI m_ContentTxt;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private RectTransform m_Mask;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UIState m_UIStates;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private UIState m_PreDlgUIState;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int m_PreDlgCameraCullMask;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private DlgParam m_DlgParam;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Transform hmd;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform uiPos;

	[Token(Token = "0x170000AC")]
	public UIState UIStates
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x695449C", Offset = "0x695449C", VA = "0x695449C")]
		get
		{
			return default(UIState);
		}
	}

	[Token(Token = "0x170000AD")]
	public float Progress
	{
		[Token(Token = "0x6000813")]
		[Address(RVA = "0x6954B6C", Offset = "0x6954B6C", VA = "0x6954B6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000814")]
		[Address(RVA = "0x6954B88", Offset = "0x6954B88", VA = "0x6954B88")]
		set
		{
		}
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x69544A4", Offset = "0x69544A4", VA = "0x69544A4")]
	public void TestDlg()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x6954930", Offset = "0x6954930", VA = "0x6954930")]
	public void TestContent()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x6954A44", Offset = "0x6954A44", VA = "0x6954A44")]
	public void TestHideContent()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x6954A90", Offset = "0x6954A90", VA = "0x6954A90")]
	public void TestShowProgress()
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x6954B44", Offset = "0x6954B44", VA = "0x6954B44")]
	public void TestIncProgress()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x6954BB8", Offset = "0x6954BB8", VA = "0x6954BB8")]
	public void TestDecProgress()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x6954BE0", Offset = "0x6954BE0", VA = "0x6954BE0")]
	public void TestPrintState()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x6954734", Offset = "0x6954734", VA = "0x6954734")]
	public void DisplayDialog(DlgParam param)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x695497C", Offset = "0x695497C", VA = "0x695497C")]
	public void ShowContent(bool show, string content = "")
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x6954AAC", Offset = "0x6954AAC", VA = "0x6954AAC")]
	public void ShowProgress(bool show)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x6954C74", Offset = "0x6954C74", VA = "0x6954C74")]
	public bool IsDialogShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x6954F0C", Offset = "0x6954F0C", VA = "0x6954F0C")]
	public bool IsContentShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x6954F18", Offset = "0x6954F18", VA = "0x6954F18")]
	public bool IsIconShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x6954AA0", Offset = "0x6954AA0", VA = "0x6954AA0")]
	public bool IsProgressShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x6954F24", Offset = "0x6954F24", VA = "0x6954F24")]
	public bool IsLoadingShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x6954C80", Offset = "0x6954C80", VA = "0x6954C80")]
	private void OnDlgOpen()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x6955058", Offset = "0x6955058", VA = "0x6955058")]
	private void OnDlgClose()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x69550C8", Offset = "0x69550C8", VA = "0x69550C8")]
	private void OnOkClick()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x6955168", Offset = "0x6955168", VA = "0x6955168")]
	private void OnCancelClick()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x69551F4", Offset = "0x69551F4", VA = "0x69551F4")]
	private void OnOtherClick()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x6954D6C", Offset = "0x6954D6C", VA = "0x6954D6C")]
	private void SetUIState(UIState states)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x6955280", Offset = "0x6955280", VA = "0x6955280")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x6954F30", Offset = "0x6954F30", VA = "0x6954F30")]
	private void EnableInputModule(bool enable)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x6955348", Offset = "0x6955348", VA = "0x6955348")]
	private void Start()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x695548C", Offset = "0x695548C", VA = "0x695548C")]
	private void AdjustPosition()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x6955720", Offset = "0x6955720", VA = "0x6955720")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x6955818", Offset = "0x6955818", VA = "0x6955818")]
	public LaunchLoading()
	{
	}
}
[Token(Token = "0x20000E3")]
public class LoadingLoading : MonoBehaviour
{
	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider m_Progress;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform m_LinerMask1;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform m_LinerMask2;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI m_DisplayName;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform m_Content;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Canvas m_Canvas;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private WebTextureImage m_MapThumbnail;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform m_ProgressBar;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private ProceduralImage m_ProgressImage;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private TextMeshProUGUI m_Logs;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private DisableLoadingSkyBox m_SkyBox;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private TextMeshProUGUI m_CreatorName;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private WebTextureImage m_CreatorThumbnail;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject m_creatorThumbnailObj;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private GameObject m_creatorNameObj;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private TextMeshProUGUI m_creatorLabel;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private GameObject m_TipsObj;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private TextMeshProUGUI m_TipsText;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private GameObject m_mapItemObj;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private float m_AnimInterval;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RectTransform m_RectTransForm;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RectTransform m_CanvasRect;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 m_BaseScale;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_BasePosition;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_BaseForward;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_PrePosition;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector3 m_PreForward;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 m_PreCanvasDirection;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float m_PreCanvasMagnitude;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float m_PreCanvasAngle;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int m_ForceUpdate;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float scale;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float staticPosY;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float staticPosZ;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Camera m_UsingCamera;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform m_UsingXR;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x69559A8", Offset = "0x69559A8", VA = "0x69559A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x695688C", Offset = "0x695688C", VA = "0x695688C")]
	private void OnProgress(float progress)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x69568F0", Offset = "0x69568F0", VA = "0x69568F0")]
	private void OnContent(string content)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x6956990", Offset = "0x6956990", VA = "0x6956990")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x6956D34", Offset = "0x6956D34", VA = "0x6956D34")]
	private void CalibrationPos(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x6956DAC", Offset = "0x6956DAC", VA = "0x6956DAC")]
	private void CalibrationPos(bool updateForward)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x6957AF0", Offset = "0x6957AF0", VA = "0x6957AF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x695788C", Offset = "0x695788C", VA = "0x695788C")]
	private void FindUsingXR()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x6957B50", Offset = "0x6957B50", VA = "0x6957B50")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x6956138", Offset = "0x6956138", VA = "0x6956138")]
	private void OnHomeReCenter()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x6957B94", Offset = "0x6957B94", VA = "0x6957B94")]
	public LoadingLoading()
	{
	}
}
[Token(Token = "0x20000E4")]
public class App : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000E5")]
	[CompilerGenerated]
	private struct <Awake>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public App <>4__this;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x6959094", Offset = "0x6959094", VA = "0x6959094", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x69592D8", Offset = "0x69592D8", VA = "0x69592D8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000E7")]
	[CompilerGenerated]
	private struct <Start>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public App <>4__this;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x69593C4", Offset = "0x69593C4", VA = "0x69593C4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x69597B4", Offset = "0x69597B4", VA = "0x69597B4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000E8")]
	[CompilerGenerated]
	private struct <TakeOutPropTest>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public long propID;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<Command>.Awaiter <>u__1;

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x69597C0", Offset = "0x69597C0", VA = "0x69597C0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x695A258", Offset = "0x695A258", VA = "0x695A258", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000E9")]
	[CompilerGenerated]
	private struct <StartApp>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public App <>4__this;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ProgressCalculator <progress>5__2;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<Command>.Awaiter <>u__1;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UniTask<bool>.Awaiter <>u__3;

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x695A264", Offset = "0x695A264", VA = "0x695A264", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x695B74C", Offset = "0x695B74C", VA = "0x695B74C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000EA")]
	[CompilerGenerated]
	private struct <InitServer>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniTask<Command>.Awaiter <>u__1;

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x695B758", Offset = "0x695B758", VA = "0x695B758", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x695BAE4", Offset = "0x695BAE4", VA = "0x695BAE4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000EB")]
	[CompilerGenerated]
	private struct <CheckAppVersion>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniTask<bool>.Awaiter <>u__1;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x695BAF0", Offset = "0x695BAF0", VA = "0x695BAF0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x695BFA4", Offset = "0x695BFA4", VA = "0x695BFA4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private struct <InitAsset>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UniTask<bool>.Awaiter <>u__1;

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x695BFFC", Offset = "0x695BFFC", VA = "0x695BFFC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x695C398", Offset = "0x695C398", VA = "0x695C398", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000ED")]
	[CompilerGenerated]
	private struct <CheckSoundBank>d__17 : IAsyncStateMachine
	{
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x695C3A4", Offset = "0x695C3A4", VA = "0x695C3A4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x695C3B4", Offset = "0x695C3B4", VA = "0x695C3B4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000EE")]
	[CompilerGenerated]
	private struct <CheckScript>d__18 : IAsyncStateMachine
	{
		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public App <>4__this;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x695C3C0", Offset = "0x695C3C0", VA = "0x695C3C0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x695C6B4", Offset = "0x695C6B4", VA = "0x695C6B4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ServerConfig _serverConfig;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly UniTaskCompletionSource _socketManagerInitializedSignal;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TimePointCounter _startTimeCounter;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x6957C30", Offset = "0x6957C30", VA = "0x6957C30")]
	[AsyncStateMachine(typeof(<Awake>d__3))]
	private void Awake()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x6957CE8", Offset = "0x6957CE8", VA = "0x6957CE8")]
	[AsyncStateMachine(typeof(<Start>d__4))]
	private void Start()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x6957D9C", Offset = "0x6957D9C", VA = "0x6957D9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x6957E30", Offset = "0x6957E30", VA = "0x6957E30")]
	private void InitModules()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x6957ED0", Offset = "0x6957ED0", VA = "0x6957ED0")]
	[AsyncStateMachine(typeof(<TakeOutPropTest>d__7))]
	public void TakeOutPropTest(long propID)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x6957F74", Offset = "0x6957F74", VA = "0x6957F74")]
	public void PrintSelectJson()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x6958078", Offset = "0x6958078", VA = "0x6958078")]
	private void InitSystems()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x69584C4", Offset = "0x69584C4", VA = "0x69584C4")]
	private void InitAppSettings()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x6958538", Offset = "0x6958538", VA = "0x6958538")]
	[AsyncStateMachine(typeof(<StartApp>d__11))]
	private UniTask StartApp()
	{
		return default(UniTask);
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x695869C", Offset = "0x695869C", VA = "0x695869C")]
	private bool CompatibilityCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x69586A4", Offset = "0x69586A4", VA = "0x69586A4")]
	private void InitSettings()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x6958898", Offset = "0x6958898", VA = "0x6958898")]
	[AsyncStateMachine(typeof(<InitServer>d__14))]
	private System.Threading.Tasks.Task InitServer()
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x695896C", Offset = "0x695896C", VA = "0x695896C")]
	[AsyncStateMachine(typeof(<CheckAppVersion>d__15))]
	private UniTask<bool> CheckAppVersion()
	{
		return default(UniTask<bool>);
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x6958A0C", Offset = "0x6958A0C", VA = "0x6958A0C")]
	[AsyncStateMachine(typeof(<InitAsset>d__16))]
	private System.Threading.Tasks.Task InitAsset()
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x6958ADC", Offset = "0x6958ADC", VA = "0x6958ADC")]
	[AsyncStateMachine(typeof(<CheckSoundBank>d__17))]
	private System.Threading.Tasks.Task CheckSoundBank()
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x6958BA8", Offset = "0x6958BA8", VA = "0x6958BA8")]
	[AsyncStateMachine(typeof(<CheckScript>d__18))]
	private System.Threading.Tasks.Task CheckScript()
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x6958C98", Offset = "0x6958C98", VA = "0x6958C98")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x6958D34", Offset = "0x6958D34", VA = "0x6958D34")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x6958D9C", Offset = "0x6958D9C", VA = "0x6958D9C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x6958E04", Offset = "0x6958E04", VA = "0x6958E04")]
	private void RegisterLuaInitializationEvents()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x6958ED0", Offset = "0x6958ED0", VA = "0x6958ED0")]
	private void OnSocketManagerInitialized(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x6958FAC", Offset = "0x6958FAC", VA = "0x6958FAC")]
	private void InitALog()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x6957DBC", Offset = "0x6957DBC", VA = "0x6957DBC")]
	private void UnInitALog()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x6959020", Offset = "0x6959020", VA = "0x6959020")]
	public App()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AppEditor : MonoBehaviour
{
	[Token(Token = "0x6000863")]
	[Address(RVA = "0x695C6C0", Offset = "0x695C6C0", VA = "0x695C6C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x695C6D0", Offset = "0x695C6D0", VA = "0x695C6D0")]
	private void InitModules()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x695C770", Offset = "0x695C770", VA = "0x695C770")]
	private void InitSystems()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x695C7D4", Offset = "0x695C7D4", VA = "0x695C7D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x695C7D8", Offset = "0x695C7D8", VA = "0x695C7D8")]
	public AppEditor()
	{
	}
}
[Token(Token = "0x20000F0")]
public class OpenAvatarControlWindow : MonoBehaviour
{
	[Token(Token = "0x6000868")]
	[Address(RVA = "0x695C7E0", Offset = "0x695C7E0", VA = "0x695C7E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x695C7E4", Offset = "0x695C7E4", VA = "0x695C7E4")]
	public OpenAvatarControlWindow()
	{
	}
}
[Token(Token = "0x20000F1")]
public class UnityPing : MonoBehaviour
{
	[Token(Token = "0x20000F2")]
	[CompilerGenerated]
	private sealed class <PingConnect>d__11 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityPing <>4__this;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Ping <ping>5__2;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <addTime>5__3;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <requestCount>5__4;

		[Token(Token = "0x170000AF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000875")]
			[Address(RVA = "0x695D1D4", Offset = "0x695D1D4", VA = "0x695D1D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000877")]
			[Address(RVA = "0x695D21C", Offset = "0x695D21C", VA = "0x695D21C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x695CCD0", Offset = "0x695CCD0", VA = "0x695CCD0")]
		[DebuggerHidden]
		public <PingConnect>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x695CDA8", Offset = "0x695CDA8", VA = "0x695CDA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x695CDAC", Offset = "0x695CDAC", VA = "0x695CDAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x695D1DC", Offset = "0x695D1DC", VA = "0x695D1DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string s_ip;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Action<int> s_callback;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static UnityPing s_unityPing;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int s_timeout;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static GameObject unityPingParent;

	[Token(Token = "0x170000AE")]
	public static int Timeout
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0x695CAA8", Offset = "0x695CAA8", VA = "0x695CAA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600086B")]
		[Address(RVA = "0x695CA44", Offset = "0x695CA44", VA = "0x695CA44")]
		set
		{
		}
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x695C7EC", Offset = "0x695C7EC", VA = "0x695C7EC")]
	public static void CreatePing(string ip, Action<int> callback)
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x695CB00", Offset = "0x695CB00", VA = "0x695CB00")]
	private void Start()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x695CBAC", Offset = "0x695CBAC", VA = "0x695CBAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x695CB38", Offset = "0x695CB38", VA = "0x695CB38")]
	[IteratorStateMachine(typeof(<PingConnect>d__11))]
	private IEnumerator PingConnect()
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x695CCF8", Offset = "0x695CCF8", VA = "0x695CCF8")]
	public UnityPing()
	{
	}
}
[Token(Token = "0x20000F3")]
public class PropsInteractableHelper : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x20000F4")]
	[CompilerGenerated]
	private struct <OnEnterSelect>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropsInteractableHelper <>4__this;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SelectEnterEventArgs args;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <rayPos>5__2;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <rayDir>5__3;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject <loadingObj>5__4;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UniTask<ResultWithObject>.Awaiter <>u__1;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private UniTask<Result>.Awaiter <>u__2;

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x695DDE0", Offset = "0x695DDE0", VA = "0x695DDE0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x695EE68", Offset = "0x695EE68", VA = "0x695EE68", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnHoverEnter;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnHoverExit;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSelectEnter;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnSelectExit;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CustomizeTooltip Tooltip;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject LoadingPrefab;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _name;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _thumbnail;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private long _propId;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _authorId;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _sign;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _forbidden;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool _longGrab;

	[Token(Token = "0x170000B1")]
	public GrabMode GrabMode
	{
		[Token(Token = "0x6000878")]
		[Address(RVA = "0x695D224", Offset = "0x695D224", VA = "0x695D224")]
		get
		{
			return default(GrabMode);
		}
	}

	[Token(Token = "0x170000B2")]
	internal XRBaseControllerInteractor.InputTriggerType InputTriggerType
	{
		[Token(Token = "0x6000879")]
		[Address(RVA = "0x695D22C", Offset = "0x695D22C", VA = "0x695D22C")]
		get
		{
			return default(XRBaseControllerInteractor.InputTriggerType);
		}
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x695D240", Offset = "0x695D240", VA = "0x695D240")]
	public void OnEnteringHover(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x695D4C4", Offset = "0x695D4C4", VA = "0x695D4C4")]
	public void OnEnterHover(HoverEnterEventArgs args)
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x695D4FC", Offset = "0x695D4FC", VA = "0x695D4FC")]
	public void OnExitHover(HoverExitEventArgs args)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x695D534", Offset = "0x695D534", VA = "0x695D534")]
	public void OnEnterSelecting(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x695D870", Offset = "0x695D870", VA = "0x695D870")]
	[AsyncStateMachine(typeof(<OnEnterSelect>d__14))]
	public void OnEnterSelect(SelectEnterEventArgs args)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x695D960", Offset = "0x695D960", VA = "0x695D960")]
	public void OnExitSelect(SelectExitEventArgs args)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x695DB48", Offset = "0x695DB48", VA = "0x695DB48")]
	public void SetPropData(string name, string thumbnail, long propId, string authorId, int sign, bool longGrab, bool forbidden)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x695D304", Offset = "0x695D304", VA = "0x695D304")]
	private void SetControllerSelectAction(IXRInteractor interactor)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x695DC2C", Offset = "0x695DC2C", VA = "0x695DC2C")]
	private bool IsLeftInteractor(IXRInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x695D790", Offset = "0x695D790", VA = "0x695D790")]
	private void SetControllerSelectActionOnSelect(IXRInteractor interactor)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x695DDD8", Offset = "0x695DDD8", VA = "0x695DDD8")]
	public PropsInteractableHelper()
	{
	}
}
[Token(Token = "0x20000F5")]
public class Animator_SetRandomInt : StateMachineBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string IntValueName;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int min;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int max;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int updateIndex;

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x695EE74", Offset = "0x695EE74", VA = "0x695EE74", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x695EE80", Offset = "0x695EE80", VA = "0x695EE80")]
	private void DoRandom(Animator animator)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x695EEC8", Offset = "0x695EEC8", VA = "0x695EEC8", Slot = "5")]
	public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x695EF18", Offset = "0x695EF18", VA = "0x695EF18")]
	public Animator_SetRandomInt()
	{
	}
}
[Token(Token = "0x20000F6")]
public enum GizmosType
{
	[Token(Token = "0x40007BC")]
	WireCube,
	[Token(Token = "0x40007BD")]
	Cube,
	[Token(Token = "0x40007BE")]
	WireSphere,
	[Token(Token = "0x40007BF")]
	Sphere
}
[Token(Token = "0x20000F7")]
public class PlaceHolder : MonoBehaviour
{
	[Token(Token = "0x600088B")]
	[Address(RVA = "0x695EF20", Offset = "0x695EF20", VA = "0x695EF20")]
	private void Start()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x695EF24", Offset = "0x695EF24", VA = "0x695EF24")]
	public PlaceHolder()
	{
	}
}
[Token(Token = "0x20000F8")]
public class WatchDriver : MonoBehaviour
{
	[Token(Token = "0x20000F9")]
	public enum AnimState
	{
		[Token(Token = "0x40007E3")]
		empty,
		[Token(Token = "0x40007E4")]
		state_build_contraction,
		[Token(Token = "0x40007E5")]
		state_build_expansion,
		[Token(Token = "0x40007E6")]
		state_room_contraction,
		[Token(Token = "0x40007E7")]
		state_room_expansion
	}

	[Token(Token = "0x20000FA")]
	public enum RoomState
	{
		[Token(Token = "0x40007E9")]
		empty,
		[Token(Token = "0x40007EA")]
		builderWorldEdit,
		[Token(Token = "0x40007EB")]
		builderWorldPreview,
		[Token(Token = "0x40007EC")]
		multiPlayerRoom,
		[Token(Token = "0x40007ED")]
		home
	}

	[Token(Token = "0x20000FB")]
	private enum PaddingType
	{
		[Token(Token = "0x40007EF")]
		empty,
		[Token(Token = "0x40007F0")]
		expand,
		[Token(Token = "0x40007F1")]
		contract
	}

	[Token(Token = "0x20000FC")]
	private class PeriodTimer
	{
		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float _preTime;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _period;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<PeriodTimer> _periodTask;

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x695F4A8", Offset = "0x695F4A8", VA = "0x695F4A8")]
		public PeriodTimer(float period, Action<PeriodTimer> task)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x6960680", Offset = "0x6960680", VA = "0x6960680")]
		public void Update(float curTime)
		{
		}
	}

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AnimState _animState;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private RoomState _roomState;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _show;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _hide;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image shrinkImg;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image expandImg;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action<string> _timeContent;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Action<int> _wifiLevel;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Action<float> _batteryLevel;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Action<float> _micLevel;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action<string, string> _roomInfo;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<bool> _micStatus;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action<bool> _previewMode;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action<int> _roomMode;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder _timeBuilder;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector4 _expandPadding;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector4 _shrinkPadding;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _timeValue;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _wifiValue;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _batteryValue;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _roomName;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _playerNum;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _registered;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<Graphic> _ctrlGraphics;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<UnityAction> _ctrlGraphicsMatDirty;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Material> _ctrlGraphicsMat;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _showRoomStatus;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _showRoomStatusStartTime;

	[Token(Token = "0x40007DD")]
	private const float _showRoomStatusThreshold = 5f;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private PaddingType _paddingType;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _prePaddingTime;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly float _paddingPeriod;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private PeriodTimer[] _Timers;

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x695EF2C", Offset = "0x695EF2C", VA = "0x695EF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x695F4EC", Offset = "0x695F4EC", VA = "0x695F4EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x695F674", Offset = "0x695F674", VA = "0x695F674")]
	private void InitElement()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x695FDC4", Offset = "0x695FDC4", VA = "0x695FDC4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x6960110", Offset = "0x6960110", VA = "0x6960110")]
	private void UnRegisterMatDirty()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x6960208", Offset = "0x6960208", VA = "0x6960208")]
	private void OnLoadSceneBegin(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x69602B4", Offset = "0x69602B4", VA = "0x69602B4")]
	private void OnRoomNetworkStatus(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x6960348", Offset = "0x6960348", VA = "0x6960348")]
	private void OnChangeWorldEditModel(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x69603E0", Offset = "0x69603E0", VA = "0x69603E0")]
	private void OnRoomMemberChanged(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x696047C", Offset = "0x696047C", VA = "0x696047C")]
	private void OnRoomIdChanged(string dataPath, DataChangeArgs changeArgs)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x69605BC", Offset = "0x69605BC", VA = "0x69605BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x696064C", Offset = "0x696064C", VA = "0x696064C")]
	private void UpdatePadding(float curTime)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x6960744", Offset = "0x6960744", VA = "0x6960744")]
	private void WatchTimer(PeriodTimer timer)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x69608B0", Offset = "0x69608B0", VA = "0x69608B0")]
	private void WifiTimer(PeriodTimer timer)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x6960960", Offset = "0x6960960", VA = "0x6960960")]
	private void BatteryTimer(PeriodTimer timer)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x696086C", Offset = "0x696086C", VA = "0x696086C")]
	private void SetTime(string time)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x69609EC", Offset = "0x69609EC", VA = "0x69609EC")]
	private void OnMicVolume(float volume)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x6960A20", Offset = "0x6960A20", VA = "0x6960A20")]
	private void OnMicrophoneEvent(MicrophoneEvent volume)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x6960A5C", Offset = "0x6960A5C", VA = "0x6960A5C")]
	private void OnPreviewMode(bool preview)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x6960A94", Offset = "0x6960A94", VA = "0x6960A94")]
	private void RegisterWatchInfo(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x695FBA8", Offset = "0x695FBA8", VA = "0x695FBA8")]
	private void EnterRoomState(RoomState state)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x6960C54", Offset = "0x6960C54", VA = "0x6960C54")]
	private void EnterAnimState(AnimState animState)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x6960D70", Offset = "0x6960D70", VA = "0x6960D70")]
	private void _PlayContraction()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x6960704", Offset = "0x6960704", VA = "0x6960704")]
	public void PlayContraction()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x6960DB8", Offset = "0x6960DB8", VA = "0x6960DB8")]
	private void _PlayExpansion()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x69606C4", Offset = "0x69606C4", VA = "0x69606C4")]
	public void PlayExpansion()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x695FD28", Offset = "0x695FD28", VA = "0x695FD28")]
	private void ShowHoverImg(bool show)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x6960E04", Offset = "0x6960E04", VA = "0x6960E04")]
	private void ToggleHoverImg()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x6960E44", Offset = "0x6960E44", VA = "0x6960E44")]
	private void SetBattery(float level)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x6960E68", Offset = "0x6960E68", VA = "0x6960E68")]
	public WatchDriver()
	{
	}
}
[Token(Token = "0x20000FE")]
public class ReportManager : MonoSingleton<ReportManager>
{
	[Token(Token = "0x20000FF")]
	public class ReportMapIdTags : ReportTags
	{
		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string map_id;

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x6961F08", Offset = "0x6961F08", VA = "0x6961F08")]
		public ReportMapIdTags()
		{
		}
	}

	[Token(Token = "0x2000100")]
	public class ReportRequestTags : ReportTags
	{
		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string path;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string map_id;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int result;

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x696202C", Offset = "0x696202C", VA = "0x696202C")]
		public ReportRequestTags()
		{
		}
	}

	[Token(Token = "0x2000101")]
	public class ReportServerCodeTags : ReportMapIdTags
	{
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string server_version;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string server_code;

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x6961F60", Offset = "0x6961F60", VA = "0x6961F60")]
		public ReportServerCodeTags()
		{
		}
	}

	[Token(Token = "0x2000102")]
	public class RecyclingReportTags : ReportTags
	{
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int recycle_flag;

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x6961EF8", Offset = "0x6961EF8", VA = "0x6961EF8")]
		public RecyclingReportTags()
		{
		}
	}

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private USIReporter reporter;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool hasInit;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string ip;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string port;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string pod;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string dc;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string nameSpace;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string PROP_TAKE_OUT;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float timerReport;

	[Token(Token = "0x4000800")]
	private const float ReportBlank = 15f;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> reportFps;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int maxQueue;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int currentCode;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float stateLastTime;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private NetworkManager netMgr;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private object sendQueues;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x69610D4", Offset = "0x69610D4", VA = "0x69610D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x6961188", Offset = "0x6961188", VA = "0x6961188")]
	private void OnServerStateChanged(ServerStateChangeEventArgs args)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x6961364", Offset = "0x6961364", VA = "0x6961364")]
	private void InitBaseData(string ip, int port)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x6961580", Offset = "0x6961580", VA = "0x6961580")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x6961590", Offset = "0x6961590", VA = "0x6961590")]
	private void UpdateReport()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x696196C", Offset = "0x696196C", VA = "0x696196C")]
	private List<int> GetSendQueueSize()
	{
		return null;
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x6961C10", Offset = "0x6961C10", VA = "0x6961C10")]
	private List<int> GetReceiveQueueSize()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x6961EB4", Offset = "0x6961EB4", VA = "0x6961EB4")]
	public void ReportRecycling()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x6961928", Offset = "0x6961928", VA = "0x6961928")]
	public void ReportOnlineCount(int count, string mapId)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x6961BD8", Offset = "0x6961BD8", VA = "0x6961BD8")]
	public void ReportQueueRate(string name, int count, string mapId)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x6961818", Offset = "0x6961818", VA = "0x6961818")]
	public void ReportFPS(int count, string mapId)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x696185C", Offset = "0x696185C", VA = "0x696185C")]
	public void ReportServerState(int count, string mapId)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x69618A0", Offset = "0x69618A0", VA = "0x69618A0")]
	public void ReportServerStateDuration(int count, string mapId, string serverCode)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x696153C", Offset = "0x696153C", VA = "0x696153C")]
	public void ReportMapError(int count, string mapId)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x69618E4", Offset = "0x69618E4", VA = "0x69618E4")]
	public void ReportTcpState(int count)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x69614F8", Offset = "0x69614F8", VA = "0x69614F8")]
	public void ReportMapLoadTime(int count, string mapId)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x6961FC4", Offset = "0x6961FC4", VA = "0x6961FC4")]
	public void ReportRequestResult(string path, int result)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x6961E7C", Offset = "0x6961E7C", VA = "0x6961E7C")]
	public void ReportPropCount(string name, int count, string mapId)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x6961810", Offset = "0x6961810", VA = "0x6961810")]
	public bool IsLinuxDS()
	{
		return default(bool);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x6962094", Offset = "0x6962094", VA = "0x6962094")]
	public ReportManager()
	{
	}
}
[Token(Token = "0x2000103")]
public class PropsCreateHelper : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000104")]
	[CompilerGenerated]
	private struct <StartCreate>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropsCreateHelper <>4__this;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public long propId;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sign;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<Result>.Awaiter <>u__1;

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x6962AB4", Offset = "0x6962AB4", VA = "0x6962AB4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x6962EFC", Offset = "0x6962EFC", VA = "0x6962EFC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static uint _localPropIdPool;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CustomGrabInteractable _interactable;

	[Token(Token = "0x170000B3")]
	public uint LocalPropId
	{
		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x69621A4", Offset = "0x69621A4", VA = "0x69621A4")]
		[CompilerGenerated]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x69621AC", Offset = "0x69621AC", VA = "0x69621AC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x69621B4", Offset = "0x69621B4", VA = "0x69621B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x69622E4", Offset = "0x69622E4", VA = "0x69622E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x6962430", Offset = "0x6962430", VA = "0x6962430")]
	[AsyncStateMachine(typeof(<StartCreate>d__8))]
	public void StartCreate(long propId, int sign)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x6962524", Offset = "0x6962524", VA = "0x6962524")]
	private void OnClientLoadProp(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x6962910", Offset = "0x6962910", VA = "0x6962910")]
	private void OnGrabObjectCreated(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x6962AAC", Offset = "0x6962AAC", VA = "0x6962AAC")]
	public PropsCreateHelper()
	{
	}
}
[Token(Token = "0x2000105")]
public class ReportEvidence : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject deletButton;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x6962F08", Offset = "0x6962F08", VA = "0x6962F08", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x6962F28", Offset = "0x6962F28", VA = "0x6962F28", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x6962F48", Offset = "0x6962F48", VA = "0x6962F48")]
	public ReportEvidence()
	{
	}
}
[Token(Token = "0x2000106")]
public class ApplicationOpenTool : MonoBehaviour
{
	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x6962F50", Offset = "0x6962F50", VA = "0x6962F50")]
	public void OpenUrl(string url)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x6962F5C", Offset = "0x6962F5C", VA = "0x6962F5C")]
	public void OpenAndroidDedicatedApplication(string marketPackage, string appPackage)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x69633F0", Offset = "0x69633F0", VA = "0x69633F0")]
	public ApplicationOpenTool()
	{
	}
}
[Token(Token = "0x2000107")]
public class ColliderDetect : MonoBehaviour
{
	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x69633F8", Offset = "0x69633F8", VA = "0x69633F8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x69633FC", Offset = "0x69633FC", VA = "0x69633FC")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x6963400", Offset = "0x6963400", VA = "0x6963400")]
	public ColliderDetect()
	{
	}
}
[Token(Token = "0x2000108")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera _camera;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x6963408", Offset = "0x6963408", VA = "0x6963408")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x6963538", Offset = "0x6963538", VA = "0x6963538")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x2000109")]
public class UIEventListener : EventTrigger
{
	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<GameObject, PointerEventData> onClick;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<GameObject, PointerEventData> onDown;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<GameObject, PointerEventData> onEnter;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<GameObject, PointerEventData> onExit;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<GameObject, PointerEventData> onUp;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<GameObject, PointerEventData> onBeginDrag;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action<GameObject, PointerEventData> onEndDrag;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<GameObject, PointerEventData> onDrag;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<GameObject, PointerEventData> onScroll;

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x6963540", Offset = "0x6963540", VA = "0x6963540")]
	public static UIEventListener Get(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x6963600", Offset = "0x6963600", VA = "0x6963600", Slot = "27")]
	public override void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x696364C", Offset = "0x696364C", VA = "0x696364C", Slot = "25")]
	public override void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x6963698", Offset = "0x6963698", VA = "0x6963698", Slot = "21")]
	public override void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x69636E4", Offset = "0x69636E4", VA = "0x69636E4", Slot = "22")]
	public override void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x6963730", Offset = "0x6963730", VA = "0x6963730", Slot = "26")]
	public override void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x696377C", Offset = "0x696377C", VA = "0x696377C", Slot = "34")]
	public override void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x69637C8", Offset = "0x69637C8", VA = "0x69637C8", Slot = "23")]
	public override void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x6963814", Offset = "0x6963814", VA = "0x6963814", Slot = "35")]
	public override void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x6963860", Offset = "0x6963860", VA = "0x6963860", Slot = "30")]
	public override void OnScroll(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x69638AC", Offset = "0x69638AC", VA = "0x69638AC")]
	public UIEventListener()
	{
	}
}
[Token(Token = "0x200010A")]
[RequireComponent(typeof(InputFieldHandler))]
public class CorrectKeyboard : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200010B")]
	[CompilerGenerated]
	private struct <OnSelect>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CorrectKeyboard <>4__this;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x69640E8", Offset = "0x69640E8", VA = "0x69640E8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x6964298", Offset = "0x6964298", VA = "0x6964298", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputFieldHandler _inputHandler;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_InputField _inputField;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isHide;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _characterLimit;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentHeight;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform KeyboardRoot;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool dynamicFollow;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float startDistance;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startOffset;

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x69638B4", Offset = "0x69638B4", VA = "0x69638B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x6963B74", Offset = "0x6963B74", VA = "0x6963B74")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x6963B78", Offset = "0x6963B78", VA = "0x6963B78")]
	private void ChangeKeyBoardPos()
	{
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x6963A90", Offset = "0x6963A90", VA = "0x6963A90")]
	private void CalculateKeyBoardPos(bool start = false)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x6963C7C", Offset = "0x6963C7C", VA = "0x6963C7C")]
	private float CalculatePos(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x6963D78", Offset = "0x6963D78", VA = "0x6963D78")]
	private int SingleCharCount(char c)
	{
		return default(int);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x6963DD4", Offset = "0x6963DD4", VA = "0x6963DD4")]
	private int GetCount(string value)
	{
		return default(int);
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x6963E5C", Offset = "0x6963E5C", VA = "0x6963E5C")]
	[AsyncStateMachine(typeof(<OnSelect>d__16))]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x6963F14", Offset = "0x6963F14", VA = "0x6963F14")]
	public void OnDeselecet()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x6963F18", Offset = "0x6963F18", VA = "0x6963F18")]
	public void HideKeyboard()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x6963F5C", Offset = "0x6963F5C", VA = "0x6963F5C")]
	public void HideAllKeyboard()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x6963F88", Offset = "0x6963F88", VA = "0x6963F88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x6963FB4", Offset = "0x6963FB4", VA = "0x6963FB4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x6964034", Offset = "0x6964034", VA = "0x6964034")]
	public CorrectKeyboard()
	{
	}
}
[Token(Token = "0x200010C")]
public class WorldBuilderEnvironmentCommandEntry
{
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dictionary<BuilderEnvironmentType, string> commandList;

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x69642A4", Offset = "0x69642A4", VA = "0x69642A4")]
	public string GetCommand(BuilderEnvironmentType envType, string name)
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x69643F0", Offset = "0x69643F0", VA = "0x69643F0")]
	public WorldBuilderEnvironmentCommandEntry()
	{
	}
}
[Token(Token = "0x200010D")]
public class WorldBuilderEnvironment : Singleton<WorldBuilderEnvironment>
{
	[Token(Token = "0x4000830")]
	public const string CMD_SaveBuilderDataToFile = "SaveBuilderDataToFile";

	[Token(Token = "0x4000831")]
	public const string CMD_UploadDataFile = "UploadDataFile";

	[Token(Token = "0x4000832")]
	public const string CMD_GlobalCheck = "GlobalCheck";

	[Token(Token = "0x4000833")]
	public const string CMD_GetAllUsedAssetIDJson = "GetAllUsedAssetIDJson";

	[Token(Token = "0x4000834")]
	public const string CMD_UploadAuditPictures = "UploadAuditPictures";

	[Token(Token = "0x4000835")]
	public const string CMD_GetCurrentCapacity = "GetCurrentCapacity";

	[Token(Token = "0x4000836")]
	public const string CMD_UploadThumbnails = "UploadThumbnails";

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly Dictionary<string, WorldBuilderEnvironmentCommandEntry> commandTable;

	[Token(Token = "0x170000B4")]
	public BuilderEnvironmentType EnvironmentType
	{
		[Token(Token = "0x60008FC")]
		[Address(RVA = "0x6964524", Offset = "0x6964524", VA = "0x6964524")]
		[CompilerGenerated]
		get
		{
			return default(BuilderEnvironmentType);
		}
		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x696452C", Offset = "0x696452C", VA = "0x696452C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public int EnvironmentIntType
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x6964534", Offset = "0x6964534", VA = "0x6964534")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x69643F8", Offset = "0x69643F8", VA = "0x69643F8")]
	public string GetCommandName(string name)
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x696453C", Offset = "0x696453C", VA = "0x696453C")]
	public void SwitchEnvironment(BuilderEnvironmentType envType)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x6964544", Offset = "0x6964544", VA = "0x6964544")]
	private void LeaveEnvironment(BuilderEnvironmentType oldEnvType, BuilderEnvironmentType newEnvType)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x696454C", Offset = "0x696454C", VA = "0x696454C")]
	private void EnterWorlderBuilder()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x6964548", Offset = "0x6964548", VA = "0x6964548")]
	private void EnterAvatarStudio()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x6964550", Offset = "0x6964550", VA = "0x6964550")]
	public WorldBuilderEnvironment()
	{
	}
}
[Token(Token = "0x200010E")]
public enum BuilderEnvironmentType
{
	[Token(Token = "0x400083A")]
	WorldBuilder,
	[Token(Token = "0x400083B")]
	AvatarStudio
}
[Token(Token = "0x200010F")]
public class ElementVisibleMono : MonoBehaviour
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EditMode visibleMode;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private EditMode _currMode;

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x6964BAC", Offset = "0x6964BAC", VA = "0x6964BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x6964BB8", Offset = "0x6964BB8", VA = "0x6964BB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x6964D78", Offset = "0x6964D78", VA = "0x6964D78")]
	public ElementVisibleMono()
	{
	}
}
[Token(Token = "0x2000110")]
public class JoystickMono : MonoBehaviour
{
	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform leftHandTrans;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform rightHandTrans;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform leftGrab;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform rightGrab;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform leftTrigger;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform rightTrigger;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform uiTrans;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BuilderHandController leftHandCtrl;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BuilderHandController rightHandCtrl;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, Dictionary<AnySideControllerButton, Transform>> btnDic;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<ControllerButton> _checkBtnList;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int BaseLayerID;

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x6964D80", Offset = "0x6964D80", VA = "0x6964D80")]
	private void Start()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x69651B0", Offset = "0x69651B0", VA = "0x69651B0")]
	public void ClearCheckBtnList()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x6965200", Offset = "0x6965200", VA = "0x6965200")]
	public void AddCheckBtn(int btnInt)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x6965134", Offset = "0x6965134", VA = "0x6965134")]
	private void SetupUI()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x69652A8", Offset = "0x69652A8", VA = "0x69652A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x6964FB8", Offset = "0x6964FB8", VA = "0x6964FB8")]
	private void ChangeParent(Transform trans, Transform parent)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x69654CC", Offset = "0x69654CC", VA = "0x69654CC")]
	public Transform FindChild(int type, string path)
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x69654FC", Offset = "0x69654FC", VA = "0x69654FC")]
	public Transform FindChildByButton(int type, int button)
	{
		return null;
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x69658A0", Offset = "0x69658A0", VA = "0x69658A0")]
	public JoystickMono()
	{
	}
}
[Token(Token = "0x2000111")]
public class WorldBuilderAudit
{
	[Token(Token = "0x2000112")]
	private class NotPubData
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string photos;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string positions;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string rotations;

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x6967C84", Offset = "0x6967C84", VA = "0x6967C84")]
		public List<AuditData> GetDatas()
		{
			return null;
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x6967ED8", Offset = "0x6967ED8", VA = "0x6967ED8")]
		public NotPubData()
		{
		}
	}

	[Token(Token = "0x2000113")]
	public class CaptureImageInfo
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 cameraPos;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 cameraRot;

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x6966548", Offset = "0x6966548", VA = "0x6966548")]
		public CaptureImageInfo(string name, int width, int height, Vector3 cameraPos, Vector3 cameraRot)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000114")]
	[CompilerGenerated]
	private struct <StartCapture>d__20 : IAsyncStateMachine
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <tempTime>5__2;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UniTask<ResultWithObject>.Awaiter <>u__1;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AuditData <localFile>5__3;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<AuditData> <tempData>5__4;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private YieldAwaitable.Awaiter <>u__2;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UniTask<AuditData>.Awaiter <>u__3;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UniTask<List<AuditData>>.Awaiter <>u__4;

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x6967EE0", Offset = "0x6967EE0", VA = "0x6967EE0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x6969278", Offset = "0x6969278", VA = "0x6969278", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000115")]
	[CompilerGenerated]
	private struct <WaitTimes>d__23 : IAsyncStateMachine
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UniTask.Awaiter <>u__1;

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x6969284", Offset = "0x6969284", VA = "0x6969284", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x69696A8", Offset = "0x69696A8", VA = "0x69696A8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000116")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AuditData[] auditDatas;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x69696B4", Offset = "0x69696B4", VA = "0x69696B4")]
		public <>c__DisplayClass24_0()
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000118")]
	[CompilerGenerated]
	private struct <CaptureFixedPerspective>d__24 : IAsyncStateMachine
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<List<AuditData>> <>t__builder;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass24_0 <>8__1;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<byte[]> <texDatas>5__2;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UniTask<List<AuditData>>.Awaiter <>u__3;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x69697B8", Offset = "0x69697B8", VA = "0x69697B8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x696A5EC", Offset = "0x696A5EC", VA = "0x696A5EC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200011A")]
	[CompilerGenerated]
	private struct <CaptureAuditFailed>d__25 : IAsyncStateMachine
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<List<AuditData>> <>t__builder;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <failedCnt>5__2;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<byte[]> <texDatas>5__3;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UniTask<List<AuditData>>.Awaiter <>u__3;

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x221C57C", Offset = "0x221C57C", VA = "0x221C57C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x221D154", Offset = "0x221D154", VA = "0x221D154", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200011B")]
	[CompilerGenerated]
	private struct <CaptureFirstPerspective>d__26 : IAsyncStateMachine
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<List<AuditData>> <>t__builder;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x221D1AC", Offset = "0x221D1AC", VA = "0x221D1AC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x221D6D8", Offset = "0x221D6D8", VA = "0x221D6D8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200011C")]
	[CompilerGenerated]
	private struct <CaptureThumbnails>d__27 : IAsyncStateMachine
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<List<AuditData>> <>t__builder;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AuditData <horizon>5__2;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<AuditData>.Awaiter <>u__1;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UniTask.Awaiter <>u__2;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UniTask<List<AuditData>>.Awaiter <>u__3;

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x221D730", Offset = "0x221D730", VA = "0x221D730", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x221E41C", Offset = "0x221E41C", VA = "0x221E41C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200011D")]
	[CompilerGenerated]
	private struct <CaptureCardThumbnail>d__28 : IAsyncStateMachine
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<AuditData> <>t__builder;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<AuditData>.Awaiter <>u__1;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<List<AuditData>>.Awaiter <>u__2;

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x221E474", Offset = "0x221E474", VA = "0x221E474", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x221ECD0", Offset = "0x221ECD0", VA = "0x221ECD0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200011E")]
	[CompilerGenerated]
	private struct <UploadCaptures>d__32 : IAsyncStateMachine
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<List<AuditData>> <>t__builder;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AuditData> datas;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<string> <uploadResults>5__2;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<List<string>> <uploadDatas>5__3;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> <uploadRes>5__5;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UniTask<List<string>>.Awaiter <>u__1;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UniTask.Awaiter <>u__2;

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x221ED28", Offset = "0x221ED28", VA = "0x221ED28", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x221F8F8", Offset = "0x221F8F8", VA = "0x221F8F8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200011F")]
	[CompilerGenerated]
	private struct <CaptureThumbnailHorizon>d__33 : IAsyncStateMachine
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<AuditData> <>t__builder;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int level;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<AuditData>.Awaiter <>u__1;

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x221F950", Offset = "0x221F950", VA = "0x221F950", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x221FE3C", Offset = "0x221FE3C", VA = "0x221FE3C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000120")]
	[CompilerGenerated]
	private struct <CaptureThumbnailVertical>d__34 : IAsyncStateMachine
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<AuditData> <>t__builder;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<AuditData>.Awaiter <>u__1;

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x221FE94", Offset = "0x221FE94", VA = "0x221FE94", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x2220374", Offset = "0x2220374", VA = "0x2220374", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000121")]
	[CompilerGenerated]
	private struct <DoCapture>d__35 : IAsyncStateMachine
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<AuditData> <>t__builder;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int width;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int height;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 angle;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string name;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UniTask<Command>.Awaiter <>u__1;

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x22203CC", Offset = "0x22203CC", VA = "0x22203CC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x2220AC0", Offset = "0x2220AC0", VA = "0x2220AC0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000122")]
	[CompilerGenerated]
	private struct <GetCaptureTextureDataAsync>d__37 : IAsyncStateMachine
	{
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<byte[]> <>t__builder;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int width;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int height;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldBuilderAudit <>4__this;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] <texData>5__2;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture <rt>5__3;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <hasError>5__4;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AsyncGPUReadbackRequest <request>5__5;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x2220B18", Offset = "0x2220B18", VA = "0x2220B18", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x2221108", Offset = "0x2221108", VA = "0x2221108", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AuditData> m_FixedPerspective;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<AuditData> m_FirstPerspective;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AuditData> m_AuditFailed;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AuditData> m_Thumbnail;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _captureInterval;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _tempTime;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UserData _userData;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BuilderWorldDataModel _worldData;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Camera CaptureCamera;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _baseName;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _capturePath;

	[Token(Token = "0x4000855")]
	private const int _fixedViewImgCount = 10;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<CaptureImageInfo> _auditFixedViewCaptureInfo;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _isStart;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CancellationTokenSource _cancelToken;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _hasUpload;

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x6965978", Offset = "0x6965978", VA = "0x6965978")]
	public WorldBuilderAudit()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x69665CC", Offset = "0x69665CC", VA = "0x69665CC")]
	public void SetAutidFailed(params AuditData[] datas)
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x69667C8", Offset = "0x69667C8", VA = "0x69667C8")]
	public void ReleaseData()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x696690C", Offset = "0x696690C", VA = "0x696690C")]
	[AsyncStateMachine(typeof(<StartCapture>d__20))]
	public void StartCapture()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x69668F0", Offset = "0x69668F0", VA = "0x69668F0")]
	public void StopCapture()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x69669C0", Offset = "0x69669C0", VA = "0x69669C0")]
	[AsyncStateMachine(typeof(<WaitTimes>d__23))]
	private UniTask WaitTimes()
	{
		return default(UniTask);
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x6966B08", Offset = "0x6966B08", VA = "0x6966B08")]
	[AsyncStateMachine(typeof(<CaptureFixedPerspective>d__24))]
	public UniTask<List<AuditData>> CaptureFixedPerspective()
	{
		return default(UniTask<List<AuditData>>);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x6966BEC", Offset = "0x6966BEC", VA = "0x6966BEC")]
	[AsyncStateMachine(typeof(<CaptureAuditFailed>d__25))]
	public UniTask<List<AuditData>> CaptureAuditFailed()
	{
		return default(UniTask<List<AuditData>>);
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x6966CEC", Offset = "0x6966CEC", VA = "0x6966CEC")]
	[AsyncStateMachine(typeof(<CaptureFirstPerspective>d__26))]
	public UniTask<List<AuditData>> CaptureFirstPerspective()
	{
		return default(UniTask<List<AuditData>>);
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x6966DDC", Offset = "0x6966DDC", VA = "0x6966DDC")]
	[AsyncStateMachine(typeof(<CaptureThumbnails>d__27))]
	public UniTask<List<AuditData>> CaptureThumbnails()
	{
		return default(UniTask<List<AuditData>>);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x6966ED8", Offset = "0x6966ED8", VA = "0x6966ED8")]
	[AsyncStateMachine(typeof(<CaptureCardThumbnail>d__28))]
	public UniTask<AuditData> CaptureCardThumbnail()
	{
		return default(UniTask<AuditData>);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x6966FD4", Offset = "0x6966FD4", VA = "0x6966FD4")]
	private void PreCapture()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x69672E4", Offset = "0x69672E4", VA = "0x69672E4")]
	private void AfterCapture()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x69666F8", Offset = "0x69666F8", VA = "0x69666F8")]
	private void CleanLocalFiles(List<AuditData> datas)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x69675F4", Offset = "0x69675F4", VA = "0x69675F4")]
	[AsyncStateMachine(typeof(<UploadCaptures>d__32))]
	private UniTask<List<AuditData>> UploadCaptures(List<AuditData> datas)
	{
		return default(UniTask<List<AuditData>>);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x69676F0", Offset = "0x69676F0", VA = "0x69676F0")]
	[AsyncStateMachine(typeof(<CaptureThumbnailHorizon>d__33))]
	private UniTask<AuditData> CaptureThumbnailHorizon(int level)
	{
		return default(UniTask<AuditData>);
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x69677F0", Offset = "0x69677F0", VA = "0x69677F0")]
	[AsyncStateMachine(typeof(<CaptureThumbnailVertical>d__34))]
	private UniTask<AuditData> CaptureThumbnailVertical()
	{
		return default(UniTask<AuditData>);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x69678E4", Offset = "0x69678E4", VA = "0x69678E4")]
	[AsyncStateMachine(typeof(<DoCapture>d__35))]
	private UniTask<AuditData> DoCapture(Vector3 position, Vector3 angle, int width, int height, string name)
	{
		return default(UniTask<AuditData>);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x6967A2C", Offset = "0x6967A2C", VA = "0x6967A2C")]
	public void SetCaptureCameraData(Vector3 position, Vector3 angle)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x6967AAC", Offset = "0x6967AAC", VA = "0x6967AAC")]
	[AsyncStateMachine(typeof(<GetCaptureTextureDataAsync>d__37))]
	public UniTask<byte[]> GetCaptureTextureDataAsync(int width, int height)
	{
		return default(UniTask<byte[]>);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x6967BB4", Offset = "0x6967BB4", VA = "0x6967BB4")]
	private string SaveContent(byte[] bytes, string filename)
	{
		return null;
	}
}
[Token(Token = "0x2000123")]
public class WorldBuilderDataSaver
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000124")]
	[CompilerGenerated]
	private struct <UploadMapData>d__5 : IAsyncStateMachine
	{
		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<ResultWithObject> <>t__builder;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string type;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WorldBuilderDataSaver <>4__this;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<IMultipartFormSection> <formData>5__2;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BuilderWorldDataModel <worldDataModel>5__3;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private UniTask<ResultWithObject>.Awaiter <>u__2;

		[Token(Token = "0x6000950")]
		[Address(RVA = "0x2222978", Offset = "0x2222978", VA = "0x2222978", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x2223638", Offset = "0x2223638", VA = "0x2223638", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000125")]
	[CompilerGenerated]
	private struct <SaveWorldDataToLocalFileAsync>d__10 : IAsyncStateMachine
	{
		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldBuilderDataSaver <>4__this;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x2223690", Offset = "0x2223690", VA = "0x2223690", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x2223F30", Offset = "0x2223F30", VA = "0x2223F30", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000126")]
	[CompilerGenerated]
	private struct <GetWorldDataSnapshotAsync>d__12 : IAsyncStateMachine
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<byte[]> <>t__builder;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderDataSaver <>4__this;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x6000954")]
		[Address(RVA = "0x2223F3C", Offset = "0x2223F3C", VA = "0x2223F3C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0x22247F8", Offset = "0x22247F8", VA = "0x22247F8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40008BF")]
	protected const float SaveWorldCD = 30f;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected float _syncWorldCD;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected float _syncWorldTime;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected float _saveWorldTime;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x2221160", Offset = "0x2221160", VA = "0x2221160")]
	public void SetSceneDataUploadCd(int duration)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x2221170", Offset = "0x2221170", VA = "0x2221170", Slot = "4")]
	[AsyncStateMachine(typeof(<UploadMapData>d__5))]
	public virtual UniTask<ResultWithObject> UploadMapData(string type)
	{
		return default(UniTask<ResultWithObject>);
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x2221270", Offset = "0x2221270", VA = "0x2221270")]
	public void OnUpdate(float delta)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x2221320", Offset = "0x2221320", VA = "0x2221320", Slot = "5")]
	protected virtual void SerializeData(BinaryWriter writer, byte[] sceneData)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x2221560", Offset = "0x2221560", VA = "0x2221560")]
	protected bool DeserializeData(BinaryReader reader, ref long timestamp, ref byte[] sceneData)
	{
		return default(bool);
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x2221890", Offset = "0x2221890", VA = "0x2221890", Slot = "6")]
	public virtual void SaveWorldDataToLocalFile()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x2221D20", Offset = "0x2221D20", VA = "0x2221D20", Slot = "7")]
	[AsyncStateMachine(typeof(<SaveWorldDataToLocalFileAsync>d__10))]
	public virtual void SaveWorldDataToLocalFileAsync()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x2221DD8", Offset = "0x2221DD8", VA = "0x2221DD8")]
	public bool LoadWorldDataFromLocalFile(ref long timestamp, ref byte[] sceneData)
	{
		return default(bool);
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x222254C", Offset = "0x222254C", VA = "0x222254C")]
	[AsyncStateMachine(typeof(<GetWorldDataSnapshotAsync>d__12))]
	public UniTask<byte[]> GetWorldDataSnapshotAsync()
	{
		return default(UniTask<byte[]>);
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x2222624", Offset = "0x2222624", VA = "0x2222624")]
	public bool LoadMapDataFromSnapshot(byte[] snapshot, ref byte[] sceneData)
	{
		return default(bool);
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x2222968", Offset = "0x2222968", VA = "0x2222968")]
	public WorldBuilderDataSaver()
	{
	}
}
[Token(Token = "0x2000127")]
public class WorldBuilderEventManager : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WorldMapType mapType;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x2224850", Offset = "0x2224850", VA = "0x2224850")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x22249D4", Offset = "0x22249D4", VA = "0x22249D4")]
	private void CollectedSuccessForReward(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x2224B54", Offset = "0x2224B54", VA = "0x2224B54")]
	private void CollectedSuccessForRewardAvatar(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x2224CD4", Offset = "0x2224CD4", VA = "0x2224CD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x2224E58", Offset = "0x2224E58", VA = "0x2224E58")]
	public WorldBuilderEventManager()
	{
	}
}
[Token(Token = "0x2000128")]
public class WorldBuilderInputHandler
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private KeyboardManager.RaycastCall _prevRaycastCall;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private KeyboardManager.TriggerPressedCall _prevTriggerPressedCall;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _prevInputModuleCamera;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _needResetInputModuleCamera;

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x2224E60", Offset = "0x2224E60", VA = "0x2224E60")]
	public void SetKeyboardManagerSettings()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x2224FFC", Offset = "0x2224FFC", VA = "0x2224FFC")]
	public void ResetKeyboardManagerSettings()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x22250AC", Offset = "0x22250AC", VA = "0x22250AC")]
	public void EnableMainInput()
	{
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x2225380", Offset = "0x2225380", VA = "0x2225380")]
	public void DisableMainInput()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x2225544", Offset = "0x2225544", VA = "0x2225544")]
	public void EnableWorldInput()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x2225810", Offset = "0x2225810", VA = "0x2225810")]
	public void DisableWorldInput()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x2225998", Offset = "0x2225998", VA = "0x2225998")]
	public bool TryGetCurrent3DRaycastHit(out RaycastHit raycastHit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x2225AA0", Offset = "0x2225AA0", VA = "0x2225AA0")]
	public bool IsTriggerPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x2225AEC", Offset = "0x2225AEC", VA = "0x2225AEC")]
	public void EnableInput(bool isEnabled)
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x2225B48", Offset = "0x2225B48", VA = "0x2225B48")]
	public WorldBuilderInputHandler()
	{
	}
}
[Token(Token = "0x2000129")]
public class WorldBuilderManager : MonoBehaviour
{
	[Token(Token = "0x200012A")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass47_0
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WorldBuilderSystem builderSystem;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldBuilderManager <>4__this;

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x222BAB8", Offset = "0x222BAB8", VA = "0x222BAB8")]
		public <>c__DisplayClass47_0()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x222BAC0", Offset = "0x222BAC0", VA = "0x222BAC0")]
		internal bool <Start>b__0()
		{
			return default(bool);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x222BADC", Offset = "0x222BADC", VA = "0x222BADC")]
		internal bool <Start>b__1()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200012B")]
	[CompilerGenerated]
	private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderManager <>4__this;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass47_0 <>8__1;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x222BE48", Offset = "0x222BE48", VA = "0x222BE48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x222BE90", Offset = "0x222BE90", VA = "0x222BE90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x2226230", Offset = "0x2226230", VA = "0x2226230")]
		[DebuggerHidden]
		public <Start>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x222BAF8", Offset = "0x222BAF8", VA = "0x222BAF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0x222BAFC", Offset = "0x222BAFC", VA = "0x222BAFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x222BE50", Offset = "0x222BE50", VA = "0x222BE50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012C")]
	[CompilerGenerated]
	private sealed class <ChangeToPreviewModeInternal>d__58 : IEnumerator<object>, IEnumerator, System.IDisposable
	{
		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderManager <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x222C510", Offset = "0x222C510", VA = "0x222C510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x222C558", Offset = "0x222C558", VA = "0x222C558", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0x22280C4", Offset = "0x22280C4", VA = "0x22280C4")]
		[DebuggerHidden]
		public <ChangeToPreviewModeInternal>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x222BE98", Offset = "0x222BE98", VA = "0x222BE98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x222BE9C", Offset = "0x222BE9C", VA = "0x222BE9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x222C518", Offset = "0x222C518", VA = "0x222C518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200012D")]
	[CompilerGenerated]
	private struct <PlayWorldBuilderBGM>d__65 : IAsyncStateMachine
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<Result> <>t__builder;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public WorldBuilderManager <>4__this;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ResultWithObject <resultWithObject>5__2;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private UniTask<Command>.Awaiter <>u__1;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x222C560", Offset = "0x222C560", VA = "0x222C560", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x222CAB4", Offset = "0x222CAB4", VA = "0x222CAB4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200012E")]
	[CompilerGenerated]
	private struct <PlayWorldBuilderBgm>d__88 : IAsyncStateMachine
	{
		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<Result> <>t__builder;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ResultWithObject <resultWithObject>5__2;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private UniTask<Command>.Awaiter <>u__1;

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x222CB0C", Offset = "0x222CB0C", VA = "0x222CB0C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x222CFEC", Offset = "0x222CFEC", VA = "0x222CFEC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WorldBuilderManager _instance;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuilderEnvironmentType EnvType;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject BuilderSystemObject;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject XROrigin;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera MainCamera;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrackedPoseDriver HMDDriver;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform ExitPreviewModeTips;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform GizmoRoot;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftControllerDriver;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightControllerDriver;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _lastEditPosition;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion _lastEditQuaternion;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _onApplictionQuit;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private KeyboardManager.KeyBoardScaleAndOffset _syncData;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WorldBuilderAudit _audit;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WorldBuilderUIHandler _worldBuilderUIHandler;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WorldBuilderDataSaver _worldBuilderDataSaver;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WorldBuilderInputHandler _worldBuilderInputHandler;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WorldBuilderSettings _worldBuilderSettings;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _mapID;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string currentBgName;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isDialogWindowOpen;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Action> toPreviewActions;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isLoadCompleted;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _tryStartToPreviewCount;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool changeModeEnable;

	[Token(Token = "0x170000B6")]
	public static WorldBuilderManager Instance
	{
		[Token(Token = "0x6000965")]
		[Address(RVA = "0x2225B50", Offset = "0x2225B50", VA = "0x2225B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B7")]
	public WorldBuilderAudit Audit
	{
		[Token(Token = "0x6000966")]
		[Address(RVA = "0x2225B98", Offset = "0x2225B98", VA = "0x2225B98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public WorldBuilderUIHandler UIHandler
	{
		[Token(Token = "0x6000967")]
		[Address(RVA = "0x2225BA0", Offset = "0x2225BA0", VA = "0x2225BA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B9")]
	public WorldBuilderDataSaver DataSaver
	{
		[Token(Token = "0x6000968")]
		[Address(RVA = "0x2225BA8", Offset = "0x2225BA8", VA = "0x2225BA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BA")]
	public WorldBuilderInputHandler InputHandler
	{
		[Token(Token = "0x6000969")]
		[Address(RVA = "0x2225BB0", Offset = "0x2225BB0", VA = "0x2225BB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public WorldBuilderSettings BuilderSettings
	{
		[Token(Token = "0x600096A")]
		[Address(RVA = "0x2225BB8", Offset = "0x2225BB8", VA = "0x2225BB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public string CurrentMapID
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x2225BC0", Offset = "0x2225BC0", VA = "0x2225BC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public bool IsOpenDialog
	{
		[Token(Token = "0x600096C")]
		[Address(RVA = "0x2225BC8", Offset = "0x2225BC8", VA = "0x2225BC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000BE")]
	public EditMode BuilderEditMode
	{
		[Token(Token = "0x600096D")]
		[Address(RVA = "0x2225BD0", Offset = "0x2225BD0", VA = "0x2225BD0")]
		[CompilerGenerated]
		get
		{
			return default(EditMode);
		}
		[Token(Token = "0x600096E")]
		[Address(RVA = "0x2225BD8", Offset = "0x2225BD8", VA = "0x2225BD8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x2225BE0", Offset = "0x2225BE0", VA = "0x2225BE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x22261BC", Offset = "0x22261BC", VA = "0x22261BC")]
	[IteratorStateMachine(typeof(<Start>d__47))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x2226258", Offset = "0x2226258", VA = "0x2226258")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x22262D4", Offset = "0x22262D4", VA = "0x22262D4")]
	private void DestroyWorld()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x22274F8", Offset = "0x22274F8", VA = "0x22274F8")]
	public void ClearAvatarStudioUIData()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x22275C4", Offset = "0x22275C4", VA = "0x22275C4")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x22275E0", Offset = "0x22275E0", VA = "0x22275E0")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x22275FC", Offset = "0x22275FC", VA = "0x22275FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x2225CF8", Offset = "0x2225CF8", VA = "0x2225CF8")]
	private void PreInitWorld()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x222765C", Offset = "0x222765C", VA = "0x222765C")]
	public void ChangeToEditMode()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x2227E50", Offset = "0x2227E50", VA = "0x2227E50")]
	public void ChangeToPreviewMode()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x2227FA4", Offset = "0x2227FA4", VA = "0x2227FA4")]
	private void OnPreviewActionOpt(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x2227F30", Offset = "0x2227F30", VA = "0x2227F30")]
	[IteratorStateMachine(typeof(<ChangeToPreviewModeInternal>d__58))]
	private IEnumerator ChangeToPreviewModeInternal()
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x2227970", Offset = "0x2227970", VA = "0x2227970")]
	public void ChangeToLastEditPosition()
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x22280EC", Offset = "0x22280EC", VA = "0x22280EC")]
	public void SaveEditPosition()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x2228144", Offset = "0x2228144", VA = "0x2228144")]
	public void ChangeToDefaultPreviewPosition()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x22285B8", Offset = "0x22285B8", VA = "0x22285B8")]
	public void ResetToGodView()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x2228760", Offset = "0x2228760", VA = "0x2228760")]
	public void InitWorld()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x2229AAC", Offset = "0x2229AAC", VA = "0x2229AAC")]
	private void CollectedSuccessForReward(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x22299A4", Offset = "0x22299A4", VA = "0x22299A4")]
	[AsyncStateMachine(typeof(<PlayWorldBuilderBGM>d__65))]
	private UniTask<Result> PlayWorldBuilderBGM()
	{
		return default(UniTask<Result>);
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x2226EFC", Offset = "0x2226EFC", VA = "0x2226EFC")]
	public void DeinitWorld()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x2229C2C", Offset = "0x2229C2C", VA = "0x2229C2C")]
	private void InitBuilderUI()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x2226B48", Offset = "0x2226B48", VA = "0x2226B48")]
	private void ResetMainUI()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x222A19C", Offset = "0x222A19C", VA = "0x222A19C")]
	private void OnTriggerClickOnDialog()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x222A2A4", Offset = "0x222A2A4", VA = "0x222A2A4")]
	private void OnDialogWindowOpen(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x222A458", Offset = "0x222A458", VA = "0x222A458")]
	private void OnLoadingComplete(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x2226744", Offset = "0x2226744", VA = "0x2226744")]
	public void EnableInputCallback(bool isEnabled)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x2229858", Offset = "0x2229858", VA = "0x2229858")]
	public void SetWorldCapacity(float capacity)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x222A6F0", Offset = "0x222A6F0", VA = "0x222A6F0")]
	public void SendWorldCapacityMaxEvent(float percent)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x222A7D8", Offset = "0x222A7D8", VA = "0x222A7D8")]
	public void SendDynamicObjMaxEvent()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x222A85C", Offset = "0x222A85C", VA = "0x222A85C")]
	public void OnBuilderSceneLoaded()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x222A944", Offset = "0x222A944", VA = "0x222A944")]
	public void OnSceneModifiedChanged(bool modified)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x222AA80", Offset = "0x222AA80", VA = "0x222AA80")]
	public void OnAvatarStudioValidityErrorCodeChange()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x222AB94", Offset = "0x222AB94", VA = "0x222AB94")]
	public void OnAvatarStudioCapacityChange(CreatorBodyPartType partType)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x222AD54", Offset = "0x222AD54", VA = "0x222AD54")]
	public void OnAvatarStudioBodyPartAttached(CreatorBodyPartType partType)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x222ADDC", Offset = "0x222ADDC", VA = "0x222ADDC")]
	public void OnAvatarStudioPinchValueChange()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x222AEE4", Offset = "0x222AEE4", VA = "0x222AEE4")]
	public void onAvatarStudioPreviewModeChange(bool enable)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x222AFD0", Offset = "0x222AFD0", VA = "0x222AFD0")]
	public void HandlePreviewButton()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x222AFD4", Offset = "0x222AFD4", VA = "0x222AFD4")]
	public void HandleMenuButton(bool isLeft)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x222B17C", Offset = "0x222B17C", VA = "0x222B17C")]
	private void HandlePrimaryButton(bool isLeft)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x222B3BC", Offset = "0x222B3BC", VA = "0x222B3BC")]
	private void TryRecenter()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x222B58C", Offset = "0x222B58C", VA = "0x222B58C")]
	public void SetSceneDataUploadCd(int duration)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x222B5A4", Offset = "0x222B5A4", VA = "0x222B5A4")]
	[AsyncStateMachine(typeof(<PlayWorldBuilderBgm>d__88))]
	private UniTask<Result> PlayWorldBuilderBgm()
	{
		return default(UniTask<Result>);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x222B690", Offset = "0x222B690", VA = "0x222B690")]
	private void StopWorldBuilderBgm()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x222747C", Offset = "0x222747C", VA = "0x222747C")]
	private void ClearMusicNotifyInfo()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x222B70C", Offset = "0x222B70C", VA = "0x222B70C")]
	private void SetRuntimeWwiseListener()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x2227D10", Offset = "0x2227D10", VA = "0x2227D10")]
	private void SetEditorWwiseListener()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x222A620", Offset = "0x222A620", VA = "0x222A620")]
	private void StartWBGuideSetting()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x222B878", Offset = "0x222B878", VA = "0x222B878")]
	private bool InPrologueGuide()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x222B8E8", Offset = "0x222B8E8", VA = "0x222B8E8")]
	private bool InWBGuide()
	{
		return default(bool);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x222B97C", Offset = "0x222B97C", VA = "0x222B97C")]
	private void ClearPrimitiveName()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x222B9F8", Offset = "0x222B9F8", VA = "0x222B9F8")]
	public WorldBuilderManager()
	{
	}
}
[Token(Token = "0x200012F")]
public class WorldBuilderSettings
{
	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float _prevLodBias;

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x2227634", Offset = "0x2227634", VA = "0x2227634")]
	public void InitLodBias()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x2226EF0", Offset = "0x2226EF0", VA = "0x2226EF0")]
	public void ResetLodBias()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x2227968", Offset = "0x2227968", VA = "0x2227968")]
	public void SetBuilderModeLodBias(float lodBias = 12f)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x222C508", Offset = "0x222C508", VA = "0x222C508")]
	public void SetPreviewModeLodBias(float lodBias = 12f)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x222762C", Offset = "0x222762C", VA = "0x222762C")]
	public WorldBuilderSettings()
	{
	}
}
[Token(Token = "0x2000130")]
public class WorldBuilderUIHandler
{
	[Token(Token = "0x4000906")]
	private const float _dialogDepth = 0.55f;

	[Token(Token = "0x4000907")]
	private const float _dialogHeight = -0.32f;

	[Token(Token = "0x4000908")]
	private const float _dialogScale = 0.00045f;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform _mainTrackTarget;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _mainTrackCalibrateTarget;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _mainCanvasScale;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _mainDepthOffset;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _mainHeightOffset;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _mainHmdTarget;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _mainHmdCalibrateTarget;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _mainViewportTarget;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _mainViewportCalibrateTarget;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _mainHandTarget;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _mainHandCalibrateTarget;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _mainHandPositionOffset;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _mainHandRotationOffset;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isMainUIVisible;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _isBuilderUIVisible;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool _isLock;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _lastKeydownTime;

	[Token(Token = "0x170000C3")]
	public bool IsMainUIVisible
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x222D044", Offset = "0x222D044", VA = "0x222D044")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C4")]
	public bool IsBuilderUIVisible
	{
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x222D04C", Offset = "0x222D04C", VA = "0x222D04C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x2229EAC", Offset = "0x2229EAC", VA = "0x2229EAC")]
	public void InitBuilderUI()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x2226E24", Offset = "0x2226E24", VA = "0x2226E24")]
	public void DeinitBuilderUI()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x2227974", Offset = "0x2227974", VA = "0x2227974")]
	public void SetBuilderUISettings()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x2229F80", Offset = "0x2229F80", VA = "0x2229F80")]
	public void ResetBuilderUISettings()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x222D228", Offset = "0x222D228", VA = "0x222D228")]
	public void ChangeToMainUIData()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x222D054", Offset = "0x222D054", VA = "0x222D054")]
	public void ChangeToBuilderUIData()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x222A550", Offset = "0x222A550", VA = "0x222A550")]
	public void ResetUIPosition()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x222D3D0", Offset = "0x222D3D0", VA = "0x222D3D0")]
	public void UpdateUIPosition()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x222B06C", Offset = "0x222B06C", VA = "0x222B06C")]
	public void HandleMenuButton()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x222D4D0", Offset = "0x222D4D0", VA = "0x222D4D0")]
	public void ChangeMainUIVisible()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x222B220", Offset = "0x222B220", VA = "0x222B220")]
	public void HandlePrimaryButton()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x222D688", Offset = "0x222D688", VA = "0x222D688")]
	public void ChangeBuilderUIVisible()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x222D7F4", Offset = "0x222D7F4", VA = "0x222D7F4")]
	public void ForceBuilderUIVisible()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x222D950", Offset = "0x222D950", VA = "0x222D950")]
	public void ForceBuilderUIInvisible()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x2227D04", Offset = "0x2227D04", VA = "0x2227D04")]
	public void ChangeToEditMode()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x222B870", Offset = "0x222B870", VA = "0x222B870")]
	public void ChangeToPreviewMode()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x222DA98", Offset = "0x222DA98", VA = "0x222DA98")]
	private void HandleUIRootActive(string eventId, object sender, IArgs args)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x222DB78", Offset = "0x222DB78", VA = "0x222DB78")]
	public void ForceControlUI(bool isLock, [Optional] bool? visible)
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x2227624", Offset = "0x2227624", VA = "0x2227624")]
	public WorldBuilderUIHandler()
	{
	}
}
[Token(Token = "0x2000131")]
public class UniformZScaler : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[Header("LocalScale Z 缩放上，是否保持跟XROrigin(WorldZoom)缩放一致")]
	private bool isConsistent;

	[Token(Token = "0x170000C5")]
	public bool IsConsistent
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x222DC08", Offset = "0x222DC08", VA = "0x222DC08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x222DC10", Offset = "0x222DC10", VA = "0x222DC10")]
		set
		{
		}
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x222DC1C", Offset = "0x222DC1C", VA = "0x222DC1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x222DC9C", Offset = "0x222DC9C", VA = "0x222DC9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x222DD1C", Offset = "0x222DD1C", VA = "0x222DD1C")]
	[BeforeRenderOrder(1000)]
	private void OnBeforeRender()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x222DE80", Offset = "0x222DE80", VA = "0x222DE80")]
	public UniformZScaler()
	{
	}
}
[Token(Token = "0x2000132")]
public class WorldBuidlerMaterialSlider : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler
{
	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string onPointEnterAnimation;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string onPointExitAniamtion;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedAnimator;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool CheckOnPointPress;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool passEvent;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool hasPassedEvent;

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x222DE88", Offset = "0x222DE88", VA = "0x222DE88")]
	private void OnSliderPointExit(PointerEventData arg2)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x222DFC0", Offset = "0x222DFC0", VA = "0x222DFC0")]
	private void OnSliderPointEnter(PointerEventData arg2)
	{
	}

	[Token(Token = "0x60009D8")]
	public void PassEvent<T>(PointerEventData data, ExecuteEvents.EventFunction<T> function) where T : IEventSystemHandler
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x222E0F8", Offset = "0x222E0F8", VA = "0x222E0F8", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x222E1B8", Offset = "0x222E1B8", VA = "0x222E1B8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x222E278", Offset = "0x222E278", VA = "0x222E278", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x222E460", Offset = "0x222E460", VA = "0x222E460")]
	public WorldBuidlerMaterialSlider()
	{
	}
}
[Token(Token = "0x2000133")]
public class WorldBuidlerPolyhedronClick : MonoBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Button button;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject polyhedron;

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x222E478", Offset = "0x222E478", VA = "0x222E478")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x222E594", Offset = "0x222E594", VA = "0x222E594")]
	private void ButtonClick()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x222E648", Offset = "0x222E648", VA = "0x222E648")]
	public WorldBuidlerPolyhedronClick()
	{
	}
}
[Token(Token = "0x2000134")]
public class WorldBuidlerPolyhedronComponentsAdd : MonoBehaviour
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject box;

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x222E650", Offset = "0x222E650", VA = "0x222E650")]
	private void Start()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x222E810", Offset = "0x222E810", VA = "0x222E810")]
	public WorldBuidlerPolyhedronComponentsAdd()
	{
	}
}
[Token(Token = "0x2000135")]
[RequireComponent(typeof(LinefyBox))]
public class WorldBuidlerPolyhedronPointer : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LinefyBox boxRenderer;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int defaultLayer;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 boxOffset;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float boundsSize;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x222E818", Offset = "0x222E818", VA = "0x222E818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x222E91C", Offset = "0x222E91C", VA = "0x222E91C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x222E93C", Offset = "0x222E93C", VA = "0x222E93C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x222E95C", Offset = "0x222E95C", VA = "0x222E95C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x222E97C", Offset = "0x222E97C", VA = "0x222E97C")]
	public WorldBuidlerPolyhedronPointer()
	{
	}
}
[Token(Token = "0x2000136")]
public class WorldBuilderAddBuilderObjectComponent : MonoBehaviour
{
	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x222E990", Offset = "0x222E990", VA = "0x222E990")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x222EAB4", Offset = "0x222EAB4", VA = "0x222EAB4")]
	public WorldBuilderAddBuilderObjectComponent()
	{
	}
}
[Token(Token = "0x2000137")]
public class WorldBuilderAttributeInputManager : MonoBehaviour
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WorldBuilderAttributeBtn[] _worldBuilderAttributeBtns;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, WorldBuilderAttributeBtn> _worldBuilderAttribute_Map;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputFieldHandler[] inputList;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int currentIndex;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WorldBuilderImageRaycast _worldBuilderImageRaycast;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cancelBtn;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x222EABC", Offset = "0x222EABC", VA = "0x222EABC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x222ED9C", Offset = "0x222ED9C", VA = "0x222ED9C")]
	private void OnCloseMask()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x222EDBC", Offset = "0x222EDBC", VA = "0x222EDBC")]
	public void OnAttributeClick(int instanceId)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x222F494", Offset = "0x222F494", VA = "0x222F494")]
	public void CloseInputWindow()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x222F560", Offset = "0x222F560", VA = "0x222F560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x222F7B8", Offset = "0x222F7B8", VA = "0x222F7B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x222F8A0", Offset = "0x222F8A0", VA = "0x222F8A0")]
	public WorldBuilderAttributeInputManager()
	{
	}
}
[Token(Token = "0x2000138")]
public class WorldBuilderBarRefresh : MonoBehaviour
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField tmpInputField;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _size;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _framCount;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x222F8A8", Offset = "0x222F8A8", VA = "0x222F8A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x222F95C", Offset = "0x222F95C", VA = "0x222F95C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x222F9C8", Offset = "0x222F9C8", VA = "0x222F9C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x222FAE0", Offset = "0x222FAE0", VA = "0x222FAE0")]
	public WorldBuilderBarRefresh()
	{
	}
}
[Token(Token = "0x2000139")]
public class WorldBuilderBoxActive : MonoBehaviour
{
	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x222FAF0", Offset = "0x222FAF0", VA = "0x222FAF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x222FB3C", Offset = "0x222FB3C", VA = "0x222FB3C")]
	public WorldBuilderBoxActive()
	{
	}
}
[Token(Token = "0x200013A")]
public class WorldBuilderBtnStateFollow : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200013B")]
	public class WorldBuilderBtn : UnityEvent
	{
		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x222FC8C", Offset = "0x222FC8C", VA = "0x222FC8C")]
		public WorldBuilderBtn()
		{
		}
	}

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WorldBuilderBtn onEnable;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WorldBuilderBtn onDisable;

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x222FB44", Offset = "0x222FB44", VA = "0x222FB44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x222FBE4", Offset = "0x222FBE4", VA = "0x222FBE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x222FC84", Offset = "0x222FC84", VA = "0x222FC84")]
	public WorldBuilderBtnStateFollow()
	{
	}
}
[Token(Token = "0x200013C")]
public class WorldBuilderCaptureGameObject : MonoBehaviour
{
	[Token(Token = "0x200013D")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] texData;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderCaptureGameObject <>4__this;

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x2231F4C", Offset = "0x2231F4C", VA = "0x2231F4C")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x2231F54", Offset = "0x2231F54", VA = "0x2231F54")]
		internal string <SaveTextureAsync>b__0()
		{
			return null;
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200013E")]
	[CompilerGenerated]
	private struct <SaveTextureAsync>d__44 : IAsyncStateMachine
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderCaptureGameObject <>4__this;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass44_0 <>8__1;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x2231FC4", Offset = "0x2231FC4", VA = "0x2231FC4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x2232638", Offset = "0x2232638", VA = "0x2232638", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200013F")]
	[CompilerGenerated]
	private struct <GetRenderTextureDataAsync>d__46 : IAsyncStateMachine
	{
		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<byte[]> <>t__builder;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderTexture rt;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] <texData>5__2;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <hasError>5__3;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AsyncGPUReadbackRequest <request>5__4;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x2232690", Offset = "0x2232690", VA = "0x2232690", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x2232CB8", Offset = "0x2232CB8", VA = "0x2232CB8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000140")]
	[CompilerGenerated]
	private struct <GetAuditTextureDataAsync>d__47 : IAsyncStateMachine
	{
		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<byte[]> <>t__builder;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderCaptureGameObject <>4__this;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 rotation;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RenderTexture rt;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x2232D10", Offset = "0x2232D10", VA = "0x2232D10", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x22331E0", Offset = "0x22331E0", VA = "0x22331E0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000141")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass48_0
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] imgPaths;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<byte[]> snapTexDatas;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int width;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int height;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldBuilderCaptureGameObject <>4__this;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string filePathPrefix;

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x2233238", Offset = "0x2233238", VA = "0x2233238")]
		public <>c__DisplayClass48_0()
		{
		}
	}

	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x2000143")]
	[CompilerGenerated]
	private struct <CaptureAuditTexture>d__48 : IAsyncStateMachine
	{
		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<string[]> <>t__builder;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderCaptureGameObject <>4__this;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string filePathPrefix;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass48_0 <>8__1;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture <rt>5__2;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool <isActive>5__3;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <rotation>5__4;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 <position>5__5;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 <scale>5__6;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <i>5__7;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UniTask<byte[]>.Awaiter <>u__1;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x2233444", Offset = "0x2233444", VA = "0x2233444", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x2234014", Offset = "0x2234014", VA = "0x2234014", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera CaptureCamera;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera CaptureTempCamera;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture RenderTexture;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RenderTexture RenderTexture2;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture defaultRT;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _renderObj;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> _renderers;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Renderer> _textRenderers;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _renderTransform;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WorldBuilderRotateCaptureObject _rotBehaviour;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _capturePath;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _defaultImgFileName;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _defaultImgFilePath;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _auditImgPathPrefix;

	[Token(Token = "0x4000945")]
	private const int _auditImgCount = 14;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> _auditImgPosition;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Bounds _objAabb;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Bounds _objInitAabb;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _reCalPos;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _opObj;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RawImage _curTarget;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isObjOperated;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool _useOrthographicCapture;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x222FC94", Offset = "0x222FC94", VA = "0x222FC94")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x2230444", Offset = "0x2230444", VA = "0x2230444")]
	private bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x22304E8", Offset = "0x22304E8", VA = "0x22304E8")]
	private void CalculateObjectPosition()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x2230A50", Offset = "0x2230A50", VA = "0x2230A50")]
	private void CalculateObjectPositionOrthographic()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x2230C44", Offset = "0x2230C44", VA = "0x2230C44")]
	public void CalculateObjectPositionB()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x22306D0", Offset = "0x22306D0", VA = "0x22306D0")]
	private Bounds CalculateObjectBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x2230E04", Offset = "0x2230E04", VA = "0x2230E04")]
	public void SetCameraOrthographic(bool bOrthographic)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x2230E3C", Offset = "0x2230E3C", VA = "0x2230E3C")]
	public void UseSecondRT()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x2230E70", Offset = "0x2230E70", VA = "0x2230E70")]
	public void UseDefaultRT()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x2230EA4", Offset = "0x2230EA4", VA = "0x2230EA4")]
	public void SetRenderObject(GameObject obj, [Optional] Vector3 rot)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x2230EA8", Offset = "0x2230EA8", VA = "0x2230EA8")]
	public void SetRenderObjectAndRotation(GameObject obj, Vector3 rot)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x2231220", Offset = "0x2231220", VA = "0x2231220")]
	public void SetRenderTarget(RawImage image, bool opObj = false, bool reCalPos = true)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x2231304", Offset = "0x2231304", VA = "0x2231304")]
	public void InitRenderTarget()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x2231504", Offset = "0x2231504", VA = "0x2231504")]
	public void ResetRenderTarget(RawImage image)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x22316B4", Offset = "0x22316B4", VA = "0x22316B4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x2231774", Offset = "0x2231774", VA = "0x2231774")]
	public void ActiveAll()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x22317A0", Offset = "0x22317A0", VA = "0x22317A0")]
	public void HideAll()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x22317CC", Offset = "0x22317CC", VA = "0x22317CC")]
	public void ActivityOnce()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x223182C", Offset = "0x223182C", VA = "0x223182C")]
	public void RenderToEmpty()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x22318AC", Offset = "0x22318AC", VA = "0x22318AC")]
	public void RenderObjectOnce()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x2231914", Offset = "0x2231914", VA = "0x2231914")]
	private string SaveContent(byte[] bytes, string filename = "")
	{
		return null;
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x22319C0", Offset = "0x22319C0", VA = "0x22319C0")]
	[AsyncStateMachine(typeof(<SaveTextureAsync>d__44))]
	[Command]
	public System.Threading.Tasks.Task<string> SaveTextureAsync()
	{
		return null;
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x2231AD0", Offset = "0x2231AD0", VA = "0x2231AD0")]
	public void UpdateRenderObject()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x2231B5C", Offset = "0x2231B5C", VA = "0x2231B5C")]
	[AsyncStateMachine(typeof(<GetRenderTextureDataAsync>d__46))]
	public UniTask<byte[]> GetRenderTextureDataAsync(RenderTexture rt)
	{
		return default(UniTask<byte[]>);
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x2231C38", Offset = "0x2231C38", VA = "0x2231C38")]
	[AsyncStateMachine(typeof(<GetAuditTextureDataAsync>d__47))]
	private UniTask<byte[]> GetAuditTextureDataAsync(Vector3 rotation, RenderTexture rt)
	{
		return default(UniTask<byte[]>);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x2231D58", Offset = "0x2231D58", VA = "0x2231D58")]
	[AsyncStateMachine(typeof(<CaptureAuditTexture>d__48))]
	public UniTask<string[]> CaptureAuditTexture(string filePathPrefix = "")
	{
		return default(UniTask<string[]>);
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x22309C0", Offset = "0x22309C0", VA = "0x22309C0")]
	private float GetHorizontalFov()
	{
		return default(float);
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x2231E4C", Offset = "0x2231E4C", VA = "0x2231E4C")]
	public WorldBuilderCaptureGameObject()
	{
	}
}
[Token(Token = "0x2000144")]
public class WorldBuilderEnter : MonoBehaviour
{
	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField textInput;

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x223406C", Offset = "0x223406C", VA = "0x223406C")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x2234098", Offset = "0x2234098", VA = "0x2234098")]
	public WorldBuilderEnter()
	{
	}
}
[Token(Token = "0x2000145")]
public class WorldBuilderImageRaycast : Image
{
	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public RectTransform[] m_maskRectTransform;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x22340A0", Offset = "0x22340A0", VA = "0x22340A0", Slot = "88")]
	public override bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x223428C", Offset = "0x223428C", VA = "0x223428C")]
	public WorldBuilderImageRaycast()
	{
	}
}
[Token(Token = "0x2000146")]
public class WorldBuilderInput : MonoBehaviour
{
	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform scaleAndOffset_TF;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform postion_TF;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform XROrigin;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputFieldHandler _inputFieldHandler;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] _posQueue;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion[] _rotQueue;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _currentIndex;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _oldestIndex;

	[Token(Token = "0x4000984")]
	private const int k_ArrayLength = 4;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _recentering;

	[Token(Token = "0x170000C6")]
	private Vector3 _lastPausedPosition
	{
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x22347A4", Offset = "0x22347A4", VA = "0x22347A4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000C7")]
	private Quaternion _lastPausedRotation
	{
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x22347E0", Offset = "0x22347E0", VA = "0x22347E0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x22342E4", Offset = "0x22342E4", VA = "0x22342E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x2234420", Offset = "0x2234420", VA = "0x2234420")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x223452C", Offset = "0x223452C", VA = "0x223452C")]
	public void OnShow()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x223463C", Offset = "0x223463C", VA = "0x223463C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x223464C", Offset = "0x223464C", VA = "0x223464C")]
	private void UpdateLastPostionAndRotation()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x223465C", Offset = "0x223465C", VA = "0x223465C")]
	private void QueueLastPosAndRot()
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x2234818", Offset = "0x2234818", VA = "0x2234818")]
	private void HomeRecenter()
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x2234C30", Offset = "0x2234C30", VA = "0x2234C30")]
	public WorldBuilderInput()
	{
	}
}
[Token(Token = "0x2000147")]
public class WorldBuilderMaskHide : MonoBehaviour
{
	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float allTime;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float currentTime;

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x2234CCC", Offset = "0x2234CCC", VA = "0x2234CCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x2234CD4", Offset = "0x2234CD4", VA = "0x2234CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x2234D48", Offset = "0x2234D48", VA = "0x2234D48")]
	public WorldBuilderMaskHide()
	{
	}
}
[Token(Token = "0x2000148")]
public class WorldBuilderMaterialClick : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x2234D58", Offset = "0x2234D58", VA = "0x2234D58", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x2234DE0", Offset = "0x2234DE0", VA = "0x2234DE0")]
	public WorldBuilderMaterialClick()
	{
	}
}
[Token(Token = "0x2000149")]
public class WorldBuilderMaterialPhone : MonoBehaviour
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200014A")]
	[CompilerGenerated]
	private struct <GetCameraShot>d__12 : IAsyncStateMachine
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncUniTaskMethodBuilder<Texture2D> <>t__builder;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldBuilderMaterialPhone <>4__this;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform tagertTransform;

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x22350A0", Offset = "0x22350A0", VA = "0x22350A0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x2235688", Offset = "0x2235688", VA = "0x2235688", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material bloomShader;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture _texture;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture _finishTexture;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Camera screenShotCamera;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool shot;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D texture2DFinish;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D texture2DPre;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int index;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2Int _screenMaxSize;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2Int _screenFinishSize;

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x2234DE8", Offset = "0x2234DE8", VA = "0x2234DE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x2234E18", Offset = "0x2234E18", VA = "0x2234E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x2234EDC", Offset = "0x2234EDC", VA = "0x2234EDC")]
	[AsyncStateMachine(typeof(<GetCameraShot>d__12))]
	public UniTask<Texture2D> GetCameraShot(Transform tagertTransform)
	{
		return default(UniTask<Texture2D>);
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x2234FD0", Offset = "0x2234FD0", VA = "0x2234FD0")]
	private void AdjustCameraPos(Transform tagertTransform)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x2235064", Offset = "0x2235064", VA = "0x2235064")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x223508C", Offset = "0x223508C", VA = "0x223508C")]
	public WorldBuilderMaterialPhone()
	{
	}
}
[Token(Token = "0x200014B")]
public class WorldBuilderMaterialTooltip : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[StructLayout(LayoutKind.Auto)]
	[Token(Token = "0x200014C")]
	[CompilerGenerated]
	private struct <Start>d__29 : IAsyncStateMachine
	{
		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldBuilderMaterialTooltip <>4__this;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private YieldAwaitable.Awaiter <>u__1;

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x23B1460", Offset = "0x23B1460", VA = "0x23B1460", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x23B19D8", Offset = "0x23B19D8", VA = "0x23B19D8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Space]
	[Header("Tooltip Effect")]
	public RectTransform toolTipRect;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 showOffset;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Hover Effect")]
	[Space]
	public RectTransform cellRect;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool onMoveX;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool onMoveY;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool onMoveZ;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] hoverPictures;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float moveDuration;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Ease defaultEase;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 moveOffset;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _startPos;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 _baseSize;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Fade Effect")]
	[Space]
	public CanvasGroup fadeCanvasGroup;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float fadeDuration;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action OnPointEnterCallBack;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action OnPointExitCallBack;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action OnPointClickCallBack;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool PassEventState;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool PassExiteEvent;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool SwitchWBAndMainUI;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Button _button;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VRButton _vrButton;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool hasPassedEvent;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Tween _tween_X;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Tween _tween_Y;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Tween _tween_Z;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tween _tween_Fade;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 _startTransformOffset;

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x22356E0", Offset = "0x22356E0", VA = "0x22356E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x2235804", Offset = "0x2235804", VA = "0x2235804")]
	[AsyncStateMachine(typeof(<Start>d__29))]
	private void Start()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x22358BC", Offset = "0x22358BC", VA = "0x22358BC", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x22361D4", Offset = "0x22361D4", VA = "0x22361D4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x2235D58", Offset = "0x2235D58", VA = "0x2235D58")]
	private void PlayMoveAnimation(Vector3 value)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x2235FF4", Offset = "0x2235FF4", VA = "0x2235FF4")]
	private void PlayFadeAnimation(float value)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x22363FC", Offset = "0x22363FC", VA = "0x22363FC")]
	private void KillTween(Tween tween)
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x223641C", Offset = "0x223641C", VA = "0x223641C", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x223669C", Offset = "0x223669C", VA = "0x223669C")]
	public void OnPointExite()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x22356F0", Offset = "0x22356F0", VA = "0x22356F0")]
	public void OnPointExiteImmediately()
	{
	}

	[Token(Token = "0x6000A48")]
	public void PassEvent<T>(PointerEventData data, ExecuteEvents.EventFunction<T> function) where T : IEventSystemHandler
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x22366C0", Offset = "0x22366C0", VA = "0x22366C0")]
	public WorldBuilderMaterialTooltip()
	{
	}
}
[Token(Token = "0x200014D")]
public class WorldBuilderRewardAvatarController : MonoBehaviour
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WebTextureImage WebTextureImageBefore;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WebTextureImage webTextureImageAfter;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BuilderObject _builderObject;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private BuilderComponentReward _builderComponentReward;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isRotation;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float rotationSpeed;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string guid;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x23B19E4", Offset = "0x23B19E4", VA = "0x23B19E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x23B1B24", Offset = "0x23B1B24", VA = "0x23B1B24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x23B1B28", Offset = "0x23B1B28", VA = "0x23B1B28")]
	private void GetComponent()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x23B19E8", Offset = "0x23B19E8", VA = "0x23B19E8")]
	private void AddEvent()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x23B1C20", Offset = "0x23B1C20", VA = "0x23B1C20")]
	private void SetAvatarImage(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x23B1DA4", Offset = "0x23B1DA4", VA = "0x23B1DA4")]
	private void SetAvatarRotation(string eventid, object sender, IArgs args)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x23B1EA8", Offset = "0x23B1EA8", VA = "0x23B1EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x23B1F4C", Offset = "0x23B1F4C", VA = "0x23B1F4C")]
	private void RemoveEvent()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x23B2088", Offset = "0x23B2088", VA = "0x23B2088")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x23B208C", Offset = "0x23B208C", VA = "0x23B208C")]
	public WorldBuilderRewardAvatarController()
	{
	}
}
[Token(Token = "0x200014E")]
public class WorldBuilderRotateCaptureObject : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x200014F")]
	public delegate void UpdateCaptureObjectEvent();

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 rotateCenter;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 _delta;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IUIInteractor _curInteractor;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UpdateCaptureObjectEvent UpdateCaptureObjectHandler;

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x23B20F8", Offset = "0x23B20F8", VA = "0x23B20F8", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x23B21A8", Offset = "0x23B21A8", VA = "0x23B21A8", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x23B24B4", Offset = "0x23B24B4", VA = "0x23B24B4", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x23B21D4", Offset = "0x23B21D4", VA = "0x23B21D4")]
	public void RotateTarget()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x23B24C0", Offset = "0x23B24C0", VA = "0x23B24C0")]
	public WorldBuilderRotateCaptureObject()
	{
	}
}
[Token(Token = "0x2000150")]
public class WorldBuilderSetGuideWindowSorting : MonoBehaviour
{
	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Canvas parentCanvas;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x23B25D4", Offset = "0x23B25D4", VA = "0x23B25D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x23B2668", Offset = "0x23B2668", VA = "0x23B2668")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x23B275C", Offset = "0x23B275C", VA = "0x23B275C")]
	public WorldBuilderSetGuideWindowSorting()
	{
	}
}
[Token(Token = "0x2000151")]
public class WorldBuilderTextInit : MonoBehaviour
{
	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x23B2764", Offset = "0x23B2764", VA = "0x23B2764")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x23B27B8", Offset = "0x23B27B8", VA = "0x23B27B8")]
	private void ReBuild()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x23B2854", Offset = "0x23B2854", VA = "0x23B2854")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x23B28A0", Offset = "0x23B28A0", VA = "0x23B28A0")]
	public WorldBuilderTextInit()
	{
	}
}
[Token(Token = "0x2000152")]
public class WorldBuilderTextInputHide : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000153")]
	public class WorldBuilderTextInputEvent : UnityEvent
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x23B2A18", Offset = "0x23B2A18", VA = "0x23B2A18")]
		public WorldBuilderTextInputEvent()
		{
		}
	}

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WorldBuilderTextInputEvent OnEnableCallBack;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputFieldHandler inputFieldHandler;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField inputField;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool checkSelfActivity;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x23B28A8", Offset = "0x23B28A8", VA = "0x23B28A8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x23B28BC", Offset = "0x23B28BC", VA = "0x23B28BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x23B2938", Offset = "0x23B2938", VA = "0x23B2938")]
	public void HideKeyBoard()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x23B29CC", Offset = "0x23B29CC", VA = "0x23B29CC")]
	public void HideSelfAndCheck()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x23B2A10", Offset = "0x23B2A10", VA = "0x23B2A10")]
	public WorldBuilderTextInputHide()
	{
	}
}
[Token(Token = "0x2000154")]
public class WorldBuilderTextOnEnableInit : MonoBehaviour
{
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform _rectTransform;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x23B2A20", Offset = "0x23B2A20", VA = "0x23B2A20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x23B2AA0", Offset = "0x23B2AA0", VA = "0x23B2AA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x23B2AFC", Offset = "0x23B2AFC", VA = "0x23B2AFC")]
	private void ReBuild()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x23B2B58", Offset = "0x23B2B58", VA = "0x23B2B58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x23B2BA4", Offset = "0x23B2BA4", VA = "0x23B2BA4")]
	public WorldBuilderTextOnEnableInit()
	{
	}
}
[Token(Token = "0x2000155")]
[RequireComponent(typeof(Toggle))]
public class WorldBuilderToggleHover : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Toggle toggle;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OpenHover;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CloseHover;

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x23B2BAC", Offset = "0x23B2BAC", VA = "0x23B2BAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x23B2CF8", Offset = "0x23B2CF8", VA = "0x23B2CF8")]
	private void OnToggleChange(bool arg0)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x23B2DA4", Offset = "0x23B2DA4", VA = "0x23B2DA4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x23B2CFC", Offset = "0x23B2CFC", VA = "0x23B2CFC")]
	private void ShowHoverGameObject()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x23B2DA8", Offset = "0x23B2DA8", VA = "0x23B2DA8", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x23B2C90", Offset = "0x23B2C90", VA = "0x23B2C90")]
	private void HideHoverGameObject()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x23B2DAC", Offset = "0x23B2DAC", VA = "0x23B2DAC")]
	public WorldBuilderToggleHover()
	{
	}
}
[Token(Token = "0x2000156")]
public class WorldBuilderToggleSkyBox : MonoBehaviour
{
	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Toggle toggle;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hover;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CustomizeTooltip customizeTooltip;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x23B2DB4", Offset = "0x23B2DB4", VA = "0x23B2DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x23B2E5C", Offset = "0x23B2E5C", VA = "0x23B2E5C")]
	private void OnToggleValueChange(bool value)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x23B2F9C", Offset = "0x23B2F9C", VA = "0x23B2F9C")]
	public WorldBuilderToggleSkyBox()
	{
	}
}
[Token(Token = "0x2000157")]
[RequireComponent(typeof(UIButtonDragUI))]
public class WorldBuilderUIDragState : MonoBehaviour, IPointerExitHandler, IEventSystemHandler
{
	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject dragTips;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dragOffset;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject dragingTips;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIButtonDragUI uiButtonDragUI;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ByteDance.Picoverse.Builder.Pointer leftPointer;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ByteDance.Picoverse.Builder.Pointer rightPointer;

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x23B2FA4", Offset = "0x23B2FA4", VA = "0x23B2FA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x23B30D4", Offset = "0x23B30D4", VA = "0x23B30D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x23B314C", Offset = "0x23B314C", VA = "0x23B314C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x23B3428", Offset = "0x23B3428", VA = "0x23B3428", Slot = "4")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x23B303C", Offset = "0x23B303C", VA = "0x23B303C")]
	private void HideDragTips()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x23B3330", Offset = "0x23B3330", VA = "0x23B3330")]
	private ByteDance.Picoverse.Builder.Pointer GetPointer(HandSide handSide)
	{
		return null;
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x23B34AC", Offset = "0x23B34AC", VA = "0x23B34AC")]
	public WorldBuilderUIDragState()
	{
	}
}
namespace Multiplayer
{
	[Token(Token = "0x2000158")]
	public struct NetworkPropBriefInfo : INetworkSerializable, IEquatable<NetworkPropBriefInfo>
	{
		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong _clientId;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private long _propId;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong _networkObjectId;

		[Token(Token = "0x170000C8")]
		public ulong ClientId
		{
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x23B34B4", Offset = "0x23B34B4", VA = "0x23B34B4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170000C9")]
		public long PropId
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x23B34BC", Offset = "0x23B34BC", VA = "0x23B34BC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170000CA")]
		public ulong NetworkObjectId
		{
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x23B34C4", Offset = "0x23B34C4", VA = "0x23B34C4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x6000A85")]
		public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x23B34CC", Offset = "0x23B34CC", VA = "0x23B34CC")]
		public NetworkPropBriefInfo(ulong networkObjectId, ulong clientId, long propId)
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x23B34D8", Offset = "0x23B34D8", VA = "0x23B34D8", Slot = "5")]
		public bool Equals(NetworkPropBriefInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x23B3514", Offset = "0x23B3514", VA = "0x23B3514", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x23B35AC", Offset = "0x23B35AC", VA = "0x23B35AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x23B3630", Offset = "0x23B3630", VA = "0x23B3630", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000159")]
	public struct ExponentialMovingAverageCalculator
	{
		[Token(Token = "0x40009D8")]
		public const float PingIntervalSeconds = 0.5f;

		[Token(Token = "0x40009D9")]
		public const float alpha = 1f / 6f;

		[Token(Token = "0x170000CB")]
		public float Average
		{
			[Token(Token = "0x6000A8B")]
			[Address(RVA = "0x23B3708", Offset = "0x23B3708", VA = "0x23B3708")]
			[CompilerGenerated]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x6000A8C")]
			[Address(RVA = "0x23B3710", Offset = "0x23B3710", VA = "0x23B3710")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x23B3718", Offset = "0x23B3718", VA = "0x23B3718")]
		public ExponentialMovingAverageCalculator(float average)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x23B3720", Offset = "0x23B3720", VA = "0x23B3720")]
		public float NextValue(float value)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200015A")]
	public class RoomNetworkStatusDriver
	{
		[Token(Token = "0x200015B")]
		public enum State
		{
			[Token(Token = "0x40009E8")]
			DisConnected,
			[Token(Token = "0x40009E9")]
			AboveThreshold,
			[Token(Token = "0x40009EA")]
			BelowThreshowld
		}

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public State _state;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _preTime;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _stateBeginTime;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _aboveThresholdCD;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _belowThresholdCD;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _threshold;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hearbeatPause;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _pauseTime;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _networkPauseTime;

		[Token(Token = "0x40009E4")]
		private const float PingIntervalSeconds = 0.5f;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ExponentialMovingAverageCalculator _calculator;

		[Token(Token = "0x40009E6")]
		private const float _maxDeltaTime = 10000f;

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x23B3740", Offset = "0x23B3740", VA = "0x23B3740")]
		public RoomNetworkStatusDriver()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x23B377C", Offset = "0x23B377C", VA = "0x23B377C")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x23B3A1C", Offset = "0x23B3A1C", VA = "0x23B3A1C")]
		public void OnDisConnected()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x23B3BA8", Offset = "0x23B3BA8", VA = "0x23B3BA8")]
		public void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x23B3908", Offset = "0x23B3908", VA = "0x23B3908")]
		private void ChangeStatus(State state)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0x23B3E2C", Offset = "0x23B3E2C", VA = "0x23B3E2C")]
		private void ShowNetworkStatusWindow(bool show)
		{
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0x23B3F18", Offset = "0x23B3F18", VA = "0x23B3F18")]
		private void OnHeartbeatResumed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x23B3F20", Offset = "0x23B3F20", VA = "0x23B3F20")]
		private void OnHeartbeatPaused(string eventId, object sender, IArgs args)
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class RoomRoundTripTimeText : MonoBehaviour
	{
		[Token(Token = "0x40009EB")]
		private const float PingIntervalSeconds = 0.5f;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI _rttText;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _lastPingTime;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _hearbeatPause;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _pauseTime;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _networkPauseTime;

		[Token(Token = "0x40009F1")]
		private const float _maxDeltaTime = 10000f;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ExponentialMovingAverageCalculator _rttCalculator;

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x23B3F64", Offset = "0x23B3F64", VA = "0x23B3F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0x23B3FBC", Offset = "0x23B3FBC", VA = "0x23B3FBC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0x23B40F8", Offset = "0x23B40F8", VA = "0x23B40F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0x23B423C", Offset = "0x23B423C", VA = "0x23B423C")]
		private void OnHeartbeatResumed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x23B4244", Offset = "0x23B4244", VA = "0x23B4244")]
		private void OnHeartbeatPaused(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x23B4288", Offset = "0x23B4288", VA = "0x23B4288")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x23B428C", Offset = "0x23B428C", VA = "0x23B428C")]
		private void ShowRtt()
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x23B454C", Offset = "0x23B454C", VA = "0x23B454C")]
		public RoomRoundTripTimeText()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class UGCSceneManager : MonoSingleton<UGCSceneManager>
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200015F")]
		[CompilerGenerated]
		private struct <Start>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UGCSceneManager <>4__this;

			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000AAE")]
			[Address(RVA = "0x23B5450", Offset = "0x23B5450", VA = "0x23B5450", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AAF")]
			[Address(RVA = "0x23B5B4C", Offset = "0x23B5B4C", VA = "0x23B5B4C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000160")]
		[CompilerGenerated]
		private sealed class <CoHandlePhysicsLogic>d__15 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UGCSceneManager <>4__this;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170000CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AB3")]
				[Address(RVA = "0x23B5E64", Offset = "0x23B5E64", VA = "0x23B5E64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AB5")]
				[Address(RVA = "0x23B5EAC", Offset = "0x23B5EAC", VA = "0x23B5EAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AB0")]
			[Address(RVA = "0x23B5218", Offset = "0x23B5218", VA = "0x23B5218")]
			[DebuggerHidden]
			public <CoHandlePhysicsLogic>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x23B5B58", Offset = "0x23B5B58", VA = "0x23B5B58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x23B5B5C", Offset = "0x23B5B5C", VA = "0x23B5B5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x23B5E6C", Offset = "0x23B5E6C", VA = "0x23B5E6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject UGCRootNetworkObejct;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Action> _grabActions;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Action> _physicsActions;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _handlePhsics;

		[Token(Token = "0x170000CC")]
		public bool PhysicRunning
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x23B4560", Offset = "0x23B4560", VA = "0x23B4560")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x23B4568", Offset = "0x23B4568", VA = "0x23B4568")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x23B4574", Offset = "0x23B4574", VA = "0x23B4574")]
		[AsyncStateMachine(typeof(<Start>d__8))]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0x23B4628", Offset = "0x23B4628", VA = "0x23B4628", Slot = "4")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x23B48D8", Offset = "0x23B48D8", VA = "0x23B48D8")]
		public NetworkObject InstantiateRoot()
		{
			return null;
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x23B4A18", Offset = "0x23B4A18", VA = "0x23B4A18")]
		private void PhysicsNetDependence(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x23B4E0C", Offset = "0x23B4E0C", VA = "0x23B4E0C")]
		private void GrabNetDependence(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x23B4FF8", Offset = "0x23B4FF8", VA = "0x23B4FF8")]
		private void OnPhysicsActionAdd(string eventid, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x23B5104", Offset = "0x23B5104", VA = "0x23B5104")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x23B51A4", Offset = "0x23B51A4", VA = "0x23B51A4")]
		[IteratorStateMachine(typeof(<CoHandlePhysicsLogic>d__15))]
		private IEnumerator CoHandlePhysicsLogic()
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x23B5240", Offset = "0x23B5240", VA = "0x23B5240")]
		public void StartPhysics()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x23B524C", Offset = "0x23B524C", VA = "0x23B524C")]
		public UGCSceneManager()
		{
		}
	}
}
namespace Multiplayer.ServerStates
{
	[Token(Token = "0x2000161")]
	[Preserve]
	public class ServerBootState : ServerState
	{
		[Token(Token = "0x170000CF")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x23B5EB4", Offset = "0x23B5EB4", VA = "0x23B5EB4", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x23B5EBC", Offset = "0x23B5EBC", VA = "0x23B5EBC")]
		public ServerBootState()
		{
		}
	}
	[Token(Token = "0x2000162")]
	[Preserve]
	public class ServerInitialState : ServerState
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000163")]
		[CompilerGenerated]
		private struct <OnEnterState>d__4 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerInitialState <>4__this;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0x23B63D4", Offset = "0x23B63D4", VA = "0x23B63D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x23B69BC", Offset = "0x23B69BC", VA = "0x23B69BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000164")]
		[CompilerGenerated]
		private struct <LoadMultiplayerScene>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x23B69C8", Offset = "0x23B69C8", VA = "0x23B69C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x23B6DD4", Offset = "0x23B6DD4", VA = "0x23B6DD4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000165")]
		[CompilerGenerated]
		private struct <ConnectToBackend>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ServerInitialState <>4__this;

			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string <url>5__2;

			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x23B6DE0", Offset = "0x23B6DE0", VA = "0x23B6DE0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x23B7874", Offset = "0x23B7874", VA = "0x23B7874", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000166")]
		[CompilerGenerated]
		private struct <LoginAsUnityServer>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ServerInitialState <>4__this;

			[Token(Token = "0x4000A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <currentTries>5__2;

			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private NetworkSystem <networkManager>5__3;

			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000AC5")]
			[Address(RVA = "0x23B7880", Offset = "0x23B7880", VA = "0x23B7880", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x23B88FC", Offset = "0x23B88FC", VA = "0x23B88FC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x23B5EC4", Offset = "0x23B5EC4", VA = "0x23B5EC4", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x170000D1")]
		public bool RegisterWithMapId
		{
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0x23B5ECC", Offset = "0x23B5ECC", VA = "0x23B5ECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x23B5FA8", Offset = "0x23B5FA8", VA = "0x23B5FA8", Slot = "8")]
		[AsyncStateMachine(typeof(<OnEnterState>d__4))]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x23B605C", Offset = "0x23B605C", VA = "0x23B605C")]
		[AsyncStateMachine(typeof(<LoadMultiplayerScene>d__5))]
		private UniTask LoadMultiplayerScene()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x23B61A4", Offset = "0x23B61A4", VA = "0x23B61A4")]
		[AsyncStateMachine(typeof(<ConnectToBackend>d__6))]
		private UniTask ConnectToBackend()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x23B6304", Offset = "0x23B6304", VA = "0x23B6304")]
		[AsyncStateMachine(typeof(<LoginAsUnityServer>d__7))]
		private UniTask<bool> LoginAsUnityServer()
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x23B63CC", Offset = "0x23B63CC", VA = "0x23B63CC")]
		public ServerInitialState()
		{
		}
	}
	[Token(Token = "0x2000167")]
	[Preserve]
	public class ServerLoadingDutyState : ServerState
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000168")]
		[CompilerGenerated]
		private struct <OnEnterState>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerLoadingDutyState <>4__this;

			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <dutyAckId>5__2;

			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private long <mapId>5__3;

			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <loadDutyTimeout>5__4;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private int <ret>5__5;

			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Stopwatch <stopWatch>5__6;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CancellationToken <cancellationToken>5__7;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask<int>.Awaiter <>u__1;

			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<(bool IsTimeout, int Result)>.Awaiter <>u__2;

			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private bool <startServerResult>5__8;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private CommonConfigElement <commonConfig>5__9;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private UniTask.Awaiter <>u__3;

			[Token(Token = "0x6000ACC")]
			[Address(RVA = "0x23B8D98", Offset = "0x23B8D98", VA = "0x23B8D98", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ACD")]
			[Address(RVA = "0x23BA094", Offset = "0x23BA094", VA = "0x23BA094", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000169")]
		[CompilerGenerated]
		private struct <FetchMapDetailsAsync>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long mapId;

			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerLoadingDutyState <>4__this;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken cancellationToken;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <ret>5__2;

			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private NetworkSystem <networkSystem>5__3;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private EngineServerInitReq <req>5__4;

			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ResultWithObject <res>5__5;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <retries>5__6;

			[Token(Token = "0x4000A2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4000A2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x23BA0A0", Offset = "0x23BA0A0", VA = "0x23BA0A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x23BB1CC", Offset = "0x23BB1CC", VA = "0x23BB1CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0x23B8954", Offset = "0x23B8954", VA = "0x23B8954", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x23B895C", Offset = "0x23B895C", VA = "0x23B895C", Slot = "8")]
		[AsyncStateMachine(typeof(<OnEnterState>d__2))]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x23B8A14", Offset = "0x23B8A14", VA = "0x23B8A14")]
		[AsyncStateMachine(typeof(<FetchMapDetailsAsync>d__3))]
		private UniTask<int> FetchMapDetailsAsync(long mapId, CancellationToken cancellationToken)
		{
			return default(UniTask<int>);
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x23B8AF8", Offset = "0x23B8AF8", VA = "0x23B8AF8")]
		private void ServerInitializationAcknowledge(long ackId, long mapId, int resultCode)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x23B8D90", Offset = "0x23B8D90", VA = "0x23B8D90")]
		public ServerLoadingDutyState()
		{
		}
	}
	[Token(Token = "0x200016A")]
	[Preserve]
	public class ServerOnDutyState : ServerState
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200016C")]
		[CompilerGenerated]
		private struct <OnServerQueryRoomInfo>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int code;

			[Token(Token = "0x4000A35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public long ackId;

			[Token(Token = "0x4000A36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public IMessage msg;

			[Token(Token = "0x4000A37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ServerOnDutyState <>4__this;

			[Token(Token = "0x6000ADC")]
			[Address(RVA = "0x23BC628", Offset = "0x23BC628", VA = "0x23BC628", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x23BCC24", Offset = "0x23BCC24", VA = "0x23BCC24", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x23BB224", Offset = "0x23BB224", VA = "0x23BB224", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x23BB22C", Offset = "0x23BB22C", VA = "0x23BB22C", Slot = "8")]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x23BB560", Offset = "0x23BB560", VA = "0x23BB560", Slot = "9")]
		public override void OnExitState()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x23BB5F8", Offset = "0x23BB5F8", VA = "0x23BB5F8")]
		public void OnElementChange(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x23BB7DC", Offset = "0x23BB7DC", VA = "0x23BB7DC")]
		[AsyncStateMachine(typeof(<OnServerQueryRoomInfo>d__5))]
		public void OnServerQueryRoomInfo(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x23BB8C8", Offset = "0x23BB8C8", VA = "0x23BB8C8")]
		public void OnServerRequestKickRoom(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x23BBDB4", Offset = "0x23BBDB4", VA = "0x23BBDB4")]
		public void OnServerRequestRecycleDuty(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x23BBFC8", Offset = "0x23BBFC8", VA = "0x23BBFC8")]
		private void OnServerRequestKickPlayer(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x23BC5A0", Offset = "0x23BC5A0", VA = "0x23BC5A0")]
		public ServerOnDutyState()
		{
		}
	}
	[Token(Token = "0x200016D")]
	[Preserve]
	public class ServerReleaseDutyState : ServerState
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200016E")]
		[CompilerGenerated]
		private struct <OnEnterState>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerReleaseDutyState <>4__this;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <recycleByDevOps>5__2;

			[Token(Token = "0x4000A3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<long> <kickedUsers>5__3;

			[Token(Token = "0x4000A3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x23BCCF8", Offset = "0x23BCCF8", VA = "0x23BCCF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x23BD408", Offset = "0x23BD408", VA = "0x23BD408", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public override byte StateCode
		{
			[Token(Token = "0x6000ADE")]
			[Address(RVA = "0x23BCC30", Offset = "0x23BCC30", VA = "0x23BCC30", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x23BCC38", Offset = "0x23BCC38", VA = "0x23BCC38", Slot = "8")]
		[AsyncStateMachine(typeof(<OnEnterState>d__2))]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x23BCCF0", Offset = "0x23BCCF0", VA = "0x23BCCF0")]
		public ServerReleaseDutyState()
		{
		}
	}
	[Token(Token = "0x200016F")]
	[Preserve]
	public class ServerSetupMockServerState : ServerState
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000170")]
		[CompilerGenerated]
		private struct <OnEnterState>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerSetupMockServerState <>4__this;

			[Token(Token = "0x4000A41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private long <mapId>5__2;

			[Token(Token = "0x4000A42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <bootSuccess>5__3;

			[Token(Token = "0x4000A43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<int>.Awaiter <>u__1;

			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x23BD4DC", Offset = "0x23BD4DC", VA = "0x23BD4DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x23BDD68", Offset = "0x23BDD68", VA = "0x23BDD68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x23BD414", Offset = "0x23BD414", VA = "0x23BD414", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x23BD41C", Offset = "0x23BD41C", VA = "0x23BD41C", Slot = "8")]
		[AsyncStateMachine(typeof(<OnEnterState>d__2))]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x23BD4D4", Offset = "0x23BD4D4", VA = "0x23BD4D4")]
		public ServerSetupMockServerState()
		{
		}
	}
	[Token(Token = "0x2000171")]
	[Preserve]
	public class ServerStandbyState : ServerState
	{
		[Token(Token = "0x170000D6")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x23BDD74", Offset = "0x23BDD74", VA = "0x23BDD74", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0x23BDD7C", Offset = "0x23BDD7C", VA = "0x23BDD7C", Slot = "8")]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x23BDF24", Offset = "0x23BDF24", VA = "0x23BDF24", Slot = "9")]
		public override void OnExitState()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x23BDF48", Offset = "0x23BDF48", VA = "0x23BDF48")]
		public void OnDutyNotified(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x23BE404", Offset = "0x23BE404", VA = "0x23BE404")]
		public ServerStandbyState()
		{
		}
	}
	[Token(Token = "0x2000172")]
	[Preserve]
	public class ServerTerminatingState : ServerState
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000173")]
		[CompilerGenerated]
		private struct <OnEnterState>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerTerminatingState <>4__this;

			[Token(Token = "0x4000A47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x23BE4D0", Offset = "0x23BE4D0", VA = "0x23BE4D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x23BEA2C", Offset = "0x23BEA2C", VA = "0x23BEA2C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public override byte StateCode
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x23BE40C", Offset = "0x23BE40C", VA = "0x23BE40C", Slot = "7")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x23BE414", Offset = "0x23BE414", VA = "0x23BE414", Slot = "8")]
		[AsyncStateMachine(typeof(<OnEnterState>d__2))]
		public override void OnEnterState()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x23BE4C8", Offset = "0x23BE4C8", VA = "0x23BE4C8")]
		public ServerTerminatingState()
		{
		}
	}
}
namespace Multiplayer.NetworkPrefabHandler
{
	[Token(Token = "0x2000174")]
	public class PropPrefabInstanceHandler : INetworkPrefabInstanceHandler
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _propPrefab;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x23BEA38", Offset = "0x23BEA38", VA = "0x23BEA38")]
		public PropPrefabInstanceHandler(GameObject rootPrefab)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x23BEA68", Offset = "0x23BEA68", VA = "0x23BEA68", Slot = "4")]
		private NetworkObject Unity.Netcode.INetworkPrefabInstanceHandler.Instantiate(ulong ownerClientId, Vector3 position, Quaternion rotation, ulong networkObjectId)
		{
			return null;
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x23BEF44", Offset = "0x23BEF44", VA = "0x23BEF44", Slot = "5")]
		private void Unity.Netcode.INetworkPrefabInstanceHandler.Destroy(NetworkObject networkObject)
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class UGCRootPrefabInstanceHandler : INetworkPrefabInstanceHandler
	{
		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _rootPrefab;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkObject networkObjectInstance;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x23B5B1C", Offset = "0x23B5B1C", VA = "0x23B5B1C")]
		public UGCRootPrefabInstanceHandler(GameObject rootPrefab)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x23BF0B4", Offset = "0x23BF0B4", VA = "0x23BF0B4", Slot = "4")]
		private NetworkObject Unity.Netcode.INetworkPrefabInstanceHandler.Instantiate(ulong ownerClientId, Vector3 position, Quaternion rotation, ulong networkObjectId)
		{
			return null;
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x23BF4CC", Offset = "0x23BF4CC", VA = "0x23BF4CC", Slot = "5")]
		private void Unity.Netcode.INetworkPrefabInstanceHandler.Destroy(NetworkObject networkObject)
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x23BF6A4", Offset = "0x23BF6A4", VA = "0x23BF6A4")]
		private void Move(string eventId, object sender, IArgs args)
		{
		}
	}
}
namespace System.Runtime.CompilerServices
{
	[Token(Token = "0x2000176")]
	[EditorBrowsable(EditorBrowsableState.Never)]
	internal static class IsExternalInit
	{
	}
}
namespace Bytedance.Picoverse
{
	[Token(Token = "0x2000177")]
	public static class SeekerSetup
	{
		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x23BF768", Offset = "0x23BF768", VA = "0x23BF768")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x23BF85C", Offset = "0x23BF85C", VA = "0x23BF85C")]
		private static void OnLog(Poliq.Foundation.Log.LogLevel level, string message)
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class SeekerSettings : BaseSettings
	{
		[Token(Token = "0x170000D8")]
		public override string ProjectKey
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0x23BF954", Offset = "0x23BF954", VA = "0x23BF954", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x23BF84C", Offset = "0x23BF84C", VA = "0x23BF84C")]
		public SeekerSettings()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class SeekerScriptExecutor : IScriptExecutor
	{
		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x23BF994", Offset = "0x23BF994", VA = "0x23BF994", Slot = "4")]
		public void ExecuteConsoleCommand(string command, out string result, out string error)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x23BF854", Offset = "0x23BF854", VA = "0x23BF854")]
		public SeekerScriptExecutor()
		{
		}
	}
}
namespace Bytedance.Picoverse.Multiplayer
{
	[Token(Token = "0x200017A")]
	[DefaultExecutionOrder(-1000000)]
	public class ServerApp : MonoBehaviour
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200017B")]
		[CompilerGenerated]
		private struct <Awake>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x23C0818", Offset = "0x23C0818", VA = "0x23C0818", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x23C09F0", Offset = "0x23C09F0", VA = "0x23C09F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200017C")]
		[CompilerGenerated]
		private struct <Start>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000A53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerApp <>4__this;

			[Token(Token = "0x4000A54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x23C09FC", Offset = "0x23C09FC", VA = "0x23C09FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x23C0CE8", Offset = "0x23C0CE8", VA = "0x23C0CE8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200017D")]
		[CompilerGenerated]
		private struct <StartApp>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ServerApp <>4__this;

			[Token(Token = "0x4000A58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x23C0CF4", Offset = "0x23C0CF4", VA = "0x23C0CF4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x23C141C", Offset = "0x23C141C", VA = "0x23C141C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200017E")]
		[CompilerGenerated]
		private struct <InitServer>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x23C1428", Offset = "0x23C1428", VA = "0x23C1428", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B19")]
			[Address(RVA = "0x23C18C8", Offset = "0x23C18C8", VA = "0x23C18C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200017F")]
		[CompilerGenerated]
		private struct <InitAsset>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0x23C18D4", Offset = "0x23C18D4", VA = "0x23C18D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B1B")]
			[Address(RVA = "0x23C1D78", Offset = "0x23C1D78", VA = "0x23C1D78", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000180")]
		[CompilerGenerated]
		private struct <CheckScript>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4000A5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000A60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000A61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ServerApp <>4__this;

			[Token(Token = "0x4000A62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0x23C1D84", Offset = "0x23C1D84", VA = "0x23C1D84", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x23C2200", Offset = "0x23C2200", VA = "0x23C2200", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly UniTaskCompletionSource _socketManagerInitializedSignal;

		[Token(Token = "0x170000D9")]
		public bool Initialized
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0x23BFA8C", Offset = "0x23BFA8C", VA = "0x23BFA8C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x23BFA94", Offset = "0x23BFA94", VA = "0x23BFA94")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000001")]
		public event Action AppInitializedEvent
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x23BFAA0", Offset = "0x23BFAA0", VA = "0x23BFAA0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x23BFB3C", Offset = "0x23BFB3C", VA = "0x23BFB3C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x23BFBD8", Offset = "0x23BFBD8", VA = "0x23BFBD8")]
		[AsyncStateMachine(typeof(<Awake>d__8))]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x23BFC70", Offset = "0x23BFC70", VA = "0x23BFC70")]
		[AsyncStateMachine(typeof(<Start>d__9))]
		private void Start()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x23BFD24", Offset = "0x23BFD24", VA = "0x23BFD24")]
		private void RegisterLuaInitializationEvents()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x23BFDF0", Offset = "0x23BFDF0", VA = "0x23BFDF0")]
		private void OnSocketManagerInitialized(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x23BFECC", Offset = "0x23BFECC", VA = "0x23BFECC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x23BFF1C", Offset = "0x23BFF1C", VA = "0x23BFF1C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x23BFF8C", Offset = "0x23BFF8C", VA = "0x23BFF8C")]
		private static void InitModules()
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x23C002C", Offset = "0x23C002C", VA = "0x23C002C")]
		private static void InitSystems()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x23C0158", Offset = "0x23C0158", VA = "0x23C0158")]
		[AsyncStateMachine(typeof(<StartApp>d__16))]
		private UniTask StartApp()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x23C02B4", Offset = "0x23C02B4", VA = "0x23C02B4")]
		private void InitSettings()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x23C0374", Offset = "0x23C0374", VA = "0x23C0374")]
		[AsyncStateMachine(typeof(<InitServer>d__18))]
		private UniTask InitServer()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x23C04BC", Offset = "0x23C04BC", VA = "0x23C04BC")]
		[AsyncStateMachine(typeof(<InitAsset>d__19))]
		private UniTask InitAsset()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x23C0604", Offset = "0x23C0604", VA = "0x23C0604")]
		[AsyncStateMachine(typeof(<CheckScript>d__20))]
		private UniTask CheckScript()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x23C0760", Offset = "0x23C0760", VA = "0x23C0760")]
		private static void ServerBootstrap()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x23C07A4", Offset = "0x23C07A4", VA = "0x23C07A4")]
		public ServerApp()
		{
		}
	}
}
namespace Bytedance.Picoverse.Misc.Ani
{
	[Token(Token = "0x2000181")]
	public enum StateTiming
	{
		[Token(Token = "0x4000A64")]
		OnStateEnter,
		[Token(Token = "0x4000A65")]
		OnStateUpdate,
		[Token(Token = "0x4000A66")]
		OnStateExit
	}
	[Token(Token = "0x2000182")]
	public abstract class Animator_PlayActionBase : StateMachineBehaviour
	{
		[Token(Token = "0x4000A67")]
		private const float DefaultDuration = 0.5f;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StateTiming playTiming;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float startDelay;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int repeat;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool stopOnExit;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Animator _animator;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _played;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _playedCount;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isPlaying;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween _startTween;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Tween _playingTween;

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x23C220C", Offset = "0x23C220C", VA = "0x23C220C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x23C2264", Offset = "0x23C2264", VA = "0x23C2264")]
		private void Play()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x23C227C", Offset = "0x23C227C", VA = "0x23C227C")]
		private void PlayOnce()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x23C2348", Offset = "0x23C2348", VA = "0x23C2348")]
		private void DoPlayOnce()
		{
		}

		[Token(Token = "0x6000B22")]
		protected abstract void OnPlay();

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x23C2430", Offset = "0x23C2430", VA = "0x23C2430")]
		private void DoStop()
		{
		}

		[Token(Token = "0x6000B24")]
		protected abstract void OnStop();

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x23C24AC", Offset = "0x23C24AC", VA = "0x23C24AC", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x23C2500", Offset = "0x23C2500", VA = "0x23C2500", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x23C25CC", Offset = "0x23C25CC", VA = "0x23C25CC")]
		protected Animator_PlayActionBase()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class Animator_PlayEffect : Animator_PlayActionBase
	{
		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string effectName;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject effectGo;

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x23C25D4", Offset = "0x23C25D4", VA = "0x23C25D4", Slot = "18")]
		protected override void OnPlay()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x23C27C0", Offset = "0x23C27C0", VA = "0x23C27C0", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x23C2854", Offset = "0x23C2854", VA = "0x23C2854")]
		public Animator_PlayEffect()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class Animator_PlaySound : Animator_PlayActionBase
	{
		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string soundEventName;

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x23C285C", Offset = "0x23C285C", VA = "0x23C285C", Slot = "18")]
		protected override void OnPlay()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x23C2970", Offset = "0x23C2970", VA = "0x23C2970", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x23C2A88", Offset = "0x23C2A88", VA = "0x23C2A88")]
		public Animator_PlaySound()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class Animator_PlaySound_WB : Animator_PlaySound
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isPlay;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int _currMode;

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x23C2A90", Offset = "0x23C2A90", VA = "0x23C2A90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x23C2B5C", Offset = "0x23C2B5C", VA = "0x23C2B5C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x23C2C28", Offset = "0x23C2C28", VA = "0x23C2C28", Slot = "18")]
		protected override void OnPlay()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x23C2C34", Offset = "0x23C2C34", VA = "0x23C2C34", Slot = "19")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x23C2C48", Offset = "0x23C2C48", VA = "0x23C2C48")]
		private void OnModeChange(string eventid, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x23C2CC4", Offset = "0x23C2CC4", VA = "0x23C2CC4")]
		public Animator_PlaySound_WB()
		{
		}
	}
}
namespace TmpTest
{
	[Token(Token = "0x2000186")]
	public class AddCollider : MonoBehaviour
	{
		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject source;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterUGCBody body;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x23C2CCC", Offset = "0x23C2CCC", VA = "0x23C2CCC")]
		public void InitContainer()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x23C34D8", Offset = "0x23C34D8", VA = "0x23C34D8")]
		public void InitBodyAsset()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x23C36C8", Offset = "0x23C36C8", VA = "0x23C36C8")]
		public AddCollider()
		{
		}
	}
}
namespace ConfigToolGenerator
{
	[Token(Token = "0x2000187")]
	public class ArcheryConstData
	{
		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string versionId;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<int> distance;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> timeLine;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> weightsTimeline;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<float> lifeTime;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int blueBound;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int redBound;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<int> publicBound;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<string> staticTargetScore;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<string> motionTargetScore;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<float> awardTargetScore;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<int> timeGap;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int timeRest;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<int> startTime;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<string> publicStaticTargetScore;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<string> publicMotionTargetScore;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<float> defaultBornPosition;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float defaultBornRadius;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<int> doubleHitStage;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<float> doubleHitRise;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public int doubleHitTime;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float doubleHitTimeScale;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<string> awardTargetConfig;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<float> buffTime;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<string> weightsInBuff;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float reduceRadio;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<int> practiseWeights;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<int> practiseDistance;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public int groupNum;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public int playerCountPerGroup;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public int prepareCountdown;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public int playAgainnCountdown;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public List<float> blueTeamBornPosition;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public List<float> redTeamBornPosition;

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x23C36D0", Offset = "0x23C36D0", VA = "0x23C36D0")]
		public ArcheryConstData()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class BossStage
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> values;

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x23C36D8", Offset = "0x23C36D8", VA = "0x23C36D8")]
		public BossStage()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class Const
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float value;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> values;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x23C36E0", Offset = "0x23C36E0", VA = "0x23C36E0")]
		public Const()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class CooperationFireConstData
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int groupNum;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int playerCountPerGroup;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int prepareCountdown;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int playAgainnCountdown;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> defaultBornPosition;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float defaultBornRadius;

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x23C36E8", Offset = "0x23C36E8", VA = "0x23C36E8")]
		public CooperationFireConstData()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class GameLevel
	{
		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int LevelId;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float LevelTime;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AlertTime;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> MonsterGroup;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> MonsterOrderGap;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<string> MonsterForm;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<float> MonsterFormSpaceing;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MonsterAttackSpeedGrow;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MonsterHpGrow;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MonsterBulletsGrow;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float MonsterSpeedGrow;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float MonsterNumberGrow;

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x23C36F0", Offset = "0x23C36F0", VA = "0x23C36F0")]
		public GameLevel()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class MonsterBasic
	{
		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int MonsterId;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MonsterSpeed;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MonsterHp;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<float> MonsterCruise;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MonsterAttackRed;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> MonsterAttackGap;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int MonsterAttackBullets;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string MonsterBulletsForm;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float BulletsSpeed;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<int> MonsterMotionPlane;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<int> MonsterSkillId;

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0x23C36F8", Offset = "0x23C36F8", VA = "0x23C36F8")]
		public MonsterBasic()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class MonsterSkill
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SkillID;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MonsterConditions;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MonsterEnhanced;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x23C3700", Offset = "0x23C3700", VA = "0x23C3700")]
		public MonsterSkill()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class RogueLikeSkill
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SkillId;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SkillGroup;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SkillClass;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SkillLevel;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SkillNameKey;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SkillDescriptionKey;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float SkillParamA;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float SkillParamB;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float SkillParamC;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float SkillParamD;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float SkillParamE;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string SkillIconImage;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string SkillLevelImageBG;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string SkillLevelImage;

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x23C3708", Offset = "0x23C3708", VA = "0x23C3708")]
		public RogueLikeSkill()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class WeaponInfo
	{
		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int WeaponId;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x23C3710", Offset = "0x23C3710", VA = "0x23C3710")]
		public WeaponInfo()
		{
		}
	}
}
namespace StylizedWater2
{
	[Token(Token = "0x2000190")]
	public static class Buoyancy
	{
		[Token(Token = "0x2000191")]
		public struct BuoyancySample
		{
			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3[] inputPositions;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] outputOffset;

			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] outputNormal;

			[Token(Token = "0x6000B59")]
			[Address(RVA = "0x23C4DF0", Offset = "0x23C4DF0", VA = "0x23C4DF0")]
			public void SetSamplePositions(Vector3[] positions)
			{
			}
		}

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool SurfaceModifiersAvailable;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static WaveParameters waveParameters;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Material lastMaterial;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int CustomTimeID;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int TimeParametersID;

		[Token(Token = "0x4000AD8")]
		private const string WavesKeyword = "_WAVES";

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool UseCustomTime;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static float customTimeValue;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector4 sine;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector4 cosine;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector4 dotABCD;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Vector4 AB;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static Vector4 CD;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static Vector4 direction1;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static Vector4 direction2;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static Vector4 TIME;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private static Vector2 planarPosition;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private static Vector4 amp;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private static Vector4 speed;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private static Vector4 dir1;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private static Vector4 dir2;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private static Vector4 steepness;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private static Vector4 frequency;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private static Vector4 realSpeed;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private static RaycastHit hit;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private static Vector3 m_offset;

		[Token(Token = "0x170000DA")]
		private static float _TimeParameters
		{
			[Token(Token = "0x6000B43")]
			[Address(RVA = "0x23C3AA8", Offset = "0x23C3AA8", VA = "0x23C3AA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x23C3718", Offset = "0x23C3718", VA = "0x23C3718")]
		private static void GetMaterialParameters(Material mat)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x23C38B0", Offset = "0x23C38B0", VA = "0x23C38B0")]
		[Obsolete("Use WaveParameters.GetMaxWaveHeight(Material) instead")]
		public static float GetMaxWaveHeight(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x23C3A38", Offset = "0x23C3A38", VA = "0x23C3A38")]
		public static void SetCustomTime(float value)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x23C3B2C", Offset = "0x23C3B2C", VA = "0x23C3B2C")]
		private static float Dot2(Vector2 a, Vector2 b)
		{
			return default(float);
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0x23C3B3C", Offset = "0x23C3B3C", VA = "0x23C3B3C")]
		private static float Dot3(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x23C3B54", Offset = "0x23C3B54", VA = "0x23C3B54")]
		private static float Dot4(Vector4 a, Vector4 b)
		{
			return default(float);
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x23C3B74", Offset = "0x23C3B74", VA = "0x23C3B74")]
		private static float Sine(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x23C3B78", Offset = "0x23C3B78", VA = "0x23C3B78")]
		private static float Cosine(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0x23C3B7C", Offset = "0x23C3B7C", VA = "0x23C3B7C")]
		private static void Vector4Sin(ref Vector4 input, Vector4 a, Vector4 b)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0x23C3C3C", Offset = "0x23C3C3C", VA = "0x23C3C3C")]
		private static void Vector4Cosin(ref Vector4 input, Vector4 a, Vector4 b)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0x23C3CFC", Offset = "0x23C3CFC", VA = "0x23C3CFC")]
		private static Vector4 MultiplyVec4(Vector4 a, Vector4 b)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x23C3978", Offset = "0x23C3978", VA = "0x23C3978")]
		[Obsolete("Use WaveParameters.WavesEnabled(Material) instead")]
		public static bool WavesEnabled(Material waterMat)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x23C3D10", Offset = "0x23C3D10", VA = "0x23C3D10")]
		[Obsolete("Use the function with a 4th bool parameter to indicate if the water material is dynamic")]
		public static float SampleWaves(Vector3 position, WaterObject waterObject, float rollStrength, out Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x23C3E9C", Offset = "0x23C3E9C", VA = "0x23C3E9C")]
		[Obsolete("Use the function with a 4th bool parameter to indicate if the water material is dynamic")]
		public static float SampleWaves(Vector3 position, Material waterMat, float waterLevel, float rollStrength, out Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0x23C3F44", Offset = "0x23C3F44", VA = "0x23C3F44")]
		public static Vector3 FindWaterLevelIntersection(Vector3 origin, Vector3 direction, float waterLevel)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x23C4068", Offset = "0x23C4068", VA = "0x23C4068")]
		public static void Raycast(WaterObject waterObject, Vector3 origin, Vector3 direction, bool dynamicMaterial, out RaycastHit hit)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x23C4150", Offset = "0x23C4150", VA = "0x23C4150")]
		public static void Raycast(Material waterMat, float waterLevel, Vector3 origin, Vector3 direction, bool dynamicMaterial, out RaycastHit hit)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x23C4290", Offset = "0x23C4290", VA = "0x23C4290")]
		public static float SampleWaves(Vector3 position, WaterObject waterObject, float rollStrength, bool dynamicMaterial, out Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x23C4360", Offset = "0x23C4360", VA = "0x23C4360")]
		private static void SampleWaves(Vector3 position, Material waterMat, float waterLevel, float rollStrength, bool dynamicMaterial, out Vector3 offset, out Vector3 normal)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x23C3DD4", Offset = "0x23C3DD4", VA = "0x23C3DD4")]
		public static float SampleWaves(Vector3 position, Material waterMat, float waterLevel, float rollStrength, bool dynamicMaterial, out Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x23C4A04", Offset = "0x23C4A04", VA = "0x23C4A04")]
		public static void SampleWaves(ref BuoyancySample sample, Material waterMat, float waterLevel, bool dynamicMaterial)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x23C4B5C", Offset = "0x23C4B5C", VA = "0x23C4B5C")]
		public static bool CanTouchWater(Vector3 position, WaterObject waterObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x23C4C30", Offset = "0x23C4C30", VA = "0x23C4C30")]
		public static bool CanTouchWater(Vector3 position, Material waterMaterial, float waterLevel)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000192")]
	[AddComponentMenu("Stylized Water 2/Floating Transform")]
	[ExecuteInEditMode]
	public class FloatingTransform : MonoBehaviour
	{
		[Token(Token = "0x2000193")]
		public enum WaterLevelSource
		{
			[Token(Token = "0x4000AFE")]
			FixedValue,
			[Token(Token = "0x4000AFF")]
			WaterObject
		}

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("This reference is required to grab the wave distance and height values")]
		public WaterObject waterObject;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Automatically find the Water Object below of above the Transform's position. This is slower than assigning a specific Water Object directly.")]
		public bool autoFind;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("Only enable if the material's wave parameters are being changed in realtime, this has some performance overhead.\n\nIn edit-mode, the wave parameters are always fetched, so changes are directly visible")]
		public bool dynamicMaterial;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Configure what should be used to set the base water level. Relative wave height is added to this value")]
		public WaterLevelSource waterLevelSource;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float waterLevel;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("You can assign a child mesh object here. When assigned, the sample points will rotate/scale with the transform, instead of transform the component is attached to.")]
		public Transform childTransform;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float heightOffset;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Controls how strongly the transform should rotate to align with the wave curvature")]
		[Min(0f)]
		public float rollAmount;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Vector3> samples;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 normal;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float height;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_waterLevel;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool Disable;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x23C4E80", Offset = "0x23C4E80", VA = "0x23C4E80")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x23C4E84", Offset = "0x23C4E84", VA = "0x23C4E84")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x23C57F0", Offset = "0x23C57F0", VA = "0x23C57F0")]
		private void ApplyTransform()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x23C5744", Offset = "0x23C5744", VA = "0x23C5744")]
		public Vector3 ConvertToWorldSpace(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x23C589C", Offset = "0x23C589C", VA = "0x23C589C")]
		public Vector3 ConvertToLocalSpace(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x23C5948", Offset = "0x23C5948", VA = "0x23C5948")]
		public FloatingTransform()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public static class PipelineUtilities
	{
		[Token(Token = "0x4000B00")]
		private const string renderDataListFieldName = "m_RendererDataList";
	}
	[Token(Token = "0x2000195")]
	[ExecuteInEditMode]
	[HelpURL("https://staggart.xyz/unity/stylized-water-2/sws-2-docs/?section=planar-reflections")]
	[AddComponentMenu("Stylized Water 2/Planar Reflection Renderer")]
	public class PlanarReflectionRenderer : MonoBehaviour
	{
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x23C59E4", Offset = "0x23C59E4", VA = "0x23C59E4")]
		public PlanarReflectionRenderer()
		{
		}
	}
	[Token(Token = "0x2000196")]
	[AddComponentMenu("Stylized Water 2/Water Grid")]
	[ExecuteInEditMode]
	public class WaterGrid : MonoBehaviour
	{
		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Appearance")]
		[Tooltip("Material used on the tile meshes")]
		public Material material;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Movement")]
		[Tooltip("When not in play-mode, the water will follow the scene-view camera position.")]
		public bool followSceneCamera;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[Tooltip("If enabled, the object with the \"MainCamera\" tag will be assigned as the follow target when entering play mode")]
		public bool autoAssignCamera;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The grid will follow this Transform's position on the XZ axis. Ideally set to the camera's transform.")]
		public Transform followTarget;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("Scale of the entire grid in the length and width")]
		[Header("Grid")]
		public float scale;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Distance between vertices, rather higher than lower")]
		[Range(0.15f, 10f)]
		public float vertexDistance;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Min(1f)]
		public int rowsColumns;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public int m_rowsColumns;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private Mesh mesh;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<WaterObject> objects;

		[NonSerialized]
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float tileSize;

		[NonSerialized]
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WaterObject m_waterObject;

		[NonSerialized]
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform actualFollowTarget;

		[NonSerialized]
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 targetPosition;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x23C59EC", Offset = "0x23C59EC", VA = "0x23C59EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x23C5A9C", Offset = "0x23C5A9C", VA = "0x23C5A9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x23C5D28", Offset = "0x23C5D28", VA = "0x23C5D28")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x23C5E80", Offset = "0x23C5E80", VA = "0x23C5E80")]
		public void Recreate()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0x23C5B1C", Offset = "0x23C5B1C", VA = "0x23C5B1C")]
		private void RecreateMesh()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x23C5BDC", Offset = "0x23C5BDC", VA = "0x23C5BDC")]
		private void ReassignMesh()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x23C6788", Offset = "0x23C6788", VA = "0x23C6788")]
		private Vector3 GridLocalCenterPosition(int x, int z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x23C5E24", Offset = "0x23C5E24", VA = "0x23C5E24")]
		private static Vector3 SnapToGrid(Vector3 position, float cellSize)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x23C6878", Offset = "0x23C6878", VA = "0x23C6878")]
		private static float SnapToGrid(float position, float cellSize)
		{
			return default(float);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x23C6904", Offset = "0x23C6904", VA = "0x23C6904")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x23C69E4", Offset = "0x23C69E4", VA = "0x23C69E4")]
		public WaterGrid()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000197")]
	public class WaterMesh
	{
		[Token(Token = "0x2000198")]
		public enum Shape
		{
			[Token(Token = "0x4000B16")]
			Rectangle,
			[Token(Token = "0x4000B17")]
			Disk
		}

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Shape shape;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(10f, 1000f)]
		public float size;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UVTiling;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(1f, 255f)]
		public int subdivisions;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Shifts the vertices in a random direction. Definitely use this when using flat shading")]
		[Range(0f, 1f)]
		public float noise;

		[Token(Token = "0x4000B14")]
		private const float BOUNDS_HEIGHT_PADDING = 4f;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x23C6A7C", Offset = "0x23C6A7C", VA = "0x23C6A7C")]
		public Mesh Rebuild()
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x23C67CC", Offset = "0x23C67CC", VA = "0x23C67CC")]
		public static Mesh Create(Shape shape, float size, int subdivisions, float uvTiling = 1f, float noise = 0f)
		{
			return null;
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0x23C7B6C", Offset = "0x23C7B6C", VA = "0x23C7B6C")]
		private int GetPointIndex(int c, int x)
		{
			return default(int);
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0x23C707C", Offset = "0x23C707C", VA = "0x23C707C")]
		private Mesh CreateCircle()
		{
			return null;
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x23C6A9C", Offset = "0x23C6A9C", VA = "0x23C6A9C")]
		private Mesh CreatePlane()
		{
			return null;
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x23C7B50", Offset = "0x23C7B50", VA = "0x23C7B50")]
		public WaterMesh()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[AddComponentMenu("Stylized Water 2/Water Object")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	public class WaterObject : MonoBehaviour
	{
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly List<WaterObject> Instances;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MeshRenderer meshRenderer;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock _props;

		[Token(Token = "0x170000DB")]
		public MaterialPropertyBlock props
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0x23C7BA0", Offset = "0x23C7BA0", VA = "0x23C7BA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x23C7C30", Offset = "0x23C7C30", VA = "0x23C7C30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0x23C7D08", Offset = "0x23C7D08", VA = "0x23C7D08")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x23C7D88", Offset = "0x23C7D88", VA = "0x23C7D88")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x23C7E84", Offset = "0x23C7E84", VA = "0x23C7E84")]
		public void FetchWaterMaterial()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x23C7F14", Offset = "0x23C7F14", VA = "0x23C7F14")]
		public void ApplyInstancedProperties()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x23C7F60", Offset = "0x23C7F60", VA = "0x23C7F60")]
		public bool CanTouch(Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x23C6660", Offset = "0x23C6660", VA = "0x23C6660")]
		public void AssignMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x23C66F4", Offset = "0x23C66F4", VA = "0x23C66F4")]
		public void AssignMaterial(Material newMaterial)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x23C638C", Offset = "0x23C638C", VA = "0x23C638C")]
		public static WaterObject New([Optional] Material waterMaterial, [Optional] Mesh mesh)
		{
			return null;
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x23C5360", Offset = "0x23C5360", VA = "0x23C5360")]
		public static WaterObject Find(Vector3 position, bool rotationSupport)
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x23C7FDC", Offset = "0x23C7FDC", VA = "0x23C7FDC")]
		public WaterObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200019A")]
	public class WaveParameters
	{
		[Token(Token = "0x4000B1D")]
		private const string WavesKeyword = "_WAVES";

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _WaveDistance;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int _WaveSpeed;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _WaveHeight;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int _WaveSteepness;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int _WaveCount;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int _WaveDirection;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static int _AnimationParams;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 animationParams;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int count;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float distance;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float height;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float steepness;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector4 direction;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x23C807C", Offset = "0x23C807C", VA = "0x23C807C")]
		public static bool WavesEnabled(Material waterMat)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x23C39CC", Offset = "0x23C39CC", VA = "0x23C39CC")]
		public static float GetMaxWaveHeight(Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x23C3780", Offset = "0x23C3780", VA = "0x23C3780")]
		public void Update(Material waterMat)
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x23C8114", Offset = "0x23C8114", VA = "0x23C8114")]
		public void SetAsGlobal()
		{
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x23C8214", Offset = "0x23C8214", VA = "0x23C8214")]
		public void Apply(Material mat)
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x23C4DE8", Offset = "0x23C4DE8", VA = "0x23C4DE8")]
		public WaveParameters()
		{
		}
	}
}
namespace Boxophobic.StyledGUI
{
	[Token(Token = "0x200019B")]
	public class StyledBanner : PropertyAttribute
	{
		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float colorR;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float colorG;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float colorB;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string title;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string helpURL;

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x23C84C8", Offset = "0x23C84C8", VA = "0x23C84C8")]
		public StyledBanner(string title)
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x23C8544", Offset = "0x23C8544", VA = "0x23C8544")]
		public StyledBanner(string title, string helpURL)
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x23C8590", Offset = "0x23C8590", VA = "0x23C8590")]
		public StyledBanner(float colorR, float colorG, float colorB, string title)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x23C8628", Offset = "0x23C8628", VA = "0x23C8628")]
		public StyledBanner(float colorR, float colorG, float colorB, string title, string helpURL)
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x23C8690", Offset = "0x23C8690", VA = "0x23C8690")]
		public StyledBanner(string title, string subtitle, string helpURL)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x23C86DC", Offset = "0x23C86DC", VA = "0x23C86DC")]
		public StyledBanner(float colorR, float colorG, float colorB, string title, string subtitle, string helpURL)
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class StyledButton : PropertyAttribute
	{
		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Text;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Top;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Down;

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x23C8744", Offset = "0x23C8744", VA = "0x23C8744")]
		public StyledButton(string Text)
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x23C87C4", Offset = "0x23C87C4", VA = "0x23C87C4")]
		public StyledButton(string Text, float Top, float Down)
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class StyledCategory : PropertyAttribute
	{
		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string category;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float top;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float down;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool colapsable;

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x23C8854", Offset = "0x23C8854", VA = "0x23C8854")]
		public StyledCategory(string category)
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x23C8894", Offset = "0x23C8894", VA = "0x23C8894")]
		public StyledCategory(string category, bool colapsable)
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x23C88D8", Offset = "0x23C88D8", VA = "0x23C88D8")]
		public StyledCategory(string category, float top, float down)
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x23C8924", Offset = "0x23C8924", VA = "0x23C8924")]
		public StyledCategory(string category, int top, int down, bool colapsable)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class StyledEnum : PropertyAttribute
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string display;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string options;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int top;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int down;

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x23C897C", Offset = "0x23C897C", VA = "0x23C897C")]
		public StyledEnum(string file, string options, int top, int down)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x23C8A44", Offset = "0x23C8A44", VA = "0x23C8A44")]
		public StyledEnum(string display, string file, string options, int top, int down)
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class StyledIndent : PropertyAttribute
	{
		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int indent;

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x23C8B2C", Offset = "0x23C8B2C", VA = "0x23C8B2C")]
		public StyledIndent(int indent)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class StyledInteractive : PropertyAttribute
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x23C8B54", Offset = "0x23C8B54", VA = "0x23C8B54")]
		public StyledInteractive()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class StyledLayers : PropertyAttribute
	{
		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string display;

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x23C8B5C", Offset = "0x23C8B5C", VA = "0x23C8B5C")]
		public StyledLayers()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x23C8BB4", Offset = "0x23C8BB4", VA = "0x23C8BB4")]
		public StyledLayers(string display)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class StyledMask : PropertyAttribute
	{
		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string display;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string options;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int top;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int down;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x23C8C2C", Offset = "0x23C8C2C", VA = "0x23C8C2C")]
		public StyledMask(string file, string options, int top, int down)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x23C8CF4", Offset = "0x23C8CF4", VA = "0x23C8CF4")]
		public StyledMask(string display, string file, string options, int top, int down)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class StyledMessage : PropertyAttribute
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Type;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Message;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Top;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Down;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x23C8DDC", Offset = "0x23C8DDC", VA = "0x23C8DDC")]
		public StyledMessage(string Type, string Message)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x23C8E28", Offset = "0x23C8E28", VA = "0x23C8E28")]
		public StyledMessage(string Type, string Message, float Top, float Down)
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class StyledRangeOptions : PropertyAttribute
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string display;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float min;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float max;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] options;

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x23C8E84", Offset = "0x23C8E84", VA = "0x23C8E84")]
		public StyledRangeOptions(string display, float min, float max, string[] options)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class StyledSpace : PropertyAttribute
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int space;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x23C8EDC", Offset = "0x23C8EDC", VA = "0x23C8EDC")]
		public StyledSpace(int space)
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class StyledText : PropertyAttribute
	{
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAnchor alignment;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float top;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float down;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x23C8F04", Offset = "0x23C8F04", VA = "0x23C8F04")]
		public StyledText()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x23C8F64", Offset = "0x23C8F64", VA = "0x23C8F64")]
		public StyledText(TextAnchor alignment)
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x23C8FD8", Offset = "0x23C8FD8", VA = "0x23C8FD8")]
		public StyledText(TextAnchor alignment, float top, float down)
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class StyledTexturePreview : PropertyAttribute
	{
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string displayName;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x3250BA4", Offset = "0x3250BA4", VA = "0x3250BA4")]
		public StyledTexturePreview()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x3250C10", Offset = "0x3250C10", VA = "0x3250C10")]
		public StyledTexturePreview(string displayName)
		{
		}
	}
}
namespace Boxophobic.Utils
{
	[Token(Token = "0x20001A8")]
	[CreateAssetMenu(fileName = "Data", menuName = "BOXOPHOBIC/Settings Data")]
	public class SettingsData : ScriptableObject
	{
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space]
		public string data;

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x3250C88", Offset = "0x3250C88", VA = "0x3250C88")]
		public SettingsData()
		{
		}
	}
}
namespace Lux_SRP_GrassDisplacement
{
	[Token(Token = "0x20001A9")]
	public class RotateAndMove : MonoBehaviour
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Rotate;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool MoveUpDown;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float posy;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform trans;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x3250CE0", Offset = "0x3250CE0", VA = "0x3250CE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x3250D58", Offset = "0x3250D58", VA = "0x3250D58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x3250E24", Offset = "0x3250E24", VA = "0x3250E24")]
		public RotateAndMove()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetTransform;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float smoothTime;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 velocity;

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x3250E34", Offset = "0x3250E34", VA = "0x3250E34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x3250F18", Offset = "0x3250F18", VA = "0x3250F18")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	[ExecuteInEditMode]
	public class ControlDisplacer : MonoBehaviour
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDistance;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fallOff;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Layer]
		public int layerMask;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(5f)]
		public bool DebugRay;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer rend;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastHit hit;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float alpha;

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x3250F84", Offset = "0x3250F84", VA = "0x3250F84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x325107C", Offset = "0x325107C", VA = "0x325107C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x32510B0", Offset = "0x32510B0", VA = "0x32510B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x3251258", Offset = "0x3251258", VA = "0x3251258")]
		public ControlDisplacer()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	[RequireComponent(typeof(ParticleSystem))]
	public class ControlDisplacerParticleSys : MonoBehaviour
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDistance;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fallOff;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Layer]
		public int layerMask;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space(5f)]
		public bool DebugRay;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform trans;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem ps;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem.MainModule main;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RaycastHit hit;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float alpha;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float min_alpha;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float max_alpha;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color min_StartColor;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Color max_StartColor;

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x3251274", Offset = "0x3251274", VA = "0x3251274")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x32513D0", Offset = "0x32513D0", VA = "0x32513D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x32515DC", Offset = "0x32515DC", VA = "0x32515DC")]
		public ControlDisplacerParticleSys()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class DebugGrassDisplacementTex : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001AE")]
		public enum DebugSize
		{
			[Token(Token = "0x4000B73")]
			_128 = 0x80,
			[Token(Token = "0x4000B74")]
			_256 = 0x100,
			[Token(Token = "0x4000B75")]
			_512 = 0x200,
			[Token(Token = "0x4000B76")]
			_1024 = 0x400
		}

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_EnableDebug;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DebugSize currentDebugSize;

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x32515F8", Offset = "0x32515F8", VA = "0x32515F8")]
		public DebugGrassDisplacementTex()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class GrassDisplacementRenderFeature : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x20001B0")]
		public enum RTDisplacementSize
		{
			[Token(Token = "0x4000B7A")]
			_128 = 0x80,
			[Token(Token = "0x4000B7B")]
			_256 = 0x100,
			[Token(Token = "0x4000B7C")]
			_512 = 0x200,
			[Token(Token = "0x4000B7D")]
			_1024 = 0x400
		}

		[Serializable]
		[Token(Token = "0x20001B1")]
		public class GrassDisplacementSettings
		{
			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RTDisplacementSize Resolution;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Size;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool ShiftRenderTex;

			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0x3251914", Offset = "0x3251914", VA = "0x3251914")]
			public GrassDisplacementSettings()
			{
			}
		}

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrassDisplacementSettings settings;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrassDisplacementPass m_GrassDisplacementPass;

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x3251610", Offset = "0x3251610", VA = "0x3251610", Slot = "5")]
		public override void Create()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x3251870", Offset = "0x3251870", VA = "0x3251870", Slot = "7")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x3251894", Offset = "0x3251894", VA = "0x3251894")]
		public GrassDisplacementRenderFeature()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class GrassDisplacementPass : ScriptableRenderPass
	{
		[Token(Token = "0x4000B81")]
		private const string ProfilerTag = "Render Lux Grass Displacement FX";

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UnityEngine.Rendering.ProfilingSampler m_ProfilingSampler;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ShaderTagId m_GrassDisplacementFXShaderTag;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private SinglePassStereoMode m_StereoRenderingMode;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Color m_ClearColor;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTargetHandle m_GrassDisplacementFX;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Matrix4x4 projectionMatrix;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Matrix4x4 worldToCameraMatrix;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public float m_Size;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public int m_Resolution;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool m_ShiftRenderTex;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float stepSize;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private float oneOverStepSize;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Vector4 posSize;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int DisplacementTexPosSizePID;

		[Token(Token = "0x170000DC")]
		private FilteringSettings transparentFilterSettings
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0x3251928", Offset = "0x3251928", VA = "0x3251928")]
			[CompilerGenerated]
			get
			{
				return default(FilteringSettings);
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0x3251940", Offset = "0x3251940", VA = "0x3251940")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0x32516A8", Offset = "0x32516A8", VA = "0x32516A8")]
		public GrassDisplacementPass()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0x3251958", Offset = "0x3251958", VA = "0x3251958", Slot = "6")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x3251B8C", Offset = "0x3251B8C", VA = "0x3251B8C", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x32520EC", Offset = "0x32520EC", VA = "0x32520EC", Slot = "7")]
		public override void OnCameraCleanup(CommandBuffer cmd)
		{
		}
	}
	[Token(Token = "0x20001B3")]
	[AttributeUsage(AttributeTargets.Field)]
	public class LayerAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x32521DC", Offset = "0x32521DC", VA = "0x32521DC")]
		public LayerAttribute()
		{
		}
	}
}
namespace LuxURPEssentials
{
	[Token(Token = "0x20001B4")]
	public class DecalManager : MonoBehaviour
	{
		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Gizmos;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DrawDecalGizmos;

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x32521E4", Offset = "0x32521E4", VA = "0x32521E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x3252244", Offset = "0x3252244", VA = "0x3252244")]
		public DecalManager()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	[RequireComponent(typeof(MeshFilter))]
	public class LuxURP_BillboardBounds : MonoBehaviour
	{
		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		[LuxURP_HelpBtn("h.9i03ddhmnooa")]
		[Tooltip("Scale of the tweaked bounding box.")]
		[SerializeField]
		[Space(18f)]
		private Vector3 _Scale;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("If checked Unity will instantiate the assigned mesh on Start().")]
		[SerializeField]
		private bool _createUniqueMesh;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[Tooltip("Check this to preview the scaled bounding box.")]
		[SerializeField]
		[Space(8f)]
		private bool _drawBounds;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh _Mesh;

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0x32522A0", Offset = "0x32522A0", VA = "0x32522A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0x32522B0", Offset = "0x32522B0", VA = "0x32522B0")]
		private void SetBounds()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0x32524CC", Offset = "0x32524CC", VA = "0x32524CC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0x3252704", Offset = "0x3252704", VA = "0x3252704")]
		public LuxURP_BillboardBounds()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class LuxURP_HelpBtn : PropertyAttribute
	{
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string URL;

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0x3252724", Offset = "0x3252724", VA = "0x3252724")]
		public LuxURP_HelpBtn(string URL)
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class LuxURP_LayerBasedCulling : MonoBehaviour
	{
		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[LuxURP_HelpBtn("h.2uxuzzrgrwpo", order = 0)]
		[Space(5f, order = 1)]
		public LayerMask SmallDetailsLayer;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SmallDetailsDistance;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask MediumDetailsLayer;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MediumDetailsDistance;

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x3252754", Offset = "0x3252754", VA = "0x3252754")]
		private int GetLayerNumber(int LayerValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x3252774", Offset = "0x3252774", VA = "0x3252774")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x3252908", Offset = "0x3252908", VA = "0x3252908")]
		public LuxURP_LayerBasedCulling()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[ExecuteAlways]
	public class LuxURP_SetupGlobals : MonoBehaviour
	{
		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D _BestFittingNormal;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x3252920", Offset = "0x3252920", VA = "0x3252920")]
		private void SetupGlobals()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x32529B4", Offset = "0x32529B4", VA = "0x32529B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x32529B8", Offset = "0x32529B8", VA = "0x32529B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x32529BC", Offset = "0x32529BC", VA = "0x32529BC")]
		public LuxURP_SetupGlobals()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B9")]
	public enum RTSize
	{
		[Token(Token = "0x4000B9E")]
		_128 = 128,
		[Token(Token = "0x4000B9F")]
		_256 = 256,
		[Token(Token = "0x4000BA0")]
		_384 = 384,
		[Token(Token = "0x4000BA1")]
		_512 = 512,
		[Token(Token = "0x4000BA2")]
		_1024 = 1024
	}
	[Serializable]
	[Token(Token = "0x20001BA")]
	public enum RTFormat
	{
		[Token(Token = "0x4000BA4")]
		ARGB32,
		[Token(Token = "0x4000BA5")]
		ARGBHalf
	}
	[Serializable]
	[Token(Token = "0x20001BB")]
	public enum GustMixLayer
	{
		[Token(Token = "0x4000BA7")]
		Layer_0,
		[Token(Token = "0x4000BA8")]
		Layer_1,
		[Token(Token = "0x4000BA9")]
		Layer_2
	}
	[Token(Token = "0x20001BC")]
	[RequireComponent(typeof(WindZone))]
	[ExecuteAlways]
	public class LuxURP_Wind : MonoBehaviour
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Space(5f)]
		[Space(3f)]
		[LuxURP_HelpBtn("h.wnnhm4pxp610")]
		public bool UpdateInEditMode;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Render Texture Settings")]
		[Tooltip("Smaller resoltions will speed up rendering but may result in some quantization regarding the final bending.")]
		[Space(4f)]
		public RTSize Resolution;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("ARGB32 needs less memory and bandwidth but creates a slightly more quantized results - while ARGBHalf needs more memory and bandwith but gives you smoother results.")]
		public RTFormat Format;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Expects an RGBA texture with diffirently scaled noise patterns. If left empty the script will grab the default one.")]
		public Texture WindBaseTex;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader WindCompositeShader;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Wind Frequency and Turbulence")]
		[Space(4f)]
		[Tooltip("Drives the frequency of the turbulence animation according to the main wind strength.")]
		[Range(0.1f, 1f)]
		public float WindToFrequency;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Drives the strength of turbulence according to the main wind strength.")]
		public AnimationCurve WindToTurbulence;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 4f)]
		[Tooltip("Scales the final turbulence value used by the shaders.")]
		public float MaxTurbulence;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Header("Wind Speed and Size")]
		[Space(4f)]
		[Tooltip("Base Wind Speed in km/h at Main = 1 (WindZone).")]
		public float BaseWindSpeed;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Size of the Wind RenderTexture in World Space.")]
		public float SizeInWorldSpace;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("Speed of Layer0 (red channel) relative to the Base Wind Speed.")]
		[Space(4f)]
		public float speedLayer0;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Speed of Layer1 (green channel) relative to the Base Wind Speed.")]
		public float speedLayer1;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Speed of Layer3 (blue channel) relative to the Base Wind Speed.")]
		public float speedLayer2;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Space(4f)]
		[Header("Noise")]
		[Tooltip("Tiling of the gust layer (alpha channel) relative to Size In WorldSpace.")]
		public int GrassGustTiling;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Tooltip("Speed of the gust layer (alpha channel) relative to the Base Wind Speed.")]
		public float GrassGustSpeed;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Lets you choose a Wind Layer you want the dedicated Gust sample to be combined with.")]
		public GustMixLayer LayerToMixWith;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Header("Wind Multipliers")]
		[Space(4f)]
		public float Grass;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float Foliage;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture WindRenderTexture;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Material m_material;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 uvs;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 uvs1;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2 uvs2;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector2 uvs3;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform trans;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WindZone windZone;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float mainWind;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WindRTPID;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int LuxURPWindDirSizePID;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int LuxURPWindStrengthMultipliersPID;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int LuxURPSinTimePID;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int LuxURPGustPID;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int LuxURPGustMixLayerPID;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int LuxURPBendFrequencyPID;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly int LuxURPWindUVsPID;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly int LuxURPWindUVs1PID;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly int LuxURPWindUVs2PID;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly int LuxURPWindUVs3PID;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int previousRTSize;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int previousRTFormat;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector4 WindDirectionSize;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float WindTurbulence;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector3[] MixLayers;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private double currentTime;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private double domainTime_Wind;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float temp_WindFrequency;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float freqSpeed;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x32529C4", Offset = "0x32529C4", VA = "0x32529C4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0x3252D20", Offset = "0x3252D20", VA = "0x3252D20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0x3252BAC", Offset = "0x3252BAC", VA = "0x3252BAC")]
		private void SetupRT()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0x3252E64", Offset = "0x3252E64", VA = "0x3252E64")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0x3253098", Offset = "0x3253098", VA = "0x3253098")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0x325345C", Offset = "0x325345C", VA = "0x325345C")]
		public LuxURP_Wind()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[RequireComponent(typeof(Terrain))]
	public class GetTerrainHeightNormalMap : MonoBehaviour
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TerrainData targetTerrainData;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string savePathTerrainHeightNormalMap;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0x32538FC", Offset = "0x32538FC", VA = "0x32538FC")]
		public void GetTerData()
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0x32539CC", Offset = "0x32539CC", VA = "0x32539CC")]
		public GetTerrainHeightNormalMap()
		{
		}
	}
}
namespace LuxURPEssentials.Demo
{
	[Token(Token = "0x20001BE")]
	public class AnimateSphere : MonoBehaviour
	{
		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform trans;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float yPos;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x32539D4", Offset = "0x32539D4", VA = "0x32539D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x3253A4C", Offset = "0x3253A4C", VA = "0x3253A4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x3253AB8", Offset = "0x3253AB8", VA = "0x3253AB8")]
		public AnimateSphere()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class CheckSettings : MonoBehaviour
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x3253AC0", Offset = "0x3253AC0", VA = "0x3253AC0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x3253BF4", Offset = "0x3253BF4", VA = "0x3253BF4")]
		public CheckSettings()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class ExtendedFlycam : MonoBehaviour
	{
		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float cameraSensitivity;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float climbSpeed;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoveFactor;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fastMoveFactor;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationX;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float rotationY;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool isOrtho;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera cam;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isActive;

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x3253BFC", Offset = "0x3253BFC", VA = "0x3253BFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x3253CD0", Offset = "0x3253CD0", VA = "0x3253CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x3254418", Offset = "0x3254418", VA = "0x3254418")]
		public ExtendedFlycam()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class MouseSelect : MonoBehaviour
	{
		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform selectedTransform;

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x325443C", Offset = "0x325443C", VA = "0x325443C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x3254698", Offset = "0x3254698", VA = "0x3254698")]
		public MouseSelect()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class ToggleOutlineSelection : MonoBehaviour
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material SelectionMaterial;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material OutlineMaterial;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Renderer rend;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material[] BaseMatArray;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] SelectedMatArray;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool Selected;

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x32546A0", Offset = "0x32546A0", VA = "0x32546A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x3254644", Offset = "0x3254644", VA = "0x3254644")]
		public void Select()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0x32547E4", Offset = "0x32547E4", VA = "0x32547E4")]
		public ToggleOutlineSelection()
		{
		}
	}
}
namespace ByteDance.Picoverse
{
	[Token(Token = "0x20001C3")]
	public class PortalSubstance : IPortal
	{
		[Token(Token = "0x20001C4")]
		public enum State
		{
			[Token(Token = "0x4000C17")]
			Empty,
			[Token(Token = "0x4000C18")]
			DisplayDetail,
			[Token(Token = "0x4000C19")]
			BriefInfo,
			[Token(Token = "0x4000C1A")]
			MapError
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001C6")]
		[CompilerGenerated]
		private struct <UpdateDetailInfo>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PortalSubstance <>4__this;

			[Token(Token = "0x6000BFF")]
			[Address(RVA = "0x3256E98", Offset = "0x3256E98", VA = "0x3256E98", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C00")]
			[Address(RVA = "0x32573CC", Offset = "0x32573CC", VA = "0x32573CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001C7")]
		[CompilerGenerated]
		private struct <GetWorldMapInfo>d__58 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PortalSubstance <>4__this;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<ResultWithObject> worldMapRespCallBack;

			[Token(Token = "0x4000C25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <stamp>5__2;

			[Token(Token = "0x4000C26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000C01")]
			[Address(RVA = "0x32573D8", Offset = "0x32573D8", VA = "0x32573D8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C02")]
			[Address(RVA = "0x3257D44", Offset = "0x3257D44", VA = "0x3257D44", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001C8")]
		[CompilerGenerated]
		private struct <GetPortalInfo>d__59 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000C29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PortalSubstance <>4__this;

			[Token(Token = "0x4000C2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <stamp>5__2;

			[Token(Token = "0x4000C2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000C03")]
			[Address(RVA = "0x3257D50", Offset = "0x3257D50", VA = "0x3257D50", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C04")]
			[Address(RVA = "0x3258350", Offset = "0x3258350", VA = "0x3258350", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001C9")]
		[CompilerGenerated]
		private sealed class <ShowCanvasGroup>d__65 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x4000C2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup cg;

			[Token(Token = "0x170000DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C08")]
				[Address(RVA = "0x325844C", Offset = "0x325844C", VA = "0x325844C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C0A")]
				[Address(RVA = "0x3258494", Offset = "0x3258494", VA = "0x3258494", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C05")]
			[Address(RVA = "0x3256B2C", Offset = "0x3256B2C", VA = "0x3256B2C")]
			[DebuggerHidden]
			public <ShowCanvasGroup>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6000C06")]
			[Address(RVA = "0x325835C", Offset = "0x325835C", VA = "0x325835C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C07")]
			[Address(RVA = "0x3258360", Offset = "0x3258360", VA = "0x3258360", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C09")]
			[Address(RVA = "0x3258454", Offset = "0x3258454", VA = "0x3258454", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20001CA")]
		[CompilerGenerated]
		private sealed class <HideCanvasGroup>d__66 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x4000C2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup cg;

			[Token(Token = "0x170000E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C0E")]
				[Address(RVA = "0x3258578", Offset = "0x3258578", VA = "0x3258578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C10")]
				[Address(RVA = "0x32585C0", Offset = "0x32585C0", VA = "0x32585C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C0B")]
			[Address(RVA = "0x3256B54", Offset = "0x3256B54", VA = "0x3256B54")]
			[DebuggerHidden]
			public <HideCanvasGroup>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6000C0C")]
			[Address(RVA = "0x325849C", Offset = "0x325849C", VA = "0x325849C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0x32584A0", Offset = "0x32584A0", VA = "0x32584A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0x3258580", Offset = "0x3258580", VA = "0x3258580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PortalData portalData;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PortalSubStanceLuaProxy luaProxy;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastDistance;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private State state;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int portalInfoStamp;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int msgErrorCnt;

		[Token(Token = "0x4000BF4")]
		private const int MAX_MSG_ERROR_LIMIT = 5;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GetWorldMapResp worldMapInfo;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RefreshPortalResp portalInfo;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine detailCoroutine;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine mapInfoCoroutine;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float detailDistance;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float detailAngleCosInner;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float detailAngleCosOutter;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float mapInfoSqrDistanceInner;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float mapInfoSqrDistanceOutter;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool mapInfoShow;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float updateStatePeriod;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float lastUpdateStateTime;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float curSqrDistance;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VRButton btnEnterMap;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private VRButton btnMapDetail;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private WebTextureImage imgOwnerThumbnail;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TextMeshProUGUI txtWorldName;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TextMeshProUGUI txtPlayerCount;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private TextMeshProUGUI txtOwnerName;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private TextMeshProUGUI txtLikeConut;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private TextMeshProUGUI txtDescription;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MeshRenderer spaceBox;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private CanvasGroup detail;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CanvasGroup mapInfo;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GameObject playerCountBGObj;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GameObject btnEnterMapObj;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MeshRenderer doorMask;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Texture originTextrue;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Texture loadedTextrue;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _init;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool firstShowPortal;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int stencilID;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private readonly int stencilProp;

		[Token(Token = "0x170000DD")]
		private Texture SpaceBoxBaseTex
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x3255A6C", Offset = "0x3255A6C", VA = "0x3255A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x3255ACC", Offset = "0x3255ACC", VA = "0x3255ACC")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0x3254864", Offset = "0x3254864", VA = "0x3254864")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0x325487C", Offset = "0x325487C", VA = "0x325487C")]
		private void Initialized()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x3254AD8", Offset = "0x3254AD8", VA = "0x3254AD8")]
		private void GetUIElements()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x325497C", Offset = "0x325497C", VA = "0x325497C")]
		private void SetInitState()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x3255C14", Offset = "0x3255C14", VA = "0x3255C14")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x3255C88", Offset = "0x3255C88", VA = "0x3255C88")]
		private void Log(string info)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x3255D14", Offset = "0x3255D14", VA = "0x3255D14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x3255E28", Offset = "0x3255E28", VA = "0x3255E28", Slot = "4")]
		public override void SetPortalInfo(PortalData data, [Optional] Action<ResultWithObject> worldMapRespCallBack)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x3255980", Offset = "0x3255980", VA = "0x3255980")]
		private void SetDefaultInfo(string info = "")
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x325614C", Offset = "0x325614C", VA = "0x325614C")]
		[AsyncStateMachine(typeof(<UpdateDetailInfo>d__53))]
		private UniTaskVoid UpdateDetailInfo()
		{
			return default(UniTaskVoid);
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x32561E8", Offset = "0x32561E8", VA = "0x32561E8")]
		private bool ValidContent(int stamp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x3256274", Offset = "0x3256274", VA = "0x3256274")]
		private void UpdatePortalInfo()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x3256278", Offset = "0x3256278", VA = "0x3256278")]
		private void SetMapErrorState(int errorCode)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x325637C", Offset = "0x325637C", VA = "0x325637C")]
		private void SetMapInvalidState()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x3255FC8", Offset = "0x3255FC8", VA = "0x3255FC8")]
		[AsyncStateMachine(typeof(<GetWorldMapInfo>d__58))]
		private UniTask GetWorldMapInfo([Optional] Action<ResultWithObject> worldMapRespCallBack)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x3256474", Offset = "0x3256474", VA = "0x3256474")]
		[AsyncStateMachine(typeof(<GetPortalInfo>d__59))]
		public void GetPortalInfo()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x325652C", Offset = "0x325652C", VA = "0x325652C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x3256578", Offset = "0x3256578", VA = "0x3256578")]
		private void UpdateDetailState(float curTime)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x32569B4", Offset = "0x32569B4", VA = "0x32569B4")]
		private void StopCoroutine(ref Coroutine cr)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x3255BB4", Offset = "0x3255BB4", VA = "0x3255BB4")]
		private void DoMapInfo(bool show)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x3255B34", Offset = "0x3255B34", VA = "0x3255B34")]
		private void DoDetail(bool show)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x3256A5C", Offset = "0x3256A5C", VA = "0x3256A5C")]
		[IteratorStateMachine(typeof(<ShowCanvasGroup>d__65))]
		private IEnumerator ShowCanvasGroup(CanvasGroup cg)
		{
			return null;
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x32569E8", Offset = "0x32569E8", VA = "0x32569E8")]
		[IteratorStateMachine(typeof(<HideCanvasGroup>d__66))]
		private IEnumerator HideCanvasGroup(CanvasGroup cg)
		{
			return null;
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x3256B7C", Offset = "0x3256B7C", VA = "0x3256B7C")]
		public PortalSubstance()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class PortalSubStanceLuaProxy
	{
		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string luaFileName;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LuaTable _instanceTable;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LuaFunction _onAwakeFunc;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LuaFunction _onStartFunc;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LuaFunction _setPortalInfoFunc;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LuaFunction _onDestroyFunc;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LuaFunction _portalShowEvent;

		[Token(Token = "0x170000E2")]
		private LuaTable luaTable
		{
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0x32585C8", Offset = "0x32585C8", VA = "0x32585C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x32553FC", Offset = "0x32553FC", VA = "0x32553FC")]
		public bool Init(GameObject obj, Action<int> onMapError)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x3255924", Offset = "0x3255924", VA = "0x3255924")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x3255D80", Offset = "0x3255D80", VA = "0x3255D80")]
		public void Destroy()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x3255C2C", Offset = "0x3255C2C", VA = "0x3255C2C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x3255F64", Offset = "0x3255F64", VA = "0x3255F64")]
		public void SetPortalInfo(PortalData pd)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x3256AD0", Offset = "0x3256AD0", VA = "0x3256AD0")]
		public void ShowPortal()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x3256C40", Offset = "0x3256C40", VA = "0x3256C40")]
		public PortalSubStanceLuaProxy()
		{
		}
	}
}
namespace ByteDance.Picoverse.Guide
{
	[Token(Token = "0x20001CC")]
	public class WorldBuilderGuideSystem : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001CD")]
		[CompilerGenerated]
		private struct <InitLockData>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderGuideSystem <>4__this;

			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Args<bool> args;

			[Token(Token = "0x4000C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string <key>5__2;

			[Token(Token = "0x4000C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x325A2DC", Offset = "0x325A2DC", VA = "0x325A2DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x325B290", Offset = "0x325B290", VA = "0x325B290", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001CE")]
		[CompilerGenerated]
		private struct <LoadGuideSceneAsset>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<TextAsset>>.Awaiter <>u__1;

			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x325B29C", Offset = "0x325B29C", VA = "0x325B29C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x325B858", Offset = "0x325B858", VA = "0x325B858", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001CF")]
		[CompilerGenerated]
		private struct <DelayResetProgress>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000C4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WorldBuilderGuideSystem <>4__this;

			[Token(Token = "0x4000C4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4000C4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<Result>.Awaiter <>u__2;

			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x325B8B0", Offset = "0x325B8B0", VA = "0x325B8B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x325BEA8", Offset = "0x325BEA8", VA = "0x325BEA8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001D0")]
		[CompilerGenerated]
		private struct <ResetGuide>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderGuideSystem <>4__this;

			[Token(Token = "0x4000C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<bool, bool> args;

			[Token(Token = "0x4000C53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x325BEB4", Offset = "0x325BEB4", VA = "0x325BEB4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x325C8D4", Offset = "0x325C8D4", VA = "0x325C8D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001D1")]
		[CompilerGenerated]
		private struct <GuideAction_CheckCanStart>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderGuideSystem <>4__this;

			[Token(Token = "0x4000C57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x325C92C", Offset = "0x325C92C", VA = "0x325C92C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x325CD30", Offset = "0x325CD30", VA = "0x325CD30", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001D2")]
		[CompilerGenerated]
		private struct <GuideAction_CheckCanStartRun>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderGuideSystem <>4__this;

			[Token(Token = "0x4000C5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x325CD3C", Offset = "0x325CD3C", VA = "0x325CD3C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x325D140", Offset = "0x325D140", VA = "0x325D140", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001D3")]
		[CompilerGenerated]
		private struct <GuideAction_CheckPrologueFinish>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderGuideSystem <>4__this;

			[Token(Token = "0x4000C5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x325D14C", Offset = "0x325D14C", VA = "0x325D14C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x325D5B8", Offset = "0x325D5B8", VA = "0x325D5B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001D4")]
		[CompilerGenerated]
		private struct <GuideAction_CheckMode>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000C62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Args<int> args;

			[Token(Token = "0x4000C63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C4D")]
			[Address(RVA = "0x325D5C4", Offset = "0x325D5C4", VA = "0x325D5C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C4E")]
			[Address(RVA = "0x325DAC4", Offset = "0x325DAC4", VA = "0x325DAC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000C39")]
		public const int WB_Prologue_TriggerID = 4;

		[Token(Token = "0x4000C3A")]
		public const int WB_EditMode_TriggerID = 5;

		[Token(Token = "0x4000C3B")]
		public const int WB_RunMode_TriggerID = 6;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<string> _lockObjDic;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool startGuide;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _startRunGuide;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private JoystickMono _joystickMono;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _inGuide;

		[Token(Token = "0x170000E3")]
		private GuideSystem _guideSystem
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0x32585D0", Offset = "0x32585D0", VA = "0x32585D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E4")]
		public bool InWBPrologueGuide
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0x3258634", Offset = "0x3258634", VA = "0x3258634")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E5")]
		public bool InWBEditModeGuide
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0x3258668", Offset = "0x3258668", VA = "0x3258668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x325869C", Offset = "0x325869C", VA = "0x325869C", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x32586A0", Offset = "0x32586A0", VA = "0x32586A0", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x32586A4", Offset = "0x32586A4", VA = "0x32586A4", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x32586A8", Offset = "0x32586A8", VA = "0x32586A8")]
		public GuideWorker GetWBGuideWorker(int triggerID)
		{
			return null;
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x325871C", Offset = "0x325871C", VA = "0x325871C")]
		[Command]
		[AsyncStateMachine(typeof(<InitLockData>d__18))]
		private UniTask InitLockData(Args<bool> args)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x32588B8", Offset = "0x32588B8", VA = "0x32588B8")]
		[AsyncStateMachine(typeof(<LoadGuideSceneAsset>d__19))]
		[Command]
		private UniTask<Result> LoadGuideSceneAsset()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x32589A4", Offset = "0x32589A4", VA = "0x32589A4")]
		[Command]
		private Result GuideAction_ResetProgress()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x3258A04", Offset = "0x3258A04", VA = "0x3258A04")]
		[AsyncStateMachine(typeof(<DelayResetProgress>d__21))]
		private void DelayResetProgress()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x3258AE0", Offset = "0x3258AE0", VA = "0x3258AE0")]
		[Command]
		[AsyncStateMachine(typeof(<ResetGuide>d__22))]
		private UniTask<Result> ResetGuide(Args<bool, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x3258BF8", Offset = "0x3258BF8", VA = "0x3258BF8")]
		[Command]
		private Result IsLoadSceneFormTemplate()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x3258D4C", Offset = "0x3258D4C", VA = "0x3258D4C")]
		[Command]
		private Result GuideAction_ChangeMode(Args<int> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x3258E6C", Offset = "0x3258E6C", VA = "0x3258E6C")]
		[Command]
		private Result GuideAction_ChangeModeEnable(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x3258F40", Offset = "0x3258F40", VA = "0x3258F40")]
		[Command]
		private Result GuideAction_PreviewTipsActive(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x32590A4", Offset = "0x32590A4", VA = "0x32590A4")]
		[AsyncStateMachine(typeof(<GuideAction_CheckCanStart>d__27))]
		[Command]
		private UniTask GuideAction_CheckCanStart()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x3259200", Offset = "0x3259200", VA = "0x3259200")]
		[AsyncStateMachine(typeof(<GuideAction_CheckCanStartRun>d__28))]
		[Command]
		private UniTask GuideAction_CheckCanStartRun()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x325935C", Offset = "0x325935C", VA = "0x325935C")]
		[Command]
		[AsyncStateMachine(typeof(<GuideAction_CheckPrologueFinish>d__29))]
		private UniTask GuideAction_CheckPrologueFinish()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x32594B8", Offset = "0x32594B8", VA = "0x32594B8")]
		[AsyncStateMachine(typeof(<GuideAction_CheckMode>d__30))]
		[Command]
		private UniTask GuideAction_CheckMode(Args<int> args)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x3259608", Offset = "0x3259608", VA = "0x3259608")]
		[Command]
		private void CancelBtnPressCheck()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x3259750", Offset = "0x3259750", VA = "0x3259750")]
		[Command]
		private Result GuideAction_HideFxOnBtnPress(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x32598B4", Offset = "0x32598B4", VA = "0x32598B4")]
		[Command]
		private Result GuideAction_HandleBuilderUIOnlyLock(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x3259998", Offset = "0x3259998", VA = "0x3259998")]
		[Command]
		private Result GuideAction_HandleBuilderUI(Args<bool, bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x3259AB4", Offset = "0x3259AB4", VA = "0x3259AB4")]
		[Command]
		private void SetWorldBuilderGuideEnable(Args<bool> args)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x3259B00", Offset = "0x3259B00", VA = "0x3259B00")]
		public void SetRunGuideEnable(bool arg)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x3259B0C", Offset = "0x3259B0C", VA = "0x3259B0C")]
		[Command]
		private Result GuideAction_SetRunGuideEnable(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x3259BA8", Offset = "0x3259BA8", VA = "0x3259BA8")]
		[Command]
		private Result FindJoystickChild(Args<int, int> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x3259690", Offset = "0x3259690", VA = "0x3259690")]
		private void InitJoystickMono()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x3259CE0", Offset = "0x3259CE0", VA = "0x3259CE0")]
		[Command]
		private Result SyncLockDic()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x3259DBC", Offset = "0x3259DBC", VA = "0x3259DBC")]
		public bool HideUIOnStartDirect()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x3259E58", Offset = "0x3259E58", VA = "0x3259E58")]
		[Command]
		private Result HideUIOnStart()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x3259F30", Offset = "0x3259F30", VA = "0x3259F30")]
		[Command]
		private Result GetEditModeGuideKeyStep()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x325A048", Offset = "0x325A048", VA = "0x325A048")]
		[Command]
		private Result IsInWBGuide()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x325A108", Offset = "0x325A108", VA = "0x325A108")]
		public bool IsInWBGuideScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x325A130", Offset = "0x325A130", VA = "0x325A130")]
		[Command]
		private Result IsFirstStartGuide()
		{
			return default(Result);
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x325A248", Offset = "0x325A248", VA = "0x325A248")]
		public void SetGuideState(bool inGuide)
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x325A254", Offset = "0x325A254", VA = "0x325A254")]
		public WorldBuilderGuideSystem()
		{
		}
	}
}
namespace ByteDance.Picoverse.Utility
{
	[Token(Token = "0x20001D5")]
	public class MathUtility
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x325DAD0", Offset = "0x325DAD0", VA = "0x325DAD0")]
		public static float Map(float value, float from1, float to1, float from2, float to2, bool clamp)
		{
			return default(float);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x325DB0C", Offset = "0x325DB0C", VA = "0x325DB0C")]
		public static float PythagoreanTheorem(float side1, float side2, bool resultIsLong)
		{
			return default(float);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x325DBD0", Offset = "0x325DBD0", VA = "0x325DBD0")]
		public static float CalculateAverage(params float[] array)
		{
			return default(float);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x325DC18", Offset = "0x325DC18", VA = "0x325DC18")]
		public static bool IsParallel(Vector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x325DDC0", Offset = "0x325DDC0", VA = "0x325DDC0")]
		public MathUtility()
		{
		}
	}
}
namespace ByteDance.Picoverse.Systems
{
	[Token(Token = "0x20001D6")]
	public class ALogFile : Singleton<ALogFile>
	{
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ByteDance.Picoverse.ALog.ALog _alog;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long _currentTime;

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x325DDC8", Offset = "0x325DDC8", VA = "0x325DDC8")]
		public void Init()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x325E21C", Offset = "0x325E21C", VA = "0x325E21C")]
		public void UnInit()
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x325E378", Offset = "0x325E378", VA = "0x325E378")]
		private void OnLog(Poliq.Foundation.Log.LogLevel level, string message)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x325DFE4", Offset = "0x325DFE4", VA = "0x325DFE4")]
		private ALogLevel LogLevel2ALogLevel(Poliq.Foundation.Log.LogLevel level)
		{
			return default(ALogLevel);
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x325E3A8", Offset = "0x325E3A8", VA = "0x325E3A8")]
		private void OnApplicationPauseEnd(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x325E004", Offset = "0x325E004", VA = "0x325E004")]
		private string GenerateVersionInfo()
		{
			return null;
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x325E430", Offset = "0x325E430", VA = "0x325E430")]
		public void UploadLogs()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x325E440", Offset = "0x325E440", VA = "0x325E440")]
		public ALogFile()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public class ALogSystem : SystemBase
	{
		[Token(Token = "0x170000E6")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000C5C")]
			[Address(RVA = "0x325E4AC", Offset = "0x325E4AC", VA = "0x325E4AC", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x325E4B4", Offset = "0x325E4B4", VA = "0x325E4B4", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x325E4B8", Offset = "0x325E4B8", VA = "0x325E4B8", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x325E4BC", Offset = "0x325E4BC", VA = "0x325E4BC", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x325E4C0", Offset = "0x325E4C0", VA = "0x325E4C0")]
		[Command]
		private void UploadLogs()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x325E53C", Offset = "0x325E53C", VA = "0x325E53C")]
		public ALogSystem()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class ApplicationSystem : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001D9")]
		[CompilerGenerated]
		private struct <OnEnable>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x325F5E0", Offset = "0x325F5E0", VA = "0x325F5E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C79")]
			[Address(RVA = "0x326057C", Offset = "0x326057C", VA = "0x326057C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001DA")]
		[CompilerGenerated]
		private struct <OnDestroy>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000C7A")]
			[Address(RVA = "0x3260588", Offset = "0x3260588", VA = "0x3260588", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C7B")]
			[Address(RVA = "0x3260944", Offset = "0x3260944", VA = "0x3260944", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001DB")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C7C")]
			[Address(RVA = "0x3260950", Offset = "0x3260950", VA = "0x3260950")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6000C7D")]
			[Address(RVA = "0x3260958", Offset = "0x3260958", VA = "0x3260958")]
			internal void <InitializeAsync>b__0(Message<PlatformInitializeResult> t)
			{
			}

			[Token(Token = "0x6000C7E")]
			[Address(RVA = "0x3260A70", Offset = "0x3260A70", VA = "0x3260A70")]
			internal bool <InitializeAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001DC")]
		[CompilerGenerated]
		private struct <InitializeAsync>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private <>c__DisplayClass7_0 <>8__1;

			[Token(Token = "0x4000C74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000C7F")]
			[Address(RVA = "0x3260A78", Offset = "0x3260A78", VA = "0x3260A78", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C80")]
			[Address(RVA = "0x3261090", Offset = "0x3261090", VA = "0x3261090", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001DD")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4000C75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000C76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C81")]
			[Address(RVA = "0x32610E8", Offset = "0x32610E8", VA = "0x32610E8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6000C82")]
			[Address(RVA = "0x32610F0", Offset = "0x32610F0", VA = "0x32610F0")]
			internal void <GetAccessToken>b__0(Message<string> t)
			{
			}

			[Token(Token = "0x6000C83")]
			[Address(RVA = "0x32611F4", Offset = "0x32611F4", VA = "0x32611F4")]
			internal bool <GetAccessToken>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001DE")]
		[CompilerGenerated]
		private struct <GetAccessToken>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass8_0 <>8__1;

			[Token(Token = "0x4000C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000C84")]
			[Address(RVA = "0x32611FC", Offset = "0x32611FC", VA = "0x32611FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C85")]
			[Address(RVA = "0x3261A8C", Offset = "0x3261A8C", VA = "0x3261A8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001DF")]
		[CompilerGenerated]
		private struct <GetLaunchDetails>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000C86")]
			[Address(RVA = "0x3261AE4", Offset = "0x3261AE4", VA = "0x3261AE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C87")]
			[Address(RVA = "0x326203C", Offset = "0x326203C", VA = "0x326203C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001E0")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C88")]
			[Address(RVA = "0x3262094", Offset = "0x3262094", VA = "0x3262094")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000C89")]
			[Address(RVA = "0x326209C", Offset = "0x326209C", VA = "0x326209C")]
			internal void <SetDestinationAsync>b__0(Message t)
			{
			}

			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0x32620B4", Offset = "0x32620B4", VA = "0x32620B4")]
			internal bool <SetDestinationAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001E1")]
		[CompilerGenerated]
		private struct <SetDestinationAsync>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<string> args;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0x32620BC", Offset = "0x32620BC", VA = "0x32620BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0x3262968", Offset = "0x3262968", VA = "0x3262968", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001E2")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0x32629C0", Offset = "0x32629C0", VA = "0x32629C0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0x32629C8", Offset = "0x32629C8", VA = "0x32629C8")]
			internal void <SetIsJoinAbleAsync>b__0(Message t)
			{
			}

			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0x32629E0", Offset = "0x32629E0", VA = "0x32629E0")]
			internal bool <SetIsJoinAbleAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001E3")]
		[CompilerGenerated]
		private struct <SetIsJoinAbleAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass11_0 <>8__1;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<bool> args;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000C90")]
			[Address(RVA = "0x32629E8", Offset = "0x32629E8", VA = "0x32629E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C91")]
			[Address(RVA = "0x3263270", Offset = "0x3263270", VA = "0x3263270", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001E4")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4000C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C92")]
			[Address(RVA = "0x32632C8", Offset = "0x32632C8", VA = "0x32632C8")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6000C93")]
			[Address(RVA = "0x32632D0", Offset = "0x32632D0", VA = "0x32632D0")]
			internal void <SetLobbySessionAsync>b__0(Message t)
			{
			}

			[Token(Token = "0x6000C94")]
			[Address(RVA = "0x32632E8", Offset = "0x32632E8", VA = "0x32632E8")]
			internal bool <SetLobbySessionAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001E5")]
		[CompilerGenerated]
		private struct <SetLobbySessionAsync>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass12_0 <>8__1;

			[Token(Token = "0x4000C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<string> args;

			[Token(Token = "0x4000C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000C95")]
			[Address(RVA = "0x32632F0", Offset = "0x32632F0", VA = "0x32632F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C96")]
			[Address(RVA = "0x3263B7C", Offset = "0x3263B7C", VA = "0x3263B7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001E6")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4000C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C97")]
			[Address(RVA = "0x3263BD4", Offset = "0x3263BD4", VA = "0x3263BD4")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6000C98")]
			[Address(RVA = "0x3263BDC", Offset = "0x3263BDC", VA = "0x3263BDC")]
			internal void <SetMatchSessionAsync>b__0(Message t)
			{
			}

			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x3263BF4", Offset = "0x3263BF4", VA = "0x3263BF4")]
			internal bool <SetMatchSessionAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001E7")]
		[CompilerGenerated]
		private struct <SetMatchSessionAsync>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass13_0 <>8__1;

			[Token(Token = "0x4000CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<string> args;

			[Token(Token = "0x4000CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000CA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x3263BFC", Offset = "0x3263BFC", VA = "0x3263BFC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x3264488", Offset = "0x3264488", VA = "0x3264488", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001E8")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000CA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000CA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x32644E0", Offset = "0x32644E0", VA = "0x32644E0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0x32644E8", Offset = "0x32644E8", VA = "0x32644E8")]
			internal void <SetExtraAsync>b__0(Message t)
			{
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x3264500", Offset = "0x3264500", VA = "0x3264500")]
			internal bool <SetExtraAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001E9")]
		[CompilerGenerated]
		private struct <SetExtraAsync>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000CAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass14_0 <>8__1;

			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<string> args;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000CAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0x3264508", Offset = "0x3264508", VA = "0x3264508", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0x3264D94", Offset = "0x3264D94", VA = "0x3264D94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001EA")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000CAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000CAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0x3264DEC", Offset = "0x3264DEC", VA = "0x3264DEC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0x3264DF4", Offset = "0x3264DF4", VA = "0x3264DF4")]
			internal void <PresenceClearAsync>b__0(Message t)
			{
			}

			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0x3264E0C", Offset = "0x3264E0C", VA = "0x3264E0C")]
			internal bool <PresenceClearAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001EB")]
		[CompilerGenerated]
		private struct <PresenceClearAsync>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass15_0 <>8__1;

			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0x3264E14", Offset = "0x3264E14", VA = "0x3264E14", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0x3265690", Offset = "0x3265690", VA = "0x3265690", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001EC")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0x32656E8", Offset = "0x32656E8", VA = "0x32656E8")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0x32656F0", Offset = "0x32656F0", VA = "0x32656F0")]
			internal void <SendInviteAsync>b__0(Message<SendInvitesResult> t)
			{
			}

			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0x3265760", Offset = "0x3265760", VA = "0x3265760")]
			internal bool <SendInviteAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001ED")]
		[CompilerGenerated]
		private struct <SendInviteAsync>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass16_0 <>8__1;

			[Token(Token = "0x4000CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<string> args;

			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0x3265768", Offset = "0x3265768", VA = "0x3265768", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0x3266080", Offset = "0x3266080", VA = "0x3266080", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001EE")]
		[CompilerGenerated]
		private struct <SendInviteWithExtraAsync>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<string, string> args;

			[Token(Token = "0x4000CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0x32660D8", Offset = "0x32660D8", VA = "0x32660D8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0x32668C0", Offset = "0x32668C0", VA = "0x32668C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20001EF")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4000CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isComplete;

			[Token(Token = "0x4000CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Result result;

			[Token(Token = "0x6000CAD")]
			[Address(RVA = "0x3266918", Offset = "0x3266918", VA = "0x3266918")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0x3266920", Offset = "0x3266920", VA = "0x3266920")]
			internal void <LaunchCheckoutFlowAsync>b__0(Message<Purchase> t)
			{
			}

			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0x32669BC", Offset = "0x32669BC", VA = "0x32669BC")]
			internal bool <LaunchCheckoutFlowAsync>b__1()
			{
				return default(bool);
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001F0")]
		[CompilerGenerated]
		private struct <LaunchCheckoutFlowAsync>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public ApplicationSystem <>4__this;

			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private <>c__DisplayClass18_0 <>8__1;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Args<string, string, string> args;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0x32669C4", Offset = "0x32669C4", VA = "0x32669C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x3267280", Offset = "0x3267280", VA = "0x3267280", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000C62")]
			[Address(RVA = "0x325E54C", Offset = "0x325E54C", VA = "0x325E54C", Slot = "24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x325E554", Offset = "0x325E554", VA = "0x325E554", Slot = "27")]
		[AsyncStateMachine(typeof(<OnEnable>d__2))]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x325E630", Offset = "0x325E630", VA = "0x325E630", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x325E634", Offset = "0x325E634", VA = "0x325E634", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x325E638", Offset = "0x325E638", VA = "0x325E638", Slot = "7")]
		[AsyncStateMachine(typeof(<OnDestroy>d__5))]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x325E714", Offset = "0x325E714", VA = "0x325E714")]
		private static void OnCompleteHandler(Message message, ref Result result)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x325E828", Offset = "0x325E828", VA = "0x325E828")]
		[Command]
		[AsyncStateMachine(typeof(<InitializeAsync>d__7))]
		private UniTask<Result> InitializeAsync()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x325E914", Offset = "0x325E914", VA = "0x325E914")]
		[Command]
		[AsyncStateMachine(typeof(<GetAccessToken>d__8))]
		private UniTask<Result> GetAccessToken()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x325EA1C", Offset = "0x325EA1C", VA = "0x325EA1C")]
		[Command]
		[AsyncStateMachine(typeof(<GetLaunchDetails>d__9))]
		private UniTask<Result> GetLaunchDetails()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x325EB24", Offset = "0x325EB24", VA = "0x325EB24")]
		[AsyncStateMachine(typeof(<SetDestinationAsync>d__10))]
		[Command]
		private UniTask<Result> SetDestinationAsync(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x325EC4C", Offset = "0x325EC4C", VA = "0x325EC4C")]
		[Command]
		[AsyncStateMachine(typeof(<SetIsJoinAbleAsync>d__11))]
		private UniTask<Result> SetIsJoinAbleAsync(Args<bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x325ED64", Offset = "0x325ED64", VA = "0x325ED64")]
		[Command]
		[AsyncStateMachine(typeof(<SetLobbySessionAsync>d__12))]
		private UniTask<Result> SetLobbySessionAsync(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x325EE8C", Offset = "0x325EE8C", VA = "0x325EE8C")]
		[Command]
		[AsyncStateMachine(typeof(<SetMatchSessionAsync>d__13))]
		private UniTask<Result> SetMatchSessionAsync(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x325EFB4", Offset = "0x325EFB4", VA = "0x325EFB4")]
		[Command]
		[AsyncStateMachine(typeof(<SetExtraAsync>d__14))]
		private UniTask<Result> SetExtraAsync(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x325F0DC", Offset = "0x325F0DC", VA = "0x325F0DC")]
		[Command]
		[AsyncStateMachine(typeof(<PresenceClearAsync>d__15))]
		private UniTask<Result> PresenceClearAsync()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x325F1E4", Offset = "0x325F1E4", VA = "0x325F1E4")]
		[AsyncStateMachine(typeof(<SendInviteAsync>d__16))]
		[Command]
		private UniTask<Result> SendInviteAsync(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x325F30C", Offset = "0x325F30C", VA = "0x325F30C")]
		[Command]
		[AsyncStateMachine(typeof(<SendInviteWithExtraAsync>d__17))]
		private UniTask<Result> SendInviteWithExtraAsync(Args<string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x325F43C", Offset = "0x325F43C", VA = "0x325F43C")]
		[Command]
		[AsyncStateMachine(typeof(<LaunchCheckoutFlowAsync>d__18))]
		private UniTask<Result> LaunchCheckoutFlowAsync(Args<string, string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x325F568", Offset = "0x325F568", VA = "0x325F568")]
		private static ProductData CloneToProduct(Product product)
		{
			return default(ProductData);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x325F5A0", Offset = "0x325F5A0", VA = "0x325F5A0")]
		private static PurchaseData CloneToPurchase(Purchase purchase)
		{
			return default(PurchaseData);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x325F5D0", Offset = "0x325F5D0", VA = "0x325F5D0")]
		public ApplicationSystem()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class AppStartSystem : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001F2")]
		[CompilerGenerated]
		private struct <InitServerAddress>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4000CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public AppStartSystem <>4__this;

			[Token(Token = "0x4000CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private Result <result>5__2;

			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			private ServerConfig <serverConfig>5__3;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			private ServerType <serverType>5__4;

			[Token(Token = "0x4000CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			private ServerAddress <serverAddress>5__5;

			[Token(Token = "0x4000CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4000CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0x3267700", Offset = "0x3267700", VA = "0x3267700", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0x3268528", Offset = "0x3268528", VA = "0x3268528", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0x32672D8", Offset = "0x32672D8", VA = "0x32672D8", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x32672E0", Offset = "0x32672E0", VA = "0x32672E0", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x32672E4", Offset = "0x32672E4", VA = "0x32672E4", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x32672E8", Offset = "0x32672E8", VA = "0x32672E8", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x32672EC", Offset = "0x32672EC", VA = "0x32672EC")]
		[Command]
		private void SetDebugAssetBranch(Args<string> args)
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x32673F4", Offset = "0x32673F4", VA = "0x32673F4")]
		private void InitDebugAssetBranch(string debugAssetUrl, string defaultAssetBranch)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x32675C8", Offset = "0x32675C8", VA = "0x32675C8")]
		[Command]
		[AsyncStateMachine(typeof(<InitServerAddress>d__8))]
		private UniTask<Result> InitServerAddress(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x32676F0", Offset = "0x32676F0", VA = "0x32676F0")]
		public AppStartSystem()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class AudioCommonData : ICommandArgs, IArgs
	{
		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject target;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioOutputGroupType groupType;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float value;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string eventName;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string stringValue;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string userID;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool enable;

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x3268580", Offset = "0x3268580", VA = "0x3268580", Slot = "4")]
		public void SetByCommandLineArgs(CommandLineArgs args)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x3268584", Offset = "0x3268584", VA = "0x3268584")]
		public AudioCommonData()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class AudioSystem : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001F5")]
		[CompilerGenerated]
		private struct <DownloadSoundBank>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string> args;

			[Token(Token = "0x4000CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public AudioSystem <>4__this;

			[Token(Token = "0x4000CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <downloadPath>5__2;

			[Token(Token = "0x4000CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private string <downloadBnk>5__3;

			[Token(Token = "0x4000CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private Result <result>5__4;

			[Token(Token = "0x4000CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private string <downloadUrl>5__5;

			[Token(Token = "0x4000CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			private string <saveETag>5__6;

			[Token(Token = "0x4000CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			private string <saveFile>5__7;

			[Token(Token = "0x4000CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
			private UnityWebRequest <awr>5__8;

			[Token(Token = "0x4000CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			private UnityWebRequest <downloadReq>5__9;

			[Token(Token = "0x4000CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			private UnityWebRequestAsyncOperation <uwao>5__10;

			[Token(Token = "0x4000CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			private UnityAsyncExtensions.UnityWebRequestAsyncOperationAwaiter <>u__1;

			[Token(Token = "0x4000CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			private YieldAwaitable.Awaiter <>u__2;

			[Token(Token = "0x4000CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
			private UniTask<Result>.Awaiter <>u__3;

			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x31059EC", Offset = "0x31059EC", VA = "0x31059EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x31069A4", Offset = "0x31069A4", VA = "0x31069A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001F6")]
		[CompilerGenerated]
		private struct <JoinWorldRtcRoom>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000CF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public AudioSystem <>4__this;

			[Token(Token = "0x4000CF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public IArgs commandArgs;

			[Token(Token = "0x4000CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000D03")]
			[Address(RVA = "0x31069FC", Offset = "0x31069FC", VA = "0x31069FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D04")]
			[Address(RVA = "0x3106EDC", Offset = "0x3106EDC", VA = "0x3106EDC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001F7")]
		[CompilerGenerated]
		private struct <JoinWorldRtcRoom>d__62 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioSystem <>4__this;

			[Token(Token = "0x4000CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string userID;

			[Token(Token = "0x4000CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000D05")]
			[Address(RVA = "0x3106F34", Offset = "0x3106F34", VA = "0x3106F34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D06")]
			[Address(RVA = "0x310731C", Offset = "0x310731C", VA = "0x310731C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20001F8")]
		[CompilerGenerated]
		private struct <JoinRtcRoom>d__67 : IAsyncStateMachine
		{
			[Token(Token = "0x4000CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public string userID;

			[Token(Token = "0x4000D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public AudioSystem <>4__this;

			[Token(Token = "0x4000D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private RtcDataStore <rtcDataStoreInstance>5__2;

			[Token(Token = "0x4000D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4000D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private YieldAwaitable.Awaiter <>u__2;

			[Token(Token = "0x6000D07")]
			[Address(RVA = "0x3107328", Offset = "0x3107328", VA = "0x3107328", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000D08")]
			[Address(RVA = "0x3107C60", Offset = "0x3107C60", VA = "0x3107C60", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Result result;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isInRoom;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool isfinishSceneLoading;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		private bool isJoinWorld;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private IArgs currentArgs;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x326858C", Offset = "0x326858C", VA = "0x326858C", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x32688AC", Offset = "0x32688AC", VA = "0x32688AC", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x32688B0", Offset = "0x32688B0", VA = "0x32688B0", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x32688B4", Offset = "0x32688B4", VA = "0x32688B4", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x3268C18", Offset = "0x3268C18", VA = "0x3268C18")]
		[Command]
		private Result InitAudio(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x3268CF8", Offset = "0x3268CF8", VA = "0x3268CF8")]
		[Command]
		private Result SaveVolumeData(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x3268DD8", Offset = "0x3268DD8", VA = "0x3268DD8")]
		private string GetBgmAssetUrl(string bnkName)
		{
			return null;
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x32690F8", Offset = "0x32690F8", VA = "0x32690F8")]
		[Command]
		[AsyncStateMachine(typeof(<DownloadSoundBank>d__8))]
		private UniTask<Result> DownloadSoundBank(Args<string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x3269240", Offset = "0x3269240", VA = "0x3269240")]
		[Command]
		private Result LoadSoundBank(Args<string> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x3269334", Offset = "0x3269334", VA = "0x3269334")]
		[Command]
		private Result UnLoadSoundBank(Args<string> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x3269428", Offset = "0x3269428", VA = "0x3269428")]
		[Command]
		private Result SoundEvent(Args<string, GameObject> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x3269584", Offset = "0x3269584", VA = "0x3269584")]
		[Command]
		private Result SoundStop(Args<string, GameObject, int> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x32696F0", Offset = "0x32696F0", VA = "0x32696F0")]
		[Command]
		private Result SoundTrigger(Args<string, GameObject> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x3269848", Offset = "0x3269848", VA = "0x3269848")]
		[Command]
		private Result SoundSwitch(Args<string, string, GameObject> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x32699BC", Offset = "0x32699BC", VA = "0x32699BC")]
		[Command]
		private Result SoundState(Args<string, string> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x3269ABC", Offset = "0x3269ABC", VA = "0x3269ABC")]
		[Command]
		private Result SoundRTPC(Args<string, float> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x3269BC0", Offset = "0x3269BC0", VA = "0x3269BC0")]
		[Command]
		private Result SetSoundVolume(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x3269D94", Offset = "0x3269D94", VA = "0x3269D94")]
		[Command]
		private Result SetEnable(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x3269ED8", Offset = "0x3269ED8", VA = "0x3269ED8")]
		[Command]
		private Result GetVolume(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x326A018", Offset = "0x326A018", VA = "0x326A018")]
		[Command]
		private Result GetMuteState(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x326A15C", Offset = "0x326A15C", VA = "0x326A15C")]
		[AsyncStateMachine(typeof(<JoinWorldRtcRoom>d__21))]
		[Command]
		private UniTask<Result> JoinWorldRtcRoom(IArgs commandArgs)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x326A294", Offset = "0x326A294", VA = "0x326A294")]
		[Command]
		private Result ExitWorldRtcRoom(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x326A3D4", Offset = "0x326A3D4", VA = "0x326A3D4")]
		[Command]
		private Result SetRtcSomebodyMute(Args<string, bool> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x326A4E0", Offset = "0x326A4E0", VA = "0x326A4E0")]
		[Command]
		private Result GetMuteList()
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x326A57C", Offset = "0x326A57C", VA = "0x326A57C")]
		[Command]
		private Result GetUserMuteState(Args<string> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x326A68C", Offset = "0x326A68C", VA = "0x326A68C")]
		[Command]
		private Result SetRoomInfoForRTC(Args<long, long> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x326A6FC", Offset = "0x326A6FC", VA = "0x326A6FC")]
		[Command]
		private Result SetUserMicUsage(Args<bool, Action<int>> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x326A7D8", Offset = "0x326A7D8", VA = "0x326A7D8")]
		[Command]
		private Result GetUserMicUsage(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x326A958", Offset = "0x326A958", VA = "0x326A958")]
		[Command]
		private Result GetUserMicPrivacy(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x326AA40", Offset = "0x326AA40", VA = "0x326AA40")]
		[Command]
		private Result GetMicMode(Args<Action<bool>> commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x326AAF8", Offset = "0x326AAF8", VA = "0x326AAF8")]
		[Command]
		private Result EnableMicrophone(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x326AC24", Offset = "0x326AC24", VA = "0x326AC24")]
		[Command]
		private Result GetRtcMicphoneDetectData()
		{
			return default(Result);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x326AD1C", Offset = "0x326AD1C", VA = "0x326AD1C")]
		[Command]
		private Result SetRtcMicphoneDetectEvent(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x326B06C", Offset = "0x326B06C", VA = "0x326B06C")]
		[Command]
		private Result RegisterLocalMicphoneDetectEvent(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x326B190", Offset = "0x326B190", VA = "0x326B190")]
		[Command]
		private Result DissubscribeRtcMicphoneDetectEvent(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x326B404", Offset = "0x326B404", VA = "0x326B404")]
		[Command]
		private Result StartAudioDetect()
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x326B544", Offset = "0x326B544", VA = "0x326B544")]
		[Command]
		private Result StopAudioDetect()
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x326B67C", Offset = "0x326B67C", VA = "0x326B67C")]
		[Command]
		private Result ResetAudioScriptableObject(IArgs commandArgs)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x326B7B4", Offset = "0x326B7B4", VA = "0x326B7B4")]
		[Command]
		private Result PlayRemoteAudioUrl(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x326B920", Offset = "0x326B920", VA = "0x326B920")]
		[Command]
		private Result PlayRemoteAudio(Args<string, GameObject> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x326BA94", Offset = "0x326BA94", VA = "0x326BA94")]
		[Command]
		private Result PlayRemoteAudioWithData(Args<RemoteAudioData> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x326BC08", Offset = "0x326BC08", VA = "0x326BC08")]
		[Command]
		private Result StopRemoteAudio(Args<uint> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x326BD0C", Offset = "0x326BD0C", VA = "0x326BD0C")]
		[Command]
		private Result StopAllRemoteAudio(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x326BDEC", Offset = "0x326BDEC", VA = "0x326BDEC")]
		[Command]
		private Result PauseRemoteAudio(Args<uint> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x326BEF0", Offset = "0x326BEF0", VA = "0x326BEF0")]
		[Command]
		private Result PauseAllRemoteAudio(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x326BFD0", Offset = "0x326BFD0", VA = "0x326BFD0")]
		[Command]
		private Result ResumeRemoteAudio(Args<uint> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x326C0D4", Offset = "0x326C0D4", VA = "0x326C0D4")]
		[Command]
		private Result ResumeAllRemoteAudio(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x326C1B4", Offset = "0x326C1B4", VA = "0x326C1B4")]
		[Command]
		private Result RemoteAudioToPosition(Args<uint, float> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x326C2C4", Offset = "0x326C2C4", VA = "0x326C2C4")]
		[Command]
		private Result SetRemoteAudioVolume(Args<uint, float> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x326C3E4", Offset = "0x326C3E4", VA = "0x326C3E4")]
		[Command]
		private Result SetRemoteAudioAttenuationValue(Args<uint, float> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x326C504", Offset = "0x326C504", VA = "0x326C504")]
		[Command]
		private Result SetRemoteAudioAttenuation(Args<uint, bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x326C628", Offset = "0x326C628", VA = "0x326C628")]
		private void BeginLoadingScene(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x326C630", Offset = "0x326C630", VA = "0x326C630")]
		private void LoadingSceneFinish(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x326C77C", Offset = "0x326C77C", VA = "0x326C77C")]
		private void JoinWorldFinish(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x326C65C", Offset = "0x326C65C", VA = "0x326C65C")]
		private void JoinWorldRtcRoom(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x326C8BC", Offset = "0x326C8BC", VA = "0x326C8BC")]
		private void ExitWorldRtcRoom(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x326C98C", Offset = "0x326C98C", VA = "0x326C98C")]
		private void ExitWorldRtcRoom(long userID)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x326C7C8", Offset = "0x326C7C8", VA = "0x326C7C8")]
		[AsyncStateMachine(typeof(<JoinWorldRtcRoom>d__62))]
		private void JoinWorldRtcRoom(string userID)
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x326CB70", Offset = "0x326CB70", VA = "0x326CB70")]
		private void OnApplicationPause(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x326CFC0", Offset = "0x326CFC0", VA = "0x326CFC0")]
		private void OnPostInitScene(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x3269D4C", Offset = "0x3269D4C", VA = "0x3269D4C")]
		private AudioCommonData TransformParama(IArgs commandArgs)
		{
			return null;
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x326D124", Offset = "0x326D124", VA = "0x326D124")]
		private bool GetRtcOthersMicUsage()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x326D174", Offset = "0x326D174", VA = "0x326D174")]
		[AsyncStateMachine(typeof(<JoinRtcRoom>d__67))]
		private UniTask<Result> JoinRtcRoom(string userID)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x326A2EC", Offset = "0x326A2EC", VA = "0x326A2EC")]
		private Result ExitRtcRoom()
		{
			return default(Result);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x326D2AC", Offset = "0x326D2AC", VA = "0x326D2AC")]
		public static void TestJoinRtcRoom(string userID)
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x326D358", Offset = "0x326D358", VA = "0x326D358")]
		public static void TestExitRtcRoom()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x326D3F4", Offset = "0x326D3F4", VA = "0x326D3F4")]
		public AudioSystem()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public enum AvatarAssetPartType
	{
		[Token(Token = "0x4000D06")]
		Invalid,
		[Token(Token = "0x4000D07")]
		Face,
		[Token(Token = "0x4000D08")]
		Head,
		[Token(Token = "0x4000D09")]
		Body,
		[Token(Token = "0x4000D0A")]
		Arm,
		[Token(Token = "0x4000D0B")]
		Hand,
		[Token(Token = "0x4000D0C")]
		Leg,
		[Token(Token = "0x4000D0D")]
		Custom
	}
	[Token(Token = "0x20001FA")]
	public class WorldBuilderSystem : SystemBase
	{
		[Serializable]
		[Token(Token = "0x20001FB")]
		public class AmdVoList
		{
			[Token(Token = "0x4000D39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string assetAuthor;

			[Token(Token = "0x4000D3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string assetName;

			[Token(Token = "0x4000D3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string bodyType;

			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string displayName;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public long id;

			[Token(Token = "0x4000D3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDefault;

			[Token(Token = "0x4000D3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int loadingType;

			[Token(Token = "0x4000D40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int rarity;

			[Token(Token = "0x4000D41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int renderingStyle;

			[Token(Token = "0x4000D42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string thumbnail;

			[Token(Token = "0x4000D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string weight;

			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x310CC54", Offset = "0x310CC54", VA = "0x310CC54")]
			public AmdVoList()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001FC")]
		public class PropAmdVoList
		{
			[Token(Token = "0x4000D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string assetAuthor;

			[Token(Token = "0x4000D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string assetName;

			[Token(Token = "0x4000D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int assetType;

			[Token(Token = "0x4000D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int auditStatus;

			[Token(Token = "0x4000D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string bodyType;

			[Token(Token = "0x4000D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int collectCount;

			[Token(Token = "0x4000D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string description;

			[Token(Token = "0x4000D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string displayName;

			[Token(Token = "0x4000D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string extra;

			[Token(Token = "0x4000D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public long id;

			[Token(Token = "0x4000D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool inAudit;

			[Token(Token = "0x4000D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
			public bool inPropsPackage;

			[Token(Token = "0x4000D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
			public bool isCollect;

			[Token(Token = "0x4000D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
			public bool isDefault;

			[Token(Token = "0x4000D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public int loadingType;

			[Token(Token = "0x4000D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public int rarity;

			[Token(Token = "0x4000D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int renderingStyle;

			[Token(Token = "0x4000D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int sign;

			[Token(Token = "0x4000D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public string thumbnail;

			[Token(Token = "0x4000D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int usedCount;

			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string weight;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public UserProfileProp creator;

			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x31115A4", Offset = "0x31115A4", VA = "0x31115A4")]
			public PropAmdVoList()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001FD")]
		public class PropCreatorData
		{
			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long id;

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0x31116D4", Offset = "0x31116D4", VA = "0x31116D4")]
			public PropCreatorData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001FE")]
		public class PropExtraData
		{
			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float sizeX;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float sizeY;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float sizeZ;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float capacity;

			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int grabMode;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int authority;

			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x31116DC", Offset = "0x31116DC", VA = "0x31116DC")]
			public PropExtraData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001FF")]
		public class AMDData
		{
			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string description;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int renderingStyle;

			[Token(Token = "0x4000D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long id;

			[Token(Token = "0x4000D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string thumbnail;

			[Token(Token = "0x4000D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string bodyType;

			[Token(Token = "0x4000D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int rarity;

			[Token(Token = "0x4000D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int categoryId;

			[Token(Token = "0x4000D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string displayName;

			[Token(Token = "0x4000D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<AmdVoList> amdVoList;

			[Token(Token = "0x4000D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string guid;

			[Token(Token = "0x4000D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool isColloection;

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0x310CB40", Offset = "0x310CB40", VA = "0x310CB40")]
			public AMDData()
			{
			}
		}

		[Token(Token = "0x2000200")]
		public class CollectData
		{
			[Token(Token = "0x4000D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIMaterailPreviewShow data;

			[Token(Token = "0x4000D6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string path;

			[Token(Token = "0x4000D6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string name;

			[Token(Token = "0x4000D6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int index;

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x31116E4", Offset = "0x31116E4", VA = "0x31116E4")]
			public CollectData()
			{
			}
		}

		[Token(Token = "0x2000201")]
		public class MyCollectionEffect
		{
			[Token(Token = "0x4000D70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string effect;

			[Token(Token = "0x4000D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string id;

			[Token(Token = "0x4000D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool ugc;

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x3111754", Offset = "0x3111754", VA = "0x3111754")]
			public MyCollectionEffect()
			{
			}
		}

		[Token(Token = "0x2000202")]
		public class MyCollectionList
		{
			[Token(Token = "0x4000D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MyCollectionEffect[] effects;

			[Token(Token = "0x4000D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool hasMore;

			[Token(Token = "0x4000D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string lastId;

			[Token(Token = "0x4000D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int pageSize;

			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x31117AC", Offset = "0x31117AC", VA = "0x31117AC")]
			public MyCollectionList()
			{
			}
		}

		[Token(Token = "0x2000203")]
		public class BuilderSettingInfo : IArgs
		{
			[Token(Token = "0x4000D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public double capacityPercent;

			[Token(Token = "0x4000D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int userMaxNum;

			[Token(Token = "0x4000D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int dynamicObjNum;

			[Token(Token = "0x4000D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int userCurrentNum;

			[Token(Token = "0x4000D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int userDefaultNum;

			[Token(Token = "0x4000D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string musicClipId;

			[Token(Token = "0x4000D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool musicIsPlay;

			[Token(Token = "0x4000D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int musicVolume;

			[Token(Token = "0x4000D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public uint wwiseId;

			[Token(Token = "0x4000D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public byte gravityUseType;

			[Token(Token = "0x4000D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
			public byte gravityType;

			[Token(Token = "0x4000D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float gravityV;

			[Token(Token = "0x4000D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int maxWorldCapacity;

			[Token(Token = "0x4000D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int currentWorldCapacity;

			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0x310E7E8", Offset = "0x310E7E8", VA = "0x310E7E8")]
			public BuilderSettingInfo()
			{
			}
		}

		[Token(Token = "0x2000204")]
		public class MaterialInfoSych : IArgs
		{
			[Token(Token = "0x4000D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool exitMaterial;

			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x310C278", Offset = "0x310C278", VA = "0x310C278")]
			public MaterialInfoSych()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000205")]
		[CompilerGenerated]
		private struct <Init>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0x311180C", Offset = "0x311180C", VA = "0x311180C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x311323C", Offset = "0x311323C", VA = "0x311323C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000206")]
		[CompilerGenerated]
		private struct <IsActionAvailables>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<List<string>> args;

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x3113294", Offset = "0x3113294", VA = "0x3113294", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x3113670", Offset = "0x3113670", VA = "0x3113670", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000207")]
		[CompilerGenerated]
		private struct <DownloadWorldData>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string> args;

			[Token(Token = "0x4000D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<ByteDance.AssetManagement.RawAssetObject>>.Awaiter <>u__1;

			[Token(Token = "0x4000D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Poliq.Framework.WebFile.DownloadResult>.Awaiter <>u__2;

			[Token(Token = "0x4000D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private TaskAwaiter<byte[]> <>u__3;

			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0x31136C8", Offset = "0x31136C8", VA = "0x31136C8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x31141B0", Offset = "0x31141B0", VA = "0x31141B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000208")]
		[CompilerGenerated]
		private struct <UploadWorldData>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4000D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0x3114208", Offset = "0x3114208", VA = "0x3114208", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x311471C", Offset = "0x311471C", VA = "0x311471C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000209")]
		[CompilerGenerated]
		private struct <GetAssetJsonByPath>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4000D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4000D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <resultWithObject>5__2;

			[Token(Token = "0x4000D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private string <assetName>5__3;

			[Token(Token = "0x4000D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<ByteDance.AssetManagement.RawAssetObject>>.Awaiter <>u__1;

			[Token(Token = "0x4000D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Poliq.Framework.WebFile.DownloadResult>.Awaiter <>u__2;

			[Token(Token = "0x4000D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private TaskAwaiter<string> <>u__3;

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x3114774", Offset = "0x3114774", VA = "0x3114774", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x3115468", Offset = "0x3115468", VA = "0x3115468", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200020A")]
		[CompilerGenerated]
		private struct <UploadDataFile>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4000DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<List<string>>.Awaiter <>u__1;

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x31154C0", Offset = "0x31154C0", VA = "0x31154C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x3115AD0", Offset = "0x3115AD0", VA = "0x3115AD0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200020B")]
		[CompilerGenerated]
		private struct <UploadThumbnails>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private bool <preVisible>5__3;

			[Token(Token = "0x4000DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<List<AuditData>>.Awaiter <>u__1;

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0x3115B28", Offset = "0x3115B28", VA = "0x3115B28", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x31161B8", Offset = "0x31161B8", VA = "0x31161B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200020C")]
		[CompilerGenerated]
		private struct <UploadCardThumbnail>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private bool <preVisible>5__3;

			[Token(Token = "0x4000DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<AuditData>.Awaiter <>u__1;

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0x3116210", Offset = "0x3116210", VA = "0x3116210", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x31168A0", Offset = "0x31168A0", VA = "0x31168A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200020D")]
		[CompilerGenerated]
		private struct <UploadAuditPictures>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<AuditData> <resultList>5__2;

			[Token(Token = "0x4000DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__3;

			[Token(Token = "0x4000DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private List<AuditData> <fixedData>5__4;

			[Token(Token = "0x4000DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private List<AuditData> <failedData>5__5;

			[Token(Token = "0x4000DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4000DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private UniTask<List<AuditData>>.Awaiter <>u__2;

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x31168F8", Offset = "0x31168F8", VA = "0x31168F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x3117C98", Offset = "0x3117C98", VA = "0x3117C98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200020E")]
		[CompilerGenerated]
		private struct <SendSaveTipFinish>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0x3117CF0", Offset = "0x3117CF0", VA = "0x3117CF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x311831C", Offset = "0x311831C", VA = "0x311831C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200020F")]
		[CompilerGenerated]
		private struct <SendEnterEditMode>d__57 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private Result <result>5__2;

			[Token(Token = "0x4000DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0x3118328", Offset = "0x3118328", VA = "0x3118328", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x3118A8C", Offset = "0x3118A8C", VA = "0x3118A8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000210")]
		[CompilerGenerated]
		private struct <GetAllUsedAssetIDJson>d__62 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private long[] <assetIDs>5__3;

			[Token(Token = "0x4000DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x3118AE4", Offset = "0x3118AE4", VA = "0x3118AE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x3119400", Offset = "0x3119400", VA = "0x3119400", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000211")]
		[CompilerGenerated]
		private struct <CheckAssetsOffline>d__63 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long[]> args;

			[Token(Token = "0x4000DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0x3119458", Offset = "0x3119458", VA = "0x3119458", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x3119A1C", Offset = "0x3119A1C", VA = "0x3119A1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000212")]
		[CompilerGenerated]
		private struct <CreateBuilderAssetModel>d__64 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, long, int, int, int> args;

			[Token(Token = "0x4000DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private long <id>5__2;

			[Token(Token = "0x4000DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private int <permission>5__3;

			[Token(Token = "0x4000DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
			private int <handSide>5__4;

			[Token(Token = "0x4000DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0x3119A74", Offset = "0x3119A74", VA = "0x3119A74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x311A02C", Offset = "0x311A02C", VA = "0x311A02C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000213")]
		[CompilerGenerated]
		private struct <GetAssetJsonDataByCommand>d__66 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<int, string> args;

			[Token(Token = "0x4000DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x311A084", Offset = "0x311A084", VA = "0x311A084", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0x311A5A4", Offset = "0x311A5A4", VA = "0x311A5A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000214")]
		[CompilerGenerated]
		private struct <GetAssetJsonData>d__67 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public int assetType;

			[Token(Token = "0x4000DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public string assetName;

			[Token(Token = "0x4000DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <resultWithObject>5__2;

			[Token(Token = "0x4000DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private string <json>5__3;

			[Token(Token = "0x4000DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0x311A5FC", Offset = "0x311A5FC", VA = "0x311A5FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0x311B048", Offset = "0x311B048", VA = "0x311B048", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000215")]
		[CompilerGenerated]
		private struct <GetCalculateTotalCapcityResult>d__68 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, int, bool> args;

			[Token(Token = "0x4000DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private bool <isPercentage>5__2;

			[Token(Token = "0x4000DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0x311B0A0", Offset = "0x311B0A0", VA = "0x311B0A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x311B73C", Offset = "0x311B73C", VA = "0x311B73C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000216")]
		[CompilerGenerated]
		private struct <GetCalculateTotalCapcityResultByJson>d__69 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, bool> args;

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x311B794", Offset = "0x311B794", VA = "0x311B794", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x311BA3C", Offset = "0x311BA3C", VA = "0x311BA3C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000217")]
		[CompilerGenerated]
		private struct <IsOverMaxCapacity>d__70 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string, string, string> args;

			[Token(Token = "0x4000DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <resultWithObject>5__2;

			[Token(Token = "0x4000DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private string <currentAseetName>5__3;

			[Token(Token = "0x4000DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private string <currentAssetType>5__4;

			[Token(Token = "0x4000DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private int <currentCapacity>5__5;

			[Token(Token = "0x4000DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private int <maxCapacity>5__6;

			[Token(Token = "0x4000DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4000DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private Command <oldCommand>5__7;

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x311BA94", Offset = "0x311BA94", VA = "0x311BA94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0x311D05C", Offset = "0x311D05C", VA = "0x311D05C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000218")]
		[CompilerGenerated]
		private struct <FetchPreset>d__78 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DCC")]
			[Address(RVA = "0x311D0B4", Offset = "0x311D0B4", VA = "0x311D0B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0x311DC50", Offset = "0x311DC50", VA = "0x311DC50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000219")]
		[CompilerGenerated]
		private struct <ExecuteCommandCommUnifiedInterface>d__117 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, UIMaterailPreviewShow> args;

			[Token(Token = "0x4000DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x6000DCE")]
			[Address(RVA = "0x311DC5C", Offset = "0x311DC5C", VA = "0x311DC5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0x311DFDC", Offset = "0x311DFDC", VA = "0x311DFDC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200021A")]
		[CompilerGenerated]
		private struct <GetWorldBuilderMaterialCollection>d__120 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0x311E034", Offset = "0x311E034", VA = "0x311E034", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x311E864", Offset = "0x311E864", VA = "0x311E864", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200021B")]
		[CompilerGenerated]
		private struct <DeleteCollectionMaterial>d__122 : IAsyncStateMachine
		{
			[Token(Token = "0x4000DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<List<string>> args;

			[Token(Token = "0x4000E00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x311E8BC", Offset = "0x311E8BC", VA = "0x311E8BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x311F3F0", Offset = "0x311F3F0", VA = "0x311F3F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200021C")]
		[CompilerGenerated]
		private struct <GetWorldCollectionPrefabList>d__123 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x311F448", Offset = "0x311F448", VA = "0x311F448", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x311F688", Offset = "0x311F688", VA = "0x311F688", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200021D")]
		[CompilerGenerated]
		private struct <GetWorldPreview>d__124 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<RectTransform, string, Transform, bool> args;

			[Token(Token = "0x4000E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private string <assetName>5__2;

			[Token(Token = "0x4000E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private ResultWithObject <resultWithObject>5__3;

			[Token(Token = "0x4000E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<ByteDance.AssetManagement.RawAssetObject>>.Awaiter <>u__1;

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0x311F6E0", Offset = "0x311F6E0", VA = "0x311F6E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0x31201E4", Offset = "0x31201E4", VA = "0x31201E4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200021E")]
		[CompilerGenerated]
		private struct <SetMaterialInfo>d__126 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Args<UIMaterailPreviewShow, RectTransform, bool, Transform> args;

			[Token(Token = "0x4000E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000DD8")]
			[Address(RVA = "0x312023C", Offset = "0x312023C", VA = "0x312023C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x31206C0", Offset = "0x31206C0", VA = "0x31206C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200021F")]
		[CompilerGenerated]
		private struct <SetCustemWindowRender>d__127 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Args<RectTransform, UIMaterailPreviewShow, bool> args;

			[Token(Token = "0x4000E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x31206CC", Offset = "0x31206CC", VA = "0x31206CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x3120E9C", Offset = "0x3120E9C", VA = "0x3120E9C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000220")]
		[CompilerGenerated]
		private struct <UpCollectionDateToServer>d__128 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<RectTransform, UIMaterailPreviewShow> args;

			[Token(Token = "0x4000E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private MeshRenderer <mesh>5__2;

			[Token(Token = "0x4000E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UIMaterailPreviewShow <data>5__3;

			[Token(Token = "0x4000E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private int <preLayer>5__4;

			[Token(Token = "0x4000E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private Camera <mainCam>5__5;

			[Token(Token = "0x4000E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private int <preMask>5__6;

			[Token(Token = "0x4000E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private string <url>5__7;

			[Token(Token = "0x4000E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private CollectData <collectData>5__8;

			[Token(Token = "0x4000E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private int <index>5__9;

			[Token(Token = "0x4000E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask<Texture2D>.Awaiter <>u__1;

			[Token(Token = "0x4000E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x4000E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			private UniTask<ResultWithObject>.Awaiter <>u__3;

			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x2C0C89C", Offset = "0x2C0C89C", VA = "0x2C0C89C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x2C0E124", Offset = "0x2C0E124", VA = "0x2C0E124", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000221")]
		[CompilerGenerated]
		private struct <UpdateDateToServer>d__129 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<RectTransform, UIMaterailPreviewShow, string> args;

			[Token(Token = "0x4000E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UIMaterailPreviewShow <data>5__2;

			[Token(Token = "0x4000E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private Camera <mainCam>5__3;

			[Token(Token = "0x4000E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private int <preMask>5__4;

			[Token(Token = "0x4000E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private string <url>5__5;

			[Token(Token = "0x4000E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private CollectData <collectData>5__6;

			[Token(Token = "0x4000E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private UniTask<Texture2D>.Awaiter <>u__1;

			[Token(Token = "0x4000E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x4000E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private UniTask<ResultWithObject>.Awaiter <>u__3;

			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x2C0E17C", Offset = "0x2C0E17C", VA = "0x2C0E17C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x2C0F6D0", Offset = "0x2C0F6D0", VA = "0x2C0F6D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000222")]
		[CompilerGenerated]
		private struct <GetWorldMaterialPrefabList>d__132 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<int, int, bool, bool, int> args;

			[Token(Token = "0x4000E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0x2C0F728", Offset = "0x2C0F728", VA = "0x2C0F728", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x2C0FD38", Offset = "0x2C0FD38", VA = "0x2C0FD38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000224")]
		[CompilerGenerated]
		private struct <SetMaterialToTween>d__133 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Args<RectTransform, UIMaterailPreviewShow, bool> args;

			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0x2C0FF2C", Offset = "0x2C0FF2C", VA = "0x2C0FF2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0x2C10668", Offset = "0x2C10668", VA = "0x2C10668", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000225")]
		[CompilerGenerated]
		private struct <SetCustemMaterialToTween>d__134 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4000E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Args<RectTransform, UIMaterailPreviewShow, bool> args;

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x2C10674", Offset = "0x2C10674", VA = "0x2C10674", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DEA")]
			[Address(RVA = "0x2C10960", Offset = "0x2C10960", VA = "0x2C10960", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000226")]
		[CompilerGenerated]
		private struct <ExecuteCommandGetSongIdsDetialAndPlay>d__178 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, int> args;

			[Token(Token = "0x4000E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x2C1096C", Offset = "0x2C1096C", VA = "0x2C1096C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DEC")]
			[Address(RVA = "0x2C113C4", Offset = "0x2C113C4", VA = "0x2C113C4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000227")]
		[CompilerGenerated]
		private struct <GetSongDetail>d__179 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4000E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DED")]
			[Address(RVA = "0x2C1141C", Offset = "0x2C1141C", VA = "0x2C1141C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0x2C11A50", Offset = "0x2C11A50", VA = "0x2C11A50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000228")]
		[CompilerGenerated]
		private struct <PlayWorldBuilderBGM>d__181 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <resultWithObject>5__2;

			[Token(Token = "0x4000E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0x2C11AA8", Offset = "0x2C11AA8", VA = "0x2C11AA8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF0")]
			[Address(RVA = "0x2C1217C", Offset = "0x2C1217C", VA = "0x2C1217C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000229")]
		[CompilerGenerated]
		private struct <PlayWorldBuilderBGMForUGC>d__184 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, int> args;

			[Token(Token = "0x4000E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public WorldBuilderSystem <>4__this;

			[Token(Token = "0x4000E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private ResultWithObject <resultWithObject>5__2;

			[Token(Token = "0x4000E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0x2C121D4", Offset = "0x2C121D4", VA = "0x2C121D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0x2C127A4", Offset = "0x2C127A4", VA = "0x2C127A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200022A")]
		[CompilerGenerated]
		private struct <SendSaveMusicData>d__185 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string key;

			[Token(Token = "0x4000E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public object value;

			[Token(Token = "0x4000E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0x2C127FC", Offset = "0x2C127FC", VA = "0x2C127FC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0x2C12CD8", Offset = "0x2C12CD8", VA = "0x2C12CD8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200022B")]
		[CompilerGenerated]
		private struct <GetPropsDetailById>d__188 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4000E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0x2C12CE4", Offset = "0x2C12CE4", VA = "0x2C12CE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0x2C132C0", Offset = "0x2C132C0", VA = "0x2C132C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200022C")]
		[CompilerGenerated]
		private struct <GetPropsByIdWithoutUserId>d__189 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4000E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x2C13318", Offset = "0x2C13318", VA = "0x2C13318", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x2C138F4", Offset = "0x2C138F4", VA = "0x2C138F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200022D")]
		[CompilerGenerated]
		private struct <GetPropsByIdUseSocket>d__190 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4000E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <resultWithObject>5__2;

			[Token(Token = "0x4000E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x2C1394C", Offset = "0x2C1394C", VA = "0x2C1394C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x2C14254", Offset = "0x2C14254", VA = "0x2C14254", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200022E")]
		[CompilerGenerated]
		private struct <GetAvatarDetailById>d__192 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4000E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x2C142AC", Offset = "0x2C142AC", VA = "0x2C142AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x2C14888", Offset = "0x2C14888", VA = "0x2C14888", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000D0E")]
		private const string saveCurrentIndexKey = "WorldBuilderGuideManager_saveCurrentIndexKey";

		[Token(Token = "0x4000D0F")]
		private const string saveFinishKey = "WorldBuilderGuideManager_saveFinishKey";

		[Token(Token = "0x4000D10")]
		private const string polyderonStats = "WorldBuilderManager_PolyderonStats";

		[Token(Token = "0x4000D11")]
		private const string avatarPolyderonStats = "WorldBuilderManager_AvatarPolyderonStats";

		[Token(Token = "0x4000D12")]
		private const string saveTipFinishKey = "WorldBuilderGuideManager_saveTipFinishKey";

		[Token(Token = "0x4000D13")]
		private const string guideCountKey = "WorldBuilderGuideManager_GuideCountKey";

		[Token(Token = "0x4000D14")]
		private const string guideMaskActive = "WorldBuilderManager_GuideMaskActive";

		[Token(Token = "0x4000D15")]
		private const string ugcMemLimitKey = "ugc_control_member_limit";

		[Token(Token = "0x4000D16")]
		private const string ugcWorldSaveCDKey = "ugc_world_save_cd";

		[Token(Token = "0x4000D17")]
		private const string ugcMaxWorldCapacityKey = "ugc_world_cube_capacity";

		[Token(Token = "0x4000D18")]
		private const string ugcWorldDefaultRolenumKey = "ugc_world_default_rolenum";

		[Token(Token = "0x4000D19")]
		private const string WorldBuilderGuideManager_AmdDataIndex = "WorldBuilderGuideManager_AmdDataIndex";

		[Token(Token = "0x4000D1A")]
		private const string WorldBuilderManager_AvatarRotation = "WorldBuilderManager_AvatarRotation";

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FormatOptions JsonFormatOptions;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UIMaterailPreviewShow currentMaterialData;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _lastId;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<FeedCellData> list;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, FeedCellData> _feedCellDatas_map;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MeshRenderer _custemWindowRender;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MeshRenderer _meshBrushHandle;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MaterialPropertyBlock materialColor1;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private MaterialPropertyBlock materialColor2;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MaterialPropertyBlock materialBrush;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WorldBuilderMaterialPhone _worldBuilderMaterialPhone;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Tween _tweenMaterialMain;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Tween _tweenMaterialCustem;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Color _preivewColor;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Color _custemColor;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Dictionary<string, string> _name_Map;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private HashSet<string> _nameSet;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private BuilderSettingInfo _builderSettingInfo;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int _materialIndex;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int _collectionIndex;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string currentState;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool checkSetmaterialToCreate;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private BuilderMaterial _buiderObjectData;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool checkSetDrawFromCreate;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private string primitiveName;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<string> notifyMusicName;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private string worldBuilderBgmClipId;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string worldBuilderBgmIsPlay;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string worldBuilderBgmVolume;

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x3107CB8", Offset = "0x3107CB8", VA = "0x3107CB8")]
		public void InitBiReport()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x31080EC", Offset = "0x31080EC", VA = "0x31080EC")]
		[AsyncStateMachine(typeof(<Init>d__15))]
		public new UniTask<Result> Init()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x31081F4", Offset = "0x31081F4", VA = "0x31081F4")]
		[Command]
		private void InitCommand()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x3108234", Offset = "0x3108234", VA = "0x3108234", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x3108350", Offset = "0x3108350", VA = "0x3108350", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x3108354", Offset = "0x3108354", VA = "0x3108354", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x310843C", Offset = "0x310843C", VA = "0x310843C", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x3108524", Offset = "0x3108524", VA = "0x3108524")]
		private void OnApplicationPause(string eventid, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x3108528", Offset = "0x3108528", VA = "0x3108528")]
		[Command]
		private Result IsMainUIOpen(IArgs _)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x3108694", Offset = "0x3108694", VA = "0x3108694")]
		[Command]
		private Result IsDialogOpen(IArgs _)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x31087F0", Offset = "0x31087F0", VA = "0x31087F0")]
		[Command]
		private Result IsEditorMode(IArgs _)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x3108958", Offset = "0x3108958", VA = "0x3108958")]
		[Command]
		private void SimulateMenuDown(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x31089DC", Offset = "0x31089DC", VA = "0x31089DC")]
		[Command]
		private void QuickUIExecuteCommand(Args<string> args)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x3108A54", Offset = "0x3108A54", VA = "0x3108A54")]
		[Command]
		public void QuickUIExecuteAction(Args<string> args)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x3108AC8", Offset = "0x3108AC8", VA = "0x3108AC8")]
		[Command]
		private void SetCreateStatus(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x3108B2C", Offset = "0x3108B2C", VA = "0x3108B2C")]
		[Command]
		private Result GetCreateStatus()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x3108BE8", Offset = "0x3108BE8", VA = "0x3108BE8")]
		[Command]
		private void ResetViewCommand()
		{
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x3108C34", Offset = "0x3108C34", VA = "0x3108C34")]
		[Command]
		private Result IsActionAvailable(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x3108D54", Offset = "0x3108D54", VA = "0x3108D54")]
		[Command]
		[AsyncStateMachine(typeof(<IsActionAvailables>d__32))]
		private UniTask<Result> IsActionAvailables(Args<List<string>> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x3108E68", Offset = "0x3108E68", VA = "0x3108E68")]
		[Command]
		private void ChangeToPreviewMode()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x3108EB4", Offset = "0x3108EB4", VA = "0x3108EB4")]
		[Command]
		[AsyncStateMachine(typeof(<DownloadWorldData>d__34))]
		private UniTask<Result> DownloadWorldData(Args<string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x3108FCC", Offset = "0x3108FCC", VA = "0x3108FCC")]
		[Command]
		[AsyncStateMachine(typeof(<UploadWorldData>d__35))]
		public UniTask<Result> UploadWorldData(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x31090E0", Offset = "0x31090E0", VA = "0x31090E0")]
		[AsyncStateMachine(typeof(<GetAssetJsonByPath>d__36))]
		[Command]
		private UniTask<Result> GetAssetJsonByPath(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x31091F4", Offset = "0x31091F4", VA = "0x31091F4")]
		[Command]
		private Result SaveBuilderDataToFile()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0x3109330", Offset = "0x3109330", VA = "0x3109330")]
		[Command]
		private Result CreateWorldFromData(Args<object> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x3109468", Offset = "0x3109468", VA = "0x3109468")]
		[AsyncStateMachine(typeof(<UploadDataFile>d__39))]
		[Command]
		private UniTask<Result> UploadDataFile(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x310957C", Offset = "0x310957C", VA = "0x310957C")]
		[Command]
		[AsyncStateMachine(typeof(<UploadThumbnails>d__40))]
		private UniTask<Result> UploadThumbnails()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x3109684", Offset = "0x3109684", VA = "0x3109684")]
		[AsyncStateMachine(typeof(<UploadCardThumbnail>d__41))]
		[Command]
		private UniTask<Result> UploadCardThumbnail()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x310978C", Offset = "0x310978C", VA = "0x310978C")]
		[Command]
		private void SetGridVisible(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x3109810", Offset = "0x3109810", VA = "0x3109810")]
		[Command]
		private Result GetGridVisible()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x3109914", Offset = "0x3109914", VA = "0x3109914")]
		[Command]
		[AsyncStateMachine(typeof(<UploadAuditPictures>d__44))]
		private UniTask<Result> UploadAuditPictures()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x3109A00", Offset = "0x3109A00", VA = "0x3109A00")]
		[Command]
		private void ResetAuditData()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x3109A98", Offset = "0x3109A98", VA = "0x3109A98")]
		[Command]
		private void ContinueAuditData()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x3109AEC", Offset = "0x3109AEC", VA = "0x3109AEC")]
		[AsyncStateMachine(typeof(<SendSaveTipFinish>d__47))]
		public void SendSaveTipFinish()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x3109BA8", Offset = "0x3109BA8", VA = "0x3109BA8")]
		[Command]
		public void ChangeMainUIVisible()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x3109C04", Offset = "0x3109C04", VA = "0x3109C04")]
		[Command]
		public void ChangeBuilderUIVisible()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x3109C78", Offset = "0x3109C78", VA = "0x3109C78")]
		[Command]
		public void ForceBuilderUIVisible()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x3109CD4", Offset = "0x3109CD4", VA = "0x3109CD4")]
		[Command]
		public void ForceBuilderUIInvisible()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x3109D30", Offset = "0x3109D30", VA = "0x3109D30")]
		[Command]
		public void EnableInput(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x3109E34", Offset = "0x3109E34", VA = "0x3109E34")]
		[Command]
		private void ChangeLod(Args<float, float, float, float> args)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x3109F44", Offset = "0x3109F44", VA = "0x3109F44")]
		[Command]
		private void ChangeLodBias(Args<float> args)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x3109F88", Offset = "0x3109F88", VA = "0x3109F88")]
		[Command]
		private void EnableLod(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x310A008", Offset = "0x310A008", VA = "0x310A008")]
		[Command]
		private void SetSceneModified(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x310A128", Offset = "0x310A128", VA = "0x310A128")]
		[AsyncStateMachine(typeof(<SendEnterEditMode>d__57))]
		[Command]
		private UniTask<Result> SendEnterEditMode()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x310A214", Offset = "0x310A214", VA = "0x310A214")]
		[Command]
		private Result IsShowSpawnTips()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x310A48C", Offset = "0x310A48C", VA = "0x310A48C")]
		[Command]
		private Result CalcuPosAndRotation([Optional] Args<bool, BuilderComponentSpawn> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x310A7D8", Offset = "0x310A7D8", VA = "0x310A7D8")]
		[Command]
		private Result GlobalCheck()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x310A8D8", Offset = "0x310A8D8", VA = "0x310A8D8")]
		[Command]
		private Result GetComponentDataWithID(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x310AA60", Offset = "0x310AA60", VA = "0x310AA60")]
		[Command]
		[AsyncStateMachine(typeof(<GetAllUsedAssetIDJson>d__62))]
		private UniTask<Result> GetAllUsedAssetIDJson()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x310AB68", Offset = "0x310AB68", VA = "0x310AB68")]
		[Command]
		[AsyncStateMachine(typeof(<CheckAssetsOffline>d__63))]
		private UniTask<Result> CheckAssetsOffline(Args<long[]> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x310AC7C", Offset = "0x310AC7C", VA = "0x310AC7C")]
		[AsyncStateMachine(typeof(<CreateBuilderAssetModel>d__64))]
		[Command]
		private UniTask<Result> CreateBuilderAssetModel(Args<string, long, int, int, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x310ADB0", Offset = "0x310ADB0", VA = "0x310ADB0")]
		private Result CreateBuilderAsset(long assetID, int permission, string json, int handSide)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x310B090", Offset = "0x310B090", VA = "0x310B090")]
		[AsyncStateMachine(typeof(<GetAssetJsonDataByCommand>d__66))]
		[Command]
		public UniTask<Result> GetAssetJsonDataByCommand(Args<int, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x310B1B8", Offset = "0x310B1B8", VA = "0x310B1B8")]
		[AsyncStateMachine(typeof(<GetAssetJsonData>d__67))]
		private UniTask<Result> GetAssetJsonData(int assetType, string assetName)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x310B2D0", Offset = "0x310B2D0", VA = "0x310B2D0")]
		[AsyncStateMachine(typeof(<GetCalculateTotalCapcityResult>d__68))]
		[Command]
		private UniTask<Result> GetCalculateTotalCapcityResult(Args<string, int, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x310B404", Offset = "0x310B404", VA = "0x310B404")]
		[Command]
		[AsyncStateMachine(typeof(<GetCalculateTotalCapcityResultByJson>d__69))]
		private UniTask<Result> GetCalculateTotalCapcityResultByJson(Args<string, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x310B51C", Offset = "0x310B51C", VA = "0x310B51C")]
		[Command]
		[AsyncStateMachine(typeof(<IsOverMaxCapacity>d__70))]
		private UniTask<Result> IsOverMaxCapacity(Args<string, string, string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x310B634", Offset = "0x310B634", VA = "0x310B634")]
		[Command]
		private Result GetCanUseProp()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x310B73C", Offset = "0x310B73C", VA = "0x310B73C")]
		[Command]
		private Result SetCanUseProp(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x310B814", Offset = "0x310B814", VA = "0x310B814")]
		[Command]
		private Result GetCurrentCapacity()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x310B90C", Offset = "0x310B90C", VA = "0x310B90C")]
		[Command]
		private Result GetMaxCapacity()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x310BA04", Offset = "0x310BA04", VA = "0x310BA04")]
		[Command]
		private Result GetRewardControlNumber()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x310BB6C", Offset = "0x310BB6C", VA = "0x310BB6C")]
		[Command]
		private Result GetPortalControlNumber()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x310BCD4", Offset = "0x310BCD4", VA = "0x310BCD4")]
		[Command]
		private Result UpdateMaxCapacity(Args<int, int> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x310BDA8", Offset = "0x310BDA8", VA = "0x310BDA8")]
		[Command]
		[AsyncStateMachine(typeof(<FetchPreset>d__78))]
		private UniTask FetchPreset()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x310BEF0", Offset = "0x310BEF0", VA = "0x310BEF0")]
		[Command]
		private Result GetPropCellNumber(Args<int> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x310C004", Offset = "0x310C004", VA = "0x310C004")]
		public void OnUIStateChanged(string newstate)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x310C280", Offset = "0x310C280", VA = "0x310C280")]
		public void OnObjectCreate()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x310C4A8", Offset = "0x310C4A8", VA = "0x310C4A8")]
		[AsyncStateMachine(typeof(<ExecuteCommandCommUnifiedInterface>d__117))]
		[Command]
		private UniTask<Result> ExecuteCommandCommUnifiedInterface(Args<string, UIMaterailPreviewShow> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x310C5DC", Offset = "0x310C5DC", VA = "0x310C5DC")]
		public void ExecuteCommandToMaterial(string key)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x310C3BC", Offset = "0x310C3BC", VA = "0x310C3BC")]
		private void ExecuteCommandComm(string commandName, object data)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x310C700", Offset = "0x310C700", VA = "0x310C700")]
		[AsyncStateMachine(typeof(<GetWorldBuilderMaterialCollection>d__120))]
		[Command]
		public UniTask<Result> GetWorldBuilderMaterialCollection()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x310C808", Offset = "0x310C808", VA = "0x310C808")]
		private void AddToListData(CollectData data, string id, int idselft, int index)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x310CD6C", Offset = "0x310CD6C", VA = "0x310CD6C")]
		[AsyncStateMachine(typeof(<DeleteCollectionMaterial>d__122))]
		[Command]
		private UniTask<Result> DeleteCollectionMaterial(Args<List<string>> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x310CE94", Offset = "0x310CE94", VA = "0x310CE94")]
		[Command]
		[AsyncStateMachine(typeof(<GetWorldCollectionPrefabList>d__123))]
		private UniTask<Result> GetWorldCollectionPrefabList(IArgs commandArgs)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x310CF9C", Offset = "0x310CF9C", VA = "0x310CF9C")]
		[AsyncStateMachine(typeof(<GetWorldPreview>d__124))]
		[Command]
		private UniTask<Result> GetWorldPreview(Args<RectTransform, string, Transform, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x310D0D8", Offset = "0x310D0D8", VA = "0x310D0D8")]
		private void SetMaterialInfoSetData(UIMaterailPreviewShow data, bool recoard = true)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x310D790", Offset = "0x310D790", VA = "0x310D790")]
		[Command]
		[AsyncStateMachine(typeof(<SetMaterialInfo>d__126))]
		private UniTask SetMaterialInfo(Args<UIMaterailPreviewShow, RectTransform, bool, Transform> args)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x310D910", Offset = "0x310D910", VA = "0x310D910")]
		[AsyncStateMachine(typeof(<SetCustemWindowRender>d__127))]
		[Command]
		private UniTask SetCustemWindowRender(Args<RectTransform, UIMaterailPreviewShow, bool> args)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x310DA88", Offset = "0x310DA88", VA = "0x310DA88")]
		[AsyncStateMachine(typeof(<UpCollectionDateToServer>d__128))]
		[Command]
		private UniTask<Result> UpCollectionDateToServer(Args<RectTransform, UIMaterailPreviewShow> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x310DBD0", Offset = "0x310DBD0", VA = "0x310DBD0")]
		[Command]
		[AsyncStateMachine(typeof(<UpdateDateToServer>d__129))]
		private UniTask<Result> UpdateDateToServer(Args<RectTransform, UIMaterailPreviewShow, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x310DD18", Offset = "0x310DD18", VA = "0x310DD18")]
		private void UpdateToListData(CollectData data, string id)
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x310DEB8", Offset = "0x310DEB8", VA = "0x310DEB8")]
		private void InsertToListData(CollectData data, string id)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x310E204", Offset = "0x310E204", VA = "0x310E204")]
		[Command]
		[AsyncStateMachine(typeof(<GetWorldMaterialPrefabList>d__132))]
		private UniTask<Result> GetWorldMaterialPrefabList(Args<int, int, bool, bool, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x310E324", Offset = "0x310E324", VA = "0x310E324")]
		[Command]
		[AsyncStateMachine(typeof(<SetMaterialToTween>d__133))]
		private UniTask SetMaterialToTween(Args<RectTransform, UIMaterailPreviewShow, bool> args)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x310E4B4", Offset = "0x310E4B4", VA = "0x310E4B4")]
		[Command]
		[AsyncStateMachine(typeof(<SetCustemMaterialToTween>d__134))]
		private UniTask SetCustemMaterialToTween(Args<RectTransform, UIMaterailPreviewShow, bool> args)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x310D714", Offset = "0x310D714", VA = "0x310D714")]
		private Color GetFinishColor(Color color)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x310E644", Offset = "0x310E644", VA = "0x310E644")]
		[Command]
		private Result GetWorldSettingInfo()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x310E6CC", Offset = "0x310E6CC", VA = "0x310E6CC")]
		[Command]
		private void SetWorldSettingInfo(Args<BuilderSettingInfo> worldSettingData)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x310E714", Offset = "0x310E714", VA = "0x310E714")]
		[Command]
		public void SetWorldUserSetting(Args<int> argNum)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x310E758", Offset = "0x310E758", VA = "0x310E758")]
		public void SetWorldUserSetting(int userNum)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x310E880", Offset = "0x310E880", VA = "0x310E880")]
		public void InitWorldUserSetting()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x310E900", Offset = "0x310E900", VA = "0x310E900")]
		public void SetWorldMaxUserSetting(int userNum)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x310E980", Offset = "0x310E980", VA = "0x310E980")]
		public void SetWorldDefaultUserSetting(int userNum)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x310EA10", Offset = "0x310EA10", VA = "0x310EA10")]
		public int GetWorldUserSetting()
		{
			return default(int);
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x310EA28", Offset = "0x310EA28", VA = "0x310EA28")]
		public bool IsMaxWorldCapacitySet()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x310EA48", Offset = "0x310EA48", VA = "0x310EA48")]
		public void SetMaxWorldCapacity(int number)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x310EAC8", Offset = "0x310EAC8", VA = "0x310EAC8")]
		public int GetMaxWorldCapacity()
		{
			return default(int);
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x310EAEC", Offset = "0x310EAEC", VA = "0x310EAEC")]
		public void SetWorldCapacity(double capacity)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x310EC18", Offset = "0x310EC18", VA = "0x310EC18")]
		public void SynchronousWorldSettingData(Args<UIWBAttributeData, string, string> args)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x310ECA0", Offset = "0x310ECA0", VA = "0x310ECA0")]
		[Command]
		private Result GetWorldGravityV()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x310ED84", Offset = "0x310ED84", VA = "0x310ED84")]
		public (byte, byte, float) GetWorldGravityData()
		{
			return default((byte, byte, float));
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x310EE0C", Offset = "0x310EE0C", VA = "0x310EE0C")]
		[Command]
		public void SetWorldGravity(Args<byte, byte, float> args)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x310EFFC", Offset = "0x310EFFC", VA = "0x310EFFC")]
		private int GetDynamicNumDirect()
		{
			return default(int);
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x310F014", Offset = "0x310F014", VA = "0x310F014")]
		[Command]
		private Result GetDynamicObjNum()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x310F0F0", Offset = "0x310F0F0", VA = "0x310F0F0")]
		private void SetDynamicNumDirect(int num)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x310F1D8", Offset = "0x310F1D8", VA = "0x310F1D8")]
		[Command]
		public void SetDynamicNum(Args<int> args)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x310D718", Offset = "0x310D718", VA = "0x310D718")]
		private bool IsEmission(float emissionEnable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x310F21C", Offset = "0x310F21C", VA = "0x310F21C")]
		public void SetPrimitiveName(string name)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x310F22C", Offset = "0x310F22C", VA = "0x310F22C")]
		public void ClearPrimitiveName()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x310F2E0", Offset = "0x310F2E0", VA = "0x310F2E0")]
		[Command]
		public void ClearPrimitiveNameByCommand()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x310F2E4", Offset = "0x310F2E4", VA = "0x310F2E4")]
		[Command]
		private void ExecutePrimitiveDrawCommand()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x310F368", Offset = "0x310F368", VA = "0x310F368")]
		[Command]
		private Result GetCommand(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x310F464", Offset = "0x310F464", VA = "0x310F464")]
		[Command]
		private Result GetEnvirtonmentType()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x310F540", Offset = "0x310F540", VA = "0x310F540")]
		public string GetWorldBGMMusicClipId()
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x310F5E0", Offset = "0x310F5E0", VA = "0x310F5E0")]
		public bool GetWorldBGMMusicIsMetu()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x310F680", Offset = "0x310F680", VA = "0x310F680")]
		public int GetWorldBGMMusicVolume()
		{
			return default(int);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x310F718", Offset = "0x310F718", VA = "0x310F718")]
		[Command]
		public void SetWorldBGMMusicClipId(Args<string> argNum)
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x310F768", Offset = "0x310F768", VA = "0x310F768")]
		public void SetWorldBGMMusicClipId(string clipId)
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x310F994", Offset = "0x310F994", VA = "0x310F994")]
		[Command]
		public void SetWorldBGMMusicIsPlay(Args<bool> argNum)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x310FA24", Offset = "0x310FA24", VA = "0x310FA24")]
		public void SetWorldBGMMusicIsPlay(bool isMute)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x310FB00", Offset = "0x310FB00", VA = "0x310FB00")]
		[Command]
		public void SetWorldBGMMusicVolume(Args<int> argNum)
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x310FB84", Offset = "0x310FB84", VA = "0x310FB84")]
		public void SetWorldBGMMusicVolume(int volume)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x310FC60", Offset = "0x310FC60", VA = "0x310FC60")]
		public void SetWorldBgmWwiseId(uint wwiseId)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x310FC7C", Offset = "0x310FC7C", VA = "0x310FC7C")]
		public uint GetWorldBgmWwiseId()
		{
			return default(uint);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x310FC98", Offset = "0x310FC98", VA = "0x310FC98")]
		[Command]
		[AsyncStateMachine(typeof(<ExecuteCommandGetSongIdsDetialAndPlay>d__178))]
		private UniTask<Result> ExecuteCommandGetSongIdsDetialAndPlay(Args<string, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x310FDE0", Offset = "0x310FDE0", VA = "0x310FDE0")]
		[Command]
		[AsyncStateMachine(typeof(<GetSongDetail>d__179))]
		private UniTask<Result> GetSongDetail(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x310FF08", Offset = "0x310FF08", VA = "0x310FF08")]
		[Command]
		private Result GetNotifyMusicName()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x310FF90", Offset = "0x310FF90", VA = "0x310FF90")]
		[AsyncStateMachine(typeof(<PlayWorldBuilderBGM>d__181))]
		[Command]
		private UniTask<Result> PlayWorldBuilderBGM()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x31100B4", Offset = "0x31100B4", VA = "0x31100B4")]
		public void SoundStop()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x3110274", Offset = "0x3110274", VA = "0x3110274")]
		[Command]
		private void StopWorldBuilderBGM()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x3110368", Offset = "0x3110368", VA = "0x3110368")]
		[Command]
		[AsyncStateMachine(typeof(<PlayWorldBuilderBGMForUGC>d__184))]
		private UniTask<Result> PlayWorldBuilderBGMForUGC(Args<string, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x310F8BC", Offset = "0x310F8BC", VA = "0x310F8BC")]
		[AsyncStateMachine(typeof(<SendSaveMusicData>d__185))]
		public void SendSaveMusicData(string key, object value)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x31104B0", Offset = "0x31104B0", VA = "0x31104B0")]
		[Command]
		private void AddNotifyMusicName(Args<string> args)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x311056C", Offset = "0x311056C", VA = "0x311056C")]
		public void ClearotifyMusicData()
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x31105DC", Offset = "0x31105DC", VA = "0x31105DC")]
		[AsyncStateMachine(typeof(<GetPropsDetailById>d__188))]
		[Command]
		private UniTask<Result> GetPropsDetailById(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x31106F8", Offset = "0x31106F8", VA = "0x31106F8")]
		[Command]
		[AsyncStateMachine(typeof(<GetPropsByIdWithoutUserId>d__189))]
		private UniTask<Result> GetPropsByIdWithoutUserId(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x3110814", Offset = "0x3110814", VA = "0x3110814")]
		[AsyncStateMachine(typeof(<GetPropsByIdUseSocket>d__190))]
		[Command]
		private UniTask<Result> GetPropsByIdUseSocket(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x3110930", Offset = "0x3110930", VA = "0x3110930")]
		[Command]
		private void CancelLoadAsset(Args<string> args)
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x3110994", Offset = "0x3110994", VA = "0x3110994")]
		[Command]
		[AsyncStateMachine(typeof(<GetAvatarDetailById>d__192))]
		private UniTask<Result> GetAvatarDetailById(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x3110AB0", Offset = "0x3110AB0", VA = "0x3110AB0")]
		[Command]
		public Result GetSnapEnable()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x3110BB4", Offset = "0x3110BB4", VA = "0x3110BB4")]
		[Command]
		public Result GetSnapMode()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x3110E1C", Offset = "0x3110E1C", VA = "0x3110E1C")]
		[Command]
		public Result GetSnapGridSize()
		{
			return default(Result);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x3111084", Offset = "0x3111084", VA = "0x3111084")]
		[Command]
		public void SetSnapEnable(Args<bool> args)
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x3111100", Offset = "0x3111100", VA = "0x3111100")]
		[Command]
		public void SetSnapMode(Args<int> args)
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x3111174", Offset = "0x3111174", VA = "0x3111174")]
		[Command]
		public void SetSnapGridSize(Args<int> args)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x31111E8", Offset = "0x31111E8", VA = "0x31111E8")]
		public WorldBuilderSystem()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class AvatarStudioSettingInfo
	{
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxAvatarCapacity;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxSceneCapacity;

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x2C148E0", Offset = "0x2C148E0", VA = "0x2C148E0")]
		public AvatarStudioSettingInfo()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class AvatarStudioSystem : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000231")]
		[CompilerGenerated]
		private struct <Init>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x2C16E44", Offset = "0x2C16E44", VA = "0x2C16E44", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x2C16EF8", Offset = "0x2C16EF8", VA = "0x2C16EF8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000232")]
		[CompilerGenerated]
		private struct <UploadAvatarAndSceneDataFile>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<List<string>> args;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<List<string>>.Awaiter <>u__1;

			[Token(Token = "0x6000E33")]
			[Address(RVA = "0x2C16F04", Offset = "0x2C16F04", VA = "0x2C16F04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x2C1751C", Offset = "0x2C1751C", VA = "0x2C1751C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000233")]
		[CompilerGenerated]
		private struct <GetAllUsedAssetIDJson>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private long[] <assetIDs>5__3;

			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x2C17574", Offset = "0x2C17574", VA = "0x2C17574", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x2C17EC8", Offset = "0x2C17EC8", VA = "0x2C17EC8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000234")]
		[CompilerGenerated]
		private struct <UploadAuditPictures>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public AvatarStudioSystem <>4__this;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private List<AuditData> <resultList>5__2;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private List<string> <picPath>5__3;

			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<List<BuilderObjectData>>.Awaiter <>u__1;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<Command>.Awaiter <>u__2;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Result>.Awaiter <>u__3;

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x2C17F20", Offset = "0x2C17F20", VA = "0x2C17F20", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x2C19E1C", Offset = "0x2C19E1C", VA = "0x2C19E1C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000235")]
		[CompilerGenerated]
		private struct <DownloadAvatarAndWorldData>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string, string, string> args;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private Command <worldDownLoadCommand>5__3;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x2C19E74", Offset = "0x2C19E74", VA = "0x2C19E74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x2C1A9F0", Offset = "0x2C1A9F0", VA = "0x2C1A9F0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000236")]
		[CompilerGenerated]
		private struct <GetAssetList>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> arg;

			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<UGCAvatarData>.Awaiter <>u__1;

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x2C1AA48", Offset = "0x2C1AA48", VA = "0x2C1AA48", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x2C1AFC4", Offset = "0x2C1AFC4", VA = "0x2C1AFC4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000237")]
		[CompilerGenerated]
		private struct <UploadThumbnails>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x2C1B01C", Offset = "0x2C1B01C", VA = "0x2C1B01C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x2C1BC78", Offset = "0x2C1BC78", VA = "0x2C1BC78", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000238")]
		[CompilerGenerated]
		private struct <RequestBodyPartAssetCategory>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x2C1BCD0", Offset = "0x2C1BCD0", VA = "0x2C1BCD0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x2C1C3F4", Offset = "0x2C1C3F4", VA = "0x2C1C3F4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000239")]
		[CompilerGenerated]
		private struct <BeginAuditCapture>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<BuilderObjectData>> <>t__builder;

			[Token(Token = "0x4000E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string animName;

			[Token(Token = "0x4000E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <captureModel>5__2;

			[Token(Token = "0x4000E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x2C1C44C", Offset = "0x2C1C44C", VA = "0x2C1C44C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x2C1CF68", Offset = "0x2C1CF68", VA = "0x2C1CF68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200023A")]
		[CompilerGenerated]
		private struct <UploadDataFile>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4000E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string[]> args;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private List<string> <urls>5__3;

			[Token(Token = "0x4000E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private int <groupCount>5__4;

			[Token(Token = "0x4000EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
			private int <i>5__5;

			[Token(Token = "0x4000EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private int <j>5__6;

			[Token(Token = "0x4000EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UniTask<List<string>>.Awaiter <>u__1;

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x2C1CFC0", Offset = "0x2C1CFC0", VA = "0x2C1CFC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x2C1D794", Offset = "0x2C1D794", VA = "0x2C1D794", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AvatarStudioSettingInfo avatarStudioSettingInfo;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialPropertyBlock materialColor1;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock materialColor2;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MeshRenderer _custemWindowRender;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _custemColor;

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x2C148F4", Offset = "0x2C148F4", VA = "0x2C148F4")]
		[AsyncStateMachine(typeof(<Init>d__5))]
		public new UniTask Init()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x2C14A38", Offset = "0x2C14A38", VA = "0x2C14A38")]
		[Preserve]
		[Command]
		private void InitCommand()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x2C14A3C", Offset = "0x2C14A3C", VA = "0x2C14A3C")]
		[Command]
		private void QuickUIExecuteCommand(Args<string> args)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x2C14A90", Offset = "0x2C14A90", VA = "0x2C14A90")]
		[Command]
		private void QuickUIExecuteAction(Args<string> args)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x2C14AE0", Offset = "0x2C14AE0", VA = "0x2C14AE0")]
		[Command]
		private void SetMirrorState(Args<bool> args)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x2C14B38", Offset = "0x2C14B38", VA = "0x2C14B38")]
		[Command]
		private void TransparentChangeState()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x2C14B58", Offset = "0x2C14B58", VA = "0x2C14B58")]
		[Command]
		private void MirrorBodyPartChangeState()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x2C14B78", Offset = "0x2C14B78", VA = "0x2C14B78")]
		[Command]
		private Result GetIsSimulateState()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x2C14C64", Offset = "0x2C14C64", VA = "0x2C14C64")]
		[Command]
		private void SimulateValueChange()
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x2C14C84", Offset = "0x2C14C84", VA = "0x2C14C84")]
		[Command]
		private void OnSliderValueChange(Args<int, float> args)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x2C14CE8", Offset = "0x2C14CE8", VA = "0x2C14CE8")]
		[Command]
		private Result GetWarningInfo(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x2C14DC8", Offset = "0x2C14DC8", VA = "0x2C14DC8")]
		[Command]
		private Result GetInvalidComponentList()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x2C14E70", Offset = "0x2C14E70", VA = "0x2C14E70")]
		[Command]
		private void OnShowControlGizmoPanel()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x2C14E90", Offset = "0x2C14E90", VA = "0x2C14E90")]
		[Command]
		private Result GetAvatarCapacityPercent()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x2C150A0", Offset = "0x2C150A0", VA = "0x2C150A0")]
		[Command]
		private Result GetPinchValueNoArgs()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x2C15144", Offset = "0x2C15144", VA = "0x2C15144")]
		[Command]
		private void SetHandMode(Args<bool> args)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x2C15148", Offset = "0x2C15148", VA = "0x2C15148")]
		[Command]
		private void SetPinchValue(Args<AvatarStudioPinchType, float> args)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x2C151AC", Offset = "0x2C151AC", VA = "0x2C151AC")]
		[Command]
		private Result GetPinchValue(Args<AvatarStudioPinchType> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x2C1528C", Offset = "0x2C1528C", VA = "0x2C1528C")]
		[Command]
		private Result IsActionAvailable(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x2C15380", Offset = "0x2C15380", VA = "0x2C15380")]
		[Command]
		private void SetModelAlpha(Args<float> args)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x2C15384", Offset = "0x2C15384", VA = "0x2C15384")]
		[Command]
		private Result SaveAvatarAndSceneDataToFile()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x2C15428", Offset = "0x2C15428", VA = "0x2C15428")]
		[Command]
		[AsyncStateMachine(typeof(<UploadAvatarAndSceneDataFile>d__26))]
		private UniTask<Result> UploadAvatarAndSceneDataFile(Args<List<string>> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x2C1553C", Offset = "0x2C1553C", VA = "0x2C1553C")]
		[Command]
		private Result GlobalCheck()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x2C1567C", Offset = "0x2C1567C", VA = "0x2C1567C")]
		[Command]
		private Result IsNothingAttached()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x2C1571C", Offset = "0x2C1571C", VA = "0x2C1571C")]
		[Command]
		private Result GetAttachedPartType()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x2C15790", Offset = "0x2C15790", VA = "0x2C15790")]
		[Command]
		[AsyncStateMachine(typeof(<GetAllUsedAssetIDJson>d__30))]
		private UniTask<Result> GetAllUsedAssetIDJson()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x2C1587C", Offset = "0x2C1587C", VA = "0x2C1587C")]
		[AsyncStateMachine(typeof(<UploadAuditPictures>d__31))]
		[Command]
		private UniTask<Result> UploadAuditPictures()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x2C15984", Offset = "0x2C15984", VA = "0x2C15984")]
		[Command]
		private Result CheckContext()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x2C15A58", Offset = "0x2C15A58", VA = "0x2C15A58")]
		[Command]
		private Result GetCurrentCapacity()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x2C15B28", Offset = "0x2C15B28", VA = "0x2C15B28")]
		[Command]
		[AsyncStateMachine(typeof(<DownloadAvatarAndWorldData>d__34))]
		private UniTask<Result> DownloadAvatarAndWorldData(Args<string, string, string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x2C15C40", Offset = "0x2C15C40", VA = "0x2C15C40")]
		[Command]
		private Result DecodeAvatarData(Args<byte[]> arg)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x2C15D78", Offset = "0x2C15D78", VA = "0x2C15D78")]
		[AsyncStateMachine(typeof(<GetAssetList>d__36))]
		[Command]
		private UniTask<Result> GetAssetList(Args<string> arg)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x2C15E8C", Offset = "0x2C15E8C", VA = "0x2C15E8C")]
		[Command]
		private void SetAvatarMaxCapacity(Args<int> args)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x2C15EDC", Offset = "0x2C15EDC", VA = "0x2C15EDC")]
		[Command]
		public Result GetAvatarMaxCapacity()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x2C15F7C", Offset = "0x2C15F7C", VA = "0x2C15F7C")]
		[Command]
		private void SetSceneMaxCapacity(Args<int> args)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x2C15FCC", Offset = "0x2C15FCC", VA = "0x2C15FCC")]
		[Command]
		public Result GetSceneMaxCapacity()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x2C1606C", Offset = "0x2C1606C", VA = "0x2C1606C")]
		[Command]
		[AsyncStateMachine(typeof(<UploadThumbnails>d__41))]
		private UniTask<Result> UploadThumbnails()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x2C16158", Offset = "0x2C16158", VA = "0x2C16158")]
		[AsyncStateMachine(typeof(<RequestBodyPartAssetCategory>d__42))]
		[Command]
		private UniTask<Result> RequestBodyPartAssetCategory()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x2C16244", Offset = "0x2C16244", VA = "0x2C16244")]
		[Command]
		private Result GetBodyPartAssetTypeName(Args<long> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x2C16368", Offset = "0x2C16368", VA = "0x2C16368")]
		[Command]
		private Result GetAvatarBounds()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x2C1640C", Offset = "0x2C1640C", VA = "0x2C1640C")]
		[Command]
		private Result SetUIInited()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x2C16514", Offset = "0x2C16514", VA = "0x2C16514")]
		[Command]
		private Result GetAvatarUsedCapacityUsed()
		{
			return default(Result);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x2C165B0", Offset = "0x2C165B0", VA = "0x2C165B0")]
		[Command]
		private Result GetPresetBoneListFromItemDownloadAssetName(Args<WorldBuilderItemDownloadAssetName> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x2C16AB0", Offset = "0x2C16AB0", VA = "0x2C16AB0")]
		[Command]
		private Result GetPresetBoneListFromString(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x2C16B68", Offset = "0x2C16B68", VA = "0x2C16B68")]
		[AsyncStateMachine(typeof(<BeginAuditCapture>d__49))]
		private UniTask<List<BuilderObjectData>> BeginAuditCapture(string animName)
		{
			return default(UniTask<List<BuilderObjectData>>);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x2C16C40", Offset = "0x2C16C40", VA = "0x2C16C40")]
		[AsyncStateMachine(typeof(<UploadDataFile>d__50))]
		private UniTask<Result> UploadDataFile(Args<string[]> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x2C1664C", Offset = "0x2C1664C", VA = "0x2C1664C")]
		private Result GetPresetBoneList(OrderedDictionary<string, BuilderObjectData> data)
		{
			return default(Result);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x2C16D54", Offset = "0x2C16D54", VA = "0x2C16D54", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x2C16D58", Offset = "0x2C16D58", VA = "0x2C16D58", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x2C16D5C", Offset = "0x2C16D5C", VA = "0x2C16D5C", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x2C16D60", Offset = "0x2C16D60", VA = "0x2C16D60")]
		public AvatarStudioSystem()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class AnimConfig
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> anim;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> image;

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x2C1D7EC", Offset = "0x2C1D7EC", VA = "0x2C1D7EC")]
		public AnimConfig()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public enum CaptureEncodeType
	{
		[Token(Token = "0x4000EA6")]
		png,
		[Token(Token = "0x4000EA7")]
		jpg
	}
	[Token(Token = "0x200023D")]
	public class CaptureInfo
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 cameraPos;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 cameraRotate;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CameraClearFlags clearFlags;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fov;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int cullMask;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int type;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string fileName;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CaptureEncodeType captureEncodeType;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int captureQuality;

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x2C1D8A4", Offset = "0x2C1D8A4", VA = "0x2C1D8A4")]
		public CaptureInfo()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class CaptureSystem : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200023F")]
		[CompilerGenerated]
		private struct <OnCaptureAvatarInSlid>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<float[]> args;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<string> <urls>5__2;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private float[] <param>5__3;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<ResultWithValue<Bounds>>.Awaiter <>u__1;

			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private Texture2D <sourceTexture>5__4;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private Texture2D <halfBodyTexture>5__5;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private string[] <files>5__6;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private string[] <>7__wrap6;

			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private UniTask<string>.Awaiter <>u__2;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			private UniTask<List<string>>.Awaiter <>u__3;

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x2C1F7A0", Offset = "0x2C1F7A0", VA = "0x2C1F7A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x2C213AC", Offset = "0x2C213AC", VA = "0x2C213AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000240")]
		[CompilerGenerated]
		private struct <OnCaptureAvatar>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private string <url>5__2;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<TextAsset>>.Awaiter <>u__1;

			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<Texture2D>>.Awaiter <>u__2;

			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UniTask<ResultWithValue<Bounds>>.Awaiter <>u__3;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private UniTask<string>.Awaiter <>u__4;

			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x2C21404", Offset = "0x2C21404", VA = "0x2C21404", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E66")]
			[Address(RVA = "0x2C22948", Offset = "0x2C22948", VA = "0x2C22948", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000241")]
		[CompilerGenerated]
		private struct <OnCaptureAvatarWithOutBg>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private string <url>5__2;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<TextAsset>>.Awaiter <>u__1;

			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<ResultWithValue<Bounds>>.Awaiter <>u__2;

			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask<string>.Awaiter <>u__3;

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x2C229A0", Offset = "0x2C229A0", VA = "0x2C229A0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E68")]
			[Address(RVA = "0x2C2394C", Offset = "0x2C2394C", VA = "0x2C2394C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000242")]
		[CompilerGenerated]
		private struct <OnCapture>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<CaptureInfo> args;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<string>.Awaiter <>u__1;

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x2C239A4", Offset = "0x2C239A4", VA = "0x2C239A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x2C24284", Offset = "0x2C24284", VA = "0x2C24284", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000243")]
		[CompilerGenerated]
		private struct <OnCaptureAndUploadAsync>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4000EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string fileName;

			[Token(Token = "0x4000EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CaptureInfo captureInfo;

			[Token(Token = "0x4000EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDelete;

			[Token(Token = "0x4000EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <filePath>5__2;

			[Token(Token = "0x4000EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private string <url>5__3;

			[Token(Token = "0x4000EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<string>.Awaiter <>u__1;

			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x2C242DC", Offset = "0x2C242DC", VA = "0x2C242DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0x2C24CB8", Offset = "0x2C24CB8", VA = "0x2C24CB8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000244")]
		[CompilerGenerated]
		private struct <OnCaptureAndSaveAsync>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CaptureInfo captureInfo;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string fileName;

			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <filePath>5__2;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FileStream <fs>5__3;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x2C24D10", Offset = "0x2C24D10", VA = "0x2C24D10", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0x2C25158", Offset = "0x2C25158", VA = "0x2C25158", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000245")]
		[CompilerGenerated]
		private struct <OnUploadAsync>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<List<string>> <>t__builder;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] filePaths;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isDelete;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<string> <urls>5__2;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<List<string>>.Awaiter <>u__1;

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x2C251B0", Offset = "0x2C251B0", VA = "0x2C251B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x2C2580C", Offset = "0x2C2580C", VA = "0x2C2580C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000246")]
		[CompilerGenerated]
		private struct <OnSaveAsync>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D texture;

			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string fileName;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <filePath>5__2;

			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private FileStream <fs>5__3;

			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x2C25864", Offset = "0x2C25864", VA = "0x2C25864", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E72")]
			[Address(RVA = "0x2C25C58", Offset = "0x2C25C58", VA = "0x2C25C58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000247")]
		[CompilerGenerated]
		private struct <OnSetAvatar>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<ResultWithValue<Bounds>> <>t__builder;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public CaptureSystem <>4__this;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int cullmask;

			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool isSlid;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<PicoCharacter> <>u__1;

			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Animator <animator>5__2;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private int <animIndex>5__3;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<RuntimeAnimatorController>>.Awaiter <>u__2;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private UniTask.Awaiter <>u__3;

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x2C25CB0", Offset = "0x2C25CB0", VA = "0x2C25CB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x2C26F5C", Offset = "0x2C26F5C", VA = "0x2C26F5C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string path;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Camera captureCamera;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject CaptureObj;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RawImage bgImage;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform bgObj;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int cullmask;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RuntimeAnimatorController runtimeAnimator;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private AnimConfig animConfig;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private AnimatorOverrideController overrideController;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<string, AnimationClip> animClipDic;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float hOffsett;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float hSlidOffsett;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string defaultAnim;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RenderTexture rt;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private PicoCharacter resultCharacter;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int width;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int height;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int seed;

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x2C1D8B4", Offset = "0x2C1D8B4", VA = "0x2C1D8B4")]
		public CaptureSystem()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x2C1DDCC", Offset = "0x2C1DDCC", VA = "0x2C1DDCC", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x2C1DDD0", Offset = "0x2C1DDD0", VA = "0x2C1DDD0", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x2C1DDD4", Offset = "0x2C1DDD4", VA = "0x2C1DDD4", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x2C1D974", Offset = "0x2C1D974", VA = "0x2C1D974")]
		private void Oninit()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x2C1DDD8", Offset = "0x2C1DDD8", VA = "0x2C1DDD8")]
		[Command]
		[AsyncStateMachine(typeof(<OnCaptureAvatarInSlid>d__23))]
		private UniTask<Result> OnCaptureAvatarInSlid(Args<float[]> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x2C1DF00", Offset = "0x2C1DF00", VA = "0x2C1DF00")]
		[AsyncStateMachine(typeof(<OnCaptureAvatar>d__24))]
		[Command]
		private UniTask<Result> OnCaptureAvatar()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x2C1E008", Offset = "0x2C1E008", VA = "0x2C1E008")]
		[Command]
		[AsyncStateMachine(typeof(<OnCaptureAvatarWithOutBg>d__25))]
		private UniTask<Result> OnCaptureAvatarWithOutBg()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x2C1E110", Offset = "0x2C1E110", VA = "0x2C1E110")]
		[Command]
		[AsyncStateMachine(typeof(<OnCapture>d__26))]
		private UniTask<Result> OnCapture(Args<CaptureInfo> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x2C1E238", Offset = "0x2C1E238", VA = "0x2C1E238")]
		[AsyncStateMachine(typeof(<OnCaptureAndUploadAsync>d__27))]
		public UniTask<string> OnCaptureAndUploadAsync(string fileName = "temp.png", bool isDelete = false, [Optional] CaptureInfo captureInfo)
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x2C1E364", Offset = "0x2C1E364", VA = "0x2C1E364")]
		[AsyncStateMachine(typeof(<OnCaptureAndSaveAsync>d__28))]
		public UniTask<string> OnCaptureAndSaveAsync(string fileName = "temp.png", [Optional] CaptureInfo captureInfo)
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x2C1E47C", Offset = "0x2C1E47C", VA = "0x2C1E47C")]
		[AsyncStateMachine(typeof(<OnUploadAsync>d__29))]
		public UniTask<List<string>> OnUploadAsync(string[] filePaths, bool isDelete = false)
		{
			return default(UniTask<List<string>>);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x2C1E568", Offset = "0x2C1E568", VA = "0x2C1E568")]
		[AsyncStateMachine(typeof(<OnSaveAsync>d__30))]
		public UniTask<string> OnSaveAsync(Texture2D texture, string fileName = "temp.png")
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x2C1E680", Offset = "0x2C1E680", VA = "0x2C1E680")]
		public Texture2D OnCaptureByCamera()
		{
			return null;
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x2C1E7D8", Offset = "0x2C1E7D8", VA = "0x2C1E7D8")]
		private void OnSetAvatarCamera(bool isSlid = false)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x2C1E8F4", Offset = "0x2C1E8F4", VA = "0x2C1E8F4")]
		private void OnLookAt(PicoCharacter resultCharacter, bool isSlid)
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x2C1EC44", Offset = "0x2C1EC44", VA = "0x2C1EC44")]
		[AsyncStateMachine(typeof(<OnSetAvatar>d__34))]
		private UniTask<ResultWithValue<Bounds>> OnSetAvatar(int cullmask, bool isSlid = false)
		{
			return default(UniTask<ResultWithValue<Bounds>>);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x2C1ED54", Offset = "0x2C1ED54", VA = "0x2C1ED54")]
		private string GetCurrentTime()
		{
			return null;
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x2C1EE30", Offset = "0x2C1EE30", VA = "0x2C1EE30")]
		private void SetLightEffect(PicoCharacter resultCharacter)
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x2C1F078", Offset = "0x2C1F078", VA = "0x2C1F078")]
		private Vector3 CalLightDir()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x2C1F1E4", Offset = "0x2C1F1E4", VA = "0x2C1F1E4")]
		private void RePlayAnim(Animator animator, int index)
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x2C1F2E8", Offset = "0x2C1F2E8", VA = "0x2C1F2E8")]
		private void RePlayAnimByName(Animator animator, string animName)
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x2C1F398", Offset = "0x2C1F398", VA = "0x2C1F398")]
		private void DrawBounds(Bounds bounds)
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x2C1F63C", Offset = "0x2C1F63C", VA = "0x2C1F63C")]
		private int GetRandomRange(int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x2C1F688", Offset = "0x2C1F688", VA = "0x2C1F688")]
		private int GetSortIndex(string key, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x2C1F6D8", Offset = "0x2C1F6D8", VA = "0x2C1F6D8")]
		private Color32[] GmmaCorrection(Color32[] src)
		{
			return null;
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x2C1F77C", Offset = "0x2C1F77C", VA = "0x2C1F77C")]
		private Color32 GetColorByGmma(Color32 v, float fprecompensation)
		{
			return default(Color32);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x2C1F784", Offset = "0x2C1F784", VA = "0x2C1F784")]
		private float Gmma(int v, float fprecompensation)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000248")]
	public class GameCommonSystem : SystemBase
	{
		[Token(Token = "0x2000249")]
		public class GameGUideValueData
		{
			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int iValue;

			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long lValue;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string tValue;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool bValue;

			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public double dValue;

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0x2C2732C", Offset = "0x2C2732C", VA = "0x2C2732C")]
			public GameGUideValueData()
			{
			}
		}

		[Token(Token = "0x200024A")]
		public class GameGuideData
		{
			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, GameGUideValueData> platform;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<string, GameGUideValueData> setting;

			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, GameGUideValueData> ugc;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Dictionary<string, Dictionary<string, GameGUideValueData>> guides;

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0x2C27334", Offset = "0x2C27334", VA = "0x2C27334")]
			public GameGuideData()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200024B")]
		[CompilerGenerated]
		private struct <InitInfo>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public GameCommonSystem <>4__this;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0x2C2733C", Offset = "0x2C2733C", VA = "0x2C2733C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E7F")]
			[Address(RVA = "0x2C27CC0", Offset = "0x2C27CC0", VA = "0x2C27CC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200024C")]
		[CompilerGenerated]
		private struct <InitCommand>d__9 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameCommonSystem <>4__this;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Args<LuaTable, LuaFunction> args;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000E80")]
			[Address(RVA = "0x2C27D18", Offset = "0x2C27D18", VA = "0x2C27D18", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x2C28108", Offset = "0x2C28108", VA = "0x2C28108", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200024D")]
		[CompilerGenerated]
		private struct <ChangeGameRoomStatus>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomStatus roomStatus;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public long mapId;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public long roomId;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000E82")]
			[Address(RVA = "0x2C28114", Offset = "0x2C28114", VA = "0x2C28114", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x2C28740", Offset = "0x2C28740", VA = "0x2C28740", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly string saveFinishKey;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly string saveGuideVersion;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly string saveCurrentIndexKey;

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x2C26FB4", Offset = "0x2C26FB4", VA = "0x2C26FB4", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x2C26FB8", Offset = "0x2C26FB8", VA = "0x2C26FB8", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x2C26FBC", Offset = "0x2C26FBC", VA = "0x2C26FBC", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x2C26FC0", Offset = "0x2C26FC0", VA = "0x2C26FC0")]
		[AsyncStateMachine(typeof(<InitInfo>d__8))]
		private UniTask<Result> InitInfo()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x2C270C8", Offset = "0x2C270C8", VA = "0x2C270C8")]
		[Command]
		[AsyncStateMachine(typeof(<InitCommand>d__9))]
		private void InitCommand(Args<LuaTable, LuaFunction> args)
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x2C271C8", Offset = "0x2C271C8", VA = "0x2C271C8")]
		[AsyncStateMachine(typeof(<ChangeGameRoomStatus>d__10))]
		public void ChangeGameRoomStatus(RoomStatus roomStatus, long mapId, long roomId)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x2C27284", Offset = "0x2C27284", VA = "0x2C27284")]
		public GameCommonSystem()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class HttpInterceptorSystem : SystemBase
	{
		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string _deviceId;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string _laneTag;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _useLane;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _envHeaderKey;

		[Token(Token = "0x170000E9")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x2C2874C", Offset = "0x2C2874C", VA = "0x2C2874C", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x2C28754", Offset = "0x2C28754", VA = "0x2C28754", Slot = "9")]
		protected override bool OnInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x2C2892C", Offset = "0x2C2892C", VA = "0x2C2892C", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x2C289E0", Offset = "0x2C289E0", VA = "0x2C289E0", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x2C28A94", Offset = "0x2C28A94", VA = "0x2C28A94", Slot = "26")]
		protected override void OnUpdate(float delta)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x2C28A98", Offset = "0x2C28A98", VA = "0x2C28A98")]
		private void CommonInterceptor(string url, ref HttpParam param)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x2C28BA8", Offset = "0x2C28BA8", VA = "0x2C28BA8")]
		public HttpInterceptorSystem()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class BrushBaseData
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P3dGroup group;

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x2C28BB8", Offset = "0x2C28BB8", VA = "0x2C28BB8")]
		public BrushBaseData()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class BrushDecalData : BrushBaseData
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask layers;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public P3dBlendMode blendMode;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture texture;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture shape;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public P3dChannel shapeChannel;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float opacity;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float angle;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 scale;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float radius;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float hardness;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float wrapping;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public P3dModel targetModel;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public P3dPaintableTexture targetTexture;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float normalFront;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float normalBack;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float normalFade;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Texture tileTexture;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform tileTransform;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float tileOpacity;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float tileTransition;

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x2C28BC0", Offset = "0x2C28BC0", VA = "0x2C28BC0")]
		public BrushDecalData()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class BrushSphereData : BrushBaseData
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask layers;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public P3dBlendMode blendMode;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float opacity;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float angle;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 scale;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float radius;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float hardness;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public P3dModel targetModel;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public P3dPaintableTexture targetTexture;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture tileTexture;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform tileTransform;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float tileOpacity;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float tileTransition;

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x2C28BC8", Offset = "0x2C28BC8", VA = "0x2C28BC8")]
		public BrushSphereData()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class BrushFillData : BrushBaseData
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public P3dBlendMode blendMode;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture texture;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float opacity;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float minimun;

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x2C28BD0", Offset = "0x2C28BD0", VA = "0x2C28BD0")]
		public BrushFillData()
		{
		}
	}
	[Token(Token = "0x2000253")]
	public class BrushReplaceData : BrushBaseData
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture texture;

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x2C28BD8", Offset = "0x2C28BD8", VA = "0x2C28BD8")]
		public BrushReplaceData()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class BrushReplaceChannelsData : BrushBaseData
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture textureR;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture textureG;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture textureB;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture textureA;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector4 channelR;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector4 channelG;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector4 channelB;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector4 channelA;

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x2C28BE0", Offset = "0x2C28BE0", VA = "0x2C28BE0")]
		public BrushReplaceChannelsData()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public interface IBrush
	{
		[Token(Token = "0x6000E91")]
		string BrushName();

		[Token(Token = "0x6000E92")]
		void OnInit(GameObject go);

		[Token(Token = "0x6000E93")]
		void SetActive(bool isActive);

		[Token(Token = "0x6000E94")]
		void OnChangeData<T>(T data) where T : BrushBaseData;

		[Token(Token = "0x6000E95")]
		void OnChangeLayers(LayerMask layers);

		[Token(Token = "0x6000E96")]
		void OnChangeBlendMode(P3dBlendMode blendMode);

		[Token(Token = "0x6000E97")]
		void OnChangeShapeChannel(P3dChannel shapeChannel);

		[Token(Token = "0x6000E98")]
		void OnChangeOpacity(float opacity);

		[Token(Token = "0x6000E99")]
		void OnChangeAngle(float angle);

		[Token(Token = "0x6000E9A")]
		void OnChangeScale(Vector3 scale);

		[Token(Token = "0x6000E9B")]
		void OnChangeRadius(float radius);

		[Token(Token = "0x6000E9C")]
		void OnChangeHardness(float hardness);

		[Token(Token = "0x6000E9D")]
		void OnChangeWrapping(float wrapping);

		[Token(Token = "0x6000E9E")]
		void OnChangeTargetModel(P3dModel targetModel);

		[Token(Token = "0x6000E9F")]
		void OnChangeTargetTexture(P3dPaintableTexture targetTexture);

		[Token(Token = "0x6000EA0")]
		void OnChangeNormalFront(float normalFront);

		[Token(Token = "0x6000EA1")]
		void OnChangeNormalBack(float normalBack);

		[Token(Token = "0x6000EA2")]
		void OnChangeNormalFade(float normalFade);

		[Token(Token = "0x6000EA3")]
		void OnChangeTileTexture(Texture tileTexture);

		[Token(Token = "0x6000EA4")]
		void OnChangeTileTransform(Transform tileTransform);

		[Token(Token = "0x6000EA5")]
		void OnChangeTileOpacity(float tileOpacity);

		[Token(Token = "0x6000EA6")]
		void OnChangeTileTransition(float tileTransition);

		[Token(Token = "0x6000EA7")]
		void OnChangeMinimun(float minimun);

		[Token(Token = "0x6000EA8")]
		void OnChangeTextureR(Texture textureR);

		[Token(Token = "0x6000EA9")]
		void OnChangeTextureG(Texture textureG);

		[Token(Token = "0x6000EAA")]
		void OnChangeTextureB(Texture textureB);

		[Token(Token = "0x6000EAB")]
		void OnChangeTextureA(Texture textureA);

		[Token(Token = "0x6000EAC")]
		void OnChangeChannelR(Vector4 channelR);

		[Token(Token = "0x6000EAD")]
		void OnChangeChannelG(Vector4 channelG);

		[Token(Token = "0x6000EAE")]
		void OnChangeChannelB(Vector4 channelB);

		[Token(Token = "0x6000EAF")]
		void OnChangeChannelA(Vector4 channelA);

		[Token(Token = "0x6000EB0")]
		void OnChangeColor(Color color);

		[Token(Token = "0x6000EB1")]
		void OnChangeGroup(P3dGroup group);

		[Token(Token = "0x6000EB2")]
		void OnChangeShape(Texture shape);

		[Token(Token = "0x6000EB3")]
		void OnChangeTexture(Texture texture);

		[Token(Token = "0x6000EB4")]
		void OnReset();
	}
	[Token(Token = "0x2000256")]
	public class PaintBrushBase<T> : IBrush where T : BrushBaseData
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T model;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject rootObj;

		[Token(Token = "0x6000EB5")]
		public virtual string BrushName()
		{
			return null;
		}

		[Token(Token = "0x6000EB6")]
		public virtual void OnInit(GameObject go)
		{
		}

		[Token(Token = "0x6000EB7")]
		public virtual void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6000EB8")]
		public virtual void OnReset()
		{
		}

		[Token(Token = "0x6000EB9")]
		public virtual void OnChangeData<T1>(T1 data) where T1 : BrushBaseData
		{
		}

		[Token(Token = "0x6000EBA")]
		public virtual void OnChangeData()
		{
		}

		[Token(Token = "0x6000EBB")]
		public virtual void OnChangeColor(Color color)
		{
		}

		[Token(Token = "0x6000EBC")]
		public virtual void OnChangeShape(Texture shape)
		{
		}

		[Token(Token = "0x6000EBD")]
		public virtual void OnChangeTexture(Texture texture)
		{
		}

		[Token(Token = "0x6000EBE")]
		public virtual void OnChangeLayers(LayerMask layers)
		{
		}

		[Token(Token = "0x6000EBF")]
		public virtual void OnChangeBlendMode(P3dBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000EC0")]
		public virtual void OnChangeShapeChannel(P3dChannel shapeChannel)
		{
		}

		[Token(Token = "0x6000EC1")]
		public virtual void OnChangeOpacity(float opacity)
		{
		}

		[Token(Token = "0x6000EC2")]
		public virtual void OnChangeAngle(float angle)
		{
		}

		[Token(Token = "0x6000EC3")]
		public virtual void OnChangeScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6000EC4")]
		public virtual void OnChangeRadius(float radius)
		{
		}

		[Token(Token = "0x6000EC5")]
		public virtual void OnChangeHardness(float hardness)
		{
		}

		[Token(Token = "0x6000EC6")]
		public virtual void OnChangeWrapping(float wrapping)
		{
		}

		[Token(Token = "0x6000EC7")]
		public virtual void OnChangeTargetModel(P3dModel targetModel)
		{
		}

		[Token(Token = "0x6000EC8")]
		public virtual void OnChangeTargetTexture(P3dPaintableTexture targetTexture)
		{
		}

		[Token(Token = "0x6000EC9")]
		public virtual void OnChangeNormalFront(float normalFront)
		{
		}

		[Token(Token = "0x6000ECA")]
		public virtual void OnChangeNormalBack(float normalBack)
		{
		}

		[Token(Token = "0x6000ECB")]
		public virtual void OnChangeNormalFade(float normalFade)
		{
		}

		[Token(Token = "0x6000ECC")]
		public virtual void OnChangeTileTexture(Texture tileTexture)
		{
		}

		[Token(Token = "0x6000ECD")]
		public virtual void OnChangeTileTransform(Transform tileTransform)
		{
		}

		[Token(Token = "0x6000ECE")]
		public virtual void OnChangeTileOpacity(float tileOpacity)
		{
		}

		[Token(Token = "0x6000ECF")]
		public virtual void OnChangeTileTransition(float tileTransition)
		{
		}

		[Token(Token = "0x6000ED0")]
		public virtual void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000ED1")]
		public virtual void OnChangeMinimun(float minimun)
		{
		}

		[Token(Token = "0x6000ED2")]
		public virtual void OnChangeTextureR(Texture textureR)
		{
		}

		[Token(Token = "0x6000ED3")]
		public virtual void OnChangeTextureG(Texture textureG)
		{
		}

		[Token(Token = "0x6000ED4")]
		public virtual void OnChangeTextureB(Texture textureB)
		{
		}

		[Token(Token = "0x6000ED5")]
		public virtual void OnChangeTextureA(Texture textureA)
		{
		}

		[Token(Token = "0x6000ED6")]
		public virtual void OnChangeChannelR(Vector4 channelR)
		{
		}

		[Token(Token = "0x6000ED7")]
		public virtual void OnChangeChannelG(Vector4 channelG)
		{
		}

		[Token(Token = "0x6000ED8")]
		public virtual void OnChangeChannelB(Vector4 channelB)
		{
		}

		[Token(Token = "0x6000ED9")]
		public virtual void OnChangeChannelA(Vector4 channelA)
		{
		}

		[Token(Token = "0x6000EDA")]
		public PaintBrushBase()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class PaintBrushSphere : PaintBrushBase<BrushSphereData>
	{
		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P3dPaintSphere p3dPaint;

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x2C28BE8", Offset = "0x2C28BE8", VA = "0x2C28BE8", Slot = "41")]
		public override void OnInit(GameObject go)
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x2C28C30", Offset = "0x2C28C30", VA = "0x2C28C30", Slot = "45")]
		public override void OnChangeData()
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x2C28CFC", Offset = "0x2C28CFC", VA = "0x2C28CFC", Slot = "46")]
		public override void OnChangeColor(Color color)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x2C28D1C", Offset = "0x2C28D1C", VA = "0x2C28D1C", Slot = "49")]
		public override void OnChangeLayers(LayerMask layers)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x2C28D38", Offset = "0x2C28D38", VA = "0x2C28D38", Slot = "50")]
		public override void OnChangeBlendMode(P3dBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x2C28D90", Offset = "0x2C28D90", VA = "0x2C28D90", Slot = "52")]
		public override void OnChangeOpacity(float opacity)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x2C28DAC", Offset = "0x2C28DAC", VA = "0x2C28DAC", Slot = "53")]
		public override void OnChangeAngle(float angle)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x2C28DC8", Offset = "0x2C28DC8", VA = "0x2C28DC8", Slot = "54")]
		public override void OnChangeScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x2C28DE8", Offset = "0x2C28DE8", VA = "0x2C28DE8", Slot = "55")]
		public override void OnChangeRadius(float radius)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x2C28E04", Offset = "0x2C28E04", VA = "0x2C28E04", Slot = "56")]
		public override void OnChangeHardness(float hardness)
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x2C28E20", Offset = "0x2C28E20", VA = "0x2C28E20", Slot = "58")]
		public override void OnChangeTargetModel(P3dModel targetModel)
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x2C28E3C", Offset = "0x2C28E3C", VA = "0x2C28E3C", Slot = "59")]
		public override void OnChangeTargetTexture(P3dPaintableTexture targetTexture)
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x2C28E58", Offset = "0x2C28E58", VA = "0x2C28E58", Slot = "63")]
		public override void OnChangeTileTexture(Texture tileTexture)
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x2C28E74", Offset = "0x2C28E74", VA = "0x2C28E74", Slot = "64")]
		public override void OnChangeTileTransform(Transform tileTransform)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x2C28E90", Offset = "0x2C28E90", VA = "0x2C28E90", Slot = "65")]
		public override void OnChangeTileOpacity(float tileOpacity)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x2C28EAC", Offset = "0x2C28EAC", VA = "0x2C28EAC", Slot = "66")]
		public override void OnChangeTileTransition(float tileTransition)
		{
		}

		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x2C28EC8", Offset = "0x2C28EC8", VA = "0x2C28EC8", Slot = "67")]
		public override void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x2C28EE4", Offset = "0x2C28EE4", VA = "0x2C28EE4", Slot = "43")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x2C28EE8", Offset = "0x2C28EE8", VA = "0x2C28EE8")]
		public PaintBrushSphere()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class PaintBrushDecal : PaintBrushBase<BrushDecalData>
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P3dPaintDecal p3dPaint;

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x2DB69D4", Offset = "0x2DB69D4", VA = "0x2DB69D4", Slot = "41")]
		public override void OnInit(GameObject go)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x2DB6A1C", Offset = "0x2DB6A1C", VA = "0x2DB6A1C", Slot = "46")]
		public override void OnChangeColor(Color color)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x2DB6A3C", Offset = "0x2DB6A3C", VA = "0x2DB6A3C", Slot = "47")]
		public override void OnChangeShape(Texture shape)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x2DB6A58", Offset = "0x2DB6A58", VA = "0x2DB6A58", Slot = "48")]
		public override void OnChangeTexture(Texture texture)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x2DB6A74", Offset = "0x2DB6A74", VA = "0x2DB6A74", Slot = "49")]
		public override void OnChangeLayers(LayerMask layers)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x2DB6A90", Offset = "0x2DB6A90", VA = "0x2DB6A90", Slot = "50")]
		public override void OnChangeBlendMode(P3dBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x2DB6AEC", Offset = "0x2DB6AEC", VA = "0x2DB6AEC", Slot = "51")]
		public override void OnChangeShapeChannel(P3dChannel shapeChannel)
		{
		}

		[Token(Token = "0x6000EF5")]
		[Address(RVA = "0x2DB6B08", Offset = "0x2DB6B08", VA = "0x2DB6B08", Slot = "52")]
		public override void OnChangeOpacity(float opacity)
		{
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x2DB6B24", Offset = "0x2DB6B24", VA = "0x2DB6B24", Slot = "53")]
		public override void OnChangeAngle(float angle)
		{
		}

		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x2DB6B40", Offset = "0x2DB6B40", VA = "0x2DB6B40", Slot = "54")]
		public override void OnChangeScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x2DB6B60", Offset = "0x2DB6B60", VA = "0x2DB6B60", Slot = "55")]
		public override void OnChangeRadius(float radius)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x2DB6B7C", Offset = "0x2DB6B7C", VA = "0x2DB6B7C", Slot = "56")]
		public override void OnChangeHardness(float hardness)
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x2DB6B98", Offset = "0x2DB6B98", VA = "0x2DB6B98", Slot = "57")]
		public override void OnChangeWrapping(float wrapping)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x2DB6BB4", Offset = "0x2DB6BB4", VA = "0x2DB6BB4", Slot = "58")]
		public override void OnChangeTargetModel(P3dModel targetModel)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x2DB6BD0", Offset = "0x2DB6BD0", VA = "0x2DB6BD0", Slot = "59")]
		public override void OnChangeTargetTexture(P3dPaintableTexture targetTexture)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x2DB6BEC", Offset = "0x2DB6BEC", VA = "0x2DB6BEC", Slot = "60")]
		public override void OnChangeNormalFront(float normalFront)
		{
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x2DB6C08", Offset = "0x2DB6C08", VA = "0x2DB6C08", Slot = "61")]
		public override void OnChangeNormalBack(float normalBack)
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x2DB6C24", Offset = "0x2DB6C24", VA = "0x2DB6C24", Slot = "62")]
		public override void OnChangeNormalFade(float normalFade)
		{
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x2DB6C40", Offset = "0x2DB6C40", VA = "0x2DB6C40", Slot = "63")]
		public override void OnChangeTileTexture(Texture tileTexture)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x2DB6C5C", Offset = "0x2DB6C5C", VA = "0x2DB6C5C", Slot = "64")]
		public override void OnChangeTileTransform(Transform tileTransform)
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x2DB6C78", Offset = "0x2DB6C78", VA = "0x2DB6C78", Slot = "65")]
		public override void OnChangeTileOpacity(float tileOpacity)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x2DB6C94", Offset = "0x2DB6C94", VA = "0x2DB6C94", Slot = "66")]
		public override void OnChangeTileTransition(float tileTransition)
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x2DB6CB0", Offset = "0x2DB6CB0", VA = "0x2DB6CB0", Slot = "67")]
		public override void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x2DB6CCC", Offset = "0x2DB6CCC", VA = "0x2DB6CCC", Slot = "43")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x2DB6CD0", Offset = "0x2DB6CD0", VA = "0x2DB6CD0")]
		public PaintBrushDecal()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class PaintBrushFill : PaintBrushBase<BrushFillData>
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P3dPaintFill p3dPaint;

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x2DB6D18", Offset = "0x2DB6D18", VA = "0x2DB6D18", Slot = "41")]
		public override void OnInit(GameObject go)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x2DB6D60", Offset = "0x2DB6D60", VA = "0x2DB6D60", Slot = "46")]
		public override void OnChangeColor(Color color)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x2DB6D80", Offset = "0x2DB6D80", VA = "0x2DB6D80", Slot = "48")]
		public override void OnChangeTexture(Texture texture)
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x2DB6D9C", Offset = "0x2DB6D9C", VA = "0x2DB6D9C", Slot = "68")]
		public override void OnChangeMinimun(float minimun)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x2DB6DB8", Offset = "0x2DB6DB8", VA = "0x2DB6DB8", Slot = "50")]
		public override void OnChangeBlendMode(P3dBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x2DB6E10", Offset = "0x2DB6E10", VA = "0x2DB6E10", Slot = "52")]
		public override void OnChangeOpacity(float opacity)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x2DB6E2C", Offset = "0x2DB6E2C", VA = "0x2DB6E2C", Slot = "67")]
		public override void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x2DB6E48", Offset = "0x2DB6E48", VA = "0x2DB6E48", Slot = "43")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x2DB6E4C", Offset = "0x2DB6E4C", VA = "0x2DB6E4C")]
		public PaintBrushFill()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class PaintBrushReplace : PaintBrushBase<BrushReplaceData>
	{
		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P3dPaintReplace p3dPaint;

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x2DB6E94", Offset = "0x2DB6E94", VA = "0x2DB6E94", Slot = "41")]
		public override void OnInit(GameObject go)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x2DB6EDC", Offset = "0x2DB6EDC", VA = "0x2DB6EDC", Slot = "46")]
		public override void OnChangeColor(Color color)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x2DB6EFC", Offset = "0x2DB6EFC", VA = "0x2DB6EFC", Slot = "48")]
		public override void OnChangeTexture(Texture texture)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x2DB6F18", Offset = "0x2DB6F18", VA = "0x2DB6F18", Slot = "67")]
		public override void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x2DB6F34", Offset = "0x2DB6F34", VA = "0x2DB6F34", Slot = "43")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x2DB6F38", Offset = "0x2DB6F38", VA = "0x2DB6F38")]
		public PaintBrushReplace()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class PaintBrushReplaceChannels : PaintBrushBase<BrushReplaceChannelsData>
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P3dPaintReplaceChannels p3dPaint;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x2DB6F80", Offset = "0x2DB6F80", VA = "0x2DB6F80", Slot = "41")]
		public override void OnInit(GameObject go)
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x2DB6FC8", Offset = "0x2DB6FC8", VA = "0x2DB6FC8", Slot = "67")]
		public override void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x2DB6FE4", Offset = "0x2DB6FE4", VA = "0x2DB6FE4", Slot = "69")]
		public override void OnChangeTextureR(Texture textureR)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x2DB7000", Offset = "0x2DB7000", VA = "0x2DB7000", Slot = "70")]
		public override void OnChangeTextureG(Texture textureG)
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x2DB701C", Offset = "0x2DB701C", VA = "0x2DB701C", Slot = "71")]
		public override void OnChangeTextureB(Texture textureB)
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x2DB7038", Offset = "0x2DB7038", VA = "0x2DB7038", Slot = "72")]
		public override void OnChangeTextureA(Texture textureA)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x2DB7054", Offset = "0x2DB7054", VA = "0x2DB7054", Slot = "73")]
		public override void OnChangeChannelR(Vector4 channelR)
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x2DB7074", Offset = "0x2DB7074", VA = "0x2DB7074", Slot = "74")]
		public override void OnChangeChannelG(Vector4 channelG)
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x2DB7094", Offset = "0x2DB7094", VA = "0x2DB7094", Slot = "75")]
		public override void OnChangeChannelB(Vector4 channelB)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x2DB70B4", Offset = "0x2DB70B4", VA = "0x2DB70B4", Slot = "76")]
		public override void OnChangeChannelA(Vector4 channelA)
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x2DB70D4", Offset = "0x2DB70D4", VA = "0x2DB70D4", Slot = "43")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x2DB70D8", Offset = "0x2DB70D8", VA = "0x2DB70D8")]
		public PaintBrushReplaceChannels()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class PaintBrushSystem : SystemBase
	{
		[Token(Token = "0x200025D")]
		public struct ArgsParam : IArgs
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string method;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public object param;
		}

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, IBrush> brushDic;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IBrush currentBrush;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IBrush lastBrush;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform PaintPoolRoot;

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x2DB7120", Offset = "0x2DB7120", VA = "0x2DB7120", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0x2DB7124", Offset = "0x2DB7124", VA = "0x2DB7124", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x2DB7128", Offset = "0x2DB7128", VA = "0x2DB7128", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x2DB712C", Offset = "0x2DB712C", VA = "0x2DB712C")]
		public PaintBrushSystem()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x2DB7214", Offset = "0x2DB7214", VA = "0x2DB7214")]
		[Command]
		private Result ChangePaintTemplate(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x2DB789C", Offset = "0x2DB789C", VA = "0x2DB789C")]
		private Result OnPaintExcute(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000F28")]
		public void OnChangeData<T>(T data) where T : BrushBaseData
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x2DB796C", Offset = "0x2DB796C", VA = "0x2DB796C")]
		public void OnChangeColor(Color color)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x2DB7A40", Offset = "0x2DB7A40", VA = "0x2DB7A40")]
		public void OnChangeShape(Texture shape)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x2DB7AEC", Offset = "0x2DB7AEC", VA = "0x2DB7AEC")]
		public void OnChangeTexture(Texture texture)
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x2DB7B98", Offset = "0x2DB7B98", VA = "0x2DB7B98")]
		public void OnChangeLayers(LayerMask layers)
		{
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0x2DB7C48", Offset = "0x2DB7C48", VA = "0x2DB7C48")]
		public void OnChangeBlendMode(P3dBlendMode blendMode)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0x2DB7D4C", Offset = "0x2DB7D4C", VA = "0x2DB7D4C")]
		public void OnChangeShapeChannel(P3dChannel shapeChannel)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0x2DB7DF8", Offset = "0x2DB7DF8", VA = "0x2DB7DF8")]
		public void OnChangeOpacity(float opacity)
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0x2DB7EAC", Offset = "0x2DB7EAC", VA = "0x2DB7EAC")]
		public void OnChangeAngle(float angle)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x2DB7F60", Offset = "0x2DB7F60", VA = "0x2DB7F60")]
		public void OnChangeScale(Vector3 scale)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x2DB802C", Offset = "0x2DB802C", VA = "0x2DB802C")]
		public void OnChangeRadius(float radius)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x2DB80E0", Offset = "0x2DB80E0", VA = "0x2DB80E0")]
		public void OnChangeHardness(float hardness)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x2DB8194", Offset = "0x2DB8194", VA = "0x2DB8194")]
		public void OnChangeWrapping(float wrapping)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x2DB8248", Offset = "0x2DB8248", VA = "0x2DB8248")]
		public void OnChangeTargetModel(P3dModel targetModel)
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x2DB82F4", Offset = "0x2DB82F4", VA = "0x2DB82F4")]
		public void OnChangeTargetTexture(P3dPaintableTexture targetTexture)
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x2DB83A0", Offset = "0x2DB83A0", VA = "0x2DB83A0")]
		public void OnChangeNormalFront(float normalFront)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0x2DB8454", Offset = "0x2DB8454", VA = "0x2DB8454")]
		public void OnChangeNormalBack(float normalBack)
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0x2DB8508", Offset = "0x2DB8508", VA = "0x2DB8508")]
		public void OnChangeNormalFade(float normalFade)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0x2DB85BC", Offset = "0x2DB85BC", VA = "0x2DB85BC")]
		public void OnChangeTileTexture(Texture tileTexture)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0x2DB8668", Offset = "0x2DB8668", VA = "0x2DB8668")]
		public void OnChangeTileTransform(Transform tileTransform)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0x2DB8714", Offset = "0x2DB8714", VA = "0x2DB8714")]
		public void OnChangeTileOpacity(float tileOpacity)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0x2DB87C8", Offset = "0x2DB87C8", VA = "0x2DB87C8")]
		public void OnChangeTileTransition(float tileTransition)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x2DB887C", Offset = "0x2DB887C", VA = "0x2DB887C")]
		public void OnChangeGroup(P3dGroup group)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x2DB892C", Offset = "0x2DB892C", VA = "0x2DB892C")]
		public void OnChangeMinimun(float minimun)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x2DB89E0", Offset = "0x2DB89E0", VA = "0x2DB89E0")]
		public void OnChangeTextureR(Texture textureR)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x2DB8A8C", Offset = "0x2DB8A8C", VA = "0x2DB8A8C")]
		public void OnChangeTextureG(Texture textureG)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x2DB8B38", Offset = "0x2DB8B38", VA = "0x2DB8B38")]
		public void OnChangeTextureB(Texture textureB)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0x2DB8BE4", Offset = "0x2DB8BE4", VA = "0x2DB8BE4")]
		public void OnChangeTextureA(Texture textureA)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x2DB8C90", Offset = "0x2DB8C90", VA = "0x2DB8C90")]
		public void OnChangeChannelR(Vector4 channelR)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0x2DB8D64", Offset = "0x2DB8D64", VA = "0x2DB8D64")]
		public void OnChangeChannelG(Vector4 channelG)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x2DB8E38", Offset = "0x2DB8E38", VA = "0x2DB8E38")]
		public void OnChangeChannelB(Vector4 channelB)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x2DB8F0C", Offset = "0x2DB8F0C", VA = "0x2DB8F0C")]
		public void OnChangeChannelA(Vector4 channelA)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x2DB8FE0", Offset = "0x2DB8FE0", VA = "0x2DB8FE0")]
		public void OnReset()
		{
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x2DB91B4", Offset = "0x2DB91B4", VA = "0x2DB91B4")]
		public void OnDestory()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x2DB7578", Offset = "0x2DB7578", VA = "0x2DB7578")]
		private IBrush OnCreateBrush(string template)
		{
			return null;
		}
	}
	[Token(Token = "0x200025E")]
	public class PermissionSystem : SystemBase
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x2DB926C", Offset = "0x2DB926C", VA = "0x2DB926C", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x2DB9270", Offset = "0x2DB9270", VA = "0x2DB9270", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0x2DB9274", Offset = "0x2DB9274", VA = "0x2DB9274", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x2DB9278", Offset = "0x2DB9278", VA = "0x2DB9278")]
		[Command]
		private Result HasMicPermission()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0x2DB933C", Offset = "0x2DB933C", VA = "0x2DB933C")]
		[Command]
		private Result OpenMicPermission(Args<Action<int>> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0x2DB93D0", Offset = "0x2DB93D0", VA = "0x2DB93D0")]
		public PermissionSystem()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public class PropsSystem : SystemBase
	{
		[Token(Token = "0x170000EA")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0x2DB93D8", Offset = "0x2DB93D8", VA = "0x2DB93D8", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0x2DB93E0", Offset = "0x2DB93E0", VA = "0x2DB93E0", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0x2DB9430", Offset = "0x2DB9430", VA = "0x2DB9430", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0x2DB9480", Offset = "0x2DB9480", VA = "0x2DB9480", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0x2DB9484", Offset = "0x2DB9484", VA = "0x2DB9484")]
		public PropsSystem()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class SettingSystem : SystemBase
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x2DB9494", Offset = "0x2DB9494", VA = "0x2DB9494", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x2DB9498", Offset = "0x2DB9498", VA = "0x2DB9498", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x2DB949C", Offset = "0x2DB949C", VA = "0x2DB949C", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x2DB94A0", Offset = "0x2DB94A0", VA = "0x2DB94A0")]
		public float SetLodBias(float lodBias)
		{
			return default(float);
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x2DB94D4", Offset = "0x2DB94D4", VA = "0x2DB94D4")]
		public float GetLodBias()
		{
			return default(float);
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x2DB94DC", Offset = "0x2DB94DC", VA = "0x2DB94DC")]
		public SettingSystem()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class UserSystem : SystemBase
	{
		[Token(Token = "0x2000262")]
		private class IllegalAvatarInfo
		{
			[Token(Token = "0x4000F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long avatarId;

			[Token(Token = "0x4000F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long version;

			[Token(Token = "0x4000F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string avatar;

			[Token(Token = "0x6000F91")]
			[Address(RVA = "0x2DBD53C", Offset = "0x2DBD53C", VA = "0x2DBD53C")]
			public IllegalAvatarInfo()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000264")]
		[CompilerGenerated]
		private struct <GetUserInfo>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public UserSystem <>4__this;

			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <requestData>5__2;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UserData <userData>5__3;

			[Token(Token = "0x6000F95")]
			[Address(RVA = "0x2DBD630", Offset = "0x2DBD630", VA = "0x2DBD630", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F96")]
			[Address(RVA = "0x2DBE5C0", Offset = "0x2DBE5C0", VA = "0x2DBE5C0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000265")]
		[CompilerGenerated]
		private struct <UpdateUserDataByID>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private string <userPath>5__2;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UserData <userData>5__3;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000F97")]
			[Address(RVA = "0x2DBE618", Offset = "0x2DBE618", VA = "0x2DBE618", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F98")]
			[Address(RVA = "0x2DBEF58", Offset = "0x2DBEF58", VA = "0x2DBEF58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000266")]
		[CompilerGenerated]
		private struct <UpdateUserInfoByID>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4000F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x2DBEFB0", Offset = "0x2DBEFB0", VA = "0x2DBEFB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x2DBF74C", Offset = "0x2DBF74C", VA = "0x2DBF74C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000267")]
		[CompilerGenerated]
		private struct <UpdateUserInfo>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public IArgs args;

			[Token(Token = "0x4000F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UserData <userData>5__2;

			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x2DBF7A4", Offset = "0x2DBF7A4", VA = "0x2DBF7A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x2DC00AC", Offset = "0x2DC00AC", VA = "0x2DC00AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000268")]
		[CompilerGenerated]
		private struct <GetCharacterInfo>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private UserData <userData>5__2;

			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x2DC0104", Offset = "0x2DC0104", VA = "0x2DC0104", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x2DC094C", Offset = "0x2DC094C", VA = "0x2DC094C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000269")]
		[CompilerGenerated]
		private struct <UpdateCharacterInfo>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string, string, string, bool> args;

			[Token(Token = "0x4000F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UserData <userData>5__2;

			[Token(Token = "0x4000F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private string <avatar>5__3;

			[Token(Token = "0x4000F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private string <thumbnail>5__4;

			[Token(Token = "0x4000F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x2DC09A4", Offset = "0x2DC09A4", VA = "0x2DC09A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x2DC1734", Offset = "0x2DC1734", VA = "0x2DC1734", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200026A")]
		[CompilerGenerated]
		private struct <CreateCharacterPlaceholder>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4000F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<Vector3> args;

			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x2DC178C", Offset = "0x2DC178C", VA = "0x2DC178C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x2DC1A80", Offset = "0x2DC1A80", VA = "0x2DC1A80", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200026B")]
		[CompilerGenerated]
		private struct <CreateCharacter>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<Vector3, string> args;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UserData <userData>5__2;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <config>5__3;

			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UniTask<UGCAvatarData>.Awaiter <>u__2;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private TaskAwaiter<bool> <>u__3;

			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x2DC1AD8", Offset = "0x2DC1AD8", VA = "0x2DC1AD8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x2DC2C6C", Offset = "0x2DC2C6C", VA = "0x2DC2C6C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200026C")]
		[CompilerGenerated]
		private struct <CreateMyTemporaryCharacter>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<Vector3, string> args;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<UGCAvatarData>.Awaiter <>u__1;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x2DC2CC4", Offset = "0x2DC2CC4", VA = "0x2DC2CC4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x2DC33BC", Offset = "0x2DC33BC", VA = "0x2DC33BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200026D")]
		[CompilerGenerated]
		private struct <DestroyMyTemporaryCharacter>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x2DC3414", Offset = "0x2DC3414", VA = "0x2DC3414", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x2DC375C", Offset = "0x2DC375C", VA = "0x2DC375C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200026E")]
		[CompilerGenerated]
		private struct <CreateCharacterKeepPos>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, int> args;

			[Token(Token = "0x4000FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public UserSystem <>4__this;

			[Token(Token = "0x4000FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UserData <userData>5__2;

			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<UGCAvatarData>.Awaiter <>u__1;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x2DC37B4", Offset = "0x2DC37B4", VA = "0x2DC37B4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x2DC4184", Offset = "0x2DC4184", VA = "0x2DC4184", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200026F")]
		[CompilerGenerated]
		private struct <CopyCharacter>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long, Transform, Vector3, Vector3, Vector3> args;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private TaskAwaiter<PicoCharacter> <>u__1;

			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x2DC41DC", Offset = "0x2DC41DC", VA = "0x2DC41DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x2DC4890", Offset = "0x2DC4890", VA = "0x2DC4890", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000270")]
		[CompilerGenerated]
		private struct <CopyCharacterByID>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long, Transform, Vector3, Vector3, Vector3, bool, long> args;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private TaskAwaiter<PicoCharacter> <>u__1;

			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x2DC48E8", Offset = "0x2DC48E8", VA = "0x2DC48E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x2DC503C", Offset = "0x2DC503C", VA = "0x2DC503C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000271")]
		[CompilerGenerated]
		private struct <GetUGCAvatarAssetList>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string> args;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private string <ugcData>5__2;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x2DC5094", Offset = "0x2DC5094", VA = "0x2DC5094", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x2DC5E0C", Offset = "0x2DC5E0C", VA = "0x2DC5E0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000272")]
		[CompilerGenerated]
		private struct <PlayCurrentAvatarEmote>d__60 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <success>5__2;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x2DC5E64", Offset = "0x2DC5E64", VA = "0x2DC5E64", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x2DC665C", Offset = "0x2DC665C", VA = "0x2DC665C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000F6F")]
		public const string USERID = "picoworlds_userId";

		[Token(Token = "0x4000F70")]
		public const string TOKEN = "picoworlds_token";

		[Token(Token = "0x4000F71")]
		public const string LOGIN_METHOD = "LOGIN_METHOD";

		[Token(Token = "0x4000F72")]
		public const string THIRD_PARTY_USERID = "THIRD_PARTY_USER_ID";

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private AvatarPinchState avatarPinchState;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string RobotUserID;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string RobotToken;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int testStep;

		[Token(Token = "0x170000EB")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x2DB94E4", Offset = "0x2DB94E4", VA = "0x2DB94E4", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public bool IsRobot
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x2DB94EC", Offset = "0x2DB94EC", VA = "0x2DB94EC")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x2DB94F4", Offset = "0x2DB94F4", VA = "0x2DB94F4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x2DB9500", Offset = "0x2DB9500", VA = "0x2DB9500", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x2DB97FC", Offset = "0x2DB97FC", VA = "0x2DB97FC", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x2DB9AF8", Offset = "0x2DB9AF8", VA = "0x2DB9AF8", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x2DB9AFC", Offset = "0x2DB9AFC", VA = "0x2DB9AFC")]
		private void OnLoginSdkSucceed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x2DB9BFC", Offset = "0x2DB9BFC", VA = "0x2DB9BFC")]
		private void OnLogoutSdk(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x2DB9CB0", Offset = "0x2DB9CB0", VA = "0x2DB9CB0")]
		private void OnBeginLoadScene(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x2DB9D58", Offset = "0x2DB9D58", VA = "0x2DB9D58")]
		private void OnSceneLoaded(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x2DB9E00", Offset = "0x2DB9E00", VA = "0x2DB9E00")]
		private void BlockUser(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x2DB9EBC", Offset = "0x2DB9EBC", VA = "0x2DB9EBC")]
		private void UnblockUser(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x2DB9F78", Offset = "0x2DB9F78", VA = "0x2DB9F78")]
		[Command]
		private Result IsLogin()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x2DBA3C0", Offset = "0x2DBA3C0", VA = "0x2DBA3C0")]
		[Command]
		private Result SetToKen(Args<string, string, string, string> userInfo)
		{
			return default(Result);
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0x2DBA72C", Offset = "0x2DBA72C", VA = "0x2DBA72C")]
		[Command]
		private Result LogOut()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x2DBAA5C", Offset = "0x2DBAA5C", VA = "0x2DBAA5C")]
		[AsyncStateMachine(typeof(<GetUserInfo>d__26))]
		[Command]
		private UniTask<Result> GetUserInfo()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0x2DBAB64", Offset = "0x2DBAB64", VA = "0x2DBAB64")]
		[Command]
		[AsyncStateMachine(typeof(<UpdateUserDataByID>d__27))]
		private UniTask<Result> UpdateUserDataByID(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0x2DBAC64", Offset = "0x2DBAC64", VA = "0x2DBAC64")]
		[Command]
		[AsyncStateMachine(typeof(<UpdateUserInfoByID>d__28))]
		private UniTask<Result> UpdateUserInfoByID(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0x2DBAD64", Offset = "0x2DBAD64", VA = "0x2DBAD64")]
		[AsyncStateMachine(typeof(<UpdateUserInfo>d__29))]
		[Command]
		private UniTask<Result> UpdateUserInfo(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0x2DBAE6C", Offset = "0x2DBAE6C", VA = "0x2DBAE6C")]
		[AsyncStateMachine(typeof(<GetCharacterInfo>d__30))]
		[Command]
		private UniTask<Result> GetCharacterInfo()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0x2DBAF58", Offset = "0x2DBAF58", VA = "0x2DBAF58")]
		[Command]
		[AsyncStateMachine(typeof(<UpdateCharacterInfo>d__31))]
		private UniTask<Result> UpdateCharacterInfo(Args<string, string, string, string, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0x2DBB070", Offset = "0x2DBB070", VA = "0x2DBB070")]
		[Command]
		private void PushCharacterChangeEvent(Args<long> args)
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x2DBB1A8", Offset = "0x2DBB1A8", VA = "0x2DBB1A8")]
		[Command]
		[AsyncStateMachine(typeof(<CreateCharacterPlaceholder>d__33))]
		private UniTask<Result> CreateCharacterPlaceholder(Args<Vector3> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x2DBB2A8", Offset = "0x2DBB2A8", VA = "0x2DBB2A8")]
		[AsyncStateMachine(typeof(<CreateCharacter>d__34))]
		[Command]
		private UniTask<Result> CreateCharacter(Args<Vector3, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x2DBB3C0", Offset = "0x2DBB3C0", VA = "0x2DBB3C0")]
		[AsyncStateMachine(typeof(<CreateMyTemporaryCharacter>d__35))]
		[Command]
		private UniTask<Result> CreateMyTemporaryCharacter(Args<Vector3, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x2DBB4D8", Offset = "0x2DBB4D8", VA = "0x2DBB4D8")]
		[AsyncStateMachine(typeof(<DestroyMyTemporaryCharacter>d__36))]
		[Command]
		private UniTask<Result> DestroyMyTemporaryCharacter()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x2DBB5C4", Offset = "0x2DBB5C4", VA = "0x2DBB5C4")]
		[AsyncStateMachine(typeof(<CreateCharacterKeepPos>d__37))]
		[Command]
		private UniTask<Result> CreateCharacterKeepPos(Args<string, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x2DBB6F8", Offset = "0x2DBB6F8", VA = "0x2DBB6F8")]
		[Command]
		private Result DestoryMyCharacter()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x2DBB79C", Offset = "0x2DBB79C", VA = "0x2DBB79C")]
		[AsyncStateMachine(typeof(<CopyCharacter>d__39))]
		[Command]
		private UniTask<Result> CopyCharacter(Args<long, Transform, Vector3, Vector3, Vector3> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x2DBB8B8", Offset = "0x2DBB8B8", VA = "0x2DBB8B8")]
		[AsyncStateMachine(typeof(<CopyCharacterByID>d__40))]
		[Command]
		private UniTask<Result> CopyCharacterByID(Args<long, Transform, Vector3, Vector3, Vector3, bool, long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x2DBB9CC", Offset = "0x2DBB9CC", VA = "0x2DBB9CC")]
		[Command]
		private void SetExclusiveCharacterLightState(Args<long, bool, bool> args)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x2DBBAB8", Offset = "0x2DBBAB8", VA = "0x2DBBAB8")]
		[Command]
		private void RemoveCopyCharacter()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x2DBBB4C", Offset = "0x2DBBB4C", VA = "0x2DBBB4C")]
		[Command]
		private void RemoveCopyCharacterByID(Args<long> args)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x2DBBC48", Offset = "0x2DBBC48", VA = "0x2DBBC48")]
		private void PreRequestEvent(string url, ref HttpParam param)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x2DBBDD8", Offset = "0x2DBBDD8", VA = "0x2DBBDD8")]
		[Command]
		private Result GetTunnellingStrength()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x2DBBFA8", Offset = "0x2DBBFA8", VA = "0x2DBBFA8")]
		[Command]
		private Result SetTunnellingStrength(Args<int> strength)
		{
			return default(Result);
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x2DBC168", Offset = "0x2DBC168", VA = "0x2DBC168")]
		[Command]
		private void CharacterTeleportChange(Args<int> commandArgs)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x2DBC290", Offset = "0x2DBC290", VA = "0x2DBC290")]
		[Command]
		private Result EnableControllerMove(Args<bool> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x2DBC364", Offset = "0x2DBC364", VA = "0x2DBC364")]
		[Command]
		private void SetLocomotionTutorialMode(Args<bool> commandArgs)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x2DBC3D8", Offset = "0x2DBC3D8", VA = "0x2DBC3D8")]
		[Command]
		private void SetMyPositionAndRotation(Args<Vector3, Vector3> args)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x2DBC4BC", Offset = "0x2DBC4BC", VA = "0x2DBC4BC")]
		[Command]
		private void SetPhysicsEnable(Args<bool> args)
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x2DBC538", Offset = "0x2DBC538", VA = "0x2DBC538")]
		[Command]
		private Result IsIdentity()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x2DBC7A4", Offset = "0x2DBC7A4", VA = "0x2DBC7A4")]
		[Command]
		private Result GetCurrentAvatarState()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x2DBC838", Offset = "0x2DBC838", VA = "0x2DBC838")]
		[Command]
		private void SetAvatarPinchState(Args<int> args)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x2DBC9F8", Offset = "0x2DBC9F8", VA = "0x2DBC9F8")]
		[AsyncStateMachine(typeof(<GetUGCAvatarAssetList>d__55))]
		[Command]
		private UniTask<Result> GetUGCAvatarAssetList(Args<string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x2DBCB10", Offset = "0x2DBCB10", VA = "0x2DBCB10")]
		[Command]
		private Result GetCurrentFaceTrackingSource()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x2DBCC68", Offset = "0x2DBCC68", VA = "0x2DBCC68")]
		[Command]
		private Result GetCurrentPersonalBoundariesState()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x2DBCE94", Offset = "0x2DBCE94", VA = "0x2DBCE94")]
		[Command]
		private void SetPersonalBoundariesState(Args<int> args)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x2DBD10C", Offset = "0x2DBD10C", VA = "0x2DBD10C")]
		[Command]
		private Result GetCurrentAvatarGroundedState()
		{
			return default(Result);
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x2DBD1DC", Offset = "0x2DBD1DC", VA = "0x2DBD1DC")]
		[AsyncStateMachine(typeof(<PlayCurrentAvatarEmote>d__60))]
		[Command]
		private UniTask<Result> PlayCurrentAvatarEmote(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x2DBD2F0", Offset = "0x2DBD2F0", VA = "0x2DBD2F0")]
		[Command]
		private void ProcessIllegalAvatar(Args<string> args)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x2DBD4C4", Offset = "0x2DBD4C4", VA = "0x2DBD4C4")]
		[Command]
		private void TestAvatarPerformance(Args<int> args)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x2DBD4C8", Offset = "0x2DBD4C8", VA = "0x2DBD4C8")]
		public UserSystem()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public class VersionCheckSystem : SystemBase
	{
		[Token(Token = "0x2000274")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VersionVo versionInfo;

			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x2DC6E84", Offset = "0x2DC6E84", VA = "0x2DC6E84")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x2DC6E8C", Offset = "0x2DC6E8C", VA = "0x2DC6E8C")]
			internal void <StartAppCheckVersion>b__0()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000276")]
		[CompilerGenerated]
		private struct <StartAppCheckVersion>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4000FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VersionCheckSystem <>4__this;

			[Token(Token = "0x4000FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass11_0 <>8__1;

			[Token(Token = "0x4000FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x2DC7240", Offset = "0x2DC7240", VA = "0x2DC7240", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x2DC7C84", Offset = "0x2DC7C84", VA = "0x2DC7C84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000277")]
		[CompilerGenerated]
		private struct <GetAppVersion>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4000FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x2DC7CDC", Offset = "0x2DC7CDC", VA = "0x2DC7CDC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x2DC8784", Offset = "0x2DC8784", VA = "0x2DC8784", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000278")]
		[CompilerGenerated]
		private struct <GetSystemData>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4000FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x2DC87DC", Offset = "0x2DC87DC", VA = "0x2DC87DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x2DC8B48", Offset = "0x2DC8B48", VA = "0x2DC8B48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float lastCheckedTime;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float checkTimeOut;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool needVersionCheckOnReturn;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ResultWithObject result;

		[Token(Token = "0x170000ED")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x2DC66B4", Offset = "0x2DC66B4", VA = "0x2DC66B4", Slot = "24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x2DC66BC", Offset = "0x2DC66BC", VA = "0x2DC66BC", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x2DC6840", Offset = "0x2DC6840", VA = "0x2DC6840")]
		private void OnDataChange(string dataPath, DataChangeArgs dataChangeArgs)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x2DC6988", Offset = "0x2DC6988", VA = "0x2DC6988", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x2DC6B0C", Offset = "0x2DC6B0C", VA = "0x2DC6B0C", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x2DC6B10", Offset = "0x2DC6B10", VA = "0x2DC6B10")]
		private void OnApplicationPause(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x2DC6B14", Offset = "0x2DC6B14", VA = "0x2DC6B14")]
		[AsyncStateMachine(typeof(<StartAppCheckVersion>d__11))]
		public UniTask<bool> StartAppCheckVersion()
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x2DC6BFC", Offset = "0x2DC6BFC", VA = "0x2DC6BFC")]
		[AsyncStateMachine(typeof(<GetAppVersion>d__12))]
		[Command]
		private UniTask<Result> GetAppVersion()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x2DC6CE8", Offset = "0x2DC6CE8", VA = "0x2DC6CE8")]
		[Command]
		[AsyncStateMachine(typeof(<GetSystemData>d__13))]
		private UniTask<Result> GetSystemData()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x2DC6DC8", Offset = "0x2DC6DC8", VA = "0x2DC6DC8")]
		[Command]
		private Result GetLocalAppVersion()
		{
			return default(Result);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x2DC6E74", Offset = "0x2DC6E74", VA = "0x2DC6E74")]
		public VersionCheckSystem()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class VRSpaceAdapterSystem : SystemBase
	{
		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrackingSpace trackingSpaceRoot;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TargetTracking hmdSpaceRoot;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ViewportSpace viewportSpaceRoot;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HandSpace handSpaceRoot;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isInitialize;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PicoverseInputManager inputManager;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool enableInput;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool hasExtraTask;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		private bool enableActivate;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		private bool isActivate;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool isRegistered;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool blockOperation;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<string> baseWindows;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<string> dialogWindows;

		[Token(Token = "0x170000EE")]
		public override bool StartEnable
		{
			[Token(Token = "0x6000FC9")]
			[Address(RVA = "0x2DC8BA0", Offset = "0x2DC8BA0", VA = "0x2DC8BA0", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		private bool IsActivate
		{
			[Token(Token = "0x6000FCC")]
			[Address(RVA = "0x2DC8CE0", Offset = "0x2DC8CE0", VA = "0x2DC8CE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FCD")]
			[Address(RVA = "0x2DC8CE8", Offset = "0x2DC8CE8", VA = "0x2DC8CE8")]
			set
			{
			}
		}

		[Token(Token = "0x14000002")]
		private event Action _onMenuClickEvent
		{
			[Token(Token = "0x6000FCA")]
			[Address(RVA = "0x2DC8BA8", Offset = "0x2DC8BA8", VA = "0x2DC8BA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000FCB")]
			[Address(RVA = "0x2DC8C44", Offset = "0x2DC8C44", VA = "0x2DC8C44")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x2DC8D00", Offset = "0x2DC8D00", VA = "0x2DC8D00")]
		private void SetMainUIActivate(bool activate)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x2DC8FC4", Offset = "0x2DC8FC4", VA = "0x2DC8FC4")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x2DC98F8", Offset = "0x2DC98F8", VA = "0x2DC98F8", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x2DC98FC", Offset = "0x2DC98FC", VA = "0x2DC98FC", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x2DC9F78", Offset = "0x2DC9F78", VA = "0x2DC9F78", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x2DCA064", Offset = "0x2DCA064", VA = "0x2DCA064")]
		private static bool CheckUIState()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x2DCA230", Offset = "0x2DCA230", VA = "0x2DCA230")]
		[Command]
		private Result GetWorldZoom()
		{
			return default(Result);
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x2DCA3D4", Offset = "0x2DCA3D4", VA = "0x2DCA3D4")]
		[Command]
		private void EnableInput(Args<bool> args)
		{
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x2DCA420", Offset = "0x2DCA420", VA = "0x2DCA420")]
		[Command]
		private void EnableActivate(Args<bool> args)
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x2DCA46C", Offset = "0x2DCA46C", VA = "0x2DCA46C")]
		[Command]
		private Result GetActivate()
		{
			return default(Result);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x2DCA520", Offset = "0x2DCA520", VA = "0x2DCA520")]
		[Command]
		private void SetActivate(Args<bool, bool> args)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x2DCA588", Offset = "0x2DCA588", VA = "0x2DCA588")]
		[Command]
		private void HandleMenuClickEvent(Args<Action, bool> args)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x2DCA5EC", Offset = "0x2DCA5EC", VA = "0x2DCA5EC")]
		[Command]
		private void CalibrationTracking()
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x2DCA6A8", Offset = "0x2DCA6A8", VA = "0x2DCA6A8")]
		[Command]
		private void EnableTracking(Args<bool> args)
		{
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x2DCA790", Offset = "0x2DCA790", VA = "0x2DCA790")]
		[Command]
		private void OnLogOut()
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x2DC92F8", Offset = "0x2DC92F8", VA = "0x2DC92F8")]
		[Command]
		private void RegisterEvents()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x2DC9A30", Offset = "0x2DC9A30", VA = "0x2DC9A30")]
		[Command]
		private void UnregisterEvents()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x2DCA7BC", Offset = "0x2DCA7BC", VA = "0x2DCA7BC")]
		[Command]
		private void StartHandSpace()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x2DCA8E8", Offset = "0x2DCA8E8", VA = "0x2DCA8E8")]
		[Command]
		private void ClickMenu(Args<int> args)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x2DCAFAC", Offset = "0x2DCAFAC", VA = "0x2DCAFAC")]
		private void OnSelfLocationUpdate(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x2DCAFB0", Offset = "0x2DCAFB0", VA = "0x2DCAFB0")]
		private void OnUpdateCamera()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x2DCAD38", Offset = "0x2DCAD38", VA = "0x2DCAD38")]
		private void OpenMainWindow(int tab = 0)
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x2DCAE94", Offset = "0x2DCAE94", VA = "0x2DCAE94")]
		private void AvatarChange()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x2DCB0DC", Offset = "0x2DCB0DC", VA = "0x2DCB0DC")]
		private void OnAvatarChanged(bool needNext, bool clearContainer)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x2DCB2E0", Offset = "0x2DCB2E0", VA = "0x2DCB2E0")]
		private void OnMenuClick(InputAction.CallbackContext obj)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x2DCB368", Offset = "0x2DCB368", VA = "0x2DCB368")]
		private void OnAddExtraTask(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x2DCB374", Offset = "0x2DCB374", VA = "0x2DCB374")]
		private void OnRemoveExtraTask(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x2DCB37C", Offset = "0x2DCB37C", VA = "0x2DCB37C")]
		private void OnSceneBeginLoading(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x2DCB388", Offset = "0x2DCB388", VA = "0x2DCB388")]
		private void OnSceneFinishLoading(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x2DCB394", Offset = "0x2DCB394", VA = "0x2DCB394")]
		private void OnLoginSuccessful(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x2DCB3A0", Offset = "0x2DCB3A0", VA = "0x2DCB3A0")]
		private void OnBlockOperation(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x2DCB4A8", Offset = "0x2DCB4A8", VA = "0x2DCB4A8")]
		public VRSpaceAdapterSystem()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class GUideValueData
	{
		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iValue;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long lValue;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tValue;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool bValue;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double dValue;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x2DCB588", Offset = "0x2DCB588", VA = "0x2DCB588")]
		public GUideValueData()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class GuideData
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, GUideValueData> platform;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, GUideValueData> setting;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<string, GUideValueData> ugc;

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x2DCB590", Offset = "0x2DCB590", VA = "0x2DCB590")]
		public GuideData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027C")]
	public class UIMaterailPreviewShow
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Color;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Metallic;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Smoothnes;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MainTextIndex;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float EmissionEnable;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color EmissionColor;

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x2DCB598", Offset = "0x2DCB598", VA = "0x2DCB598")]
		public UIMaterailPreviewShow()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public class SoundData
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SoundValue> sounds;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string version;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string lastId;

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x2DCB5AC", Offset = "0x2DCB5AC", VA = "0x2DCB5AC")]
		public SoundData()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class SoundValue
	{
		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long id;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string author;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string album;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string previewUrl;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int status;

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x2DCB5B4", Offset = "0x2DCB5B4", VA = "0x2DCB5B4")]
		public SoundValue()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class WorldBuilderSystemDraft : SystemBase
	{
		[Token(Token = "0x2000280")]
		public class WBDraftReserved
		{
			[Token(Token = "0x4001003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 rotation;

			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x2DCB978", Offset = "0x2DCB978", VA = "0x2DCB978")]
			public WBDraftReserved()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000281")]
		[CompilerGenerated]
		private struct <UpdateDraft>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string, bool, int, string> args;

			[Token(Token = "0x4001007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0x2DCB980", Offset = "0x2DCB980", VA = "0x2DCB980", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0x2DCC098", Offset = "0x2DCC098", VA = "0x2DCC098", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000282")]
		[CompilerGenerated]
		private struct <SaveDraft>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400100B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string, string, string> args;

			[Token(Token = "0x400100C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public WorldBuilderSystemDraft <>4__this;

			[Token(Token = "0x400100D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x400100E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private Dictionary<string, BuilderObject> <builderObjectData>5__3;

			[Token(Token = "0x400100F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private string <url>5__4;

			[Token(Token = "0x4001010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private int <cap>5__5;

			[Token(Token = "0x4001011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private List<long> <assetIdList>5__6;

			[Token(Token = "0x4001012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private string <ugcLink>5__7;

			[Token(Token = "0x4001013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			private UniTask<ResultWithObject>.Awaiter <>u__3;

			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0x2DCC0F0", Offset = "0x2DCC0F0", VA = "0x2DCC0F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001000")]
			[Address(RVA = "0x2DCE0A4", Offset = "0x2DCE0A4", VA = "0x2DCE0A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string currentSelectId;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int saveAllCount;

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x2DCB5BC", Offset = "0x2DCB5BC", VA = "0x2DCB5BC", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x2DCB5C0", Offset = "0x2DCB5C0", VA = "0x2DCB5C0", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x2DCB5C4", Offset = "0x2DCB5C4", VA = "0x2DCB5C4", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x2DCB5C8", Offset = "0x2DCB5C8", VA = "0x2DCB5C8")]
		public void InitEnvironment()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x2DCB720", Offset = "0x2DCB720", VA = "0x2DCB720")]
		[AsyncStateMachine(typeof(<UpdateDraft>d__7))]
		public UniTask<Result> UpdateDraft(Args<string, string, bool, int, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x2DCB838", Offset = "0x2DCB838", VA = "0x2DCB838")]
		[Command]
		[AsyncStateMachine(typeof(<SaveDraft>d__8))]
		public UniTask<Result> SaveDraft(Args<string, string, string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x2DCB96C", Offset = "0x2DCB96C", VA = "0x2DCB96C")]
		public void ExitEnvironment()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x2DCB970", Offset = "0x2DCB970", VA = "0x2DCB970")]
		public WorldBuilderSystemDraft()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class WorldBuilderSystemItemRelease : SystemBase
	{
		[Token(Token = "0x2000284")]
		public class SaveDraftResult
		{
			[Token(Token = "0x400101E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x2DCF174", Offset = "0x2DCF174", VA = "0x2DCF174")]
			public SaveDraftResult()
			{
			}
		}

		[Token(Token = "0x2000285")]
		public class ReleasSttringData
		{
			[Token(Token = "0x400101F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float height;

			[Token(Token = "0x4001020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float width;

			[Token(Token = "0x4001021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float length;

			[Token(Token = "0x4001022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float capacity;

			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxUserVolumeProp;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int maxUserSingleGeometry;

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x2DCF17C", Offset = "0x2DCF17C", VA = "0x2DCF17C")]
			public ReleasSttringData()
			{
			}
		}

		[Token(Token = "0x2000286")]
		public class WBReleaseData
		{
			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool CheckState;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 maxSize;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 currentSize;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int maxCapacity;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int currentCapacity;

			[Token(Token = "0x400102A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int maxCapacityCount;

			[Token(Token = "0x400102B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<int> includeList;

			[Token(Token = "0x400102C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public int maxCount;

			[Token(Token = "0x400102D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int currentCount;

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x2DCF184", Offset = "0x2DCF184", VA = "0x2DCF184")]
			public WBReleaseData()
			{
			}
		}

		[Token(Token = "0x2000287")]
		public class ReleasData
		{
			[Token(Token = "0x400102E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool update;

			[Token(Token = "0x400102F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x4001030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string des;

			[Token(Token = "0x4001031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool autoAdd;

			[Token(Token = "0x4001032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int useOnly;

			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string id;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string thumbnailsurl;

			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 size;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float capacity;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string ugcLink;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public long auditAmdId;

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x2DCF26C", Offset = "0x2DCF26C", VA = "0x2DCF26C")]
			public ReleasData()
			{
			}
		}

		[Token(Token = "0x2000288")]
		public class ToLibExtra
		{
			[Token(Token = "0x4001039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sizeX;

			[Token(Token = "0x400103A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string sizeY;

			[Token(Token = "0x400103B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sizeZ;

			[Token(Token = "0x400103C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public byte grabMode;

			[Token(Token = "0x400103D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int authority;

			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string thumbnailRotationX;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string thumbnailRotationY;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string thumbnailRotationZ;

			[Token(Token = "0x4001041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public long category;

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x2DCF2D4", Offset = "0x2DCF2D4", VA = "0x2DCF2D4")]
			public ToLibExtra()
			{
			}
		}

		[Token(Token = "0x2000289")]
		public class ToMaterial
		{
			[Token(Token = "0x4001042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int authority;

			[Token(Token = "0x4001043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string thumbnailRotationX;

			[Token(Token = "0x4001044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string thumbnailRotationY;

			[Token(Token = "0x4001045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string thumbnailRotationZ;

			[Token(Token = "0x4001046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public long category;

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x2DCF2DC", Offset = "0x2DCF2DC", VA = "0x2DCF2DC")]
			public ToMaterial()
			{
			}
		}

		[Token(Token = "0x200028A")]
		public class AuthorityData
		{
			[Token(Token = "0x4001047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long id;

			[Token(Token = "0x4001048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int authority;

			[Token(Token = "0x4001049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetAuthor;

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x2DCF2E4", Offset = "0x2DCF2E4", VA = "0x2DCF2E4")]
			public AuthorityData()
			{
			}
		}

		[Token(Token = "0x200028B")]
		public class OnlyUseData
		{
			[Token(Token = "0x400104A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool onlyUseState;

			[Token(Token = "0x400104B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AuthorityData[] code;

			[Token(Token = "0x400104C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<long> onlyUseList;

			[Token(Token = "0x400104D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<long> allHaveOnluUse;

			[Token(Token = "0x600101D")]
			[Address(RVA = "0x2DCF2EC", Offset = "0x2DCF2EC", VA = "0x2DCF2EC")]
			public OnlyUseData()
			{
			}
		}

		[Token(Token = "0x200028C")]
		public class ReleaseResult
		{
			[Token(Token = "0x400104E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public object obj;

			[Token(Token = "0x400104F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int capacity;

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x2DCF3A4", Offset = "0x2DCF3A4", VA = "0x2DCF3A4")]
			public ReleaseResult()
			{
			}
		}

		[Token(Token = "0x200028D")]
		public class PushItemText
		{
			[Token(Token = "0x4001050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int Id;

			[Token(Token = "0x4001051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Content;

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x2DCF3AC", Offset = "0x2DCF3AC", VA = "0x2DCF3AC")]
			public PushItemText()
			{
			}
		}

		[Token(Token = "0x200028E")]
		public class PushResult
		{
			[Token(Token = "0x4001052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x2DCF3B4", Offset = "0x2DCF3B4", VA = "0x2DCF3B4")]
			public PushResult()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200028F")]
		[CompilerGenerated]
		private struct <CheckOnlyUse>d__19 : IAsyncStateMachine
		{
			[Token(Token = "0x4001053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private OnlyUseData <onlyUseData>5__3;

			[Token(Token = "0x4001057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UserData <userData>5__4;

			[Token(Token = "0x4001058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6001021")]
			[Address(RVA = "0x2DCF3BC", Offset = "0x2DCF3BC", VA = "0x2DCF3BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001022")]
			[Address(RVA = "0x2DD0288", Offset = "0x2DD0288", VA = "0x2DD0288", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000290")]
		[CompilerGenerated]
		private struct <CheckCanPushMaterial>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x4001059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400105A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x6001023")]
			[Address(RVA = "0x2DD02E0", Offset = "0x2DD02E0", VA = "0x2DD02E0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001024")]
			[Address(RVA = "0x2DD0B24", Offset = "0x2DD0B24", VA = "0x2DD0B24", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000291")]
		[CompilerGenerated]
		private struct <CheckCanRelease>d__21 : IAsyncStateMachine
		{
			[Token(Token = "0x400105B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400105C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400105D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemItemRelease <>4__this;

			[Token(Token = "0x6001025")]
			[Address(RVA = "0x2DD0B7C", Offset = "0x2DD0B7C", VA = "0x2DD0B7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001026")]
			[Address(RVA = "0x2DD1B18", Offset = "0x2DD1B18", VA = "0x2DD1B18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000292")]
		[CompilerGenerated]
		private struct <CheckNeedAddHold>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x400105E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400105F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x2DD1B70", Offset = "0x2DD1B70", VA = "0x2DD1B70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x2DD2058", Offset = "0x2DD2058", VA = "0x2DD2058", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000293")]
		[CompilerGenerated]
		private struct <AutoAddHold>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4001060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x2DD20B0", Offset = "0x2DD20B0", VA = "0x2DD20B0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x2DD264C", Offset = "0x2DD264C", VA = "0x2DD264C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000294")]
		[CompilerGenerated]
		private struct <GetReleaseSetting>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WorldBuilderSystemItemRelease <>4__this;

			[Token(Token = "0x4001065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x2DD2658", Offset = "0x2DD2658", VA = "0x2DD2658", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600102C")]
			[Address(RVA = "0x2DD2BF8", Offset = "0x2DD2BF8", VA = "0x2DD2BF8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000295")]
		[CompilerGenerated]
		private struct <ReleasToMaterial>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4001066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<ReleasData> args;

			[Token(Token = "0x4001069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public WorldBuilderSystemItemRelease <>4__this;

			[Token(Token = "0x400106A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private int <permission>5__2;

			[Token(Token = "0x400106B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private ResultWithObject <result>5__3;

			[Token(Token = "0x400106C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private WorldBuilderSystemOperationItem <worldBuilderSystemOperationItem>5__4;

			[Token(Token = "0x400106D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private List<PushItemText> <pushItemTexts>5__5;

			[Token(Token = "0x400106E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private long <assetCategory>5__6;

			[Token(Token = "0x400106F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private ResultWithObject <saveResult>5__7;

			[Token(Token = "0x4001070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private ReleaseResult <releaseResult>5__8;

			[Token(Token = "0x4001071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private string <urlPath>5__9;

			[Token(Token = "0x4001072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private string <jsonPathList>5__10;

			[Token(Token = "0x4001073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private List<string> <uploadPathResult>5__11;

			[Token(Token = "0x4001074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private string <ugcLink>5__12;

			[Token(Token = "0x4001075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4001076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x4001077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private List<string> <urlPathList2>5__13;

			[Token(Token = "0x4001078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			private UniTask<ResultWithObject>.Awaiter <>u__3;

			[Token(Token = "0x600102D")]
			[Address(RVA = "0x2DD2C04", Offset = "0x2DD2C04", VA = "0x2DD2C04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600102E")]
			[Address(RVA = "0x2DD63A4", Offset = "0x2DD63A4", VA = "0x2DD63A4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000296")]
		[CompilerGenerated]
		private struct <ReleasToLib>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400107A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400107B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<ReleasData> args;

			[Token(Token = "0x400107C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public WorldBuilderSystemItemRelease <>4__this;

			[Token(Token = "0x400107D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private int <permission>5__2;

			[Token(Token = "0x400107E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private List<PushItemText> <pushItemTexts>5__3;

			[Token(Token = "0x400107F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <result>5__4;

			[Token(Token = "0x4001080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private WorldBuilderSystemOperationItem <worldBuilderSystemOperationItem>5__5;

			[Token(Token = "0x4001081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private long <assetCategory>5__6;

			[Token(Token = "0x4001082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private ResultWithObject <saveResult>5__7;

			[Token(Token = "0x4001083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private ReleaseResult <releaseResult>5__8;

			[Token(Token = "0x4001084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private string <urlPath>5__9;

			[Token(Token = "0x4001085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private string <jsonPathList>5__10;

			[Token(Token = "0x4001086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private List<string> <uploadPathResult>5__11;

			[Token(Token = "0x4001087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4001088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x4001089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			private List<string> <urlPathList2>5__12;

			[Token(Token = "0x400108A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			private UniTask<ResultWithObject>.Awaiter <>u__3;

			[Token(Token = "0x600102F")]
			[Address(RVA = "0x21F0278", Offset = "0x21F0278", VA = "0x21F0278", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001030")]
			[Address(RVA = "0x21F3B38", Offset = "0x21F3B38", VA = "0x21F3B38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000297")]
		[CompilerGenerated]
		private struct <GetSelectItemCap>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x400108B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400108C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x6001031")]
			[Address(RVA = "0x21F3B90", Offset = "0x21F3B90", VA = "0x21F3B90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001032")]
			[Address(RVA = "0x21F3FA0", Offset = "0x21F3FA0", VA = "0x21F3FA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000298")]
		[CompilerGenerated]
		private struct <UploadData>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x400108D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400108E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400108F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public List<string> list;

			[Token(Token = "0x4001090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<List<string>>.Awaiter <>u__1;

			[Token(Token = "0x6001033")]
			[Address(RVA = "0x21F3FF8", Offset = "0x21F3FF8", VA = "0x21F3FF8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001034")]
			[Address(RVA = "0x21F45A8", Offset = "0x21F45A8", VA = "0x21F45A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000299")]
		[CompilerGenerated]
		private struct <CancelSystemItem>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4001092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4001095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<List<string>>.Awaiter <>u__1;

			[Token(Token = "0x4001097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private UniTask<ResultWithObject>.Awaiter <>u__2;

			[Token(Token = "0x6001035")]
			[Address(RVA = "0x21F4600", Offset = "0x21F4600", VA = "0x21F4600", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x21F5654", Offset = "0x21F5654", VA = "0x21F5654", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int capacaityCount;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double clamCapacity;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double maxCapacity;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 maxSize;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool init;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float maxCap;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int maxCapacityCount;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int maxphysics;

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x2DCDFB8", Offset = "0x2DCDFB8", VA = "0x2DCDFB8")]
		[Command]
		[AsyncStateMachine(typeof(<CheckOnlyUse>d__19))]
		public UniTask<Result> CheckOnlyUse()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x2DCE0FC", Offset = "0x2DCE0FC", VA = "0x2DCE0FC")]
		[AsyncStateMachine(typeof(<CheckCanPushMaterial>d__20))]
		[Command]
		private UniTask<Result> CheckCanPushMaterial()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x2DCE1DC", Offset = "0x2DCE1DC", VA = "0x2DCE1DC")]
		[AsyncStateMachine(typeof(<CheckCanRelease>d__21))]
		[Command]
		private UniTask<Result> CheckCanRelease()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x2DCE2E4", Offset = "0x2DCE2E4", VA = "0x2DCE2E4")]
		[Command]
		private Result CheckCanAvatarRelease()
		{
			return default(Result);
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x2DCE64C", Offset = "0x2DCE64C", VA = "0x2DCE64C")]
		public Bounds GetAllBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0x2DCE6CC", Offset = "0x2DCE6CC", VA = "0x2DCE6CC")]
		public void InitEnvironment()
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x2DCE7AC", Offset = "0x2DCE7AC", VA = "0x2DCE7AC")]
		[Command]
		[AsyncStateMachine(typeof(<CheckNeedAddHold>d__25))]
		private UniTask<Result> CheckNeedAddHold()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x2DCE88C", Offset = "0x2DCE88C", VA = "0x2DCE88C")]
		[Command]
		[AsyncStateMachine(typeof(<AutoAddHold>d__26))]
		private void AutoAddHold()
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x2DCE918", Offset = "0x2DCE918", VA = "0x2DCE918")]
		private byte GetGrabMode()
		{
			return default(byte);
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x2DCE6F0", Offset = "0x2DCE6F0", VA = "0x2DCE6F0")]
		[AsyncStateMachine(typeof(<GetReleaseSetting>d__28))]
		private void GetReleaseSetting()
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x2DCEB78", Offset = "0x2DCEB78", VA = "0x2DCEB78")]
		[AsyncStateMachine(typeof(<ReleasToMaterial>d__29))]
		[Command]
		private UniTask<Result> ReleasToMaterial(Args<ReleasData> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x2DCECA0", Offset = "0x2DCECA0", VA = "0x2DCECA0")]
		[AsyncStateMachine(typeof(<ReleasToLib>d__30))]
		[Command]
		private UniTask<Result> ReleasToLib(Args<ReleasData> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x2DCEDE4", Offset = "0x2DCEDE4", VA = "0x2DCEDE4")]
		[Command]
		[AsyncStateMachine(typeof(<GetSelectItemCap>d__31))]
		public UniTask<Result> GetSelectItemCap()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x2DCEEE0", Offset = "0x2DCEEE0", VA = "0x2DCEEE0")]
		[AsyncStateMachine(typeof(<UploadData>d__32))]
		private UniTask<Result> UploadData(List<string> list)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x2DCF004", Offset = "0x2DCF004", VA = "0x2DCF004")]
		[Command]
		[AsyncStateMachine(typeof(<CancelSystemItem>d__33))]
		public UniTask<Result> CancelSystemItem(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x2DCF120", Offset = "0x2DCF120", VA = "0x2DCF120")]
		public void ExitEnvironment()
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x2DCF124", Offset = "0x2DCF124", VA = "0x2DCF124")]
		public int CheckCanOnlyUse(int permission)
		{
			return default(int);
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x2DCF12C", Offset = "0x2DCF12C", VA = "0x2DCF12C", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x2DCF130", Offset = "0x2DCF130", VA = "0x2DCF130", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x2DCF134", Offset = "0x2DCF134", VA = "0x2DCF134", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x2DCF138", Offset = "0x2DCF138", VA = "0x2DCF138")]
		public WorldBuilderSystemItemRelease()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class WorldBuilderSystemOperationItem : SystemBase
	{
		[Token(Token = "0x200029B")]
		public class WorldBuilderItemCreatorData
		{
			[Token(Token = "0x40010AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long id;

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x21F8610", Offset = "0x21F8610", VA = "0x21F8610")]
			public WorldBuilderItemCreatorData()
			{
			}
		}

		[Token(Token = "0x200029C")]
		public class WorldBuilderItemUIShowData
		{
			[Token(Token = "0x40010AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long id;

			[Token(Token = "0x40010AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string displayName;

			[Token(Token = "0x40010AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string assetName;

			[Token(Token = "0x40010B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string bodyType;

			[Token(Token = "0x40010B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int renderingStyle;

			[Token(Token = "0x40010B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string thumbnail;

			[Token(Token = "0x40010B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string assetAuthor;

			[Token(Token = "0x40010B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int rarity;

			[Token(Token = "0x40010B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int loadingType;

			[Token(Token = "0x40010B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string weight;

			[Token(Token = "0x40010B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public bool isDefault;

			[Token(Token = "0x40010B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string description;

			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string extra;

			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool inAudit;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
			public bool inPropsPackage;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public int sign;

			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public int usedCount;

			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public WorldBuilderItemCreatorData creator;

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x21F8618", Offset = "0x21F8618", VA = "0x21F8618")]
			public WorldBuilderItemUIShowData()
			{
			}
		}

		[Token(Token = "0x200029D")]
		private class WorldBuilderItemUIShowDataList
		{
			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WorldBuilderItemUIShowData[] materials;

			[Token(Token = "0x600105B")]
			[Address(RVA = "0x21F8620", Offset = "0x21F8620", VA = "0x21F8620")]
			public WorldBuilderItemUIShowDataList()
			{
			}
		}

		[Token(Token = "0x200029E")]
		public class DirectionChange
		{
			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool directionChange;

			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 currentDirection;

			[Token(Token = "0x600105C")]
			[Address(RVA = "0x21F8628", Offset = "0x21F8628", VA = "0x21F8628")]
			public DirectionChange()
			{
			}
		}

		[Token(Token = "0x200029F")]
		private class ItemRotation
		{
			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float x;

			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float y;

			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float z;

			[Token(Token = "0x600105D")]
			[Address(RVA = "0x21F8688", Offset = "0x21F8688", VA = "0x21F8688")]
			public Vector3 ToVector3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600105E")]
			[Address(RVA = "0x21F8694", Offset = "0x21F8694", VA = "0x21F8694")]
			public ItemRotation()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A0")]
		[CompilerGenerated]
		private struct <GetUIShowItemInfo>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<List<long>> args;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private Dictionary<long, WorldBuilderItemUIShowData> <resultData>5__3;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x600105F")]
			[Address(RVA = "0x21F869C", Offset = "0x21F869C", VA = "0x21F869C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001060")]
			[Address(RVA = "0x21F92E8", Offset = "0x21F92E8", VA = "0x21F92E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A1")]
		[CompilerGenerated]
		private struct <LockStartItemFromData>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<string, OrderedDictionary<string, BuilderObjectData>, ItemRotation> args;

			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private List<string> <tempList>5__3;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private List<BuilderComponentReward> <rewardComps>5__4;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private float <startTime>5__5;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private float <elapsed>5__6;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private int <i>5__7;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001061")]
			[Address(RVA = "0x21F9340", Offset = "0x21F9340", VA = "0x21F9340", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x21FA860", Offset = "0x21FA860", VA = "0x21FA860", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A2")]
		[CompilerGenerated]
		private struct <LockStartItem>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, bool, List<string>> args;

			[Token(Token = "0x40010DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x40010DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private List<string> <tempList>5__3;

			[Token(Token = "0x40010DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private List<BuilderComponentReward> <rewardComps>5__4;

			[Token(Token = "0x40010DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private float <startTime>5__5;

			[Token(Token = "0x40010DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
			private float <elapsed>5__6;

			[Token(Token = "0x40010E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private int <i>5__7;

			[Token(Token = "0x40010E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001063")]
			[Address(RVA = "0x21FA8B8", Offset = "0x21FA8B8", VA = "0x21FA8B8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001064")]
			[Address(RVA = "0x21FBDA8", Offset = "0x21FBDA8", VA = "0x21FBDA8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A3")]
		[CompilerGenerated]
		private struct <LockAvatar>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x40010E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<List<BuilderObjectData>, List<CapturePlaceholder>> args;

			[Token(Token = "0x40010E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x40010E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private List<string> <tempList>5__3;

			[Token(Token = "0x40010E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private List<BuilderComponentNormalAsset>.Enumerator <>7__wrap3;

			[Token(Token = "0x40010E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x21FBE00", Offset = "0x21FBE00", VA = "0x21FBE00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001066")]
			[Address(RVA = "0x21FD124", Offset = "0x21FD124", VA = "0x21FD124", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A4")]
		[CompilerGenerated]
		private struct <GetCurrentTexture>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x40010EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x6001067")]
			[Address(RVA = "0x21FD17C", Offset = "0x21FD17C", VA = "0x21FD17C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001068")]
			[Address(RVA = "0x21FD3C8", Offset = "0x21FD3C8", VA = "0x21FD3C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A5")]
		[CompilerGenerated]
		private struct <SaveTexture>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x40010ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6001069")]
			[Address(RVA = "0x21FD420", Offset = "0x21FD420", VA = "0x21FD420", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600106A")]
			[Address(RVA = "0x21FD828", Offset = "0x21FD828", VA = "0x21FD828", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A6")]
		[CompilerGenerated]
		private struct <GetAllAngleTexture>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x600106B")]
			[Address(RVA = "0x21FD880", Offset = "0x21FD880", VA = "0x21FD880", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0x21FDD84", Offset = "0x21FDD84", VA = "0x21FDD84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A7")]
		[CompilerGenerated]
		private struct <GetAllAngleTextureWithPrefix>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x40010F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x40010F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<string> args;

			[Token(Token = "0x40010F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<string[]>.Awaiter <>u__1;

			[Token(Token = "0x600106D")]
			[Address(RVA = "0x21FDDDC", Offset = "0x21FDDDC", VA = "0x21FDDDC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600106E")]
			[Address(RVA = "0x21FE2B4", Offset = "0x21FE2B4", VA = "0x21FE2B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A8")]
		[CompilerGenerated]
		private struct <CheckRotationChange>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x40010FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x600106F")]
			[Address(RVA = "0x21FE30C", Offset = "0x21FE30C", VA = "0x21FE30C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001070")]
			[Address(RVA = "0x21FE6D0", Offset = "0x21FE6D0", VA = "0x21FE6D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002A9")]
		[CompilerGenerated]
		private struct <UploadChangeTexture>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x40010FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40010FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40010FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x4001100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <urlPath>5__3;

			[Token(Token = "0x4001102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x4001103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			private UniTask<List<string>>.Awaiter <>u__2;

			[Token(Token = "0x6001071")]
			[Address(RVA = "0x21FE728", Offset = "0x21FE728", VA = "0x21FE728", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x21FF154", Offset = "0x21FF154", VA = "0x21FF154", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002AA")]
		[CompilerGenerated]
		private struct <GetSelectItemCount>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemOperationItem <>4__this;

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x21FF1AC", Offset = "0x21FF1AC", VA = "0x21FF1AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x21FF61C", Offset = "0x21FF61C", VA = "0x21FF61C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002AB")]
		[CompilerGenerated]
		private struct <GetSelectOriginalItemCount>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x4001107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x6001075")]
			[Address(RVA = "0x21FF674", Offset = "0x21FF674", VA = "0x21FF674", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x21FFBE0", Offset = "0x21FFBE0", VA = "0x21FFBE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 currentRotation;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 currentPostion;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 currentScale;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OrderedDictionary<long, WorldBuilderItemUIShowData> _item_map;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<string> currentSelectGuildList;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool copyFromEntity;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject objectRoot;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Dictionary<string, BuilderObject> currentCopyBuilderObjects;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public DirectionChange directionChange;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Dictionary<string, string> old_new_id_map;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string currentSelectGuid;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool onPush;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Bounds currentBounds;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public int currentPushState;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private WorldBuilderCaptureGameObject _captureSystem;

		[Token(Token = "0x40010A7")]
		private const float c_MaxDownloadRewardComponentTime = 40000f;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public readonly FormatOptions JsonFormatOptions;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _updateFramCount;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int _currentUpdateFram;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool _onUpdateCheck;

		[Token(Token = "0x170000F0")]
		private RenderTexture _texture
		{
			[Token(Token = "0x6001037")]
			[Address(RVA = "0x21F56AC", Offset = "0x21F56AC", VA = "0x21F56AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F1")]
		public WorldBuilderCaptureGameObject GetCaptureSystem
		{
			[Token(Token = "0x6001038")]
			[Address(RVA = "0x21F56C8", Offset = "0x21F56C8", VA = "0x21F56C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x21F56D0", Offset = "0x21F56D0", VA = "0x21F56D0")]
		public void InitEnvironment()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x21F58A0", Offset = "0x21F58A0", VA = "0x21F58A0")]
		public void ExitEnvironment()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x21F5EF8", Offset = "0x21F5EF8", VA = "0x21F5EF8")]
		private void TriggerButtonDown(bool onUI)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x21F6078", Offset = "0x21F6078", VA = "0x21F6078")]
		[AsyncStateMachine(typeof(<GetUIShowItemInfo>d__28))]
		[Command]
		public UniTask<Result> GetUIShowItemInfo(Args<List<long>> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x21F61A0", Offset = "0x21F61A0", VA = "0x21F61A0")]
		[Command]
		[AsyncStateMachine(typeof(<LockStartItemFromData>d__29))]
		private UniTask<Result> LockStartItemFromData(Args<string, OrderedDictionary<string, BuilderObjectData>, ItemRotation> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x21F62C8", Offset = "0x21F62C8", VA = "0x21F62C8")]
		[AsyncStateMachine(typeof(<LockStartItem>d__30))]
		[Command]
		private UniTask<Result> LockStartItem(Args<string, bool, List<string>> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x21F63F4", Offset = "0x21F63F4", VA = "0x21F63F4")]
		[Command]
		private Result CanItemRelease()
		{
			return default(Result);
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x21F65EC", Offset = "0x21F65EC", VA = "0x21F65EC")]
		[Command]
		[AsyncStateMachine(typeof(<LockAvatar>d__32))]
		private UniTask<Result> LockAvatar(Args<List<BuilderObjectData>, List<CapturePlaceholder>> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x21F671C", Offset = "0x21F671C", VA = "0x21F671C")]
		[Command]
		private Result GetAvatarAssetCategory()
		{
			return default(Result);
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x21F68CC", Offset = "0x21F68CC", VA = "0x21F68CC")]
		private BuilderObject CreateObjectFromBuilderObjectData(BuilderObjectData data)
		{
			return null;
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x21F6DA8", Offset = "0x21F6DA8", VA = "0x21F6DA8")]
		private BuilderObject CreateObjectFromGuild(string guid)
		{
			return null;
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x21F72E4", Offset = "0x21F72E4", VA = "0x21F72E4")]
		[Command]
		[AsyncStateMachine(typeof(<GetCurrentTexture>d__36))]
		private UniTask<Result> GetCurrentTexture()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x21F36C0", Offset = "0x21F36C0", VA = "0x21F36C0")]
		[Command]
		[AsyncStateMachine(typeof(<SaveTexture>d__37))]
		public UniTask<Result> SaveTexture()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x21F37C8", Offset = "0x21F37C8", VA = "0x21F37C8")]
		[Command]
		[AsyncStateMachine(typeof(<GetAllAngleTexture>d__38))]
		public UniTask<Result> GetAllAngleTexture()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x21F73EC", Offset = "0x21F73EC", VA = "0x21F73EC")]
		[Command]
		[AsyncStateMachine(typeof(<GetAllAngleTextureWithPrefix>d__39))]
		public UniTask<Result> GetAllAngleTextureWithPrefix(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x21F7514", Offset = "0x21F7514", VA = "0x21F7514")]
		[AsyncStateMachine(typeof(<CheckRotationChange>d__40))]
		[Command]
		public UniTask<Result> CheckRotationChange()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x21F761C", Offset = "0x21F761C", VA = "0x21F761C")]
		[AsyncStateMachine(typeof(<UploadChangeTexture>d__41))]
		[Command]
		public UniTask<Result> UploadChangeTexture()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x21F59D8", Offset = "0x21F59D8", VA = "0x21F59D8")]
		[Command]
		private void ReleaseItem()
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x21F7724", Offset = "0x21F7724", VA = "0x21F7724")]
		[Command]
		private void SetRenderTarget(Args<RawImage, bool, bool> args)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x21F7824", Offset = "0x21F7824", VA = "0x21F7824")]
		[Command]
		private void ResetRotation()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x21F78DC", Offset = "0x21F78DC", VA = "0x21F78DC")]
		[Command]
		private void ResetRenderTarget(Args<RawImage> args)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x21F38D0", Offset = "0x21F38D0", VA = "0x21F38D0")]
		public string GetSelectionAsJson()
		{
			return null;
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x21F792C", Offset = "0x21F792C", VA = "0x21F792C")]
		public string GetTimeStamp()
		{
			return null;
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x21F7A24", Offset = "0x21F7A24", VA = "0x21F7A24")]
		[AsyncStateMachine(typeof(<GetSelectItemCount>d__49))]
		[Command]
		public UniTask<Result> GetSelectItemCount()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x21F7B2C", Offset = "0x21F7B2C", VA = "0x21F7B2C")]
		[AsyncStateMachine(typeof(<GetSelectOriginalItemCount>d__50))]
		[Command]
		public UniTask<Result> GetSelectOriginalItemCount()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x21F7C0C", Offset = "0x21F7C0C", VA = "0x21F7C0C")]
		public Bounds GetAllBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x21F7EB0", Offset = "0x21F7EB0", VA = "0x21F7EB0")]
		[Command]
		public void SetPushLinkState(Args<int> args)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x21F7EF0", Offset = "0x21F7EF0", VA = "0x21F7EF0", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x21F7EF4", Offset = "0x21F7EF4", VA = "0x21F7EF4")]
		[Command]
		public Result GetReferenceList()
		{
			return default(Result);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x21F83C8", Offset = "0x21F83C8", VA = "0x21F83C8", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x21F83CC", Offset = "0x21F83CC", VA = "0x21F83CC", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x21F83D0", Offset = "0x21F83D0", VA = "0x21F83D0")]
		public WorldBuilderSystemOperationItem()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class WorldBuilderSystemProps : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002AD")]
		[CompilerGenerated]
		private struct <SetAttributeBaseData>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemProps <>4__this;

			[Token(Token = "0x4001116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<WorldBuilderPropsAttributeBase.AttributeBaseTransformData, int> args;

			[Token(Token = "0x6001094")]
			[Address(RVA = "0x22037E4", Offset = "0x22037E4", VA = "0x22037E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001095")]
			[Address(RVA = "0x2203A8C", Offset = "0x2203A8C", VA = "0x2203A8C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002AE")]
		[CompilerGenerated]
		private struct <SetSkyBoxData>d__29 : IAsyncStateMachine
		{
			[Token(Token = "0x4001117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemProps <>4__this;

			[Token(Token = "0x400111A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<WorldBuilderPropsSkyBox.UIWBSkyBoxData, string, bool> args;

			[Token(Token = "0x6001096")]
			[Address(RVA = "0x2203AE4", Offset = "0x2203AE4", VA = "0x2203AE4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001097")]
			[Address(RVA = "0x2203D98", Offset = "0x2203D98", VA = "0x2203D98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002AF")]
		[CompilerGenerated]
		private struct <GetBuilderComponentDatas>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x400111B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400111C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400111D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> type;

			[Token(Token = "0x6001098")]
			[Address(RVA = "0x2203DF0", Offset = "0x2203DF0", VA = "0x2203DF0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001099")]
			[Address(RVA = "0x22040E8", Offset = "0x22040E8", VA = "0x22040E8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B0")]
		[CompilerGenerated]
		private struct <GetAllTextcount>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x400111E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400111F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x600109A")]
			[Address(RVA = "0x2204140", Offset = "0x2204140", VA = "0x2204140", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600109B")]
			[Address(RVA = "0x2204610", Offset = "0x2204610", VA = "0x2204610", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B1")]
		[CompilerGenerated]
		private struct <CapacityChange>d__35 : IAsyncStateMachine
		{
			[Token(Token = "0x4001120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Args<float, int> args;

			[Token(Token = "0x4001123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600109C")]
			[Address(RVA = "0x2204668", Offset = "0x2204668", VA = "0x2204668", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600109D")]
			[Address(RVA = "0x2204A20", Offset = "0x2204A20", VA = "0x2204A20", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Type, WorldBuilderPropsBase> _currentProps_Map;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int instanceId;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool showState;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform inputFollowTransform;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<string> selectedObjIds;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string selectedObjId;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string currentObjType;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private string currentState;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private UIWBAttributeData _attributeData;

		[Token(Token = "0x170000F2")]
		public override bool StartEnable
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0x21FFC38", Offset = "0x21FFC38", VA = "0x21FFC38", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x21FFC40", Offset = "0x21FFC40", VA = "0x21FFC40", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x21FFC44", Offset = "0x21FFC44", VA = "0x21FFC44")]
		public void OnUIStateChanged(string newstate)
		{
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x21FFD5C", Offset = "0x21FFD5C", VA = "0x21FFD5C")]
		public void OnObjectRemoved(string objId)
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x2200128", Offset = "0x2200128", VA = "0x2200128")]
		public void OnObjectDeselected(string objId, string objType)
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x2200338", Offset = "0x2200338", VA = "0x2200338")]
		public void OnDeselectedAll()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x220047C", Offset = "0x220047C", VA = "0x220047C")]
		public void OnObjectShouldShowProperties(string objId, string objType)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x2200480", Offset = "0x2200480", VA = "0x2200480")]
		public void OnObjectSelected(string objId, string objType)
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x2201624", Offset = "0x2201624", VA = "0x2201624", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x2201928", Offset = "0x2201928", VA = "0x2201928")]
		public void OnDestoryWorldBuilder()
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0x2201A44", Offset = "0x2201A44", VA = "0x2201A44")]
		public void InitEnvironment()
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x2201F28", Offset = "0x2201F28", VA = "0x2201F28")]
		private void OnBeginLoadMainScene(string eventid, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x2201F2C", Offset = "0x2201F2C", VA = "0x2201F2C")]
		public void ExitGroupEditorAll()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x2202050", Offset = "0x2202050", VA = "0x2202050")]
		public void ExitEnvironment()
		{
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x22025E0", Offset = "0x22025E0", VA = "0x22025E0", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001086")]
		private WorldBuilderPropsBase GetPropsData<T>()
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x22025E4", Offset = "0x22025E4", VA = "0x22025E4")]
		private WorldBuilderPropsBase GetPropsData(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x2202654", Offset = "0x2202654", VA = "0x2202654")]
		[Command]
		[AsyncStateMachine(typeof(<SetAttributeBaseData>d__28))]
		private UniTask<Result> SetAttributeBaseData(Args<WorldBuilderPropsAttributeBase.AttributeBaseTransformData, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x2202784", Offset = "0x2202784", VA = "0x2202784")]
		[AsyncStateMachine(typeof(<SetSkyBoxData>d__29))]
		[Command]
		private UniTask<Result> SetSkyBoxData(Args<WorldBuilderPropsSkyBox.UIWBSkyBoxData, string, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x22028B8", Offset = "0x22028B8", VA = "0x22028B8")]
		[Command]
		private Result GetObjElementNum(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x2202A40", Offset = "0x2202A40", VA = "0x2202A40")]
		[Command]
		private Result IsMultiSelections()
		{
			return default(Result);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x2202B50", Offset = "0x2202B50", VA = "0x2202B50")]
		[Command]
		[AsyncStateMachine(typeof(<GetBuilderComponentDatas>d__32))]
		private UniTask<Result> GetBuilderComponentDatas(Args<string> type)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x2202C64", Offset = "0x2202C64", VA = "0x2202C64")]
		[Command]
		private void SetAttributeCommon(Args<UIWBAttributeData, int, string, string> args)
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x2202F1C", Offset = "0x2202F1C", VA = "0x2202F1C")]
		[Command]
		[AsyncStateMachine(typeof(<GetAllTextcount>d__34))]
		private UniTask<Result> GetAllTextcount()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x2202FFC", Offset = "0x2202FFC", VA = "0x2202FFC")]
		[Command]
		[AsyncStateMachine(typeof(<CapacityChange>d__35))]
		private void CapacityChange(Args<float, int> args)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x22030AC", Offset = "0x22030AC", VA = "0x22030AC")]
		[Command]
		private Result QueryBuilderObjectState(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x2203414", Offset = "0x2203414", VA = "0x2203414")]
		private long GetRootPreset(BuilderObject bo)
		{
			return default(long);
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x22034A8", Offset = "0x22034A8", VA = "0x22034A8")]
		private void OnGroupEditorStateChanged(GroupEditorStateChangedData groupEditorStateChangedData)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x2203694", Offset = "0x2203694", VA = "0x2203694")]
		public WorldBuilderSystemProps()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class WorldBuilderSystemPropsAttribute : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B3")]
		[CompilerGenerated]
		private struct <SetAttributeBaseData>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x400112C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400112D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400112E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public WorldBuilderSystemPropsAttribute <>4__this;

			[Token(Token = "0x400112F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<WorldBuilderPropsAttributeBase.AttributeBaseTransformData, int> args;

			[Token(Token = "0x60010C1")]
			[Address(RVA = "0x220718C", Offset = "0x220718C", VA = "0x220718C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x2207434", Offset = "0x2207434", VA = "0x2207434", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B4")]
		[CompilerGenerated]
		private struct <GetBuilderComponentDatas>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> type;

			[Token(Token = "0x60010C3")]
			[Address(RVA = "0x220748C", Offset = "0x220748C", VA = "0x220748C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x2207784", Offset = "0x2207784", VA = "0x2207784", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B5")]
		[CompilerGenerated]
		private struct <GetAllTextcount>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4001133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x60010C5")]
			[Address(RVA = "0x22077DC", Offset = "0x22077DC", VA = "0x22077DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010C6")]
			[Address(RVA = "0x2207CAC", Offset = "0x2207CAC", VA = "0x2207CAC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B6")]
		[CompilerGenerated]
		private struct <CapacityChange>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4001135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Args<float, int> args;

			[Token(Token = "0x4001138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60010C7")]
			[Address(RVA = "0x2207D04", Offset = "0x2207D04", VA = "0x2207D04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010C8")]
			[Address(RVA = "0x2207F0C", Offset = "0x2207F0C", VA = "0x2207F0C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Type, WorldBuilderPropsBase> _currentProps_Map;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<string> selectedObjIds;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string selectedObjId;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string currentObjType;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string currentState;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GroupEditorStateChangedData _tempGroupData;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private UIWBAttributeData _attributeData;

		[Token(Token = "0x170000F3")]
		public override bool StartEnable
		{
			[Token(Token = "0x600109E")]
			[Address(RVA = "0x2204A2C", Offset = "0x2204A2C", VA = "0x2204A2C", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x2204A34", Offset = "0x2204A34", VA = "0x2204A34")]
		public void InitEnvironment()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x2204FC0", Offset = "0x2204FC0", VA = "0x2204FC0")]
		public void ExitEnvironment()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x2205700", Offset = "0x2205700", VA = "0x2205700")]
		private void OnBeginLoadMainScene(string eventid, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x22054B0", Offset = "0x22054B0", VA = "0x22054B0")]
		public void ExitGroupEditorAll()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x2205704", Offset = "0x2205704", VA = "0x2205704")]
		public void OnObjectRemoved(string objId)
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x22057A0", Offset = "0x22057A0", VA = "0x22057A0")]
		private void OnObjectShouldShowProperties(string objid, string objtype)
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x22057A4", Offset = "0x22057A4", VA = "0x22057A4")]
		private void OnDeselectedAll()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x220581C", Offset = "0x220581C", VA = "0x220581C")]
		private void OnUIStateChanged(string newstate)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x2205820", Offset = "0x2205820", VA = "0x2205820")]
		private void OnObjectSelected(string objId, string objType)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x2205B04", Offset = "0x2205B04", VA = "0x2205B04")]
		private void OnObjectDeselected(string objId, string objType)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x2205C0C", Offset = "0x2205C0C", VA = "0x2205C0C", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x22055D4", Offset = "0x22055D4", VA = "0x22055D4")]
		private void OnExitSelect()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x2205E54", Offset = "0x2205E54", VA = "0x2205E54", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x2205E58", Offset = "0x2205E58", VA = "0x2205E58", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60010AD")]
		private WorldBuilderPropsBase GetPropsData<T>()
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x2205E5C", Offset = "0x2205E5C", VA = "0x2205E5C")]
		private WorldBuilderPropsBase GetPropsData(Type type)
		{
			return null;
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x2205ECC", Offset = "0x2205ECC", VA = "0x2205ECC")]
		[AsyncStateMachine(typeof(<SetAttributeBaseData>d__26))]
		[Command]
		private UniTask<Result> SetAttributeBaseData(Args<WorldBuilderPropsAttributeBase.AttributeBaseTransformData, int> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x2205FFC", Offset = "0x2205FFC", VA = "0x2205FFC")]
		[Command]
		private Result SetDataFromUI(Args<string, object, bool, Type> args)
		{
			return default(Result);
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x2206160", Offset = "0x2206160", VA = "0x2206160")]
		[Command]
		private void OnlyRefreshView(Args<string, object, Type> args)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x22061DC", Offset = "0x22061DC", VA = "0x22061DC")]
		[Command]
		private Result GetObjElementNum(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x2206364", Offset = "0x2206364", VA = "0x2206364")]
		[Command]
		private Result IsMultiSelections()
		{
			return default(Result);
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x2206474", Offset = "0x2206474", VA = "0x2206474")]
		[AsyncStateMachine(typeof(<GetBuilderComponentDatas>d__31))]
		[Command]
		private UniTask<Result> GetBuilderComponentDatas(Args<string> type)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x2206588", Offset = "0x2206588", VA = "0x2206588")]
		[Command]
		[AsyncStateMachine(typeof(<GetAllTextcount>d__32))]
		private UniTask<Result> GetAllTextcount()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x2206668", Offset = "0x2206668", VA = "0x2206668")]
		[Command]
		[AsyncStateMachine(typeof(<CapacityChange>d__33))]
		private void CapacityChange(Args<float, int> args)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x2206718", Offset = "0x2206718", VA = "0x2206718")]
		private void OnGroupEditorStateChanged(GroupEditorStateChangedData groupEditorStateChangedData)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x22067CC", Offset = "0x22067CC", VA = "0x22067CC")]
		[Command]
		private Result GetGroupState()
		{
			return default(Result);
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x2206854", Offset = "0x2206854", VA = "0x2206854")]
		[Command]
		private Result CheckCurrentData()
		{
			return default(Result);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x22068F4", Offset = "0x22068F4", VA = "0x22068F4")]
		[Command]
		private Result QueryBuilderObjectState(Args<string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x2206C5C", Offset = "0x2206C5C", VA = "0x2206C5C")]
		private long GetRootPreset(BuilderObject bo)
		{
			return default(long);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x2206CF0", Offset = "0x2206CF0", VA = "0x2206CF0")]
		private WorldBuilderPropsBase GetPropsData(string guid, Type type)
		{
			return null;
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x2206D68", Offset = "0x2206D68", VA = "0x2206D68")]
		[Command]
		private void SetSkyBoxData(Args<WorldBuilderPropsSkyBox.UIWBSkyBoxData, string, bool, Type, string> args)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x2206E48", Offset = "0x2206E48", VA = "0x2206E48")]
		private WorldBuilderPropsBase GetPropsData(string guid, int selectPropIndex)
		{
			return null;
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x2206FA4", Offset = "0x2206FA4", VA = "0x2206FA4")]
		[Command]
		private void SetAttributeCommon(Args<UIWBAttributeData, int, string, string> args)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x220703C", Offset = "0x220703C", VA = "0x220703C")]
		public WorldBuilderSystemPropsAttribute()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public class WorldBuilderSystemPropsManager : SystemBase
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002B8")]
		[CompilerGenerated]
		private struct <CapacityChange>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x400113C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400113D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400113E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Args<float, int> args;

			[Token(Token = "0x400113F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public WorldBuilderSystemPropsManager <>4__this;

			[Token(Token = "0x4001140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x60010E1")]
			[Address(RVA = "0x2209AFC", Offset = "0x2209AFC", VA = "0x2209AFC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60010E2")]
			[Address(RVA = "0x2209F74", Offset = "0x2209F74", VA = "0x2209F74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, Dictionary<Type, WorldBuilderPropsBase>> _currentProps_Map;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<string, UIWBAttributeData> _attributeBaseDatas;

		[Token(Token = "0x170000F4")]
		public override bool StartEnable
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0x2207F18", Offset = "0x2207F18", VA = "0x2207F18", Slot = "24")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x2207F20", Offset = "0x2207F20", VA = "0x2207F20")]
		public void InitEnvironment()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0x2208454", Offset = "0x2208454", VA = "0x2208454")]
		public void ExitEnvironment()
		{
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x2208990", Offset = "0x2208990", VA = "0x2208990")]
		private void OnExit()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x2208C94", Offset = "0x2208C94", VA = "0x2208C94")]
		private void OnGroupEditorStateChanged(GroupEditorStateChangedData groupeditorstatechangeddata)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x2208C98", Offset = "0x2208C98", VA = "0x2208C98")]
		private void OnObjectShouldShowProperties(string objid, string objtype)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x2208C9C", Offset = "0x2208C9C", VA = "0x2208C9C")]
		private void OnUIStateChanged(string newstate)
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x2208CA0", Offset = "0x2208CA0", VA = "0x2208CA0")]
		private void OnDeselectedAll()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x2208CA4", Offset = "0x2208CA4", VA = "0x2208CA4")]
		private void OnObjectDeselected(string objid, string objtype)
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x2208CA8", Offset = "0x2208CA8", VA = "0x2208CA8")]
		private void OnObjectSelected(string objid, string objtype)
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x2208E88", Offset = "0x2208E88", VA = "0x2208E88")]
		private void OnObjectRemoved(string objid)
		{
		}

		[Token(Token = "0x60010D4")]
		private T CheckIsEmpytAndAddOne<T>(Dictionary<string, T> checkData, string key) where T : new()
		{
			return (T)null;
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x2208EE0", Offset = "0x2208EE0", VA = "0x2208EE0", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x22091EC", Offset = "0x22091EC", VA = "0x22091EC", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x22091F0", Offset = "0x22091F0", VA = "0x22091F0", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x22091F4", Offset = "0x22091F4", VA = "0x22091F4")]
		private WorldBuilderPropsBase GetPropsData(string guid, Type type)
		{
			return null;
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x22092B4", Offset = "0x22092B4", VA = "0x22092B4")]
		private WorldBuilderPropsBase GetPropsData(string guid, int selectPropIndex)
		{
			return null;
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x2209458", Offset = "0x2209458", VA = "0x2209458")]
		[Command]
		private Result SetDataFromUI(Args<string, object, bool, Type, string> args)
		{
			return default(Result);
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x22095C8", Offset = "0x22095C8", VA = "0x22095C8")]
		[Command]
		private void OnlyRefreshView(Args<string, object, Type, string> args)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x2209650", Offset = "0x2209650", VA = "0x2209650")]
		[Command]
		private void SetAttributeCommon(Args<UIWBAttributeData, int, string, string> args)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x22096EC", Offset = "0x22096EC", VA = "0x22096EC")]
		[Command]
		[AsyncStateMachine(typeof(<CapacityChange>d__24))]
		private void CapacityChange(Args<float, int> args)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x22097BC", Offset = "0x22097BC", VA = "0x22097BC")]
		[Command]
		private void OnCloseSelectWindow(Args<string> args)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x220993C", Offset = "0x220993C", VA = "0x220993C")]
		[Command]
		private void SetSkyBoxData(Args<WorldBuilderPropsSkyBox.UIWBSkyBoxData, string, bool, Type, string> args)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x2209A1C", Offset = "0x2209A1C", VA = "0x2209A1C")]
		public WorldBuilderSystemPropsManager()
		{
		}
	}
}
namespace ByteDance.Picoverse.Systems.WorldBuilderProps
{
	[Token(Token = "0x20002B9")]
	public class WorldBuilderPropsAvatar : WorldBuilderPropsBase
	{
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x2209F80", Offset = "0x2209F80", VA = "0x2209F80")]
		public WorldBuilderPropsAvatar()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class WorldBuilderPropsBase
	{
		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string windowName;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string selectId;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected string selectType;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Dictionary<Type, WorldBuilderPropsBase> data_Map;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected UIWBAttributeData attributeData;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool openWindowThis;

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x2209F90", Offset = "0x2209F90", VA = "0x2209F90", Slot = "4")]
		public virtual void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData attributeData, string windowName)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x220A004", Offset = "0x220A004", VA = "0x220A004", Slot = "5")]
		public virtual void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x220A008", Offset = "0x220A008", VA = "0x220A008", Slot = "6")]
		public virtual void SetData(UIWBAttributeData data, int listCount, string type, string param)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x220A00C", Offset = "0x220A00C", VA = "0x220A00C", Slot = "7")]
		public virtual bool SetDataFromUI(string key, object v, bool recordHistory = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x220A0B0", Offset = "0x220A0B0", VA = "0x220A0B0", Slot = "8")]
		public virtual void OnlyRefreshView(string key, object data)
		{
		}

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x220A0B4", Offset = "0x220A0B4", VA = "0x220A0B4", Slot = "9")]
		public virtual void OnExit(string selectId, string selectType)
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x220A0B8", Offset = "0x220A0B8", VA = "0x220A0B8", Slot = "10")]
		public virtual void OnCapacityChange(float value)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x2209F88", Offset = "0x2209F88", VA = "0x2209F88")]
		public WorldBuilderPropsBase()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class WorldBuilderPropsMap
	{
		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, List<Type>> _enterMapData;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<int, Dictionary<int, List<Type>>> _studio_Map;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<Type, WorldBuilderPropsBase> _props_Map;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static List<WorldBuilderPropsBase> _listPropsBases;

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x220A0BC", Offset = "0x220A0BC", VA = "0x220A0BC")]
		private static int GetWindowType(string objType)
		{
			return default(int);
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x22007C0", Offset = "0x22007C0", VA = "0x22007C0")]
		public static bool EnterAttributeMap(string objType, string selectedObjId, string currentObjType, UIWBAttributeData _attributeData, Dictionary<Type, WorldBuilderPropsBase> _currentProps_Map, object sender, out bool needClear)
		{
			return default(bool);
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x2203540", Offset = "0x2203540", VA = "0x2203540")]
		public static void OnRefreshGroupEditor(UIWBAttributeData uiwbAttributeData, object sender, GroupEditorStateChangedData groupEditorStateChangedData)
		{
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x21FFF10", Offset = "0x21FFF10", VA = "0x21FFF10")]
		public static void OnExit(UIWBAttributeData uiwbAttributeData, object go, string selectType)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x220A208", Offset = "0x220A208", VA = "0x220A208")]
		private static List<WorldBuilderPropsBase> GetPropsBaseData(int type)
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x2202CE4", Offset = "0x2202CE4", VA = "0x2202CE4")]
		public static void PassCommomEvent(Args<UIWBAttributeData, int, string, string> args)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x2204870", Offset = "0x2204870", VA = "0x2204870")]
		public static void CapacityChange(float value)
		{
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x220A448", Offset = "0x220A448", VA = "0x220A448")]
		public WorldBuilderPropsMap()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class WorldBuilderPropsMusic : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002BD")]
		private class UIWBMusicData : AttributeBaseData
		{
			[Token(Token = "0x400114C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BuilderComponentDataMusic builderComponentDataMusic;

			[Token(Token = "0x60010FA")]
			[Address(RVA = "0x220B848", Offset = "0x220B848", VA = "0x220B848")]
			public UIWBMusicData()
			{
			}
		}

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIWBMusicData currentData;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x220AE0C", Offset = "0x220AE0C", VA = "0x220AE0C", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData attributeData, string windowName)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x220B308", Offset = "0x220B308", VA = "0x220B308", Slot = "6")]
		public override void SetData(UIWBAttributeData data, int listCount, string type, string param)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x220AEDC", Offset = "0x220AEDC", VA = "0x220AEDC")]
		private void GetComponentData(string selectId)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x220B314", Offset = "0x220B314", VA = "0x220B314")]
		private void SetComponentData(UIWBAttributeData data, string type, bool record)
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x220B7D8", Offset = "0x220B7D8", VA = "0x220B7D8")]
		public WorldBuilderPropsMusic()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class WorldBuilderPropsPhys : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002BF")]
		public class UIWBPhysData : AttributeBaseData
		{
			[Token(Token = "0x400114D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BuilderComponentDataVisibility visibleData;

			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BuilderComponentDataCollider colliderData;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public BuilderComponentDataPhysMat matData;

			[Token(Token = "0x4001150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public BuilderComponentDataPhysics physData;

			[Token(Token = "0x4001151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public BuilderComponentDataGrab grabData;

			[Token(Token = "0x4001152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public long preset;

			[Token(Token = "0x4001153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<BuilderPhysicsPreset> presetList;

			[Token(Token = "0x4001154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool dataValid;

			[Token(Token = "0x4001155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool lockVisibility;

			[Token(Token = "0x4001156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
			public bool lockCollider;

			[Token(Token = "0x4001157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
			public bool lockPhyMat;

			[Token(Token = "0x4001158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool lockPhysics;

			[Token(Token = "0x4001159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
			public bool lockGrab;

			[Token(Token = "0x6001101")]
			[Address(RVA = "0x23E0B84", Offset = "0x23E0B84", VA = "0x23E0B84")]
			public UIWBPhysData Clone()
			{
				return null;
			}

			[Token(Token = "0x6001102")]
			[Address(RVA = "0x23E0F3C", Offset = "0x23E0F3C", VA = "0x23E0F3C")]
			public UIWBPhysData()
			{
			}
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x220B8BC", Offset = "0x220B8BC", VA = "0x220B8BC", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData uiwbAttributeData, string windowName)
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x220B990", Offset = "0x220B990", VA = "0x220B990")]
		private void InitDataFormSelectedObj()
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x220C4B4", Offset = "0x220C4B4", VA = "0x220C4B4", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x220C544", Offset = "0x220C544", VA = "0x220C544")]
		public bool CheckAndApplyData()
		{
			return default(bool);
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0x220CAB0", Offset = "0x220CAB0", VA = "0x220CAB0", Slot = "7")]
		public override bool SetDataFromUI(string key, object v, bool recordHistory = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0x220CE80", Offset = "0x220CE80", VA = "0x220CE80")]
		public WorldBuilderPropsPhys()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class WorldBuilderPropsPortal : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002C1")]
		private class UIWBData : AttributeBaseData
		{
			[Token(Token = "0x400115A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BuilderComponentDataPortal data;

			[Token(Token = "0x6001109")]
			[Address(RVA = "0x23E102C", Offset = "0x23E102C", VA = "0x23E102C")]
			public UIWBData()
			{
			}
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x23E0F54", Offset = "0x23E0F54", VA = "0x23E0F54", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData uiwbAttributeData, string windowName)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x23E1034", Offset = "0x23E1034", VA = "0x23E1034")]
		private void InitDataFormSelectedObj()
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x23E1224", Offset = "0x23E1224", VA = "0x23E1224", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x23E12D8", Offset = "0x23E12D8", VA = "0x23E12D8")]
		public bool CheckAndApplyData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x23E144C", Offset = "0x23E144C", VA = "0x23E144C", Slot = "8")]
		public override void OnlyRefreshView(string key, object data)
		{
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x23E1458", Offset = "0x23E1458", VA = "0x23E1458")]
		public WorldBuilderPropsPortal()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class WorldBuilderPropsReward : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002C3")]
		public class UIWBRewardData : AttributeBaseData
		{
			[Token(Token = "0x400115C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BuilderComponentDataReward BuilderComponentDataReward;

			[Token(Token = "0x600110F")]
			[Address(RVA = "0x23E1B68", Offset = "0x23E1B68", VA = "0x23E1B68")]
			public UIWBRewardData()
			{
			}
		}

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIWBRewardData currentRewardData;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x23E1460", Offset = "0x23E1460", VA = "0x23E1460", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData attributeData, string windowName)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0x23E1784", Offset = "0x23E1784", VA = "0x23E1784", Slot = "6")]
		public override void SetData(UIWBAttributeData data, int listCount, string type, string param)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0x23E17BC", Offset = "0x23E17BC", VA = "0x23E17BC")]
		private void SetComponentData(UIWBAttributeData data, string type, bool record)
		{
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0x23E1534", Offset = "0x23E1534", VA = "0x23E1534")]
		private void GetComponentData(string selectId)
		{
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0x23E1AF8", Offset = "0x23E1AF8", VA = "0x23E1AF8")]
		public WorldBuilderPropsReward()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class WorldBuilderPropsSettingMap
	{
		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, List<Type>> _enterMapData;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<int, Dictionary<int, List<Type>>> _studio_Map;

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x23E1BDC", Offset = "0x23E1BDC", VA = "0x23E1BDC")]
		public static bool EnterAttributeMap(string objType, string selectedObjId, string currentObjType, UIWBAttributeData _attributeData, Dictionary<Type, WorldBuilderPropsBase> _currentProps_Map, object sender, out bool needClear)
		{
			return default(bool);
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x23E268C", Offset = "0x23E268C", VA = "0x23E268C")]
		public static void OnExit(UIWBAttributeData uiwbAttributeData, object go, string selectType, Dictionary<Type, WorldBuilderPropsBase> _props_Map)
		{
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x23E288C", Offset = "0x23E288C", VA = "0x23E288C")]
		public WorldBuilderPropsSettingMap()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class WorldBuilderPropsSkyBox : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002C6")]
		public class UIWBSkyBoxData
		{
			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color topcolor;

			[Token(Token = "0x4001166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color bottomcolor;

			[Token(Token = "0x4001167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Color horizonlinecolor;

			[Token(Token = "0x4001168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Color groundColor;

			[Token(Token = "0x4001169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float skyluminance;

			[Token(Token = "0x400116A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Color lightColor;

			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public float lightluminance;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Vector3 lightRotation;

			[Token(Token = "0x600111F")]
			[Address(RVA = "0x23E4B7C", Offset = "0x23E4B7C", VA = "0x23E4B7C")]
			public UIWBSkyBoxData()
			{
			}
		}

		[Token(Token = "0x20002C7")]
		public class UIWBSkyBoxDataMap : AttributeBaseData
		{
			[Token(Token = "0x400116D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int index;

			[Token(Token = "0x400116E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Dictionary<int, UIWBSkyBoxData> skyUIDatas;

			[Token(Token = "0x400116F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIWBSkyBoxData currentData;

			[Token(Token = "0x6001120")]
			[Address(RVA = "0x23E32C4", Offset = "0x23E32C4", VA = "0x23E32C4")]
			public UIWBSkyBoxDataMap()
			{
			}
		}

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UIWBSkyBoxData _uiwbSkyBoxData;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UIWBSkyBoxData _currentData;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UIWBSkyBoxData _tempData;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<int, UIWBSkyBoxData> _uiwbSkyBoxDatas;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int count;

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x23E302C", Offset = "0x23E302C", VA = "0x23E302C", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData attributeData, string windowName)
		{
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x23E36F8", Offset = "0x23E36F8", VA = "0x23E36F8", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x23E3550", Offset = "0x23E3550", VA = "0x23E3550")]
		private int CheckIndex(Dictionary<int, UIWBSkyBoxData> map, UIWBSkyBoxData currentData)
		{
			return default(int);
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x23E38E0", Offset = "0x23E38E0", VA = "0x23E38E0")]
		private bool CheckToIndex(UIWBSkyBoxData tempData, UIWBSkyBoxData currentData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x23E3B94", Offset = "0x23E3B94", VA = "0x23E3B94")]
		public bool IsEqual(Vector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x23E3354", Offset = "0x23E3354", VA = "0x23E3354")]
		private bool GetSkyBoxData(string selectedId)
		{
			return default(bool);
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x23E3BD4", Offset = "0x23E3BD4", VA = "0x23E3BD4")]
		public void SetSkyBoxData(string type, UIWBSkyBoxData data, bool record)
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x23E42E8", Offset = "0x23E42E8", VA = "0x23E42E8", Slot = "7")]
		public override bool SetDataFromUI(string key, object v, bool record = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x23E3490", Offset = "0x23E3490", VA = "0x23E3490")]
		private void CopyData(UIWBSkyBoxData data, UIWBSkyBoxData targetData)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x23E31FC", Offset = "0x23E31FC", VA = "0x23E31FC")]
		public Dictionary<int, UIWBSkyBoxData> GetSkyBoxData()
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x23E4BF4", Offset = "0x23E4BF4", VA = "0x23E4BF4")]
		public WorldBuilderPropsSkyBox()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class WorldBuilderPropsSpawn : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002C9")]
		private class UIWBSpawnData : AttributeBaseData
		{
			[Token(Token = "0x4001170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BuilderComponentDataSpawn data;

			[Token(Token = "0x6001127")]
			[Address(RVA = "0x23E4DB0", Offset = "0x23E4DB0", VA = "0x23E4DB0")]
			public UIWBSpawnData()
			{
			}
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x23E4CD8", Offset = "0x23E4CD8", VA = "0x23E4CD8", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData uiwbAttributeData, string windowName)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x23E4DB8", Offset = "0x23E4DB8", VA = "0x23E4DB8")]
		private void InitDataFormSelectedObj()
		{
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x23E4FA8", Offset = "0x23E4FA8", VA = "0x23E4FA8", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x23E505C", Offset = "0x23E505C", VA = "0x23E505C")]
		public bool CheckAndApplyData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x23E5228", Offset = "0x23E5228", VA = "0x23E5228", Slot = "8")]
		public override void OnlyRefreshView(string key, object data)
		{
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x23E5350", Offset = "0x23E5350", VA = "0x23E5350")]
		public WorldBuilderPropsSpawn()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class WorldBuilderPropsText : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002CB")]
		public class UIWBTextData : AttributeBaseData
		{
			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string textString;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int textSize;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Color textColor;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string textColorStr;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool isEmpty;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int remainingCount;

			[Token(Token = "0x400117B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int limit;

			[Token(Token = "0x400117C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int textLength;

			[Token(Token = "0x6001130")]
			[Address(RVA = "0x23E6328", Offset = "0x23E6328", VA = "0x23E6328")]
			public UIWBTextData()
			{
			}
		}

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIWBTextData _uiwbTextData;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int count;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BuilderComponentDataText tempData;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color tempColor;

		[Token(Token = "0x6001128")]
		[Address(RVA = "0x23E5358", Offset = "0x23E5358", VA = "0x23E5358", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData attributeData, string windowName)
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x23E5428", Offset = "0x23E5428", VA = "0x23E5428")]
		private void GetData()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x23E5858", Offset = "0x23E5858", VA = "0x23E5858", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x23E5A50", Offset = "0x23E5A50", VA = "0x23E5A50", Slot = "6")]
		public override void SetData(UIWBAttributeData data, int listCount, string type, string param)
		{
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x23E55D0", Offset = "0x23E55D0", VA = "0x23E55D0")]
		private int GetCount()
		{
			return default(int);
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x23E602C", Offset = "0x23E602C", VA = "0x23E602C", Slot = "10")]
		public override void OnCapacityChange(float value)
		{
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x23E6174", Offset = "0x23E6174", VA = "0x23E6174", Slot = "9")]
		public override void OnExit(string selectId, string selectType)
		{
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x23E62B8", Offset = "0x23E62B8", VA = "0x23E62B8")]
		public WorldBuilderPropsText()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class WorldBuilderPropsAttributeBase : WorldBuilderPropsBase
	{
		[Token(Token = "0x20002CD")]
		public class AttributeBaseTransformData
		{
			[Token(Token = "0x4001181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 pos;

			[Token(Token = "0x4001182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 scale;

			[Token(Token = "0x4001183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 rotation;

			[Token(Token = "0x6001137")]
			[Address(RVA = "0x23E6C54", Offset = "0x23E6C54", VA = "0x23E6C54")]
			public AttributeBaseTransformData()
			{
			}
		}

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Vector3> _posList;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AttributeBaseTransformData _attributeRectTansformData;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _startScale;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _defulatWith;

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x23E63C8", Offset = "0x23E63C8", VA = "0x23E63C8", Slot = "4")]
		public override void OnEnter(string selectId, string selectType, Dictionary<Type, WorldBuilderPropsBase> data_Map, UIWBAttributeData uiwbAttributeData, string windowName)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x23E674C", Offset = "0x23E674C", VA = "0x23E674C")]
		private void GetSelectBounds(string selectedId)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x23E68A4", Offset = "0x23E68A4", VA = "0x23E68A4", Slot = "5")]
		public override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x23E6418", Offset = "0x23E6418", VA = "0x23E6418")]
		public bool GetTransformData(string selectedId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x23E6970", Offset = "0x23E6970", VA = "0x23E6970")]
		public void SetTransformData(int type, AttributeBaseTransformData baseTransformData)
		{
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x23E6B84", Offset = "0x23E6B84", VA = "0x23E6B84")]
		public WorldBuilderPropsAttributeBase()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class WorldBuilderPropsAttributeMap
	{
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<int, List<Type>> _enterMapData;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<int, List<Type>> _enterMapDataCommon;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<int, Dictionary<int, List<Type>>> _studio_Map;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Dictionary<Type, WorldBuilderPropsBase> _props_Map;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static List<WorldBuilderPropsBase> _listPropsBases;

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x23E6C5C", Offset = "0x23E6C5C", VA = "0x23E6C5C")]
		public static bool EnterAttributeMap(string objType, string selectedObjId, string currentObjType, UIWBAttributeData _attributeData, Dictionary<Type, WorldBuilderPropsBase> _currentProps_Map, object sender, out bool needClear)
		{
			return default(bool);
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x23E7CC8", Offset = "0x23E7CC8", VA = "0x23E7CC8")]
		public static void OnRefreshGroupEditor(UIWBAttributeData uiwbAttributeData, object sender, GroupEditorStateChangedData groupEditorStateChangedData)
		{
		}

		[Token(Token = "0x600113A")]
		[Address(RVA = "0x23E7E24", Offset = "0x23E7E24", VA = "0x23E7E24")]
		public static void OnExit(UIWBAttributeData uiwbAttributeData, object go, string selectType)
		{
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x23E810C", Offset = "0x23E810C", VA = "0x23E810C")]
		public static void CapacityChange(float value)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x23E82BC", Offset = "0x23E82BC", VA = "0x23E82BC")]
		public WorldBuilderPropsAttributeMap()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public enum WorldBuilderProps
	{
		[Token(Token = "0x400118A")]
		Common,
		[Token(Token = "0x400118B")]
		Attribute,
		[Token(Token = "0x400118C")]
		SkyBox,
		[Token(Token = "0x400118D")]
		Spawn,
		[Token(Token = "0x400118E")]
		Text,
		[Token(Token = "0x400118F")]
		Music,
		[Token(Token = "0x4001190")]
		Reward,
		[Token(Token = "0x4001191")]
		Avatar,
		[Token(Token = "0x4001192")]
		Portal
	}
	[Token(Token = "0x20002D0")]
	public class AttributeBaseData
	{
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int type;

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x23E0F4C", Offset = "0x23E0F4C", VA = "0x23E0F4C")]
		public AttributeBaseData()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public class UIWBAttributeData : IArgs
	{
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string guid;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public long currentSelectAssetIdId;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<long> assetIncludeIds;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> guildList;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WorldBuilderPropsAttributeBase.AttributeBaseTransformData baseData;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool notRemove;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isOnlyOneGroup;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool enterGroupEditor;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string rootId;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int windowState;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Bounds bounds;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int windowType;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Dictionary<int, AttributeBaseData> obj;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int selectType;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int attributeType;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int windowStudioType;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool isOnUpdateCheck;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		public bool isEmpty;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		public bool forceRefresh;

		[Token(Token = "0x600113F")]
		[Address(RVA = "0x23E8F70", Offset = "0x23E8F70", VA = "0x23E8F70")]
		public UIWBAttributeData()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class WorldBuilderPropsUtil
	{
		[Token(Token = "0x6001140")]
		[Address(RVA = "0x23E2470", Offset = "0x23E2470", VA = "0x23E2470")]
		public static int GetWindowType(string objType)
		{
			return default(int);
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0x23E9070", Offset = "0x23E9070", VA = "0x23E9070")]
		public WorldBuilderPropsUtil()
		{
		}
	}
}
namespace ByteDance.Picoverse.Robot
{
	[Token(Token = "0x20002D3")]
	public enum MoveMode
	{
		[Token(Token = "0x40011A9")]
		Idle,
		[Token(Token = "0x40011AA")]
		Positive,
		[Token(Token = "0x40011AB")]
		Passive,
		[Token(Token = "0x40011AC")]
		Random
	}
	[Token(Token = "0x20002D4")]
	public enum MoveDirection
	{
		[Token(Token = "0x40011AE")]
		Forward,
		[Token(Token = "0x40011AF")]
		Back,
		[Token(Token = "0x40011B0")]
		Left,
		[Token(Token = "0x40011B1")]
		Right,
		[Token(Token = "0x40011B2")]
		Idle
	}
	[Token(Token = "0x20002D5")]
	public class NetworkPlayerBehavior : SingletonMono<NetworkPlayerBehavior>
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float _changeDirInterval;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float _moveInterval;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static float _moveChange;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _changeDirTimeCount;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _randomDirection;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _moveInterValCount;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _degreeOfNegativity;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private MoveMode _mode;

		[Token(Token = "0x170000F5")]
		public bool Started
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0x23E9078", Offset = "0x23E9078", VA = "0x23E9078")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0x23E9080", Offset = "0x23E9080", VA = "0x23E9080")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0x23E908C", Offset = "0x23E908C", VA = "0x23E908C")]
		private new void Awake()
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0x23E927C", Offset = "0x23E927C", VA = "0x23E927C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0x23E955C", Offset = "0x23E955C", VA = "0x23E955C")]
		private void RandomMove()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0x23E9430", Offset = "0x23E9430", VA = "0x23E9430")]
		private void PassiveMove()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0x23E9CA8", Offset = "0x23E9CA8", VA = "0x23E9CA8")]
		private static void DoPassiveMove(MoveDirection direction)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0x23E9688", Offset = "0x23E9688", VA = "0x23E9688")]
		private static void PositiveMove()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0x23E9894", Offset = "0x23E9894", VA = "0x23E9894")]
		private static void DoRandomMove(MoveDirection direction)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0x23EA060", Offset = "0x23EA060", VA = "0x23EA060")]
		public NetworkPlayerBehavior()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class RobotClientApp : MonoBehaviour
	{
		[Token(Token = "0x20002D7")]
		private class TestUserProfile
		{
			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x40011C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string name;

			[Token(Token = "0x40011C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int relationType;

			[Token(Token = "0x40011C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int stature;

			[Token(Token = "0x40011C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string thumbnail;

			[Token(Token = "0x600115D")]
			[Address(RVA = "0x23EB520", Offset = "0x23EB520", VA = "0x23EB520")]
			public TestUserProfile()
			{
			}
		}

		[Token(Token = "0x20002D8")]
		private class LoginCodeRes
		{
			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string picoWorldsToken;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TestUserProfile userProfileVo;

			[Token(Token = "0x600115E")]
			[Address(RVA = "0x23EB528", Offset = "0x23EB528", VA = "0x23EB528")]
			public LoginCodeRes()
			{
			}
		}

		[Token(Token = "0x20002D9")]
		private abstract class RobotReqResult
		{
			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsSuccess;

			[Token(Token = "0x600115F")]
			[Address(RVA = "0x23EB530", Offset = "0x23EB530", VA = "0x23EB530")]
			protected RobotReqResult()
			{
			}
		}

		[Token(Token = "0x20002DA")]
		private class RobotLoginCodeResult : RobotReqResult
		{
			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LoginCodeRes LoginCodeRes;

			[Token(Token = "0x6001160")]
			[Address(RVA = "0x23EB538", Offset = "0x23EB538", VA = "0x23EB538")]
			public RobotLoginCodeResult()
			{
			}
		}

		[Token(Token = "0x20002DB")]
		private class RobotUserInfoResult : RobotReqResult
		{
			[Token(Token = "0x40011CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string message;

			[Token(Token = "0x6001161")]
			[Address(RVA = "0x23EB540", Offset = "0x23EB540", VA = "0x23EB540")]
			public RobotUserInfoResult()
			{
			}
		}

		[Token(Token = "0x20002DC")]
		private class RobotListWorldResult : RobotReqResult
		{
			[Token(Token = "0x40011CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ListMapV2Resp MapListRes;

			[Token(Token = "0x6001162")]
			[Address(RVA = "0x23EB548", Offset = "0x23EB548", VA = "0x23EB548")]
			public RobotListWorldResult()
			{
			}
		}

		[Token(Token = "0x20002DD")]
		private class RobotEnterMapResult : RobotReqResult
		{
			[Token(Token = "0x40011CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public QueryRoomServerResp RoomRes;

			[Token(Token = "0x40011CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long MapId;

			[Token(Token = "0x6001163")]
			[Address(RVA = "0x23EB550", Offset = "0x23EB550", VA = "0x23EB550")]
			public RobotEnterMapResult()
			{
			}
		}

		[Token(Token = "0x20002DE")]
		private class RobotMessage
		{
			[Token(Token = "0x40011CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string text;

			[Token(Token = "0x6001164")]
			[Address(RVA = "0x23EB558", Offset = "0x23EB558", VA = "0x23EB558")]
			public RobotMessage(string text)
			{
			}
		}

		[Token(Token = "0x20002DF")]
		private class RobotTextMessage
		{
			[Token(Token = "0x40011CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string msg_type;

			[Token(Token = "0x40011D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RobotMessage content;

			[Token(Token = "0x6001165")]
			[Address(RVA = "0x23EB588", Offset = "0x23EB588", VA = "0x23EB588")]
			public RobotTextMessage(string type, string content)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E0")]
		[CompilerGenerated]
		private struct <Start>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x40011D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40011D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001166")]
			[Address(RVA = "0x23EB62C", Offset = "0x23EB62C", VA = "0x23EB62C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001167")]
			[Address(RVA = "0x23EB908", Offset = "0x23EB908", VA = "0x23EB908", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E1")]
		[CompilerGenerated]
		private struct <StartRobottApp>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x40011D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x40011D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Command>.Awaiter <>u__2;

			[Token(Token = "0x40011DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask.Awaiter <>u__3;

			[Token(Token = "0x6001168")]
			[Address(RVA = "0x23EB914", Offset = "0x23EB914", VA = "0x23EB914", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0x23EC2A8", Offset = "0x23EC2A8", VA = "0x23EC2A8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E3")]
		[CompilerGenerated]
		private struct <StartRobotBehavior>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x40011DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40011DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private UniTask<RobotLoginCodeResult>.Awaiter <>u__1;

			[Token(Token = "0x40011E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<RobotUserInfoResult>.Awaiter <>u__2;

			[Token(Token = "0x40011E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<RobotEnterMapResult>.Awaiter <>u__3;

			[Token(Token = "0x40011E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<int>.Awaiter <>u__4;

			[Token(Token = "0x40011E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UniTask.Awaiter <>u__5;

			[Token(Token = "0x600116D")]
			[Address(RVA = "0x23EC41C", Offset = "0x23EC41C", VA = "0x23EC41C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600116E")]
			[Address(RVA = "0x23EDBF4", Offset = "0x23EDBF4", VA = "0x23EDBF4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E4")]
		[CompilerGenerated]
		private struct <LoginCode>d__12 : IAsyncStateMachine
		{
			[Token(Token = "0x40011E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<RobotLoginCodeResult> <>t__builder;

			[Token(Token = "0x40011E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RobotLoginCodeResult <result>5__2;

			[Token(Token = "0x40011E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private LoginCodeRes <loginRes>5__3;

			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask<Command>.Awaiter <>u__2;

			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UniTask.Awaiter <>u__3;

			[Token(Token = "0x600116F")]
			[Address(RVA = "0x23EDC00", Offset = "0x23EDC00", VA = "0x23EDC00", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001170")]
			[Address(RVA = "0x23EEA38", Offset = "0x23EEA38", VA = "0x23EEA38", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E5")]
		[CompilerGenerated]
		private struct <ReqUserInfo>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<RobotUserInfoResult> <>t__builder;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RobotUserInfoResult <infoResult>5__2;

			[Token(Token = "0x40011F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UserData <userData>5__3;

			[Token(Token = "0x40011F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x40011F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001171")]
			[Address(RVA = "0x23EEA90", Offset = "0x23EEA90", VA = "0x23EEA90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001172")]
			[Address(RVA = "0x23EFE00", Offset = "0x23EFE00", VA = "0x23EFE00", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E6")]
		[CompilerGenerated]
		private struct <QueryMapList>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x40011F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<RobotListWorldResult> <>t__builder;

			[Token(Token = "0x40011F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private RobotListWorldResult <result>5__2;

			[Token(Token = "0x40011F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x40011F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001173")]
			[Address(RVA = "0x23EFE58", Offset = "0x23EFE58", VA = "0x23EFE58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001174")]
			[Address(RVA = "0x23F07F8", Offset = "0x23F07F8", VA = "0x23F07F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E7")]
		[CompilerGenerated]
		private struct <QueryEnterMap>d__15 : IAsyncStateMachine
		{
			[Token(Token = "0x40011FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40011FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<RobotEnterMapResult> <>t__builder;

			[Token(Token = "0x40011FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long mapId;

			[Token(Token = "0x40011FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RobotClientApp <>4__this;

			[Token(Token = "0x40011FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RobotEnterMapResult <result>5__2;

			[Token(Token = "0x40011FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4001200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001175")]
			[Address(RVA = "0x23F0850", Offset = "0x23F0850", VA = "0x23F0850", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001176")]
			[Address(RVA = "0x23F114C", Offset = "0x23F114C", VA = "0x23F114C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002E8")]
		[CompilerGenerated]
		private struct <DisConnectedServer>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x4001201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6001177")]
			[Address(RVA = "0x23F11A4", Offset = "0x23F11A4", VA = "0x23F11A4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001178")]
			[Address(RVA = "0x23F1748", Offset = "0x23F1748", VA = "0x23F1748", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20002E9")]
		[CompilerGenerated]
		private sealed class <SendRobotMessage>d__19 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x4001204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string msg;

			[Token(Token = "0x4001207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <webRequest>5__2;

			[Token(Token = "0x170000F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600117D")]
				[Address(RVA = "0x23F1CD8", Offset = "0x23F1CD8", VA = "0x23F1CD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600117F")]
				[Address(RVA = "0x23F1D20", Offset = "0x23F1D20", VA = "0x23F1D20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001179")]
			[Address(RVA = "0x23EB470", Offset = "0x23EB470", VA = "0x23EB470")]
			[DebuggerHidden]
			public <SendRobotMessage>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600117A")]
			[Address(RVA = "0x23F1754", Offset = "0x23F1754", VA = "0x23F1754", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600117B")]
			[Address(RVA = "0x23F1770", Offset = "0x23F1770", VA = "0x23F1770", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600117C")]
			[Address(RVA = "0x23F1C28", Offset = "0x23F1C28", VA = "0x23F1C28")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600117E")]
			[Address(RVA = "0x23F1CE0", Offset = "0x23F1CE0", VA = "0x23F1CE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UniTaskCompletionSource<DutyUnityServerPushReq> _queryRoomPushSource;

		[Token(Token = "0x40011BD")]
		private const int SMSLoginFaildWait = 5000;

		[Token(Token = "0x40011BE")]
		private const int UserInfoFaildWait = 5000;

		[Token(Token = "0x40011BF")]
		private const int EnterMapFaildWait = 10000;

		[Token(Token = "0x40011C0")]
		private const int DisConnectedWait = 5000;

		[Token(Token = "0x600114D")]
		[Address(RVA = "0x23EA10C", Offset = "0x23EA10C", VA = "0x23EA10C")]
		[AsyncStateMachine(typeof(<Start>d__5))]
		private void Start()
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0x23EA1C0", Offset = "0x23EA1C0", VA = "0x23EA1C0")]
		private void InitModules()
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0x23EA260", Offset = "0x23EA260", VA = "0x23EA260")]
		private void InitSystems()
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0x23EA364", Offset = "0x23EA364", VA = "0x23EA364")]
		private void InitServer()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0x23EA5B4", Offset = "0x23EA5B4", VA = "0x23EA5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0x23EA5B8", Offset = "0x23EA5B8", VA = "0x23EA5B8")]
		[AsyncStateMachine(typeof(<StartRobottApp>d__10))]
		private UniTask StartRobottApp()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0x23EA71C", Offset = "0x23EA71C", VA = "0x23EA71C")]
		[AsyncStateMachine(typeof(<StartRobotBehavior>d__11))]
		private UniTask StartRobotBehavior()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0x23EA880", Offset = "0x23EA880", VA = "0x23EA880")]
		[AsyncStateMachine(typeof(<LoginCode>d__12))]
		private UniTask<RobotLoginCodeResult> LoginCode()
		{
			return default(UniTask<RobotLoginCodeResult>);
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0x23EA958", Offset = "0x23EA958", VA = "0x23EA958")]
		[AsyncStateMachine(typeof(<ReqUserInfo>d__13))]
		private UniTask<RobotUserInfoResult> ReqUserInfo(string token)
		{
			return default(UniTask<RobotUserInfoResult>);
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0x23EAA34", Offset = "0x23EAA34", VA = "0x23EAA34")]
		[AsyncStateMachine(typeof(<QueryMapList>d__14))]
		private UniTask<RobotListWorldResult> QueryMapList()
		{
			return default(UniTask<RobotListWorldResult>);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0x23EAB14", Offset = "0x23EAB14", VA = "0x23EAB14")]
		[AsyncStateMachine(typeof(<QueryEnterMap>d__15))]
		private UniTask<RobotEnterMapResult> QueryEnterMap(long mapId)
		{
			return default(UniTask<RobotEnterMapResult>);
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0x23EABFC", Offset = "0x23EABFC", VA = "0x23EABFC")]
		[AsyncStateMachine(typeof(<DisConnectedServer>d__16))]
		private UniTask DisConnectedServer()
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0x23EAD44", Offset = "0x23EAD44", VA = "0x23EAD44")]
		private void UpdateTransportSettings()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0x23EB1B4", Offset = "0x23EB1B4", VA = "0x23EB1B4")]
		private void UpdateClientSettings()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0x23EB3FC", Offset = "0x23EB3FC", VA = "0x23EB3FC")]
		[IteratorStateMachine(typeof(<SendRobotMessage>d__19))]
		private IEnumerator SendRobotMessage(string msg)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0x23EB498", Offset = "0x23EB498", VA = "0x23EB498")]
		public RobotClientApp()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public static class RobotConfig
	{
		[Token(Token = "0x170000F8")]
		public static Unity.Netcode.LogLevel LogLevel
		{
			[Token(Token = "0x6001180")]
			[Address(RVA = "0x23EB378", Offset = "0x23EB378", VA = "0x23EB378")]
			get
			{
				return default(Unity.Netcode.LogLevel);
			}
		}

		[Token(Token = "0x170000F9")]
		public static int? TargetFramerate
		{
			[Token(Token = "0x6001181")]
			[Address(RVA = "0x23EB338", Offset = "0x23EB338", VA = "0x23EB338")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public static int? MaxPacketQueueSize
		{
			[Token(Token = "0x6001182")]
			[Address(RVA = "0x23EB034", Offset = "0x23EB034", VA = "0x23EB034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public static int? MaxPayloadSize
		{
			[Token(Token = "0x6001183")]
			[Address(RVA = "0x23EB074", Offset = "0x23EB074", VA = "0x23EB074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		public static int? MaxSendQueueSize
		{
			[Token(Token = "0x6001184")]
			[Address(RVA = "0x23EB0B4", Offset = "0x23EB0B4", VA = "0x23EB0B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		public static int? DropRate
		{
			[Token(Token = "0x6001185")]
			[Address(RVA = "0x23EB0F4", Offset = "0x23EB0F4", VA = "0x23EB0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public static int? PacketJitter
		{
			[Token(Token = "0x6001186")]
			[Address(RVA = "0x23EB134", Offset = "0x23EB134", VA = "0x23EB134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		public static int? PacketDelay
		{
			[Token(Token = "0x6001187")]
			[Address(RVA = "0x23EB174", Offset = "0x23EB174", VA = "0x23EB174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		public static float? DegreeOfNegativity
		{
			[Token(Token = "0x6001188")]
			[Address(RVA = "0x23E9194", Offset = "0x23E9194", VA = "0x23E9194")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		public static float? MoveInterval
		{
			[Token(Token = "0x6001189")]
			[Address(RVA = "0x23E9154", Offset = "0x23E9154", VA = "0x23E9154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		public static string Phone
		{
			[Token(Token = "0x600118A")]
			[Address(RVA = "0x23EE9C4", Offset = "0x23EE9C4", VA = "0x23EE9C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		public static MoveMode MoveMode
		{
			[Token(Token = "0x600118B")]
			[Address(RVA = "0x23E91D4", Offset = "0x23E91D4", VA = "0x23E91D4")]
			get
			{
				return default(MoveMode);
			}
		}

		[Token(Token = "0x17000104")]
		public static long MapId
		{
			[Token(Token = "0x600118C")]
			[Address(RVA = "0x23EDAB4", Offset = "0x23EDAB4", VA = "0x23EDAB4")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000105")]
		public static int Period
		{
			[Token(Token = "0x600118D")]
			[Address(RVA = "0x23EDB54", Offset = "0x23EDB54", VA = "0x23EDB54")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x23F1D28", Offset = "0x23F1D28", VA = "0x23F1D28")]
		private static int? GetInt(string argument)
		{
			return null;
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x23F1F48", Offset = "0x23F1F48", VA = "0x23F1F48")]
		private static long? GetLong(string argument)
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x23F1DC8", Offset = "0x23F1DC8", VA = "0x23F1DC8")]
		private static float? GetFloat(string argument)
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x23F1FE4", Offset = "0x23F1FE4", VA = "0x23F1FE4")]
		private static bool HasArgument(string name, bool caseSensitive = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x23F1E68", Offset = "0x23F1E68", VA = "0x23F1E68")]
		private static string GetArgument(string name, bool caseSensitive = false)
		{
			return null;
		}
	}
}
namespace ByteDance.Picoverse.Props
{
	[Token(Token = "0x20002EB")]
	public class KnapsackPropsManager : SingletonMono<KnapsackPropsManager>
	{
		[Token(Token = "0x20002EC")]
		private struct BiGrabInfo
		{
			[Token(Token = "0x400121C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long PropId;

			[Token(Token = "0x400121D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string PropName;

			[Token(Token = "0x400121E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long Tick;
		}

		[Token(Token = "0x20002ED")]
		public struct PropInfo
		{
			[Token(Token = "0x400121F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long ID;

			[Token(Token = "0x4001220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string AuthorId;

			[Token(Token = "0x4001221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Thumbnail;

			[Token(Token = "0x4001223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool LongGrab;

			[Token(Token = "0x4001224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PropController Prop;
		}

		[Token(Token = "0x20002EE")]
		private struct PropSortContent
		{
			[Token(Token = "0x4001225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long ID;

			[Token(Token = "0x4001226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int Capacity;

			[Token(Token = "0x4001227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PropController Prop;
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002EF")]
		[CompilerGenerated]
		private struct <GetPropName>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x400122A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x400122B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long propId;

			[Token(Token = "0x400122C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x60011C4")]
			[Address(RVA = "0x23F6518", Offset = "0x23F6518", VA = "0x23F6518", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011C5")]
			[Address(RVA = "0x23F6C64", Offset = "0x23F6C64", VA = "0x23F6C64", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F0")]
		[CompilerGenerated]
		private struct <ReportHoldProp>d__6 : IAsyncStateMachine
		{
			[Token(Token = "0x400122D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400122E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400122F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x4001230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x4001231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PropController <propController>5__2;

			[Token(Token = "0x4001232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private long <tick>5__3;

			[Token(Token = "0x4001233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<string>.Awaiter <>u__1;

			[Token(Token = "0x4001234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x60011C6")]
			[Address(RVA = "0x23F6CBC", Offset = "0x23F6CBC", VA = "0x23F6CBC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011C7")]
			[Address(RVA = "0x23F760C", Offset = "0x23F760C", VA = "0x23F760C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F1")]
		[CompilerGenerated]
		private struct <ReportDiscardProp>d__7 : IAsyncStateMachine
		{
			[Token(Token = "0x4001235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject go;

			[Token(Token = "0x4001238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x4001239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60011C8")]
			[Address(RVA = "0x23F7618", Offset = "0x23F7618", VA = "0x23F7618", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011C9")]
			[Address(RVA = "0x23F7B4C", Offset = "0x23F7B4C", VA = "0x23F7B4C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F2")]
		[CompilerGenerated]
		private struct <ReportPropsBi>d__8 : IAsyncStateMachine
		{
			[Token(Token = "0x400123A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400123B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400123C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x400123D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JsonObject data;

			[Token(Token = "0x400123E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string key;

			[Token(Token = "0x400123F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <reportGeneralParams>5__2;

			[Token(Token = "0x4001240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x60011CA")]
			[Address(RVA = "0x23F7B58", Offset = "0x23F7B58", VA = "0x23F7B58", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011CB")]
			[Address(RVA = "0x23F8224", Offset = "0x23F8224", VA = "0x23F8224", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F3")]
		[CompilerGenerated]
		private struct <TakeoutProp>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4001241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x4001244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public GameObject go;

			[Token(Token = "0x4001245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public long propId;

			[Token(Token = "0x4001246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public int sign;

			[Token(Token = "0x4001247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
			public Vector3 pos;

			[Token(Token = "0x4001248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x60011CC")]
			[Address(RVA = "0x23F8230", Offset = "0x23F8230", VA = "0x23F8230", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011CD")]
			[Address(RVA = "0x23F8AE0", Offset = "0x23F8AE0", VA = "0x23F8AE0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F4")]
		[CompilerGenerated]
		private struct <TakeoutProp>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x4001249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400124A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400124B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x400124C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public uint localPropId;

			[Token(Token = "0x400124D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public long propId;

			[Token(Token = "0x400124E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Vector3 pos;

			[Token(Token = "0x400124F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x60011CE")]
			[Address(RVA = "0x23F8B38", Offset = "0x23F8B38", VA = "0x23F8B38", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011CF")]
			[Address(RVA = "0x23F97E0", Offset = "0x23F97E0", VA = "0x23F97E0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F5")]
		[CompilerGenerated]
		private struct <TakeoutServer>d__46 : IAsyncStateMachine
		{
			[Token(Token = "0x4001250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public uint localPropId;

			[Token(Token = "0x4001253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public long propId;

			[Token(Token = "0x4001254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Vector3 pos;

			[Token(Token = "0x4001255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0x23F9838", Offset = "0x23F9838", VA = "0x23F9838", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0x23F9F68", Offset = "0x23F9F68", VA = "0x23F9F68", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F6")]
		[CompilerGenerated]
		private struct <TakeoutLocal>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x4001256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public uint localPropId;

			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public long propId;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Vector3 pos;

			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private Result <resultFailed>5__2;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0x23F9FC0", Offset = "0x23F9FC0", VA = "0x23F9FC0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011D3")]
			[Address(RVA = "0x23FAD74", Offset = "0x23FAD74", VA = "0x23FAD74", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002F9")]
		[CompilerGenerated]
		private struct <TakeOwnershipOverMultiSelectedProps>d__62 : IAsyncStateMachine
		{
			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject interactableObject;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <retires>5__2;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x60011D8")]
			[Address(RVA = "0x28F5D54", Offset = "0x28F5D54", VA = "0x28F5D54", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011D9")]
			[Address(RVA = "0x28F6228", Offset = "0x28F6228", VA = "0x28F6228", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x20002FB")]
		[CompilerGenerated]
		private struct <CalculatePropCellCapacity>d__77 : IAsyncStateMachine
		{
			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KnapsackPropsManager <>4__this;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long propId;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<int, int> callback;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x60011DD")]
			[Address(RVA = "0x28F62C4", Offset = "0x28F62C4", VA = "0x28F62C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011DE")]
			[Address(RVA = "0x28F6B14", Offset = "0x28F6B14", VA = "0x28F6B14", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001208")]
		private const string ReportHoldPropKey = "hold_property";

		[Token(Token = "0x4001209")]
		private const string ReportDiscardPropKey = "discard_property";

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GameObject, BiGrabInfo> _propBiGrabInfo;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<long, string> _propIdToName;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint _localPropIdPool;

		[Token(Token = "0x400120D")]
		private const float PosFixedCoe = 1f;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<long, PropInfo> _propInfos;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<long, int> _propCellCapacity;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<uint, CustomGrabInteractable> _localPlaceholderInteractable;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<CustomGrabInteractable, CustomGrabInteractable> _propGrabInteractables;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<CustomGrabInteractable, Vector3> _propGrabPos;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SceneSystem _sceneSystem;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ControllerDriver _leftController;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ControllerDriver _rightController;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _leftRayTransform;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform _rightRayTransform;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private long _userId;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _roomError;

		[Token(Token = "0x17000106")]
		public Vector3 LeftRayPos
		{
			[Token(Token = "0x6001197")]
			[Address(RVA = "0x23F24E0", Offset = "0x23F24E0", VA = "0x23F24E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000107")]
		public Vector3 RightRayPos
		{
			[Token(Token = "0x6001198")]
			[Address(RVA = "0x23F24FC", Offset = "0x23F24FC", VA = "0x23F24FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000108")]
		public Vector3 LeftRayDir
		{
			[Token(Token = "0x6001199")]
			[Address(RVA = "0x23F2518", Offset = "0x23F2518", VA = "0x23F2518")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000109")]
		public Vector3 RightRayDir
		{
			[Token(Token = "0x600119A")]
			[Address(RVA = "0x23F2534", Offset = "0x23F2534", VA = "0x23F2534")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700010A")]
		public GameObject LeftRecycleHand
		{
			[Token(Token = "0x600119B")]
			[Address(RVA = "0x23F2550", Offset = "0x23F2550", VA = "0x23F2550")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600119C")]
			[Address(RVA = "0x23F2558", Offset = "0x23F2558", VA = "0x23F2558")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public GameObject RightRecycleHand
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0x23F2560", Offset = "0x23F2560", VA = "0x23F2560")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600119E")]
			[Address(RVA = "0x23F2568", Offset = "0x23F2568", VA = "0x23F2568")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x23F20A8", Offset = "0x23F20A8", VA = "0x23F20A8")]
		[AsyncStateMachine(typeof(<GetPropName>d__5))]
		private UniTask<string> GetPropName(long propId)
		{
			return default(UniTask<string>);
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x23F2198", Offset = "0x23F2198", VA = "0x23F2198")]
		[AsyncStateMachine(typeof(<ReportHoldProp>d__6))]
		private void ReportHoldProp(GameObject go)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x23F2274", Offset = "0x23F2274", VA = "0x23F2274")]
		[AsyncStateMachine(typeof(<ReportDiscardProp>d__7))]
		private void ReportDiscardProp(GameObject go)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x23F234C", Offset = "0x23F234C", VA = "0x23F234C")]
		[AsyncStateMachine(typeof(<ReportPropsBi>d__8))]
		private UniTask ReportPropsBi(string key, JsonObject data)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x23F2570", Offset = "0x23F2570", VA = "0x23F2570")]
		public KnapsackPropsManager()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x23F27EC", Offset = "0x23F27EC", VA = "0x23F27EC", Slot = "4")]
		protected override void OnAwake()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x23F2834", Offset = "0x23F2834", VA = "0x23F2834")]
		public void Init()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x23F2DAC", Offset = "0x23F2DAC", VA = "0x23F2DAC")]
		public void UnInit()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x23F32E8", Offset = "0x23F32E8", VA = "0x23F32E8")]
		[AsyncStateMachine(typeof(<TakeoutProp>d__44))]
		public UniTask<Result> TakeoutProp(GameObject go, long propId, int sign, Vector3 pos)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x23F344C", Offset = "0x23F344C", VA = "0x23F344C")]
		[AsyncStateMachine(typeof(<TakeoutProp>d__45))]
		public UniTask<Result> TakeoutProp(uint localPropId, long propId, int sign, Vector3 pos)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x23F3594", Offset = "0x23F3594", VA = "0x23F3594")]
		[AsyncStateMachine(typeof(<TakeoutServer>d__46))]
		private UniTask<Result> TakeoutServer(uint localPropId, long propId, Vector3 pos)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x23F36C0", Offset = "0x23F36C0", VA = "0x23F36C0")]
		[AsyncStateMachine(typeof(<TakeoutLocal>d__47))]
		private UniTask<Result> TakeoutLocal(uint localPropId, long propId, Vector3 pos)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x23F3808", Offset = "0x23F3808", VA = "0x23F3808")]
		public void ClearProps()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x23F390C", Offset = "0x23F390C", VA = "0x23F390C")]
		private void OnClientLoadProp(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x23F46B8", Offset = "0x23F46B8", VA = "0x23F46B8")]
		private void PublishCapChanged()
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x23F4824", Offset = "0x23F4824", VA = "0x23F4824")]
		public int GetPropsPercent()
		{
			return default(int);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x23F47AC", Offset = "0x23F47AC", VA = "0x23F47AC")]
		public int GetPropsCellCapacity()
		{
			return default(int);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x23F491C", Offset = "0x23F491C", VA = "0x23F491C")]
		public int CalcPercent(int current, int count, int n = 2)
		{
			return default(int);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x23F492C", Offset = "0x23F492C", VA = "0x23F492C")]
		private void OnClientLoadPropFail(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x23F4B50", Offset = "0x23F4B50", VA = "0x23F4B50")]
		private void OnGrabObjectCreated(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x23F4F40", Offset = "0x23F4F40", VA = "0x23F4F40")]
		private void OnGrabObjectDestroyed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x23F4FA4", Offset = "0x23F4FA4", VA = "0x23F4FA4")]
		private void OnBeginLoadScene(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x23F5000", Offset = "0x23F5000", VA = "0x23F5000")]
		private void OnFinishLoadScene(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x23F5130", Offset = "0x23F5130", VA = "0x23F5130")]
		private void OnSelectExit(SelectExitEventArgs args)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x23F5780", Offset = "0x23F5780", VA = "0x23F5780")]
		private void OnSelectEnter(SelectEnterEventArgs args)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x23F55F4", Offset = "0x23F55F4", VA = "0x23F55F4")]
		private void ReleaseMultiSelectedPropsOwnership(PropController propController)
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x23F5950", Offset = "0x23F5950", VA = "0x23F5950")]
		[AsyncStateMachine(typeof(<TakeOwnershipOverMultiSelectedProps>d__62))]
		private void TakeOwnershipOverMultiSelectedProps(GameObject interactableObject)
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x23F5A08", Offset = "0x23F5A08", VA = "0x23F5A08")]
		private void OnPropDestroyed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x23F5B1C", Offset = "0x23F5B1C", VA = "0x23F5B1C")]
		private void OnSelectEntered(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x23F5B80", Offset = "0x23F5B80", VA = "0x23F5B80")]
		private void OnSelectExited(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x23F5BE4", Offset = "0x23F5BE4", VA = "0x23F5BE4")]
		private void OnRoomPromptExit(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x23F5BF0", Offset = "0x23F5BF0", VA = "0x23F5BF0")]
		private void OnCharPropColliderCreate(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x23F442C", Offset = "0x23F442C", VA = "0x23F442C")]
		private bool CalculateClosestPos(Collider col, Vector3 pos, Vector3 dir, out Vector3 result)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x23F45D4", Offset = "0x23F45D4", VA = "0x23F45D4")]
		private bool GetClosestPos(CustomGrabInteractable grabInteractable, out Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0x23F5C8C", Offset = "0x23F5C8C", VA = "0x23F5C8C")]
		public Vector3 CalcSpawnPos(Vector3 pos, Vector3 dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x23F5C9C", Offset = "0x23F5C9C", VA = "0x23F5C9C")]
		public void AddPropInfo(long id, string authorId, string name, string thumbnail, bool longGrab)
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x23F5DD0", Offset = "0x23F5DD0", VA = "0x23F5DD0")]
		public PropInfo GetPropInfo(long id)
		{
			return default(PropInfo);
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0x23F5E74", Offset = "0x23F5E74", VA = "0x23F5E74")]
		public int GetPropCount()
		{
			return default(int);
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0x23F5F04", Offset = "0x23F5F04", VA = "0x23F5F04")]
		public long[] GetProps()
		{
			return null;
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0x23F603C", Offset = "0x23F603C", VA = "0x23F603C")]
		public PropInfo[] GetPropsSorted()
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0x23F6454", Offset = "0x23F6454", VA = "0x23F6454")]
		[AsyncStateMachine(typeof(<CalculatePropCellCapacity>d__77))]
		public UniTaskVoid CalculatePropCellCapacity(long propId, Action<int, int> callback)
		{
			return default(UniTaskVoid);
		}
	}
	[Token(Token = "0x20002FC")]
	public class PropsRecycleCollider : MonoBehaviour
	{
		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<bool> OnRecycleEnter;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<long> OnRecycled;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<long> OnRecycleFailed;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action OnRecycleExit;

		[Token(Token = "0x4001271")]
		private const float HOLD_DURATION = 0f;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private XRBaseInteractor _leftInteractor;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private XRBaseInteractor _rightInteractor;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _currentRecycleHand;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PropController _currentRecycleProp;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isEnter;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _duration;

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x28F6B20", Offset = "0x28F6B20", VA = "0x28F6B20")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x28F6BA8", Offset = "0x28F6BA8", VA = "0x28F6BA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x28F6CE4", Offset = "0x28F6CE4", VA = "0x28F6CE4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x28F6E88", Offset = "0x28F6E88", VA = "0x28F6E88")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x28F7228", Offset = "0x28F7228", VA = "0x28F7228")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x28F72F8", Offset = "0x28F72F8", VA = "0x28F72F8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x28F7060", Offset = "0x28F7060", VA = "0x28F7060")]
		private PropController PerformInteractor(XRBaseInteractor interactor)
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x28F6E28", Offset = "0x28F6E28", VA = "0x28F6E28")]
		public void RecycleExit()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x28F7390", Offset = "0x28F7390", VA = "0x28F7390")]
		private void OnPropSelectExited(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x28F75EC", Offset = "0x28F75EC", VA = "0x28F75EC")]
		private void OnPropDestroyed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x28F76C8", Offset = "0x28F76C8", VA = "0x28F76C8")]
		public PropsRecycleCollider()
		{
		}
	}
}
namespace ByteDance.Picoverse.Multiplayer
{
	[Token(Token = "0x20002FD")]
	public class DevOpsController : MonoBehaviour
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x28F76D0", Offset = "0x28F76D0", VA = "0x28F76D0")]
		public DevOpsController()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public enum DevOpsRecycleType : byte
	{
		[Token(Token = "0x4001279")]
		Soft = 1,
		[Token(Token = "0x400127A")]
		Force
	}
	[Serializable]
	[Token(Token = "0x20002FF")]
	public class DevOpsRecycleRequest
	{
		[Token(Token = "0x1700010C")]
		public string Version
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x28F76D8", Offset = "0x28F76D8", VA = "0x28F76D8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x28F76E0", Offset = "0x28F76E0", VA = "0x28F76E0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public byte RecycleType
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x28F76E8", Offset = "0x28F76E8", VA = "0x28F76E8")]
			[CompilerGenerated]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x28F76F0", Offset = "0x28F76F0", VA = "0x28F76F0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0x28F76F8", Offset = "0x28F76F8", VA = "0x28F76F8")]
		public DevOpsRecycleRequest()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000300")]
	public class DevOpsRecycleResponse
	{
		[Token(Token = "0x1700010E")]
		public bool Success
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x28F7700", Offset = "0x28F7700", VA = "0x28F7700")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x28F7708", Offset = "0x28F7708", VA = "0x28F7708")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public string Reason
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x28F7714", Offset = "0x28F7714", VA = "0x28F7714")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60011F3")]
			[Address(RVA = "0x28F771C", Offset = "0x28F771C", VA = "0x28F771C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x28F7724", Offset = "0x28F7724", VA = "0x28F7724")]
		public DevOpsRecycleResponse()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[DefaultExecutionOrder(-100000)]
	public class FileLogger : MonoBehaviour
	{
		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly StringBuilder StringBuilder;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _fileName;

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x28F772C", Offset = "0x28F772C", VA = "0x28F772C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x28F79F4", Offset = "0x28F79F4", VA = "0x28F79F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x28F7A70", Offset = "0x28F7A70", VA = "0x28F7A70")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x28F7B70", Offset = "0x28F7B70", VA = "0x28F7B70")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x28F7B7C", Offset = "0x28F7B7C", VA = "0x28F7B7C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x28F7800", Offset = "0x28F7800", VA = "0x28F7800")]
		private void CheckFolder()
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x28F7A7C", Offset = "0x28F7A7C", VA = "0x28F7A7C")]
		private void Save()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x28F7B80", Offset = "0x28F7B80", VA = "0x28F7B80")]
		private static void OnLogMessagesReceived(string condition, string stacktrace, LogType type)
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x28F7C20", Offset = "0x28F7C20", VA = "0x28F7C20")]
		private static string StripHtmlTags(string source)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x28F7CBC", Offset = "0x28F7CBC", VA = "0x28F7CBC")]
		public FileLogger()
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class PropNetworkBehaviour : NetworkBehaviour
	{
		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NetworkVariable<long> PropId;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NetworkVariable<uint> PropLocalUid;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PropNetworkManager propNetworkManager;

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x28F7D48", Offset = "0x28F7D48", VA = "0x28F7D48", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x28F7FEC", Offset = "0x28F7FEC", VA = "0x28F7FEC", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x28F7E80", Offset = "0x28F7E80", VA = "0x28F7E80")]
		private void LoadProp()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x28F8060", Offset = "0x28F8060", VA = "0x28F8060")]
		private void DestroyProp()
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x28F8BB0", Offset = "0x28F8BB0", VA = "0x28F8BB0")]
		private void SyncPropTransformData()
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x28F8C74", Offset = "0x28F8C74", VA = "0x28F8C74")]
		[ServerRpc(RequireOwnership = false)]
		private void SyncPropTransformServerRpc(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x28F8DD8", Offset = "0x28F8DD8", VA = "0x28F8DD8")]
		[ClientRpc]
		private void SyncPropTransformClientRpc(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x28F8F80", Offset = "0x28F8F80", VA = "0x28F8F80")]
		public PropNetworkBehaviour()
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x28F91C8", Offset = "0x28F91C8", VA = "0x28F91C8")]
		private static void __rpc_handler_333341469(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x28F9308", Offset = "0x28F9308", VA = "0x28F9308")]
		private static void __rpc_handler_3379458455(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x28F9448", Offset = "0x28F9448", VA = "0x28F9448", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000303")]
	public class PropNetworkManager : NetworkBehaviour
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000304")]
		[CompilerGenerated]
		private struct <CheckPropDownloadQueue>d__32 : IAsyncStateMachine
		{
			[Token(Token = "0x4001292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PropNetworkManager <>4__this;

			[Token(Token = "0x4001295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PropConfigDownloadTask <task>5__2;

			[Token(Token = "0x4001296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001236")]
			[Address(RVA = "0x28FD680", Offset = "0x28FD680", VA = "0x28FD680", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x28FDD40", Offset = "0x28FDD40", VA = "0x28FDD40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000305")]
		[CompilerGenerated]
		private struct <ClientDownloadingPropAsync>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x4001297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PropNetworkManager <>4__this;

			[Token(Token = "0x400129A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long propId;

			[Token(Token = "0x400129B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CancellationToken <cancelToken>5__2;

			[Token(Token = "0x400129C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6001238")]
			[Address(RVA = "0x28FDD4C", Offset = "0x28FDD4C", VA = "0x28FDD4C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001239")]
			[Address(RVA = "0x28FEB08", Offset = "0x28FEB08", VA = "0x28FEB08", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000306")]
		[CompilerGenerated]
		private struct <TakeOutPropByNet>d__36 : IAsyncStateMachine
		{
			[Token(Token = "0x400129D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400129E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x400129F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long propId;

			[Token(Token = "0x40012A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PropNetworkManager <>4__this;

			[Token(Token = "0x40012A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public uint propLocalUid;

			[Token(Token = "0x40012A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 position;

			[Token(Token = "0x40012A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Quaternion rotation;

			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x600123A")]
			[Address(RVA = "0x28FEB14", Offset = "0x28FEB14", VA = "0x28FEB14", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600123B")]
			[Address(RVA = "0x28FF3BC", Offset = "0x28FF3BC", VA = "0x28FF3BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000307")]
		[CompilerGenerated]
		private struct <TakeOutPropServer>d__38 : IAsyncStateMachine
		{
			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerRpcParams param;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public long propId;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public PropNetworkManager <>4__this;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public uint propLocalUid;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 position;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Quaternion rotation;

			[Token(Token = "0x40012AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private ClientRpcParams <clientRpcParams>5__2;

			[Token(Token = "0x40012AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x600123C")]
			[Address(RVA = "0x28FF414", Offset = "0x28FF414", VA = "0x28FF414", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600123D")]
			[Address(RVA = "0x29012F8", Offset = "0x29012F8", VA = "0x29012F8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject PropNetworkObejct;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NetworkList<NetworkPropBriefInfo> NetworkPropBriefInfoList;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PropNetworkManager _instance;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<long> _propConfigDownloading;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly Queue<PropConfigDownloadTask> _propConfigDownloadingQueue;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Dictionary<long, CancellationTokenSource> _loadingPropCancelSources;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int maxDownloadInParallel;

		[Token(Token = "0x400128E")]
		public const int MaxVolumeSingleProp = 100;

		[Token(Token = "0x400128F")]
		public const int MaxUserVolumeProp = 10;

		[Token(Token = "0x4001290")]
		public const int MaxRoomVolumeProp = 100;

		[Token(Token = "0x4001291")]
		private const int SEED = 9949;

		[Token(Token = "0x17000110")]
		public Dictionary<long, PropConfigDetail> PropConfigDetails
		{
			[Token(Token = "0x600120C")]
			[Address(RVA = "0x28F9488", Offset = "0x28F9488", VA = "0x28F9488")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600120D")]
			[Address(RVA = "0x28F9490", Offset = "0x28F9490", VA = "0x28F9490")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public Dictionary<ulong, long> NetworkObjectId2PropId
		{
			[Token(Token = "0x600120E")]
			[Address(RVA = "0x28F9498", Offset = "0x28F9498", VA = "0x28F9498")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600120F")]
			[Address(RVA = "0x28F94A0", Offset = "0x28F94A0", VA = "0x28F94A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000112")]
		public static PropNetworkManager Instance
		{
			[Token(Token = "0x6001210")]
			[Address(RVA = "0x28F94A8", Offset = "0x28F94A8", VA = "0x28F94A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		public bool CheckSign
		{
			[Token(Token = "0x6001211")]
			[Address(RVA = "0x28F9500", Offset = "0x28F9500", VA = "0x28F9500")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001212")]
			[Address(RVA = "0x28F9508", Offset = "0x28F9508", VA = "0x28F9508")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x28F9514", Offset = "0x28F9514", VA = "0x28F9514")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x28F95E4", Offset = "0x28F95E4", VA = "0x28F95E4", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x28F9FA0", Offset = "0x28F9FA0", VA = "0x28F9FA0")]
		public void OnPropDestroy(ulong networkObjectId, GameObject propGO)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x28FA27C", Offset = "0x28FA27C", VA = "0x28FA27C")]
		private void OnClientDisconnected(ulong clientId)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x28FA44C", Offset = "0x28FA44C", VA = "0x28FA44C", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x28F9854", Offset = "0x28F9854", VA = "0x28F9854")]
		private void CheckNewPropConfig(NetworkListEvent<NetworkPropBriefInfo> changeEvent)
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x28FAD34", Offset = "0x28FAD34", VA = "0x28FAD34")]
		private void loadingNewPropConfig(List<long> waitingDownloadList)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x28FB008", Offset = "0x28FB008", VA = "0x28FB008")]
		[AsyncStateMachine(typeof(<CheckPropDownloadQueue>d__32))]
		private void CheckPropDownloadQueue()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x28FB0C0", Offset = "0x28FB0C0", VA = "0x28FB0C0")]
		[AsyncStateMachine(typeof(<ClientDownloadingPropAsync>d__33))]
		private UniTask ClientDownloadingPropAsync(long propId)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x28FA854", Offset = "0x28FA854", VA = "0x28FA854")]
		[ServerRpc(RequireOwnership = false)]
		private void applyNetworkShowServerRpc(ulong[] networkObjectIds, [Optional] ServerRpcParams param)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x28F821C", Offset = "0x28F821C", VA = "0x28F821C")]
		public void ClientLoadProp(ulong networkObjectId)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x28FB228", Offset = "0x28FB228", VA = "0x28FB228")]
		[AsyncStateMachine(typeof(<TakeOutPropByNet>d__36))]
		public UniTask<bool> TakeOutPropByNet(long propId, uint propLocalUid, Vector3 position, Quaternion rotation)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x28FB350", Offset = "0x28FB350", VA = "0x28FB350")]
		[ServerRpc(RequireOwnership = false)]
		private void TakeOutPropServerRpc(long propId, uint propLocalUid, Vector3 position, Quaternion rotation, [Optional] ServerRpcParams param)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0x28FB550", Offset = "0x28FB550", VA = "0x28FB550")]
		[AsyncStateMachine(typeof(<TakeOutPropServer>d__38))]
		private void TakeOutPropServer(long propId, uint propLocalUid, Vector3 position, Quaternion rotation, [Optional] ServerRpcParams param)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0x28FB67C", Offset = "0x28FB67C", VA = "0x28FB67C")]
		private bool checkPropSign(long userId, long propId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x28FB684", Offset = "0x28FB684", VA = "0x28FB684")]
		protected bool HandleCheckObjectVisibility(ulong clientId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x28FB68C", Offset = "0x28FB68C", VA = "0x28FB68C")]
		[ClientRpc]
		private void TakeOutPropFailClientRpc(long propId, uint propLocalUid, int code, [Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0x28FBA60", Offset = "0x28FBA60", VA = "0x28FBA60")]
		public bool TakeBackPropByNet(ulong networkObjectId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0x28FBD9C", Offset = "0x28FBD9C", VA = "0x28FBD9C")]
		private bool tryGetParentNetworkObject(NetworkObject networkObject, out NetworkObject parentNetworkObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x28FBE94", Offset = "0x28FBE94", VA = "0x28FBE94")]
		[ServerRpc(RequireOwnership = false)]
		private void TakeBackPropServerRpc(ulong networkObjectId, [Optional] ServerRpcParams param)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x28FC56C", Offset = "0x28FC56C", VA = "0x28FC56C")]
		[ClientRpc]
		private void TakeBackPropFailClientRpc(ulong networkObjectId, int code, [Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0x28FC83C", Offset = "0x28FC83C", VA = "0x28FC83C")]
		public int GetNetworkCapacityInBuilderScene()
		{
			return default(int);
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0x28FC904", Offset = "0x28FC904", VA = "0x28FC904")]
		public int GetNetworkCapacityInProp(PropController prop)
		{
			return default(int);
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0x28FCA68", Offset = "0x28FCA68", VA = "0x28FCA68")]
		public int GetPropCount()
		{
			return default(int);
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0x28FCAB8", Offset = "0x28FCAB8", VA = "0x28FCAB8")]
		public int GetPropDynamicCount()
		{
			return default(int);
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0x28FCAC0", Offset = "0x28FCAC0", VA = "0x28FCAC0")]
		public int GetPropPolyCount()
		{
			return default(int);
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0x28FCAC8", Offset = "0x28FCAC8", VA = "0x28FCAC8")]
		public int GetPropCapacityCount()
		{
			return default(int);
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0x28FCB38", Offset = "0x28FCB38", VA = "0x28FCB38")]
		public PropNetworkManager()
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0x28FCF80", Offset = "0x28FCF80", VA = "0x28FCF80")]
		private static void __rpc_handler_1452299244(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0x28FD0B8", Offset = "0x28FD0B8", VA = "0x28FD0B8")]
		private static void __rpc_handler_3179605232(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0x28FD264", Offset = "0x28FD264", VA = "0x28FD264")]
		private static void __rpc_handler_3085871671(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0x28FD3F0", Offset = "0x28FD3F0", VA = "0x28FD3F0")]
		private static void __rpc_handler_643239537(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0x28FD4E0", Offset = "0x28FD4E0", VA = "0x28FD4E0")]
		private static void __rpc_handler_1112094658(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0x28FD640", Offset = "0x28FD640", VA = "0x28FD640", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000308")]
	public class PropConfigDetail
	{
		[Token(Token = "0x17000114")]
		public string Config
		{
			[Token(Token = "0x600123E")]
			[Address(RVA = "0x2901304", Offset = "0x2901304", VA = "0x2901304")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600123F")]
			[Address(RVA = "0x290130C", Offset = "0x290130C", VA = "0x290130C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public string PropName
		{
			[Token(Token = "0x6001240")]
			[Address(RVA = "0x2901314", Offset = "0x2901314", VA = "0x2901314")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public string AssetName
		{
			[Token(Token = "0x6001241")]
			[Address(RVA = "0x290131C", Offset = "0x290131C", VA = "0x290131C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001242")]
			[Address(RVA = "0x2901324", Offset = "0x2901324", VA = "0x2901324")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0x28FEAA8", Offset = "0x28FEAA8", VA = "0x28FEAA8")]
		public PropConfigDetail(string config, string propName, string assetName)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0x290132C", Offset = "0x290132C", VA = "0x290132C")]
		public void UpdateConfig(string config)
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class PropConfigDownloadTask
	{
		[Token(Token = "0x17000117")]
		public long PropId
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0x2901334", Offset = "0x2901334", VA = "0x2901334")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0x28FAFE0", Offset = "0x28FAFE0", VA = "0x28FAFE0")]
		public PropConfigDownloadTask(long propId)
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class GrabbablePropResetBehaviour : PropResetBehaviourBase
	{
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _firstGrabbedOccurs;

		[Token(Token = "0x17000118")]
		protected override bool ItemGrabbedByPlayer
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0x290133C", Offset = "0x290133C", VA = "0x290133C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0x29013A0", Offset = "0x29013A0", VA = "0x29013A0", Slot = "6")]
		protected override bool CanInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0x2901590", Offset = "0x2901590", VA = "0x2901590", Slot = "7")]
		protected override bool CanCountdownStart()
		{
			return default(bool);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0x29015C8", Offset = "0x29015C8", VA = "0x29015C8", Slot = "8")]
		protected override bool CanCountdownStop()
		{
			return default(bool);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0x29015E4", Offset = "0x29015E4", VA = "0x29015E4", Slot = "9")]
		protected override void HandlePropResetAction()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0x29016B4", Offset = "0x29016B4", VA = "0x29016B4")]
		public GrabbablePropResetBehaviour()
		{
		}
	}
	[Token(Token = "0x200030B")]
	public class PhysicsPropResetBehaviour : PropResetBehaviourBase
	{
		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _firstGrabbedOccurs;

		[Token(Token = "0x17000119")]
		protected override bool ItemGrabbedByPlayer
		{
			[Token(Token = "0x600124D")]
			[Address(RVA = "0x29016D4", Offset = "0x29016D4", VA = "0x29016D4", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0x29016F0", Offset = "0x29016F0", VA = "0x29016F0", Slot = "6")]
		protected override bool CanInitialize()
		{
			return default(bool);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0x2901814", Offset = "0x2901814", VA = "0x2901814", Slot = "7")]
		protected override bool CanCountdownStart()
		{
			return default(bool);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0x290186C", Offset = "0x290186C", VA = "0x290186C", Slot = "8")]
		protected override bool CanCountdownStop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0x29018BC", Offset = "0x29018BC", VA = "0x29018BC", Slot = "9")]
		protected override void HandlePropResetAction()
		{
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0x2901A0C", Offset = "0x2901A0C", VA = "0x2901A0C")]
		public PhysicsPropResetBehaviour()
		{
		}
	}
	[Token(Token = "0x200030C")]
	public abstract class PropResetBehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Pose initialPose;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected CustomGrabInteractable grabInteractable;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected NetworkGrabbableItem networkGrabbableItem;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected NetworkPhysicsEntity physicsEntity;

		[Token(Token = "0x40012BA")]
		private const float ValidDistanceOfOriginalPosition = 0.1f;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _distanceCondition;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _idleTimer;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _resetPerformed;

		[Token(Token = "0x1700011A")]
		protected bool IsSceneObject
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0x2901A1C", Offset = "0x2901A1C", VA = "0x2901A1C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001254")]
			[Address(RVA = "0x2901A24", Offset = "0x2901A24", VA = "0x2901A24")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		protected bool Initialized
		{
			[Token(Token = "0x6001255")]
			[Address(RVA = "0x2901A30", Offset = "0x2901A30", VA = "0x2901A30")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001256")]
			[Address(RVA = "0x2901A38", Offset = "0x2901A38", VA = "0x2901A38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		protected bool OnlineMode
		{
			[Token(Token = "0x6001257")]
			[Address(RVA = "0x2901A44", Offset = "0x2901A44", VA = "0x2901A44")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x2901A4C", Offset = "0x2901A4C", VA = "0x2901A4C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		protected bool OfflineMode
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0x290145C", Offset = "0x290145C", VA = "0x290145C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011E")]
		public bool IsClient
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0x290146C", Offset = "0x290146C", VA = "0x290146C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011F")]
		protected bool CountdownStarted
		{
			[Token(Token = "0x600125B")]
			[Address(RVA = "0x2901A58", Offset = "0x2901A58", VA = "0x2901A58")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125C")]
			[Address(RVA = "0x2901A60", Offset = "0x2901A60", VA = "0x2901A60")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000120")]
		protected float ResetTime
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x2901A6C", Offset = "0x2901A6C", VA = "0x2901A6C")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x2901A74", Offset = "0x2901A74", VA = "0x2901A74")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000121")]
		protected abstract bool ItemGrabbedByPlayer
		{
			[Token(Token = "0x600125F")]
			get;
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x2901A7C", Offset = "0x2901A7C", VA = "0x2901A7C", Slot = "5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x2901B20", Offset = "0x2901B20", VA = "0x2901B20")]
		private void Start()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0x2901DF0", Offset = "0x2901DF0", VA = "0x2901DF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0x2901F28", Offset = "0x2901F28", VA = "0x2901F28")]
		private void Update()
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0x29020D0", Offset = "0x29020D0", VA = "0x29020D0")]
		private void OnItemGrabbed(SelectEnterEventArgs arg0)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0x29020F0", Offset = "0x29020F0", VA = "0x29020F0")]
		private void OnItemReleased(SelectExitEventArgs arg0)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0x2901F90", Offset = "0x2901F90", VA = "0x2901F90")]
		private void CheckInitializing()
		{
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0x2902068", Offset = "0x2902068", VA = "0x2902068")]
		private void HandleCountDown()
		{
		}

		[Token(Token = "0x6001268")]
		protected abstract bool CanInitialize();

		[Token(Token = "0x6001269")]
		protected abstract bool CanCountdownStart();

		[Token(Token = "0x600126A")]
		protected abstract bool CanCountdownStop();

		[Token(Token = "0x600126B")]
		[Address(RVA = "0x29016B0", Offset = "0x29016B0", VA = "0x29016B0", Slot = "9")]
		protected virtual void HandlePropResetAction()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x2902000", Offset = "0x2902000", VA = "0x2902000")]
		private void CheckCountdownStart()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x2902034", Offset = "0x2902034", VA = "0x2902034")]
		private void CheckCountdownStop()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x2902238", Offset = "0x2902238", VA = "0x2902238")]
		private void StartResetCountdown()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x29020E0", Offset = "0x29020E0", VA = "0x29020E0")]
		private void StopResetCountDown()
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x2902110", Offset = "0x2902110", VA = "0x2902110")]
		private void RecordInitialTransformPose()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x2902160", Offset = "0x2902160", VA = "0x2902160")]
		private void ResetToInitialPose()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x2902248", Offset = "0x2902248", VA = "0x2902248")]
		public void SetCountdown(float countdown)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x29016C4", Offset = "0x29016C4", VA = "0x29016C4")]
		protected PropResetBehaviourBase()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public class RoomCharacterCreationTask
	{
		[Token(Token = "0x17000122")]
		public UserProfile Profile
		{
			[Token(Token = "0x6001274")]
			[Address(RVA = "0x2902250", Offset = "0x2902250", VA = "0x2902250")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		public Vector3 SpawnPosition
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0x2902258", Offset = "0x2902258", VA = "0x2902258")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000124")]
		public Vector3 SpawnAngle
		{
			[Token(Token = "0x6001276")]
			[Address(RVA = "0x2902264", Offset = "0x2902264", VA = "0x2902264")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x2902270", Offset = "0x2902270", VA = "0x2902270")]
		public RoomCharacterCreationTask(UserProfile profile, Vector3 spawnPosition, Vector3 spawnAngle)
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class HeartbeatInfo
	{
		[Token(Token = "0x17000125")]
		public ulong ClientId
		{
			[Token(Token = "0x6001278")]
			[Address(RVA = "0x29022E0", Offset = "0x29022E0", VA = "0x29022E0")]
			[CompilerGenerated]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000126")]
		public long JoinTick
		{
			[Token(Token = "0x6001279")]
			[Address(RVA = "0x29022E8", Offset = "0x29022E8", VA = "0x29022E8")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600127A")]
			[Address(RVA = "0x29022F0", Offset = "0x29022F0", VA = "0x29022F0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public long LastBeatTick
		{
			[Token(Token = "0x600127B")]
			[Address(RVA = "0x29022F8", Offset = "0x29022F8", VA = "0x29022F8")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600127C")]
			[Address(RVA = "0x2902300", Offset = "0x2902300", VA = "0x2902300")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000128")]
		public long ResponseTick
		{
			[Token(Token = "0x600127D")]
			[Address(RVA = "0x2902308", Offset = "0x2902308", VA = "0x2902308")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600127E")]
			[Address(RVA = "0x2902310", Offset = "0x2902310", VA = "0x2902310")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public bool Initialized
		{
			[Token(Token = "0x600127F")]
			[Address(RVA = "0x2902318", Offset = "0x2902318", VA = "0x2902318")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001280")]
			[Address(RVA = "0x2902320", Offset = "0x2902320", VA = "0x2902320")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public int NoResponseMilliseconds
		{
			[Token(Token = "0x6001281")]
			[Address(RVA = "0x290232C", Offset = "0x290232C", VA = "0x290232C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012B")]
		public int ElapsedMilliseconds
		{
			[Token(Token = "0x6001282")]
			[Address(RVA = "0x2902404", Offset = "0x2902404", VA = "0x2902404")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0x29024DC", Offset = "0x29024DC", VA = "0x29024DC")]
		public HeartbeatInfo(ulong clientId)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0x2902504", Offset = "0x2902504", VA = "0x2902504")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0x2902604", Offset = "0x2902604", VA = "0x2902604")]
		public void Beat()
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0x290258C", Offset = "0x290258C", VA = "0x290258C")]
		public void Response()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class RoomHeartbeatManager : NetworkBehaviour
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ushort heartbeatIntervalMs;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private ushort heartbeatTimeoutMs;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Dictionary<ulong, HeartbeatInfo> _heartbeatInfos;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly Dictionary<ulong, ClientRpcParams> _privateMessageParameters;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly List<ulong> _timeoutClients;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly List<ulong> _disconnectedClientToRemove;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly RoomNetworkStatusDriver _roomNetworkStatusDriver;

		[Token(Token = "0x14000003")]
		public static event Action<ulong> HeartbeatEvent
		{
			[Token(Token = "0x6001287")]
			[Address(RVA = "0x290267C", Offset = "0x290267C", VA = "0x290267C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001288")]
			[Address(RVA = "0x290276C", Offset = "0x290276C", VA = "0x290276C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000004")]
		public static event Action<ulong, int> HeartbeatPauseEvent
		{
			[Token(Token = "0x6001289")]
			[Address(RVA = "0x290285C", Offset = "0x290285C", VA = "0x290285C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600128A")]
			[Address(RVA = "0x2902950", Offset = "0x2902950", VA = "0x2902950")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public static event Action<ulong> HeartbeatResumeEvent
		{
			[Token(Token = "0x600128B")]
			[Address(RVA = "0x2902A44", Offset = "0x2902A44", VA = "0x2902A44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600128C")]
			[Address(RVA = "0x2902B38", Offset = "0x2902B38", VA = "0x2902B38")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0x2902C2C", Offset = "0x2902C2C", VA = "0x2902C2C", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0x2902D64", Offset = "0x2902D64", VA = "0x2902D64", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0x2902D68", Offset = "0x2902D68", VA = "0x2902D68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0x2902D84", Offset = "0x2902D84", VA = "0x2902D84")]
		private new void OnDestroy()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0x2902DA0", Offset = "0x2902DA0", VA = "0x2902DA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0x2902EA0", Offset = "0x2902EA0", VA = "0x2902EA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0x2902FF8", Offset = "0x2902FF8", VA = "0x2902FF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0x2903AF8", Offset = "0x2903AF8", VA = "0x2903AF8")]
		private void RemoveDisconnectedClientInfo()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0x2903BE0", Offset = "0x2903BE0", VA = "0x2903BE0")]
		[ClientRpc]
		private void PingConfirmationClientRpc([Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0x290382C", Offset = "0x290382C", VA = "0x290382C")]
		[ClientRpc]
		private void PingClientRpc([Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x2903FAC", Offset = "0x2903FAC", VA = "0x2903FAC")]
		[ServerRpc(RequireOwnership = false)]
		private void PongServerRpc([Optional] ServerRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x2902C44", Offset = "0x2902C44", VA = "0x2902C44")]
		[ServerRpc(RequireOwnership = false)]
		private void InitializeServerRpc([Optional] ServerRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x29039BC", Offset = "0x29039BC", VA = "0x29039BC")]
		private void FireBeatEvent(ulong clientId)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x29040A8", Offset = "0x29040A8", VA = "0x29040A8")]
		private void FireResumeEvent(ulong clientId)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x2903604", Offset = "0x2903604", VA = "0x2903604")]
		private void FirePauseEvent(ulong clientId)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x29041E4", Offset = "0x29041E4", VA = "0x29041E4")]
		private void OnClientConnected(ulong clientId)
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x29043D8", Offset = "0x29043D8", VA = "0x29043D8")]
		private void OnClientDisconnected(ulong clientId)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x2903CF0", Offset = "0x2903CF0", VA = "0x2903CF0")]
		private void SharedHandleHeartbeatResponse(ulong clientId)
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x2904458", Offset = "0x2904458", VA = "0x2904458")]
		private void SimulateHeartbeatPaused()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x2904488", Offset = "0x2904488", VA = "0x2904488")]
		private void SimulateHeartbeatResumed()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x29044B8", Offset = "0x29044B8", VA = "0x29044B8")]
		public RoomHeartbeatManager()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x2904868", Offset = "0x2904868", VA = "0x2904868")]
		private static void __rpc_handler_3282692796(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x2904954", Offset = "0x2904954", VA = "0x2904954")]
		private static void __rpc_handler_618366893(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x2904A40", Offset = "0x2904A40", VA = "0x2904A40")]
		private static void __rpc_handler_1398960384(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x2904AF4", Offset = "0x2904AF4", VA = "0x2904AF4")]
		private static void __rpc_handler_1997684855(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x2904BA8", Offset = "0x2904BA8", VA = "0x2904BA8", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000310")]
	public class RoomManager : NetworkBehaviour
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000311")]
		[CompilerGenerated]
		private struct <ShutdownClientDueToHeartBeat>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float countdown;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CancellationToken token;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float timeout;

			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001301")]
			[Address(RVA = "0x27661E8", Offset = "0x27661E8", VA = "0x27661E8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001302")]
			[Address(RVA = "0x2766748", Offset = "0x2766748", VA = "0x2766748", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000313")]
		[CompilerGenerated]
		private struct <ClientLoadCharacterAttempt>d__44 : IAsyncStateMachine
		{
			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomPlayerInfo roomPlayerInfo;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private ulong <clientId>5__2;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private bool <foundPlayer>5__3;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
			private Vector3 <spawnPosition>5__4;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private Vector3 <spawnAngle>5__5;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private NetworkPlayer <networkPlayer>5__6;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<long>.Awaiter <>u__2;

			[Token(Token = "0x400130D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<UserProfile>.Awaiter <>u__3;

			[Token(Token = "0x6001307")]
			[Address(RVA = "0x27667DC", Offset = "0x27667DC", VA = "0x27667DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x2768030", Offset = "0x2768030", VA = "0x2768030", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000314")]
		[CompilerGenerated]
		private struct <ClientLoadHome>d__47 : IAsyncStateMachine
		{
			[Token(Token = "0x400130E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x276803C", Offset = "0x276803C", VA = "0x276803C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x27681B4", Offset = "0x27681B4", VA = "0x27681B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000315")]
		[CompilerGenerated]
		private struct <ClientUpdateUserConfig>d__48 : IAsyncStateMachine
		{
			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long userID;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter<bool> <>u__2;

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x27681C0", Offset = "0x27681C0", VA = "0x27681C0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600130C")]
			[Address(RVA = "0x2768E50", Offset = "0x2768E50", VA = "0x2768E50", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000316")]
		[CompilerGenerated]
		private struct <ClientLoadWorldScene>d__49 : IAsyncStateMachine
		{
			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public WorldMapV2 worldMap;

			[Token(Token = "0x4001319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<WorldElement> mapElements;

			[Token(Token = "0x400131A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public RoomManager <>4__this;

			[Token(Token = "0x400131B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SceneInitArgs <sceneInitArgs>5__2;

			[Token(Token = "0x400131C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Result <result>5__3;

			[Token(Token = "0x400131D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x600130D")]
			[Address(RVA = "0x2768E5C", Offset = "0x2768E5C", VA = "0x2768E5C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x27698D0", Offset = "0x27698D0", VA = "0x27698D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000317")]
		[CompilerGenerated]
		private struct <ClientCheckCharacterCreationQueue>d__50 : IAsyncStateMachine
		{
			[Token(Token = "0x400131E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400131F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RoomCharacterCreationTask <task>5__2;

			[Token(Token = "0x4001322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600130F")]
			[Address(RVA = "0x27698DC", Offset = "0x27698DC", VA = "0x27698DC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x2769F54", Offset = "0x2769F54", VA = "0x2769F54", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000318")]
		[CompilerGenerated]
		private struct <ClientLoadCharacterAsync>d__51 : IAsyncStateMachine
		{
			[Token(Token = "0x4001323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4001325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UserProfile userProfile;

			[Token(Token = "0x4001327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 position;

			[Token(Token = "0x4001328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 angle;

			[Token(Token = "0x4001329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CancellationToken <cancelToken>5__2;

			[Token(Token = "0x400132A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private long <uid>5__3;

			[Token(Token = "0x400132B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x400132C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x2769F60", Offset = "0x2769F60", VA = "0x2769F60", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x276AC84", Offset = "0x276AC84", VA = "0x276AC84", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000319")]
		[CompilerGenerated]
		private struct <ClientTryFetchUserProfileByIdAsync>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x400132D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400132E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UserProfile> <>t__builder;

			[Token(Token = "0x400132F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long userId;

			[Token(Token = "0x4001331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x276AC90", Offset = "0x276AC90", VA = "0x276AC90", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001314")]
			[Address(RVA = "0x276B404", Offset = "0x276B404", VA = "0x276B404", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200031A")]
		[CompilerGenerated]
		private struct <ClientCreateAndBindCharacterRigAsync>d__53 : IAsyncStateMachine
		{
			[Token(Token = "0x4001332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CancellationToken cancelToken;

			[Token(Token = "0x4001335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IArgs args;

			[Token(Token = "0x4001336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x276B45C", Offset = "0x276B45C", VA = "0x276B45C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001316")]
			[Address(RVA = "0x276BB44", Offset = "0x276BB44", VA = "0x276BB44", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200031B")]
		[CompilerGenerated]
		private struct <OnClientRoomMemberChanged>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x4001337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NetworkListEvent<RoomPlayerInfo> changeEvent;

			[Token(Token = "0x400133A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public RoomManager <>4__this;

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x276BB9C", Offset = "0x276BB9C", VA = "0x276BB9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x276CB7C", Offset = "0x276CB7C", VA = "0x276CB7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200031C")]
		[CompilerGenerated]
		private struct <ServerCalculatePlayerSpawnArea>d__74 : IAsyncStateMachine
		{
			[Token(Token = "0x400133B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400133C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400133D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomManager <>4__this;

			[Token(Token = "0x400133E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UserProfile userProfile;

			[Token(Token = "0x400133F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ulong clientId;

			[Token(Token = "0x4001340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x276CB88", Offset = "0x276CB88", VA = "0x276CB88", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x276D348", Offset = "0x276D348", VA = "0x276D348", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200031D")]
		[CompilerGenerated]
		private struct <ServerUserExitRoomAsync>d__75 : IAsyncStateMachine
		{
			[Token(Token = "0x4001341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long userId;

			[Token(Token = "0x4001345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UserProfile <userProfile>5__2;

			[Token(Token = "0x4001346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<UserProfile>.Awaiter <>u__1;

			[Token(Token = "0x4001347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UniTask<Com.Bytedance.Picoverse.Protobuf.Code.ErrorCode>.Awaiter <>u__2;

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x276D354", Offset = "0x276D354", VA = "0x276D354", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x276E028", Offset = "0x276E028", VA = "0x276E028", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200031E")]
		[CompilerGenerated]
		private struct <ServerUserExitRoomAsync>d__76 : IAsyncStateMachine
		{
			[Token(Token = "0x4001348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RoomManager <>4__this;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long userId;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ulong clientId;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public UserProfile userProfile;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x600131D")]
			[Address(RVA = "0x276E080", Offset = "0x276E080", VA = "0x276E080", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x276E5CC", Offset = "0x276E5CC", VA = "0x276E5CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200031F")]
		[CompilerGenerated]
		private struct <ServerConfirmPreEnterPlayer>d__77 : IAsyncStateMachine
		{
			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ulong clientId;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private RoomPlayerInfo <player>5__2;

			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private long <userId>5__3;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x600131F")]
			[Address(RVA = "0x276E5D8", Offset = "0x276E5D8", VA = "0x276E5D8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001320")]
			[Address(RVA = "0x276F1A0", Offset = "0x276F1A0", VA = "0x276F1A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000320")]
		[CompilerGenerated]
		private struct <ServerIdleRestartAction>d__81 : IAsyncStateMachine
		{
			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CancellationToken token;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <idleTimeout>5__2;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x6001321")]
			[Address(RVA = "0x276F1AC", Offset = "0x276F1AC", VA = "0x276F1AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001322")]
			[Address(RVA = "0x276F87C", Offset = "0x276F87C", VA = "0x276F87C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000321")]
		[CompilerGenerated]
		private struct <OnClientDisconnected>d__85 : IAsyncStateMachine
		{
			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomManager <>4__this;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ulong clientId;

			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private long <userId>5__2;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<UserProfile>.Awaiter <>u__1;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x6001323")]
			[Address(RVA = "0x276F888", Offset = "0x276F888", VA = "0x276F888", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001324")]
			[Address(RVA = "0x2770608", Offset = "0x2770608", VA = "0x2770608", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000322")]
		[CompilerGenerated]
		private struct <GetUserProfileAsync>d__105 : IAsyncStateMachine
		{
			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UserProfile> <>t__builder;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long userId;

			[Token(Token = "0x4001367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<UserProfile>.Awaiter <>u__1;

			[Token(Token = "0x6001325")]
			[Address(RVA = "0x2770614", Offset = "0x2770614", VA = "0x2770614", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001326")]
			[Address(RVA = "0x2770B18", Offset = "0x2770B18", VA = "0x2770B18", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000323")]
		[CompilerGenerated]
		private struct <GetUserProfileAsync>d__106 : IAsyncStateMachine
		{
			[Token(Token = "0x4001368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UserProfile> <>t__builder;

			[Token(Token = "0x400136A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomManager <>4__this;

			[Token(Token = "0x400136B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ulong clientId;

			[Token(Token = "0x400136C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<UserProfile>.Awaiter <>u__1;

			[Token(Token = "0x6001327")]
			[Address(RVA = "0x2770B70", Offset = "0x2770B70", VA = "0x2770B70", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001328")]
			[Address(RVA = "0x2771074", Offset = "0x2771074", VA = "0x2771074", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000324")]
		[CompilerGenerated]
		private struct <GetUserProfileAsync>d__107 : IAsyncStateMachine
		{
			[Token(Token = "0x400136D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400136E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<UserProfile> <>t__builder;

			[Token(Token = "0x400136F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomPlayerInfo playerInfo;

			[Token(Token = "0x4001371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private UniTask<UserProfile>.Awaiter <>u__1;

			[Token(Token = "0x6001329")]
			[Address(RVA = "0x27710CC", Offset = "0x27710CC", VA = "0x27710CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600132A")]
			[Address(RVA = "0x2771770", Offset = "0x2771770", VA = "0x2771770", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000326")]
		[CompilerGenerated]
		private struct <ElementUpdate>d__114 : IAsyncStateMachine
		{
			[Token(Token = "0x4001373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RoomManager <>4__this;

			[Token(Token = "0x4001376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public WorldElementChangePushReq elementData;

			[Token(Token = "0x4001377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SceneController <controller>5__2;

			[Token(Token = "0x4001378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600132D")]
			[Address(RVA = "0x27717E4", Offset = "0x27717E4", VA = "0x27717E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600132E")]
			[Address(RVA = "0x2771FA0", Offset = "0x2771FA0", VA = "0x2771FA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40012D4")]
		private const int MaxWindowSizeSeconds = 50;

		[Token(Token = "0x40012D5")]
		private const float PingIntervalSeconds = 0.5f;

		[Token(Token = "0x40012D6")]
		private const float MaxWindowSize = 100f;

		[Token(Token = "0x40012D7")]
		private const int RequestRetryIntervalMilliseconds = 500;

		[Token(Token = "0x40012D8")]
		private const float TrackRoomUsersEventIntervalSeconds = 15f;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private long _roomSpawnTimeStamp;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _lastTrackRoomUsersTime;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _lastTrackPingTime;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _lastPingTime;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RoomManager _instance;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int maxCharacterLoadInParallel;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float trackPingIntervalInSeconds;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int disconnectBufferMs;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly List<long> _clientLoadingUsers;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly List<long> _clientLoadedUsers;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Dictionary<long, CancellationTokenSource> _loadingUserCancelSources;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly Queue<RoomCharacterCreationTask> _characterCreationQueue;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private long _localUserId;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private uint _pingId;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private readonly Dictionary<uint, float> _pingHistoryStartTimes;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ExponentialMovingCalculator _roomRtt;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ExponentialMovingCalculator _utpRtt;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MapInfoManager _mapManager;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly Dictionary<ulong, RoomPlayerInfo> _preEnterPlayers;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly Dictionary<long, Vector3> _userSpawnPosition;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly Dictionary<long, Vector3> _userSpawnAngle;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly Dictionary<long, long> _invitedUsers;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private CancellationTokenSource _idleTimeoutCancellationSource;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly Dictionary<long, UniTaskCompletionSource> _spawnPointDistributedSources;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private readonly Dictionary<long, UniTaskCompletionSource> _playerLoadedSceneSignals;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int _maxSendQueueSize;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly Dictionary<ulong, bool> _connectedClientIds;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private NetworkSystem _networkSystem;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private CancellationTokenSource _heartBeatPausedCancelSignal;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private readonly NetworkVariable<long> _roomIdNetworkVariable;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly Dictionary<RoomPlayerInfo, UserProfile> _profileLookupTable;

		[Token(Token = "0x1700012C")]
		public long RoomId
		{
			[Token(Token = "0x60012E3")]
			[Address(RVA = "0x2906404", Offset = "0x2906404", VA = "0x2906404")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700012D")]
		public NetworkList<RoomPlayerInfo> InRoomPlayers
		{
			[Token(Token = "0x60012E4")]
			[Address(RVA = "0x290CF00", Offset = "0x290CF00", VA = "0x290CF00")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0x290CF08", Offset = "0x290CF08", VA = "0x290CF08")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public int RoomUsersCount
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0x290CF18", Offset = "0x290CF18", VA = "0x290CF18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012F")]
		public float ShutdownCountdownMs
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0x290D054", Offset = "0x290D054", VA = "0x290D054")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x2904BE8", Offset = "0x2904BE8", VA = "0x2904BE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x2904DDC", Offset = "0x2904DDC", VA = "0x2904DDC", Slot = "11")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x2904EE4", Offset = "0x2904EE4", VA = "0x2904EE4", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x29058F8", Offset = "0x29058F8", VA = "0x29058F8", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x2906424", Offset = "0x2906424", VA = "0x2906424")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x29052A4", Offset = "0x29052A4", VA = "0x29052A4")]
		private void RegisterCallbacks()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x2905F38", Offset = "0x2905F38", VA = "0x2905F38")]
		private void UnregisterCallbacks()
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x2906B24", Offset = "0x2906B24", VA = "0x2906B24")]
		private static string Stringify(UserProfile userProfile)
		{
			return null;
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x2906BC4", Offset = "0x2906BC4", VA = "0x2906BC4")]
		private static string Stringify(RoomPlayerInfo roomPlayerInfo)
		{
			return null;
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x2906D00", Offset = "0x2906D00", VA = "0x2906D00")]
		[AsyncStateMachine(typeof(<ShutdownClientDueToHeartBeat>d__22))]
		private static void ShutdownClientDueToHeartBeat(float countdown, float timeout, CancellationToken token)
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x2906DD4", Offset = "0x2906DD4", VA = "0x2906DD4")]
		private void ServerTrackRoomUsersEvent()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x2907390", Offset = "0x2907390", VA = "0x2907390")]
		private void ClientTrackRttEvent()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x2907ADC", Offset = "0x2907ADC", VA = "0x2907ADC")]
		[ServerRpc(RequireOwnership = false)]
		private void PingServerRPC(uint pingId, [Optional] ServerRpcParams serverParams)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0x2907D48", Offset = "0x2907D48", VA = "0x2907D48")]
		[ClientRpc]
		private void PongClientRPC(uint pingId, [Optional] ClientRpcParams clientParams)
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0x2907F18", Offset = "0x2907F18", VA = "0x2907F18")]
		[ClientRpc]
		private void UserEnteredRoomClientRpc(ulong clientId, long userId, [Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0x290821C", Offset = "0x290821C", VA = "0x290821C")]
		[ClientRpc]
		private void UserExitedRoomClientRpc(long userId, [Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0x2908494", Offset = "0x2908494", VA = "0x2908494")]
		[ClientRpc]
		private void SyncLocalPlayerSpawnPointClientRpc(Vector3 spawnPosition, Vector3 spawnAngle, [Optional] ClientRpcParams clientRpcParams)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x290892C", Offset = "0x290892C", VA = "0x290892C")]
		[ClientRpc]
		private void SyncMapInfoClientRpc(EngineServerInitResp mapData, [Optional] ClientRpcParams clientRpcParams)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x2908C48", Offset = "0x2908C48", VA = "0x2908C48")]
		[ClientRpc]
		private void SyncElementUpdateClientRpc(WorldElementChangePushReq elementData)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0x2908ED4", Offset = "0x2908ED4", VA = "0x2908ED4")]
		[ClientRpc]
		private void UserBodyUpdateClientRpc(long userID)
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0x2909138", Offset = "0x2909138", VA = "0x2909138")]
		[ClientRpc]
		private void RequestKickUserClientRpc(string reason, KickUserType type, [Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0x290695C", Offset = "0x290695C", VA = "0x290695C")]
		private void ClientUpdateActions()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0x29094EC", Offset = "0x29094EC", VA = "0x29094EC")]
		[AsyncStateMachine(typeof(<ClientLoadCharacterAttempt>d__44))]
		private void ClientLoadCharacterAttempt(RoomPlayerInfo roomPlayerInfo)
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0x29095E0", Offset = "0x29095E0", VA = "0x29095E0")]
		private void ClientDestroyCharacter(long userId)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0x29098E0", Offset = "0x29098E0", VA = "0x29098E0")]
		private void ClientDestroyAllCharacter()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0x2909460", Offset = "0x2909460", VA = "0x2909460")]
		[AsyncStateMachine(typeof(<ClientLoadHome>d__47))]
		private static void ClientLoadHome()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x2909070", Offset = "0x2909070", VA = "0x2909070")]
		[AsyncStateMachine(typeof(<ClientUpdateUserConfig>d__48))]
		private void ClientUpdateUserConfig(long userID)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x2908B3C", Offset = "0x2908B3C", VA = "0x2908B3C")]
		[AsyncStateMachine(typeof(<ClientLoadWorldScene>d__49))]
		private void ClientLoadWorldScene(WorldMapV2 worldMap, List<WorldElement> mapElements)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x2909B48", Offset = "0x2909B48", VA = "0x2909B48")]
		[AsyncStateMachine(typeof(<ClientCheckCharacterCreationQueue>d__50))]
		private void ClientCheckCharacterCreationQueue()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x2909C00", Offset = "0x2909C00", VA = "0x2909C00")]
		[AsyncStateMachine(typeof(<ClientLoadCharacterAsync>d__51))]
		private UniTask ClientLoadCharacterAsync(UserProfile userProfile, Vector3 position, Vector3 angle)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x2909DD8", Offset = "0x2909DD8", VA = "0x2909DD8")]
		[AsyncStateMachine(typeof(<ClientTryFetchUserProfileByIdAsync>d__52))]
		private UniTask<UserProfile> ClientTryFetchUserProfileByIdAsync(long userId)
		{
			return default(UniTask<UserProfile>);
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0x2909ED8", Offset = "0x2909ED8", VA = "0x2909ED8")]
		[AsyncStateMachine(typeof(<ClientCreateAndBindCharacterRigAsync>d__53))]
		public UniTask<bool> ClientCreateAndBindCharacterRigAsync(IArgs args, CancellationToken cancelToken)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0x2909FCC", Offset = "0x2909FCC", VA = "0x2909FCC")]
		private void ClientResetRoomServerProperties()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0x2905724", Offset = "0x2905724", VA = "0x2905724")]
		[AsyncStateMachine(typeof(<OnClientRoomMemberChanged>d__55))]
		private void OnClientRoomMemberChanged(NetworkListEvent<RoomPlayerInfo> changeEvent)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0x290A21C", Offset = "0x290A21C", VA = "0x290A21C")]
		private void OnUserConfigSave(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0x290A4AC", Offset = "0x290A4AC", VA = "0x290A4AC")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0x290A4EC", Offset = "0x290A4EC", VA = "0x290A4EC")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0x290A52C", Offset = "0x290A52C", VA = "0x290A52C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x2906460", Offset = "0x2906460", VA = "0x2906460")]
		private void ServerUpdateActions()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x290A624", Offset = "0x290A624", VA = "0x290A624")]
		[Preserve]
		public void ServerKickUsers(long[] kickUsers, string reason, KickUserType type)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x290AD94", Offset = "0x290AD94", VA = "0x290AD94")]
		public void ServerSendSpawnArea(ulong clientId)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x290B140", Offset = "0x290B140", VA = "0x290B140")]
		private void ServerUserEnterRoom(ulong clientId)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x290B380", Offset = "0x290B380", VA = "0x290B380")]
		[AsyncStateMachine(typeof(<ServerCalculatePlayerSpawnArea>d__74))]
		private void ServerCalculatePlayerSpawnArea(ulong clientId, UserProfile userProfile)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x290B544", Offset = "0x290B544", VA = "0x290B544")]
		[AsyncStateMachine(typeof(<ServerUserExitRoomAsync>d__75))]
		private UniTask<bool> ServerUserExitRoomAsync(long userId)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x290B62C", Offset = "0x290B62C", VA = "0x290B62C")]
		[AsyncStateMachine(typeof(<ServerUserExitRoomAsync>d__76))]
		private UniTask ServerUserExitRoomAsync(ulong clientId, UserProfile userProfile, long userId)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x290B45C", Offset = "0x290B45C", VA = "0x290B45C")]
		[AsyncStateMachine(typeof(<ServerConfirmPreEnterPlayer>d__77))]
		private void ServerConfirmPreEnterPlayer(ulong clientId)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x290B7D4", Offset = "0x290B7D4", VA = "0x290B7D4")]
		private void ServerRemoveUserClientFromRoom(long userId)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x2905814", Offset = "0x2905814", VA = "0x2905814")]
		private void ServerStartRestartTimer()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x290BCDC", Offset = "0x290BCDC", VA = "0x290BCDC")]
		private void ServerStopRestartTimer()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x290BC24", Offset = "0x290BC24", VA = "0x290BC24")]
		[AsyncStateMachine(typeof(<ServerIdleRestartAction>d__81))]
		private void ServerIdleRestartAction(CancellationToken token)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x290BCF0", Offset = "0x290BCF0", VA = "0x290BCF0")]
		private void ServerSyncMapInfoToClient(ulong clientId)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x290BEBC", Offset = "0x290BEBC", VA = "0x290BEBC")]
		private bool ServerGetSpawnSpotByInvitor(long invitorId, ref Vector3 pos, ref Vector3 angle)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x290C5FC", Offset = "0x290C5FC", VA = "0x290C5FC")]
		private void OnClientConnected(ulong clientId)
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x290C720", Offset = "0x290C720", VA = "0x290C720")]
		[AsyncStateMachine(typeof(<OnClientDisconnected>d__85))]
		private void OnClientDisconnected(ulong clientId)
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x290C7E4", Offset = "0x290C7E4", VA = "0x290C7E4")]
		private void OnSpawnDistributeLocation(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x290CAB0", Offset = "0x290CAB0", VA = "0x290CAB0")]
		private void OnElementUpdate(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x290CB28", Offset = "0x290CB28", VA = "0x290CB28")]
		private void OnDataNodeChanged(string dataPath, DataChangeArgs changeArgs)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x290CCC0", Offset = "0x290CCC0", VA = "0x290CCC0")]
		[ServerRpc(RequireOwnership = false)]
		private void PlayerLoadSceneFinishedServerRpc(long localUserId)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x290A2F4", Offset = "0x290A2F4", VA = "0x290A2F4")]
		[ServerRpc(RequireOwnership = false)]
		private void UserBodyUpdateServerRpc(long userID, [Optional] ServerRpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x290D138", Offset = "0x290D138", VA = "0x290D138")]
		[AsyncStateMachine(typeof(<GetUserProfileAsync>d__105))]
		public UniTask<UserProfile> GetUserProfileAsync(long userId)
		{
			return default(UniTask<UserProfile>);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x290D238", Offset = "0x290D238", VA = "0x290D238")]
		[AsyncStateMachine(typeof(<GetUserProfileAsync>d__106))]
		public UniTask<UserProfile> GetUserProfileAsync(ulong clientId)
		{
			return default(UniTask<UserProfile>);
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x290D338", Offset = "0x290D338", VA = "0x290D338")]
		[AsyncStateMachine(typeof(<GetUserProfileAsync>d__107))]
		public UniTask<UserProfile> GetUserProfileAsync(RoomPlayerInfo playerInfo)
		{
			return default(UniTask<UserProfile>);
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x290118C", Offset = "0x290118C", VA = "0x290118C")]
		public bool TryGetFirstPlayer(ulong clientId, out RoomPlayerInfo playerInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x290C484", Offset = "0x290C484", VA = "0x290C484")]
		public bool TryGetFirstPlayer(long userId, out RoomPlayerInfo playerInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x290AB40", Offset = "0x290AB40", VA = "0x290AB40")]
		public List<RoomPlayerInfo> GetPlayers(long userId)
		{
			return null;
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x290D468", Offset = "0x290D468", VA = "0x290D468")]
		private void OnHeartbeatResumed(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x290D60C", Offset = "0x290D60C", VA = "0x290D60C")]
		private void OnHeartbeatPaused(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x290D888", Offset = "0x290D888", VA = "0x290D888")]
		public List<RoomPlayerInfo> ServerGetInRoomUsers()
		{
			return null;
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x2908DFC", Offset = "0x2908DFC", VA = "0x2908DFC")]
		[AsyncStateMachine(typeof(<ElementUpdate>d__114))]
		private void ElementUpdate(WorldElementChangePushReq elementData)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x290DBF4", Offset = "0x290DBF4", VA = "0x290DBF4")]
		public static void ApprovalCheck(NetworkManager.ConnectionApprovalRequest request, NetworkManager.ConnectionApprovalResponse response)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x290E37C", Offset = "0x290E37C", VA = "0x290E37C")]
		public RoomManager()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x290EC6C", Offset = "0x290EC6C", VA = "0x290EC6C")]
		private static void __rpc_handler_991229297(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x290ED5C", Offset = "0x290ED5C", VA = "0x290ED5C")]
		private static void __rpc_handler_2874370340(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x290EE84", Offset = "0x290EE84", VA = "0x290EE84")]
		private static void __rpc_handler_2607715992(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x290EFDC", Offset = "0x290EFDC", VA = "0x290EFDC")]
		private static void __rpc_handler_192247027(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x290F104", Offset = "0x290F104", VA = "0x290F104")]
		private static void __rpc_handler_2114164931(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x290F280", Offset = "0x290F280", VA = "0x290F280")]
		private static void __rpc_handler_796281067(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x290F3D0", Offset = "0x290F3D0", VA = "0x290F3D0")]
		private static void __rpc_handler_2144195566(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x290F4E0", Offset = "0x290F4E0", VA = "0x290F4E0")]
		private static void __rpc_handler_2304928747(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x290F5C4", Offset = "0x290F5C4", VA = "0x290F5C4")]
		private static void __rpc_handler_1007966053(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x290F748", Offset = "0x290F748", VA = "0x290F748")]
		private static void __rpc_handler_1743871789(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x290F82C", Offset = "0x290F82C", VA = "0x290F82C")]
		private static void __rpc_handler_3427183257(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x290F91C", Offset = "0x290F91C", VA = "0x290F91C", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000327")]
	public struct RoomPlayerInfo : INetworkSerializable, IEquatable<RoomPlayerInfo>
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong _clientId;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private long _spawnId;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long _userId;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private NetworkString64 _nickName;

		[Token(Token = "0x17000130")]
		public ulong ClientId
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x2771FAC", Offset = "0x2771FAC", VA = "0x2771FAC")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000131")]
		public long SpawnId
		{
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x2771FB4", Offset = "0x2771FB4", VA = "0x2771FB4")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000132")]
		public long UserId
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x2771FBC", Offset = "0x2771FBC", VA = "0x2771FBC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000133")]
		public NetworkString64 NickName
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x2771FC4", Offset = "0x2771FC4", VA = "0x2771FC4")]
			get
			{
				return default(NetworkString64);
			}
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x2771FE0", Offset = "0x2771FE0", VA = "0x2771FE0")]
		public RoomPlayerInfo(long spawnId, ulong clientId, UserProfile userProfile)
		{
		}

		[Token(Token = "0x6001334")]
		public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x2772064", Offset = "0x2772064", VA = "0x2772064", Slot = "5")]
		public bool Equals(RoomPlayerInfo other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x27720A0", Offset = "0x27720A0", VA = "0x27720A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0x2772138", Offset = "0x2772138", VA = "0x2772138", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0x27721BC", Offset = "0x27721BC", VA = "0x27721BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000328")]
	public record RoomStateDataModel : IDataModel
	{
		[Token(Token = "0x17000134")]
		protected override Type EqualityContract
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x27722E0", Offset = "0x27722E0", VA = "0x27722E0", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public long MapId
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x277234C", Offset = "0x277234C", VA = "0x277234C")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x2772354", Offset = "0x2772354", VA = "0x2772354")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public long RoomId
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x277235C", Offset = "0x277235C", VA = "0x277235C")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x2772364", Offset = "0x2772364", VA = "0x2772364")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x277236C", Offset = "0x277236C", VA = "0x277236C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x2772484", Offset = "0x2772484", VA = "0x2772484", Slot = "6")]
		protected override bool PrintMembers(StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x2772644", Offset = "0x2772644", VA = "0x2772644", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x2772780", Offset = "0x2772780", VA = "0x2772780", Slot = "10")]
		public virtual bool Equals(RoomStateDataModel? other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x27728A0", Offset = "0x27728A0", VA = "0x27728A0")]
		protected RoomStateDataModel(RoomStateDataModel original)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x27728D4", Offset = "0x27728D4", VA = "0x27728D4")]
		public RoomStateDataModel()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public static class ServerActions
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200032A")]
		[CompilerGenerated]
		private struct <ServerLoadTargetScene>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x400137F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<int> <>t__builder;

			[Token(Token = "0x4001381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<WorldElement> <mapElements>5__2;

			[Token(Token = "0x4001382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SceneData <sceneData>5__3;

			[Token(Token = "0x4001383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <resultCode>5__4;

			[Token(Token = "0x4001384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4001385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ResultWithObject <dataResult>5__5;

			[Token(Token = "0x4001386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private UniTask<bool>.Awaiter <>u__2;

			[Token(Token = "0x4001387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private UniTask<List<string>>.Awaiter <>u__3;

			[Token(Token = "0x6001359")]
			[Address(RVA = "0x2773F24", Offset = "0x2773F24", VA = "0x2773F24", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600135A")]
			[Address(RVA = "0x277531C", Offset = "0x277531C", VA = "0x277531C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200032B")]
		[CompilerGenerated]
		private struct <KickClient>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4001388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400138A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong clientId;

			[Token(Token = "0x400138B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private YieldAwaitable.Awaiter <>u__1;

			[Token(Token = "0x600135B")]
			[Address(RVA = "0x2775374", Offset = "0x2775374", VA = "0x2775374", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600135C")]
			[Address(RVA = "0x27756A0", Offset = "0x27756A0", VA = "0x27756A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200032C")]
		[CompilerGenerated]
		private struct <InitializeServerSettings>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x400138C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400138D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x400138E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CommonConfigElement commonConfig;

			[Token(Token = "0x400138F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NetworkConfigElement networkConfig;

			[Token(Token = "0x4001390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask<CommonConfigSnapshot>.Awaiter <>u__1;

			[Token(Token = "0x600135D")]
			[Address(RVA = "0x27756AC", Offset = "0x27756AC", VA = "0x27756AC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600135E")]
			[Address(RVA = "0x277651C", Offset = "0x277651C", VA = "0x277651C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200032D")]
		[CompilerGenerated]
		private struct <LoadSceneAsync>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x4001391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x4001393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sceneName;

			[Token(Token = "0x4001394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600135F")]
			[Address(RVA = "0x2776528", Offset = "0x2776528", VA = "0x2776528", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001360")]
			[Address(RVA = "0x2776A44", Offset = "0x2776A44", VA = "0x2776A44", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200032E")]
		[CompilerGenerated]
		private struct <LogEvent>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string eventName;

			[Token(Token = "0x4001398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public JsonObject jsonObject;

			[Token(Token = "0x4001399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6001361")]
			[Address(RVA = "0x2776A9C", Offset = "0x2776A9C", VA = "0x2776A9C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001362")]
			[Address(RVA = "0x2777054", Offset = "0x2777054", VA = "0x2777054", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x27728DC", Offset = "0x27728DC", VA = "0x27728DC")]
		public static void SetMapInfo(WorldMapV2 mockMapData, IEnumerable<WorldElement> mockMapElements)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x27729B8", Offset = "0x27729B8", VA = "0x27729B8")]
		[AsyncStateMachine(typeof(<ServerLoadTargetScene>d__1))]
		public static UniTask<int> ServerLoadTargetScene()
		{
			return default(UniTask<int>);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x2772A5C", Offset = "0x2772A5C", VA = "0x2772A5C")]
		public static bool StartUnityServer(string listenAddress, ushort port)
		{
			return default(bool);
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x2772B40", Offset = "0x2772B40", VA = "0x2772B40")]
		public static void StopUnityServer()
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x2772C74", Offset = "0x2772C74", VA = "0x2772C74")]
		public static void SendKickRoomResponseToServer(IEnumerable<long> kickedUsers)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x2772EE0", Offset = "0x2772EE0", VA = "0x2772EE0")]
		[AsyncStateMachine(typeof(<KickClient>d__5))]
		public static UniTask KickClient(ulong clientId)
		{
			return default(UniTask);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x2773030", Offset = "0x2773030", VA = "0x2773030")]
		public static List<long> KickAllClients(string reason, KickUserType type)
		{
			return null;
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x27732D8", Offset = "0x27732D8", VA = "0x27732D8")]
		public static void InstantiatePreloadPrefabs(CommonConfigElement mapConfig)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x2773664", Offset = "0x2773664", VA = "0x2773664")]
		public static CommonConfigElement FetchMapCommonConfig()
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x2773764", Offset = "0x2773764", VA = "0x2773764")]
		public static NetworkConfigElement FetchMapNetworkConfig()
		{
			return null;
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x2773864", Offset = "0x2773864", VA = "0x2773864")]
		[AsyncStateMachine(typeof(<InitializeServerSettings>d__10))]
		public static UniTask InitializeServerSettings(CommonConfigElement commonConfig, NetworkConfigElement networkConfig)
		{
			return default(UniTask);
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x27739E0", Offset = "0x27739E0", VA = "0x27739E0")]
		[AsyncStateMachine(typeof(<LoadSceneAsync>d__11))]
		private static UniTask<bool> LoadSceneAsync(string sceneName)
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x276DEE0", Offset = "0x276DEE0", VA = "0x276DEE0")]
		public static void LogEvent(RoomSequenceResultCode resultCode, long userId, [Optional] string message)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x27704DC", Offset = "0x27704DC", VA = "0x27704DC")]
		public static void LogEvent(RoomSequenceResultCode resultCode, [Optional] string message)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x2773AA4", Offset = "0x2773AA4", VA = "0x2773AA4")]
		[AsyncStateMachine(typeof(<LogEvent>d__14))]
		public static void LogEvent(string eventName, JsonObject jsonObject)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x2773B7C", Offset = "0x2773B7C", VA = "0x2773B7C")]
		public static void OnReceiveServerStateSyncPush(int code, string message, long ackId, IMessage msg)
		{
		}
	}
	[Token(Token = "0x200032F")]
	public enum ServerStateCode : byte
	{
		[Token(Token = "0x400139B")]
		BootState = 0,
		[Token(Token = "0x400139C")]
		InitialState = 10,
		[Token(Token = "0x400139D")]
		StandbyState = 20,
		[Token(Token = "0x400139E")]
		SetupMockServerState = 21,
		[Token(Token = "0x400139F")]
		LoadingDutyState = 30,
		[Token(Token = "0x40013A0")]
		OnDutyState = 40,
		[Token(Token = "0x40013A1")]
		ReleaseDutyState = 60,
		[Token(Token = "0x40013A2")]
		TerminatingState = 70
	}
	[Serializable]
	[Token(Token = "0x2000330")]
	public abstract class ServerState : IState
	{
		[Token(Token = "0x17000137")]
		public float EnterTime
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0x2777060", Offset = "0x2777060", VA = "0x2777060")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001364")]
			[Address(RVA = "0x2777068", Offset = "0x2777068", VA = "0x2777068")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public float ExitTime
		{
			[Token(Token = "0x6001365")]
			[Address(RVA = "0x2777070", Offset = "0x2777070", VA = "0x2777070")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001366")]
			[Address(RVA = "0x2777078", Offset = "0x2777078", VA = "0x2777078")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public float ElapsedTime
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0x2777080", Offset = "0x2777080", VA = "0x2777080")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001368")]
			[Address(RVA = "0x2777088", Offset = "0x2777088", VA = "0x2777088")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700013A")]
		public abstract byte StateCode
		{
			[Token(Token = "0x6001369")]
			get;
		}

		[Token(Token = "0x1700013B")]
		public ServerStateCode StateCodeEnum
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x2773F18", Offset = "0x2773F18", VA = "0x2773F18")]
			get
			{
				return default(ServerStateCode);
			}
		}

		[Token(Token = "0x1700013C")]
		public ServerStateController Controller
		{
			[Token(Token = "0x600136B")]
			[Address(RVA = "0x2777090", Offset = "0x2777090", VA = "0x2777090")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x2777098", Offset = "0x2777098", VA = "0x2777098")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public NetworkSystem NetworkSystem
		{
			[Token(Token = "0x600136D")]
			[Address(RVA = "0x27770A0", Offset = "0x27770A0", VA = "0x27770A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x27770BC", Offset = "0x27770BC", VA = "0x27770BC", Slot = "4")]
		public void OnEnter()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x27770EC", Offset = "0x27770EC", VA = "0x27770EC", Slot = "5")]
		public void OnExit()
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0x277711C", Offset = "0x277711C", VA = "0x277711C", Slot = "8")]
		public virtual void OnEnterState()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0x2777120", Offset = "0x2777120", VA = "0x2777120", Slot = "9")]
		public virtual void OnExitState()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x2777124", Offset = "0x2777124", VA = "0x2777124", Slot = "10")]
		public virtual void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x2777128", Offset = "0x2777128", VA = "0x2777128", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x2777204", Offset = "0x2777204", VA = "0x2777204")]
		protected ServerState()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public static class RoomDataPath
	{
		[Token(Token = "0x40013A7")]
		public const string PreviousDutyMapId = "PreviousDutyMapId";

		[Token(Token = "0x40013A8")]
		public const string DutyAckIdKey = "DutyAckIdKey";

		[Token(Token = "0x40013A9")]
		public const string DutyMapIdKey = "DutyMapIdKey";

		[Token(Token = "0x40013AA")]
		public const string DutyRoomIdKey = "DutyRoomIdKey";

		[Token(Token = "0x40013AB")]
		public const string KickRoomAckIdKey = "KickRoomAckIdKey";

		[Token(Token = "0x40013AC")]
		public const string RecycleDutyAckKey = "RecycleDutyAckKey";

		[Token(Token = "0x40013AD")]
		public const string KickRoomTypeKey = "KickRoomTypeKey";

		[Token(Token = "0x40013AE")]
		public const string KickRoomReasonKey = "KickRoomReasonKey";

		[Token(Token = "0x40013AF")]
		public const string KickRoomCountdownKey = "KickRoomCountdownKey";

		[Token(Token = "0x40013B0")]
		public const string CommonRecycleKey = "CommonRecycleKey";

		[Token(Token = "0x40013B1")]
		public const string RecycleByDevOpsKey = "RecycleByDevOpsKey";
	}
	[Token(Token = "0x2000332")]
	public struct ServerStateChangeEventArgs
	{
		[Token(Token = "0x1700013E")]
		public readonly ServerState PreviousState
		{
			[Token(Token = "0x6001375")]
			[Address(RVA = "0x277720C", Offset = "0x277720C", VA = "0x277720C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		public readonly ServerState NewState
		{
			[Token(Token = "0x6001376")]
			[Address(RVA = "0x2777214", Offset = "0x2777214", VA = "0x2777214")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x277721C", Offset = "0x277721C", VA = "0x277721C")]
		public ServerStateChangeEventArgs(ServerState previousState, ServerState newState)
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class ServerStateController : SingletonMono<ServerStateController>
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000334")]
		[CompilerGenerated]
		private struct <SendSyncStateRpc>d__75 : IAsyncStateMachine
		{
			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ServerStateController <>4__this;

			[Token(Token = "0x40013CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x40013CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UniTask<ResultWithObject>.Awaiter <>u__2;

			[Token(Token = "0x60013AC")]
			[Address(RVA = "0x27794D4", Offset = "0x27794D4", VA = "0x27794D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013AD")]
			[Address(RVA = "0x277A3A0", Offset = "0x277A3A0", VA = "0x277A3A0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000337")]
		[CompilerGenerated]
		private struct <RegisterConnectionApprovalCallbacks>d__89 : IAsyncStateMachine
		{
			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x60013B5")]
			[Address(RVA = "0x277A5F8", Offset = "0x277A5F8", VA = "0x277A5F8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013B6")]
			[Address(RVA = "0x277AAA0", Offset = "0x277AAA0", VA = "0x277AAA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ServerApp serverApp;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FSM<ServerState> _serverStateFsm;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<byte, ServerState> _stateLookup;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<string, object> _blackboard;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int maxRequestTries;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int loginRetryIntervalMs;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int requestRetryIntervalMs;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		public float defaultSyncStateFrequencyInSeconds;

		[Token(Token = "0x17000140")]
		public NetworkSystem NetworkSystem
		{
			[Token(Token = "0x6001378")]
			[Address(RVA = "0x277724C", Offset = "0x277724C", VA = "0x277724C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x2777254", Offset = "0x2777254", VA = "0x2777254")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public List<ServerState> AllStates
		{
			[Token(Token = "0x600137A")]
			[Address(RVA = "0x277725C", Offset = "0x277725C", VA = "0x277725C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600137B")]
			[Address(RVA = "0x2777264", Offset = "0x2777264", VA = "0x2777264")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public ServerState CurrentState
		{
			[Token(Token = "0x600137C")]
			[Address(RVA = "0x2773ECC", Offset = "0x2773ECC", VA = "0x2773ECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public ServerState PreviousState
		{
			[Token(Token = "0x600137D")]
			[Address(RVA = "0x277726C", Offset = "0x277726C", VA = "0x277726C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600137E")]
			[Address(RVA = "0x2777274", Offset = "0x2777274", VA = "0x2777274")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public float StateElapseTime
		{
			[Token(Token = "0x600137F")]
			[Address(RVA = "0x277727C", Offset = "0x277727C", VA = "0x277727C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000145")]
		public float PreviousStateElapsedTime
		{
			[Token(Token = "0x6001380")]
			[Address(RVA = "0x2777314", Offset = "0x2777314", VA = "0x2777314")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000146")]
		public string IpAddress
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x27774C4", Offset = "0x27774C4", VA = "0x27774C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x27774CC", Offset = "0x27774CC", VA = "0x27774CC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public string PodIpAddress
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x27774D4", Offset = "0x27774D4", VA = "0x27774D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x27774DC", Offset = "0x27774DC", VA = "0x27774DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public string ListenAddress
		{
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x27774E4", Offset = "0x27774E4", VA = "0x27774E4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x27774EC", Offset = "0x27774EC", VA = "0x27774EC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public ushort Port
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x27774F4", Offset = "0x27774F4", VA = "0x27774F4")]
			[CompilerGenerated]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x27774FC", Offset = "0x27774FC", VA = "0x27774FC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public bool IsFixedMapId
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x2777504", Offset = "0x2777504", VA = "0x2777504")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x277750C", Offset = "0x277750C", VA = "0x277750C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public string DigitalCentral
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x2777518", Offset = "0x2777518", VA = "0x2777518")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x2777520", Offset = "0x2777520", VA = "0x2777520")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public string ServerRegion
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x2777528", Offset = "0x2777528", VA = "0x2777528")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x2777530", Offset = "0x2777530", VA = "0x2777530")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public string PodName
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x2777538", Offset = "0x2777538", VA = "0x2777538")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x2777540", Offset = "0x2777540", VA = "0x2777540")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public string NameSpace
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x2777548", Offset = "0x2777548", VA = "0x2777548")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x2777550", Offset = "0x2777550", VA = "0x2777550")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool MockServer
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x2777558", Offset = "0x2777558", VA = "0x2777558")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x2777560", Offset = "0x2777560", VA = "0x2777560")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public string MockMapAsset
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x277756C", Offset = "0x277756C", VA = "0x277756C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x2777574", Offset = "0x2777574", VA = "0x2777574")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000006")]
		public static event Action<ServerStateChangeEventArgs> StateChangeEvent
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0x277732C", Offset = "0x277732C", VA = "0x277732C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001382")]
			[Address(RVA = "0x27773F8", Offset = "0x27773F8", VA = "0x27773F8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0x277757C", Offset = "0x277757C", VA = "0x277757C")]
		private void Start()
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0x277807C", Offset = "0x277807C", VA = "0x277807C")]
		private void UnityServerInitialization()
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x2777F58", Offset = "0x2777F58", VA = "0x2777F58")]
		[AsyncStateMachine(typeof(<SendSyncStateRpc>d__75))]
		private void SendSyncStateRpc()
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x2777868", Offset = "0x2777868", VA = "0x2777868")]
		private void CreateStateInstances()
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x276F758", Offset = "0x276F758", VA = "0x276F758")]
		public void ChangeState(ServerStateCode stateCode)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x277811C", Offset = "0x277811C", VA = "0x277811C")]
		private void ChangeState(byte stateCode)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x2778014", Offset = "0x2778014", VA = "0x2778014")]
		public bool TryGetState(byte stateCode, out ServerState state)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x2778234", Offset = "0x2778234", VA = "0x2778234")]
		public void UpdateSettingsFromArgument()
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x2778E64", Offset = "0x2778E64", VA = "0x2778E64")]
		private void UpdateTransportSettings()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x2778250", Offset = "0x2778250", VA = "0x2778250")]
		private void UpdateMockServerSettings()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x2778578", Offset = "0x2778578", VA = "0x2778578")]
		private void UpdateServerSettings()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x27791D0", Offset = "0x27791D0", VA = "0x27791D0")]
		public bool Remove(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		public bool Set<T>(string key, T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A6")]
		public T Get<T>(string key)
		{
			return (T)null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x2779228", Offset = "0x2779228", VA = "0x2779228")]
		public bool Has(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A8")]
		public bool Has<T>(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x27777CC", Offset = "0x27777CC", VA = "0x27777CC")]
		[AsyncStateMachine(typeof(<RegisterConnectionApprovalCallbacks>d__89))]
		private static void RegisterConnectionApprovalCallbacks()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x2779280", Offset = "0x2779280", VA = "0x2779280")]
		public void RegisterGlobalCallbacks()
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x277936C", Offset = "0x277936C", VA = "0x277936C")]
		public ServerStateController()
		{
		}
	}
	[Token(Token = "0x2000338")]
	public static class SharedActions
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000339")]
		[CompilerGenerated]
		private struct <ApplyCommonConfigElement>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x40013D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<CommonConfigSnapshot> <>t__builder;

			[Token(Token = "0x40013DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CommonConfigElement config;

			[Token(Token = "0x40013DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CommonConfigSnapshot <snapshot>5__2;

			[Token(Token = "0x40013DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string[] <>7__wrap2;

			[Token(Token = "0x40013DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x40013DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <database>5__5;

			[Token(Token = "0x40013DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<ByteDance.AssetManagement.AssetLoadResult<NetworkPrefabDatabase>>.Awaiter <>u__1;

			[Token(Token = "0x60013BB")]
			[Address(RVA = "0x277BC74", Offset = "0x277BC74", VA = "0x277BC74", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60013BC")]
			[Address(RVA = "0x277C830", Offset = "0x277C830", VA = "0x277C830", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x2775D24", Offset = "0x2775D24", VA = "0x2775D24")]
		public static NetworkConfigSnapshot ApplyNetworkConfigElement(NetworkConfigElement config)
		{
			return null;
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x2775C48", Offset = "0x2775C48", VA = "0x2775C48")]
		[AsyncStateMachine(typeof(<ApplyCommonConfigElement>d__1))]
		public static UniTask<CommonConfigSnapshot> ApplyCommonConfigElement(CommonConfigElement config)
		{
			return default(UniTask<CommonConfigSnapshot>);
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x277B140", Offset = "0x277B140", VA = "0x277B140")]
		public static void RollbackMapNetworkConfig(NetworkConfigSnapshot snapshot)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x277B8F8", Offset = "0x277B8F8", VA = "0x277B8F8")]
		public static void RollbackMapCommonConfig(CommonConfigSnapshot snapshot)
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class CommonConfigSnapshot : MapElementConfigSnapshot
	{
		[Token(Token = "0x17000151")]
		public uint TickRate
		{
			[Token(Token = "0x60013BD")]
			[Address(RVA = "0x277BC0C", Offset = "0x277BC0C", VA = "0x277BC0C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60013BE")]
			[Address(RVA = "0x277C7A8", Offset = "0x277C7A8", VA = "0x277C7A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public List<NetworkPrefabDatabase> ChangedNetworkPrefabDatabases
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0x277C950", Offset = "0x277C950", VA = "0x277C950")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x277C724", Offset = "0x277C724", VA = "0x277C724")]
		public CommonConfigSnapshot()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public abstract class MapElementConfigSnapshot
	{
		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly Dictionary<string, object> valueLookup;

		[Token(Token = "0x60013C1")]
		protected T GetValue<T>(string name)
		{
			return (T)null;
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x277C888", Offset = "0x277C888", VA = "0x277C888")]
		protected void SetValue(object value, [Optional][CallerMemberName] string caller)
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0x277B8A0", Offset = "0x277B8A0", VA = "0x277B8A0")]
		public bool Changed(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x277C958", Offset = "0x277C958", VA = "0x277C958")]
		protected MapElementConfigSnapshot()
		{
		}
	}
	[Token(Token = "0x200033C")]
	public class NetworkConfigSnapshot : MapElementConfigSnapshot
	{
		[Token(Token = "0x17000153")]
		public int MaxPacketQueueSize
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x277AB38", Offset = "0x277AB38", VA = "0x277AB38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0x277AAB0", Offset = "0x277AAB0", VA = "0x277AAB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public int MaxPayloadSize
		{
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0x277AC28", Offset = "0x277AC28", VA = "0x277AC28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013C8")]
			[Address(RVA = "0x277ABA0", Offset = "0x277ABA0", VA = "0x277ABA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public int MaxSendQueueSize
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0x277AD18", Offset = "0x277AD18", VA = "0x277AD18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013CA")]
			[Address(RVA = "0x277AC90", Offset = "0x277AC90", VA = "0x277AC90")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public int HeartbeatTimeoutMS
		{
			[Token(Token = "0x60013CB")]
			[Address(RVA = "0x277AE08", Offset = "0x277AE08", VA = "0x277AE08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013CC")]
			[Address(RVA = "0x277AD80", Offset = "0x277AD80", VA = "0x277AD80")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public int ConnectTimeoutMS
		{
			[Token(Token = "0x60013CD")]
			[Address(RVA = "0x277AEF8", Offset = "0x277AEF8", VA = "0x277AEF8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0x277AE70", Offset = "0x277AE70", VA = "0x277AE70")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public int MaxConnectAttempts
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0x277AFE8", Offset = "0x277AFE8", VA = "0x277AFE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0x277AF60", Offset = "0x277AF60", VA = "0x277AF60")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public int DisconnectTimeoutMS
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0x277B0D8", Offset = "0x277B0D8", VA = "0x277B0D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0x277B050", Offset = "0x277B050", VA = "0x277B050")]
			set
			{
			}
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x277AAAC", Offset = "0x277AAAC", VA = "0x277AAAC")]
		public NetworkConfigSnapshot()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class MultiplayerSystem : SystemBase
	{
		[Token(Token = "0x200033E")]
		public class EnterMapProbe
		{
			[Token(Token = "0x200033F")]
			public enum StepState
			{
				[Token(Token = "0x40013F4")]
				empty,
				[Token(Token = "0x40013F5")]
				loadLoadingScene,
				[Token(Token = "0x40013F6")]
				queryRoomServerReq,
				[Token(Token = "0x40013F7")]
				queryRoomServerSuccess,
				[Token(Token = "0x40013F8")]
				queryRoomServerFailed,
				[Token(Token = "0x40013F9")]
				handleUnityServerDutyPush,
				[Token(Token = "0x40013FA")]
				husdpUnityServerInstanceExist,
				[Token(Token = "0x40013FB")]
				husdpNoavailableUnityServerInstance,
				[Token(Token = "0x40013FC")]
				husdpWaitForUnityServerPushRequest,
				[Token(Token = "0x40013FD")]
				husdpUnityServerPushRequestTimeout,
				[Token(Token = "0x40013FE")]
				husdpUsiScheduleStatusOK,
				[Token(Token = "0x40013FF")]
				husdpReceivedDutyPushWithWrongStatus,
				[Token(Token = "0x4001400")]
				husdpUnityServerUnknownScheduleStatus,
				[Token(Token = "0x4001401")]
				husdpSuccess,
				[Token(Token = "0x4001402")]
				husdpFailed,
				[Token(Token = "0x4001403")]
				onRoomServerSecondResponse,
				[Token(Token = "0x4001404")]
				initializeClientMapConfig,
				[Token(Token = "0x4001405")]
				switchUnityServer,
				[Token(Token = "0x4001406")]
				swsConnectToUnityServer,
				[Token(Token = "0x4001407")]
				swsConnectToUnityServerFailed,
				[Token(Token = "0x4001408")]
				swsConnectToUnityServerSuccess,
				[Token(Token = "0x4001409")]
				swsWaitingLoadSceneClientRpcTimeout,
				[Token(Token = "0x400140A")]
				swsWaitingFinishLoadScene,
				[Token(Token = "0x400140B")]
				swsFailed,
				[Token(Token = "0x400140C")]
				resolvedDnsFailed
			}

			[Token(Token = "0x40013EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StepState curStep;

			[Token(Token = "0x40013F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Stopwatch sw;

			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private long preTimeStamp;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int times;

			[Token(Token = "0x6001405")]
			[Address(RVA = "0x2781694", Offset = "0x2781694", VA = "0x2781694")]
			public void Begin(string info)
			{
			}

			[Token(Token = "0x6001406")]
			[Address(RVA = "0x277EEBC", Offset = "0x277EEBC", VA = "0x277EEBC")]
			public void Next(StepState nextStep)
			{
			}

			[Token(Token = "0x6001407")]
			[Address(RVA = "0x2781784", Offset = "0x2781784", VA = "0x2781784")]
			public void End(string info)
			{
			}

			[Token(Token = "0x6001408")]
			[Address(RVA = "0x27818AC", Offset = "0x27818AC", VA = "0x27818AC")]
			public void Info(string info)
			{
			}

			[Token(Token = "0x6001409")]
			[Address(RVA = "0x277ED1C", Offset = "0x277ED1C", VA = "0x277ED1C")]
			public void Error(string error)
			{
			}

			[Token(Token = "0x600140A")]
			[Address(RVA = "0x2781620", Offset = "0x2781620", VA = "0x2781620")]
			public EnterMapProbe()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000340")]
		[CompilerGenerated]
		private struct <CreateCharacter>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x400140D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400140E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400140F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public IArgs args;

			[Token(Token = "0x4001410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private long <userId>5__2;

			[Token(Token = "0x4001412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private Vector3 <spawnPosition>5__3;

			[Token(Token = "0x4001413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
			private Vector3 <spawnAngle>5__4;

			[Token(Token = "0x4001414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UserData <selfData>5__5;

			[Token(Token = "0x4001415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UserData <userData>5__6;

			[Token(Token = "0x4001416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private string <config>5__7;

			[Token(Token = "0x4001417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4001418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask<UGCAvatarData>.Awaiter <>u__2;

			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private TaskAwaiter<bool> <>u__3;

			[Token(Token = "0x600140B")]
			[Address(RVA = "0x27819BC", Offset = "0x27819BC", VA = "0x27819BC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600140C")]
			[Address(RVA = "0x2782F48", Offset = "0x2782F48", VA = "0x2782F48", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000341")]
		[CompilerGenerated]
		private struct <QueryUserdataByProfile>d__22 : IAsyncStateMachine
		{
			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400141C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public IArgs args;

			[Token(Token = "0x400141D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x400141E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UserProfile <userProfile>5__3;

			[Token(Token = "0x400141F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x600140D")]
			[Address(RVA = "0x2782FA0", Offset = "0x2782FA0", VA = "0x2782FA0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600140E")]
			[Address(RVA = "0x2784164", Offset = "0x2784164", VA = "0x2784164", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000342")]
		[CompilerGenerated]
		private struct <GetConfigByID>d__23 : IAsyncStateMachine
		{
			[Token(Token = "0x4001420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private long <id>5__3;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private NewUserAvatarData <newData>5__4;

			[Token(Token = "0x4001427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private string <config>5__5;

			[Token(Token = "0x4001428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private UniTask<Command>.Awaiter <>u__2;

			[Token(Token = "0x4001429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private UniTask<UGCAvatarData>.Awaiter <>u__3;

			[Token(Token = "0x600140F")]
			[Address(RVA = "0x6D95638", Offset = "0x6D95638", VA = "0x6D95638", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001410")]
			[Address(RVA = "0x6D96A10", Offset = "0x6D96A10", VA = "0x6D96A10", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000343")]
		[CompilerGenerated]
		private struct <DownloadPropConfig>d__24 : IAsyncStateMachine
		{
			[Token(Token = "0x400142A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long, bool> args;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private long <propID>5__2;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private ResultWithObject <result>5__3;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private WorldBuilderSystem.PropAmdVoList <propAmd>5__4;

			[Token(Token = "0x4001431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private WorldBuilderSystem.PropExtraData <propExtraData>5__5;

			[Token(Token = "0x6001411")]
			[Address(RVA = "0x6D96A68", Offset = "0x6D96A68", VA = "0x6D96A68", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001412")]
			[Address(RVA = "0x6D97878", Offset = "0x6D97878", VA = "0x6D97878", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000344")]
		[CompilerGenerated]
		private struct <EnterWorldBuilder>d__25 : IAsyncStateMachine
		{
			[Token(Token = "0x4001432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<string, string, string, string, string> args;

			[Token(Token = "0x4001436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6001413")]
			[Address(RVA = "0x6D978D0", Offset = "0x6D978D0", VA = "0x6D978D0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001414")]
			[Address(RVA = "0x6D97FA4", Offset = "0x6D97FA4", VA = "0x6D97FA4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000345")]
		[CompilerGenerated]
		private struct <_EnterWorldBuilder>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x4001437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string, string, string, string, string> args;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private string <thumbnail>5__2;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private string <creatorName>5__3;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private string <creatorThumbnail>5__4;

			[Token(Token = "0x400143D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private string <tips>5__5;

			[Token(Token = "0x400143E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private ResultWithObject <result>5__6;

			[Token(Token = "0x400143F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x4001440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private UniTask<Command>.Awaiter <>u__2;

			[Token(Token = "0x6001415")]
			[Address(RVA = "0x6D97FFC", Offset = "0x6D97FFC", VA = "0x6D97FFC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001416")]
			[Address(RVA = "0x6D98C94", Offset = "0x6D98C94", VA = "0x6D98C94", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000346")]
		[CompilerGenerated]
		private struct <EnterSingleMap>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x4001441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public IArgs args;

			[Token(Token = "0x4001445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6001417")]
			[Address(RVA = "0x6D98CEC", Offset = "0x6D98CEC", VA = "0x6D98CEC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001418")]
			[Address(RVA = "0x6D993B0", Offset = "0x6D993B0", VA = "0x6D993B0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000347")]
		[CompilerGenerated]
		private struct <_EnterSingleMap>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x4001446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public IArgs args;

			[Token(Token = "0x4001449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x400144A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private LocalLoadingArgs <localLoadingArgs>5__2;

			[Token(Token = "0x400144B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private ResultWithObject <result>5__3;

			[Token(Token = "0x400144C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private SceneInitArgs <sceneInitArg>5__4;

			[Token(Token = "0x400144D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x400144E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Result>.Awaiter <>u__2;

			[Token(Token = "0x400144F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			private UniTask<Command>.Awaiter <>u__3;

			[Token(Token = "0x6001419")]
			[Address(RVA = "0x6D99408", Offset = "0x6D99408", VA = "0x6D99408", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600141A")]
			[Address(RVA = "0x6D9A38C", Offset = "0x6D9A38C", VA = "0x6D9A38C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000348")]
		[CompilerGenerated]
		private struct <EnterAvatarStudio>d__30 : IAsyncStateMachine
		{
			[Token(Token = "0x4001450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x4001455")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<Command>.Awaiter <>u__2;

			[Token(Token = "0x600141B")]
			[Address(RVA = "0x6D9A3E4", Offset = "0x6D9A3E4", VA = "0x6D9A3E4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600141C")]
			[Address(RVA = "0x6D9B040", Offset = "0x6D9B040", VA = "0x6D9B040", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000349")]
		[CompilerGenerated]
		private struct <EnterMap>d__31 : IAsyncStateMachine
		{
			[Token(Token = "0x4001456")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001457")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001458")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001459")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<int, long, long, long, string> args;

			[Token(Token = "0x400145A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x600141D")]
			[Address(RVA = "0x6D9B098", Offset = "0x6D9B098", VA = "0x6D9B098", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600141E")]
			[Address(RVA = "0x6D9B76C", Offset = "0x6D9B76C", VA = "0x6D9B76C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200034A")]
		[CompilerGenerated]
		private struct <_EnterMap>d__33 : IAsyncStateMachine
		{
			[Token(Token = "0x400145B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400145C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400145D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<int, long, long, long, string> args;

			[Token(Token = "0x400145E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x400145F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x4001460")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UnityEngine.SceneManagement.Scene <ugcScene>5__3;

			[Token(Token = "0x4001461")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
			private EnterMapType <enterType>5__4;

			[Token(Token = "0x4001462")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private long <roomID>5__5;

			[Token(Token = "0x4001463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private long <mapID>5__6;

			[Token(Token = "0x4001464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private long <portalID>5__7;

			[Token(Token = "0x4001465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private string <roomType>5__8;

			[Token(Token = "0x4001466")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private ProgressCalculator <progress>5__9;

			[Token(Token = "0x4001467")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private GateServerInfo <gateServer>5__10;

			[Token(Token = "0x4001468")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private long <spawnAreaId>5__11;

			[Token(Token = "0x4001469")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x400146A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			private UniTask<ResultWithObject>.Awaiter <>u__2;

			[Token(Token = "0x400146B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			private QueryRoomServerResp <queryRoomServerResp>5__12;

			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			private UniTask<(bool, DutyUnityServerPushReq, int, string)>.Awaiter <>u__3;

			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			private UniTask.Awaiter <>u__4;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			private UniTask<Result>.Awaiter <>u__5;

			[Token(Token = "0x400146F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
			private UnityAsyncExtensions.AsyncOperationAwaiter <>u__6;

			[Token(Token = "0x600141F")]
			[Address(RVA = "0x6D9B7C4", Offset = "0x6D9B7C4", VA = "0x6D9B7C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001420")]
			[Address(RVA = "0x6D9DE40", Offset = "0x6D9DE40", VA = "0x6D9DE40", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200034B")]
		[CompilerGenerated]
		private struct <QueryUserProfileById>d__34 : IAsyncStateMachine
		{
			[Token(Token = "0x4001470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<long> args;

			[Token(Token = "0x4001473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x6001421")]
			[Address(RVA = "0x6D9DE98", Offset = "0x6D9DE98", VA = "0x6D9DE98", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001422")]
			[Address(RVA = "0x6D9E43C", Offset = "0x6D9E43C", VA = "0x6D9E43C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200034C")]
		[CompilerGenerated]
		private struct <EnterMapByInvite>d__37 : IAsyncStateMachine
		{
			[Token(Token = "0x4001474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public IArgs args;

			[Token(Token = "0x4001478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6001423")]
			[Address(RVA = "0x6D9E494", Offset = "0x6D9E494", VA = "0x6D9E494", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001424")]
			[Address(RVA = "0x6D9EB58", Offset = "0x6D9EB58", VA = "0x6D9EB58", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200034D")]
		[CompilerGenerated]
		private struct <_PrepareUgcMapData>d__39 : IAsyncStateMachine
		{
			[Token(Token = "0x4001479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400147A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x400147B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public bool loadScene;

			[Token(Token = "0x400147C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x400147D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x400147E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private UnityEngine.AsyncOperation <ao>5__3;

			[Token(Token = "0x400147F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private YieldAwaitable.Awaiter <>u__2;

			[Token(Token = "0x6001425")]
			[Address(RVA = "0x6D9EBB0", Offset = "0x6D9EBB0", VA = "0x6D9EBB0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001426")]
			[Address(RVA = "0x6D9F744", Offset = "0x6D9F744", VA = "0x6D9F744", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200034E")]
		[CompilerGenerated]
		private struct <_EnterMapByInvite>d__40 : IAsyncStateMachine
		{
			[Token(Token = "0x4001480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public IArgs args;

			[Token(Token = "0x4001483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private UnityEngine.SceneManagement.Scene <ugcScene>5__2;

			[Token(Token = "0x4001485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private ResultWithObject <result>5__3;

			[Token(Token = "0x4001486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private GateServerInfo <gateServer>5__4;

			[Token(Token = "0x4001487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			private long <inviteUserID>5__5;

			[Token(Token = "0x4001488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private long <roomID>5__6;

			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private long <spawnAreaID>5__7;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			private long <mapId>5__8;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private ProgressCalculator <progress>5__9;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private UniTask.Awaiter <>u__2;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			private UniTask<Result>.Awaiter <>u__3;

			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			private UnityAsyncExtensions.AsyncOperationAwaiter <>u__4;

			[Token(Token = "0x6001427")]
			[Address(RVA = "0x6D9F79C", Offset = "0x6D9F79C", VA = "0x6D9F79C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001428")]
			[Address(RVA = "0x6DA0FC0", Offset = "0x6DA0FC0", VA = "0x6DA0FC0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200034F")]
		[CompilerGenerated]
		private struct <EnterDevMap>d__41 : IAsyncStateMachine
		{
			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Args<string> args;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private UniTask<Result>.Awaiter <>u__1;

			[Token(Token = "0x6001429")]
			[Address(RVA = "0x6DA1018", Offset = "0x6DA1018", VA = "0x6DA1018", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600142A")]
			[Address(RVA = "0x6DA16DC", Offset = "0x6DA16DC", VA = "0x6DA16DC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000350")]
		[CompilerGenerated]
		private struct <_EnterDevMap>d__42 : IAsyncStateMachine
		{
			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public Args<string> args;

			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private string <ipAddress>5__2;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private ushort <port>5__3;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private ResultWithObject <result>5__4;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private ProgressCalculator <progress>5__5;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private UniTask<Result>.Awaiter <>u__2;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			private UniTask.Awaiter <>u__3;

			[Token(Token = "0x600142B")]
			[Address(RVA = "0x6DA1734", Offset = "0x6DA1734", VA = "0x6DA1734", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600142C")]
			[Address(RVA = "0x6DA28D0", Offset = "0x6DA28D0", VA = "0x6DA28D0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000351")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long mapID;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long roomID;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string roomType;

			[Token(Token = "0x40014A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressCalculator progress;

			[Token(Token = "0x600142D")]
			[Address(RVA = "0x6DA2928", Offset = "0x6DA2928", VA = "0x6DA2928")]
			public <>c__DisplayClass45_0()
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000352")]
		[CompilerGenerated]
		private struct <SwitchUnityServer>d__45 : IAsyncStateMachine
		{
			[Token(Token = "0x40014A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<Result> <>t__builder;

			[Token(Token = "0x40014A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x40014A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public long mapID;

			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public long roomID;

			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public string roomType;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public ProgressCalculator progress;

			[Token(Token = "0x40014AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public GateServerInfo gateServer;

			[Token(Token = "0x40014AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			private <>c__DisplayClass45_0 <>8__1;

			[Token(Token = "0x40014AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			public long spawnID;

			[Token(Token = "0x40014AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			private ResultWithObject <result>5__2;

			[Token(Token = "0x40014B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			private NetworkManager <networkManager>5__3;

			[Token(Token = "0x40014B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			private bool <isDirectConnected>5__4;

			[Token(Token = "0x40014B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			private IPAddress[] <iPs>5__5;

			[Token(Token = "0x40014B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			private RoomSequenceResultCode <lastCode>5__6;

			[Token(Token = "0x40014B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
			private bool <once>5__7;

			[Token(Token = "0x40014B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			private int <i>5__8;

			[Token(Token = "0x40014B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x40014B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			private float <startTime>5__9;

			[Token(Token = "0x40014B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
			private YieldAwaitable.Awaiter <>u__2;

			[Token(Token = "0x6001439")]
			[Address(RVA = "0x6DA32EC", Offset = "0x6DA32EC", VA = "0x6DA32EC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600143A")]
			[Address(RVA = "0x6DA5118", Offset = "0x6DA5118", VA = "0x6DA5118", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000354")]
		[CompilerGenerated]
		private struct <ShutdownUnityServerIfListeningAsync>d__52 : IAsyncStateMachine
		{
			[Token(Token = "0x40014BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40014BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <retryCount>5__2;

			[Token(Token = "0x40014BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600143E")]
			[Address(RVA = "0x6DA51F0", Offset = "0x6DA51F0", VA = "0x6DA51F0", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600143F")]
			[Address(RVA = "0x6DA5874", Offset = "0x6DA5874", VA = "0x6DA5874", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000355")]
		[CompilerGenerated]
		private struct <HandleUnityServerDutyPush>d__54 : IAsyncStateMachine
		{
			[Token(Token = "0x40014BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<(bool, DutyUnityServerPushReq, int, string)> <>t__builder;

			[Token(Token = "0x40014C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x40014C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public QueryRoomServerResp queryRoomServerResp;

			[Token(Token = "0x40014C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string roomType;

			[Token(Token = "0x40014C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public ResultWithObject result;

			[Token(Token = "0x40014C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public ProgressCalculator progress;

			[Token(Token = "0x40014C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UniTask<(bool IsTimeout, DutyUnityServerPushReq Result)>.Awaiter <>u__1;

			[Token(Token = "0x6001440")]
			[Address(RVA = "0x6DA58CC", Offset = "0x6DA58CC", VA = "0x6DA58CC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001441")]
			[Address(RVA = "0x6DA6724", Offset = "0x6DA6724", VA = "0x6DA6724", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000356")]
		[CompilerGenerated]
		private struct <InitializeClientMapConfig>d__55 : IAsyncStateMachine
		{
			[Token(Token = "0x40014C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40014C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long mapId;

			[Token(Token = "0x40014CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x40014CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long roomID;

			[Token(Token = "0x40014CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string roomType;

			[Token(Token = "0x40014CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<ResultWithObject>.Awaiter <>u__1;

			[Token(Token = "0x40014CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private bool <loadElementSuccess>5__2;

			[Token(Token = "0x40014CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private IEnumerator<WorldElement> <>7__wrap2;

			[Token(Token = "0x40014D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UniTask<(bool, string)>.Awaiter <>u__2;

			[Token(Token = "0x6001442")]
			[Address(RVA = "0x6DA677C", Offset = "0x6DA677C", VA = "0x6DA677C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0x6DA7854", Offset = "0x6DA7854", VA = "0x6DA7854", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000357")]
		[CompilerGenerated]
		private struct <InternalApplyCommonConfig>d__56 : IAsyncStateMachine
		{
			[Token(Token = "0x40014D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40014D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<(bool, string)> <>t__builder;

			[Token(Token = "0x40014D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string configJson;

			[Token(Token = "0x40014D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MultiplayerSystem <>4__this;

			[Token(Token = "0x40014D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask<CommonConfigSnapshot>.Awaiter <>u__1;

			[Token(Token = "0x6001444")]
			[Address(RVA = "0x6DA7860", Offset = "0x6DA7860", VA = "0x6DA7860", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001445")]
			[Address(RVA = "0x6DA7F7C", Offset = "0x6DA7F7C", VA = "0x6DA7F7C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _startConnectFinish;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _startConnectResult;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _finishConnectFinish;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _finishConnectResultCode;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CommonConfigSnapshot _commonConfigSnapshot;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NetworkConfigSnapshot _networkConfigSnapshot;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly EnterMapProbe _enterMapProbe;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private UniTaskCompletionSource<DutyUnityServerPushReq> _queryRoomPushSource;

		[Token(Token = "0x40013EA")]
		private const int InviteConnectToLoadSceneFixTimeout = 50;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int ConnectToLoadSceneTimeout;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int RequestTimeout;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _enteringAvatarStudio;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private long queryRoomID;

		[Token(Token = "0x1700015A")]
		public override bool StartEnable
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0x277C9E0", Offset = "0x277C9E0", VA = "0x277C9E0", Slot = "24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x277C9E8", Offset = "0x277C9E8", VA = "0x277C9E8", Slot = "26")]
		protected override void OnUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x277C9EC", Offset = "0x277C9EC", VA = "0x277C9EC", Slot = "27")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x277C9F0", Offset = "0x277C9F0", VA = "0x277C9F0", Slot = "28")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x277C9F4", Offset = "0x277C9F4", VA = "0x277C9F4")]
		[Command]
		[Preserve]
		private Result GetRoomNetworkStatus()
		{
			return default(Result);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x277CB24", Offset = "0x277CB24", VA = "0x277CB24")]
		[Preserve]
		[Command]
		private Result ExitRoom()
		{
			return default(Result);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x277D008", Offset = "0x277D008", VA = "0x277D008")]
		[Preserve]
		[Command]
		private Result DisconnectFromRoomServer()
		{
			return default(Result);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x277D610", Offset = "0x277D610", VA = "0x277D610")]
		[Command]
		private Result TakeBackProp(Args<PropController> args)
		{
			return default(Result);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x277D890", Offset = "0x277D890", VA = "0x277D890")]
		[Preserve]
		[AsyncStateMachine(typeof(<CreateCharacter>d__20))]
		[Command]
		private UniTask<Result> CreateCharacter(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x277D9B4", Offset = "0x277D9B4", VA = "0x277D9B4")]
		[Command(1)]
		[Preserve]
		private Result DestroyCharacter(IArgs args)
		{
			return default(Result);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x277DB3C", Offset = "0x277DB3C", VA = "0x277DB3C")]
		[AsyncStateMachine(typeof(<QueryUserdataByProfile>d__22))]
		[Preserve]
		[Command]
		private UniTask<Result> QueryUserdataByProfile(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x277DC44", Offset = "0x277DC44", VA = "0x277DC44")]
		[Preserve]
		[AsyncStateMachine(typeof(<GetConfigByID>d__23))]
		[Command(1)]
		private UniTask<Result> GetConfigByID(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x277DD60", Offset = "0x277DD60", VA = "0x277DD60")]
		[AsyncStateMachine(typeof(<DownloadPropConfig>d__24))]
		[Command]
		public UniTask<Result> DownloadPropConfig(Args<long, bool> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x277DE80", Offset = "0x277DE80", VA = "0x277DE80")]
		[AsyncStateMachine(typeof(<EnterWorldBuilder>d__25))]
		[Preserve]
		[Command]
		private UniTask<Result> EnterWorldBuilder(Args<string, string, string, string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x277DFD4", Offset = "0x277DFD4", VA = "0x277DFD4")]
		[AsyncStateMachine(typeof(<_EnterWorldBuilder>d__26))]
		private UniTask<Result> _EnterWorldBuilder(Args<string, string, string, string, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x277E108", Offset = "0x277E108", VA = "0x277E108")]
		[Command]
		[Preserve]
		[AsyncStateMachine(typeof(<EnterSingleMap>d__27))]
		private UniTask<Result> EnterSingleMap(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x277E240", Offset = "0x277E240", VA = "0x277E240")]
		[AsyncStateMachine(typeof(<_EnterSingleMap>d__28))]
		private UniTask<Result> _EnterSingleMap(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x277E378", Offset = "0x277E378", VA = "0x277E378")]
		[Preserve]
		[AsyncStateMachine(typeof(<EnterAvatarStudio>d__30))]
		[Command]
		private UniTask<Result> EnterAvatarStudio()
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x277E49C", Offset = "0x277E49C", VA = "0x277E49C")]
		[Command]
		[Preserve]
		[AsyncStateMachine(typeof(<EnterMap>d__31))]
		private UniTask<Result> EnterMap(Args<int, long, long, long, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x277E5E0", Offset = "0x277E5E0", VA = "0x277E5E0")]
		private void ResetEnterParam()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x277E5F4", Offset = "0x277E5F4", VA = "0x277E5F4")]
		[AsyncStateMachine(typeof(<_EnterMap>d__33))]
		private UniTask<Result> _EnterMap(Args<int, long, long, long, string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x277E73C", Offset = "0x277E73C", VA = "0x277E73C")]
		[AsyncStateMachine(typeof(<QueryUserProfileById>d__34))]
		[Preserve]
		[Command]
		private UniTask<Result> QueryUserProfileById(Args<long> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x277E858", Offset = "0x277E858", VA = "0x277E858")]
		[Command(1)]
		[Preserve]
		private Result GetCurrentRoomUsers()
		{
			return default(Result);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x277EA1C", Offset = "0x277EA1C", VA = "0x277EA1C")]
		private void OnRoomServerSecondResponse(int code, string message, long ackId, IMessage msg)
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x277F1C0", Offset = "0x277F1C0", VA = "0x277F1C0")]
		[AsyncStateMachine(typeof(<EnterMapByInvite>d__37))]
		[Command(1)]
		[Preserve]
		private UniTask<Result> EnterMapByInvite(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x277F2F8", Offset = "0x277F2F8", VA = "0x277F2F8")]
		private bool IsUgcMap()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x277F390", Offset = "0x277F390", VA = "0x277F390")]
		[AsyncStateMachine(typeof(<_PrepareUgcMapData>d__39))]
		private UniTask<Result> _PrepareUgcMapData(bool loadScene)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x277F4A0", Offset = "0x277F4A0", VA = "0x277F4A0")]
		[AsyncStateMachine(typeof(<_EnterMapByInvite>d__40))]
		private UniTask<Result> _EnterMapByInvite(IArgs args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x277F5D8", Offset = "0x277F5D8", VA = "0x277F5D8")]
		[Command(1)]
		[AsyncStateMachine(typeof(<EnterDevMap>d__41))]
		[Preserve]
		private UniTask<Result> EnterDevMap(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x277F71C", Offset = "0x277F71C", VA = "0x277F71C")]
		[AsyncStateMachine(typeof(<_EnterDevMap>d__42))]
		private UniTask<Result> _EnterDevMap(Args<string> args)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x277EDE8", Offset = "0x277EDE8", VA = "0x277EDE8")]
		private void SetDSConnectTimeout(int timeout)
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x277F860", Offset = "0x277F860", VA = "0x277F860")]
		private void SetDutyWaitingTimeout(int timeout)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x277F934", Offset = "0x277F934", VA = "0x277F934")]
		[AsyncStateMachine(typeof(<SwitchUnityServer>d__45))]
		private UniTask<Result> SwitchUnityServer(GateServerInfo gateServer, long roomID, long spawnID, ProgressCalculator progress, long mapID, string roomType)
		{
			return default(UniTask<Result>);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x277FAB4", Offset = "0x277FAB4", VA = "0x277FAB4")]
		private IPAddress[] ParseServerInfo(GateServerInfo gateServer)
		{
			return null;
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x277CCC0", Offset = "0x277CCC0", VA = "0x277CCC0")]
		[Preserve]
		[Command]
		private void ClientReportEnterMap(IArgs args)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x277FC80", Offset = "0x277FC80", VA = "0x277FC80")]
		[Preserve]
		[Command]
		private void ServerKickUsers(Args<long[], string, KickUserType> args)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x277FE00", Offset = "0x277FE00", VA = "0x277FE00")]
		[Command]
		[Preserve]
		private Result ServerKickAllUsers(Args<string, KickUserType> args)
		{
			return default(Result);
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x278024C", Offset = "0x278024C", VA = "0x278024C")]
		private void BuildUserRoomData([Optional] long? invitorUserId)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x2780574", Offset = "0x2780574", VA = "0x2780574")]
		private void UpdateProgressContent(ProgressCalculator progress, string content)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x2780614", Offset = "0x2780614", VA = "0x2780614")]
		[AsyncStateMachine(typeof(<ShutdownUnityServerIfListeningAsync>d__52))]
		private static UniTask<bool> ShutdownUnityServerIfListeningAsync()
		{
			return default(UniTask<bool>);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x27806CC", Offset = "0x27806CC", VA = "0x27806CC")]
		[AsyncStateMachine(typeof(<HandleUnityServerDutyPush>d__54))]
		public UniTask<(bool, DutyUnityServerPushReq, int, string)> HandleUnityServerDutyPush(QueryRoomServerResp queryRoomServerResp, ResultWithObject result, string roomType, ProgressCalculator progress)
		{
			return default(UniTask<(bool, DutyUnityServerPushReq, int, string)>);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x2780834", Offset = "0x2780834", VA = "0x2780834")]
		[AsyncStateMachine(typeof(<InitializeClientMapConfig>d__55))]
		private UniTask InitializeClientMapConfig(long mapId, long roomID, string roomType)
		{
			return default(UniTask);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x27809DC", Offset = "0x27809DC", VA = "0x27809DC")]
		[AsyncStateMachine(typeof(<InternalApplyCommonConfig>d__56))]
		private UniTask<(bool, string)> InternalApplyCommonConfig(string configJson)
		{
			return default(UniTask<(bool, string)>);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x2780AE8", Offset = "0x2780AE8", VA = "0x2780AE8")]
		private (bool, string) InternalApplyNetworkConfig(string configJson)
		{
			return default((bool, string));
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x277D2F0", Offset = "0x277D2F0", VA = "0x277D2F0")]
		[Preserve]
		[Command]
		private Result ResetClientMapConfig()
		{
			return default(Result);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x2780D68", Offset = "0x2780D68", VA = "0x2780D68")]
		private bool ConnectToUnityServer(GateServerInfo info, IPAddress address)
		{
			return default(bool);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x278112C", Offset = "0x278112C", VA = "0x278112C")]
		private static byte[] IP2Int(string ipStr)
		{
			return null;
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x2781468", Offset = "0x2781468", VA = "0x2781468")]
		private static void LogElapsedTime(Stopwatch sw, string tag)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x2781554", Offset = "0x2781554", VA = "0x2781554")]
		public MultiplayerSystem()
		{
		}
	}
}
namespace ByteDance.Picoverse.UIFramework
{
	[Token(Token = "0x2000358")]
	public delegate void ColorPanelCallback(Color color);
	[Token(Token = "0x2000359")]
	public class ColorPickerPanel : MonoBehaviour
	{
		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FlexibleColorPicker ColorBoard;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color pickerColor;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIGradient UIGradient;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ColorPanelCallback _colorPanelCallback;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isAlpha;

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x6DA8150", Offset = "0x6DA8150", VA = "0x6DA8150")]
		public void SetData(string currentColorValue, bool isHaveGradient, ColorPanelCallback colorPanelCallback)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x6DA815C", Offset = "0x6DA815C", VA = "0x6DA815C")]
		private void ColorBoardCallback(Color color)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x6DA8190", Offset = "0x6DA8190", VA = "0x6DA8190")]
		private void SetGradientColor(Color leftColor, Color rightColor, float normalized)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x6DA8194", Offset = "0x6DA8194", VA = "0x6DA8194")]
		private void Start()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0x6DA8220", Offset = "0x6DA8220", VA = "0x6DA8220")]
		public ColorPickerPanel()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[RequireComponent(typeof(InputFieldHandler))]
	public class WorldBuilderInputHelper : MonoBehaviour
	{
		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldBuilderImageRaycast raycast;

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x6DA8228", Offset = "0x6DA8228", VA = "0x6DA8228")]
		public void OnInputFieldShow()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x6DA836C", Offset = "0x6DA836C", VA = "0x6DA836C")]
		public void OnInputFieldLeave()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x6DA83F4", Offset = "0x6DA83F4", VA = "0x6DA83F4")]
		public WorldBuilderInputHelper()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class WorldBuilderMainCamera : MonoBehaviour
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject XROrigin;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text text;

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x6DA83FC", Offset = "0x6DA83FC", VA = "0x6DA83FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x6DA8454", Offset = "0x6DA8454", VA = "0x6DA8454")]
		private void Update()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x6DA85E4", Offset = "0x6DA85E4", VA = "0x6DA85E4")]
		public WorldBuilderMainCamera()
		{
		}
	}
}
namespace ByteDance.Picoverse.UIFramework.UIExtension
{
	[Token(Token = "0x200035C")]
	public class WatchHover : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[FormerlySerializedAs("onPointerEnter")]
		[SerializeField]
		private UnityEvent m_OnPointerEnter;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[FormerlySerializedAs("onPointerExit")]
		[SerializeField]
		private UnityEvent m_OnPointerExit;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasPassedEvent;

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x6DA85EC", Offset = "0x6DA85EC", VA = "0x6DA85EC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x6DA8600", Offset = "0x6DA8600", VA = "0x6DA8600", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001457")]
		public void PassEvent<T>(PointerEventData data, ExecuteEvents.EventFunction<T> function) where T : IEventSystemHandler
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x6DA8614", Offset = "0x6DA8614", VA = "0x6DA8614")]
		public WatchHover()
		{
		}
	}
}
namespace ByteDance.Picoverse.DebugUI
{
	[Token(Token = "0x200035D")]
	public abstract class DebugCommand
	{
		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<DebugCommand> Commands;

		[Token(Token = "0x1700015B")]
		public string Name
		{
			[Token(Token = "0x600145D")]
			[Address(RVA = "0x6DA8E4C", Offset = "0x6DA8E4C", VA = "0x6DA8E4C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600145E")]
			[Address(RVA = "0x6DA8E54", Offset = "0x6DA8E54", VA = "0x6DA8E54")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0x6DA86B0", Offset = "0x6DA86B0", VA = "0x6DA86B0")]
		public static void Register(string name, bool initialValue, Action<bool> onChanged)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x6DA8A88", Offset = "0x6DA8A88", VA = "0x6DA8A88")]
		public static void Register(string name, float initialValue, Action<float> onChanged)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x6DA8B0C", Offset = "0x6DA8B0C", VA = "0x6DA8B0C")]
		public static void Register(string name, float initialValue, float min, float max, bool isNumber, Action<float> onChanged)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x6DA87BC", Offset = "0x6DA87BC", VA = "0x6DA87BC")]
		public static void Register(DebugCommand command)
		{
		}

		[Token(Token = "0x600145F")]
		public T GetValue<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0x6DA8E5C", Offset = "0x6DA8E5C", VA = "0x6DA8E5C")]
		public DebugCommand(string name)
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class DebugCommand<T> : DebugCommand
	{
		[Token(Token = "0x1700015C")]
		public T Value
		{
			[Token(Token = "0x6001462")]
			[CompilerGenerated]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001463")]
			[CompilerGenerated]
			protected set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public Action<T> OnChanged
		{
			[Token(Token = "0x6001464")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001465")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001466")]
		public DebugCommand(string name, T initailValue, Action<T> onChanged)
		{
		}

		[Token(Token = "0x6001467")]
		public void ChangeValue(T value)
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class ButtonCommand : DebugCommand<bool>
	{
		[Token(Token = "0x6001468")]
		[Address(RVA = "0x6DA874C", Offset = "0x6DA874C", VA = "0x6DA874C")]
		public ButtonCommand(string name, bool initialValue, Action<bool> onChanged)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class SliderCommand : DebugCommand<float>
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float min;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float max;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isNumber;

		[Token(Token = "0x6001469")]
		[Address(RVA = "0x6DA8BD0", Offset = "0x6DA8BD0", VA = "0x6DA8BD0")]
		public SliderCommand(string name, float initialValue, float min, float max, bool isNumber, Action<float> onChanged)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class DebugCommandList
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int currentTestAvatar;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int perAddTestAvatar;

		[Token(Token = "0x600146A")]
		[Address(RVA = "0x6DA8F24", Offset = "0x6DA8F24", VA = "0x6DA8F24")]
		public static void Register()
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x6DAA32C", Offset = "0x6DAA32C", VA = "0x6DAA32C")]
		public static void DynamicRegister()
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x6DAA330", Offset = "0x6DAA330", VA = "0x6DAA330")]
		public DebugCommandList()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class DebugUIController : SingletonMono<DebugUIController>
	{
		[Token(Token = "0x600148B")]
		[Address(RVA = "0x6DABB20", Offset = "0x6DABB20", VA = "0x6DABB20")]
		public DebugUIController()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class DebugUIWindow : UIWindow
	{
		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WIDTH;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _btnPrefab;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _sldPrefab;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Button _closeBtn;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _maxHeight;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _posX;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _posY;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TMP_FontAsset _tmpFont;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<CommandUI> _items;

		[Token(Token = "0x1700015E")]
		public override bool IsDestroyOnLoad
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x6DABB68", Offset = "0x6DABB68", VA = "0x6DABB68", Slot = "8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148D")]
			[Address(RVA = "0x6DABB70", Offset = "0x6DABB70", VA = "0x6DABB70", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public override bool CanDestroyWhenHidden
		{
			[Token(Token = "0x600148E")]
			[Address(RVA = "0x6DABB7C", Offset = "0x6DABB7C", VA = "0x6DABB7C", Slot = "10")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148F")]
			[Address(RVA = "0x6DABB84", Offset = "0x6DABB84", VA = "0x6DABB84", Slot = "11")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public override string WindowPath
		{
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x6DABF6C", Offset = "0x6DABF6C", VA = "0x6DABF6C", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x6DABB90", Offset = "0x6DABB90", VA = "0x6DABB90")]
		public TMP_FontAsset GetFont()
		{
			return null;
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x6DABB98", Offset = "0x6DABB98", VA = "0x6DABB98")]
		public void AddDynamicCommandUI(DebugCommand command)
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x6DABFAC", Offset = "0x6DABFAC", VA = "0x6DABFAC", Slot = "5")]
		protected override void OnCreate()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x6DAC3C4", Offset = "0x6DAC3C4", VA = "0x6DAC3C4", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x6DAC3F0", Offset = "0x6DAC3F0", VA = "0x6DAC3F0")]
		private void _ClearItems()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x6DAC228", Offset = "0x6DAC228", VA = "0x6DAC228")]
		private void _InitItems()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x6DABE8C", Offset = "0x6DABE8C", VA = "0x6DABE8C")]
		private void _SetCommandUIPos(CommandUI commandUI)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x6DABC60", Offset = "0x6DABC60", VA = "0x6DABC60")]
		private CommandUI _CreateCommandUI(DebugCommand command)
		{
			return null;
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x6DAC7E0", Offset = "0x6DAC7E0", VA = "0x6DAC7E0")]
		public DebugUIWindow()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class CommandUI : ByteDance.Picoverse.UIFramework.IDisposable
	{
		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int WIDTH;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _itemWidth;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _itemHeight;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _columeNum;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform _transform;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject _gameObject;

		[Token(Token = "0x17000161")]
		public int Width
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x6DAC8BC", Offset = "0x6DAC8BC", VA = "0x6DAC8BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000162")]
		public int Height
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x6DAC8C4", Offset = "0x6DAC8C4", VA = "0x6DAC8C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0x6DAC8CC", Offset = "0x6DAC8CC", VA = "0x6DAC8CC")]
		public CommandUI(GameObject gameObject)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0x6DACA28", Offset = "0x6DACA28", VA = "0x6DACA28", Slot = "5")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x6DAC578", Offset = "0x6DAC578", VA = "0x6DAC578")]
		public void SetAnchoredPosition(Vector2 position)
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class CommandButton : CommandUI
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button _btn;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Image _img;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI _txt;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ButtonCommand _cmd;

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x6DAC594", Offset = "0x6DAC594", VA = "0x6DAC594")]
		public CommandButton(GameObject gameObject, ButtonCommand command)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x6DACAFC", Offset = "0x6DACAFC", VA = "0x6DACAFC")]
		private void _SetCommand(ButtonCommand command)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x6DACC30", Offset = "0x6DACC30", VA = "0x6DACC30")]
		private void _OnButtonClicked()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x6DACBF0", Offset = "0x6DACBF0", VA = "0x6DACBF0")]
		private void _SetImageColor(bool state)
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class CommandSlider : CommandUI
	{
		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Slider _slider;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI _nameTxt;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI _valueTxt;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SliderCommand _cmd;

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x6DAC6A0", Offset = "0x6DAC6A0", VA = "0x6DAC6A0")]
		public CommandSlider(GameObject gameObject, SliderCommand command)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x6DACCA8", Offset = "0x6DACCA8", VA = "0x6DACCA8")]
		private void _SetCommand(SliderCommand command)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x6DACF08", Offset = "0x6DACF08", VA = "0x6DACF08")]
		private void _OnSliderValueChanged(float value)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x6DACE30", Offset = "0x6DACE30", VA = "0x6DACE30")]
		private void _SetValueText(float value)
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class FlowLayoutGroup : LayoutGroup
	{
		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly IList<RectTransform> rowList;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float layoutHeight;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool childForceExpandHeight;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool childForceExpandWidth;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float spacing;

		[Token(Token = "0x17000163")]
		protected bool IsCenterAlign
		{
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0x6DACF74", Offset = "0x6DACF74", VA = "0x6DACF74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		protected bool IsRightAlign
		{
			[Token(Token = "0x60014AB")]
			[Address(RVA = "0x6DACFA0", Offset = "0x6DACFA0", VA = "0x6DACFA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		protected bool IsMiddleAlign
		{
			[Token(Token = "0x60014AC")]
			[Address(RVA = "0x6DACFCC", Offset = "0x6DACFCC", VA = "0x6DACFCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000166")]
		protected bool IsLowerAlign
		{
			[Token(Token = "0x60014AD")]
			[Address(RVA = "0x6DACFF0", Offset = "0x6DACFF0", VA = "0x6DACFF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x6DAD014", Offset = "0x6DAD014", VA = "0x6DAD014", Slot = "28")]
		public override void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x6DAD138", Offset = "0x6DAD138", VA = "0x6DAD138", Slot = "37")]
		public override void SetLayoutHorizontal()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x6DAD6C4", Offset = "0x6DAD6C4", VA = "0x6DAD6C4", Slot = "38")]
		public override void SetLayoutVertical()
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x6DAD71C", Offset = "0x6DAD71C", VA = "0x6DAD71C", Slot = "29")]
		public override void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x6DAD190", Offset = "0x6DAD190", VA = "0x6DAD190")]
		public float SetLayout(float width, int axis, bool layoutInput)
		{
			return default(float);
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x6DAD778", Offset = "0x6DAD778", VA = "0x6DAD778")]
		private float CalculateRowVerticalOffset(float groupHeight, float yOffset, float currentRowHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x6DAD7C0", Offset = "0x6DAD7C0", VA = "0x6DAD7C0")]
		protected void LayoutRow(IList<RectTransform> contents, float rowWidth, float rowHeight, float maxWidth, float xOffset, float yOffset, int axis)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x6DAD098", Offset = "0x6DAD098", VA = "0x6DAD098")]
		public float GetGreatestMinimumChildWidth()
		{
			return default(float);
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x6DADBDC", Offset = "0x6DADBDC", VA = "0x6DADBDC")]
		public FlowLayoutGroup()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class CategoryStats : System.IDisposable
	{
		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float[] _samples;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _accNum;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<ProfilerRecorder> _recorders;

		[Token(Token = "0x17000167")]
		public bool IsActive
		{
			[Token(Token = "0x60014B7")]
			[Address(RVA = "0x6DADC64", Offset = "0x6DADC64", VA = "0x6DADC64")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0x6DADC6C", Offset = "0x6DADC6C", VA = "0x6DADC6C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public string Category
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0x6DADC78", Offset = "0x6DADC78", VA = "0x6DADC78")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0x6DADC80", Offset = "0x6DADC80", VA = "0x6DADC80")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x6DADC88", Offset = "0x6DADC88", VA = "0x6DADC88")]
		public CategoryStats(string category, int capacity = 64)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x6DADD68", Offset = "0x6DADD68", VA = "0x6DADD68", Slot = "5")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x6DADEE0", Offset = "0x6DADEE0", VA = "0x6DADEE0")]
		public void AddStat(string statName)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x6DADFBC", Offset = "0x6DADFBC", VA = "0x6DADFBC")]
		public void AddStats(ICollection<string> statNames)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x6DAE28C", Offset = "0x6DAE28C", VA = "0x6DAE28C")]
		public float GetAvgElapsedTime()
		{
			return default(float);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x6DAE2F8", Offset = "0x6DAE2F8", VA = "0x6DAE2F8")]
		public void Activate()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0x6DAE46C", Offset = "0x6DAE46C", VA = "0x6DAE46C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0x6DAE5D8", Offset = "0x6DAE5D8", VA = "0x6DAE5D8")]
		public void Update()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0x6DAE64C", Offset = "0x6DAE64C", VA = "0x6DAE64C")]
		private float GetElapsedTime()
		{
			return default(float);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0x6DAE7C4", Offset = "0x6DAE7C4", VA = "0x6DAE7C4", Slot = "6")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0x6DAE7C8", Offset = "0x6DAE7C8", VA = "0x6DAE7C8", Slot = "7")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0x6DAE7CC", Offset = "0x6DAE7CC", VA = "0x6DAE7CC", Slot = "8")]
		protected virtual float OnUpdate()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200036A")]
	public class CustomStats : CategoryStats
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<global::Picoverse.Common.ProfilingSampler> _samplers;

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0x6DAE7D4", Offset = "0x6DAE7D4", VA = "0x6DAE7D4")]
		public CustomStats(string category)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0x6DAE7DC", Offset = "0x6DAE7DC", VA = "0x6DAE7DC", Slot = "6")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0x6DAE970", Offset = "0x6DAE970", VA = "0x6DAE970", Slot = "7")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x6DAEAD0", Offset = "0x6DAEAD0", VA = "0x6DAEAD0", Slot = "8")]
		protected override float OnUpdate()
		{
			return default(float);
		}
	}
	[Token(Token = "0x200036B")]
	public class DebugGeoStats : MonoBehaviour, ILineable
	{
		[Token(Token = "0x400152A")]
		private const float UpdateInterval = 1f;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI _txt;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ProfilerRecorder _triRecorder;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ProfilerRecorder _dcRecorder;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string[] _indirectDrawTypes;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _indirectRecording;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _waitTime;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StringBuilder _builder;

		[Token(Token = "0x17000169")]
		public int lineNum
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x6DAEC38", Offset = "0x6DAEC38", VA = "0x6DAEC38", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x6DAEC40", Offset = "0x6DAEC40", VA = "0x6DAEC40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x6DAED30", Offset = "0x6DAED30", VA = "0x6DAED30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x6DAEDD4", Offset = "0x6DAEDD4", VA = "0x6DAEDD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x6DAEDF8", Offset = "0x6DAEDF8", VA = "0x6DAEDF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x6DAEEDC", Offset = "0x6DAEEDC", VA = "0x6DAEEDC")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x6DAF1F8", Offset = "0x6DAF1F8", VA = "0x6DAF1F8")]
		public DebugGeoStats()
		{
		}
	}
	[Token(Token = "0x200036C")]
	internal interface ILineable
	{
		[Token(Token = "0x1700016A")]
		int lineNum
		{
			[Token(Token = "0x60014D2")]
			get;
		}
	}
	[Token(Token = "0x200036D")]
	public class DebugHUD
	{
		[Token(Token = "0x4001532")]
		private const string RootName = "Statistics";

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<MonoBehaviour> _huds;

		[Token(Token = "0x60014D3")]
		public static T ToggleHUD<T>(bool state) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		private static T SpawnDebugHUD<T>(string hudName, Transform parent) where T : MonoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x5FCC5C4", Offset = "0x5FCC5C4", VA = "0x5FCC5C4")]
		private static void ReAlign(Transform parent)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x5FCC824", Offset = "0x5FCC824", VA = "0x5FCC824")]
		private static void SetPosition(Transform trans, int offset, int line = 1)
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x5FCC990", Offset = "0x5FCC990", VA = "0x5FCC990")]
		public DebugHUD()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public enum StatsCategory : byte
	{
		[Token(Token = "0x4001535")]
		渲染,
		[Token(Token = "0x4001536")]
		Avatar,
		[Token(Token = "0x4001537")]
		物理,
		[Token(Token = "0x4001538")]
		网络,
		[Token(Token = "0x4001539")]
		XRUpdate,
		[Token(Token = "0x400153A")]
		UI,
		[Token(Token = "0x400153B")]
		总数,
		[Token(Token = "0x400153C")]
		Count
	}
	[Token(Token = "0x200036F")]
	public class DebugStats : MonoBehaviour, ILineable
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[][] _StatsNames;

		[Token(Token = "0x400153E")]
		private const float UpdateInterval = 0.5f;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _waitTime;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI _textPro;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CategoryStats[] _categories;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder _builder;

		[Token(Token = "0x1700016B")]
		public int lineNum
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x5FCCADC", Offset = "0x5FCCADC", VA = "0x5FCCADC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x5FCCA30", Offset = "0x5FCCA30", VA = "0x5FCCA30")]
		private static CategoryStats CreateStats(StatsCategory category, string name)
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x5FCCAE4", Offset = "0x5FCCAE4", VA = "0x5FCCAE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x5FCCCE4", Offset = "0x5FCCCE4", VA = "0x5FCCCE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x5FCCD58", Offset = "0x5FCCD58", VA = "0x5FCCD58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x5FCCE04", Offset = "0x5FCCE04", VA = "0x5FCCE04")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x5FCCEAC", Offset = "0x5FCCEAC", VA = "0x5FCCEAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x5FCCF44", Offset = "0x5FCCF44", VA = "0x5FCCF44")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x5FCD094", Offset = "0x5FCD094", VA = "0x5FCD094")]
		public DebugStats()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class FPSWatcher : MonoBehaviour
	{
		[Token(Token = "0x4001543")]
		private const int FrameInterval = 64;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshProUGUI fpsText;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lastTime;

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x5FCDC18", Offset = "0x5FCDC18", VA = "0x5FCDC18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x5FCDC70", Offset = "0x5FCDC70", VA = "0x5FCDC70")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x5FCDD44", Offset = "0x5FCDD44", VA = "0x5FCDD44")]
		public FPSWatcher()
		{
		}
	}
}
namespace ByteDance.Picoverse.Data
{
	[Token(Token = "0x2000371")]
	public record AppVersionInfo : IDataModel
	{
		[Token(Token = "0x1700016C")]
		protected override Type EqualityContract
		{
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0x5FCDD4C", Offset = "0x5FCDD4C", VA = "0x5FCDD4C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public int version
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0x5FCDDB8", Offset = "0x5FCDDB8", VA = "0x5FCDDB8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0x5FCDDC0", Offset = "0x5FCDDC0", VA = "0x5FCDDC0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016E")]
		public string displayVersion
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0x5FCDDC8", Offset = "0x5FCDDC8", VA = "0x5FCDDC8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x5FCDDD0", Offset = "0x5FCDDD0", VA = "0x5FCDDD0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public string content
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x5FCDDD8", Offset = "0x5FCDDD8", VA = "0x5FCDDD8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0x5FCDDE0", Offset = "0x5FCDDE0", VA = "0x5FCDDE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public string cover
		{
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0x5FCDDE8", Offset = "0x5FCDDE8", VA = "0x5FCDDE8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014EE")]
			[Address(RVA = "0x5FCDDF0", Offset = "0x5FCDDF0", VA = "0x5FCDDF0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public string publishTime
		{
			[Token(Token = "0x60014EF")]
			[Address(RVA = "0x5FCDDF8", Offset = "0x5FCDDF8", VA = "0x5FCDDF8")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F0")]
			[Address(RVA = "0x5FCDE00", Offset = "0x5FCDE00", VA = "0x5FCDE00")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public string downloadLink
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0x5FCDE08", Offset = "0x5FCDE08", VA = "0x5FCDE08")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0x5FCDE10", Offset = "0x5FCDE10", VA = "0x5FCDE10")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public int updateStrategy
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0x5FCDE18", Offset = "0x5FCDE18", VA = "0x5FCDE18")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x5FCDE20", Offset = "0x5FCDE20", VA = "0x5FCDE20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public string appId
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0x5FCDE28", Offset = "0x5FCDE28", VA = "0x5FCDE28")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0x5FCDE30", Offset = "0x5FCDE30", VA = "0x5FCDE30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public string[] chipBlockList
		{
			[Token(Token = "0x60014F7")]
			[Address(RVA = "0x5FCDE38", Offset = "0x5FCDE38", VA = "0x5FCDE38")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0x5FCDE40", Offset = "0x5FCDE40", VA = "0x5FCDE40")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public string[] puiBlockList
		{
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0x5FCDE48", Offset = "0x5FCDE48", VA = "0x5FCDE48")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x5FCDE50", Offset = "0x5FCDE50", VA = "0x5FCDE50")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x5FCDE58", Offset = "0x5FCDE58", VA = "0x5FCDE58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x5FCDF70", Offset = "0x5FCDF70", VA = "0x5FCDF70", Slot = "6")]
		protected override bool PrintMembers(StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x5FCE3E8", Offset = "0x5FCE3E8", VA = "0x5FCE3E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0x5FCE6AC", Offset = "0x5FCE6AC", VA = "0x5FCE6AC", Slot = "10")]
		public virtual bool Equals(AppVersionInfo? other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x5FCE920", Offset = "0x5FCE920", VA = "0x5FCE920")]
		protected AppVersionInfo(AppVersionInfo original)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x5FCE9D8", Offset = "0x5FCE9D8", VA = "0x5FCE9D8")]
		public AppVersionInfo()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public record VersionVo : IDataModel
	{
		[Token(Token = "0x17000177")]
		protected override Type EqualityContract
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x5FCE9E0", Offset = "0x5FCE9E0", VA = "0x5FCE9E0", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpgradeType upgradeType;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string content;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string buttonText;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string buttonLink;

		[Token(Token = "0x6001507")]
		[Address(RVA = "0x5FCEA4C", Offset = "0x5FCEA4C", VA = "0x5FCEA4C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x5FCEB64", Offset = "0x5FCEB64", VA = "0x5FCEB64", Slot = "6")]
		protected override bool PrintMembers(StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0x5FCEE38", Offset = "0x5FCEE38", VA = "0x5FCEE38", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x5FCF010", Offset = "0x5FCF010", VA = "0x5FCF010", Slot = "10")]
		public virtual bool Equals(VersionVo? other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0x5FCF1B0", Offset = "0x5FCF1B0", VA = "0x5FCF1B0")]
		protected VersionVo(VersionVo original)
		{
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0x5FCF220", Offset = "0x5FCF220", VA = "0x5FCF220")]
		public VersionVo()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public enum UpgradeType
	{
		[Token(Token = "0x4001556")]
		NO_NEED,
		[Token(Token = "0x4001557")]
		FORCE_UPGRADE,
		[Token(Token = "0x4001558")]
		DEVICE_FORBIDDEN,
		[Token(Token = "0x4001559")]
		PUI_VERSION_TOO_LOW,
		[Token(Token = "0x400155A")]
		PUI_VERSION_FORBIDDEN
	}
	[Token(Token = "0x2000374")]
	public record ServerAddress : IDataModel
	{
		[Token(Token = "0x17000178")]
		protected override Type EqualityContract
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x5FCF228", Offset = "0x5FCF228", VA = "0x5FCF228", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000179")]
		public string Entrance
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x5FCF294", Offset = "0x5FCF294", VA = "0x5FCF294")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x5FCF29C", Offset = "0x5FCF29C", VA = "0x5FCF29C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public string serverUrl
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x5FCF2A4", Offset = "0x5FCF2A4", VA = "0x5FCF2A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x5FCF2AC", Offset = "0x5FCF2AC", VA = "0x5FCF2AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public string connectionUrl
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x5FCF2B4", Offset = "0x5FCF2B4", VA = "0x5FCF2B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x5FCF2BC", Offset = "0x5FCF2BC", VA = "0x5FCF2BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public string outsideUrl
		{
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x5FCF2C4", Offset = "0x5FCF2C4", VA = "0x5FCF2C4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x5FCF2CC", Offset = "0x5FCF2CC", VA = "0x5FCF2CC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public string userAgreementUrl
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x5FCF2D4", Offset = "0x5FCF2D4", VA = "0x5FCF2D4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x5FCF2DC", Offset = "0x5FCF2DC", VA = "0x5FCF2DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x5FCF2E4", Offset = "0x5FCF2E4", VA = "0x5FCF2E4")]
		public ServerAddress()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0x5FCF2EC", Offset = "0x5FCF2EC", VA = "0x5FCF2EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0x5FCF33C", Offset = "0x5FCF33C", VA = "0x5FCF33C", Slot = "6")]
		protected override bool PrintMembers(StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x5FCF5D4", Offset = "0x5FCF5D4", VA = "0x5FCF5D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0x5FCF798", Offset = "0x5FCF798", VA = "0x5FCF798", Slot = "10")]
		public virtual bool Equals(ServerAddress? other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0x5FCF924", Offset = "0x5FCF924", VA = "0x5FCF924")]
		protected ServerAddress(ServerAddress original)
		{
		}
	}
	[Token(Token = "0x2000375")]
	public record ServerMetaData : IDataModel
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000376")]
		[CompilerGenerated]
		private struct <Init>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x4001564")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001565")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x600153B")]
			[Address(RVA = "0x5FD03A8", Offset = "0x5FD03A8", VA = "0x5FD03A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600153C")]
			[Address(RVA = "0x5FD03B8", Offset = "0x5FD03B8", VA = "0x5FD03B8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x2000377")]
		[CompilerGenerated]
		private struct <GetServerTime>d__14 : IAsyncStateMachine
		{
			[Token(Token = "0x4001566")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001567")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x600153D")]
			[Address(RVA = "0x5FD03C4", Offset = "0x5FD03C4", VA = "0x5FD03C4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600153E")]
			[Address(RVA = "0x5FD03D4", Offset = "0x5FD03D4", VA = "0x5FD03D4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x1700017E")]
		protected override Type EqualityContract
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x5FCF99C", Offset = "0x5FCF99C", VA = "0x5FCF99C", Slot = "5")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public long ServerTimeStamp
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x5FCFA10", Offset = "0x5FCFA10", VA = "0x5FCFA10")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x5FCFA18", Offset = "0x5FCFA18", VA = "0x5FCFA18")]
			set
			{
			}
		}

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> cdnUrls;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string assetVersion;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private long serverTimeStamp;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double realGameTimeWhenSyncTime;

		[Token(Token = "0x6001529")]
		[Address(RVA = "0x5FCFA08", Offset = "0x5FCFA08", VA = "0x5FCFA08")]
		public ServerMetaData()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x5FCFA38", Offset = "0x5FCFA38", VA = "0x5FCFA38")]
		public long GetCurrentServerTimeStamp()
		{
			return default(long);
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x5FCFA84", Offset = "0x5FCFA84", VA = "0x5FCFA84")]
		public DateTime GetCurrentServerDateTime()
		{
			return default(DateTime);
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x5FCFB10", Offset = "0x5FCFB10", VA = "0x5FCFB10")]
		public DateTime GetCurrentServerLocalDateTime()
		{
			return default(DateTime);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x5FCFB30", Offset = "0x5FCFB30", VA = "0x5FCFB30")]
		[AsyncStateMachine(typeof(<Init>d__13))]
		public System.Threading.Tasks.Task Init()
		{
			return null;
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x5FCFBFC", Offset = "0x5FCFBFC", VA = "0x5FCFBFC")]
		[AsyncStateMachine(typeof(<GetServerTime>d__14))]
		public System.Threading.Tasks.Task GetServerTime(bool retry = false)
		{
			return null;
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x5FCFCC8", Offset = "0x5FCFCC8", VA = "0x5FCFCC8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0x5FCFDE0", Offset = "0x5FCFDE0", VA = "0x5FCFDE0", Slot = "6")]
		protected override bool PrintMembers(StringBuilder builder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x5FCFFE0", Offset = "0x5FCFFE0", VA = "0x5FCFFE0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x5FD01B0", Offset = "0x5FD01B0", VA = "0x5FD01B0", Slot = "10")]
		public virtual bool Equals(ServerMetaData? other)
		{
			return default(bool);
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x5FD0354", Offset = "0x5FD0354", VA = "0x5FD0354")]
		protected ServerMetaData(ServerMetaData original)
		{
		}
	}
	[Token(Token = "0x2000378")]
	public static class UrlToLua
	{
		[Token(Token = "0x600153F")]
		[Address(RVA = "0x5FD03E0", Offset = "0x5FD03E0", VA = "0x5FD03E0")]
		public static string GetUserAgreementUrl()
		{
			return null;
		}
	}
}
namespace ByteDance.Picoverse.AvatarStudio
{
	[Token(Token = "0x2000379")]
	public class AvatarStudioDataSaver : WorldBuilderDataSaver
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200037A")]
		[CompilerGenerated]
		private struct <UploadMapData>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x4001569")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400156A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncUniTaskMethodBuilder<ResultWithObject> <>t__builder;

			[Token(Token = "0x400156B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string type;

			[Token(Token = "0x400156C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AvatarStudioDataSaver <>4__this;

			[Token(Token = "0x400156D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private JsonObject <jo>5__2;

			[Token(Token = "0x400156E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UniTask<Command>.Awaiter <>u__1;

			[Token(Token = "0x400156F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UniTask<ResultWithObject>.Awaiter <>u__2;

			[Token(Token = "0x6001546")]
			[Address(RVA = "0x5FD150C", Offset = "0x5FD150C", VA = "0x5FD150C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001547")]
			[Address(RVA = "0x5FD27AC", Offset = "0x5FD27AC", VA = "0x5FD27AC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200037B")]
		[CompilerGenerated]
		private struct <SaveWorldDataToLocalFileAsync>d__2 : IAsyncStateMachine
		{
			[Token(Token = "0x4001570")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001571")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001572")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AvatarStudioDataSaver <>4__this;

			[Token(Token = "0x4001573")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UserData <userData>5__2;

			[Token(Token = "0x4001574")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<byte[]> <>u__1;

			[Token(Token = "0x6001548")]
			[Address(RVA = "0x5FD2804", Offset = "0x5FD2804", VA = "0x5FD2804", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6001549")]
			[Address(RVA = "0x5FD3078", Offset = "0x5FD3078", VA = "0x5FD3078", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool saveInPreviewMode;

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x5FD0570", Offset = "0x5FD0570", VA = "0x5FD0570", Slot = "4")]
		[AsyncStateMachine(typeof(<UploadMapData>d__1))]
		public override UniTask<ResultWithObject> UploadMapData(string type)
		{
			return default(UniTask<ResultWithObject>);
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x5FD0668", Offset = "0x5FD0668", VA = "0x5FD0668", Slot = "7")]
		[AsyncStateMachine(typeof(<SaveWorldDataToLocalFileAsync>d__2))]
		public override void SaveWorldDataToLocalFileAsync()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x5FD071C", Offset = "0x5FD071C", VA = "0x5FD071C", Slot = "6")]
		public override void SaveWorldDataToLocalFile()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x5FD0D6C", Offset = "0x5FD0D6C", VA = "0x5FD0D6C")]
		public bool LoadAvatarStudioDataFromLocalFile(ref long timestamp, ref byte[] sceneData, ref byte[] avatarData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0x5FD14FC", Offset = "0x5FD14FC", VA = "0x5FD14FC")]
		public AvatarStudioDataSaver()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037C")]
	public class SliderEntry
	{
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Slider slider;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarStudioPinchType pinchType;

		[Token(Token = "0x600154A")]
		[Address(RVA = "0x5FD3084", Offset = "0x5FD3084", VA = "0x5FD3084")]
		public SliderEntry()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class OperateUI : MonoBehaviour
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200037F")]
		[CompilerGenerated]
		private struct <LoadJsonFile>d__18 : IAsyncStateMachine
		{
			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OperateUI <>4__this;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UniTask<bool>.Awaiter <>u__1;

			[Token(Token = "0x600155C")]
			[Address(RVA = "0x5FD3F04", Offset = "0x5FD3F04", VA = "0x5FD3F04", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600155D")]
			[Address(RVA = "0x5FD43CC", Offset = "0x5FD43CC", VA = "0x5FD43CC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text capacityText;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Toggle mirrorToggle;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Toggle simulateToggle;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<SliderEntry> sliders;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text infoText;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button saveBtn;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject toggleGroup;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float destroyTimer;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool confirmDestroy;

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x5FD308C", Offset = "0x5FD308C", VA = "0x5FD308C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x5FD34D0", Offset = "0x5FD34D0", VA = "0x5FD34D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x5FD36CC", Offset = "0x5FD36CC", VA = "0x5FD36CC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x5FD38C8", Offset = "0x5FD38C8", VA = "0x5FD38C8")]
		private void OnPreviewModeChanged(bool bPreview)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0x5FD392C", Offset = "0x5FD392C", VA = "0x5FD392C")]
		private void OnAvatarLoadFinish()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0x5FD3B58", Offset = "0x5FD3B58", VA = "0x5FD3B58")]
		public void OnMirrorValueChange(bool value)
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0x5FD3B80", Offset = "0x5FD3B80", VA = "0x5FD3B80")]
		public void OnSimulateValueChange(bool value)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0x5FD3BF8", Offset = "0x5FD3BF8", VA = "0x5FD3BF8")]
		public void OnSaveBtnClick()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x5FD3C50", Offset = "0x5FD3C50", VA = "0x5FD3C50")]
		public void OnDestroyAllBtnClick()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x5FD3CE8", Offset = "0x5FD3CE8", VA = "0x5FD3CE8")]
		[AsyncStateMachine(typeof(<LoadJsonFile>d__18))]
		public void LoadJsonFile()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x5FD3D9C", Offset = "0x5FD3D9C", VA = "0x5FD3D9C")]
		private void OnSliderValueChanged(float value, SliderEntry entry)
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x5FD3DD8", Offset = "0x5FD3DD8", VA = "0x5FD3DD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x5FD3E18", Offset = "0x5FD3E18", VA = "0x5FD3E18")]
		public OperateUI()
		{
		}
	}
}
namespace ByteDance.Picoverse.GameMusic
{
	[Token(Token = "0x2000380")]
	[ExecuteAlways]
	public class MusicMaterialColorAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ColorUsage(true, true)]
		public Color from;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ColorUsage(true, true)]
		public Color to;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float duration;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float elapseTime;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int pingPong;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string nameID;

		[Token(Token = "0x600155E")]
		[Address(RVA = "0x5FD43D8", Offset = "0x5FD43D8", VA = "0x5FD43D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0x5FD44F0", Offset = "0x5FD44F0", VA = "0x5FD44F0")]
		public MusicMaterialColorAnimation()
		{
		}
	}
}
namespace ByteDance.Picoverse.GameTennis
{
	[Token(Token = "0x2000381")]
	public class CircularList<T>
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_First;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int m_Count;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] m_Elements;

		[Token(Token = "0x17000180")]
		public int Capacity
		{
			[Token(Token = "0x6001561")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000181")]
		public int Count
		{
			[Token(Token = "0x6001562")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000182")]
		public T this[int i]
		{
			[Token(Token = "0x6001565")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001566")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public int HeadIndex
		{
			[Token(Token = "0x6001568")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001560")]
		public CircularList(int capacity)
		{
		}

		[Token(Token = "0x6001563")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001564")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001567")]
		public T[] GetArray()
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		public void Reset(int headIndex, int count)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class FloatRollingAverage
	{
		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_Sum;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CircularList<float> m_Entries;

		[Token(Token = "0x17000184")]
		public float latest
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x5FD44F8", Offset = "0x5FD44F8", VA = "0x5FD44F8")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x5FD4500", Offset = "0x5FD4500", VA = "0x5FD4500")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public float max
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x5FD4508", Offset = "0x5FD4508", VA = "0x5FD4508")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x5FD4510", Offset = "0x5FD4510", VA = "0x5FD4510")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public float min
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x5FD4518", Offset = "0x5FD4518", VA = "0x5FD4518")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x5FD4520", Offset = "0x5FD4520", VA = "0x5FD4520")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public float average
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x5FD4528", Offset = "0x5FD4528", VA = "0x5FD4528")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x5FD4530", Offset = "0x5FD4530", VA = "0x5FD4530")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0x5FD4538", Offset = "0x5FD4538", VA = "0x5FD4538")]
		public CircularList<float> GetData()
		{
			return null;
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0x5FD4540", Offset = "0x5FD4540", VA = "0x5FD4540")]
		public FloatRollingAverage(int windowSize = 64)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x5FD45D8", Offset = "0x5FD45D8", VA = "0x5FD45D8")]
		public void Update(float value)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x5FD47B4", Offset = "0x5FD47B4", VA = "0x5FD47B4")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class Vector3RollingAverage
	{
		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 m_Sum;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CircularList<Vector3> m_Entries;

		[Token(Token = "0x17000188")]
		public Vector3 Average
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x5FD4810", Offset = "0x5FD4810", VA = "0x5FD4810")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x5FD481C", Offset = "0x5FD481C", VA = "0x5FD481C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public Vector3 Sum
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x5FD4828", Offset = "0x5FD4828", VA = "0x5FD4828")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x5FD4834", Offset = "0x5FD4834", VA = "0x5FD4834")]
		public CircularList<Vector3> GetData()
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0x5FD483C", Offset = "0x5FD483C", VA = "0x5FD483C")]
		public Vector3RollingAverage(int windowSize = 64)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0x5FD48D4", Offset = "0x5FD48D4", VA = "0x5FD48D4")]
		public void Update(Vector3 value)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x5FD4A1C", Offset = "0x5FD4A1C", VA = "0x5FD4A1C")]
		public float GetEuclideanDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0x5FD4B20", Offset = "0x5FD4B20", VA = "0x5FD4B20")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class GameTennis : LegacyNetworkStateBehaviour
	{
		[Token(Token = "0x2000385")]
		public enum GameState
		{
			[Token(Token = "0x40015E0")]
			Matching,
			[Token(Token = "0x40015E1")]
			Waiting,
			[Token(Token = "0x40015E2")]
			Running,
			[Token(Token = "0x40015E3")]
			End
		}

		[Token(Token = "0x2000386")]
		public enum TennisMoveType
		{
			[Token(Token = "0x40015E5")]
			TopSpin = 1,
			[Token(Token = "0x40015E6")]
			Flat = 0,
			[Token(Token = "0x40015E7")]
			BackSpin = -1
		}

		[Token(Token = "0x4001599")]
		private const string KEY_curGameState = "_curGameState";

		[Token(Token = "0x400159A")]
		private const string KEY_curGame = "_curGame";

		[Token(Token = "0x400159B")]
		private const string KEY_curRound = "_curRound";

		[Token(Token = "0x400159C")]
		private const string KEY_curHitTennisCount = "_curHitTennisCount";

		[Token(Token = "0x400159D")]
		private const string KEY_curPlayerIdx = "_curPlayerIdx";

		[Token(Token = "0x400159E")]
		private const string KEY_curServePlayerIdx = "_curServePlayerIdx";

		[Token(Token = "0x400159F")]
		private const string KEY_isSingleTrainMode = "_isSingleTrainMode";

		[Token(Token = "0x40015A0")]
		private const string KEY_roundStartTime = "_roundStartTime";

		[Token(Token = "0x40015A1")]
		private const string KEY_serveStartTime = "_serveStartTime";

		[Token(Token = "0x40015A2")]
		private const string KEY_roundIsEnd = "_roundIsEnd";

		[Token(Token = "0x40015A3")]
		private const string KEY_isLegalTime = "_isLegalTime";

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameTennis Instance;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public bool UseLocalConfig;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		public bool TeleportMode;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GameTennisConfig _gameTennisConfig;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Tooltip("网球")]
		private GameObject _tennisPrefab;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[Tooltip("球拍")]
		private GameObject _tennisRocketPrefab;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip("奖杯1")]
		[SerializeField]
		private GameObject _tennisTrophyPrefab1;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Tooltip("奖杯2")]
		[SerializeField]
		private GameObject _tennisTrophyPrefab2;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Tooltip("颁奖台特效")]
		[SerializeField]
		private GameObject _tennisPodiumEffectPrefab;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Tooltip("触网特效")]
		[SerializeField]
		private GameObject _triggerMeshEffectPrefab;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[Tooltip("出界特效")]
		private GameObject _outBoundsEffectPrefab;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private TennisUILocator _uiLocator;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject _tennisInitNode1;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GameObject _tennisInitNode2;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Tooltip("变球Buff模型")]
		[SerializeField]
		private TennisBuffModel _buffModelPrefab;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[Tooltip("变球Buff模型父节点")]
		private Transform _buffModelParent;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Tooltip("发球机模型")]
		[SerializeField]
		private GameObject _serveMachineModel;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Tooltip("球拍位置结点")]
		[SerializeField]
		private List<GameObject> _tennisRocketPos;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private GameObject _winnerPodium;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject _loserPodium;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private NetworkVariable<long> _roomCreateTimestamp;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NetworkVariable<int> _roomTennisIndex;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private NetworkVariable<NetworkBehaviourReference> _tennisRef;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private NetworkList<NetworkBehaviourReference> _tennisRacketsRef;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<TennisBuffModel> _tennisBuffModels;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<TennisPlayer> _tennisPlayers;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private HashSet<int> _roundIsFinished;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private FloatRollingAverage _averageRtt;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool _isWaitServe;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float _autoSpawnTennisIntervalCnt;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool _isWaitDoubleServe;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
		private bool _isDoubleServe;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private int _buffSpawnIntervalCnt;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool _buffModelIsEnable;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private long _serveTimeoutTimerID;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private long _roundEndTimeoutTimerID;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private GameObject tempPodiumEffect;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private RoomManager _curRoomManager;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameState _curGameState;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private int _curGame;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private int _curRound;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private int _curHitTennisCount;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int _curPlayerIdx;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int _curServePlayerIdx;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool _isSingleTrainMode;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private double _roundStartTime;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private double _serveStartTime;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool _roundIsEnd;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
		private bool _isLegalTime;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public DateTime startServeTime;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private DateTime _startTrainTime;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private DateTime _startMatchTime;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private DateTime _finishMatchTime;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private DateTime _startTennisTime;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private int _selfRoundEndScore;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private int _otherRoundEndScore;

		[Token(Token = "0x1700018A")]
		public static GameTennis S
		{
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x6EEF3E8", Offset = "0x6EEF3E8", VA = "0x6EEF3E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018B")]
		public int TennisGameNumber
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x6EEF440", Offset = "0x6EEF440", VA = "0x6EEF440")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700018C")]
		public float Gravity
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x6EEF45C", Offset = "0x6EEF45C", VA = "0x6EEF45C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018D")]
		public float FlatAngle
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0x6EEF478", Offset = "0x6EEF478", VA = "0x6EEF478")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018E")]
		public Vector3 CoreAreaShotPowerRatio
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x6EEF494", Offset = "0x6EEF494", VA = "0x6EEF494")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700018F")]
		public Vector3 NormalAreadshotPowerRatio
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x6EEF4B4", Offset = "0x6EEF4B4", VA = "0x6EEF4B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000190")]
		public float AutoSpawnTennisInterval
		{
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x6EEF4D4", Offset = "0x6EEF4D4", VA = "0x6EEF4D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000191")]
		public Vector3 AutoSpawnSpeedMin
		{
			[Token(Token = "0x6001585")]
			[Address(RVA = "0x6EEF4F0", Offset = "0x6EEF4F0", VA = "0x6EEF4F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000192")]
		public Vector3 AutoSpawnSpeedMax
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x6EEF510", Offset = "0x6EEF510", VA = "0x6EEF510")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000193")]
		public Vector3 ServeAlginOffestLeft
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x6EEF530", Offset = "0x6EEF530", VA = "0x6EEF530")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000194")]
		public Vector3 ServeAlginOffestRight
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x6EEF550", Offset = "0x6EEF550", VA = "0x6EEF550")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000195")]
		public Vector3 ServePlayerOffsetLeft
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x6EEF570", Offset = "0x6EEF570", VA = "0x6EEF570")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000196")]
		public Vector3 ServePlayerOffsetRight
		{
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x6EEF590", Offset = "0x6EEF590", VA = "0x6EEF590")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000197")]
		public float ShotTennisPitchMax
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x6EEF5B0", Offset = "0x6EEF5B0", VA = "0x6EEF5B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000198")]
		public float ShotTennisYawMin
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x6EEF5CC", Offset = "0x6EEF5CC", VA = "0x6EEF5CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000199")]
		public float HorizontalRatio1
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x6EEF5E8", Offset = "0x6EEF5E8", VA = "0x6EEF5E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019A")]
		public float ShotTennisYawMeduim
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x6EEF604", Offset = "0x6EEF604", VA = "0x6EEF604")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019B")]
		public float HorizontalRatio2
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x6EEF620", Offset = "0x6EEF620", VA = "0x6EEF620")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019C")]
		public float ShotTennisYawMax
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x6EEF63C", Offset = "0x6EEF63C", VA = "0x6EEF63C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019D")]
		public float ForwardSpeedMax
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x6EEF658", Offset = "0x6EEF658", VA = "0x6EEF658")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019E")]
		public float VerticalSpeedMax
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x6EEF674", Offset = "0x6EEF674", VA = "0x6EEF674")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019F")]
		public float ServerCorrectForwardSpeedScaleMin
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x6EEF690", Offset = "0x6EEF690", VA = "0x6EEF690")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A0")]
		public float ServerCorrectForwardSpeedScaleMax
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x6EEF6AC", Offset = "0x6EEF6AC", VA = "0x6EEF6AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A1")]
		public float ServerCorrectSideSpeedScaleMin
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x6EEF6C8", Offset = "0x6EEF6C8", VA = "0x6EEF6C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A2")]
		public float ServerCorrectSideSpeedScaleMax
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x6EEF6E4", Offset = "0x6EEF6E4", VA = "0x6EEF6E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A3")]
		public float ServeVerticalSpeedMin
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x6EEF700", Offset = "0x6EEF700", VA = "0x6EEF700")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A4")]
		public bool TeenMode
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0x6EEF71C", Offset = "0x6EEF71C", VA = "0x6EEF71C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public bool EasyServeMode
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x6EEF738", Offset = "0x6EEF738", VA = "0x6EEF738")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A6")]
		public Vector2 TeenModeForwardVelocityMin
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x6EEF754", Offset = "0x6EEF754", VA = "0x6EEF754")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001A7")]
		public Vector2 TeenModeForwardVelocityMax
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x6EEF770", Offset = "0x6EEF770", VA = "0x6EEF770")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001A8")]
		public float AudioRTPCMaxDistance
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x6EEF78C", Offset = "0x6EEF78C", VA = "0x6EEF78C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A9")]
		public float ThumpCriticalVelocity
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x6EEF7A8", Offset = "0x6EEF7A8", VA = "0x6EEF7A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AA")]
		public float ThumpMaxVelocity
		{
			[Token(Token = "0x600159E")]
			[Address(RVA = "0x6EEF7C4", Offset = "0x6EEF7C4", VA = "0x6EEF7C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AB")]
		public float MoonballSpeedhreshold
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x6EEF7E0", Offset = "0x6EEF7E0", VA = "0x6EEF7E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AC")]
		public float EloK
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x6EEF7FC", Offset = "0x6EEF7FC", VA = "0x6EEF7FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AD")]
		public Vector3 TennisCourtScale
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x6EEF818", Offset = "0x6EEF818", VA = "0x6EEF818")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001AE")]
		public List<BallConfig> BuffBallConfigs
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x6EEF838", Offset = "0x6EEF838", VA = "0x6EEF838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		public int BuffSpawnIntervalMin
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x6EEF854", Offset = "0x6EEF854", VA = "0x6EEF854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B0")]
		public int BuffSpawnIntervalMax
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x6EEF870", Offset = "0x6EEF870", VA = "0x6EEF870")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001B1")]
		public List<Vector3> BuffSpawnPositions
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x6EEF88C", Offset = "0x6EEF88C", VA = "0x6EEF88C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public MatchConfig CurMatchConfig
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x6EEF8A8", Offset = "0x6EEF8A8", VA = "0x6EEF8A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public float TopSpinBackwardOffset
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x6EEF8C4", Offset = "0x6EEF8C4", VA = "0x6EEF8C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B4")]
		public float FlatBackwardOffset
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x6EEF8E0", Offset = "0x6EEF8E0", VA = "0x6EEF8E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B5")]
		public float BackSpinBackwardOffset
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x6EEF8FC", Offset = "0x6EEF8FC", VA = "0x6EEF8FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B6")]
		public float SideWaysOffset
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x6EEF918", Offset = "0x6EEF918", VA = "0x6EEF918")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B7")]
		public float TeleportMinPowerScale
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x6EEF934", Offset = "0x6EEF934", VA = "0x6EEF934")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B8")]
		public float TeleportStandardPowerX
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x6EEF950", Offset = "0x6EEF950", VA = "0x6EEF950")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B9")]
		public float PlayAgainCountdown
		{
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0x6EEF96C", Offset = "0x6EEF96C", VA = "0x6EEF96C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BA")]
		public float RoundIntervalSecond
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x6EEF988", Offset = "0x6EEF988", VA = "0x6EEF988")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BB")]
		public float TennisRacketEa
		{
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x6EEF9A4", Offset = "0x6EEF9A4", VA = "0x6EEF9A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BC")]
		public float ServeTimeOutDuration
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x6EEF9C0", Offset = "0x6EEF9C0", VA = "0x6EEF9C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BD")]
		public Vector3 TennisWaitServePosition
		{
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x6EEF9DC", Offset = "0x6EEF9DC", VA = "0x6EEF9DC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001BE")]
		public float TennisWaitServeDuration1
		{
			[Token(Token = "0x60015B2")]
			[Address(RVA = "0x6EEFA00", Offset = "0x6EEFA00", VA = "0x6EEFA00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BF")]
		public float TennisWaitServeDuration2
		{
			[Token(Token = "0x60015B3")]
			[Address(RVA = "0x6EEFA1C", Offset = "0x6EEFA1C", VA = "0x6EEFA1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C0")]
		public float PlayerCloseToTheBorderDist
		{
			[Token(Token = "0x60015B4")]
			[Address(RVA = "0x6EEFA38", Offset = "0x6EEFA38", VA = "0x6EEFA38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C1")]
		public float BorderCorrectZVelocity
		{
			[Token(Token = "0x60015B5")]
			[Address(RVA = "0x6EEFA54", Offset = "0x6EEFA54", VA = "0x6EEFA54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C2")]
		public float NetMeshHeight
		{
			[Token(Token = "0x60015B6")]
			[Address(RVA = "0x6EEFA70", Offset = "0x6EEFA70", VA = "0x6EEFA70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C3")]
		public float ReboundCoefficient
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0x6EEFA8C", Offset = "0x6EEFA8C", VA = "0x6EEFA8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C4")]
		public float TopSpinOmegaRatio
		{
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0x6EEFAA8", Offset = "0x6EEFAA8", VA = "0x6EEFAA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C5")]
		public float BackSpinOmegaRatio
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0x6EEFAC4", Offset = "0x6EEFAC4", VA = "0x6EEFAC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C6")]
		public Vector2 TennisRacketMoveDist
		{
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0x6EEFAE0", Offset = "0x6EEFAE0", VA = "0x6EEFAE0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001C7")]
		public Vector2 TennisRacketMoveDistEffectVelocity
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0x6EEFB00", Offset = "0x6EEFB00", VA = "0x6EEFB00")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001C8")]
		private RoomManager CurRoomManager
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0x6EEFB20", Offset = "0x6EEFB20", VA = "0x6EEFB20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		public GameState CurGameState
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0x6EEFBCC", Offset = "0x6EEFBCC", VA = "0x6EEFBCC")]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0x6EEFBD4", Offset = "0x6EEFBD4", VA = "0x6EEFBD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CA")]
		public int CurGame
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0x6EEFC4C", Offset = "0x6EEFC4C", VA = "0x6EEFC4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0x6EEFC54", Offset = "0x6EEFC54", VA = "0x6EEFC54")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public int CurRound
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0x6EEFCCC", Offset = "0x6EEFCCC", VA = "0x6EEFCCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0x6EEFCD4", Offset = "0x6EEFCD4", VA = "0x6EEFCD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public int CurHitTennisCount
		{
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0x6EEFD4C", Offset = "0x6EEFD4C", VA = "0x6EEFD4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0x6EEFD54", Offset = "0x6EEFD54", VA = "0x6EEFD54")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public int CurPlayerIdx
		{
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0x6EEFDCC", Offset = "0x6EEFDCC", VA = "0x6EEFDCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0x6EEFDD4", Offset = "0x6EEFDD4", VA = "0x6EEFDD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public int CurServePlayerIdx
		{
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0x6EEFE4C", Offset = "0x6EEFE4C", VA = "0x6EEFE4C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0x6EEFE54", Offset = "0x6EEFE54", VA = "0x6EEFE54")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool IsSingleTrainMode
		{
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0x6EEFECC", Offset = "0x6EEFECC", VA = "0x6EEFECC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0x6EEFED4", Offset = "0x6EEFED4", VA = "0x6EEFED4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public double RoundStartTime
		{
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0x6EEFF4C", Offset = "0x6EEFF4C", VA = "0x6EEFF4C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0x6EEFF54", Offset = "0x6EEFF54", VA = "0x6EEFF54")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D1")]
		public double ServeStartTime
		{
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0x6EEFFD4", Offset = "0x6EEFFD4", VA = "0x6EEFFD4")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0x6EEFFDC", Offset = "0x6EEFFDC", VA = "0x6EEFFDC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public bool RoundIsEnd
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0x6EF005C", Offset = "0x6EF005C", VA = "0x6EF005C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0x6EF0064", Offset = "0x6EF0064", VA = "0x6EF0064")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public bool IsLegalTime
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0x6EF00DC", Offset = "0x6EF00DC", VA = "0x6EF00DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0x6EF00E4", Offset = "0x6EF00E4", VA = "0x6EF00E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public ulong CurPlayerClientId
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0x6EF015C", Offset = "0x6EF015C", VA = "0x6EF015C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001D5")]
		public TennisPlayer CurTennisPlayer
		{
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0x6EF01BC", Offset = "0x6EF01BC", VA = "0x6EF01BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public TennisPlayer NoCurTennisPlayer
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0x6EF0210", Offset = "0x6EF0210", VA = "0x6EF0210")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public float AverageRtt
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0x6EF026C", Offset = "0x6EF026C", VA = "0x6EF026C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001D8")]
		public Vector3 ServeAlginPosition
		{
			[Token(Token = "0x60015D7")]
			[Address(RVA = "0x6EF0288", Offset = "0x6EF0288", VA = "0x6EF0288")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001D9")]
		public Transform BaseNode
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0x6EF02A4", Offset = "0x6EF02A4", VA = "0x6EF02A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public Vector3 BasePosition
		{
			[Token(Token = "0x60015D9")]
			[Address(RVA = "0x6EF0324", Offset = "0x6EF0324", VA = "0x6EF0324")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DB")]
		public Vector3 BaseLocalEulerAngles
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0x6EF0340", Offset = "0x6EF0340", VA = "0x6EF0340")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DC")]
		public Tennis MainTennis
		{
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0x6EF035C", Offset = "0x6EF035C", VA = "0x6EF035C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public int PlayerCount
		{
			[Token(Token = "0x60015DC")]
			[Address(RVA = "0x6EF03E8", Offset = "0x6EF03E8", VA = "0x6EF03E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DE")]
		public int ClientOnlineCount
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0x6EF0400", Offset = "0x6EF0400", VA = "0x6EF0400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DF")]
		public TennisPlayer SelfTennisPlayer
		{
			[Token(Token = "0x60015DE")]
			[Address(RVA = "0x6EF02E0", Offset = "0x6EF02E0", VA = "0x6EF02E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public TennisPlayer OtherTennisPlayer
		{
			[Token(Token = "0x60015DF")]
			[Address(RVA = "0x6EF0570", Offset = "0x6EF0570", VA = "0x6EF0570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public bool IsMatching
		{
			[Token(Token = "0x60015E0")]
			[Address(RVA = "0x6EF0630", Offset = "0x6EF0630", VA = "0x6EF0630")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		public bool IsWaiting
		{
			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x6EF0640", Offset = "0x6EF0640", VA = "0x6EF0640")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public bool IsPreparing
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x6EF0650", Offset = "0x6EF0650", VA = "0x6EF0650")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public bool IsGaming
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x6EF0660", Offset = "0x6EF0660", VA = "0x6EF0660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E5")]
		public bool IsEnding
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x6EF0670", Offset = "0x6EF0670", VA = "0x6EF0670")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E6")]
		public Transform UIGameRankListLocatorTransform
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x6EF0680", Offset = "0x6EF0680", VA = "0x6EF0680")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public bool LcoalServer
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x6EF06F0", Offset = "0x6EF06F0", VA = "0x6EF06F0")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x6EF06F8", Offset = "0x6EF06F8", VA = "0x6EF06F8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public bool DataIsLoaded
		{
			[Token(Token = "0x60015E8")]
			[Address(RVA = "0x6EF0704", Offset = "0x6EF0704", VA = "0x6EF0704")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015E9")]
			[Address(RVA = "0x6EF070C", Offset = "0x6EF070C", VA = "0x6EF070C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public double PodiumEndTime
		{
			[Token(Token = "0x60015EA")]
			[Address(RVA = "0x6EF0718", Offset = "0x6EF0718", VA = "0x6EF0718")]
			[CompilerGenerated]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60015EB")]
			[Address(RVA = "0x6EF0720", Offset = "0x6EF0720", VA = "0x6EF0720")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public string BattleID
		{
			[Token(Token = "0x60015EC")]
			[Address(RVA = "0x6EF0728", Offset = "0x6EF0728", VA = "0x6EF0728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x6EF08BC", Offset = "0x6EF08BC", VA = "0x6EF08BC")]
		public TennisPlayer GetTennisPlayerByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x6EF0914", Offset = "0x6EF0914", VA = "0x6EF0914")]
		public ulong GetClientIdByIdx(int index)
		{
			return default(ulong);
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x6EF04A8", Offset = "0x6EF04A8", VA = "0x6EF04A8")]
		public TennisPlayer GetTennisPlayer(ulong clientId)
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x6EF0610", Offset = "0x6EF0610", VA = "0x6EF0610")]
		public int GetIndexByClientId(ulong clientId)
		{
			return default(int);
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x6EF0978", Offset = "0x6EF0978", VA = "0x6EF0978")]
		public Vector3 GetClientTargetDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x6EF0A68", Offset = "0x6EF0A68", VA = "0x6EF0A68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x6EF0E28", Offset = "0x6EF0E28", VA = "0x6EF0E28")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x6EF168C", Offset = "0x6EF168C", VA = "0x6EF168C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x6EF1A88", Offset = "0x6EF1A88", VA = "0x6EF1A88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x6EF1D6C", Offset = "0x6EF1D6C", VA = "0x6EF1D6C", Slot = "11")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x6EF3158", Offset = "0x6EF3158", VA = "0x6EF3158")]
		public void OnApplicationFocus(bool focus)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x6EF341C", Offset = "0x6EF341C", VA = "0x6EF341C", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x6EF343C", Offset = "0x6EF343C", VA = "0x6EF343C", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x6EF3660", Offset = "0x6EF3660", VA = "0x6EF3660")]
		private void RegisterNetworkValueChangeClient()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x6EF3C28", Offset = "0x6EF3C28", VA = "0x6EF3C28")]
		private void RegisterMatchEventClient()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x6EF2FAC", Offset = "0x6EF2FAC", VA = "0x6EF2FAC")]
		private void RemoveMatchEventClient()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x6EF41D0", Offset = "0x6EF41D0", VA = "0x6EF41D0")]
		private void OnCanSetPositionClient(string eventID, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x6EF4260", Offset = "0x6EF4260", VA = "0x6EF4260")]
		private void OnAvatarUpateClient(string eventID, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x6EF3F60", Offset = "0x6EF3F60", VA = "0x6EF3F60")]
		private void MatchPrepareCountdownClient(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x6EF3EA8", Offset = "0x6EF3EA8", VA = "0x6EF3EA8")]
		private void MatchMatchWaitClient(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x6EF45BC", Offset = "0x6EF45BC", VA = "0x6EF45BC")]
		private void RegisterGuideEventClient()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x6EF2D90", Offset = "0x6EF2D90", VA = "0x6EF2D90")]
		private void RemoveGuideEventClient()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x6EF481C", Offset = "0x6EF481C", VA = "0x6EF481C")]
		private void GuidePlayVideoClient(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x6EF49BC", Offset = "0x6EF49BC", VA = "0x6EF49BC")]
		private void GuidePauseVideoClient(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x6EF4B10", Offset = "0x6EF4B10", VA = "0x6EF4B10")]
		private void GuidePlayFinishClient(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x6EF4C48", Offset = "0x6EF4C48", VA = "0x6EF4C48")]
		private void GuidePlayClickEndTrainClient(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x6EF4D14", Offset = "0x6EF4D14", VA = "0x6EF4D14")]
		public void OnEnterRoomResultTrackerLog(string eventId, JsonObject paras)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x6EF4E00", Offset = "0x6EF4E00", VA = "0x6EF4E00")]
		public void OnStayRoomTrackerLog(string eventId, JsonObject paras)
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x6EF26B0", Offset = "0x6EF26B0", VA = "0x6EF26B0")]
		public void SetOnStayRoomTrackerLog()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x6EF3288", Offset = "0x6EF3288", VA = "0x6EF3288")]
		private void RefreshPlayerPositionClient(bool resetRot = true)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x6EF54C0", Offset = "0x6EF54C0", VA = "0x6EF54C0")]
		private void SetPlayer2ServePositionClient()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x6EF43B4", Offset = "0x6EF43B4", VA = "0x6EF43B4")]
		private void SendUserDataClient()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x6EF59EC", Offset = "0x6EF59EC", VA = "0x6EF59EC")]
		private void CreateBuffModelClient()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x6EF44C8", Offset = "0x6EF44C8", VA = "0x6EF44C8")]
		public void SetTrainStateClient(bool isTrain)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x6EF5E48", Offset = "0x6EF5E48", VA = "0x6EF5E48")]
		public void SetBuffStateClient(bool isShow, bool showEffect)
		{
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x6EF1250", Offset = "0x6EF1250", VA = "0x6EF1250")]
		private void RegisterMatchEventServer()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x6EF23B4", Offset = "0x6EF23B4", VA = "0x6EF23B4")]
		private void RemoveMatchEventServer()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x6EF5FA4", Offset = "0x6EF5FA4", VA = "0x6EF5FA4")]
		private void MatchStartGameServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x6EF6064", Offset = "0x6EF6064", VA = "0x6EF6064")]
		private void MatchAddPlayerServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x6EF655C", Offset = "0x6EF655C", VA = "0x6EF655C")]
		private void MatchChangeGroupServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x6EF69DC", Offset = "0x6EF69DC", VA = "0x6EF69DC")]
		private void MatchDelPlayerServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x6EF6CCC", Offset = "0x6EF6CCC", VA = "0x6EF6CCC")]
		private void MatchPrepareCountdownServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x6EF6D54", Offset = "0x6EF6D54", VA = "0x6EF6D54")]
		private void MatchMatchWaitServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x6EF6DF0", Offset = "0x6EF6DF0", VA = "0x6EF6DF0")]
		private void OnNetworkPoolDeSpawnServer(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x6EF61DC", Offset = "0x6EF61DC", VA = "0x6EF61DC")]
		private int AddPlayerServer(PlayerInfo playerInfo)
		{
			return default(int);
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x6EF6A78", Offset = "0x6EF6A78", VA = "0x6EF6A78")]
		private int RemovePlayerServer(ulong clientId, int index = -1)
		{
			return default(int);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x6EF66C8", Offset = "0x6EF66C8", VA = "0x6EF66C8")]
		private void ChangeGroupPlayerServer(PlayerInfo playerInfo)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x6EF10CC", Offset = "0x6EF10CC", VA = "0x6EF10CC")]
		private void CreateTennisAndRacketServer()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x6EF71E0", Offset = "0x6EF71E0", VA = "0x6EF71E0")]
		private void SetTrainStateServer(bool isTrain, int index = 0)
		{
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0x6EF7468", Offset = "0x6EF7468", VA = "0x6EF7468")]
		private void SetMainTennisVisableServer(bool isShow)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x6EF5FA8", Offset = "0x6EF5FA8", VA = "0x6EF5FA8")]
		private void StartTennisServer()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x6EF7C20", Offset = "0x6EF7C20", VA = "0x6EF7C20")]
		private void StartNewGameServer()
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x6EF81CC", Offset = "0x6EF81CC", VA = "0x6EF81CC")]
		private void StartNewRoundServer()
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x6EF8C84", Offset = "0x6EF8C84", VA = "0x6EF8C84")]
		private void EndRoundServer(int winPlayerIdx, float endDelay = 0f)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x6EF9268", Offset = "0x6EF9268", VA = "0x6EF9268")]
		private void EndGameServer(int winIndex)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x6EF9A2C", Offset = "0x6EF9A2C", VA = "0x6EF9A2C")]
		private void EndTennisServer(int winIndex, bool otherExit = false)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x6EFAEE0", Offset = "0x6EFAEE0", VA = "0x6EFAEE0")]
		private void SpawnTennisBuffsServer()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x6EFB314", Offset = "0x6EFB314", VA = "0x6EFB314")]
		private void AddBuffIntervalCntServer()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x6EF778C", Offset = "0x6EF778C", VA = "0x6EF778C")]
		private void SetBuffStateServer(bool isShow, bool showEffect)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x6EF8B44", Offset = "0x6EF8B44", VA = "0x6EF8B44")]
		public void CheckServeTimeoutServer()
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x6EFB4E4", Offset = "0x6EFB4E4", VA = "0x6EFB4E4")]
		public void CheckRoundEndTimeoutServer()
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x6EF8F0C", Offset = "0x6EF8F0C", VA = "0x6EF8F0C")]
		public void CancelServeTimeoutServer()
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x6EF8F44", Offset = "0x6EF8F44", VA = "0x6EF8F44")]
		public void CancelRoundEndTimeoutServer()
		{
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0x6EF63C8", Offset = "0x6EF63C8", VA = "0x6EF63C8")]
		public void ResetMainTennisOwnerServer()
		{
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x6EFB730", Offset = "0x6EFB730", VA = "0x6EFB730")]
		private void ChangeTennisAuthoritative(bool isStart = false)
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x6EF1B84", Offset = "0x6EF1B84", VA = "0x6EF1B84")]
		private void SetTennisAuthoritative(int idx, bool isStart = false)
		{
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x6EF83E8", Offset = "0x6EF83E8", VA = "0x6EF83E8")]
		public void ShowEventToast(TennisEventEnum eventEnum, float duration = 3f, float delay = 0f, [Optional] ulong[] clientIds)
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x6EF5CE8", Offset = "0x6EF5CE8", VA = "0x6EF5CE8")]
		[ServerRpc(RequireOwnership = false)]
		public void SetTrainStateServerRpc(bool isTrain, int index)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x6EFBDD0", Offset = "0x6EFBDD0", VA = "0x6EFBDD0")]
		[ServerRpc(RequireOwnership = false)]
		public void DespawnNetworkObjectServerRpc(NetworkObjectReference networkObjectReference)
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x6EFBAD8", Offset = "0x6EFBAD8", VA = "0x6EFBAD8")]
		[ServerRpc(RequireOwnership = false)]
		private void SetTennisAuthoritativeServerRpc(byte idx, bool isStart)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x6EFBF14", Offset = "0x6EFBF14", VA = "0x6EFBF14")]
		[ServerRpc(RequireOwnership = false)]
		private void SendReadyServerRpc(ulong clientId)
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x6EF5818", Offset = "0x6EF5818", VA = "0x6EF5818")]
		[ServerRpc(RequireOwnership = false)]
		private void SendUserDataServerRpc(string bust, string thumbnail, [Optional] ServerRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x6EFC0CC", Offset = "0x6EFC0CC", VA = "0x6EFC0CC")]
		[ServerRpc(RequireOwnership = false)]
		public void OnHitTennisServerRpc(ulong clientId, NetworkObjectReference networkObjectReference)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x6EFC360", Offset = "0x6EFC360", VA = "0x6EFC360")]
		[ServerRpc(RequireOwnership = false)]
		public void OnCatchTennisServerRpc(NetworkObjectReference networkObjectReference)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x6EFC4E4", Offset = "0x6EFC4E4", VA = "0x6EFC4E4")]
		[ServerRpc(RequireOwnership = false)]
		public void OnLandTennisServerRpc(int round, int landCount, TennisStateType stateType, Vector3 landPosition)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x6EFD304", Offset = "0x6EFD304", VA = "0x6EFD304")]
		[ServerRpc(RequireOwnership = false)]
		public void ApplayBallConfigServerRpc(NetworkObjectReference networkObjectReference, string buffName)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x6EF7A78", Offset = "0x6EF7A78", VA = "0x6EF7A78")]
		[ClientRpc]
		private void StartTennisClientRpc()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x6EF7DCC", Offset = "0x6EF7DCC", VA = "0x6EF7DCC")]
		[ClientRpc]
		private void StartGameClientRpc(int game, int serveIdx)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x6EF87D8", Offset = "0x6EF87D8", VA = "0x6EF87D8")]
		[ClientRpc]
		private void StartRoundClientRpc(int round)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x6EFB748", Offset = "0x6EFB748", VA = "0x6EFB748")]
		[ClientRpc]
		private void OnStartServeClientRpc(int playerIdx, bool isDoubleServe = false)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x6EF8F70", Offset = "0x6EF8F70", VA = "0x6EF8F70")]
		[ClientRpc]
		private void OnRoundEndClientRpc(int round, int winPlayerIdx, float endDelay)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x6EF9508", Offset = "0x6EF9508", VA = "0x6EF9508")]
		[ClientRpc]
		private void PlayTennisScoreVoiceClientRpc(float endDelay)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x6EF9858", Offset = "0x6EF9858", VA = "0x6EF9858")]
		[ClientRpc]
		private void OnPreGameEndClientRpc(int game, int winPlayerIdx, int winScore, int loseScore)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x6EF9C1C", Offset = "0x6EF9C1C", VA = "0x6EF9C1C")]
		[ClientRpc]
		private void OnGameEndClientRpc(int game, int winPlayerIdx, bool isEnd)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x6EFA688", Offset = "0x6EFA688", VA = "0x6EFA688")]
		[ClientRpc]
		private void OnTennisEndClientRpc(int winPlayerIdx, bool otherExit)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x6EFCE00", Offset = "0x6EFCE00", VA = "0x6EFCE00")]
		[ClientRpc]
		private void OnTennisLandClientRpc(bool endRound, int round, int landCount, TennisStateType stateType, Vector3 landPosition)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x6EFDA28", Offset = "0x6EFDA28", VA = "0x6EFDA28")]
		[ClientRpc]
		private void SpawnTennisClientRpc(NetworkObjectReference networkObjectReference, bool isMain, [Optional] ClientRpcParams clientRpcParams)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x6EF6EFC", Offset = "0x6EF6EFC", VA = "0x6EF6EFC")]
		[ClientRpc]
		private void SyncTennisPlayersClientRpc(TennisPlayer tennisPlayer)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x6EFBC38", Offset = "0x6EFBC38", VA = "0x6EFBC38")]
		[ClientRpc]
		private void ShowEventToastClientRpc(TennisEventEnum eventEnum, float duration, float delay, [Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x6EFCB0C", Offset = "0x6EFCB0C", VA = "0x6EFCB0C")]
		[ClientRpc]
		private void ShowTennisLandEffectClientRpc(TennisStateType stateType, Vector3 landPosition)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x6EF6880", Offset = "0x6EF6880", VA = "0x6EF6880")]
		[ClientRpc]
		private void OnChangeGroupClientRpc()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x6EF779C", Offset = "0x6EF779C", VA = "0x6EF779C")]
		[ClientRpc]
		private void SetTrainStateClientRpc(bool isTrain)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x6EF7940", Offset = "0x6EF7940", VA = "0x6EF7940")]
		[ClientRpc]
		private void SetMainTennisVisableClientRpc(bool isShow)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x6EFB378", Offset = "0x6EFB378", VA = "0x6EFB378")]
		[ClientRpc]
		private void SetBuffStateClientRpc(bool isShow, bool showEffect)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x6EFB110", Offset = "0x6EFB110", VA = "0x6EFB110")]
		[ClientRpc]
		private void SpawnTennisBuffClientRpc(int index, string buffName)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x6EF859C", Offset = "0x6EF859C", VA = "0x6EF859C")]
		[ClientRpc]
		private void ApplayBallConfigClientRpc(NetworkObjectReference networkObjectReference, string buffName)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x6EFDEEC", Offset = "0x6EFDEEC", VA = "0x6EFDEEC")]
		[ClientRpc]
		private void ShowServeCountdownClientRpc([Optional] ClientRpcParams rpcParams)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x6EFB5E0", Offset = "0x6EFB5E0", VA = "0x6EFB5E0")]
		[ClientRpc]
		private void HideServeCountdownClientRpc()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0x6EFE034", Offset = "0x6EFE034", VA = "0x6EFE034")]
		private void PlayEventAudioClient(TennisEventEnum eventEnum)
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0x6EFE234", Offset = "0x6EFE234", VA = "0x6EFE234")]
		private void OnClientDisconnectCallback(ulong clientId)
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0x6EF17E8", Offset = "0x6EF17E8", VA = "0x6EF17E8")]
		private NetworkBehaviourReference SpwanTennisServer(ulong clientId, bool isMain = false)
		{
			return default(NetworkBehaviourReference);
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0x6EF7348", Offset = "0x6EF7348", VA = "0x6EF7348")]
		private NetworkBehaviourReference SpawnTennisRocketServer(ulong clientId, GameObject posGo, RacketSkin skinType)
		{
			return default(NetworkBehaviourReference);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x6EF5754", Offset = "0x6EF5754", VA = "0x6EF5754")]
		public Vector3 GetTennisServePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x6EFE3C0", Offset = "0x6EFE3C0", VA = "0x6EFE3C0")]
		public Vector3 GetTennisWaitServePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x6EFA370", Offset = "0x6EFA370", VA = "0x6EFA370")]
		private void ReportLeaderBoardInfo(int winIndex)
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x6EF154C", Offset = "0x6EF154C", VA = "0x6EF154C")]
		private void InitGameConfigurationParam(string eventID, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0x6EFE430", Offset = "0x6EFE430", VA = "0x6EFE430")]
		private void OnLoadSoundBank(string eventID, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x6EFE774", Offset = "0x6EFE774", VA = "0x6EFE774")]
		private void OnMatchEventCountDown(string eventID, object sender, IArgs args)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0x6EFDD60", Offset = "0x6EFDD60", VA = "0x6EFDD60")]
		private BallConfig GetBuffConfigByName(string buffName)
		{
			return null;
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0x6EF9770", Offset = "0x6EF9770", VA = "0x6EF9770")]
		public long Wait(float delay, Action callback, GameObject sender)
		{
			return default(long);
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0x6EFD4CC", Offset = "0x6EFD4CC", VA = "0x6EFD4CC")]
		private void OnAwardCeremonyClient(bool isWinner)
		{
		}

		[Token(Token = "0x600165C")]
		[Address(RVA = "0x6EFE8E0", Offset = "0x6EFE8E0", VA = "0x6EFE8E0")]
		[ServerRpc(RequireOwnership = false)]
		private void SpawnTennisTrophyServerRpc(ulong clientId, bool isWinner)
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0x6EFEC88", Offset = "0x6EFEC88", VA = "0x6EFEC88")]
		public GameTennis()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x6F00288", Offset = "0x6F00288", VA = "0x6F00288")]
		private static void __rpc_handler_869452888(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x6F003AC", Offset = "0x6F003AC", VA = "0x6F003AC")]
		private static void __rpc_handler_4034121945(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x6F00490", Offset = "0x6F00490", VA = "0x6F00490")]
		private static void __rpc_handler_1427657446(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x6F005B4", Offset = "0x6F005B4", VA = "0x6F005B4")]
		private static void __rpc_handler_2406561062(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x6F00698", Offset = "0x6F00698", VA = "0x6F00698")]
		private static void __rpc_handler_1611102536(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x6F007F8", Offset = "0x6F007F8", VA = "0x6F007F8")]
		private static void __rpc_handler_691692521(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x6F0090C", Offset = "0x6F0090C", VA = "0x6F0090C")]
		private static void __rpc_handler_3072111648(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x6F009F0", Offset = "0x6F009F0", VA = "0x6F009F0")]
		private static void __rpc_handler_3839889599(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x6F00B68", Offset = "0x6F00B68", VA = "0x6F00B68")]
		private static void __rpc_handler_3261298525(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x6F00CAC", Offset = "0x6F00CAC", VA = "0x6F00CAC")]
		private static void __rpc_handler_2039701526(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x6F00D54", Offset = "0x6F00D54", VA = "0x6F00D54")]
		private static void __rpc_handler_695221568(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x6F00E54", Offset = "0x6F00E54", VA = "0x6F00E54")]
		private static void __rpc_handler_1317710587(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x6F00F38", Offset = "0x6F00F38", VA = "0x6F00F38")]
		private static void __rpc_handler_2613546852(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x6F0105C", Offset = "0x6F0105C", VA = "0x6F0105C")]
		private static void __rpc_handler_2477692482(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x6F01194", Offset = "0x6F01194", VA = "0x6F01194")]
		private static void __rpc_handler_3793855218(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x6F01278", Offset = "0x6F01278", VA = "0x6F01278")]
		private static void __rpc_handler_3827245882(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x6F013AC", Offset = "0x6F013AC", VA = "0x6F013AC")]
		private static void __rpc_handler_2550210831(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x6F014EC", Offset = "0x6F014EC", VA = "0x6F014EC")]
		private static void __rpc_handler_1558629665(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x6F01610", Offset = "0x6F01610", VA = "0x6F01610")]
		private static void __rpc_handler_2220265272(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x6F017CC", Offset = "0x6F017CC", VA = "0x6F017CC")]
		private static void __rpc_handler_2965573840(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x6F01934", Offset = "0x6F01934", VA = "0x6F01934")]
		private static void __rpc_handler_3257898395(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x6F01A60", Offset = "0x6F01A60", VA = "0x6F01A60")]
		private static void __rpc_handler_3336071726(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x6F01BD8", Offset = "0x6F01BD8", VA = "0x6F01BD8")]
		private static void __rpc_handler_2208074597(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x6F01D00", Offset = "0x6F01D00", VA = "0x6F01D00")]
		private static void __rpc_handler_2283578201(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x6F01DA8", Offset = "0x6F01DA8", VA = "0x6F01DA8")]
		private static void __rpc_handler_3025556228(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x6F01E94", Offset = "0x6F01E94", VA = "0x6F01E94")]
		private static void __rpc_handler_3513336289(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x6F01F80", Offset = "0x6F01F80", VA = "0x6F01F80")]
		private static void __rpc_handler_2824998430(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x6F02098", Offset = "0x6F02098", VA = "0x6F02098")]
		private static void __rpc_handler_2722300130(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x6F021E0", Offset = "0x6F021E0", VA = "0x6F021E0")]
		private static void __rpc_handler_1505760368(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x6F02324", Offset = "0x6F02324", VA = "0x6F02324")]
		private static void __rpc_handler_636893038(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x6F02410", Offset = "0x6F02410", VA = "0x6F02410")]
		private static void __rpc_handler_2238883903(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x6F024B8", Offset = "0x6F024B8", VA = "0x6F024B8")]
		private static void __rpc_handler_2878732857(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x6F025DC", Offset = "0x6F025DC", VA = "0x6F025DC", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000393")]
	public class BallConfig : IRandomElement
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("速度比例(不影响轨迹)")]
		public float SpeedScale;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("弹力系数[0, 1]")]
		[Range(0f, 1f)]
		public float Bounciness;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("随机系数")]
		public float RandomValue;

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x5FD65EC", Offset = "0x5FD65EC", VA = "0x5FD65EC", Slot = "4")]
		public float GetRandomValue()
		{
			return default(float);
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x5FD65F4", Offset = "0x5FD65F4", VA = "0x5FD65F4")]
		public BallConfig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000394")]
	public class GameTennisConfig
	{
		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("比赛局数")]
		public int TennisGameNumber;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("重力")]
		public float Gravity;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("平击球角度范围")]
		public float FlatAngle;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("核心区击球速度系数")]
		public Vector3 CoreAreaShotPowerRatio;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("非核心区击球速度系数")]
		public Vector3 NormalAreadshotPowerRatio;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("发球机发球间隔")]
		public float AutoSpawnTennisInterval;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("赛间等待时间")]
		public float PlayAgainCountdown;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("发球机发球最小速度")]
		public Vector3 AutoSpawnSpeedMin;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("发球机发球最大速度")]
		public Vector3 AutoSpawnSpeedMax;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("发球左起始位置偏移")]
		public Vector3 ServeAlginOffestLeft;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("发球右起始位置偏移")]
		public Vector3 ServeAlginOffestRight;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("发球时玩家位置左偏移")]
		public Vector3 ServePlayerOffsetLeft;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Tooltip("发球时玩家位置右边偏移")]
		public Vector3 ServePlayerOffsetRight;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[Tooltip("击球最大俯仰角")]
		public float ShotTennisPitchMax;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Tooltip("击球修正最小偏转角")]
		public float ShotTennisYawMin;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[Tooltip("水平修正系数")]
		public float HorizontalRatio1;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[Tooltip("击球修正中等偏转角")]
		public float ShotTennisYawMeduim;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Tooltip("水平修正系数")]
		public float HorizontalRatio2;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[Tooltip("击球修正最大偏转角")]
		public float ShotTennisYawMax;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[Tooltip("最大前进速度")]
		public float ForwardSpeedMax;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[Tooltip("最大垂直速度")]
		public float VerticalSpeedMax;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[Tooltip("修正发球前方速度缩放下限")]
		public float ServerCorrectForwardSpeedScaleMin;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Tooltip("修正发球前方速度缩放上限")]
		public float ServerCorrectForwardSpeedScaleMax;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[Tooltip("修正发球侧方速度缩放下限")]
		public float ServerCorrectSideSpeedScaleMin;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Tooltip("修正发球侧方速度缩放上限")]
		public float ServerCorrectSideSpeedScaleMax;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[Tooltip("修正发球最小垂直速度")]
		public float ServeVerticalSpeedMin;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Tooltip("少儿模式")]
		public bool TeenMode;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		[Tooltip("简单发球模式")]
		public bool EasyServeMode;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[Tooltip("修正击球水平速度区间下限")]
		public Vector2 TeenModeForwardVelocityMin;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[Tooltip("修正击球水平速度区间上线")]
		public Vector2 TeenModeForwardVelocityMax;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[Tooltip("音效rtpc最大距离")]
		public float AudioRTPCMaxDistance;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[Tooltip("重击音效起始临界速度")]
		public float ThumpCriticalVelocity;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Tooltip("重击音效最大速度")]
		public float ThumpMaxVelocity;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[Tooltip("月亮球速度阈值")]
		public float MoonballSpeedhreshold;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[Tooltip("Elo K")]
		public float EloK;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Tooltip("球场缩放比例")]
		public Vector3 TennisCourtScale;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Tooltip("变球Buff")]
		public List<BallConfig> BuffBallConfigs;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Tooltip("Buff出现间隔Min")]
		public int BuffSpawnIntervalMin;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[Tooltip("Buff出现间隔Max")]
		public int BuffSpawnIntervalMax;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Tooltip("Buff出现位置")]
		public List<Vector3> BuffSpawnPositions;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Tooltip("匹配参数")]
		public MatchConfig CurMatchConfig;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Tooltip("上旋落点后方偏移")]
		public float TopSpinBackwardOffset;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[Tooltip("平击落点后方偏移")]
		public float FlatBackwardOffset;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[Tooltip("下旋落点后方偏移")]
		public float BackSpinBackwardOffset;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[Tooltip("落点侧方偏移")]
		public float SideWaysOffset;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[Tooltip("当角色在球网处，向前的力度比例")]
		public float TeleportMinPowerScale;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[Tooltip("角色的具球网距离为此时，向前的力度缩放为标准1")]
		public float TeleportStandardPowerX;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[Tooltip("回合间隔")]
		public float RoundIntervalSecond;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[Tooltip("球拍柔度系数")]
		public float TennisRacketEa;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[Tooltip("发球超时时间")]
		public float ServeTimeOutDuration;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[Tooltip("网球等待发球时位置")]
		public Vector3 TennisWaitServePosition;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[Tooltip("网球等待发球-1阶段时长，之后播放到你发球")]
		public float TennisWaitServeDuration1;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[Tooltip("网球等待发球-2阶段时长，之后飞到发球位置")]
		public float TennisWaitServeDuration2;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[Tooltip("距离球场边界多少时，修正Z方向速度")]
		public float PlayerCloseToTheBorderDist;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[Tooltip("靠近边界修正Z方向速度值")]
		public float BorderCorrectZVelocity;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[Tooltip("球网高度")]
		public float NetMeshHeight;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[Tooltip("球碰网之后反弹系数")]
		public float ReboundCoefficient;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[Tooltip("球的上旋转角速度大小")]
		public float TopSpinOmegaRatio;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[Tooltip("球的下旋转角速度大小")]
		public float BackSpinOmegaRatio;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[Tooltip("球拍移动距离区间")]
		public Vector2 TennisRacketMoveDist;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[Tooltip("球拍移动距离对速度影响比例区间")]
		public Vector2 TennisRacketMoveDistEffectVelocity;

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x5FD6614", Offset = "0x5FD6614", VA = "0x5FD6614")]
		public GameTennisConfig()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class NetworkVisable : NetworkBehaviour
	{
		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<GameObject> LinkObjects;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NetworkVariable<bool> IsVisable;

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x5FD66C0", Offset = "0x5FD66C0", VA = "0x5FD66C0")]
		public void Awake()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x5FD67A8", Offset = "0x5FD67A8", VA = "0x5FD67A8")]
		public void SetVisable(bool value)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x5FD6848", Offset = "0x5FD6848", VA = "0x5FD6848")]
		public NetworkVisable()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x5FD6984", Offset = "0x5FD6984", VA = "0x5FD6984", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000396")]
	public class Tennis : InteractableNetworkBehaviour
	{
		[Token(Token = "0x2000397")]
		[CompilerGenerated]
		private sealed class <OnLandClient>d__132 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x4001676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Tennis <>4__this;

			[Token(Token = "0x4001679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <landPosition>5__2;

			[Token(Token = "0x17000205")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600171C")]
				[Address(RVA = "0x5FDF61C", Offset = "0x5FDF61C", VA = "0x5FDF61C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000206")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600171E")]
				[Address(RVA = "0x5FDF664", Offset = "0x5FDF664", VA = "0x5FDF664", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001719")]
			[Address(RVA = "0x5FDC774", Offset = "0x5FDC774", VA = "0x5FDC774")]
			[DebuggerHidden]
			public <OnLandClient>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x600171A")]
			[Address(RVA = "0x5FDED44", Offset = "0x5FDED44", VA = "0x5FDED44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600171B")]
			[Address(RVA = "0x5FDED48", Offset = "0x5FDED48", VA = "0x5FDED48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600171D")]
			[Address(RVA = "0x5FDF624", Offset = "0x5FDF624", VA = "0x5FDF624", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001646")]
		private const string KEY_isServe = "_isServe";

		[Token(Token = "0x4001647")]
		private const string KEY_lastHitPlayerIdx = "_lastHitPlayerIdx";

		[Token(Token = "0x4001648")]
		private const string KEY_otherPlayerCatchedOffset = "_otherPlayerCatchedOffset";

		[Token(Token = "0x4001649")]
		public const float SERVE_OFFSET_LEFT_Z = -1.2f;

		[Token(Token = "0x400164A")]
		public const float SERVE_OFFSET_RIGHT_Z = 1.2f;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float mass;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float rho;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float diameter;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 Omega;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Cl;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static double Cd;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float heightFromGround;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static double area;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private NetworkRigidbody _networkRigidbody;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RaycastHit? _lastRaycastHit;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 _lastRaycastVelocity;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[Tooltip("平击特效")]
		[SerializeField]
		private GameObject _flatEffectPrefab;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[Tooltip("上旋球特效")]
		private GameObject _topSpinEffectPrefab;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[Tooltip("下旋球球特效")]
		[SerializeField]
		private GameObject _backSpinEffectPrefab;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[Tooltip("发球特效")]
		[SerializeField]
		private GameObject _serveEffectPrefab;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[Tooltip("落地特效")]
		[SerializeField]
		private GameObject _onLandEffectPrefab;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[Tooltip("出界特效")]
		[SerializeField]
		private GameObject _onOutEffectPrefab;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[Tooltip("buff模型显隐控制器")]
		[SerializeField]
		private TennisBuffEnable _tennisBuffEnable;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private NetworkVariable<bool> _isMainTennis;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _isServe;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int _lastHitPlayerIdx;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 _otherPlayerCatchedOffset;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private GameTennis.TennisMoveType _tennisMoveType;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _stayFloorDuration;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool _isWaitCancelServe;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		private bool _isFixedState;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 _fixedPosition;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3? _waitLastPosition;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool _isRecivedHitTennisReceipt;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 _V0;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private GameObject _serveFollowEffect;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private GameObject _onLandEffect;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private GameObject _onOutEffect;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float _originalFixedTimeStep;

		[Token(Token = "0x170001ED")]
		public bool IsMainTennis
		{
			[Token(Token = "0x60016B7")]
			[Address(RVA = "0x5FD69C4", Offset = "0x5FD69C4", VA = "0x5FD69C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x5FD69E8", Offset = "0x5FD69E8", VA = "0x5FD69E8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public bool IsServe
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x5FD6A10", Offset = "0x5FD6A10", VA = "0x5FD6A10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x5FD6A18", Offset = "0x5FD6A18", VA = "0x5FD6A18")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public int LastHitPlayerIdx
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x5FD6A90", Offset = "0x5FD6A90", VA = "0x5FD6A90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0x5FD6A98", Offset = "0x5FD6A98", VA = "0x5FD6A98")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public Vector3 OtherPlayerCatchedOffset
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x5FD6B10", Offset = "0x5FD6B10", VA = "0x5FD6B10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x5FD6B20", Offset = "0x5FD6B20", VA = "0x5FD6B20")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public bool IsRecivedHitTennisReceipt
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0x5FD6BC0", Offset = "0x5FD6BC0", VA = "0x5FD6BC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0x5FD6BC8", Offset = "0x5FD6BC8", VA = "0x5FD6BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public Vector3 V0
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0x5FD6BD4", Offset = "0x5FD6BD4", VA = "0x5FD6BD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0x5FD6BE4", Offset = "0x5FD6BE4", VA = "0x5FD6BE4")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public int LandCount
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x5FD6C10", Offset = "0x5FD6C10", VA = "0x5FD6C10")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x5FD6C18", Offset = "0x5FD6C18", VA = "0x5FD6C18")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		public bool IsSimulating
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0x5FD6C20", Offset = "0x5FD6C20", VA = "0x5FD6C20")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x5FD6C28", Offset = "0x5FD6C28", VA = "0x5FD6C28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public bool PreFrameIsSimulating
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x5FD6C34", Offset = "0x5FD6C34", VA = "0x5FD6C34")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x5FD6C3C", Offset = "0x5FD6C3C", VA = "0x5FD6C3C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public bool IsWaitServe
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x5FD6C48", Offset = "0x5FD6C48", VA = "0x5FD6C48")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x5FD6C50", Offset = "0x5FD6C50", VA = "0x5FD6C50")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public bool IsCatched
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x5FD6C5C", Offset = "0x5FD6C5C", VA = "0x5FD6C5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F8")]
		public bool IsTossTennis
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x5FD6C7C", Offset = "0x5FD6C7C", VA = "0x5FD6C7C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x5FD6C84", Offset = "0x5FD6C84", VA = "0x5FD6C84")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public bool LocalIsSever
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x5FD6C90", Offset = "0x5FD6C90", VA = "0x5FD6C90")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x5FD6C98", Offset = "0x5FD6C98", VA = "0x5FD6C98")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001FA")]
		public BallConfig CurBallConfig
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x5FD6CA4", Offset = "0x5FD6CA4", VA = "0x5FD6CA4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x5FD6CAC", Offset = "0x5FD6CAC", VA = "0x5FD6CAC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public float SpeedScale
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0x5FD6CBC", Offset = "0x5FD6CBC", VA = "0x5FD6CBC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001FC")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0x5FD6CD4", Offset = "0x5FD6CD4", VA = "0x5FD6CD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FD")]
		public NetworkRigidbody NetworkRigidbody
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0x5FD6CDC", Offset = "0x5FD6CDC", VA = "0x5FD6CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public bool IsMovementing
		{
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0x5FD6CE4", Offset = "0x5FD6CE4", VA = "0x5FD6CE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FF")]
		public GameObject ServeFollowEffect
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0x5FD6D2C", Offset = "0x5FD6D2C", VA = "0x5FD6D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public GameObject OnLandEffect
		{
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0x5FD6DF8", Offset = "0x5FD6DF8", VA = "0x5FD6DF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		public GameObject OnOutEffect
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0x5FD6EC4", Offset = "0x5FD6EC4", VA = "0x5FD6EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		public bool IsWaiting
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0x5FD6F90", Offset = "0x5FD6F90", VA = "0x5FD6F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000203")]
		public float HitInitialSpeed
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0x5FD6FB0", Offset = "0x5FD6FB0", VA = "0x5FD6FB0")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x5FD6FB8", Offset = "0x5FD6FB8", VA = "0x5FD6FB8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public GameTennis.TennisMoveType TennisMoveType
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x5FD6FC0", Offset = "0x5FD6FC0", VA = "0x5FD6FC0")]
			get
			{
				return default(GameTennis.TennisMoveType);
			}
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x5FD6FC8", Offset = "0x5FD6FC8", VA = "0x5FD6FC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x5FD7058", Offset = "0x5FD7058", VA = "0x5FD7058")]
		private void Start()
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x5FD7280", Offset = "0x5FD7280", VA = "0x5FD7280")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x5FD8564", Offset = "0x5FD8564", VA = "0x5FD8564")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x5FD99B0", Offset = "0x5FD99B0", VA = "0x5FD99B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x5FD82B0", Offset = "0x5FD82B0", VA = "0x5FD82B0")]
		private void OnColillisionNetMesh()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x5FDA1A0", Offset = "0x5FDA1A0", VA = "0x5FDA1A0")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x5FDA244", Offset = "0x5FDA244", VA = "0x5FDA244")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x5FDA3C8", Offset = "0x5FDA3C8", VA = "0x5FDA3C8")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x5FDA454", Offset = "0x5FDA454", VA = "0x5FDA454", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x5FDA4D0", Offset = "0x5FDA4D0", VA = "0x5FDA4D0", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x5FDA688", Offset = "0x5FDA688", VA = "0x5FDA688", Slot = "7")]
		public override void OnGainedOwnership()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x5FDAA4C", Offset = "0x5FDAA4C", VA = "0x5FDAA4C", Slot = "8")]
		public override void OnLostOwnership()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x5FDABE4", Offset = "0x5FDABE4", VA = "0x5FDABE4", Slot = "14")]
		protected override bool CheckCanCatch()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x5FD7068", Offset = "0x5FD7068", VA = "0x5FD7068")]
		private void RegisterNetworkValueChangeClient()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x5FDAC04", Offset = "0x5FDAC04", VA = "0x5FDAC04", Slot = "15")]
		protected override void OnCatched()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x5FDAD18", Offset = "0x5FDAD18", VA = "0x5FDAD18", Slot = "16")]
		protected override void OnThrowed()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x5FDADD4", Offset = "0x5FDADD4", VA = "0x5FDADD4")]
		public void ApplyBallConfigClient(BallConfig ballConfig)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x5FDB400", Offset = "0x5FDB400", VA = "0x5FDB400")]
		public void StartServeDisplayClient()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x5FDB184", Offset = "0x5FDB184", VA = "0x5FDB184")]
		private void PlayAudioChangeBallClient(string buffName)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x5FDB7A4", Offset = "0x5FDB7A4", VA = "0x5FDB7A4")]
		public void OnHitClient(Vector3 startPos, Vector3 velocity, GameTennis.TennisMoveType tennisMoveType, double timeStamp = 0.0, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x5FDC4D8", Offset = "0x5FDC4D8", VA = "0x5FDC4D8")]
		private Vector3 CalculateTeleportPositionClient(Vector3 landPosition, Vector3 endVelocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x5FDC700", Offset = "0x5FDC700", VA = "0x5FDC700")]
		[IteratorStateMachine(typeof(<OnLandClient>d__132))]
		private IEnumerator OnLandClient()
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x5FD9EB4", Offset = "0x5FD9EB4", VA = "0x5FD9EB4")]
		private void HandleOnLandClient(bool isMesh, bool isFloor)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x5FD7894", Offset = "0x5FD7894", VA = "0x5FD7894")]
		private void SendTennisPositionClient(Vector3 position)
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x5FDCA9C", Offset = "0x5FDCA9C", VA = "0x5FDCA9C")]
		public void InitServer(Transform initNode, bool isMain)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x5FDCB34", Offset = "0x5FDCB34", VA = "0x5FDCB34")]
		public void SetOwnershipServer(ulong clientId, bool useServerPos)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x5FDCDC0", Offset = "0x5FDCDC0", VA = "0x5FDCDC0")]
		public void SetServeStateServer(bool state)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x5FDD220", Offset = "0x5FDD220", VA = "0x5FDD220")]
		public void ResetTennisServer()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x5FDD240", Offset = "0x5FDD240", VA = "0x5FDD240")]
		[ServerRpc(RequireOwnership = false)]
		public void OnHitServerRpc(Vector3 velocity, GameTennis.TennisMoveType tennisMoveType, Vector3 oldPosition, double timestamp)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x5FDBE68", Offset = "0x5FDBE68", VA = "0x5FDBE68")]
		[ServerRpc(RequireOwnership = false)]
		public void SetServeStateServerRpc(bool state)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x5FDC94C", Offset = "0x5FDC94C", VA = "0x5FDC94C")]
		[ServerRpc(RequireOwnership = false)]
		public void SyncTennisPositionServerRpc(Vector3 position, [Optional] ServerRpcParams rpcParams)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x5FDD8D0", Offset = "0x5FDD8D0", VA = "0x5FDD8D0")]
		[ServerRpc(RequireOwnership = false)]
		public void SendHitTennisReceiptServerRpc()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x5FDD558", Offset = "0x5FDD558", VA = "0x5FDD558")]
		[ClientRpc]
		public void OnHitClientRpc(Vector3 velocity, GameTennis.TennisMoveType tennisMoveType, Vector3 oldPosition, double timestamp)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x5FDCC68", Offset = "0x5FDCC68", VA = "0x5FDCC68")]
		[ClientRpc]
		public void SetOwnershipClientRpc(Vector3 pos)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x5FDCDEC", Offset = "0x5FDCDEC", VA = "0x5FDCDEC")]
		[ClientRpc]
		public void OnServeStateChangedClientRpc(bool state)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x5FDD778", Offset = "0x5FDD778", VA = "0x5FDD778")]
		[ClientRpc]
		public void SyncTennisPositionClientRpc(Vector3 position)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x5FDC0C0", Offset = "0x5FDC0C0", VA = "0x5FDC0C0")]
		private Vector3 PredictCalculateV0(double delay, Vector3 startV0)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x5FD78AC", Offset = "0x5FD78AC", VA = "0x5FD78AC")]
		private Vector3 CalculateV0(Vector3 startV0, ref Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x5FDC2FC", Offset = "0x5FDC2FC", VA = "0x5FDC2FC")]
		public (Vector3, Vector3) PredictCalculatePosition(Vector3 velocity)
		{
			return default((Vector3, Vector3));
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x5FD7FD4", Offset = "0x5FD7FD4", VA = "0x5FD7FD4")]
		public bool CheckIsOvergoMesh(Vector3 beforePosition, Vector3 curPosition, out Vector3 intersectPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x5FDD99C", Offset = "0x5FDD99C", VA = "0x5FDD99C")]
		public Vector3 GetIntersectWithLineAndPlane(Vector3 point, Vector3 direct, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x5FDBF9C", Offset = "0x5FDBF9C", VA = "0x5FDBF9C")]
		public void ShowHitTypeEffect(GameTennis.TennisMoveType type)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x5FDB6B0", Offset = "0x5FDB6B0", VA = "0x5FDB6B0")]
		public void HideTrailEffect()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x5FDC79C", Offset = "0x5FDC79C", VA = "0x5FDC79C")]
		public void ShowOnLandEffect(Vector3 point)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x5FDA08C", Offset = "0x5FDA08C", VA = "0x5FDA08C")]
		public float GetRadius()
		{
			return default(float);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x5FDDDAC", Offset = "0x5FDDDAC", VA = "0x5FDDDAC")]
		public Tennis()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x5FDE440", Offset = "0x5FDE440", VA = "0x5FDE440")]
		private static void __rpc_handler_2675291321(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x5FDE5E0", Offset = "0x5FDE5E0", VA = "0x5FDE5E0")]
		private static void __rpc_handler_4079298763(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x5FDE6CC", Offset = "0x5FDE6CC", VA = "0x5FDE6CC")]
		private static void __rpc_handler_3423245961(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x5FDE7D8", Offset = "0x5FDE7D8", VA = "0x5FDE7D8")]
		private static void __rpc_handler_895671967(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x5FDE880", Offset = "0x5FDE880", VA = "0x5FDE880")]
		private static void __rpc_handler_1524583748(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x5FDEA20", Offset = "0x5FDEA20", VA = "0x5FDEA20")]
		private static void __rpc_handler_3867220432(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x5FDEB1C", Offset = "0x5FDEB1C", VA = "0x5FDEB1C")]
		private static void __rpc_handler_2371859035(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x5FDEC08", Offset = "0x5FDEC08", VA = "0x5FDEC08")]
		private static void __rpc_handler_3226710076(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x5FDED04", Offset = "0x5FDED04", VA = "0x5FDED04", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x2000399")]
	public class TennisArea : MonoBehaviour
	{
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Tennis, int> RecordFrameIdDict;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Tennis, int> CollisionCountDict;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Tennis, int> _tempTennisDcit;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("区域")]
		[SerializeField]
		private Rect _rect;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _areaPoint;

		[Token(Token = "0x17000207")]
		public Rect Rect
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x5FDF6F4", Offset = "0x5FDF6F4", VA = "0x5FDF6F4")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x5FDF700", Offset = "0x5FDF700", VA = "0x5FDF700")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x5FDF840", Offset = "0x5FDF840", VA = "0x5FDF840")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x5FDF934", Offset = "0x5FDF934", VA = "0x5FDF934")]
		public void ShowPoint()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x5FDF9C8", Offset = "0x5FDF9C8", VA = "0x5FDF9C8")]
		public void HidePoint()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x5FDFA5C", Offset = "0x5FDFA5C", VA = "0x5FDFA5C")]
		public void ResetCount(Tennis tennis)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x5FDFAE0", Offset = "0x5FDFAE0", VA = "0x5FDFAE0")]
		public void ClearDicts(Dictionary<Tennis, int> dict)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x5FDFDB8", Offset = "0x5FDFDB8", VA = "0x5FDFDB8")]
		public void OnCollision(Tennis tennis)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x5FDFF6C", Offset = "0x5FDFF6C", VA = "0x5FDFF6C")]
		public bool CheckInRect(Tennis tennis, Vector3 worldPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x5FDFFE8", Offset = "0x5FDFFE8", VA = "0x5FDFFE8")]
		public bool CheckInRect(Vector3 worldPosition, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x5FE00D0", Offset = "0x5FE00D0", VA = "0x5FE00D0")]
		public int GetCollisionCount(Tennis tennis)
		{
			return default(int);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x5FE0164", Offset = "0x5FE0164", VA = "0x5FE0164")]
		public TennisArea()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class TennisBuffEnable : MonoBehaviour
	{
		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("\ufffd\ufffd\u036cBuff\ufffd\ufffdӦ\ufffdĽ\ufffd\ufffd")]
		[SerializeField]
		private List<Transform> _buffObjects;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _curBuffNode;

		[Token(Token = "0x17000208")]
		public BallConfig CurBallConfig
		{
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x5FE0244", Offset = "0x5FE0244", VA = "0x5FE0244")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x5FE024C", Offset = "0x5FE024C", VA = "0x5FE024C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x5FE0254", Offset = "0x5FE0254", VA = "0x5FE0254")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x5FDAF50", Offset = "0x5FDAF50", VA = "0x5FDAF50")]
		public Transform ApplyBallConfig(BallConfig ballConfig)
		{
			return null;
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x5FDDBDC", Offset = "0x5FDDBDC", VA = "0x5FDDBDC")]
		public Transform GetBuffNode()
		{
			return null;
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x5FE0390", Offset = "0x5FE0390", VA = "0x5FE0390")]
		public TennisBuffEnable()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class TennisBuffModel : MonoBehaviour
	{
		[StructLayout(LayoutKind.Auto)]
		[Token(Token = "0x200039C")]
		[CompilerGenerated]
		private struct <Hide>d__10 : IAsyncStateMachine
		{
			[Token(Token = "0x4001687")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4001688")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4001689")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool showEffect;

			[Token(Token = "0x400168A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TennisBuffModel <>4__this;

			[Token(Token = "0x400168B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UniTask.Awaiter <>u__1;

			[Token(Token = "0x600173B")]
			[Address(RVA = "0x5FE077C", Offset = "0x5FE077C", VA = "0x5FE077C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600173C")]
			[Address(RVA = "0x5FE0B24", Offset = "0x5FE0B24", VA = "0x5FE0B24", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Buff动画状态机")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("buff模型显隐控制器")]
		private TennisBuffEnable _tennisBuffEnable;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("被击中的特效")]
		private GameObject _onHitEffect;

		[Token(Token = "0x17000209")]
		public BallConfig CurBallConfig
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x5FE0418", Offset = "0x5FE0418", VA = "0x5FE0418")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x5FE0420", Offset = "0x5FE0420", VA = "0x5FE0420")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x5FE0428", Offset = "0x5FE0428", VA = "0x5FE0428")]
		public void SetBallConfig(BallConfig ballConfig)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x5FE0454", Offset = "0x5FE0454", VA = "0x5FE0454")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x5FE0614", Offset = "0x5FE0614", VA = "0x5FE0614")]
		private void Show()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0x5FE06A0", Offset = "0x5FE06A0", VA = "0x5FE06A0")]
		[AsyncStateMachine(typeof(<Hide>d__10))]
		private void Hide(bool showEffect)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0x5FE0764", Offset = "0x5FE0764", VA = "0x5FE0764")]
		public void ShowOrHide(bool isShow, bool showEffect)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0x5FE0774", Offset = "0x5FE0774", VA = "0x5FE0774")]
		public TennisBuffModel()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public static class TennisConst
	{
		[Token(Token = "0x400168C")]
		public const string Tennis_OnDataLoaded = "Tennis_OnDataLoaded";

		[Token(Token = "0x400168D")]
		public const string Tennis_OnHitTennis = "Tennis_OnHitTennis";

		[Token(Token = "0x400168E")]
		public const string Tennis_OnTennisLand = "Tennis_OnTennisLand";

		[Token(Token = "0x400168F")]
		public const string Tennis_OnChangeScore = "Tennis_OnChangeScore";

		[Token(Token = "0x4001690")]
		public const string Tennis_ShowEventToast = "Tennis_ShowEventToast";

		[Token(Token = "0x4001691")]
		public const string Tennis_OnChangeGroup = "Tennis_OnChangeGroup";

		[Token(Token = "0x4001692")]
		public const string Tennis_OnSingleGameOver = "Tennis_OnSingleGameOver";

		[Token(Token = "0x4001693")]
		public const string Tennis_OnGameOver = "Tennis_OnGameOver";

		[Token(Token = "0x4001694")]
		public const string Tennis_ShowServeCountdown = "Tennis_ShowServeCountdown";

		[Token(Token = "0x4001695")]
		public const string Tennis_HideServeCountdown = "Tennis_HideServeCountdown";
	}
	[Token(Token = "0x200039E")]
	public enum RacketSkin
	{
		[Token(Token = "0x4001697")]
		Red,
		[Token(Token = "0x4001698")]
		Blue,
		[Token(Token = "0x4001699")]
		Count
	}
	[Token(Token = "0x200039F")]
	public enum TennisEventEnum
	{
		[Token(Token = "0x400169B")]
		ACE = 1,
		[Token(Token = "0x400169C")]
		Break,
		[Token(Token = "0x400169D")]
		DoubleFault,
		[Token(Token = "0x400169E")]
		Fault,
		[Token(Token = "0x400169F")]
		Let,
		[Token(Token = "0x40016A0")]
		MatchPoint,
		[Token(Token = "0x40016A1")]
		Moonball,
		[Token(Token = "0x40016A2")]
		Out,
		[Token(Token = "0x40016A3")]
		ClipTheLine,
		[Token(Token = "0x40016A4")]
		YourTurn,
		[Token(Token = "0x40016A5")]
		ServeTimeout
	}
	[Token(Token = "0x20003A0")]
	public class TennisMesh : MonoBehaviour
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _animPointParent;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Transform> _animPoints;

		[Token(Token = "0x1700020A")]
		public static TennisMesh Singleton
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x5FE0B30", Offset = "0x5FE0B30", VA = "0x5FE0B30")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x5FE0B78", Offset = "0x5FE0B78", VA = "0x5FE0B78")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public static TennisMesh S
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x5FE0BD0", Offset = "0x5FE0BD0", VA = "0x5FE0BD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x5FE0C10", Offset = "0x5FE0C10", VA = "0x5FE0C10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x5FE0E3C", Offset = "0x5FE0E3C", VA = "0x5FE0E3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x5FE0E88", Offset = "0x5FE0E88", VA = "0x5FE0E88")]
		public void PlayTriggerAnim(Vector3 position)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x5FE10FC", Offset = "0x5FE10FC", VA = "0x5FE10FC")]
		public TennisMesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A1")]
	public class TennisPlayer : INetworkSerializable, IEquatable<TennisPlayer>
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int[] SourceArray;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte _playerIdx;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private byte _winRoundNumber;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private byte _winGameNumber;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		private bool _hasPlayerInfo;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _bust;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _thumbnail;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerInfo _playerInfo;

		[Token(Token = "0x1700020C")]
		public PlayerInfo CurPlayerInfo
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x5FE1104", Offset = "0x5FE1104", VA = "0x5FE1104")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public string Bust
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x5FE110C", Offset = "0x5FE110C", VA = "0x5FE110C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		public string Thumbnail
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x5FE1114", Offset = "0x5FE1114", VA = "0x5FE1114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020F")]
		public long UserId
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x5FDA174", Offset = "0x5FDA174", VA = "0x5FDA174")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x17000210")]
		public byte PlayerIdx
		{
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x5FE111C", Offset = "0x5FE111C", VA = "0x5FE111C")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000211")]
		public bool IsLeftPos
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x5FE1124", Offset = "0x5FE1124", VA = "0x5FE1124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000212")]
		public byte WinRoundNumber
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x5FE1134", Offset = "0x5FE1134", VA = "0x5FE1134")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000213")]
		public byte WinGameNumber
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x5FE113C", Offset = "0x5FE113C", VA = "0x5FE113C")]
			get
			{
				return default(byte);
			}
		}

		[Token(Token = "0x17000214")]
		public ulong ClientId
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x5FE1144", Offset = "0x5FE1144", VA = "0x5FE1144")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000215")]
		public int RoundSource
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0x5FD5850", Offset = "0x5FD5850", VA = "0x5FD5850")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x5FE1170", Offset = "0x5FE1170", VA = "0x5FE1170")]
		public void Init(int idx)
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x5FE117C", Offset = "0x5FE117C", VA = "0x5FE117C")]
		public void SetPlayerInfo(PlayerInfo playerInfo)
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x5FE11A0", Offset = "0x5FE11A0", VA = "0x5FE11A0")]
		public void SetUserDataServer(string bust, string thumbnail)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x5FE11D0", Offset = "0x5FE11D0", VA = "0x5FE11D0")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x5FE1248", Offset = "0x5FE1248", VA = "0x5FE1248")]
		public void WinRound()
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x5FE1258", Offset = "0x5FE1258", VA = "0x5FE1258")]
		public void WinGame()
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x5FE126C", Offset = "0x5FE126C", VA = "0x5FE126C")]
		public void LoseGame()
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x5FE1274", Offset = "0x5FE1274", VA = "0x5FE1274")]
		public int GetNeedWinRound(in TennisPlayer otherPlayer)
		{
			return default(int);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x5FE12A4", Offset = "0x5FE12A4", VA = "0x5FE12A4")]
		public bool CheckWinGame(in TennisPlayer otherPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x5FE12D8", Offset = "0x5FE12D8", VA = "0x5FE12D8")]
		public bool CheckIsMatchPoint(in TennisPlayer otherPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x5FE1310", Offset = "0x5FE1310", VA = "0x5FE1310", Slot = "5")]
		public bool Equals(TennisPlayer other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		public void NetworkSerialize<T>(BufferSerializer<T> serializer) where T : IReaderWriter
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x5FE1334", Offset = "0x5FE1334", VA = "0x5FE1334", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x5FE1404", Offset = "0x5FE1404", VA = "0x5FE1404")]
		public TennisPlayer()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class TennisRacket : InteractableNetworkBehaviour
	{
		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ClientNetworkTransform _clientNetworkTransform;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private List<GameObject> _skinObjects;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Collider _normalCollider;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Collider _coreCollider;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Tooltip("展示动画状态机")]
		[SerializeField]
		private Animator _showAnimator;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[Tooltip("挥拍方向采样帧数")]
		[SerializeField]
		private int _sampleFrameCount;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		[Tooltip("击球特效")]
		private GameObject _hitEffectPrefab;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Tennis _hitTennis;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float _hitTennisCD;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _hitTennisCount;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform _posNode;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 _lastFramePos;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3RollingAverage _rollingAverage;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Vector3RollingAverage _rollingDistanceSum;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private NetworkVariable<RacketSkin> _skinType;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string handCustom;

		[Token(Token = "0x17000216")]
		public static TennisRacket LocalRacket
		{
			[Token(Token = "0x600175D")]
			[Address(RVA = "0x5FE1564", Offset = "0x5FE1564", VA = "0x5FE1564")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600175E")]
			[Address(RVA = "0x5FE15BC", Offset = "0x5FE15BC", VA = "0x5FE15BC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public Vector3 CurrVelocity
		{
			[Token(Token = "0x600175F")]
			[Address(RVA = "0x5FE1624", Offset = "0x5FE1624", VA = "0x5FE1624")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001760")]
			[Address(RVA = "0x5FE1634", Offset = "0x5FE1634", VA = "0x5FE1634")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public ClientNetworkTransform ClientNetworkTransform
		{
			[Token(Token = "0x6001761")]
			[Address(RVA = "0x5FE1644", Offset = "0x5FE1644", VA = "0x5FE1644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public ulong ClientId
		{
			[Token(Token = "0x6001762")]
			[Address(RVA = "0x5FE164C", Offset = "0x5FE164C", VA = "0x5FE164C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x1700021A")]
		public Collider NormalCollider
		{
			[Token(Token = "0x6001763")]
			[Address(RVA = "0x5FE166C", Offset = "0x5FE166C", VA = "0x5FE166C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public Collider CoreCollider
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x5FE1674", Offset = "0x5FE1674", VA = "0x5FE1674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		public Tennis HittedTennis
		{
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x5FE167C", Offset = "0x5FE167C", VA = "0x5FE167C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001766")]
			[Address(RVA = "0x5FE1684", Offset = "0x5FE1684", VA = "0x5FE1684")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public bool LocalIsSever
		{
			[Token(Token = "0x6001767")]
			[Address(RVA = "0x5FE168C", Offset = "0x5FE168C", VA = "0x5FE168C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001768")]
			[Address(RVA = "0x5FE1694", Offset = "0x5FE1694", VA = "0x5FE1694")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x5FE16A0", Offset = "0x5FE16A0", VA = "0x5FE16A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x5FE17C4", Offset = "0x5FE17C4", VA = "0x5FE17C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x5FE1984", Offset = "0x5FE1984", VA = "0x5FE1984")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x5FE19B8", Offset = "0x5FE19B8", VA = "0x5FE19B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x5FE1AC4", Offset = "0x5FE1AC4", VA = "0x5FE1AC4", Slot = "11")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x5FE1C90", Offset = "0x5FE1C90", VA = "0x5FE1C90", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x5FE1D9C", Offset = "0x5FE1D9C", VA = "0x5FE1D9C", Slot = "7")]
		public override void OnGainedOwnership()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x5FE1F04", Offset = "0x5FE1F04", VA = "0x5FE1F04", Slot = "8")]
		public override void OnLostOwnership()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x5FE2088", Offset = "0x5FE2088", VA = "0x5FE2088", Slot = "14")]
		protected override bool CheckCanCatch()
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x5FE2224", Offset = "0x5FE2224", VA = "0x5FE2224", Slot = "15")]
		protected override void OnCatched()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x5FE2554", Offset = "0x5FE2554", VA = "0x5FE2554", Slot = "16")]
		protected override void OnThrowed()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x5FE258C", Offset = "0x5FE258C", VA = "0x5FE258C")]
		public void OnClientDisconnectCallback(ulong clientId)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x5FE25CC", Offset = "0x5FE25CC", VA = "0x5FE25CC")]
		public void InitServer(Transform posNode, RacketSkin skinType)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x5FE2688", Offset = "0x5FE2688", VA = "0x5FE2688")]
		public void InitPosServer()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x5FE2764", Offset = "0x5FE2764", VA = "0x5FE2764")]
		private void SetRacketSkinServer(RacketSkin skinType)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x5FE27B0", Offset = "0x5FE27B0", VA = "0x5FE27B0")]
		private void BiReportHitTennis(GameTennis.TennisMoveType tennisMoveType, bool isServe)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x5FD8D14", Offset = "0x5FD8D14", VA = "0x5FD8D14")]
		public void HitTennisClient(Tennis tennis, bool isCoreArea)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x5FE46F8", Offset = "0x5FE46F8", VA = "0x5FE46F8")]
		public void CatchTennisRacketClient()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x5FE4708", Offset = "0x5FE4708", VA = "0x5FE4708")]
		private void OnGameOver(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x5FE4714", Offset = "0x5FE4714", VA = "0x5FE4714")]
		private void OnChangeGroup(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x5FE2AF8", Offset = "0x5FE2AF8", VA = "0x5FE2AF8")]
		private (Vector3, GameTennis.TennisMoveType) LaunchVelocity()
		{
			return default((Vector3, GameTennis.TennisMoveType));
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x5FE472C", Offset = "0x5FE472C", VA = "0x5FE472C")]
		private GameTennis.TennisMoveType CalculateMoveType(Vector3 dis)
		{
			return default(GameTennis.TennisMoveType);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x5FE339C", Offset = "0x5FE339C", VA = "0x5FE339C")]
		private Vector3 CorrectVelocity(Vector3 originVelocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x5FE3C34", Offset = "0x5FE3C34", VA = "0x5FE3C34")]
		private Vector3 CorrectServeVelocity(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x5FE4098", Offset = "0x5FE4098", VA = "0x5FE4098")]
		private Vector3 CorrectVelocity2(Vector3 velocity)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x5FE2420", Offset = "0x5FE2420", VA = "0x5FE2420")]
		[ServerRpc(RequireOwnership = false)]
		private void SetOwnershipServerRpc(ulong clientId)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x5FE46A8", Offset = "0x5FE46A8", VA = "0x5FE46A8")]
		private void ShowHitEffect()
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x5FE1CFC", Offset = "0x5FE1CFC", VA = "0x5FE1CFC")]
		private void SetRacketSkin(RacketSkin skinType)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x5FD8B78", Offset = "0x5FD8B78", VA = "0x5FD8B78")]
		public void CheckHasCollider(RaycastHit[] raycastHits, ref RaycastHit? result)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x5FE4890", Offset = "0x5FE4890", VA = "0x5FE4890")]
		public TennisRacket()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0x5FE4A4C", Offset = "0x5FE4A4C", VA = "0x5FE4A4C")]
		private static void __rpc_handler_1932702466(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x5FE4B30", Offset = "0x5FE4B30", VA = "0x5FE4B30", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x20003A3")]
	public delegate void TennisReportEnterPracticeModeDelegate();
	[Token(Token = "0x20003A4")]
	public delegate void TennisReportStayPracticeModeDelegate(LuaTable reportInfo);
	[Token(Token = "0x20003A5")]
	public delegate void TennisReportTennisServeDelegate(LuaTable reportInfo);
	[Token(Token = "0x20003A6")]
	public delegate void TennisReportTennisHitDelegate(LuaTable reportInfo);
	[Token(Token = "0x20003A7")]
	public delegate void TennisReportTennisStartGameDelegate(LuaTable reportInfo);
	[Token(Token = "0x20003A8")]
	public delegate void TennisReportTennisEndGameDelegate(LuaTable reportInfo);
	[Token(Token = "0x20003A9")]
	public static class TennisReport
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static TennisReportEnterPracticeModeDelegate _tennisReportEnterPracticeMode;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static TennisReportStayPracticeModeDelegate _tennisReportStayPracticeMode;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static TennisReportTennisServeDelegate _tennisReportTennisServe;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static TennisReportTennisHitDelegate _tennisReportTennisHit;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static TennisReportTennisStartGameDelegate _tennisReportTennisStartGame;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static TennisReportTennisEndGameDelegate _tennisReportTennisEndGame;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static LuaTable _luaTennisReport;

		[Token(Token = "0x1700021E")]
		public static LuaTable LuaTennisReport
		{
			[Token(Token = "0x60017A3")]
			[Address(RVA = "0x5E60C58", Offset = "0x5E60C58", VA = "0x5E60C58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x5E60E70", Offset = "0x5E60E70", VA = "0x5E60E70")]
		public static void TennisReportEnterPracticeMode()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x5E60F68", Offset = "0x5E60F68", VA = "0x5E60F68")]
		public static void TennisReportStayPracticeMode(string leaveType, int stayTime)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x5E61104", Offset = "0x5E61104", VA = "0x5E61104")]
		public static void TennisReportTennisServe(string serveMethod, string hitMethod, string handCustom, int serveTime, string queue_name)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x5E61344", Offset = "0x5E61344", VA = "0x5E61344")]
		public static void TennisReportTennisHit(string hitMethod, string handCustom, string buffType, string queue_name)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x5E6153C", Offset = "0x5E6153C", VA = "0x5E6153C")]
		public static void TennisReportStartGame(string battle_id, string batter_rule, string match_id, int match_order, int if_battle_end, string queue_name, int waiting_time)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x5E617E4", Offset = "0x5E617E4", VA = "0x5E617E4")]
		public static void TennisReportEndGame(string battle_id, string batter_rule, string match_id, int match_order, int if_battle_end, string queue_name, string end_status, int team_score, int opponent_score, int self_score, string battle_situation, int game_time, int self_remain_cnt, int opponent_remain_cnt, int opponent_win_cnt, int team_win_cnt, string match_situation)
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public enum TennisStateType
	{
		[Token(Token = "0x40016CE")]
		TriggerMesh,
		[Token(Token = "0x40016CF")]
		SelfArea,
		[Token(Token = "0x40016D0")]
		Out,
		[Token(Token = "0x40016D1")]
		ServeArea0,
		[Token(Token = "0x40016D2")]
		ServeArea1,
		[Token(Token = "0x40016D3")]
		ServeArea0_1,
		[Token(Token = "0x40016D4")]
		NormalArea,
		[Token(Token = "0x40016D5")]
		NotLanded
	}
	[Token(Token = "0x20003AB")]
	public class TennisStateManager : MonoBehaviour
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("网")]
		[SerializeField]
		private TennisArea _mesh_0_0;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("地面")]
		[SerializeField]
		private TriggerCollisionCount _otherfloor;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("玩家1的整个区域")]
		private TennisArea _player1_all;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Tooltip("玩家2的整个区域")]
		private TennisArea _player2_all;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("玩家1的0区域")]
		private TennisArea _player1_0;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("玩家1的1区域")]
		[SerializeField]
		private TennisArea _player1_1;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("玩家1的2区域")]
		[SerializeField]
		private TennisArea _player1_2;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("玩家2的0区域")]
		[SerializeField]
		private TennisArea _player2_0;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Tooltip("玩家2的1区域")]
		private TennisArea _player2_1;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("玩家2的2区域")]
		[SerializeField]
		private TennisArea _player2_2;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TennisStateManager Instance;

		[Token(Token = "0x1700021F")]
		public static TennisStateManager S
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x5E61C7C", Offset = "0x5E61C7C", VA = "0x5E61C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public bool EasyServeMode
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x5E61CC4", Offset = "0x5E61CC4", VA = "0x5E61CC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x5E61DEC", Offset = "0x5E61DEC", VA = "0x5E61DEC")]
		protected void Awake()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x5E61EE8", Offset = "0x5E61EE8", VA = "0x5E61EE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x5E61FB4", Offset = "0x5E61FB4", VA = "0x5E61FB4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x5E62320", Offset = "0x5E62320", VA = "0x5E62320")]
		private void EventResetState(string eventId, object sender, IArgs args)
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x5E62500", Offset = "0x5E62500", VA = "0x5E62500")]
		public void ShowServePoint(int servePlayerIdx, int round)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x5E625DC", Offset = "0x5E625DC", VA = "0x5E625DC")]
		public void HideServePoint()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x5E626BC", Offset = "0x5E626BC", VA = "0x5E626BC")]
		public void SaveTriggerMeshState(Tennis tennis)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x5E62140", Offset = "0x5E62140", VA = "0x5E62140")]
		public void SaveStateResult(Tennis tennis, Vector3 worldPosition)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x5E623E8", Offset = "0x5E623E8", VA = "0x5E623E8")]
		public void ResetState(Tennis tennis)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x5E6288C", Offset = "0x5E6288C", VA = "0x5E6288C")]
		public TennisStateType GetTennisState(Tennis tennis, int playerIdx)
		{
			return default(TennisStateType);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x5E62650", Offset = "0x5E62650", VA = "0x5E62650")]
		public TennisArea GetServerArea(int servePlayerIdx, int round)
		{
			return null;
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x5E62AF0", Offset = "0x5E62AF0", VA = "0x5E62AF0")]
		public bool CheckPositionIsLegal(Vector3 worldPosition, bool isLeft, bool isServe, int round, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x5E62BEC", Offset = "0x5E62BEC", VA = "0x5E62BEC")]
		public bool CheckPositionInCourt(Vector3 worldPosition, float radius)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x5E62CF4", Offset = "0x5E62CF4", VA = "0x5E62CF4")]
		public TennisStateManager()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public static class TennisStaticClass
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] TennisScoreArray;
	}
	[Token(Token = "0x20003AD")]
	public class TennisToast : MonoBehaviour
	{
		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TennisToast Instance;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Vector3 MeshTipsRotate_0;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly Vector3 MeshTipsRotate_1;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _meshTipsGo;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro _meshTipsText;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro _meshPingText;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshPro _meshSpeedText;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private long _meshTipsTimerId;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PicoCharacter _myPicoCharacter;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ulong _rttSum;

		[Token(Token = "0x17000221")]
		public static TennisToast S
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x5E63348", Offset = "0x5E63348", VA = "0x5E63348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x5E633A0", Offset = "0x5E633A0", VA = "0x5E633A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x5E63494", Offset = "0x5E63494", VA = "0x5E63494")]
		private void Start()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x5E634B8", Offset = "0x5E634B8", VA = "0x5E634B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x5E63738", Offset = "0x5E63738", VA = "0x5E63738")]
		public void ShowToastInMesh(string tips, float delay = 3f)
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x5E63844", Offset = "0x5E63844", VA = "0x5E63844")]
		public void HideToastInMesh()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x5E63864", Offset = "0x5E63864", VA = "0x5E63864")]
		public void ShowHitSpeed(float speed)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x5E6391C", Offset = "0x5E6391C", VA = "0x5E6391C")]
		public TennisToast()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class TennisTrophy : InteractableNetworkBehaviour
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform _posNode;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ClientNetworkTransform _clientNetworkTransform;

		[Token(Token = "0x17000222")]
		public ClientNetworkTransform ClientNetworkTransform
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0x5E639AC", Offset = "0x5E639AC", VA = "0x5E639AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x5E639B4", Offset = "0x5E639B4", VA = "0x5E639B4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x5E63A44", Offset = "0x5E63A44", VA = "0x5E63A44")]
		public void InitServer(Transform posNode)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x5E63AF0", Offset = "0x5E63AF0", VA = "0x5E63AF0")]
		public void InitPosServer()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x5E63BE8", Offset = "0x5E63BE8", VA = "0x5E63BE8")]
		public TennisTrophy()
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x5E63BF0", Offset = "0x5E63BF0", VA = "0x5E63BF0", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AF")]
	public class TennisUILocator : MonoBehaviour
	{
		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _matchUILocator;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _guideUILocator;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _rankListUILocator;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[Header("准备阶段")]
		private Vector3 _matchReadyScale;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 _matchReadyRotate;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 _matchReadyPosition;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3 _guideReadyScale;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector3 _guideReadyRotate;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Vector3 _guideReadyPosition;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Vector3 _rankListReadyScale;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private Vector3 _rankListReadyRotate;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Vector3 _rankListReadyPosition;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[Header("练习阶段")]
		[SerializeField]
		private Vector3 _matchTrainScale;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Vector3 _matchTrainRotate;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private Vector3 _matchTrainPosition;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Vector3 _guideTrainScale;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private Vector3 _guideTrainRotate;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Vector3 _guideTrainPosition;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private Vector3 _rankListTrainScale;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Vector3 _rankListTrainRotate;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private Vector3 _rankListTrainPosition;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[Header("结束练习阶段")]
		private Vector3 _matchEndTrainScale;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private Vector3 _matchEndTrainRotate;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Vector3 _matchEndTrainPosition;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private Vector3 _guideEndTrainScale;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private Vector3 _guideEndTrainRotate;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private Vector3 _guideEndTrainPosition;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Vector3 _rankListEndTrainScale;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private Vector3 _rankListEndTrainRotate;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Vector3 _rankListEndTrainPosition;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[Header("准备倒计时阶段")]
		[SerializeField]
		private Vector3 _matchCountdownScale;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Vector3 _matchCountdownRotate;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[SerializeField]
		private Vector3 _matchCountdownPosition;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private Vector3 _guideCountdownScale;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[SerializeField]
		private Vector3 _guideCountdownRotate;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private Vector3 _guideCountdownPosition;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[SerializeField]
		private Vector3 _rankListCountdownScale;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private Vector3 _rankListCountdownRotate;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		private Vector3 _rankListCountdownPosition;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[Header("比赛阶段")]
		[SerializeField]
		private Vector3 _matchPlayScale;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[SerializeField]
		private Vector3 _matchPlayRotate;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private Vector3 _matchPlayPosition;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		private Vector3 _guidePlayScale;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private Vector3 _guidePlayRotate;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		[SerializeField]
		private Vector3 _guidePlayPosition;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		private Vector3 _rankListPlayScale;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[SerializeField]
		private Vector3 _rankListPlayRotate;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private Vector3 _rankListPlayPosition;

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x5E63C30", Offset = "0x5E63C30", VA = "0x5E63C30")]
		public void ShowReadyStateUIClient(float duration = 0.5f)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x5E63D3C", Offset = "0x5E63D3C", VA = "0x5E63D3C")]
		public void ShowTrainStateUIClient(float duration = 0.5f)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x5E63E48", Offset = "0x5E63E48", VA = "0x5E63E48")]
		public void ShowEndTrainStateUIClient(float duration = 0.5f)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x5E63F78", Offset = "0x5E63F78", VA = "0x5E63F78")]
		public void ShowCountdownStateUIClient(float duration = 0.5f)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x5E640A8", Offset = "0x5E640A8", VA = "0x5E640A8")]
		public void ShowPlayStateUIClient(float duration = 0.5f)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x5E641D8", Offset = "0x5E641D8", VA = "0x5E641D8")]
		public TennisUILocator()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class TriggerCollisionCount : MonoBehaviour
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<Tennis, int> RecordFrameIdDict;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<Tennis, int> CollisionCountDict;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<Tennis, int> TriggerCountDict;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Tennis, int> _tempTennisDcit;

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x5E627F0", Offset = "0x5E627F0", VA = "0x5E627F0")]
		public void ResetCount(Tennis tennis)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x5E64574", Offset = "0x5E64574", VA = "0x5E64574")]
		public void ClearDicts(Dictionary<Tennis, int> dict)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x5E62A6C", Offset = "0x5E62A6C", VA = "0x5E62A6C")]
		public (int, int) GetCount(Tennis tennis)
		{
			return default((int, int));
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x5E6484C", Offset = "0x5E6484C", VA = "0x5E6484C")]
		public int GetCollisionCount(Tennis tennis)
		{
			return default(int);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x5E648E0", Offset = "0x5E648E0", VA = "0x5E648E0")]
		public int GetTriggerCount(Tennis tennis)
		{
			return default(int);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x5E64974", Offset = "0x5E64974", VA = "0x5E64974")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x5E64B98", Offset = "0x5E64B98", VA = "0x5E64B98")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x5E64DBC", Offset = "0x5E64DBC", VA = "0x5E64DBC")]
		public TriggerCollisionCount()
		{
		}
	}
}
namespace BNG
{
	[Token(Token = "0x20003B1")]
	public class LineToTransform : MonoBehaviour
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ConnectTo;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LineRenderer line;

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x5E64EC4", Offset = "0x5E64EC4", VA = "0x5E64EC4")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x5E64EC8", Offset = "0x5E64EC8", VA = "0x5E64EC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x5E64ECC", Offset = "0x5E64ECC", VA = "0x5E64ECC")]
		public void UpdateLine()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x5E65080", Offset = "0x5E65080", VA = "0x5E65080")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x5E65084", Offset = "0x5E65084", VA = "0x5E65084")]
		public LineToTransform()
		{
		}
	}
}
namespace Components
{
	[Token(Token = "0x20003B2")]
	public class JengaPiece : NetworkBehaviour
	{
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Outline _outline;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody pieceRigidbody;

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x5E6508C", Offset = "0x5E6508C", VA = "0x5E6508C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x5E65130", Offset = "0x5E65130", VA = "0x5E65130")]
		private void OnHightlightStartEvent()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x5E65150", Offset = "0x5E65150", VA = "0x5E65150")]
		private void OnHightlightEndEvent()
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x5E65170", Offset = "0x5E65170", VA = "0x5E65170")]
		private void OnRelease()
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x5E651A8", Offset = "0x5E651A8", VA = "0x5E651A8", Slot = "11")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x5E651B0", Offset = "0x5E651B0", VA = "0x5E651B0")]
		public JengaPiece()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x5E65208", Offset = "0x5E65208", VA = "0x5E65208", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B3")]
	public class RandomFriction : NetworkBehaviour
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NetworkVariable<float> minFriction;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public NetworkVariable<float> maxFriction;

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x5E65248", Offset = "0x5E65248", VA = "0x5E65248", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x5E65374", Offset = "0x5E65374", VA = "0x5E65374")]
		public RandomFriction()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x5E65468", Offset = "0x5E65468", VA = "0x5E65468", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x20003B4")]
	public class RequireOwnership : NetworkBehaviour
	{
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InputAction grantOwnershipBtnAction;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private InputAction resetBtnAction;

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x5E654A8", Offset = "0x5E654A8", VA = "0x5E654A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x5E65570", Offset = "0x5E65570", VA = "0x5E65570")]
		public void InitNetworkSpawn()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x5E65650", Offset = "0x5E65650", VA = "0x5E65650", Slot = "6")]
		public override void OnNetworkDespawn()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x5E65730", Offset = "0x5E65730", VA = "0x5E65730")]
		private void ResetJengas(InputAction.CallbackContext action)
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x5E659A4", Offset = "0x5E659A4", VA = "0x5E659A4")]
		private void GrantOwnership(InputAction.CallbackContext action)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x5E66178", Offset = "0x5E66178", VA = "0x5E66178")]
		public RequireOwnership()
		{
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x5E661D0", Offset = "0x5E661D0", VA = "0x5E661D0", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
}
namespace General
{
	[Token(Token = "0x20003B6")]
	public class JengaGenerator : NetworkBehaviour
	{
		[Token(Token = "0x20003B7")]
		[CompilerGenerated]
		private sealed class <SpawnPiecesCoroutine>d__15 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x400173B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400173C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400173D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JengaGenerator <>4__this;

			[Token(Token = "0x400173E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <count>5__2;

			[Token(Token = "0x400173F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__3;

			[Token(Token = "0x17000223")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001809")]
				[Address(RVA = "0x5E68174", Offset = "0x5E68174", VA = "0x5E68174", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000224")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600180B")]
				[Address(RVA = "0x5E681BC", Offset = "0x5E681BC", VA = "0x5E681BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001806")]
			[Address(RVA = "0x5E66D9C", Offset = "0x5E66D9C", VA = "0x5E66D9C")]
			[DebuggerHidden]
			public <SpawnPiecesCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001807")]
			[Address(RVA = "0x5E67F04", Offset = "0x5E67F04", VA = "0x5E67F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001808")]
			[Address(RVA = "0x5E67F08", Offset = "0x5E67F08", VA = "0x5E67F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600180A")]
			[Address(RVA = "0x5E6817C", Offset = "0x5E6817C", VA = "0x5E6817C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003B9")]
		[CompilerGenerated]
		private sealed class <SpawnNewPiecesCoroutine>d__20 : IEnumerator<object>, IEnumerator, System.IDisposable
		{
			[Token(Token = "0x4001742")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001743")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001744")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JengaGenerator <>4__this;

			[Token(Token = "0x4001745")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3[] positions;

			[Token(Token = "0x4001746")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion[] rotations;

			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ulong clientId;

			[Token(Token = "0x17000225")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001812")]
				[Address(RVA = "0x5E68728", Offset = "0x5E68728", VA = "0x5E68728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000226")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0x5E68770", Offset = "0x5E68770", VA = "0x5E68770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600180F")]
			[Address(RVA = "0x5E67790", Offset = "0x5E67790", VA = "0x5E67790")]
			[DebuggerHidden]
			public <SpawnNewPiecesCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001810")]
			[Address(RVA = "0x5E68254", Offset = "0x5E68254", VA = "0x5E68254", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0x5E68258", Offset = "0x5E68258", VA = "0x5E68258", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0x5E68730", Offset = "0x5E68730", VA = "0x5E68730", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private NetworkObject piecePrefab;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private int height;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float gapY;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float gapX;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float interval;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TextMeshProUGUI activeClientText;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GameObject clientIDRoot;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private TextMeshProUGUI clientIdLabel;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<NetworkObject> _networkObjects;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NetworkVariable<ulong> _activeClientId;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private NetworkList<NetworkObjectReference> jengaPiecesReference;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _switching;

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x5E662F0", Offset = "0x5E662F0", VA = "0x5E662F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x5E6636C", Offset = "0x5E6636C", VA = "0x5E6636C", Slot = "5")]
		public override void OnNetworkSpawn()
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x5E66968", Offset = "0x5E66968", VA = "0x5E66968")]
		private void OnActiveClientChanged(ulong previousValue, ulong newValue)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x5E66D28", Offset = "0x5E66D28", VA = "0x5E66D28")]
		[IteratorStateMachine(typeof(<SpawnPiecesCoroutine>d__15))]
		private IEnumerator SpawnPiecesCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x5E6657C", Offset = "0x5E6657C", VA = "0x5E6657C")]
		private void SpawnPieces()
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x5E66DC4", Offset = "0x5E66DC4", VA = "0x5E66DC4")]
		private (Vector3, Quaternion) GetBrickTransform(int index, int stack)
		{
			return default((Vector3, Quaternion));
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x5E65D10", Offset = "0x5E65D10", VA = "0x5E65D10")]
		[ServerRpc(RequireOwnership = false)]
		public void RequestOwnershipServerRpc(ulong clientId, Vector3[] positions, Quaternion[] rotations)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x5E66F20", Offset = "0x5E66F20", VA = "0x5E66F20")]
		[ClientRpc]
		private void RestoreJengasClientRpc(Vector3[] positions, Quaternion[] rotations, ClientRpcParams privateChannel)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x5E676DC", Offset = "0x5E676DC", VA = "0x5E676DC")]
		[IteratorStateMachine(typeof(<SpawnNewPiecesCoroutine>d__20))]
		private IEnumerator SpawnNewPiecesCoroutine(ulong clientId, Vector3[] positions, Quaternion[] rotations)
		{
			return null;
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x5E657A0", Offset = "0x5E657A0", VA = "0x5E657A0")]
		[ServerRpc(RequireOwnership = false)]
		public void ResetJengasServerRpc()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x5E66878", Offset = "0x5E66878", VA = "0x5E66878")]
		private void UpdateActiveClient(ulong clientId)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x5E668A8", Offset = "0x5E668A8", VA = "0x5E668A8")]
		private void UpdateActiveClientText()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x5E677B8", Offset = "0x5E677B8", VA = "0x5E677B8")]
		public JengaGenerator()
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x5E67A6C", Offset = "0x5E67A6C", VA = "0x5E67A6C")]
		private static void __rpc_handler_2788500697(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x5E67C38", Offset = "0x5E67C38", VA = "0x5E67C38")]
		private static void __rpc_handler_147087398(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0x5E67E1C", Offset = "0x5E67E1C", VA = "0x5E67E1C")]
		private static void __rpc_handler_2746602406(NetworkBehaviour target, FastBufferReader reader, __RpcParams rpcParams)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x5E67EC4", Offset = "0x5E67EC4", VA = "0x5E67EC4", Slot = "4")]
		internal override string __getTypeName()
		{
			return null;
		}
	}
	[Token(Token = "0x20003BA")]
	public class LookAtCamera : MonoBehaviour
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool reverse;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera _mainCam;

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x5E68778", Offset = "0x5E68778", VA = "0x5E68778")]
		private void Update()
		{
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x5E688D8", Offset = "0x5E688D8", VA = "0x5E688D8")]
		public LookAtCamera()
		{
		}
	}
}
