using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Net.Sockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using I2.Loc;
using Il2CppDummyDll;
using JetBrains.Annotations;
using Lobbyist;
using Lobbyist.Messages;
using MEC;
using MP3Sharp;
using Multiplayer;
using Multiplayer.Data;
using Multiplayer.ICE;
using Multiplayer.ICE.Agents;
using Multiplayer.Tests;
using NaughtyAttributes;
using Nx;
using OneHumus;
using OneHumus.Crates;
using OneHumus.Data;
using OneHumus.Math;
using OneHumus.Math.Geometry;
using OneHumus.Math.Spline;
using OneHumus.Test;
using OneHumus.Utils;
using POpusCodec;
using POpusCodec.Enums;
using Pico.Platform;
using Pico.Platform.Models;
using RNX;
using RacketNx.AnalyticsNetwork;
using RnxPlatform;
using TMPro;
using UIgak;
using Unity.Networking.Transport;
using Unity.Networking.Transport.Error;
using Unity.Networking.Transport.Relay;
using Unity.Services.Core;
using Unity.Services.Relay.Models;
using Unity.XR.PXR;
using UnityEngine;
using UnityEngine.Audio;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.XR;
using YUR.Core;

[assembly: AssemblyVersion("1.0.0.0")]
[Token(Token = "0x2000006")]
public class NxGroupInjector : MonoBehaviour
{
	[Token(Token = "0x2000007")]
	public enum NxGroupType
	{
		[Token(Token = "0x4000011")]
		None,
		[Token(Token = "0x4000012")]
		Music,
		[Token(Token = "0x4000013")]
		SFX,
		[Token(Token = "0x4000014")]
		Voice
	}

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NxGroupType groupType;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NxSource _nxSource;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xB2F504", Offset = "0xB2F504", VA = "0xB2F504")]
	private void Awake()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xB2F778", Offset = "0xB2F778", VA = "0xB2F778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB2F508", Offset = "0xB2F508", VA = "0xB2F508")]
	private void SetGroup()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB2F7F0", Offset = "0xB2F7F0", VA = "0xB2F7F0")]
	public NxGroupInjector()
	{
	}
}
[Token(Token = "0x2000008")]
public class NxGroupsContainer : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NxGroup music;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NxGroup sfx;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NxGroup voice;

	[Token(Token = "0x1700000E")]
	public static NxGroupsContainer inst
	{
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xB2F7F8", Offset = "0xB2F7F8", VA = "0xB2F7F8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xB2F840", Offset = "0xB2F840", VA = "0xB2F840")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB2F898", Offset = "0xB2F898", VA = "0xB2F898", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB2F8F0", Offset = "0xB2F8F0", VA = "0xB2F8F0")]
	public NxGroupsContainer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000009")]
public abstract class Achievement
{
	[Serializable]
	[Token(Token = "0x200000A")]
	public class Card
	{
		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString title;

		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LocalizedString description;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString progress;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Sprite icon;

		[Token(Token = "0x600003F")]
		[Address(RVA = "0xB30ED8", Offset = "0xB30ED8", VA = "0xB30ED8")]
		public Card()
		{
		}
	}

	[Token(Token = "0x200000B")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000013")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000043")]
			[Address(RVA = "0xB30EFC", Offset = "0xB30EFC", VA = "0xB30EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000045")]
			[Address(RVA = "0xB30F44", Offset = "0xB30F44", VA = "0xB30F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0xB2FA08", Offset = "0xB2FA08", VA = "0xB2FA08")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000041")]
		[Address(RVA = "0xB30EE0", Offset = "0xB30EE0", VA = "0xB30EE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000042")]
		[Address(RVA = "0xB30EE4", Offset = "0xB30EE4", VA = "0xB30EE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0xB30F04", Offset = "0xB30F04", VA = "0xB30F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000D")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool waitingForAnnouncer;

		[Token(Token = "0x600004A")]
		[Address(RVA = "0xB31060", Offset = "0xB31060", VA = "0xB31060")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x600004B")]
		[Address(RVA = "0xB31068", Offset = "0xB31068", VA = "0xB31068")]
		internal void <PlaySoundAndAnimationsForUnlock>b__0()
		{
		}
	}

	[Token(Token = "0x200000E")]
	[CompilerGenerated]
	private sealed class <PlaySoundAndAnimationsForUnlock>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400002B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass32_0 <>8__1;

		[Token(Token = "0x17000015")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600004F")]
			[Address(RVA = "0xB3140C", Offset = "0xB3140C", VA = "0xB3140C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000051")]
			[Address(RVA = "0xB31454", Offset = "0xB31454", VA = "0xB31454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0xB30E00", Offset = "0xB30E00", VA = "0xB30E00")]
		[DebuggerHidden]
		public <PlaySoundAndAnimationsForUnlock>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0xB31070", Offset = "0xB31070", VA = "0xB31070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0xB31074", Offset = "0xB31074", VA = "0xB31074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0xB31414", Offset = "0xB31414", VA = "0xB31414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200000F")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool done;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string error;

		[Token(Token = "0x6000052")]
		[Address(RVA = "0xB314B0", Offset = "0xB314B0", VA = "0xB314B0")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0xB314B8", Offset = "0xB314B8", VA = "0xB314B8")]
		internal void <ReportToNativePlatform>b__0(string err)
		{
		}
	}

	[Token(Token = "0x2000010")]
	[CompilerGenerated]
	private sealed class <ReportToNativePlatform>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Achievement <>4__this;

		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerProfileData.Summary.AchievementStatus achStat;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass34_0 <>8__1;

		[Token(Token = "0x17000017")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000057")]
			[Address(RVA = "0xB31A64", Offset = "0xB31A64", VA = "0xB31A64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000059")]
			[Address(RVA = "0xB31AAC", Offset = "0xB31AAC", VA = "0xB31AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0xB30E28", Offset = "0xB30E28", VA = "0xB30E28")]
		[DebuggerHidden]
		public <ReportToNativePlatform>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0xB314C8", Offset = "0xB314C8", VA = "0xB314C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0xB314CC", Offset = "0xB314CC", VA = "0xB314CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0xB31A6C", Offset = "0xB31A6C", VA = "0xB31A6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Tooltip("The display of the achievement")]
	public Card card;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The id in the profile and in the native platforms")]
	public string id;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("is this achievement new for this version of the game")]
	public bool isNew;

	[NonSerialized]
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerProfileData.Summary.AchievementStatus status;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ItemsDefs.ItemDefinition[] _dependentItemsCache;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _initialized;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CoroutineHandle _initCo;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CoroutineHandle _retroactiveProgressCoHandle;

	[Token(Token = "0x1700000F")]
	public abstract string CurrentProgressDisplay
	{
		[Token(Token = "0x6000029")]
		get;
	}

	[Token(Token = "0x17000010")]
	public abstract string MaxProgressDisplay
	{
		[Token(Token = "0x600002A")]
		get;
	}

	[Token(Token = "0x17000011")]
	public bool IsUnlocked
	{
		[Token(Token = "0x6000031")]
		[Address(RVA = "0xB2FA34", Offset = "0xB2FA34", VA = "0xB2FA34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000012")]
	public ItemsDefs.ItemDefinition[] DependentItems
	{
		[Token(Token = "0x6000032")]
		[Address(RVA = "0xB2FA54", Offset = "0xB2FA54", VA = "0xB2FA54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB2F8F8", Offset = "0xB2F8F8", VA = "0xB2F8F8")]
	protected void SaveProgress()
	{
	}

	[Token(Token = "0x6000027")]
	public abstract float GetProgress();

	[Token(Token = "0x6000028")]
	public abstract string MergeProgress(string offlineProgress, string onlineProgress);

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB2F9A4", Offset = "0xB2F9A4", VA = "0xB2F9A4", Slot = "8")]
	protected virtual void RetroactiveProgress()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB2F9A8", Offset = "0xB2F9A8", VA = "0xB2F9A8", Slot = "9")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__12))]
	protected virtual IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	protected abstract void OnInit();

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB2FA30", Offset = "0xB2FA30", VA = "0xB2FA30", Slot = "11")]
	protected virtual void OnUnlocked()
	{
	}

	[Token(Token = "0x600002F")]
	protected abstract string SerializeProgress();

	[Token(Token = "0x6000030")]
	protected abstract void DeserializeProgress(string progress);

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB2FC24", Offset = "0xB2FC24", VA = "0xB2FC24")]
	public void Reload()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB300E0", Offset = "0xB300E0", VA = "0xB300E0")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB3026C", Offset = "0xB3026C", VA = "0xB3026C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB30360", Offset = "0xB30360", VA = "0xB30360")]
	private PlayerProfileData.Summary.AchievementStatus GetOrAddAchievement()
	{
		return null;
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB2FE24", Offset = "0xB2FE24", VA = "0xB2FE24")]
	private void LoadProgress()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB30600", Offset = "0xB30600", VA = "0xB30600")]
	protected void Unlock()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB30D8C", Offset = "0xB30D8C", VA = "0xB30D8C")]
	[IteratorStateMachine(typeof(<PlaySoundAndAnimationsForUnlock>d__32))]
	private IEnumerator<float> PlaySoundAndAnimationsForUnlock()
	{
		return null;
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB308E4", Offset = "0xB308E4", VA = "0xB308E4")]
	private void ValidateDependentItemsLockState()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB30CFC", Offset = "0xB30CFC", VA = "0xB30CFC")]
	[IteratorStateMachine(typeof(<ReportToNativePlatform>d__34))]
	private IEnumerator<float> ReportToNativePlatform(PlayerProfileData.Summary.AchievementStatus achStat)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB30E50", Offset = "0xB30E50", VA = "0xB30E50")]
	protected Achievement()
	{
	}
}
[Token(Token = "0x2000012")]
public class Achievements : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000014")]
	[CompilerGenerated]
	private sealed class <Initialize>d__47 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x1700001D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000074")]
			[Address(RVA = "0xB335F4", Offset = "0xB335F4", VA = "0xB335F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000076")]
			[Address(RVA = "0xB3363C", Offset = "0xB3363C", VA = "0xB3363C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xB32E40", Offset = "0xB32E40", VA = "0xB32E40")]
		[DebuggerHidden]
		public <Initialize>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000072")]
		[Address(RVA = "0xB332D8", Offset = "0xB332D8", VA = "0xB332D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0xB332DC", Offset = "0xB332DC", VA = "0xB332DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000075")]
		[Address(RVA = "0xB335FC", Offset = "0xB335FC", VA = "0xB335FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000039")]
	public const int ACHIEVEMENTS_COUNT = 28;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Achievements inst;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoloStarsAchievement soloStars;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OldTimerAchievement oldTimer;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MegahitAchievement megahit;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OnFireAchievement onFire;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UntetheredAchievement untethered;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BackhandGamerAchievement backhandGamer;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BackhandCompetitorAchievement backhandCompetitor;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BackhandAthleteAchievement backhandAthlete;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SelfMadeAchievement selfMade;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RecklessAchievement reckless;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public DestroyerAchievement destroyer;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BallSlingerAchievement ballSlinger;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GalacticCitizenAchievement galacticCitizen;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PromisingStartAchievement promisingStart;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FriendlyChapetteAchievement friendlyChapette;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public EnRouteAchievement enRoute;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GalacticChildAchievement galacticChild;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MrPlowAchievement mrPlow;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SurvivorAchievement survivor;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EnlightenmentAchievement enlightenment;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GrinderAchievement grinder;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MarathonAchievement marathon;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SnakeWhispererAchievement snakeWhisperer;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PerformanceEnhancerAchievement performanceEnhancer;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TripletsAchievement triplets;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TripleTripletsAchievement tripleTriplets;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SnakeCharmerAchievement snakeCharmer;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public PowerThirstyAchievement powerThirsty;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly Dictionary<string, Achievement> achievementsById;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly List<Achievement> achievementIdProgressedOnLastGame;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private readonly Dictionary<string, float> achievement2ProgresseBeforeGameStart;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public readonly List<Achievement> achievementIdUnlockedOnLastGame;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public readonly HashSet<string> achievementIdLockedBeforeLastGame;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _inGame;

	[Token(Token = "0x1700001B")]
	public static bool Ready
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0xB31EA8", Offset = "0xB31EA8", VA = "0xB31EA8")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xB31F00", Offset = "0xB31F00", VA = "0xB31F00")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static Achievement[] achievements
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xB31F5C", Offset = "0xB31F5C", VA = "0xB31F5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB31FF0", Offset = "0xB31FF0", VA = "0xB31FF0")]
	public static Achievement AchievementById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB320AC", Offset = "0xB320AC", VA = "0xB320AC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB323A4", Offset = "0xB323A4", VA = "0xB323A4")]
	private void OnWaveStart(string _, int index)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB32590", Offset = "0xB32590", VA = "0xB32590")]
	private void OnGameEnd(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB32B54", Offset = "0xB32B54", VA = "0xB32B54")]
	public Dictionary<string, Achievement> AchievementsToDict()
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xB32344", Offset = "0xB32344", VA = "0xB32344")]
	[IteratorStateMachine(typeof(<Initialize>d__47))]
	private static IEnumerator<float> Initialize()
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xB32E68", Offset = "0xB32E68", VA = "0xB32E68", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xB32ED8", Offset = "0xB32ED8", VA = "0xB32ED8")]
	public Achievements()
	{
	}
}
[Serializable]
[Token(Token = "0x2000015")]
public class BackhandAthleteAchievement : HashSetAchievement<string>
{
	[Token(Token = "0x4000063")]
	private const int SOLO_SETS_THRESH = 3;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _usedForehand;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _hitRacketOnce;

	[Token(Token = "0x1700001F")]
	public override int CountThreshold
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0xB33698", Offset = "0xB33698", VA = "0xB33698", Slot = "16")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xB336A0", Offset = "0xB336A0", VA = "0xB336A0", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xB337A0", Offset = "0xB337A0", VA = "0xB337A0", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xB338A0", Offset = "0xB338A0", VA = "0xB338A0")]
	private void OnBallHitRacket(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xB3396C", Offset = "0xB3396C", VA = "0xB3396C")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xB33A50", Offset = "0xB33A50", VA = "0xB33A50", Slot = "14")]
	protected override string DeserializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xB33A58", Offset = "0xB33A58", VA = "0xB33A58", Slot = "15")]
	protected override string SerializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xB33A60", Offset = "0xB33A60", VA = "0xB33A60")]
	public BackhandAthleteAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000016")]
public class BackhandCompetitorAchievement : CountAchievement
{
	[Token(Token = "0x600007F")]
	[Address(RVA = "0xB33AA8", Offset = "0xB33AA8", VA = "0xB33AA8", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xB33B4C", Offset = "0xB33B4C", VA = "0xB33B4C", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xB33BF0", Offset = "0xB33BF0", VA = "0xB33BF0")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xB34274", Offset = "0xB34274", VA = "0xB34274")]
	public BackhandCompetitorAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000017")]
public class BackhandGamerAchievement : CountAchievement
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _streakCount;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xB34284", Offset = "0xB34284", VA = "0xB34284", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xB343AC", Offset = "0xB343AC", VA = "0xB343AC", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xB344D4", Offset = "0xB344D4", VA = "0xB344D4")]
	private void OnResetStreakCounter()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xB344DC", Offset = "0xB344DC", VA = "0xB344DC")]
	private void OnStreakIncreased(int _, ShotInfo shotInfo)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xB34630", Offset = "0xB34630", VA = "0xB34630")]
	public BackhandGamerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000018")]
public class BallSlingerAchievement : Achievement
{
	[Token(Token = "0x2000019")]
	[CompilerGenerated]
	private sealed class <TimerCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BallSlingerAchievement <>4__this;

		[Token(Token = "0x17000022")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000A0")]
			[Address(RVA = "0xB350D8", Offset = "0xB350D8", VA = "0xB350D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000023")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A2")]
			[Address(RVA = "0xB35120", Offset = "0xB35120", VA = "0xB35120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xB34FB8", Offset = "0xB34FB8", VA = "0xB34FB8")]
		[DebuggerHidden]
		public <TimerCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xB35008", Offset = "0xB35008", VA = "0xB35008", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xB3500C", Offset = "0xB3500C", VA = "0xB3500C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xB350E0", Offset = "0xB350E0", VA = "0xB350E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float timeThreshold;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastProgressTime;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _timer;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CoroutineHandle _timerCo;

	[Token(Token = "0x17000020")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xB34638", Offset = "0xB34638", VA = "0xB34638", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000021")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x6000089")]
		[Address(RVA = "0xB34684", Offset = "0xB34684", VA = "0xB34684", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xB346D0", Offset = "0xB346D0", VA = "0xB346D0", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xB346DC", Offset = "0xB346DC", VA = "0xB346DC", Slot = "12")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xB34728", Offset = "0xB34728", VA = "0xB34728", Slot = "13")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xB3476C", Offset = "0xB3476C", VA = "0xB3476C")]
	private float Deserialize(string inp)
	{
		return default(float);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xB3479C", Offset = "0xB3479C", VA = "0xB3479C", Slot = "5")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xB3480C", Offset = "0xB3480C", VA = "0xB3480C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xB34A48", Offset = "0xB34A48", VA = "0xB34A48", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xB34CB8", Offset = "0xB34CB8", VA = "0xB34CB8")]
	private void ResetTimerAndSave()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xB34CD4", Offset = "0xB34CD4", VA = "0xB34CD4")]
	private bool ShouldTimerStop()
	{
		return default(bool);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xB34E28", Offset = "0xB34E28", VA = "0xB34E28")]
	private void StartTimer()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xB34EC0", Offset = "0xB34EC0", VA = "0xB34EC0")]
	private void StopTimer()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xB34F44", Offset = "0xB34F44", VA = "0xB34F44")]
	[IteratorStateMachine(typeof(<TimerCo>d__19))]
	private IEnumerator<float> TimerCo()
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xB34FE0", Offset = "0xB34FE0", VA = "0xB34FE0")]
	private void OnBallTakeOwnership(Ball _)
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xB34FE4", Offset = "0xB34FE4", VA = "0xB34FE4")]
	private void OnBallGiveOwnership(Ball _)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xB34FE8", Offset = "0xB34FE8", VA = "0xB34FE8")]
	private void OnBallContact()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xB34FEC", Offset = "0xB34FEC", VA = "0xB34FEC")]
	private void OnBallHitRacket(ShotInfo s, Vector3 _)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xB34FF0", Offset = "0xB34FF0", VA = "0xB34FF0")]
	private void OnWaveEnded(string s, int _)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB34FF4", Offset = "0xB34FF4", VA = "0xB34FF4")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB34FF8", Offset = "0xB34FF8", VA = "0xB34FF8")]
	public BallSlingerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200001A")]
public class DestroyerAchievement : CountAchievement
{
	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xB3517C", Offset = "0xB3517C", VA = "0xB3517C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xB35220", Offset = "0xB35220", VA = "0xB35220", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xB352C4", Offset = "0xB352C4", VA = "0xB352C4")]
	private void OnShotFinilized(ShotInfo shot)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xB353AC", Offset = "0xB353AC", VA = "0xB353AC")]
	public DestroyerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200001B")]
public class DomeTrotterAchievement : SimpleAchievement
{
	[Token(Token = "0x200001C")]
	[CompilerGenerated]
	private sealed class <CheckForBehindBackState>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DomeTrotterAchievement <>4__this;

		[Token(Token = "0x17000024")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000B5")]
			[Address(RVA = "0xB3603C", Offset = "0xB3603C", VA = "0xB3603C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000025")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B7")]
			[Address(RVA = "0xB36084", Offset = "0xB36084", VA = "0xB36084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xB35B40", Offset = "0xB35B40", VA = "0xB35B40")]
		[DebuggerHidden]
		public <CheckForBehindBackState>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xB35FE0", Offset = "0xB35FE0", VA = "0xB35FE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xB35FE4", Offset = "0xB35FE4", VA = "0xB35FE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xB36044", Offset = "0xB36044", VA = "0xB36044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool debugWithDIG;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _lastWasShotBehindBack;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CoroutineHandle _checkForBehindBackStateCo;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _timeInOppositeQuadrant;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _isBehindBack;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _wasInVQuadrant;

	[Token(Token = "0x4000074")]
	public const float RESET_TIME = 1000f;

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xB353B4", Offset = "0xB353B4", VA = "0xB353B4", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xB35508", Offset = "0xB35508", VA = "0xB35508", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xB356C0", Offset = "0xB356C0", VA = "0xB356C0")]
	private void OnBallHitRacket(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xB35944", Offset = "0xB35944", VA = "0xB35944")]
	private void OnGameEnd(GameEndReason reason)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xB35970", Offset = "0xB35970", VA = "0xB35970")]
	private bool IsWinReason(GameEndReason reason)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xB35784", Offset = "0xB35784", VA = "0xB35784")]
	private bool IsShotBehindBack(ShotInfo shot)
	{
		return default(bool);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xB35A54", Offset = "0xB35A54", VA = "0xB35A54")]
	private void RegisterUpdateCo()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB35664", Offset = "0xB35664", VA = "0xB35664")]
	private void UnRegisterUpdateCo()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB35ACC", Offset = "0xB35ACC", VA = "0xB35ACC")]
	[IteratorStateMachine(typeof(<CheckForBehindBackState>d__11))]
	private IEnumerator<float> CheckForBehindBackState()
	{
		return null;
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xB35B68", Offset = "0xB35B68", VA = "0xB35B68")]
	private void UpdateBehindBackShot()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xB35FD0", Offset = "0xB35FD0", VA = "0xB35FD0")]
	public DomeTrotterAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200001D")]
public class EnlightenmentAchievement : SurvivorAchievement
{
	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xB360E0", Offset = "0xB360E0", VA = "0xB360E0")]
	public EnlightenmentAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200001E")]
public class EnRouteAchievement : CountAchievement
{
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xB36100", Offset = "0xB36100", VA = "0xB36100", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xB361A4", Offset = "0xB361A4", VA = "0xB361A4", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xB36248", Offset = "0xB36248", VA = "0xB36248")]
	private void OnShotFinilized(ShotInfo shot)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xB36330", Offset = "0xB36330", VA = "0xB36330")]
	public EnRouteAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200001F")]
public class FriendlyChapetteAchievement : CountAchievement
{
	[Token(Token = "0x2000020")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400007B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FriendlyChapetteAchievement <>4__this;

		[Token(Token = "0x17000027")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000C8")]
			[Address(RVA = "0xB3697C", Offset = "0xB3697C", VA = "0xB3697C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000028")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000CA")]
			[Address(RVA = "0xB369C4", Offset = "0xB369C4", VA = "0xB369C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xB367E8", Offset = "0xB367E8", VA = "0xB367E8")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xB36898", Offset = "0xB36898", VA = "0xB36898", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xB3689C", Offset = "0xB3689C", VA = "0xB3689C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xB36984", Offset = "0xB36984", VA = "0xB36984", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x17000026")]
	private bool _InValidArena
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0xB36338", Offset = "0xB36338", VA = "0xB36338")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB36410", Offset = "0xB36410", VA = "0xB36410", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xB364B4", Offset = "0xB364B4", VA = "0xB364B4", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB36594", Offset = "0xB36594", VA = "0xB36594")]
	private void OnRoundStarted()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB36708", Offset = "0xB36708", VA = "0xB36708")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB36694", Offset = "0xB36694", VA = "0xB36694")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__7))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB36810", Offset = "0xB36810", VA = "0xB36810")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB36890", Offset = "0xB36890", VA = "0xB36890")]
	public FriendlyChapetteAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000021")]
public class GalacticChildAchievement : HashSetAchievement<GalacticChildAchievement.GameMode>
{
	[Serializable]
	[Token(Token = "0x2000022")]
	public enum GameMode
	{
		[Token(Token = "0x400007D")]
		None,
		[Token(Token = "0x400007E")]
		A,
		[Token(Token = "0x400007F")]
		S,
		[Token(Token = "0x4000080")]
		M
	}

	[Token(Token = "0x17000029")]
	public override int CountThreshold
	{
		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xB36A20", Offset = "0xB36A20", VA = "0xB36A20", Slot = "16")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB36A28", Offset = "0xB36A28", VA = "0xB36A28", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB36ACC", Offset = "0xB36ACC", VA = "0xB36ACC", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB36B70", Offset = "0xB36B70", VA = "0xB36B70")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB36C18", Offset = "0xB36C18", VA = "0xB36C18")]
	private static GameMode Mode2Mode(Analytiks.GameMode gameMode)
	{
		return default(GameMode);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB36C3C", Offset = "0xB36C3C", VA = "0xB36C3C", Slot = "14")]
	protected override GameMode DeserializeItem(string item)
	{
		return default(GameMode);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xB36CC8", Offset = "0xB36CC8", VA = "0xB36CC8", Slot = "15")]
	protected override string SerializeItem(GameMode item)
	{
		return null;
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xB36D2C", Offset = "0xB36D2C", VA = "0xB36D2C")]
	public GalacticChildAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class GalacticCitizenAchievement : Achievement
{
	[Serializable]
	[Token(Token = "0x2000024")]
	public enum GameMode
	{
		[Token(Token = "0x4000086")]
		None,
		[Token(Token = "0x4000087")]
		AZ,
		[Token(Token = "0x4000088")]
		AC,
		[Token(Token = "0x4000089")]
		AN,
		[Token(Token = "0x400008A")]
		SC,
		[Token(Token = "0x400008B")]
		SMC,
		[Token(Token = "0x400008C")]
		MPV,
		[Token(Token = "0x400008D")]
		MPC
	}

	[Token(Token = "0x4000082")]
	private const int NUM_OF_GAME_MODES = 7;

	[Token(Token = "0x4000083")]
	private const int MAX_PLAYES_PER_MODE = 2;

	[Token(Token = "0x4000084")]
	private const int TOTAL_PLAYS = 14;

	[Token(Token = "0x1700002A")]
	public Dictionary<string, int> Dict
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xB36D74", Offset = "0xB36D74", VA = "0xB36D74")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xB36D7C", Offset = "0xB36D7C", VA = "0xB36D7C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xB36D84", Offset = "0xB36D84", VA = "0xB36D84", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xB36DFC", Offset = "0xB36DFC", VA = "0xB36DFC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xB36E1C", Offset = "0xB36E1C", VA = "0xB36E1C", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xB36E38", Offset = "0xB36E38", VA = "0xB36E38")]
	protected int MergeValue(int offlineValue, int onlineValue)
	{
		return default(int);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xB36E44", Offset = "0xB36E44", VA = "0xB36E44", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xB36EE8", Offset = "0xB36EE8", VA = "0xB36EE8", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xB36F8C", Offset = "0xB36F8C", VA = "0xB36F8C")]
	private GameMode Mode2Mode(Analytiks.GameMode gameMode)
	{
		return default(GameMode);
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xB36FB0", Offset = "0xB36FB0", VA = "0xB36FB0")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xB36DA4", Offset = "0xB36DA4", VA = "0xB36DA4")]
	private int PlayedModesCount()
	{
		return default(int);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xB3715C", Offset = "0xB3715C", VA = "0xB3715C", Slot = "5")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xB373EC", Offset = "0xB373EC", VA = "0xB373EC", Slot = "12")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xB37448", Offset = "0xB37448", VA = "0xB37448", Slot = "13")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xB37348", Offset = "0xB37348", VA = "0xB37348")]
	private Dictionary<string, int> Deserialize(string json)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xB37468", Offset = "0xB37468", VA = "0xB37468")]
	public GalacticCitizenAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000025")]
public class GrinderAchievement : CountAchievement
{
	[Token(Token = "0x2000026")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GrinderAchievement <>4__this;

		[Token(Token = "0x1700002E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000F0")]
			[Address(RVA = "0xB37E30", Offset = "0xB37E30", VA = "0xB37E30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700002F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0xB37E78", Offset = "0xB37E78", VA = "0xB37E78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xB37C00", Offset = "0xB37C00", VA = "0xB37C00")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60000EE")]
		[Address(RVA = "0xB37D4C", Offset = "0xB37D4C", VA = "0xB37D4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0xB37D50", Offset = "0xB37D50", VA = "0xB37D50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xB37E38", Offset = "0xB37E38", VA = "0xB37E38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _powerShotUsed;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _shotFinalized;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x1700002D")]
	private bool _InValidArena
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xB374F0", Offset = "0xB374F0", VA = "0xB374F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xB375D0", Offset = "0xB375D0", VA = "0xB375D0", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xB37674", Offset = "0xB37674", VA = "0xB37674", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xB37720", Offset = "0xB37720", VA = "0xB37720")]
	private void UnregisterEvents()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xB37878", Offset = "0xB37878", VA = "0xB37878")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xB37A70", Offset = "0xB37A70", VA = "0xB37A70")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xB37AA8", Offset = "0xB37AA8", VA = "0xB37AA8")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xB379FC", Offset = "0xB379FC", VA = "0xB379FC")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__11))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xB37C28", Offset = "0xB37C28", VA = "0xB37C28")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xB37D44", Offset = "0xB37D44", VA = "0xB37D44")]
	public GrinderAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000027")]
public class MarathonAchievement : CountAchievement
{
	[Token(Token = "0x2000028")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MarathonAchievement <>4__this;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x17000032")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60000FF")]
			[Address(RVA = "0xB38498", Offset = "0xB38498", VA = "0xB38498", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000033")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000101")]
			[Address(RVA = "0xB384E0", Offset = "0xB384E0", VA = "0xB384E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xB382DC", Offset = "0xB382DC", VA = "0xB382DC")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xB3832C", Offset = "0xB3832C", VA = "0xB3832C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xB38330", Offset = "0xB38330", VA = "0xB38330", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xB384A0", Offset = "0xB384A0", VA = "0xB384A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000094")]
	private const float SAVE_RATE = 5f;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _inGame;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timePlayedInSession;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x17000030")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xB37ED4", Offset = "0xB37ED4", VA = "0xB37ED4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xB37F10", Offset = "0xB37F10", VA = "0xB37F10", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xB37F4C", Offset = "0xB37F4C", VA = "0xB37F4C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xB38050", Offset = "0xB38050", VA = "0xB38050", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xB38184", Offset = "0xB38184", VA = "0xB38184")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xB3827C", Offset = "0xB3827C", VA = "0xB3827C")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xB38208", Offset = "0xB38208", VA = "0xB38208")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__12))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xB38304", Offset = "0xB38304", VA = "0xB38304")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xB38324", Offset = "0xB38324", VA = "0xB38324")]
	public MarathonAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000029")]
public class MegahitAchievement : CountAchievement
{
	[Token(Token = "0x6000102")]
	[Address(RVA = "0xB3853C", Offset = "0xB3853C", VA = "0xB3853C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xB385E0", Offset = "0xB385E0", VA = "0xB385E0", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB38684", Offset = "0xB38684", VA = "0xB38684")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB38764", Offset = "0xB38764", VA = "0xB38764")]
	public MegahitAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002A")]
public class MrPlowAchievement : CountAchievement
{
	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB3876C", Offset = "0xB3876C", VA = "0xB3876C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB38810", Offset = "0xB38810", VA = "0xB38810", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xB388B4", Offset = "0xB388B4", VA = "0xB388B4")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xB38998", Offset = "0xB38998", VA = "0xB38998")]
	public MrPlowAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class NightmareAchievement : SurvivorAchievement
{
	[Token(Token = "0x600010A")]
	[Address(RVA = "0xB389A0", Offset = "0xB389A0", VA = "0xB389A0")]
	public NightmareAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class OldTimerAchievement : HashSetAchievement<string>
{
	[Token(Token = "0x200002E")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OldTimerAchievement <>4__this;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<string> <medalsMcs>5__2;

		[Token(Token = "0x17000035")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600011F")]
			[Address(RVA = "0xB396F0", Offset = "0xB396F0", VA = "0xB396F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000121")]
			[Address(RVA = "0xB39738", Offset = "0xB39738", VA = "0xB39738", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xB39140", Offset = "0xB39140", VA = "0xB39140")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xB39384", Offset = "0xB39384", VA = "0xB39384", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xB39388", Offset = "0xB39388", VA = "0xB39388", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xB396F8", Offset = "0xB396F8", VA = "0xB396F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x17000034")]
	public override int CountThreshold
	{
		[Token(Token = "0x600010B")]
		[Address(RVA = "0xB389B0", Offset = "0xB389B0", VA = "0xB389B0", Slot = "16")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB389B8", Offset = "0xB389B8", VA = "0xB389B8", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB38A5C", Offset = "0xB38A5C", VA = "0xB38A5C", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB38B00", Offset = "0xB38B00", VA = "0xB38B00")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB38D38", Offset = "0xB38D38", VA = "0xB38D38")]
	private HashSet<string> GetFinishedMcFromMedals()
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xB390CC", Offset = "0xB390CC", VA = "0xB390CC", Slot = "9")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__6))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xB38C68", Offset = "0xB38C68", VA = "0xB38C68")]
	private void CountSetAndUnlockIfPossible(string setId)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB39168", Offset = "0xB39168", VA = "0xB39168", Slot = "14")]
	protected override string DeserializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB39170", Offset = "0xB39170", VA = "0xB39170", Slot = "15")]
	protected override string SerializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB39178", Offset = "0xB39178", VA = "0xB39178")]
	public OldTimerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class OnFireAchievement : CountAchievement
{
	[Token(Token = "0x6000122")]
	[Address(RVA = "0xB39794", Offset = "0xB39794", VA = "0xB39794", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xB3989C", Offset = "0xB3989C", VA = "0xB3989C", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xB399A4", Offset = "0xB399A4", VA = "0xB399A4")]
	private void OnStreakIncreased(int _)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB39A88", Offset = "0xB39A88", VA = "0xB39A88")]
	public OnFireAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class PerformanceEnhancerAchievement : CountAchievement
{
	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB39A90", Offset = "0xB39A90", VA = "0xB39A90", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB39B34", Offset = "0xB39B34", VA = "0xB39B34", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB39BD8", Offset = "0xB39BD8", VA = "0xB39BD8")]
	private void OnShotFinalized(ShotInfo shot)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB39CD8", Offset = "0xB39CD8", VA = "0xB39CD8")]
	public PerformanceEnhancerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class PowerThirstyAchievement : HashSetAchievement<PowerThirstyAchievement.PuType>
{
	[Serializable]
	[Token(Token = "0x2000032")]
	public enum PuType
	{
		[Token(Token = "0x40000A7")]
		None,
		[Token(Token = "0x40000A8")]
		SD,
		[Token(Token = "0x40000A9")]
		N,
		[Token(Token = "0x40000AA")]
		GM,
		[Token(Token = "0x40000AB")]
		SF,
		[Token(Token = "0x40000AC")]
		B,
		[Token(Token = "0x40000AD")]
		J,
		[Token(Token = "0x40000AE")]
		H,
		[Token(Token = "0x40000AF")]
		I,
		[Token(Token = "0x40000B0")]
		W,
		[Token(Token = "0x40000B1")]
		SS
	}

	[Token(Token = "0x17000037")]
	public override int CountThreshold
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xB39CE0", Offset = "0xB39CE0", VA = "0xB39CE0", Slot = "16")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB39CE8", Offset = "0xB39CE8", VA = "0xB39CE8")]
	private PuType type2type(PowerupType type)
	{
		return default(PuType);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB39CF8", Offset = "0xB39CF8", VA = "0xB39CF8", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB39D9C", Offset = "0xB39D9C", VA = "0xB39D9C", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB39E40", Offset = "0xB39E40", VA = "0xB39E40")]
	private void OnPowerupTaken(Player player, BasePowerup pu)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xB39F44", Offset = "0xB39F44", VA = "0xB39F44", Slot = "14")]
	protected override PuType DeserializeItem(string item)
	{
		return default(PuType);
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xB39FD0", Offset = "0xB39FD0", VA = "0xB39FD0", Slot = "15")]
	protected override string SerializeItem(PuType item)
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xB3A034", Offset = "0xB3A034", VA = "0xB3A034")]
	public PowerThirstyAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000033")]
public class PromisingStartAchievement : HashSetAchievement<string>
{
	[Token(Token = "0x17000038")]
	public override int CountThreshold
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0xB3A07C", Offset = "0xB3A07C", VA = "0xB3A07C", Slot = "16")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xB3A084", Offset = "0xB3A084", VA = "0xB3A084", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xB3A128", Offset = "0xB3A128", VA = "0xB3A128", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xB3A1CC", Offset = "0xB3A1CC", VA = "0xB3A1CC")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xB3A400", Offset = "0xB3A400", VA = "0xB3A400", Slot = "8")]
	protected override void RetroactiveProgress()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xB3A6C4", Offset = "0xB3A6C4", VA = "0xB3A6C4", Slot = "14")]
	protected override string DeserializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xB3A6CC", Offset = "0xB3A6CC", VA = "0xB3A6CC", Slot = "15")]
	protected override string SerializeItem(string item)
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xB3A6D4", Offset = "0xB3A6D4", VA = "0xB3A6D4")]
	public PromisingStartAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class RecklessAchievement : CountAchievement
{
	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _curGameDownersCount;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HashSet<uint> _hitTarget;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xB3A71C", Offset = "0xB3A71C", VA = "0xB3A71C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xB3A844", Offset = "0xB3A844", VA = "0xB3A844", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xB3A968", Offset = "0xB3A968", VA = "0xB3A968")]
	private void OnBallHitHex(ShotInfo shot, HexTile hex)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xB3AA18", Offset = "0xB3AA18", VA = "0xB3AA18")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xB3AAE4", Offset = "0xB3AAE4", VA = "0xB3AAE4")]
	public RecklessAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class SelfMadeAchievement : CountAchievement
{
	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _usedPU;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xB3AB6C", Offset = "0xB3AB6C", VA = "0xB3AB6C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xB3AC90", Offset = "0xB3AC90", VA = "0xB3AC90", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xB3ADB4", Offset = "0xB3ADB4", VA = "0xB3ADB4")]
	private void OnFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xB3AE60", Offset = "0xB3AE60", VA = "0xB3AE60")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xB3AF78", Offset = "0xB3AF78", VA = "0xB3AF78")]
	public SelfMadeAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000036")]
public class SnakeCharmerAchievement : CountAchievement
{
	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private uint? _lastOneShotSnakeId;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xB3AF80", Offset = "0xB3AF80", VA = "0xB3AF80", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xB3B0A4", Offset = "0xB3B0A4", VA = "0xB3B0A4", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xB3B1C8", Offset = "0xB3B1C8", VA = "0xB3B1C8")]
	private void OnGameStarted()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB3B1D0", Offset = "0xB3B1D0", VA = "0xB3B1D0")]
	private void OnActualDealDamage(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xB3B36C", Offset = "0xB3B36C", VA = "0xB3B36C")]
	public SnakeCharmerAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000037")]
public class SnakeWhispererAchievement : CountAchievement
{
	[Token(Token = "0x6000149")]
	[Address(RVA = "0xB3B374", Offset = "0xB3B374", VA = "0xB3B374", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xB3B418", Offset = "0xB3B418", VA = "0xB3B418", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xB3B4BC", Offset = "0xB3B4BC", VA = "0xB3B4BC")]
	private void OnActualDealDamage(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xB3B5E0", Offset = "0xB3B5E0", VA = "0xB3B5E0")]
	public SnakeWhispererAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class SoloStarsAchievement : CountAchievement
{
	[Token(Token = "0x200003A")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoloStarsAchievement <>4__this;

		[Token(Token = "0x17000039")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600015A")]
			[Address(RVA = "0xB3BB40", Offset = "0xB3BB40", VA = "0xB3BB40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600015C")]
			[Address(RVA = "0xB3BB88", Offset = "0xB3BB88", VA = "0xB3BB88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0xB3B65C", Offset = "0xB3B65C", VA = "0xB3B65C")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0xB3BA00", Offset = "0xB3BA00", VA = "0xB3BA00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0xB3BA04", Offset = "0xB3BA04", VA = "0xB3BA04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xB3BB48", Offset = "0xB3BB48", VA = "0xB3BB48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xB3B5E8", Offset = "0xB3B5E8", VA = "0xB3B5E8", Slot = "9")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__0))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xB3B684", Offset = "0xB3B684", VA = "0xB3B684", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xB3B728", Offset = "0xB3B728", VA = "0xB3B728", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xB3B7CC", Offset = "0xB3B7CC", VA = "0xB3B7CC")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xB3B85C", Offset = "0xB3B85C", VA = "0xB3B85C")]
	private void SetStarsCount()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xB3B878", Offset = "0xB3B878", VA = "0xB3B878")]
	private static int CountStars()
	{
		return default(int);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xB3B8F8", Offset = "0xB3B8F8", VA = "0xB3B8F8")]
	public SoloStarsAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class SurvivorAchievement : Achievement
{
	[Token(Token = "0x200003C")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__21 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SurvivorAchievement <>4__this;

		[Token(Token = "0x1700003E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000170")]
			[Address(RVA = "0xB3C50C", Offset = "0xB3C50C", VA = "0xB3C50C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000172")]
			[Address(RVA = "0xB3C554", Offset = "0xB3C554", VA = "0xB3C554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xB3C334", Offset = "0xB3C334", VA = "0xB3C334")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xB3C3F8", Offset = "0xB3C3F8", VA = "0xB3C3F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0xB3C3FC", Offset = "0xB3C3FC", VA = "0xB3C3FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xB3C514", Offset = "0xB3C514", VA = "0xB3C514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000BB")]
	private const float SAVE_RATE = 5f;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ArcadeType arcadeType;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxTime;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _currentTime;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x1700003B")]
	private bool _InValidArena
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0xB3BBE4", Offset = "0xB3BBE4", VA = "0xB3BBE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0xB3BCD4", Offset = "0xB3BCD4", VA = "0xB3BCD4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003D")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0xB3BD68", Offset = "0xB3BD68", VA = "0xB3BD68", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xB3BE10", Offset = "0xB3BE10", VA = "0xB3BE10", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xB3BE1C", Offset = "0xB3BE1C", VA = "0xB3BE1C", Slot = "12")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xB3BE24", Offset = "0xB3BE24", VA = "0xB3BE24")]
	private string Serialize(float time)
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xB3BE74", Offset = "0xB3BE74", VA = "0xB3BE74", Slot = "13")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xB3BEB8", Offset = "0xB3BEB8", VA = "0xB3BEB8")]
	private float Deserialize(string progress)
	{
		return default(float);
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xB3BEE8", Offset = "0xB3BEE8", VA = "0xB3BEE8", Slot = "5")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xB3BF58", Offset = "0xB3BF58", VA = "0xB3BF58", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xB3BFFC", Offset = "0xB3BFFC", VA = "0xB3BFFC", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xB3C0DC", Offset = "0xB3C0DC", VA = "0xB3C0DC")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xB3C254", Offset = "0xB3C254", VA = "0xB3C254")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xB3C1E0", Offset = "0xB3C1E0", VA = "0xB3C1E0")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__21))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xB3C35C", Offset = "0xB3C35C", VA = "0xB3C35C")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xB360F0", Offset = "0xB360F0", VA = "0xB360F0")]
	public SurvivorAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class TripleTripletsAchievement : CountAchievement
{
	[Token(Token = "0x200003F")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TripleTripletsAchievement <>4__this;

		[Token(Token = "0x17000040")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0xB3CC94", Offset = "0xB3CC94", VA = "0xB3CC94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000041")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000182")]
			[Address(RVA = "0xB3CCDC", Offset = "0xB3CCDC", VA = "0xB3CCDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xB3CA24", Offset = "0xB3CA24", VA = "0xB3CA24")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0xB3CB54", Offset = "0xB3CB54", VA = "0xB3CB54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xB3CB58", Offset = "0xB3CB58", VA = "0xB3CB58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xB3CC9C", Offset = "0xB3CC9C", VA = "0xB3CC9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xB3C5B0", Offset = "0xB3C5B0", VA = "0xB3C5B0", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xB3C654", Offset = "0xB3C654", VA = "0xB3C654", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xB3C6F8", Offset = "0xB3C6F8", VA = "0xB3C6F8")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xB3C788", Offset = "0xB3C788", VA = "0xB3C788")]
	private void SetStagesCount()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xB3C9B0", Offset = "0xB3C9B0", VA = "0xB3C9B0", Slot = "9")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__4))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xB3C7A4", Offset = "0xB3C7A4", VA = "0xB3C7A4")]
	private static int CountNumOfStagesWith3SetsWith3Stars()
	{
		return default(int);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xB3CA4C", Offset = "0xB3CA4C", VA = "0xB3CA4C")]
	public TripleTripletsAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class TripletsAchievement : CountAchievement
{
	[Token(Token = "0x2000042")]
	[CompilerGenerated]
	private sealed class <RetroactiveProgressCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TripletsAchievement <>4__this;

		[Token(Token = "0x17000042")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000190")]
			[Address(RVA = "0xB3D418", Offset = "0xB3D418", VA = "0xB3D418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000043")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000192")]
			[Address(RVA = "0xB3D460", Offset = "0xB3D460", VA = "0xB3D460", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0xB3D1A8", Offset = "0xB3D1A8", VA = "0xB3D1A8")]
		[DebuggerHidden]
		public <RetroactiveProgressCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xB3D2D8", Offset = "0xB3D2D8", VA = "0xB3D2D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xB3D2DC", Offset = "0xB3D2DC", VA = "0xB3D2DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xB3D420", Offset = "0xB3D420", VA = "0xB3D420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xB3CD38", Offset = "0xB3CD38", VA = "0xB3CD38", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xB3CDDC", Offset = "0xB3CDDC", VA = "0xB3CDDC", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xB3CE80", Offset = "0xB3CE80", VA = "0xB3CE80")]
	private void OnGameEnd(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xB3CF10", Offset = "0xB3CF10", VA = "0xB3CF10")]
	private void SetStarsCount()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xB3D134", Offset = "0xB3D134", VA = "0xB3D134", Slot = "9")]
	[IteratorStateMachine(typeof(<RetroactiveProgressCo>d__4))]
	protected override IEnumerator<float> RetroactiveProgressCo()
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xB3CF2C", Offset = "0xB3CF2C", VA = "0xB3CF2C")]
	private static int CountNumOfSetsWith3Stars()
	{
		return default(int);
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xB3D1D0", Offset = "0xB3D1D0", VA = "0xB3D1D0")]
	public TripletsAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000043")]
public class UntetheredAchievement : CountAchievement
{
	[Token(Token = "0x2000044")]
	[CompilerGenerated]
	private sealed class <CheckForAchievementScoreCo>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UntetheredAchievement <>4__this;

		[Token(Token = "0x17000045")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60001A0")]
			[Address(RVA = "0xB3DC38", Offset = "0xB3DC38", VA = "0xB3DC38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A2")]
			[Address(RVA = "0xB3DC80", Offset = "0xB3DC80", VA = "0xB3DC80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xB3DA00", Offset = "0xB3DA00", VA = "0xB3DA00")]
		[DebuggerHidden]
		public <CheckForAchievementScoreCo>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xB3DB54", Offset = "0xB3DB54", VA = "0xB3DB54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xB3DB58", Offset = "0xB3DB58", VA = "0xB3DB58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xB3DC40", Offset = "0xB3DC40", VA = "0xB3DC40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _tractorUsed;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CoroutineHandle _checkForAchievementScoreCo;

	[Token(Token = "0x17000044")]
	private bool _InValidArena
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0xB3D4BC", Offset = "0xB3D4BC", VA = "0xB3D4BC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xB3D59C", Offset = "0xB3D59C", VA = "0xB3D59C", Slot = "10")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xB3D640", Offset = "0xB3D640", VA = "0xB3D640", Slot = "11")]
	protected override void OnUnlocked()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xB3D824", Offset = "0xB3D824", VA = "0xB3D824")]
	private void OnGameEnd(GameEndReason _)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xB3D6EC", Offset = "0xB3D6EC", VA = "0xB3D6EC")]
	private void UnregisterEvents()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xB3D828", Offset = "0xB3D828", VA = "0xB3D828")]
	private void OnSlingBegin(bool opponentBall)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xB3D838", Offset = "0xB3D838", VA = "0xB3D838")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xB3D98C", Offset = "0xB3D98C", VA = "0xB3D98C")]
	[IteratorStateMachine(typeof(<CheckForAchievementScoreCo>d__10))]
	private IEnumerator<float> CheckForAchievementScoreCo()
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xB3DA28", Offset = "0xB3DA28", VA = "0xB3DA28")]
	private void CheckForAchievementScore()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xB3DB4C", Offset = "0xB3DB4C", VA = "0xB3DB4C")]
	public UntetheredAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000045")]
public abstract class CountAchievement : Achievement
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int Max;

	[Token(Token = "0x17000047")]
	public int Count
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xB3DCDC", Offset = "0xB3DCDC", VA = "0xB3DCDC")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xB3DCE4", Offset = "0xB3DCE4", VA = "0xB3DCE4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xB3DD98", Offset = "0xB3DD98", VA = "0xB3DD98", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000049")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xB3DDB8", Offset = "0xB3DDB8", VA = "0xB3DDB8", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB3DCEC", Offset = "0xB3DCEC", VA = "0xB3DCEC", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB3DD00", Offset = "0xB3DD00", VA = "0xB3DD00", Slot = "5")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB33D08", Offset = "0xB33D08", VA = "0xB33D08")]
	protected void SetCount(int count)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xB3DDC4", Offset = "0xB3DDC4", VA = "0xB3DDC4", Slot = "12")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xB3DE00", Offset = "0xB3DE00", VA = "0xB3DE00", Slot = "13")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xB3DD6C", Offset = "0xB3DD6C", VA = "0xB3DD6C")]
	private int Deserialize(string str)
	{
		return default(int);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xB3DDE4", Offset = "0xB3DDE4", VA = "0xB3DDE4")]
	private string Serialize(int count)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xB3427C", Offset = "0xB3427C", VA = "0xB3427C")]
	protected CountAchievement()
	{
	}
}
[Token(Token = "0x2000046")]
public abstract class HashSetAchievement<T> : Achievement
{
	[Token(Token = "0x1700004A")]
	protected HashSet<T> Items
	{
		[Token(Token = "0x60001AF")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public abstract int CountThreshold
	{
		[Token(Token = "0x60001B7")]
		get;
	}

	[Token(Token = "0x1700004C")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60001B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004D")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60001B9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001B1")]
	protected void AddItem(T item)
	{
	}

	[Token(Token = "0x60001B2")]
	protected void UnlockIfPossible()
	{
	}

	[Token(Token = "0x60001B3")]
	protected abstract T DeserializeItem(string item);

	[Token(Token = "0x60001B4")]
	protected abstract string SerializeItem(T item);

	[Token(Token = "0x60001B5")]
	private string Serialize(HashSet<T> inp)
	{
		return null;
	}

	[Token(Token = "0x60001B6")]
	private HashSet<T> Deserialize(string progress)
	{
		return null;
	}

	[Token(Token = "0x60001BA")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60001BB")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60001BC")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60001BD")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60001BE")]
	protected HashSetAchievement()
	{
	}
}
[Serializable]
[Token(Token = "0x2000047")]
public abstract class SimpleAchievement : Achievement
{
	[Token(Token = "0x1700004E")]
	public override string CurrentProgressDisplay
	{
		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xB3DE40", Offset = "0xB3DE40", VA = "0xB3DE40", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700004F")]
	public override string MaxProgressDisplay
	{
		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xB3DE88", Offset = "0xB3DE88", VA = "0xB3DE88", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xB3DED0", Offset = "0xB3DED0", VA = "0xB3DED0", Slot = "4")]
	public override float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xB3DEF0", Offset = "0xB3DEF0", VA = "0xB3DEF0", Slot = "5")]
	public override string MergeProgress(string offlineProgress, string onlineProgress)
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xB3DF38", Offset = "0xB3DF38", VA = "0xB3DF38", Slot = "13")]
	protected override void DeserializeProgress(string progress)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xB3E1B8", Offset = "0xB3E1B8", VA = "0xB3E1B8", Slot = "12")]
	protected override string SerializeProgress()
	{
		return null;
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xB35FD8", Offset = "0xB35FD8", VA = "0xB35FD8")]
	protected SimpleAchievement()
	{
	}
}
[Token(Token = "0x2000048")]
public class ArcadeDisplay : SingleplayerDisplay
{
	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro points;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro totalTime;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MeshRenderer speedLevelBar;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _speedLevelBarMat;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _speedLevelBarProgressShaderID;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xB3E1E0", Offset = "0xB3E1E0", VA = "0xB3E1E0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xB3E260", Offset = "0xB3E260", VA = "0xB3E260", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB3E7EC", Offset = "0xB3E7EC", VA = "0xB3E7EC")]
	public ArcadeDisplay()
	{
	}
}
[Token(Token = "0x2000049")]
public abstract class Arena : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200004A")]
	public class MaterialOverrides
	{
		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialsManager.MaterialPool[] brickTargetGroup;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialsManager.MaterialPool brickHealing;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialsManager.MaterialPool brickRefractionBroken;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialsManager.MaterialPool brickReflectionBroken;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material brickSnakeMaterial;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material brickBonus;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material brickDowner;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material brickDownerBlue;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Material stopperMaterial;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Material bumperMaterial;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Material blasterMaterial;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material slidereMaterial;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject bonusPrefab;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject downerPrefab;

		[Token(Token = "0x6000208")]
		[Address(RVA = "0xB3EF88", Offset = "0xB3EF88", VA = "0xB3EF88")]
		public void Init()
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0xB41768", Offset = "0xB41768", VA = "0xB41768")]
		public MaterialOverrides()
		{
		}
	}

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Arena> all;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Arena Definitions")]
	public ArenaType arenaType;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ArcadeType arcadeType;

	[NonSerialized]
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VersusMatchType versusMatchType;

	[NonSerialized]
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public VersusMatchStyle versusMatchStyle;

	[NonSerialized]
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArenaLightAndReflection lightsAndReflection;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Room room;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RoomAssembler roomAssembler;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ArenaDisplay arenaDisplay;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] roomParts;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BezierCurve[] _ballSpawnRails;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform[] _playerPositions;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _playerZoneRadius;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PullRail[] _availableGutters;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _arenaApproxRadius;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MaterialOverrides materialOverrides;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected GameEndReason _gameEndReason;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _handlingMenuButtonClick;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _defaultReflectionsProbeAmount;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected int _ExposureID;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	internal bool _gameInProgress;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	internal bool _gameOver;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	internal bool _abortingGame;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	internal bool _forceGameOver;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	internal bool _gameStatsPosted;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal GameEndReason _forceGameOverReason;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	internal float _timeInSession;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _forceGameOverP1Score;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Brick materials")]
	[SerializeField]
	protected Material _brickReflection;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	protected Material _brickRefraction;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	protected Material _brickHighlight;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material _brickRefractionBlackRef;

	[NonSerialized]
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material _brickRefraction_DefaultRef;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Material _brickRefractionInstance;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Material _brickReflectionInstance;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected Material _brickHighlightInstance;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected int _brickDarkenColorID;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Color _brickRefractionDefaultDarkenColor;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	protected int _gameScore;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _unpausedTimeScale;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool _paused;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	private bool _firstFrameAfterPause;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _timeAfterPause;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	protected bool _goneTooLong;

	[Token(Token = "0x17000050")]
	public PullRail[] availableGutters
	{
		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xB3E7F4", Offset = "0xB3E7F4", VA = "0xB3E7F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000051")]
	public GameEndReason gameEndReason
	{
		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xB3EB6C", Offset = "0xB3EB6C", VA = "0xB3EB6C")]
		get
		{
			return default(GameEndReason);
		}
	}

	[Token(Token = "0x17000052")]
	public bool hasEnergyBar
	{
		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xB3EB74", Offset = "0xB3EB74", VA = "0xB3EB74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000053")]
	public virtual bool isGameInProgress
	{
		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xB3EBEC", Offset = "0xB3EBEC", VA = "0xB3EBEC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000054")]
	public virtual bool isGameOver
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xB3EBF4", Offset = "0xB3EBF4", VA = "0xB3EBF4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000055")]
	public virtual bool forceGameOver
	{
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0xB3EBFC", Offset = "0xB3EBFC", VA = "0xB3EBFC", Slot = "6")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public virtual GameEndReason forceGameOverReason
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0xB3EC08", Offset = "0xB3EC08", VA = "0xB3EC08", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public virtual float gameDuration
	{
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0xB3EC10", Offset = "0xB3EC10", VA = "0xB3EC10", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000058")]
	public abstract int GameXp
	{
		[Token(Token = "0x60001D5")]
		get;
	}

	[Token(Token = "0x17000059")]
	public virtual bool canShowTargets
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xB3EC18", Offset = "0xB3EC18", VA = "0xB3EC18", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0xB3EC20", Offset = "0xB3EC20", VA = "0xB3EC20", Slot = "11")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public Color brickRefractionDefaultDarkenColor
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xB3EC88", Offset = "0xB3EC88", VA = "0xB3EC88")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x1700005B")]
	public int brickRefractionDarkenColorID
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xB3EC94", Offset = "0xB3EC94", VA = "0xB3EC94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005C")]
	public Material brickRefraction
	{
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xB3EC9C", Offset = "0xB3EC9C", VA = "0xB3EC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005D")]
	public Material brickReflection
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xB3ECA4", Offset = "0xB3ECA4", VA = "0xB3ECA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005E")]
	public Material brickHighlight
	{
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xB3ECAC", Offset = "0xB3ECAC", VA = "0xB3ECAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public virtual int gameScore
	{
		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xB3ECB4", Offset = "0xB3ECB4", VA = "0xB3ECB4", Slot = "16")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xB3ECBC", Offset = "0xB3ECBC", VA = "0xB3ECBC", Slot = "17")]
		internal set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public bool IsPaused
	{
		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xB41020", Offset = "0xB41020", VA = "0xB41020")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	public virtual bool CanPauseNow
	{
		[Token(Token = "0x6000200")]
		[Address(RVA = "0xB41028", Offset = "0xB41028", VA = "0xB41028", Slot = "33")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action onArenaSelected
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0xB3E7FC", Offset = "0xB3E7FC", VA = "0xB3E7FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001CB")]
		[Address(RVA = "0xB3E8D8", Offset = "0xB3E8D8", VA = "0xB3E8D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event Action onArenaShutdown
	{
		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xB3E9B4", Offset = "0xB3E9B4", VA = "0xB3E9B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xB3EA90", Offset = "0xB3EA90", VA = "0xB3EA90")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xB3EC2C", Offset = "0xB3EC2C", VA = "0xB3EC2C", Slot = "12")]
	public virtual void AddScore(int score)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xB3EC70", Offset = "0xB3EC70", VA = "0xB3EC70", Slot = "13")]
	public virtual int GetScore()
	{
		return default(int);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xB3EC80", Offset = "0xB3EC80", VA = "0xB3EC80", Slot = "14")]
	public virtual void NewWaveStarted(int difficulty)
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xB3EC84", Offset = "0xB3EC84", VA = "0xB3EC84", Slot = "15")]
	public virtual void overrideFloorTurnOn(float onStatus, bool resetPulse = false)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xB3ECC4", Offset = "0xB3ECC4", VA = "0xB3ECC4", Slot = "18")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xB3F17C", Offset = "0xB3F17C", VA = "0xB3F17C", Slot = "19")]
	protected virtual void GameIsOver()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xB3F32C", Offset = "0xB3F32C", VA = "0xB3F32C")]
	public Vector3 GetPlayerPosition(PlayerID playerID = PlayerID.Player1)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xB3F3A0", Offset = "0xB3F3A0", VA = "0xB3F3A0")]
	public BezierCurve GetClosestSpawnRail(PlayerID playerID = PlayerID.Player1)
	{
		return null;
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xB3F4D4", Offset = "0xB3F4D4", VA = "0xB3F4D4", Slot = "20")]
	public virtual void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xB3F730", Offset = "0xB3F730", VA = "0xB3F730", Slot = "21")]
	public virtual void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xB3FB64", Offset = "0xB3FB64", VA = "0xB3FB64", Slot = "22")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xB3FE5C", Offset = "0xB3FE5C", VA = "0xB3FE5C", Slot = "23")]
	public virtual void Shutdown()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xB400F8", Offset = "0xB400F8", VA = "0xB400F8")]
	public void ActivateArenaObjects()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xB3F6CC", Offset = "0xB3F6CC", VA = "0xB3F6CC")]
	public void DeactivateArenaObjects()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xB4015C", Offset = "0xB4015C", VA = "0xB4015C", Slot = "24")]
	public virtual void SetupPlayerPositions()
	{
	}

	[Token(Token = "0x60001EE")]
	public abstract LeaderboardManager.LeaderboardContainer GetLeaderboard();

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xB401FC", Offset = "0xB401FC", VA = "0xB401FC")]
	public LeaderboardManager.LeaderboardContainer GetMonthlyLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xB3F9DC", Offset = "0xB3F9DC", VA = "0xB3F9DC")]
	protected void PostGameStats()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xB40394", Offset = "0xB40394", VA = "0xB40394")]
	private bool CanPostGameResult(out string error)
	{
		return default(bool);
	}

	[Token(Token = "0x60001F2")]
	protected abstract void postGameResults();

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xB40488", Offset = "0xB40488", VA = "0xB40488", Slot = "27")]
	public virtual void AbortGame(GameEndReason endReason, bool postResults = true)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xB40704", Offset = "0xB40704", VA = "0xB40704", Slot = "28")]
	public virtual void finishGame()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xB40708", Offset = "0xB40708", VA = "0xB40708", Slot = "29")]
	public virtual void onLocalPlayerQuitMatch(GameEndReason endReason, bool forceBackToMainMenu = false, bool goBackToMainMenu = true)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xB40AE4", Offset = "0xB40AE4", VA = "0xB40AE4", Slot = "30")]
	public virtual void OnPlayerRestart()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xB40D20", Offset = "0xB40D20", VA = "0xB40D20", Slot = "31")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xB40E10", Offset = "0xB40E10", VA = "0xB40E10", Slot = "32")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xB40D4C", Offset = "0xB40D4C", VA = "0xB40D4C")]
	protected void handleMenuButtonClick()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xB40E14", Offset = "0xB40E14", VA = "0xB40E14")]
	protected void unhandleMenuButtonClick()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xB40ED4", Offset = "0xB40ED4", VA = "0xB40ED4")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xB40EE4", Offset = "0xB40EE4", VA = "0xB40EE4")]
	private void showOptions()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xB40BBC", Offset = "0xB40BBC", VA = "0xB40BBC")]
	private bool canRestartGame()
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xB4101C", Offset = "0xB4101C", VA = "0xB4101C")]
	private void onOptionsHidden()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xB41030", Offset = "0xB41030", VA = "0xB41030")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xB410C0", Offset = "0xB410C0", VA = "0xB410C0")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xB41140", Offset = "0xB41140", VA = "0xB41140")]
	public void OnDashShown()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xB4114C", Offset = "0xB4114C", VA = "0xB4114C")]
	public void OnDashHidden(float pauseTime)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xB4128C", Offset = "0xB4128C", VA = "0xB4128C")]
	private Transform findMatchingTransform(Transform t1, Transform root1, Transform root2)
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB416A0", Offset = "0xB416A0", VA = "0xB416A0")]
	protected Arena()
	{
	}
}
[Token(Token = "0x200004B")]
public abstract class ArenaDisplay : MonoBehaviour
{
	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject displayedItemsRoot;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer arenaDisplay;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string RTTItemName;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro timerTime;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro totalWaves;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer Bar;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Texture RTTItemTexture;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int _timeLeftShaderID;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected int _timeHealShaderID;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int _timePenaltyShaderID;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int _breathID;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected int _displayItemCode;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected int _totalWavesID;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected int _waveCompleteID;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected int _frozenID;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected int _rttID;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected bool _turnedOn;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected StringBuilder _builder;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected string _totalWavesFormat;

	[Token(Token = "0x17000062")]
	public bool turnedOn
	{
		[Token(Token = "0x600020A")]
		[Address(RVA = "0xB41770", Offset = "0xB41770", VA = "0xB41770")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB41778", Offset = "0xB41778", VA = "0xB41778", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB41920", Offset = "0xB41920", VA = "0xB41920", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB41AF0", Offset = "0xB41AF0", VA = "0xB41AF0", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xB41B50", Offset = "0xB41B50", VA = "0xB41B50", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xB41BC0", Offset = "0xB41BC0", VA = "0xB41BC0")]
	public void TurnOn()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xB41BB8", Offset = "0xB41BB8", VA = "0xB41BB8")]
	public void TurnOff()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xB41BCC", Offset = "0xB41BCC", VA = "0xB41BCC", Slot = "8")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xB41BD0", Offset = "0xB41BD0", VA = "0xB41BD0", Slot = "9")]
	public virtual void RoundReset()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xB41BD4", Offset = "0xB41BD4", VA = "0xB41BD4", Slot = "10")]
	public virtual void AnimateTurningOn(float param)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xB41BD8", Offset = "0xB41BD8", VA = "0xB41BD8")]
	protected ArenaDisplay()
	{
	}
}
[Token(Token = "0x200004C")]
public class ArenaLightAndReflection : MonoBehaviour
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] reflectionMaterials;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light[] lights;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform allLightsRoot;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Light> allLights;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color[] allLights_DefaultColor;

	[NonSerialized]
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color targetReflectionColor;

	[NonSerialized]
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color targetLightColor;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Renderer> _renderersWithReflectionMaterial;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color[] _lightsDefaultColor;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color _lastReflectionColor;

	[Token(Token = "0x4000135")]
	private const float THRESH = 0.001f;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xB41C78", Offset = "0xB41C78", VA = "0xB41C78")]
	public void updateColors(Color currentReflectionColor, Color currentLightColor)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xB42128", Offset = "0xB42128", VA = "0xB42128")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xB42544", Offset = "0xB42544", VA = "0xB42544", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xB428BC", Offset = "0xB428BC", VA = "0xB428BC", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xB428C0", Offset = "0xB428C0", VA = "0xB428C0")]
	public ArenaLightAndReflection()
	{
	}
}
[Token(Token = "0x200004D")]
public class ArenaLightAndReflectionMP : ArenaLightAndReflection
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Reflections")]
	public Gradient reflectionColorByPlayer;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ColorUsage(true, true)]
	public Color reflectionColorGutter;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[ColorUsage(true, true)]
	public Color reflectionColorEndgame;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Lights")]
	public Gradient lightColorByPlayer;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color lightColorGutter;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lightColorEndgame;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MultiPlayerArena_Versus _arena;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xB4294C", Offset = "0xB4294C", VA = "0xB4294C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xB429AC", Offset = "0xB429AC", VA = "0xB429AC", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xB42B78", Offset = "0xB42B78", VA = "0xB42B78")]
	public ArenaLightAndReflectionMP()
	{
	}
}
[Token(Token = "0x200004E")]
public class ArenaLightAndReflectionSP : ArenaLightAndReflection
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Reflections")]
	public Gradient reflectionColorByEnergy;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ColorUsage(true, true)]
	public Color reflectionColorGutter;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[ColorUsage(true, true)]
	public Color reflectionColorEndgame;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[ColorUsage(true, true)]
	public Color reflectionColorSuperBoost;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Lights")]
	public Gradient lightColorByEnergy;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color lightColorGutter;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color lightColorEndgame;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Color lightColorSuperBoost;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private EnergyArena _arena;

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xB42B7C", Offset = "0xB42B7C", VA = "0xB42B7C", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xB42BDC", Offset = "0xB42BDC", VA = "0xB42BDC", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xB42CE0", Offset = "0xB42CE0", VA = "0xB42CE0")]
	public ArenaLightAndReflectionSP()
	{
	}
}
[Token(Token = "0x200004F")]
public class Arenas : MonoBehaviour
{
	[Token(Token = "0x2000050")]
	[CompilerGenerated]
	private sealed class <Start>d__39 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Arenas <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000236")]
			[Address(RVA = "0xB437A4", Offset = "0xB437A4", VA = "0xB437A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000238")]
			[Address(RVA = "0xB437EC", Offset = "0xB437EC", VA = "0xB437EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xB43420", Offset = "0xB43420", VA = "0xB43420")]
		[DebuggerHidden]
		public <Start>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0xB43450", Offset = "0xB43450", VA = "0xB43450", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xB43454", Offset = "0xB43454", VA = "0xB43454", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0xB437AC", Offset = "0xB437AC", VA = "0xB437AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Arenas inst;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SinglePlayerArena arcade;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SinglePlayerArena nightmare;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SinglePlayerArena solo;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MultiPlayerArena_Versus multiplayerVersus;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiPlayerArena_CoOp multiplayerCoOp;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SinglePlayerArena musicChallenge;

	[Token(Token = "0x17000063")]
	public static Arena current
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xB42CE4", Offset = "0xB42CE4", VA = "0xB42CE4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xB42D2C", Offset = "0xB42D2C", VA = "0xB42D2C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public static bool isArcade
	{
		[Token(Token = "0x6000223")]
		[Address(RVA = "0xB42F38", Offset = "0xB42F38", VA = "0xB42F38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000065")]
	public static bool isSolo
	{
		[Token(Token = "0x6000224")]
		[Address(RVA = "0xB34558", Offset = "0xB34558", VA = "0xB34558")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000066")]
	public static bool isVersus
	{
		[Token(Token = "0x6000225")]
		[Address(RVA = "0xB3FD84", Offset = "0xB3FD84", VA = "0xB3FD84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000067")]
	public static bool isCoOp
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xB43010", Offset = "0xB43010", VA = "0xB43010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000068")]
	public static bool isMusicChallenge
	{
		[Token(Token = "0x6000227")]
		[Address(RVA = "0xB3E678", Offset = "0xB3E678", VA = "0xB3E678")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000069")]
	public static bool isSingleplayer
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0xB3F30C", Offset = "0xB3F30C", VA = "0xB3F30C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006A")]
	public static bool isMultiplayer
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0xB33CE8", Offset = "0xB33CE8", VA = "0xB33CE8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006B")]
	public static bool isZen
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0xB3E788", Offset = "0xB3E788", VA = "0xB3E788")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006C")]
	public static bool isArcadeNightmare
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xB430E8", Offset = "0xB430E8", VA = "0xB430E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006D")]
	public static bool isCoOpNightmare
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xB4314C", Offset = "0xB4314C", VA = "0xB4314C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006E")]
	public static bool isAnyNightmare
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0xB431B0", Offset = "0xB431B0", VA = "0xB431B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700006F")]
	public static bool PreloadedAllArenas
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0xB43318", Offset = "0xB43318", VA = "0xB43318")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0xB43360", Offset = "0xB43360", VA = "0xB43360")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xB42D7C", Offset = "0xB42D7C", VA = "0xB42D7C")]
	public static void Select(Arena arena, bool matchStarting = true)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xB4321C", Offset = "0xB4321C", VA = "0xB4321C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xB433AC", Offset = "0xB433AC", VA = "0xB433AC")]
	[IteratorStateMachine(typeof(<Start>d__39))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xB43448", Offset = "0xB43448", VA = "0xB43448")]
	public Arenas()
	{
	}
}
[Token(Token = "0x2000051")]
public abstract class ArenaTimer : MonoBehaviour
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArenaTimer inst;

	[Token(Token = "0x17000072")]
	public abstract float remainingTimeDefacto
	{
		[Token(Token = "0x6000239")]
		get;
	}

	[Token(Token = "0x17000073")]
	public abstract bool canPropagateTimer
	{
		[Token(Token = "0x600023A")]
		get;
	}

	[Token(Token = "0x17000074")]
	public abstract bool canEndGame
	{
		[Token(Token = "0x600023B")]
		get;
	}

	[Token(Token = "0x17000075")]
	public Player lastPlayerToAddBonusTime
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xB437F4", Offset = "0xB437F4", VA = "0xB437F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xB437FC", Offset = "0xB437FC", VA = "0xB437FC")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x600023C")]
	public abstract void AddBonusTime(float fTimeAdded, bool isRemoteHit = false);

	[Token(Token = "0x600023D")]
	public abstract void FillUp();

	[Token(Token = "0x600023E")]
	public abstract void InstantFillUp();

	[Token(Token = "0x600023F")]
	public abstract void SyncCoopTimer(SyncGameEvents.CoopTimerEvent coopTimerEvent);

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB43804", Offset = "0xB43804", VA = "0xB43804")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB4385C", Offset = "0xB4385C", VA = "0xB4385C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xB438B0", Offset = "0xB438B0", VA = "0xB438B0")]
	protected ArenaTimer()
	{
	}
}
[Token(Token = "0x2000052")]
public enum ArenaType
{
	[Token(Token = "0x4000155")]
	Arcade,
	[Token(Token = "0x4000156")]
	Solo,
	[Token(Token = "0x4000157")]
	MP_Versus,
	[Token(Token = "0x4000158")]
	MP_CoOp
}
[Token(Token = "0x2000053")]
public enum ArcadeType
{
	[Token(Token = "0x400015A")]
	Zen,
	[Token(Token = "0x400015B")]
	Regular,
	[Token(Token = "0x400015C")]
	Nightmare
}
[Token(Token = "0x2000054")]
public enum VersusMatchType
{
	[Token(Token = "0x400015E")]
	NA,
	[Token(Token = "0x400015F")]
	Friendly,
	[Token(Token = "0x4000160")]
	Ranked
}
[Token(Token = "0x2000055")]
public enum VersusMatchStyle
{
	[Token(Token = "0x4000162")]
	NA,
	[Token(Token = "0x4000163")]
	OneRound,
	[Token(Token = "0x4000164")]
	BestOfX
}
[Token(Token = "0x2000056")]
public static class ArcadeTypeNames
{
	[Token(Token = "0x4000165")]
	private const string zenId = "zen";

	[Token(Token = "0x4000166")]
	private const string regularId = "arcade";

	[Token(Token = "0x4000167")]
	private const string nightmareId = "nightmare";

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xB438B8", Offset = "0xB438B8", VA = "0xB438B8")]
	public static string arcadeTypeToString(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB439A8", Offset = "0xB439A8", VA = "0xB439A8")]
	public static ArcadeType stringToArcadeType(string arcadeTypeStr)
	{
		return default(ArcadeType);
	}
}
[Token(Token = "0x2000057")]
public abstract class EnergyArena : Arena
{
	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Single player specific")]
	[HideInInspector]
	public WaveSet _selectedSet;

	[NonSerialized]
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string selectedSetId;

	[NonSerialized]
	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SinglePlayerTimer _timer;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _floorHealAmount;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float _floorFreezeAmount;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float _floorTimerRemain;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float _overrideFloorTimer;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _visibleRemainingTime;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _visibleRemainingTimeTarget;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _visibleRemainingTimeVel;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float _Pulse;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public PlayerID playerID;

	[Token(Token = "0x17000076")]
	public float pulse
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0xB43AC4", Offset = "0xB43AC4", VA = "0xB43AC4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000077")]
	public float visibleRemainingTime
	{
		[Token(Token = "0x6000248")]
		[Address(RVA = "0xB43ACC", Offset = "0xB43ACC", VA = "0xB43ACC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000078")]
	public float visibleRemainingTimeTarget
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0xB43AD4", Offset = "0xB43AD4", VA = "0xB43AD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB43ADC", Offset = "0xB43ADC", VA = "0xB43ADC", Slot = "18")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB43B64", Offset = "0xB43B64", VA = "0xB43B64", Slot = "23")]
	public override void Shutdown()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xB43BE4", Offset = "0xB43BE4", VA = "0xB43BE4", Slot = "21")]
	public override void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB43C88", Offset = "0xB43C88", VA = "0xB43C88", Slot = "14")]
	public override void NewWaveStarted(int difficulty)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB43CA4", Offset = "0xB43CA4", VA = "0xB43CA4", Slot = "15")]
	public override void overrideFloorTurnOn(float floorTime, bool resetPulse = false)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB43CB4", Offset = "0xB43CB4", VA = "0xB43CB4", Slot = "28")]
	public override void finishGame()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB43E1C", Offset = "0xB43E1C", VA = "0xB43E1C", Slot = "22")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xB446C4", Offset = "0xB446C4", VA = "0xB446C4")]
	protected EnergyArena()
	{
	}
}
[Token(Token = "0x2000058")]
public enum GameEndReason
{
	[Token(Token = "0x4000175")]
	Undefined,
	[Token(Token = "0x4000176")]
	EndOfContent,
	[Token(Token = "0x4000177")]
	TimesUp,
	[Token(Token = "0x4000178")]
	KnockOut,
	[Token(Token = "0x4000179")]
	LocalAbort,
	[Token(Token = "0x400017A")]
	OpponentLeft,
	[Token(Token = "0x400017B")]
	LocalDisconnection,
	[Token(Token = "0x400017C")]
	Restart,
	[Token(Token = "0x400017D")]
	InvitedToMultiplayer,
	[Token(Token = "0x400017E")]
	ExternalTimesUp
}
[Token(Token = "0x2000059")]
public class MRScoreboard : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200005A")]
	public class Scoreboard
	{
		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("In Game")]
		public GameObject ingameRoot;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro ingameP1Name;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro ingameP1Wins;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro ingameP1Score;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro ingameP2Name;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshPro ingameP2Wins;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshPro ingameP2Score;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshPro ingameWaves;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LocalizeDuration ingameTimer;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Bar")]
		public Renderer ingameBar;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Renderer ingameBarGlow;

		[NonSerialized]
		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool isActive;

		[NonSerialized]
		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Material barMaterial;

		[NonSerialized]
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Material glowMaterial;

		[Token(Token = "0x600025D")]
		[Address(RVA = "0xB45644", Offset = "0xB45644", VA = "0xB45644")]
		public Scoreboard()
		{
		}
	}

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MRScoreboard inst;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Scoreboard compact;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _ScoreRatioID;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _p1Score;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _p2Score;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothFloat _p1ScoreSmooth;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothFloat _p2ScoreSmooth;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _p1Name;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _p2Name;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _p1Wins;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _p2Wins;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _totalWaves;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _currentWave;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StringBuilder _builder;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _timeLeft;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SmoothFloat _smoothRatio;

	[Token(Token = "0x17000079")]
	private bool IsInMR
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0xB4520C", Offset = "0xB4520C", VA = "0xB4520C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xB44780", Offset = "0xB44780", VA = "0xB44780")]
	private void UpdateScore(MultiPlayerArena_Versus arena, float dt, bool immediate)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xB44B30", Offset = "0xB44B30", VA = "0xB44B30")]
	private void UpdatePlayerNames()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xB44C48", Offset = "0xB44C48", VA = "0xB44C48")]
	private void UpdateWins(MultiPlayerArena_Versus arena)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xB44D04", Offset = "0xB44D04", VA = "0xB44D04")]
	private void UpdateWaves()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xB44E9C", Offset = "0xB44E9C", VA = "0xB44E9C")]
	private void UpdateTimer()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xB45060", Offset = "0xB45060", VA = "0xB45060")]
	private void UpdateBar(MultiPlayerArena_Versus arena, float dt, bool immediate)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xB4511C", Offset = "0xB4511C", VA = "0xB4511C")]
	public void DrawInMixedReality(RenderTexture rt)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xB45214", Offset = "0xB45214", VA = "0xB45214")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xB452B8", Offset = "0xB452B8", VA = "0xB452B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xB4551C", Offset = "0xB4551C", VA = "0xB4551C")]
	public MRScoreboard()
	{
	}
}
[Token(Token = "0x200005B")]
public static class MultiPlayerArena
{
	[Token(Token = "0x200005C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeout;

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xB456E0", Offset = "0xB456E0", VA = "0xB456E0")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000260")]
		[Address(RVA = "0xB456E8", Offset = "0xB456E8", VA = "0xB456E8")]
		internal bool <QuitMatchCo>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200005D")]
	[CompilerGenerated]
	private sealed class <QuitMatchCo>d__1 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool goBackToMainMenu;

		[Token(Token = "0x1700007A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000264")]
			[Address(RVA = "0xB45A74", Offset = "0xB45A74", VA = "0xB45A74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000266")]
			[Address(RVA = "0xB45ABC", Offset = "0xB45ABC", VA = "0xB45ABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000261")]
		[Address(RVA = "0xB456B8", Offset = "0xB456B8", VA = "0xB456B8")]
		[DebuggerHidden]
		public <QuitMatchCo>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0xB4577C", Offset = "0xB4577C", VA = "0xB4577C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xB45780", Offset = "0xB45780", VA = "0xB45780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0xB45A7C", Offset = "0xB45A7C", VA = "0xB45A7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400019F")]
	private const float QUIT_GAME_SYNC_EVENTS_TIMEOUT = 1f;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xB4564C", Offset = "0xB4564C", VA = "0xB4564C")]
	[IteratorStateMachine(typeof(<QuitMatchCo>d__1))]
	public static IEnumerator<float> QuitMatchCo(bool goBackToMainMenu)
	{
		return null;
	}
}
[Token(Token = "0x200005E")]
public class MultiPlayerArena_CoOp : EnergyArena
{
	[Token(Token = "0x200005F")]
	[CompilerGenerated]
	private sealed class <LoadLeaderboardAndCurrentScore>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPlayerArena_CoOp <>4__this;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager.LeaderboardContainer <lb>5__2;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600027D")]
			[Address(RVA = "0xB47310", Offset = "0xB47310", VA = "0xB47310", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027F")]
			[Address(RVA = "0xB47358", Offset = "0xB47358", VA = "0xB47358", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0xB46078", Offset = "0xB46078", VA = "0xB46078")]
		[DebuggerHidden]
		public <LoadLeaderboardAndCurrentScore>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600027B")]
		[Address(RVA = "0xB47120", Offset = "0xB47120", VA = "0xB47120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600027C")]
		[Address(RVA = "0xB47124", Offset = "0xB47124", VA = "0xB47124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027E")]
		[Address(RVA = "0xB47318", Offset = "0xB47318", VA = "0xB47318", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public PlayerNamesFlakh playerNamesFlakhPrefab;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _prevScore;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private bool? _isTeamBest;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x166")]
	private bool _waitingForConnection;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float timeToPing;

	[Token(Token = "0x1700007C")]
	public bool? isTeamBest
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xB45C58", Offset = "0xB45C58", VA = "0xB45C58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700007D")]
	public override int GameXp
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xB469F0", Offset = "0xB469F0", VA = "0xB469F0", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000003")]
	public event Action scoreReported
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xB45B18", Offset = "0xB45B18", VA = "0xB45B18")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xB45BB8", Offset = "0xB45BB8", VA = "0xB45BB8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB45C60", Offset = "0xB45C60", VA = "0xB45C60", Slot = "25")]
	public override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB45CB4", Offset = "0xB45CB4", VA = "0xB45CB4", Slot = "21")]
	public override void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xB45CD4", Offset = "0xB45CD4", VA = "0xB45CD4")]
	public void onLobbyConnection()
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xB45D94", Offset = "0xB45D94", VA = "0xB45D94", Slot = "24")]
	public override void SetupPlayerPositions()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB45E6C", Offset = "0xB45E6C", VA = "0xB45E6C", Slot = "20")]
	public override void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xB45EC8", Offset = "0xB45EC8", VA = "0xB45EC8")]
	private void showPlayerNames()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xB46004", Offset = "0xB46004", VA = "0xB46004")]
	[IteratorStateMachine(typeof(<LoadLeaderboardAndCurrentScore>d__15))]
	private IEnumerator LoadLeaderboardAndCurrentScore()
	{
		return null;
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB460A0", Offset = "0xB460A0", VA = "0xB460A0", Slot = "19")]
	protected override void GameIsOver()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB460F8", Offset = "0xB460F8", VA = "0xB460F8", Slot = "29")]
	public override void onLocalPlayerQuitMatch(GameEndReason endReason, bool forceBackToMainMenu = false, bool goBackToMainMenu = true)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB4633C", Offset = "0xB4633C", VA = "0xB4633C", Slot = "27")]
	public override void AbortGame(GameEndReason endReason, bool postResults = true)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xB4641C", Offset = "0xB4641C", VA = "0xB4641C", Slot = "26")]
	protected override void postGameResults()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xB466FC", Offset = "0xB466FC", VA = "0xB466FC")]
	private void DownloadLeaderboardData()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB46930", Offset = "0xB46930", VA = "0xB46930")]
	private bool didRemoteDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB46AD4", Offset = "0xB46AD4", VA = "0xB46AD4", Slot = "22")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xB47114", Offset = "0xB47114", VA = "0xB47114")]
	public MultiPlayerArena_CoOp()
	{
	}
}
[Token(Token = "0x2000060")]
public class MultiPlayerArena_Versus : Arena
{
	[Token(Token = "0x2000061")]
	public struct RoundResolution
	{
		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameEndReason endReason;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public PlayerID winningPlayer;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int scoreP1;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int scoreP2;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int waveNum;
	}

	[Token(Token = "0x2000062")]
	[CompilerGenerated]
	private sealed class <iterPlayerRoundWinReasons>d__54 : IEnumerable<GameEndReason>, IEnumerable, IEnumerator<GameEndReason>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameEndReason <>2__current;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiPlayerArena_Versus <>4__this;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerID player;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public PlayerID <>3__player;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<RoundResolution>.Enumerator <>7__wrap1;

		[Token(Token = "0x1700009A")]
		private GameEndReason System.Collections.Generic.IEnumerator<GameEndReason>.Current
		{
			[Token(Token = "0x60002BE")]
			[Address(RVA = "0xB4CD78", Offset = "0xB4CD78", VA = "0xB4CD78", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(GameEndReason);
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C0")]
			[Address(RVA = "0xB4CDC0", Offset = "0xB4CDC0", VA = "0xB4CDC0", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xB4CB28", Offset = "0xB4CB28", VA = "0xB4CB28")]
		[DebuggerHidden]
		public <iterPlayerRoundWinReasons>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xB4CB5C", Offset = "0xB4CB5C", VA = "0xB4CB5C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xB4CB78", Offset = "0xB4CB78", VA = "0xB4CB78", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xB4CD28", Offset = "0xB4CD28", VA = "0xB4CD28")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xB4CD80", Offset = "0xB4CD80", VA = "0xB4CD80", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0xB4CE1C", Offset = "0xB4CE1C", VA = "0xB4CE1C", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GameEndReason> System.Collections.Generic.IEnumerable<GameEndReason>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0xB4CED0", Offset = "0xB4CED0", VA = "0xB4CED0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PlayerNamesFlakh playerNamesFlakhPrefab;

	[NonSerialized]
	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float waveTime;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool _waveTimeOutSoundPlayed;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public WaveSet _selectedSet;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _waitingForConnection;

	[Token(Token = "0x40001B5")]
	private const int _MATCH_BEST_OF_COUNT = 3;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	private bool _matchIsOver;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int _matchOverallScoreP1;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _matchOverallScoreP2;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int _roundNumber;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _roundTotalPointsP1;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int _roundTotalPointsP2;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameResolution _gameResolution;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _currentShuffleSetIndex;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<WaveSet> _shuffledSets;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<WaveSet> _helperSetArray;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<float> _helperSetWeights;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float timeToPing;

	[Token(Token = "0x17000080")]
	public int scoreP1
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xB44A9C", Offset = "0xB44A9C", VA = "0xB44A9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000081")]
	public int scoreP2
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xB44AAC", Offset = "0xB44AAC", VA = "0xB44AAC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000082")]
	public int myScore
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xB47360", Offset = "0xB47360", VA = "0xB47360")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000083")]
	public int opponentScore
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xB473E0", Offset = "0xB473E0", VA = "0xB473E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000084")]
	public float scoreRatio
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xB42AF0", Offset = "0xB42AF0", VA = "0xB42AF0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000085")]
	public bool isBestOfX
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xB47468", Offset = "0xB47468", VA = "0xB47468")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000086")]
	public int matchBestOfWinsNeeded
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xB47478", Offset = "0xB47478", VA = "0xB47478")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000087")]
	public bool matchIsOver
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xB47480", Offset = "0xB47480", VA = "0xB47480")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000088")]
	public int matchScoreP1
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xB47488", Offset = "0xB47488", VA = "0xB47488")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000089")]
	public int matchScoreP2
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xB47490", Offset = "0xB47490", VA = "0xB47490")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008A")]
	public int myMatchScore
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xB47498", Offset = "0xB47498", VA = "0xB47498")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008B")]
	public int opponentMatchScore
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xB47504", Offset = "0xB47504", VA = "0xB47504")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public static float MaxWaveTime
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xB44FBC", Offset = "0xB44FBC", VA = "0xB44FBC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700008D")]
	public bool WaveTimeIsUp
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xB47578", Offset = "0xB47578", VA = "0xB47578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008E")]
	public bool matchStarted
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xB4759C", Offset = "0xB4759C", VA = "0xB4759C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xB475A4", Offset = "0xB475A4", VA = "0xB475A4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public int roundNumber
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xB475B0", Offset = "0xB475B0", VA = "0xB475B0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000090")]
	public List<RoundResolution> roundResolutions
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xB475B8", Offset = "0xB475B8", VA = "0xB475B8")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000091")]
	public RoundResolution lastRoundResolution
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xB475C0", Offset = "0xB475C0", VA = "0xB475C0")]
		get
		{
			return default(RoundResolution);
		}
	}

	[Token(Token = "0x17000092")]
	public PlayerID lastRoundWinner
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xB47648", Offset = "0xB47648", VA = "0xB47648")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x17000093")]
	public PlayerID matchWinningPlayer
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xB35A3C", Offset = "0xB35A3C", VA = "0xB35A3C")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x17000094")]
	public bool isKnockOut
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xB48074", Offset = "0xB48074", VA = "0xB48074")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000095")]
	public bool isTechnical
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xB48084", Offset = "0xB48084", VA = "0xB48084")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000096")]
	public bool isTechnicalWin
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xB480A8", Offset = "0xB480A8", VA = "0xB480A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000097")]
	public bool isTechnicalDefeat
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xB480D0", Offset = "0xB480D0", VA = "0xB480D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000098")]
	public override bool CanPauseNow
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xB49C3C", Offset = "0xB49C3C", VA = "0xB49C3C", Slot = "33")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000099")]
	public override int GameXp
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xB49C44", Offset = "0xB49C44", VA = "0xB49C44", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xB476B8", Offset = "0xB476B8", VA = "0xB476B8")]
	[IteratorStateMachine(typeof(<iterPlayerRoundWinReasons>d__54))]
	public IEnumerable<GameEndReason> iterPlayerRoundWinReasons(PlayerID player)
	{
		return null;
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xB4773C", Offset = "0xB4773C", VA = "0xB4773C")]
	public GameEndReason getPlayerRoundWinReason(PlayerID player, int numWin)
	{
		return default(GameEndReason);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xB47CF0", Offset = "0xB47CF0", VA = "0xB47CF0")]
	public int totalScoreP1()
	{
		return default(int);
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xB47E48", Offset = "0xB47E48", VA = "0xB47E48")]
	public int totalScoreP2()
	{
		return default(int);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xB47FA0", Offset = "0xB47FA0", VA = "0xB47FA0", Slot = "18")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xB480F8", Offset = "0xB480F8", VA = "0xB480F8")]
	public void RematchSelectedByPlayers()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xB4818C", Offset = "0xB4818C", VA = "0xB4818C")]
	public void ReshuffleSetOrder([Optional] WaveSet lastPlayedSet)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xB4866C", Offset = "0xB4866C", VA = "0xB4866C")]
	private float GetSetWeight(string setId)
	{
		return default(float);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xB48744", Offset = "0xB48744", VA = "0xB48744")]
	public void ChooseMPSet(int setOverride = -1)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xB48120", Offset = "0xB48120", VA = "0xB48120")]
	private void ResetOverallMatch()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xB48CB0", Offset = "0xB48CB0", VA = "0xB48CB0", Slot = "20")]
	public override void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xB48D14", Offset = "0xB48D14", VA = "0xB48D14")]
	private void showPlayerNames()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xB48E50", Offset = "0xB48E50", VA = "0xB48E50")]
	public void SetupMatch(VersusMatchType matchType, VersusMatchStyle matchStyle)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xB48E58", Offset = "0xB48E58", VA = "0xB48E58", Slot = "25")]
	public override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xB48EAC", Offset = "0xB48EAC", VA = "0xB48EAC", Slot = "21")]
	public override void Restart(bool canPostStats = true)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xB4907C", Offset = "0xB4907C", VA = "0xB4907C")]
	public void onLobbyConnection()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xB4913C", Offset = "0xB4913C", VA = "0xB4913C", Slot = "24")]
	public override void SetupPlayerPositions()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xB49214", Offset = "0xB49214", VA = "0xB49214")]
	protected void ForceGameResult(PlayerID winningPlayerID)
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xB4958C", Offset = "0xB4958C", VA = "0xB4958C", Slot = "29")]
	public override void onLocalPlayerQuitMatch(GameEndReason endReason, bool forceBackToMainMenu = false, bool goBackToMainMenu = true)
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xB497E0", Offset = "0xB497E0", VA = "0xB497E0")]
	public void AddScoreMultiplayer(int score, bool isRemoteHit = false)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xB498E8", Offset = "0xB498E8", VA = "0xB498E8", Slot = "12")]
	public override void AddScore(int player1Score)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xB499A0", Offset = "0xB499A0", VA = "0xB499A0", Slot = "26")]
	protected override void postGameResults()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xB49B00", Offset = "0xB49B00", VA = "0xB49B00")]
	private bool didRemoteDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xB49D28", Offset = "0xB49D28", VA = "0xB49D28", Slot = "22")]
	public override void Update()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xB4B128", Offset = "0xB4B128", VA = "0xB4B128")]
	private void BestOfRoundOver()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xB4B948", Offset = "0xB4B948", VA = "0xB4B948", Slot = "27")]
	public override void AbortGame(GameEndReason endReason, bool postResults = true)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xB4BA28", Offset = "0xB4BA28", VA = "0xB4BA28")]
	private void OnWaveEnd()
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xB4BA34", Offset = "0xB4BA34", VA = "0xB4BA34", Slot = "14")]
	public override void NewWaveStarted(int difficulty)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xB4BA40", Offset = "0xB4BA40", VA = "0xB4BA40", Slot = "15")]
	public override void overrideFloorTurnOn(float floorTime, bool resetPulse = false)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xB4BA44", Offset = "0xB4BA44", VA = "0xB4BA44")]
	public MultiPlayerArena_Versus()
	{
	}
}
[Token(Token = "0x2000063")]
public class MultiplayerCoOpDisplay : ArcadeDisplay
{
	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xB4CED4", Offset = "0xB4CED4", VA = "0xB4CED4")]
	public MultiplayerCoOpDisplay()
	{
	}
}
[Token(Token = "0x2000064")]
public class MultiplayerCoOpScoring : SinglePlayerScoring
{
	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xB4CEDC", Offset = "0xB4CEDC", VA = "0xB4CEDC")]
	public MultiplayerCoOpScoring()
	{
	}
}
[Token(Token = "0x2000065")]
public class MultiplayerCoOpTimer : SinglePlayerTimer
{
	[Token(Token = "0x1700009C")]
	public override bool canEndGame
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0xB4CEEC", Offset = "0xB4CEEC", VA = "0xB4CEEC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009D")]
	public override bool canPropagateTimer
	{
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0xB4CEF4", Offset = "0xB4CEF4", VA = "0xB4CEF4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xB4CF90", Offset = "0xB4CF90", VA = "0xB4CF90")]
	public MultiplayerCoOpTimer()
	{
	}
}
[Token(Token = "0x2000066")]
public class MultiplayerDisplay : ArenaDisplay
{
	[Token(Token = "0x2000067")]
	public enum PointType
	{
		[Token(Token = "0x40001E7")]
		None,
		[Token(Token = "0x40001E8")]
		Time,
		[Token(Token = "0x40001E9")]
		Set,
		[Token(Token = "0x40001EA")]
		KO
	}

	[Serializable]
	[Token(Token = "0x2000068")]
	public struct Point
	{
		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject root;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIItemTransitions transitions;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _time;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject _set;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _ko;

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0xB4E010", Offset = "0xB4E010", VA = "0xB4E010")]
		public void init()
		{
		}

		[Token(Token = "0x60002D5")]
		[Address(RVA = "0xB4E12C", Offset = "0xB4E12C", VA = "0xB4E12C")]
		public void set(PointType type)
		{
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0xB4E1B4", Offset = "0xB4E1B4", VA = "0xB4E1B4")]
		public void disable()
		{
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0xB4E214", Offset = "0xB4E214", VA = "0xB4E214")]
		public void stopCelebration()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000069")]
	public struct Player
	{
		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TextMeshPro name;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshPro score;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions wing;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Point point1;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Point point2;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isCelebrating;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int _points;

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0xB4D6EC", Offset = "0xB4D6EC", VA = "0xB4D6EC")]
		public void init()
		{
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0xB4DFC8", Offset = "0xB4DFC8", VA = "0xB4DFC8")]
		public void reset()
		{
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0xB4D4D4", Offset = "0xB4D4D4", VA = "0xB4D4D4")]
		public void increment(PointType type)
		{
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xB4D53C", Offset = "0xB4D53C", VA = "0xB4D53C")]
		public void stopCelebration()
		{
		}
	}

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Players")]
	public Player player1;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Player player2;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Score")]
	public TextMeshPro setName;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public MeshRenderer WaveBars;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform scoreSoundPos;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float smoothTimeSpeed;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[Header("Black mask")]
	public MeshRenderer blackMask;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float blackMaskSmoothTimeSpeed;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private MultiPlayerArena_Versus _arena;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private int _ScoreRatioID;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float _visibleScoreRatio;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float _visibleScoreRatioTarget;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private float _visibleScoreRatioVelocity;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private int _scoreP1;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private int _scoreP2;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private MaterialPropertyBlock _blackMaskPB;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float _blackMaskTarget;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float _blackMashCurrent;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float _blackMashVelocity;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private int _multiplierID;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool _updateTotalWaves;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	public bool showVictoryBanner;

	[Token(Token = "0x1700009E")]
	public bool isBlack
	{
		[Token(Token = "0x60002C8")]
		[Address(RVA = "0xB4CFE0", Offset = "0xB4CFE0", VA = "0xB4CFE0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0xB4CFE8", Offset = "0xB4CFE8", VA = "0xB4CFE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xB4CFF4", Offset = "0xB4CFF4", VA = "0xB4CFF4")]
	private void checkScoreTextUpdate(bool forced = false)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xB4D464", Offset = "0xB4D464", VA = "0xB4D464")]
	public void fadeDisplay(bool shouldBeVisible)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xB4D48C", Offset = "0xB4D48C", VA = "0xB4D48C")]
	public void startCelebration(int round, PlayerID playerID, GameEndReason reason)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xB4D520", Offset = "0xB4D520", VA = "0xB4D520")]
	public void stopCelebration()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xB4D570", Offset = "0xB4D570", VA = "0xB4D570", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xB4D730", Offset = "0xB4D730", VA = "0xB4D730", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xB4DE74", Offset = "0xB4DE74", VA = "0xB4DE74", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xB4DE98", Offset = "0xB4DE98", VA = "0xB4DE98", Slot = "9")]
	public override void RoundReset()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xB4DF34", Offset = "0xB4DF34", VA = "0xB4DF34", Slot = "8")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xB4DFEC", Offset = "0xB4DFEC", VA = "0xB4DFEC")]
	public MultiplayerDisplay()
	{
	}
}
[Token(Token = "0x200006A")]
public class MultiPlayerScoring : ScoreManager
{
	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debugMPScoring;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve scoreCapCurve;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StreamWriter logFile;

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xB4E234", Offset = "0xB4E234", VA = "0xB4E234")]
	private void DebugLog(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, int score, int bossScore)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xB4E80C", Offset = "0xB4E80C", VA = "0xB4E80C", Slot = "5")]
	public override void GetShotTimeAndScore(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, out float timeBonus, out int score, out int bossScore, out int scoreRaw, out int bossScoreRaw)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xB4F210", Offset = "0xB4F210", VA = "0xB4F210", Slot = "4")]
	public override int GetCappedScore(int rawScore)
	{
		return default(int);
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xB4F320", Offset = "0xB4F320", VA = "0xB4F320")]
	public MultiPlayerScoring()
	{
	}
}
[Token(Token = "0x200006B")]
public class PodiumCustomizer : MonoBehaviour
{
	[Token(Token = "0x40001FA")]
	private const float MAX_DISTANCE = 3.6f;

	[Token(Token = "0x40001FB")]
	private const float MIN_DISTANCE = 1.6f;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(1.6f, 3.6f)]
	public float distance;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player1Pos;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform player2Pos;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3[] ballStartRailInLocal;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xB4F370", Offset = "0xB4F370", VA = "0xB4F370")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xB4F374", Offset = "0xB4F374", VA = "0xB4F374")]
	private void updateDistance()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xB4F878", Offset = "0xB4F878", VA = "0xB4F878")]
	public PodiumCustomizer()
	{
	}
}
[Token(Token = "0x200006C")]
public abstract class ScoreManager : MonoBehaviour
{
	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ScoreManager current;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xB4F880", Offset = "0xB4F880", VA = "0xB4F880", Slot = "4")]
	public virtual int GetCappedScore(int rawScore)
	{
		return default(int);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xB4F888", Offset = "0xB4F888", VA = "0xB4F888")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xB4F8E0", Offset = "0xB4F8E0", VA = "0xB4F8E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002E6")]
	public abstract void GetShotTimeAndScore(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, out float timeBonus, out int score, out int bossScore, out int scoreRaw, out int bossScoreRaw);

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xB4F368", Offset = "0xB4F368", VA = "0xB4F368")]
	protected ScoreManager()
	{
	}
}
[Token(Token = "0x200006D")]
public class SinglePlayerArena : EnergyArena
{
	[Token(Token = "0x1700009F")]
	public override int GameXp
	{
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0xB50960", Offset = "0xB50960", VA = "0xB50960", Slot = "9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xB4F934", Offset = "0xB4F934", VA = "0xB4F934", Slot = "25")]
	public override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xB4FBB4", Offset = "0xB4FBB4", VA = "0xB4FBB4", Slot = "20")]
	public override void Select(bool matchStarting)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xB500F4", Offset = "0xB500F4", VA = "0xB500F4")]
	private void InitArcade()
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xB500FC", Offset = "0xB500FC", VA = "0xB500FC")]
	public void selectSoloSet(string setId)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xB50120", Offset = "0xB50120", VA = "0xB50120")]
	public void SelectSoloSet(WaveSet set)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xB4FCF8", Offset = "0xB4FCF8", VA = "0xB4FCF8")]
	private void _selectSoloSet([Optional] WaveSet set)
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xB4FFCC", Offset = "0xB4FFCC", VA = "0xB4FFCC")]
	private void SelectMusicChallengeSet()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xB50124", Offset = "0xB50124", VA = "0xB50124", Slot = "26")]
	protected override void postGameResults()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xB5028C", Offset = "0xB5028C", VA = "0xB5028C")]
	private void postArcadeGameResults()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xB505AC", Offset = "0xB505AC", VA = "0xB505AC")]
	private void postSoloGameResults()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xB50890", Offset = "0xB50890", VA = "0xB50890")]
	private void DownloadLeaderboardData()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xB50B20", Offset = "0xB50B20", VA = "0xB50B20")]
	public SinglePlayerArena()
	{
	}
}
[Token(Token = "0x200006E")]
public abstract class SingleplayerDisplay : ArenaDisplay
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected EnergyArena _arena;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool turnOnAnimation;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float turnOnAnimationParam;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xB50B28", Offset = "0xB50B28", VA = "0xB50B28", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xB50B8C", Offset = "0xB50B8C", VA = "0xB50B8C", Slot = "10")]
	public override void AnimateTurningOn(float param)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xB50BBC", Offset = "0xB50BBC", VA = "0xB50BBC", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xB50EB4", Offset = "0xB50EB4", VA = "0xB50EB4")]
	protected SingleplayerDisplay()
	{
	}
}
[Token(Token = "0x200006F")]
public class SinglePlayerScoring : ScoreManager
{
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xB50EBC", Offset = "0xB50EBC", VA = "0xB50EBC", Slot = "5")]
	public override void GetShotTimeAndScore(ref SyncHexHits.HexHitInfo hitInfo, ShotInfo shot, bool preDealDamage, out float timeBonus, out int scoreRaw, out int bossScoreRaw, out int score, out int bossScore)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xB4CEE4", Offset = "0xB4CEE4", VA = "0xB4CEE4")]
	public SinglePlayerScoring()
	{
	}
}
[Token(Token = "0x2000070")]
public class SinglePlayerTimer : ArenaTimer
{
	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _outOfTime;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _globalTimerMaxValue;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _curTimerRate;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _remainingTime;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _bonusTime;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _bonusTimeVel;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeSinceLastBonusEarn;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _penaltyTime;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _penaltyTimeVel;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _timeSinceLastPenaltyEarn;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float healRedeemTime;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float penaltyRedeemTime;

	[Token(Token = "0x170000A0")]
	public override bool canEndGame
	{
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0xB51608", Offset = "0xB51608", VA = "0xB51608", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A1")]
	public override bool canPropagateTimer
	{
		[Token(Token = "0x60002FC")]
		[Address(RVA = "0xB51610", Offset = "0xB51610", VA = "0xB51610", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A2")]
	public bool isOutOfTime
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0xB51618", Offset = "0xB51618", VA = "0xB51618")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A3")]
	public float pendingBonusTime
	{
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0xB51620", Offset = "0xB51620", VA = "0xB51620")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A4")]
	public float pendingBonusTimeVel
	{
		[Token(Token = "0x60002FF")]
		[Address(RVA = "0xB51628", Offset = "0xB51628", VA = "0xB51628")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A5")]
	public float timeSinceLastBonusEarn
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0xB51630", Offset = "0xB51630", VA = "0xB51630")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A6")]
	public float pendingPenaltyTime
	{
		[Token(Token = "0x6000301")]
		[Address(RVA = "0xB51638", Offset = "0xB51638", VA = "0xB51638")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A7")]
	public float pendingPenaltyTimeVel
	{
		[Token(Token = "0x6000302")]
		[Address(RVA = "0xB51640", Offset = "0xB51640", VA = "0xB51640")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A8")]
	public float timeSinceLastPenaltyEarn
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0xB51648", Offset = "0xB51648", VA = "0xB51648")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000A9")]
	public float currentTimerMax
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xB51650", Offset = "0xB51650", VA = "0xB51650")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AA")]
	public float remainingTime
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xB51658", Offset = "0xB51658", VA = "0xB51658")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AB")]
	public override float remainingTimeDefacto
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0xB51660", Offset = "0xB51660", VA = "0xB51660", Slot = "4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xB5166C", Offset = "0xB5166C", VA = "0xB5166C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xB5168C", Offset = "0xB5168C", VA = "0xB5168C")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xB516AC", Offset = "0xB516AC", VA = "0xB516AC")]
	private void SetGlobalTimerMaxValue()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xB517D8", Offset = "0xB517D8", VA = "0xB517D8")]
	public void DifficultyChanged(int difficulty)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xB519B0", Offset = "0xB519B0", VA = "0xB519B0", Slot = "8")]
	public override void FillUp()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xB519BC", Offset = "0xB519BC", VA = "0xB519BC", Slot = "9")]
	public override void InstantFillUp()
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xB519D8", Offset = "0xB519D8", VA = "0xB519D8", Slot = "10")]
	public override void SyncCoopTimer(SyncGameEvents.CoopTimerEvent coopTimerEvent)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xB51A04", Offset = "0xB51A04", VA = "0xB51A04")]
	public void Update()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xB52080", Offset = "0xB52080", VA = "0xB52080", Slot = "7")]
	public override void AddBonusTime(float fTimeAdded, bool isRemoteHit = false)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xB4CFB8", Offset = "0xB4CFB8", VA = "0xB4CFB8")]
	public SinglePlayerTimer()
	{
	}
}
[Token(Token = "0x2000071")]
public class SoloDisplay : SingleplayerDisplay
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer WaveBars;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro totalTimeMinutes;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro totalTimeSeconds;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro totalTimeMili;

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xB52138", Offset = "0xB52138", VA = "0xB52138", Slot = "5")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xB525D4", Offset = "0xB525D4", VA = "0xB525D4")]
	public SoloDisplay()
	{
	}
}
[Token(Token = "0x2000072")]
public class Announcer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000073")]
	public struct SpeakerLocations
	{
		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform left;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform right;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform mid;
	}

	[Serializable]
	[Token(Token = "0x2000074")]
	public struct StereoPair
	{
		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioManager.SoundEffect l;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioManager.SoundEffect r;
	}

	[Token(Token = "0x2000075")]
	private enum OverlapBehaviour
	{
		[Token(Token = "0x4000295")]
		PlayAnyway,
		[Token(Token = "0x4000296")]
		WaitAndThenPlay,
		[Token(Token = "0x4000297")]
		AbortIfOverlapping
	}

	[Token(Token = "0x2000077")]
	[CompilerGenerated]
	private sealed class <PlayAfterCurrentStereoCo>d__153 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Announcer <>4__this;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StereoPair sfxPair;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public (Transform l, Transform r) locs;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<(SpatializedAudio l, SpatializedAudio r)> onDone;

		[Token(Token = "0x170000AD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000352")]
			[Address(RVA = "0xB55EFC", Offset = "0xB55EFC", VA = "0xB55EFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000354")]
			[Address(RVA = "0xB55F44", Offset = "0xB55F44", VA = "0xB55F44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0xB54488", Offset = "0xB54488", VA = "0xB54488")]
		[DebuggerHidden]
		public <PlayAfterCurrentStereoCo>d__153(int <>1__state)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0xB55E50", Offset = "0xB55E50", VA = "0xB55E50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0xB55E54", Offset = "0xB55E54", VA = "0xB55E54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0xB55F04", Offset = "0xB55F04", VA = "0xB55F04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000078")]
	[CompilerGenerated]
	private sealed class <PlayAfterCurrentCo>d__154 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Announcer <>4__this;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioManager.SoundEffect sfx;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform location;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<SpatializedAudio> onDone;

		[Token(Token = "0x170000AF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000358")]
			[Address(RVA = "0xB5603C", Offset = "0xB5603C", VA = "0xB5603C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600035A")]
			[Address(RVA = "0xB56084", Offset = "0xB56084", VA = "0xB56084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0xB544B0", Offset = "0xB544B0", VA = "0xB544B0")]
		[DebuggerHidden]
		public <PlayAfterCurrentCo>d__154(int <>1__state)
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0xB55FA0", Offset = "0xB55FA0", VA = "0xB55FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0xB55FA4", Offset = "0xB55FA4", VA = "0xB55FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0xB56044", Offset = "0xB56044", VA = "0xB56044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000079")]
	[CompilerGenerated]
	private sealed class <WelcomeToRacketNxCo>d__158 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Announcer <>4__this;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float extraDelay;

		[Token(Token = "0x170000B1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600035E")]
			[Address(RVA = "0xB561B8", Offset = "0xB561B8", VA = "0xB561B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000360")]
			[Address(RVA = "0xB56200", Offset = "0xB56200", VA = "0xB56200", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0xB54614", Offset = "0xB54614", VA = "0xB54614")]
		[DebuggerHidden]
		public <WelcomeToRacketNxCo>d__158(int <>1__state)
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0xB560E0", Offset = "0xB560E0", VA = "0xB560E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0xB560E4", Offset = "0xB560E4", VA = "0xB560E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0xB561C0", Offset = "0xB561C0", VA = "0xB561C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007A")]
	[CompilerGenerated]
	private sealed class <LetsGoCo>d__160 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Announcer <>4__this;

		[Token(Token = "0x170000B3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000364")]
			[Address(RVA = "0xB563A8", Offset = "0xB563A8", VA = "0xB563A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000366")]
			[Address(RVA = "0xB563F0", Offset = "0xB563F0", VA = "0xB563F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0xB54734", Offset = "0xB54734", VA = "0xB54734")]
		[DebuggerHidden]
		public <LetsGoCo>d__160(int <>1__state)
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0xB5625C", Offset = "0xB5625C", VA = "0xB5625C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0xB56260", Offset = "0xB56260", VA = "0xB56260", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0xB563B0", Offset = "0xB563B0", VA = "0xB563B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Announcer inst;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] _announcerSpeakerLocations;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeakerLocations _speakerLocations;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Shot Encouragement 1")]
	public int _encourage1MinPoints;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _encourage1Chance;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioManager.SoundEffect _encouragementLevel1;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Shot Encouragement 2")]
	public int _encourage2MinPoints;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _encourage2Chance;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioManager.SoundEffect _encouragementLevel2;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Shot Encouragement 3")]
	public int _encourage3MinPoints;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _encourage3Chance;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioManager.SoundEffect _encouragementLevel3;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Shot Encouragement 4")]
	public int _encourage4MinPoints;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _encourage4Chance;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioManager.SoundEffect _encouragementLevel4;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Shot Encouragement 5")]
	public int _encourage5MinPoints;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _encourage5Chance;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioManager.SoundEffect _encouragementLevel5;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Precision Encouragement")]
	public int _preciseMaxTargetSize;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _preciseChance;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioManager.SoundEffect _preciseEncouragement;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Speed up!")]
	public AudioManager.SoundEffect _faster;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioManager.SoundEffect _speedIncrease;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioManager.SoundEffect _speedUp;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioManager.SoundEffect _speedingUp;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioManager.SoundEffect _gettingFaster_110;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioManager.SoundEffect _itsGettingFaster_110;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioManager.SoundEffect _moreSpeed_120;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioManager.SoundEffect _moreSpeed_130_ON;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioManager.SoundEffect _superFast_150;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public AudioManager.SoundEffect _speeeeeed_180_ON;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioManager.SoundEffect _ludicrousSpeed_190_ON;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioManager.SoundEffect _tooFast_200_ON;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<AudioManager.SoundEffect> speedUpEffects;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private AudioManager.SoundEffect _lastPlayerSpeedupEffect;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Tutorial")]
	public AudioManager.SoundEffect _tutorialWelcome;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioManager.SoundEffect _tutorialHitBall;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioManager.SoundEffect _tutorialGravitySling;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioManager.SoundEffect _tutorialPowerShot;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioManager.SoundEffect _tutorialTargets;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioManager.SoundEffect _tutorialEnergyBar;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioManager.SoundEffect _tutorialLetsFinishThis;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioManager.SoundEffect _tutorialTryAgain;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Stage Complete")]
	public AudioManager.SoundEffect _stageCompleteBasics;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioManager.SoundEffect _stageCompleteAdvanced;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioManager.SoundEffect _stageCompleteHardcore;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public AudioManager.SoundEffect _stageCompleteALL;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Powerups")]
	public AudioManager.SoundEffect _powerupSplashDamage;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioManager.SoundEffect _powerupBlasterMaze;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public AudioManager.SoundEffect _powerupPoints;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioManager.SoundEffect _powerupGodMode;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioManager.SoundEffect _powerupSuperFlow;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AudioManager.SoundEffect _powerupHyperspace;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public AudioManager.SoundEffect _powerupNuke;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public AudioManager.SoundEffect _powerupWreckingBall;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public AudioManager.SoundEffect _powerupIceBreaker;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public AudioManager.SoundEffect _powerupSupersize;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[Header("General")]
	public AudioManager.SoundEffect _powerupAcquire;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AudioManager.SoundEffect _soloSetComplete;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public AudioManager.SoundEffect _outOfTime;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public AudioManager.SoundEffect _gameOver;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public AudioManager.SoundEffect _personalBest;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public AudioManager.SoundEffect _teamBest;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public AudioManager.SoundEffect _niceBalls;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	[Header("Clutch Save")]
	public AudioManager.SoundEffect _clutchSave;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	[Header("Lets go")]
	public float letsGoDelay;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public AudioManager.SoundEffect _letsGo;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float welcomeToRacketNxDelay;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public AudioManager.SoundEffect _welcomeToRacketNx;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public AudioManager.SoundEffect _newLevel;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	[Header("Multiplayer")]
	public AudioManager.SoundEffect _multiplayerVictory;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public AudioManager.SoundEffect _multiplayerDefeat;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public AudioManager.SoundEffect _multiplayerOpponentFound;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public AudioManager.SoundEffect _multiplayerOpponentLeft;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public AudioManager.SoundEffect _multiplayerTeammateFound;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public AudioManager.SoundEffect _multiplayerTeammateLeft;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public AudioManager.SoundEffect _multiplayerTeammatePaused;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public AudioManager.SoundEffect _multiplayerFriendJoined;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AudioManager.SoundEffect _multiplayerFriendLeft;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public AudioManager.SoundEffect _multiplayerRound1Complete;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public AudioManager.SoundEffect _multiplayerRound2Complete;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public AudioManager.SoundEffect _multiplayerRound3Complete;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public AudioManager.SoundEffect _multiplayerRound4Complete;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public AudioManager.SoundEffect _multiplayerScore;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public AudioManager.SoundEffect _multiplayerFinalScore;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public AudioManager.SoundEffect _multiplayer1to0;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public AudioManager.SoundEffect _multiplayer0to1;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public AudioManager.SoundEffect _multiplayer1to1;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public AudioManager.SoundEffect _multiplayer2to1;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public AudioManager.SoundEffect _multiplayer1to2;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public AudioManager.SoundEffect _multiplayer2to0;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public AudioManager.SoundEffect _multiplayer0to2;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public AudioManager.SoundEffect _multiplayerKO;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public AudioManager.SoundEffect _multiplayerTimeIsUp;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public AudioManager.SoundEffect _multiplayerSetFinished;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[Header("Coop")]
	public AudioManager.SoundEffect _goodTeamplayCoop;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public AudioManager.SoundEffect _onFireCoop;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[Header("Waves Left")]
	public AudioManager.SoundEffect _wavesLeft_1;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public AudioManager.SoundEffect _wavesLeft_3;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public AudioManager.SoundEffect _wavesLeft_5;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public AudioManager.SoundEffect _wavesLeft_7;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[Header("Streaks")]
	public AudioManager.SoundEffect _streak_3;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public AudioManager.SoundEffect _streak_5;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public AudioManager.SoundEffect _streak_7;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public AudioManager.SoundEffect _streak_10;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public AudioManager.SoundEffect _streak_15;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public AudioManager.SoundEffect _streak_20;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public AudioManager.SoundEffect _streak_25;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public AudioManager.SoundEffect _streak_30;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioManager.SoundEffect _streak_40;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private int lastStreakEffect;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private AudioManager.SoundEffect[] _streaks;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	[Header("Achievements & items")]
	public AudioManager.SoundEffect _item_unlocked;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public StereoPair _achievement_unlocked;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	private List<AudioManager.SoundEffect> _soundEffects;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	private UnityEngine.Random.State _announcerRandomState;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	private UnityEngine.Random.State _generalRandomState;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	private bool _inAnnouncerRNG;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B1")]
	private bool _speaking;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	private Action _onLetsGoDone;

	[NonSerialized]
	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public int rngBaseSeed;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	private ShotInfo lastShotUsedInOnFire;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	private float lastCoopEffectPlayedTime;

	[Token(Token = "0x170000AC")]
	private AnnouncerSettings config
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0xB525DC", Offset = "0xB525DC", VA = "0xB525DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xB5262C", Offset = "0xB5262C", VA = "0xB5262C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xB52A70", Offset = "0xB52A70", VA = "0xB52A70")]
	private void OnWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xB52AB0", Offset = "0xB52AB0", VA = "0xB52AB0")]
	public void RNGInit(int seed)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xB52B0C", Offset = "0xB52B0C", VA = "0xB52B0C")]
	private void RNGStart()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xB52BBC", Offset = "0xB52BBC", VA = "0xB52BBC")]
	private void RNGStop()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xB52C68", Offset = "0xB52C68", VA = "0xB52C68")]
	private void FindSoundEffects()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xB531B8", Offset = "0xB531B8", VA = "0xB531B8")]
	public void FirstShotContact(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xB53484", Offset = "0xB53484", VA = "0xB53484")]
	public void PlayTutorial(AudioManager.SoundEffect sfx, Transform location)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xB534A0", Offset = "0xB534A0", VA = "0xB534A0")]
	public void Encourage(ShotInfo shot)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xB53B08", Offset = "0xB53B08", VA = "0xB53B08")]
	public void TestTeamworkOnShieldedTarget(Target t)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xB53D70", Offset = "0xB53D70", VA = "0xB53D70")]
	public void TestTeamworkOnIceBreaker(ShotInfo shot, float iceBreakerHittingPlayerPercent)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xB53CB8", Offset = "0xB53CB8", VA = "0xB53CB8")]
	private void EncourageTeamwork(float chance)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xB535C0", Offset = "0xB535C0", VA = "0xB535C0")]
	private void TestCoopOnFire(ShotInfo finalizedShot)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xB53E74", Offset = "0xB53E74", VA = "0xB53E74")]
	[NaughtyAttributes.Button("Play AchievementUnlocked", EButtonEnableMode.Playmode)]
	public void AchievementUnlocked([Optional] Action onDone)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xB54274", Offset = "0xB54274", VA = "0xB54274")]
	public void ItemUnlocked()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xB54294", Offset = "0xB54294", VA = "0xB54294")]
	public void NewLevel()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xB542B4", Offset = "0xB542B4", VA = "0xB542B4")]
	public void FriendLeftTheMatch()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xB542D4", Offset = "0xB542D4", VA = "0xB542D4")]
	public void FriendJoinedTheMatch()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xB542F4", Offset = "0xB542F4", VA = "0xB542F4")]
	public void OpponentLeftTheMatch()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xB54314", Offset = "0xB54314", VA = "0xB54314")]
	public void OpponentFound()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xB54334", Offset = "0xB54334", VA = "0xB54334")]
	public void TeammateLeftTheMatch()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xB54354", Offset = "0xB54354", VA = "0xB54354")]
	public void TeammateFound()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xB54374", Offset = "0xB54374", VA = "0xB54374")]
	public void TeammatePaused()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xB54394", Offset = "0xB54394", VA = "0xB54394")]
	public void StageComplete(int stageIndex, float delay = -1f)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xB543F4", Offset = "0xB543F4", VA = "0xB543F4")]
	public void PowerupAcquired(PowerupType pu)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xB540BC", Offset = "0xB540BC", VA = "0xB540BC")]
	[IteratorStateMachine(typeof(<PlayAfterCurrentStereoCo>d__153))]
	private IEnumerator<float> PlayAfterCurrentStereoCo(StereoPair sfxPair, (Transform l, Transform r) locs, float delay = 0f, [Optional] Action<(SpatializedAudio l, SpatializedAudio r)> onDone)
	{
		return null;
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xB541A4", Offset = "0xB541A4", VA = "0xB541A4")]
	[IteratorStateMachine(typeof(<PlayAfterCurrentCo>d__154))]
	private IEnumerator<float> PlayAfterCurrentCo(AudioManager.SoundEffect sfx, float delay, [Optional] Transform location, [Optional] Action<SpatializedAudio> onDone)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xB544D8", Offset = "0xB544D8", VA = "0xB544D8")]
	public void MultiplayerVictory()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xB544F8", Offset = "0xB544F8", VA = "0xB544F8")]
	public void MultiplayerDefeat()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xB54518", Offset = "0xB54518", VA = "0xB54518")]
	public void WelcomeToRacketNx(float extraDelay = 0f)
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xB54590", Offset = "0xB54590", VA = "0xB54590")]
	[IteratorStateMachine(typeof(<WelcomeToRacketNxCo>d__158))]
	private IEnumerator<float> WelcomeToRacketNxCo(float extraDelay)
	{
		return null;
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xB5463C", Offset = "0xB5463C", VA = "0xB5463C")]
	public void LetsGo([Optional] Action onDone)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xB546C0", Offset = "0xB546C0", VA = "0xB546C0")]
	[IteratorStateMachine(typeof(<LetsGoCo>d__160))]
	private IEnumerator<float> LetsGoCo()
	{
		return null;
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xB5475C", Offset = "0xB5475C", VA = "0xB5475C")]
	public void Streaks(int count)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xB5484C", Offset = "0xB5484C", VA = "0xB5484C")]
	public void WavesLeft(int wavesLeft)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xB5330C", Offset = "0xB5330C", VA = "0xB5330C")]
	private SpatializedAudio PlayEffect(AudioManager.SoundEffect sfx, OverlapBehaviour overlapBehaviour = OverlapBehaviour.AbortIfOverlapping, float delay = 0f, [Optional] Transform location, bool tutorial = false, bool ignoreZen = true, [Optional] Action<SpatializedAudio> onDone)
	{
		return null;
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xB54B04", Offset = "0xB54B04", VA = "0xB54B04")]
	public void PlaySfxThroughAnnouncerSpeakersMono(AudioManager.SoundEffect sfx, float volume = -1f)
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xB54C80", Offset = "0xB54C80", VA = "0xB54C80")]
	public void PlaySfxThroughAnnouncerSpeakersStereo(AudioManager.SoundEffect leftSfx, AudioManager.SoundEffect rightSfx, float volume = -1f)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xB54D2C", Offset = "0xB54D2C", VA = "0xB54D2C")]
	public void PlaySfxThroughAnnouncerSpeakers(AudioManager.SoundEffect leftSfx, AudioManager.SoundEffect rightSfx, float volume = -1f)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xB54E44", Offset = "0xB54E44", VA = "0xB54E44")]
	private (SpatializedAudio, SpatializedAudio) internalPlayEffectNowOneOfStereo(StereoPair sfxPair, (Transform l, Transform r) locs, float delay)
	{
		return default((SpatializedAudio, SpatializedAudio));
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xB548B0", Offset = "0xB548B0", VA = "0xB548B0")]
	private SpatializedAudio internalPlayEffectNow(AudioManager.SoundEffect sfx, float delay, Transform location)
	{
		return null;
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB551B8", Offset = "0xB551B8", VA = "0xB551B8")]
	private void onDonePlayback()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xB551C0", Offset = "0xB551C0", VA = "0xB551C0")]
	public void AcquirePowerup(float delay = 0f)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xB551DC", Offset = "0xB551DC", VA = "0xB551DC")]
	public void OutOfTime()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xB551FC", Offset = "0xB551FC", VA = "0xB551FC")]
	public void SoloSetComplete()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xB5521C", Offset = "0xB5521C", VA = "0xB5521C")]
	public void GameOver()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xB5523C", Offset = "0xB5523C", VA = "0xB5523C")]
	public void PersonalBest()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xB5525C", Offset = "0xB5525C", VA = "0xB5525C")]
	public void TeamBest()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xB5527C", Offset = "0xB5527C", VA = "0xB5527C")]
	public void OnClutchSave(float timeInRisk)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xB5534C", Offset = "0xB5534C", VA = "0xB5534C")]
	public void Faster(float speed)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xB55AB0", Offset = "0xB55AB0", VA = "0xB55AB0")]
	public void gameEndReason(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xB55B08", Offset = "0xB55B08", VA = "0xB55B08")]
	public void roundXCompleted(int round)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xB55B5C", Offset = "0xB55B5C", VA = "0xB55B5C")]
	public void BO3Score(int p1Score, int p2Score, bool final = false)
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xB55D48", Offset = "0xB55D48", VA = "0xB55D48")]
	public List<AudioManager.SoundEffect> GetSoundEffects()
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xB55D60", Offset = "0xB55D60", VA = "0xB55D60")]
	private void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xB55D64", Offset = "0xB55D64", VA = "0xB55D64")]
	public Announcer()
	{
	}
}
[Token(Token = "0x200007B")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x200007C")]
	public enum EffectGroup
	{
		[Token(Token = "0x4000352")]
		Ball = 0,
		[Token(Token = "0x4000353")]
		Racket = 1,
		[Token(Token = "0x4000354")]
		Impact = 2,
		[Token(Token = "0x4000355")]
		Targets = 3,
		[Token(Token = "0x4000356")]
		RoomBuild = 4,
		[Token(Token = "0x4000357")]
		UI = 5,
		[Token(Token = "0x4000358")]
		Stereo2D = 98,
		[Token(Token = "0x4000359")]
		General = 99,
		[Token(Token = "0x400035A")]
		Announcer = 100,
		[Token(Token = "0x400035B")]
		Voice = 200,
		[Token(Token = "0x400035C")]
		Music = 300
	}

	[Serializable]
	[Token(Token = "0x200007D")]
	public class SoundEffectGroup : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectGroup group;

		[Token(Token = "0x400035F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[Tooltip("This controls the volume of the AudioSource component")]
		public float volume;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("This controls the gain of the NxSource component")]
		[Range(-80f, 20f)]
		public float gainDb;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-80f, 20f)]
		public float additionalOculusGainDb;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NxGroup NxGroup;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("If there is an advanced haptic feature available. any sound effect of this group will be send to the haptic source")]
		public bool sendToHaptics;

		[Token(Token = "0x6000381")]
		[Address(RVA = "0xB58584", Offset = "0xB58584", VA = "0xB58584", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0xB585FC", Offset = "0xB585FC", VA = "0xB585FC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0xB58674", Offset = "0xB58674", VA = "0xB58674")]
		public SoundEffectGroup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200007E")]
	public class SoundEffect
	{
		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("If there is an advanced haptic feature available. send this sound effect to the haptic source.")]
		public bool sendToHaptics;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float hapticAmp;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EffectGroup group;

		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float baseVolume;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-3f, 3f)]
		public float basePitch;

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-80f, 20f)]
		public float NxGainDb;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(-80f, 20f)]
		public float OculusAdditionalGainDb;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioSource rolloffCurvesReference;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool timeEffectsPitch;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float minTimeBetweenPlays;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(-1f, 1f)]
		public float panStereo;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip[] clips;

		[NonSerialized]
		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundEffectGroup effectGroup;

		[NonSerialized]
		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float _lastPlayTime;

		[NonSerialized]
		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float _curVolume;

		[NonSerialized]
		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float _curPitch;

		[NonSerialized]
		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float _curDelay;

		[NonSerialized]
		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int _curVariation;

		[NonSerialized]
		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 _curPosition;

		[NonSerialized]
		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform _curAttachedTo;

		[Token(Token = "0x6000384")]
		[Address(RVA = "0xB58684", Offset = "0xB58684", VA = "0xB58684")]
		public SoundEffect()
		{
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0xB586AC", Offset = "0xB586AC", VA = "0xB586AC")]
		public SoundEffect(bool affectedByTime)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0xB586F4", Offset = "0xB586F4", VA = "0xB586F4")]
		private bool HapticInGroup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0xB5507C", Offset = "0xB5507C", VA = "0xB5507C")]
		public void ChooseRandomVariant()
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0xB5302C", Offset = "0xB5302C", VA = "0xB5302C")]
		public void Init()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200007F")]
	public class RoomBuild
	{
		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundEffect buildFloor;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEffect hexLoop;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEffect ceilingClose;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundEffect roomLightsTurnOn;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundEffect floorTimerRecede;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundEffect floorTimerRecede_Restart;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SoundEffect guttersFadeIn;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public SoundEffect spaceOn_Restart;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundEffect hexBlackToTransparent;

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xB587F4", Offset = "0xB587F4", VA = "0xB587F4")]
		public RoomBuild()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000080")]
	public class HatSound
	{
		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[ItemId(ItemsDefs.ItemShelf.Headware)]
		public string itemId;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundEffect mono;

		[Token(Token = "0x4000383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundEffect l;

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SoundEffect r;

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xB587FC", Offset = "0xB587FC", VA = "0xB587FC")]
		public HatSound()
		{
		}
	}

	[Token(Token = "0x2000081")]
	private class AudioPool
	{
		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Stack<SpatializedAudio> _free;

		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<SpatializedAudio> _used;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SpatializedAudio _prefab;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _freeRoot;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _usedRoot;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _reservedSize;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _index;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _prefix;

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xB58804", Offset = "0xB58804", VA = "0xB58804")]
		private SpatializedAudio create()
		{
			return null;
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xB578B0", Offset = "0xB578B0", VA = "0xB578B0")]
		public AudioPool(string prefix, int maxSize, int reservedSize, SpatializedAudio prefab)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xB583B4", Offset = "0xB583B4", VA = "0xB583B4")]
		public SpatializedAudio allocate(bool forced)
		{
			return null;
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xB58A44", Offset = "0xB58A44", VA = "0xB58A44")]
		private void deallocate(SpatializedAudio SA, int i)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xB57EDC", Offset = "0xB57EDC", VA = "0xB57EDC")]
		public void update()
		{
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xB57D10", Offset = "0xB57D10", VA = "0xB57D10")]
		public void MuteLoopingSounds(bool state)
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xB5898C", Offset = "0xB5898C", VA = "0xB5898C")]
		public bool cleanup()
		{
			return default(bool);
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xB56A4C", Offset = "0xB56A4C", VA = "0xB56A4C")]
		public void Pico_UpdateAudioSourceVolumeByVolumeControl(VolumeControl.Group volumeGroup)
		{
		}
	}

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioManager inst;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixer _mainMixer;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NxGroup _2DNxGroup;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioMixerGroup _2DMixerGroup;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Global Gain (Nx)")]
	public float normalGainNx;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float headphoneGainNx;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Global Gain (Oculus)")]
	public float normalGainOculus;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float headphoneGainOculus;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Rolloff Curves")]
	public AudioSource _defaultRolloffCurve;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource _defaultMusicRolloff;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _rolloffCurvesRoot;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Nx Audio Pool")]
	public int _maxAudioObjects;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int _reserveAudioObjects;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject _coreAudioPrefab;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("2D Audio Pool")]
	public int _maxAudioObjects2D;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int _reserveAudioObjects2D;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SpatializedAudio _coreAudioPrefab2D;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _forceCreateAudioObjects;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("General")]
	public AudioClip _silenceClip;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Announcer _announcer;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Space]
	public float globalMinTimeBetweenPlays;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private SpatializedAudio _pool3DSpatializedAudio;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Effect Groups")]
	public SoundEffectGroup[] effectGroups;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Ball Loop")]
	public SoundEffect _ballLoop;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Swoosh")]
	public SoundEffect _swooshStart;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SoundEffect _swooshLoop;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Player")]
	public SoundEffect _playerFoundNotification;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Multiplayer")]
	public SoundEffect _ballTakeControl;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SoundEffect _ballGiveControl;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SoundEffect _opponentAppear;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SoundEffect _roundComplete;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SoundEffect _timerBeep1;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SoundEffect _timerBeep2;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SoundEffect _timerBuzz;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SoundEffect _waveTimeout;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Ball Impacts")]
	public SoundEffect _racketBallImpactSounds;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public SoundEffect _genericBallImpactSounds;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Gutters / Rails")]
	public SoundEffect _lanesCharged;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SoundEffect _lanesSuperCharged;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SoundEffect _gutterTravel;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SoundEffect _gutterExit;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Racket pull-trigger")]
	public SoundEffect _racketPullTriggerStart;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public SoundEffect _racketPullTriggerLoop;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public SoundEffect _racketPullTriggerTear;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public SoundEffect _racketBreak;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public SoundEffect _racketRebuild;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SoundEffect _racketHi5;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Targets")]
	public SoundEffect _smallTargetHit;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public SoundEffect _redHexHit;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public SoundEffect _targetHit;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public SoundEffect _targetDestroyed;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SoundEffect _allTargetsHit;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public SoundEffect _targetActivated;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public SoundEffect _bossMove;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public SoundEffect _keepAlive;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public SoundEffect _healBeep;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SoundEffect _healRegenerate;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public SoundEffect _jumperPre;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public SoundEffect _jumperPost;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public SoundEffect _sliderNitro;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public SoundEffect _sliderNitro_Recharge_L;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SoundEffect _sliderNitro_Recharge_R;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SoundEffect _shieldBroken;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public SoundEffect _shieldRebuilt;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public SoundEffect _iceBroken;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public SoundEffect _iceRebuilt;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[Header("Powerups")]
	public SoundEffect _PUAppear;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public SoundEffect _PUAcquire;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public SoundEffect _PUKeepAlive;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public SoundEffect _PURacketHit;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public SoundEffect _PUWreckingBallBrickHit;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public SoundEffect _PUAboutToEnd;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[Header("Floaters")]
	public SoundEffect _floaterAppear;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public SoundEffect _floaterKeepAlive;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public SoundEffect _floaterHit;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public SoundEffect _floaterBreak;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public SoundEffect _floaterAboutToEnd;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public SoundEffect _floaterTimeOut;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[Header("SplashDamage PU")]
	public SoundEffect _PelletCollision;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[Header("Portals")]
	public SoundEffect _portalEntry;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public SoundEffect _portalExit;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[Header("Ripple")]
	public SoundEffect _rippleBallLoop;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public SoundEffect _rippleHit;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public SoundEffect _rippleMiss;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[Header("Hextrude")]
	public SoundEffect _hextrudeBumperHit;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public SoundEffect _hextrudeStopperHit;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[Header("PowerShot")]
	public SoundEffect _powerShotLoop;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public SoundEffect _powerShotHit;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public SoundEffect _powerShotMiss;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[Header("Multiplayer Scorebar")]
	public SoundEffect _MPScorebar_rise;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public SoundEffect _MPScorebar_drop;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public SoundEffect _MPScorebar_tick;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[Header("Game")]
	public SoundEffect _timerPulse;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public SoundEffect _gameOver;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public SoundEffect _gameOverWinRiser;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public SoundEffect _gameOverWinHit;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public SoundEffect _faster;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public RoomBuild roomAssembly;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public SoundEffect hexLoopTest;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[Header("UI")]
	public SoundEffect _hover;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public SoundEffect _select;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public SoundEffect _selectOK;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public SoundEffect _playAgain;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public SoundEffect _selectDisabled;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public SoundEffect _back;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public SoundEffect _knobSmoothTick;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public SoundEffect _knobClick;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public SoundEffect _toggleSwitchClick;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public SoundEffect _stageCelebration_L;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public SoundEffect _stageCelebration_R;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public SoundEffect _snapTurn;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	[Header("Space drones (Main Menu)")]
	public SoundEffect _spaceDroneBass1GroundFront;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public SoundEffect _spaceDroneDrums1Front;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public SoundEffect _spaceDroneGlitchyLoop1AroundClose;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public SoundEffect _spaceDroneHiNoiseLoop1Around;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public SoundEffect _spaceDronePad1TopStatic;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public SoundEffect _spaceDronePad2BottomSmallCircleSlow;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public SoundEffect _spaceDronePad3BackHalfCircle;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public SoundEffect _spaceDroneSpaceyPad1TopFarCircling;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public SoundEffect _spaceDroneStatic1CirclingInOut;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	[Header("Space drones (Game Over)")]
	public SoundEffect _spaceDroneAbove;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public SoundEffect _spaceDroneBelow;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public SoundEffect _spaceDroneFront;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public SoundEffect _spaceDroneBack;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public SoundEffect _spaceDroneAround;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public SoundEffect _spaceDroneFloatingInOut;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	[Header("Level Editor")]
	public SoundEffect _levelEditorUISelect;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	public SoundEffect _levelEditorUIDelete;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	public SoundEffect _levelEditorUINew;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
	public SoundEffect _levelEditorUIPublishSuccess;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	public SoundEffect _levelEditorUIPublishFail;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
	public SoundEffect _levelEditorUIOffsetSound;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	public SoundEffect _levelEditorUIIntrude;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
	public SoundEffect _levelEditorUIExtrude;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	public SoundEffect _levelEditorBrickHighlight;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
	public SoundEffect _levelEditorBrickSelect;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	public SoundEffect _levelEditorBrickUnselect;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
	public SoundEffect _levelEditorBrickInvalidSelect;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
	public SoundEffect _levelEditorAddPU;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
	public SoundEffect _levelEditorBreakPU;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
	public SoundEffect _levelEditorHPUp;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
	public SoundEffect _levelEditorHPDown;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
	public SoundEffect _levelEditorShieldOn;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
	public SoundEffect _levelEditorShieldOff;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
	[Header("Level Editor Brushes")]
	public SoundEffect _levelEditorEraser;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
	public SoundEffect _levelEditorBooster;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
	public SoundEffect _levelEditorDowner;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
	public SoundEffect _levelEditorSlider;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
	public SoundEffect _levelEditorPortal;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
	public SoundEffect _levelEditorStaticTarget;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
	public SoundEffect _levelEditorHealingTarget;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
	public SoundEffect _levelEditorSnake;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
	public SoundEffect _levelEditorBumper;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
	public SoundEffect _levelEditorStopper;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
	public SoundEffect _levelEditorBlaster;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
	public SoundEffect _levelEditorIntrude;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
	[Header("Achievements & items")]
	public SoundEffect _equipItem;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
	public SoundEffect _dequipItem;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
	public SoundEffect _achievementUnlocked;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
	public HatSound[] hats;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
	private List<SoundEffect> _soundEffects;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
	private AudioPool _pool3D;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
	private AudioPool _pool2D;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xB5644C", Offset = "0xB5644C", VA = "0xB5644C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB56508", Offset = "0xB56508", VA = "0xB56508")]
	private void GetPoolsPrefabs()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB5656C", Offset = "0xB5656C", VA = "0xB5656C")]
	public SoundEffectGroup GetEffectGroup(EffectGroup group)
	{
		return null;
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xB56630", Offset = "0xB56630", VA = "0xB56630")]
	public void SetEffectGroupVolume(string name, float volume)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xB56768", Offset = "0xB56768", VA = "0xB56768")]
	public void GetEffectGroupVolume(string name, out float volume)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xB5689C", Offset = "0xB5689C", VA = "0xB5689C")]
	public static HatSound GetHatSound(string itemID)
	{
		return null;
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xB569A8", Offset = "0xB569A8", VA = "0xB569A8")]
	public void Pico_UpdateAudioSourcePoolsVolumeByVolumeControl(VolumeControl.Group group)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xB56E20", Offset = "0xB56E20", VA = "0xB56E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xB56E80", Offset = "0xB56E80", VA = "0xB56E80")]
	public void SetMusicHighPassCutoff(float fAmount)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xB56F04", Offset = "0xB56F04", VA = "0xB56F04")]
	public float GetMusicHighPassCutoff()
	{
		return default(float);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xB56F90", Offset = "0xB56F90", VA = "0xB56F90")]
	public void SetMusicLowPassCutoff(float fAmount)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xB57018", Offset = "0xB57018", VA = "0xB57018")]
	public float GetMusicLowPassCutoff()
	{
		return default(float);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xB570A8", Offset = "0xB570A8", VA = "0xB570A8")]
	private void CollectSoundEffectsByReflection(object obj, List<SoundEffect> list)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xB57578", Offset = "0xB57578", VA = "0xB57578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xB57C14", Offset = "0xB57C14", VA = "0xB57C14")]
	private void headphonesConnectionChange(bool connected)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xB57CD4", Offset = "0xB57CD4", VA = "0xB57CD4")]
	public void MuteLoopingSounds(bool state)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xB57EB4", Offset = "0xB57EB4", VA = "0xB57EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xB57F8C", Offset = "0xB57F8C", VA = "0xB57F8C")]
	public void ForcePlayback(bool bForce)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xB55A14", Offset = "0xB55A14", VA = "0xB55A14")]
	public SpatializedAudio PlayEffect2D(SoundEffect effect, float Volume = -1f, float Pitch = -1f, float Delay = 0f, [Optional] Transform _locationWithoutSpatialization)
	{
		return null;
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xB4D3A0", Offset = "0xB4D3A0", VA = "0xB4D3A0")]
	public SpatializedAudio PlayEffect(Vector3 atPosition, SoundEffect effect, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xB582E8", Offset = "0xB582E8", VA = "0xB582E8")]
	public SpatializedAudio PlayEffectVariant(Vector3 atPosition, SoundEffect effect, int sfxVariant, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xB550D4", Offset = "0xB550D4", VA = "0xB550D4")]
	public SpatializedAudio PlayEffectVariant(Transform attachedToTransform, SoundEffect effect, int sfxVariant, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xB54BA4", Offset = "0xB54BA4", VA = "0xB54BA4")]
	public SpatializedAudio PlayEffect(Transform attachedToTransform, SoundEffect effect, float Volume = -1f, float Pitch = -1f, float Delay = 0f)
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xB58178", Offset = "0xB58178", VA = "0xB58178")]
	public SpatializedAudio internalPlay(SoundEffect effect)
	{
		return null;
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xB57F98", Offset = "0xB57F98", VA = "0xB57F98")]
	public SpatializedAudio internalPlay2D(SoundEffect effect)
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xB58554", Offset = "0xB58554", VA = "0xB58554")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000083")]
public class AudioRotator : MonoBehaviour
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _speed;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _curAngle;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xB58C30", Offset = "0xB58C30", VA = "0xB58C30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xB58C88", Offset = "0xB58C88", VA = "0xB58C88")]
	public AudioRotator()
	{
	}
}
[Token(Token = "0x2000084")]
public class AudioTextureCreator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000085")]
	public class AudioChannelAnalyze
	{
		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Display")]
		public bool circular;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float circleRad;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scale;

		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		[Header("Cross mix")]
		public float crossMixAmountRed;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float crossMixAmountGreen;

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float crossMixAmountBlue;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Scale")]
		public float loudnessNormScale;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float sampleNormScale;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Smoothers")]
		[Range(0f, 1f)]
		public float smoothness;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(1f, 128f)]
		public int kernelSize;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Range(1f, 128f)]
		public int wrapSmootherSamples;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Normalization")]
		public float minNorm;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float maxNorm;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float normalizationTime;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Loudness")]
		public float loudnessTime;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float softLoudnessTime;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Range(16f, 512f)]
		[Header("Buffers")]
		public int bufferSize;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Range(4f, 128f)]
		public int smoothBufferSize;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(1f, 16f)]
		[Header("Music Sync")]
		public int frameDelay;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("References")]
		public AudioSource _audioSource;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public LineRenderer _lineRender;

		[NonSerialized]
		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float currentLoudness;

		[NonSerialized]
		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float currentSoftLoudness;

		[NonSerialized]
		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float currentNorm;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float currentNormVel;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float currentLoudnessVel;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentSoftLoudnessVel;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int frame;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float[] buffer;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] addBuffer;

		[NonSerialized]
		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float[] smoothBuffer;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<float[]> smoothBufferList;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int downsampleRatio;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AnimationCurve _wrapCurve;

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xB5A534", Offset = "0xB5A534", VA = "0xB5A534")]
		public void UpdateParams(AudioChannelAnalyze copyFrom)
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xB58FF4", Offset = "0xB58FF4", VA = "0xB58FF4")]
		public AudioChannelAnalyze(AudioChannelAnalyze copyFrom, AudioSource src, [Optional] LineRenderer lr)
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xB58FA8", Offset = "0xB58FA8", VA = "0xB58FA8")]
		public void Init(AudioChannelAnalyze copyFrom, AudioSource src, [Optional] LineRenderer lr)
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xB5A588", Offset = "0xB5A588", VA = "0xB5A588")]
		public void Init()
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0xB59CD4", Offset = "0xB59CD4", VA = "0xB59CD4")]
		public void AddAudioSourceToBuffer([Optional] AudioSource otherAudioSource)
		{
		}

		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xB59E14", Offset = "0xB59E14", VA = "0xB59E14")]
		public void NormalizeBuffer(float numChannels)
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0xB59E80", Offset = "0xB59E80", VA = "0xB59E80")]
		public void Update()
		{
		}
	}

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioChannelAnalyze analyzeParams;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Stack<AudioChannelAnalyze> _freeChannels;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AudioChannelAnalyze> _currentChannels;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D _outputTexture;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color[] _textureColors;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int textureCacheSize;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _curTextureInCache;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D[] _textureCache;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] _totalMix;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer debugMesh;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool SingleChannelProcessing;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _AudioTexID;

	[Token(Token = "0x170000B5")]
	public AudioChannelAnalyze CurrentChannel
	{
		[Token(Token = "0x6000398")]
		[Address(RVA = "0xB58C98", Offset = "0xB58C98", VA = "0xB58C98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xB58D0C", Offset = "0xB58D0C", VA = "0xB58D0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xB58E54", Offset = "0xB58E54", VA = "0xB58E54")]
	public void AddChannel(AudioSource src, [Optional] AudioChannelAnalyze overrideDefaultParams)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xB59080", Offset = "0xB59080", VA = "0xB59080")]
	public void RemoveChannel(AudioSource src)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xB5927C", Offset = "0xB5927C", VA = "0xB5927C")]
	public Texture2D GetTexture()
	{
		return null;
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xB592B0", Offset = "0xB592B0", VA = "0xB592B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xB5A450", Offset = "0xB5A450", VA = "0xB5A450")]
	public AudioTextureCreator()
	{
	}
}
[Token(Token = "0x2000086")]
public class FollowHead : MonoBehaviour
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform followTarget;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 velocity;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion angularVelocity;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool lockPlane;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("More is slower")]
	public float positionSmoothness;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("More is slower")]
	public float orientationSmoothness;

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xB5A8F4", Offset = "0xB5A8F4", VA = "0xB5A8F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xB5AAC0", Offset = "0xB5AAC0", VA = "0xB5AAC0")]
	public FollowHead()
	{
	}
}
[Token(Token = "0x2000087")]
public class MusicManager : MonoBehaviour
{
	[Token(Token = "0x2000088")]
	private enum Mode
	{
		[Token(Token = "0x40003F1")]
		Idle,
		[Token(Token = "0x40003F2")]
		Playing,
		[Token(Token = "0x40003F3")]
		FadingIn,
		[Token(Token = "0x40003F4")]
		FadingOut,
		[Token(Token = "0x40003F5")]
		Stopping,
		[Token(Token = "0x40003F6")]
		Skipping
	}

	[Serializable]
	[Token(Token = "0x2000089")]
	public class Track
	{
		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(-80f, 20f)]
		public float gainDb;

		[NonSerialized]
		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string externalFilePath;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip FR_L;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip FR_R;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip SD_L;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioClip SD_R;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioClip RR_L;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AudioClip RR_R;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioTextureCreator.AudioChannelAnalyze analyzeParams;

		[NonSerialized]
		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioManager.SoundEffect Front_L;

		[NonSerialized]
		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioManager.SoundEffect Front_R;

		[NonSerialized]
		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AudioManager.SoundEffect Side_L;

		[NonSerialized]
		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AudioManager.SoundEffect Side_R;

		[NonSerialized]
		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioManager.SoundEffect Rear_L;

		[NonSerialized]
		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AudioManager.SoundEffect Rear_R;

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xC46300", Offset = "0xC46300", VA = "0xC46300")]
		public void Init()
		{
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xC46430", Offset = "0xC46430", VA = "0xC46430")]
		public void SetExternalMusicClip(AudioClip clip)
		{
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xC465E4", Offset = "0xC465E4", VA = "0xC465E4")]
		public Track()
		{
		}
	}

	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <PlayMusicChallengeTrackCo>d__68 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Track track;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager <>4__this;

		[Token(Token = "0x170000BD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60003E0")]
			[Address(RVA = "0xC46724", Offset = "0xC46724", VA = "0xC46724", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E2")]
			[Address(RVA = "0xC4676C", Offset = "0xC4676C", VA = "0xC4676C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xC465EC", Offset = "0xC465EC", VA = "0xC465EC")]
		[DebuggerHidden]
		public <PlayMusicChallengeTrackCo>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xC46614", Offset = "0xC46614", VA = "0xC46614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xC46618", Offset = "0xC46618", VA = "0xC46618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xC4672C", Offset = "0xC4672C", VA = "0xC4672C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <skipMP3Co>d__81 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager <>4__this;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool skipBack;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003E6")]
			[Address(RVA = "0xC468B8", Offset = "0xC468B8", VA = "0xC468B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003E8")]
			[Address(RVA = "0xC46900", Offset = "0xC46900", VA = "0xC46900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xC467C8", Offset = "0xC467C8", VA = "0xC467C8")]
		[DebuggerHidden]
		public <skipMP3Co>d__81(int <>1__state)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xC467F0", Offset = "0xC467F0", VA = "0xC467F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xC467F4", Offset = "0xC467F4", VA = "0xC467F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0xC468C0", Offset = "0xC468C0", VA = "0xC468C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008C")]
	[CompilerGenerated]
	private sealed class <stopMP3Co>d__83 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager <>4__this;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool skipping;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003EC")]
			[Address(RVA = "0xC46A88", Offset = "0xC46A88", VA = "0xC46A88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003EE")]
			[Address(RVA = "0xC46AD0", Offset = "0xC46AD0", VA = "0xC46AD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xC46908", Offset = "0xC46908", VA = "0xC46908")]
		[DebuggerHidden]
		public <stopMP3Co>d__83(int <>1__state)
		{
		}

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xC46930", Offset = "0xC46930", VA = "0xC46930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xC46934", Offset = "0xC46934", VA = "0xC46934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xC46A90", Offset = "0xC46A90", VA = "0xC46A90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008D")]
	[CompilerGenerated]
	private sealed class <FadeLevelEditorVolumeFactorCo>d__93 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MusicManager <>4__this;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float targetVolumeFactor;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <initialVolumeFactor>5__2;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__3;

		[Token(Token = "0x170000C3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60003F2")]
			[Address(RVA = "0xC46BE4", Offset = "0xC46BE4", VA = "0xC46BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F4")]
			[Address(RVA = "0xC46C2C", Offset = "0xC46C2C", VA = "0xC46C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xC46AD8", Offset = "0xC46AD8", VA = "0xC46AD8")]
		[DebuggerHidden]
		public <FadeLevelEditorVolumeFactorCo>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xC46B00", Offset = "0xC46B00", VA = "0xC46B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xC46B04", Offset = "0xC46B04", VA = "0xC46B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xC46BEC", Offset = "0xC46BEC", VA = "0xC46BEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicManager inst;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Spatialization")]
	public bool dontSpatializeMusic;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Nx")]
	public float musicGlobalVolume_Game;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float musicGlobalVolume_PersonalCoeff;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Oculus")]
	public float musicGlobalVolume_Game_Oculus;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float musicGlobalVolume_PersonalCoeff_Oculus;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Speakers")]
	public MusicSpeaker[] _speakers;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AudioTextureCreator _textureCreator;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Fade times")]
	public float fadeInTime;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float fadeOutTime;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float slowFadeOutTime;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float levelEditorFadeTime;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Volume where slow fade out starts")]
	[Header("Volumes")]
	public float lowVolume;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Tooltip("Volume factor when in level editor (but not playing)")]
	public float levelEditorLowVolumeFactor;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeInSpeed;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float fadeOutSpeed;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float slowFadeOutSpeed;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Mode _mode;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _targetVolume;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _fadeSpeed;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _timeSinceLastVolumeChange;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _musicLowPassCutoffVelocity;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _musicHighPassCutoffVelocity;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _lowPassCutoffWhenOptionsOpen;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _timeToKeepMusicPreviewAfterManipulation;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Track[] tracks;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MyMusicPlayer _myMusicPlayer;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Track[] _personalTracks;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float defaultGainDb;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioTextureCreator.AudioChannelAnalyze defaultParams;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ToggleSwitch myMusicSwitch;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _waitingForUserPermission;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _userPersonalTracksKey;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _usePersonalTracks;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] _playlist;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _currentTrack;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<AudioManager.SoundEffect> _soundEffects;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Music Challenges")]
	public Track oct21ChallengeTrack;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private CoroutineHandle? _PlayMusicChallengeTrackCo;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _musicChallengeLength;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float _volume;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _levelEditorVolumeFactor;

	[Token(Token = "0x40003EE")]
	private const string fadeLevelEditorVolumeFactorTag = "fadeLevelEditorVolumeFactorTag_Coroutine";

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private bool _wasInOptionsMenu;

	[Token(Token = "0x170000B6")]
	public bool isPlaying
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xB5AB70", Offset = "0xB5AB70", VA = "0xB5AB70")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B7")]
	public Track[] usedTracks
	{
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xB5AB80", Offset = "0xB5AB80", VA = "0xB5AB80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000B8")]
	public bool waitingForUserPermission
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xB5ABD0", Offset = "0xB5ABD0", VA = "0xB5ABD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B9")]
	public bool usePersonalTracks
	{
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xB5ABA8", Offset = "0xB5ABA8", VA = "0xB5ABA8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xB5ABD8", Offset = "0xB5ABD8", VA = "0xB5ABD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	private int[] playlist
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xB5AE14", Offset = "0xB5AE14", VA = "0xB5AE14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BB")]
	public float MusicChallengeLength
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xB5C388", Offset = "0xB5C388", VA = "0xB5C388")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000BC")]
	public float volume
	{
		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xB5D530", Offset = "0xB5D530", VA = "0xB5D530")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xB5C0A4", Offset = "0xB5C0A4", VA = "0xB5C0A4")]
		private set
		{
		}
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xB5AC54", Offset = "0xB5AC54", VA = "0xB5AC54")]
	private void onPersonalMusicActivated()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xB5AFF8", Offset = "0xB5AFF8", VA = "0xB5AFF8")]
	private void onPermissionResult(bool granted)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xB5B158", Offset = "0xB5B158", VA = "0xB5B158")]
	private void noLongerWaitingForUser()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xB5B120", Offset = "0xB5B120", VA = "0xB5B120")]
	private void onPermissionGranted()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xB5B17C", Offset = "0xB5B17C", VA = "0xB5B17C")]
	private void loadPersonalMusic()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xB5B674", Offset = "0xB5B674", VA = "0xB5B674")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xB5B81C", Offset = "0xB5B81C", VA = "0xB5B81C")]
	public void SetNextTrackByName(string name)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xB5B8E8", Offset = "0xB5B8E8", VA = "0xB5B8E8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xB5AE6C", Offset = "0xB5AE6C", VA = "0xB5AE6C")]
	private void createPlaylist()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xB5BAA0", Offset = "0xB5BAA0", VA = "0xB5BAA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xB5BD58", Offset = "0xB5BD58", VA = "0xB5BD58")]
	public void play()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xB5C0AC", Offset = "0xB5C0AC", VA = "0xB5C0AC")]
	public void stop(bool slowly)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xB5C0E0", Offset = "0xB5C0E0", VA = "0xB5C0E0")]
	public void ForceRestart()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xB5C204", Offset = "0xB5C204", VA = "0xB5C204")]
	public void resumeLow()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xB5C228", Offset = "0xB5C228", VA = "0xB5C228")]
	public void resumeHigh()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xB5C24C", Offset = "0xB5C24C", VA = "0xB5C24C")]
	private void PlayMusicChallengeTrack(Track track)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xB5C2F8", Offset = "0xB5C2F8", VA = "0xB5C2F8")]
	[IteratorStateMachine(typeof(<PlayMusicChallengeTrackCo>d__68))]
	private IEnumerator<float> PlayMusicChallengeTrackCo(Track track)
	{
		return null;
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xB5C390", Offset = "0xB5C390", VA = "0xB5C390")]
	public float GetTimeLeftForMusicChallenge()
	{
		return default(float);
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xB5BE38", Offset = "0xB5BE38", VA = "0xB5BE38")]
	private void playCurrentTrack()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xB5D128", Offset = "0xB5D128", VA = "0xB5D128")]
	private void onPlayStarted(Track track)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xB5D15C", Offset = "0xB5D15C", VA = "0xB5D15C")]
	private void onPlayFailed(Track track)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xB5D20C", Offset = "0xB5D20C", VA = "0xB5D20C")]
	private void removePersonalTrack(Track track)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xB5C464", Offset = "0xB5C464", VA = "0xB5C464")]
	private void StartTrackPlayback(Track track)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xB5D350", Offset = "0xB5D350", VA = "0xB5D350")]
	private void onTrackEnd()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB5D3A4", Offset = "0xB5D3A4", VA = "0xB5D3A4")]
	private void advanceToNextTrack(bool skipBack = false)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB5AD00", Offset = "0xB5AD00", VA = "0xB5AD00")]
	public void skipTrack(bool skipBack = false)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB5D420", Offset = "0xB5D420", VA = "0xB5D420")]
	[IteratorStateMachine(typeof(<skipMP3Co>d__81))]
	private IEnumerator skipMP3Co(bool skipBack = false)
	{
		return null;
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB5C0FC", Offset = "0xB5C0FC", VA = "0xB5C0FC")]
	private void stopPlayback(bool skipBack = false)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB5D4A8", Offset = "0xB5D4A8", VA = "0xB5D4A8")]
	[IteratorStateMachine(typeof(<stopMP3Co>d__83))]
	private IEnumerator stopMP3Co(bool skipping = false)
	{
		return null;
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB5D538", Offset = "0xB5D538", VA = "0xB5D538")]
	private void applyVolume()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB5D64C", Offset = "0xB5D64C", VA = "0xB5D64C")]
	public void OnLevelEditorModeChanged(LevelEditorManager.LevelEditorMode oldMode, LevelEditorManager.LevelEditorMode newMode)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xB5D694", Offset = "0xB5D694", VA = "0xB5D694")]
	private void FadeLevelEditorVolumeFactor(float targetVolumeFactor)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xB5D724", Offset = "0xB5D724", VA = "0xB5D724")]
	[IteratorStateMachine(typeof(<FadeLevelEditorVolumeFactorCo>d__93))]
	private IEnumerator<float> FadeLevelEditorVolumeFactorCo(float targetVolumeFactor)
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xB5B5E8", Offset = "0xB5B5E8", VA = "0xB5B5E8")]
	private void createTrackSoundEffects(Track track, List<AudioManager.SoundEffect> list)
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xB5D7A8", Offset = "0xB5D7A8", VA = "0xB5D7A8")]
	private void addEffect(AudioManager.SoundEffect se, AudioClip clip)
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xB5D930", Offset = "0xB5D930", VA = "0xB5D930")]
	public void VolumeChanged()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xB5D938", Offset = "0xB5D938", VA = "0xB5D938")]
	private void OnMusicSkipRequested(int dir)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xB5DA30", Offset = "0xB5DA30", VA = "0xB5DA30")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xB5DE88", Offset = "0xB5DE88", VA = "0xB5DE88")]
	private bool fade()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xB5DF1C", Offset = "0xB5DF1C", VA = "0xB5DF1C")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200008E")]
public class MusicSpeaker : MonoBehaviour
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float angle;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[NonSerialized]
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpatializedAudio saudio;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Action _onDone;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _playingExternalMusic;

	[Token(Token = "0x170000C5")]
	public float volume
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xC47720", Offset = "0xC47720", VA = "0xC47720")]
		set
		{
		}
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xC46C88", Offset = "0xC46C88", VA = "0xC46C88")]
	public void LocateRelativeTo(Transform root)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC46D80", Offset = "0xC46D80", VA = "0xC46D80")]
	public void Play(AudioManager.SoundEffect effect, [Optional] Action onDone, [Optional] AudioTextureCreator.AudioChannelAnalyze analyzeParams, bool playingExternalMusic = false)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC47238", Offset = "0xC47238", VA = "0xC47238")]
	private void onPlaybackDone()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC470E0", Offset = "0xC470E0", VA = "0xC470E0")]
	public void Stop()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xC47640", Offset = "0xC47640", VA = "0xC47640")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC477A4", Offset = "0xC477A4", VA = "0xC477A4")]
	public MusicSpeaker()
	{
	}
}
[Token(Token = "0x200008F")]
public abstract class MyMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x400041F")]
	private const int EXTERNAL_MUSIC_FILES_LIMIT = 3000;

	[Token(Token = "0x14000004")]
	public event Action<MusicManager.Track> onPlayStarted
	{
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xC47EAC", Offset = "0xC47EAC", VA = "0xC47EAC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xC47F5C", Offset = "0xC47F5C", VA = "0xC47F5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<MusicManager.Track> onPlayFailed
	{
		[Token(Token = "0x6000406")]
		[Address(RVA = "0xC48028", Offset = "0xC48028", VA = "0xC48028")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000407")]
		[Address(RVA = "0xC480D8", Offset = "0xC480D8", VA = "0xC480D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60003FC")]
	public abstract void getPermission(Action<bool> onDone);

	[Token(Token = "0x60003FD")]
	protected abstract string getMyMusicDirectory();

	[Token(Token = "0x60003FE")]
	protected abstract HashSet<string> getSupportedFileExtensions();

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC477AC", Offset = "0xC477AC", VA = "0xC477AC")]
	public List<string> listFiles()
	{
		return null;
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC47988", Offset = "0xC47988", VA = "0xC47988")]
	private List<string> scanDirForMusicFiles(string path, bool recursive, int maxFiles)
	{
		return null;
	}

	[Token(Token = "0x6000401")]
	public abstract bool canPlay();

	[Token(Token = "0x6000402")]
	public abstract void play(MusicManager.Track track, MusicSpeaker speaker);

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC4800C", Offset = "0xC4800C", VA = "0xC4800C")]
	protected void _onPlayStarted(MusicManager.Track track)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xC48188", Offset = "0xC48188", VA = "0xC48188")]
	protected void _onPlayFailed(MusicManager.Track track)
	{
	}

	[Token(Token = "0x6000409")]
	public abstract bool needStopping();

	[Token(Token = "0x600040A")]
	public abstract bool canSkip();

	[Token(Token = "0x600040B")]
	public abstract IEnumerator stop();

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xC481A4", Offset = "0xC481A4", VA = "0xC481A4")]
	protected MyMusicPlayer()
	{
	}
}
[Token(Token = "0x2000090")]
public class MyMusicPlayer_Android : MyMusicPlayer
{
	[Token(Token = "0x2000091")]
	[CompilerGenerated]
	private sealed class <requestPermissionDelayed>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MyMusicPlayer_Android <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0xC489D0", Offset = "0xC489D0", VA = "0xC489D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600041E")]
			[Address(RVA = "0xC48A18", Offset = "0xC48A18", VA = "0xC48A18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xC48354", Offset = "0xC48354", VA = "0xC48354")]
		[DebuggerHidden]
		public <requestPermissionDelayed>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xC488F4", Offset = "0xC488F4", VA = "0xC488F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600041B")]
		[Address(RVA = "0xC488F8", Offset = "0xC488F8", VA = "0xC488F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600041D")]
		[Address(RVA = "0xC489D8", Offset = "0xC489D8", VA = "0xC489D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000092")]
	[CompilerGenerated]
	private sealed class <playExternalMusicFile>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MyMusicPlayer_Android <>4__this;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager.Track track;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WWW <www>5__2;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioClip <clip>5__3;

		[Token(Token = "0x170000C8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000422")]
			[Address(RVA = "0xC48ED8", Offset = "0xC48ED8", VA = "0xC48ED8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000424")]
			[Address(RVA = "0xC48F20", Offset = "0xC48F20", VA = "0xC48F20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xC4886C", Offset = "0xC4886C", VA = "0xC4886C")]
		[DebuggerHidden]
		public <playExternalMusicFile>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xC48A20", Offset = "0xC48A20", VA = "0xC48A20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xC48A24", Offset = "0xC48A24", VA = "0xC48A24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0xC48EE0", Offset = "0xC48EE0", VA = "0xC48EE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<bool> _onPermissionResult;

	[Token(Token = "0x4000423")]
	private const string READ_EXTERNAL_STORAGE = "android.permission.READ_EXTERNAL_STORAGE";

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _startingToPlayExternalMusic;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xC481AC", Offset = "0xC481AC", VA = "0xC481AC", Slot = "4")]
	public override void getPermission(Action<bool> onDone)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xC482D0", Offset = "0xC482D0", VA = "0xC482D0")]
	[IteratorStateMachine(typeof(<requestPermissionDelayed>d__3))]
	private IEnumerator requestPermissionDelayed(float delay)
	{
		return null;
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xC4837C", Offset = "0xC4837C", VA = "0xC4837C", Slot = "5")]
	protected override string getMyMusicDirectory()
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xC483BC", Offset = "0xC483BC", VA = "0xC483BC")]
	private static string getExternalStoragePublicDirectory(string type)
	{
		return null;
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xC4865C", Offset = "0xC4865C", VA = "0xC4865C", Slot = "6")]
	protected override HashSet<string> getSupportedFileExtensions()
	{
		return null;
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xC48754", Offset = "0xC48754", VA = "0xC48754", Slot = "7")]
	public override bool canPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xC48764", Offset = "0xC48764", VA = "0xC48764", Slot = "8")]
	public override void play(MusicManager.Track track, MusicSpeaker speaker)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xC487DC", Offset = "0xC487DC", VA = "0xC487DC")]
	[IteratorStateMachine(typeof(<playExternalMusicFile>d__10))]
	private IEnumerator<float> playExternalMusicFile(MusicManager.Track track)
	{
		return null;
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xC48894", Offset = "0xC48894", VA = "0xC48894", Slot = "9")]
	public override bool needStopping()
	{
		return default(bool);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xC4889C", Offset = "0xC4889C", VA = "0xC4889C", Slot = "10")]
	public override bool canSkip()
	{
		return default(bool);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xC488AC", Offset = "0xC488AC", VA = "0xC488AC", Slot = "11")]
	public override IEnumerator stop()
	{
		return null;
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xC488EC", Offset = "0xC488EC", VA = "0xC488EC")]
	public MyMusicPlayer_Android()
	{
	}
}
[Token(Token = "0x2000093")]
public class MyMusicPlayer_PC : MyMusicPlayer
{
	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private sealed class <waitForThreadDecompress>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyMusicPlayer_PC <>4__this;

		[Token(Token = "0x170000CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0xC499A4", Offset = "0xC499A4", VA = "0xC499A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0xC499EC", Offset = "0xC499EC", VA = "0xC499EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0xC495D4", Offset = "0xC495D4", VA = "0xC495D4")]
		[DebuggerHidden]
		public <waitForThreadDecompress>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xC4992C", Offset = "0xC4992C", VA = "0xC4992C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0xC49930", Offset = "0xC49930", VA = "0xC49930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xC499AC", Offset = "0xC499AC", VA = "0xC499AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000096")]
	[CompilerGenerated]
	private sealed class <playMP3Co>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MusicManager.Track track;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MusicSpeaker speaker;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MyMusicPlayer_PC <>4__this;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <mp3Channels>5__2;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private byte[] <buffer>5__3;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float[] <samples>5__4;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private short[] <shortBuffer>5__5;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource <source>5__6;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int <bufferPos>5__7;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <clipPos>5__8;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043D")]
			[Address(RVA = "0xC4A55C", Offset = "0xC4A55C", VA = "0xC4A55C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043F")]
			[Address(RVA = "0xC4A5A4", Offset = "0xC4A5A4", VA = "0xC4A5A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0xC49638", Offset = "0xC49638", VA = "0xC49638")]
		[DebuggerHidden]
		public <playMP3Co>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xC499F4", Offset = "0xC499F4", VA = "0xC499F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0xC499F8", Offset = "0xC499F8", VA = "0xC499F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0xC4A564", Offset = "0xC4A564", VA = "0xC4A564", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000097")]
	[CompilerGenerated]
	private sealed class <stop>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MyMusicPlayer_PC <>4__this;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000443")]
			[Address(RVA = "0xC4A624", Offset = "0xC4A624", VA = "0xC4A624", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000445")]
			[Address(RVA = "0xC4A66C", Offset = "0xC4A66C", VA = "0xC4A66C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0xC496D4", Offset = "0xC496D4", VA = "0xC496D4")]
		[DebuggerHidden]
		public <stop>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0xC4A5AC", Offset = "0xC4A5AC", VA = "0xC4A5AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0xC4A5B0", Offset = "0xC4A5B0", VA = "0xC4A5B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0xC4A62C", Offset = "0xC4A62C", VA = "0xC4A62C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042F")]
	private const int MP3_FILES_LIMIT = 3000;

	[Token(Token = "0x4000430")]
	private const int NUM_MP3_BUFFER_SIZE = 262144;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip _mp3Clip;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private byte[] _nextMP3Buffer1;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private byte[] _nextMP3Buffer2;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _mp3JobFillsBuffer1;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _mp3JobWait;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _mp3IsPlaying;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool _mp3Skip;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _mp3DecodingFirstBuffer;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _mp3CloseThread;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool _mp3ErrorWhileDecoding;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine _mp3Coroutine;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Thread _mp3DecompressThread;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MP3Stream _stream;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xC48F7C", Offset = "0xC48F7C", VA = "0xC48F7C", Slot = "4")]
	public override void getPermission(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC48FA0", Offset = "0xC48FA0", VA = "0xC48FA0", Slot = "5")]
	protected override string getMyMusicDirectory()
	{
		return null;
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xC48FAC", Offset = "0xC48FAC", VA = "0xC48FAC", Slot = "6")]
	protected override HashSet<string> getSupportedFileExtensions()
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xC49054", Offset = "0xC49054", VA = "0xC49054", Slot = "7")]
	public override bool canPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xC49074", Offset = "0xC49074", VA = "0xC49074", Slot = "8")]
	public override void play(MusicManager.Track track, MusicSpeaker speaker)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xC49238", Offset = "0xC49238", VA = "0xC49238", Slot = "9")]
	public override bool needStopping()
	{
		return default(bool);
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xC49248", Offset = "0xC49248", VA = "0xC49248", Slot = "10")]
	public override bool canSkip()
	{
		return default(bool);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xC49250", Offset = "0xC49250", VA = "0xC49250")]
	private void readMP3Job(object arg)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xC49560", Offset = "0xC49560", VA = "0xC49560")]
	[IteratorStateMachine(typeof(<waitForThreadDecompress>d__22))]
	private IEnumerator waitForThreadDecompress()
	{
		return null;
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xC495FC", Offset = "0xC495FC", VA = "0xC495FC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xC49194", Offset = "0xC49194", VA = "0xC49194")]
	[IteratorStateMachine(typeof(<playMP3Co>d__25))]
	private IEnumerator playMP3Co(MusicManager.Track track, MusicSpeaker speaker)
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xC49660", Offset = "0xC49660", VA = "0xC49660", Slot = "11")]
	[IteratorStateMachine(typeof(<stop>d__26))]
	public override IEnumerator stop()
	{
		return null;
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC496FC", Offset = "0xC496FC", VA = "0xC496FC")]
	public MyMusicPlayer_PC()
	{
	}
}
[Token(Token = "0x2000098")]
public class SpaceFloat : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000099")]
	public class Orbit
	{
		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enable;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 axis;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x600044A")]
		[Address(RVA = "0xC4AB24", Offset = "0xC4AB24", VA = "0xC4AB24")]
		public Orbit()
		{
		}
	}

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Object in center")]
	public Transform centerPlatform;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Maxiumum distance from initial position")]
	public float deltaDistance;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Wavelength in seconds")]
	public float cycleDuration;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Phase shift to desynchornize")]
	[Range(0f, 1f)]
	public float phaseShift;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Orbit orbit;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _centerPos;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _origDirection;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _meanPosition;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _freedomDistance;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _cycleT;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _rotationT;

	[Token(Token = "0x170000D0")]
	private Vector3 meanPosition
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xC4A674", Offset = "0xC4A674", VA = "0xC4A674")]
		set
		{
		}
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC4A77C", Offset = "0xC4A77C", VA = "0xC4A77C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC4A9B0", Offset = "0xC4A9B0", VA = "0xC4A9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC4AB14", Offset = "0xC4AB14", VA = "0xC4AB14")]
	public SpaceFloat()
	{
	}
}
[Token(Token = "0x200009A")]
public class SpaceSounds : MonoBehaviour
{
	[Token(Token = "0x200009B")]
	public enum SoundId
	{
		[Token(Token = "0x400046A")]
		None,
		[Token(Token = "0x400046B")]
		Bass1GroundFront,
		[Token(Token = "0x400046C")]
		Drums1Front,
		[Token(Token = "0x400046D")]
		GlitchyLoop1AroundClose,
		[Token(Token = "0x400046E")]
		HiNoiseLoop1Around,
		[Token(Token = "0x400046F")]
		Pad1TopStatic,
		[Token(Token = "0x4000470")]
		Pad2BottomSmallCircleSlow,
		[Token(Token = "0x4000471")]
		Pad3BackHalfCircle,
		[Token(Token = "0x4000472")]
		SpaceyPad1TopFarCircling,
		[Token(Token = "0x4000473")]
		Static1CirclingInOut,
		[Token(Token = "0x4000474")]
		Above,
		[Token(Token = "0x4000475")]
		Below,
		[Token(Token = "0x4000476")]
		Front,
		[Token(Token = "0x4000477")]
		Back,
		[Token(Token = "0x4000478")]
		Around,
		[Token(Token = "0x4000479")]
		FloatingInOut
	}

	[Serializable]
	[Token(Token = "0x200009C")]
	public class Sound
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SoundId id;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform position;

		[Token(Token = "0x6000455")]
		[Address(RVA = "0xC4B4AC", Offset = "0xC4B4AC", VA = "0xC4B4AC")]
		public Sound()
		{
		}
	}

	[Token(Token = "0x200009D")]
	public enum FadeMode
	{
		[Token(Token = "0x400047E")]
		AutoFade,
		[Token(Token = "0x400047F")]
		ExternalControl
	}

	[Token(Token = "0x200009E")]
	private enum State
	{
		[Token(Token = "0x4000481")]
		Silent,
		[Token(Token = "0x4000482")]
		FadingIn,
		[Token(Token = "0x4000483")]
		Playing,
		[Token(Token = "0x4000484")]
		FadingOut
	}

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sound[] sounds;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeMode fadeMode;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fadeInTime;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SpatializedAudio> sAudios;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State _state;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _fadeVolume;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _fadeVolumeVelocity;

	[Token(Token = "0x170000D1")]
	public float volume
	{
		[Token(Token = "0x6000451")]
		[Address(RVA = "0xC4B2E0", Offset = "0xC4B2E0", VA = "0xC4B2E0")]
		set
		{
		}
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC4AB88", Offset = "0xC4AB88", VA = "0xC4AB88")]
	public void startPlayback()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC4ABAC", Offset = "0xC4ABAC", VA = "0xC4ABAC")]
	private void init()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC4ACF0", Offset = "0xC4ACF0", VA = "0xC4ACF0")]
	private AudioManager.SoundEffect idToSfx(SoundId soundId)
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC4AF98", Offset = "0xC4AF98", VA = "0xC4AF98")]
	private void play(Transform transform, AudioManager.SoundEffect sfx)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC4B1AC", Offset = "0xC4B1AC", VA = "0xC4B1AC")]
	public void stopPlayback()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xC4B1D0", Offset = "0xC4B1D0", VA = "0xC4B1D0")]
	private void cleanup()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xC4B100", Offset = "0xC4B100", VA = "0xC4B100")]
	private void enableSpaceFloats(bool enabled)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xC4B37C", Offset = "0xC4B37C", VA = "0xC4B37C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xC4B49C", Offset = "0xC4B49C", VA = "0xC4B49C")]
	public SpaceSounds()
	{
	}
}
[Token(Token = "0x200009F")]
public class SpaceSounds_GameOver : SpaceSounds
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceSounds_GameOver inst;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xC4B4BC", Offset = "0xC4B4BC", VA = "0xC4B4BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xC4B514", Offset = "0xC4B514", VA = "0xC4B514")]
	public SpaceSounds_GameOver()
	{
	}
}
[Token(Token = "0x20000A0")]
public class SpaceSounds_MainMenu : SpaceSounds
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceSounds_MainMenu inst;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xC4B524", Offset = "0xC4B524", VA = "0xC4B524")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xC4B57C", Offset = "0xC4B57C", VA = "0xC4B57C")]
	public SpaceSounds_MainMenu()
	{
	}
}
[Token(Token = "0x20000A1")]
public class SpatializedAudio : MonoBehaviour
{
	[Token(Token = "0x20000A2")]
	private class CopyAudioClipLeftToRightChannel : MonoBehaviour
	{
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xC4C778", Offset = "0xC4C778", VA = "0xC4C778")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xC4C7D4", Offset = "0xC4C7D4", VA = "0xC4C7D4")]
		public CopyAudioClipLeftToRightChannel()
		{
		}
	}

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource _audioSource;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _attachedTo;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _baseVolume;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _basePitch;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _inCleanupPhase;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool _timeManipulatesPitch;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _playDelay;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _playInFrames;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private NxSource _nxSource;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PXR_Audio_Spatializer_AudioSource _PXRAudioSource;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioSource _lastRolloffCurveRefUsed;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _isPaused;

	[Token(Token = "0x170000D2")]
	public AudioSource audioSource
	{
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xC4B58C", Offset = "0xC4B58C", VA = "0xC4B58C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D3")]
	public NxSource nxSource
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xC4B630", Offset = "0xC4B630", VA = "0xC4B630")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D4")]
	public bool isPlaying
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xC4C43C", Offset = "0xC4C43C", VA = "0xC4C43C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000006")]
	public event Action onDone
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xC4717C", Offset = "0xC4717C", VA = "0xC4717C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xC4B594", Offset = "0xC4B594", VA = "0xC4B594")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xC4B638", Offset = "0xC4B638", VA = "0xC4B638")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xC4B888", Offset = "0xC4B888", VA = "0xC4B888")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xC4B9A8", Offset = "0xC4B9A8", VA = "0xC4B9A8")]
	public static float LinearToDecibel(float linear)
	{
		return default(float);
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xC4B9DC", Offset = "0xC4B9DC", VA = "0xC4B9DC")]
	public void ChangeGain(float gainDB)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xC4BAB0", Offset = "0xC4BAB0", VA = "0xC4BAB0")]
	private static float DecibelToLinear(float dB)
	{
		return default(float);
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xC4BAC0", Offset = "0xC4BAC0", VA = "0xC4BAC0")]
	public bool Pico_UpdateAudioSourceVolumeByVolumeControl()
	{
		return default(bool);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xC4BCDC", Offset = "0xC4BCDC", VA = "0xC4BCDC")]
	public void Pico_UpdateAudioSourceVolumeByVolumeControlGroup(VolumeControl.Group group)
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xC4BEDC", Offset = "0xC4BEDC", VA = "0xC4BEDC")]
	public void Play(AudioManager.SoundEffect effect, [Optional] NxGroup overrideGroup)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xC4C2E0", Offset = "0xC4C2E0", VA = "0xC4C2E0")]
	public void ReplaceClip(AudioClip clip)
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xC4C334", Offset = "0xC4C334", VA = "0xC4C334")]
	public void AttachToTransform(Transform t)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xC4C33C", Offset = "0xC4C33C", VA = "0xC4C33C")]
	public void AddCopyLeftToRightComponent()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xC47218", Offset = "0xC47218", VA = "0xC47218")]
	public void SetLooping(bool bLoop)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xC4C394", Offset = "0xC4C394", VA = "0xC4C394")]
	public int GetLoopCount()
	{
		return default(int);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xC473D4", Offset = "0xC473D4", VA = "0xC473D4")]
	public void Cleanup(bool unloadClipData = false)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xC476D4", Offset = "0xC476D4", VA = "0xC476D4")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xC4C4F0", Offset = "0xC4C4F0", VA = "0xC4C4F0")]
	public void internalUpdate()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xC4C768", Offset = "0xC4C768", VA = "0xC4C768")]
	public SpatializedAudio()
	{
	}
}
[Token(Token = "0x20000A3")]
public class TestAudioChannelAnalyze : MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Display")]
	public bool circular;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float circleRad;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scale;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Smoothers")]
	public float smoothness;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int kernelSize;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int wrapSmootherSamples;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Buffers")]
	public int bufferSize;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int smoothBufferSize;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Music Sync")]
	public int frameDelay;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int frame;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] buffer;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] smoothBuffer;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float[]> smoothBufferList;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] smoothBufferVel;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int downsampleRatio;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource _audioSource;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private LineRenderer _lineRender;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AnimationCurve _wrapCurve;

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xC4C7DC", Offset = "0xC4C7DC", VA = "0xC4C7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xC4CA90", Offset = "0xC4CA90", VA = "0xC4CA90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xC4CEF0", Offset = "0xC4CEF0", VA = "0xC4CEF0")]
	public TestAudioChannelAnalyze()
	{
	}
}
[Token(Token = "0x20000A4")]
public class Voice : MonoBehaviour
{
	[Token(Token = "0x20000A5")]
	private struct Chunk
	{
		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] buffer;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort payloadSize;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint seqNum;
	}

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("The 'sweet spot' for music and general audio is around 30kbps (mono)")]
	[Range(6000f, 260000f)]
	public int bitrate;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SamplingRate samplingRate;

	[Token(Token = "0x40004A9")]
	private const Channels NUM_CHANNELES = Channels.Mono;

	[Token(Token = "0x40004AA")]
	private const OpusApplicationType APPLICATION_TYPE = OpusApplicationType.Voip;

	[Token(Token = "0x40004AB")]
	private const Delay ENCODE_DELAY = Delay.Delay60ms;

	[Token(Token = "0x40004AC")]
	private const uint HEADER_SIZE = 6u;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Voice inst;

	[Token(Token = "0x40004AE")]
	private const uint MAX_COMPRESSED_FRAME_SIZE = 4000u;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private byte[] _compressedAudioTemp;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private short[] _uncompressedAudioFrameDecode;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private short[] _uncompressedAudioFrameEncode;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OpusEncoder _encoder;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private uint _lastSeqNumSent;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ByteWriter _writer;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OpusDecoder _decoder;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private uint _packageSize;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private uint _lastSeqNumReceived;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Stopwatch _initDecodeTimer;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ByteReader _reader;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Stack<byte[]> _compressedAudioTempCache;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Chunk> _compressedAudioTempQueue;

	[Token(Token = "0x170000D5")]
	private uint bytesPerSecond
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xC4CF20", Offset = "0xC4CF20", VA = "0xC4CF20")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC4CF2C", Offset = "0xC4CF2C", VA = "0xC4CF2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC4CFCC", Offset = "0xC4CFCC", VA = "0xC4CFCC")]
	private void initEncoder()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC4D35C", Offset = "0xC4D35C", VA = "0xC4D35C")]
	private void initDecoder()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC4D408", Offset = "0xC4D408", VA = "0xC4D408")]
	public void initEncode(bool sessionStart)
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC4D414", Offset = "0xC4D414", VA = "0xC4D414")]
	public void initDecode(bool sessionStart)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC4D454", Offset = "0xC4D454", VA = "0xC4D454")]
	public void compressVoice(byte[] compressedAudio, uint compressedAudioSize, out uint numBytesWrittenCompressed, byte[] uncompressedAudio, uint uncompressedAudioSize, out uint numBytesUnreadUncompressed)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC4D640", Offset = "0xC4D640", VA = "0xC4D640")]
	public void decompressVoice(byte[] compressedAudio, uint compressedAudioSize, byte[] uncompressedAudio, uint uncompressedAudioSize, out uint numBytesWrittenUncompressed)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC4DC68", Offset = "0xC4DC68", VA = "0xC4DC68")]
	private void copyUncompressedData(byte[] uncompressedAudio, uint uncompressedAudioSize, int numSamplesDecoded, ref uint numBytesWrittenUncompressed, ref bool dstBuffersAreFull)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC4DD48", Offset = "0xC4DD48", VA = "0xC4DD48")]
	public Voice()
	{
	}
}
[Token(Token = "0x20000A6")]
public class VolumeControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000A7")]
	public struct GroupParams
	{
		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioMixer mixer;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string mixerParam;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useEffectGroup;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		[Tooltip("Default volume is only used if not using effect group")]
		public float defaultVolume;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public float curVolume;

		[NonSerialized]
		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float gain;
	}

	[Token(Token = "0x20000A8")]
	public enum Group
	{
		[Token(Token = "0x40004D1")]
		Music,
		[Token(Token = "0x40004D2")]
		SoundEffects,
		[Token(Token = "0x40004D3")]
		VoiceChat
	}

	[Serializable]
	[Token(Token = "0x20000A9")]
	public class GroupMixerGroupPair
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Group group;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xC4EE18", Offset = "0xC4EE18", VA = "0xC4EE18")]
		public GroupMixerGroupPair()
		{
		}
	}

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GroupParams music;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GroupParams soundEffects;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GroupParams voiceChat;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ToggleSwitch mikeSwitch;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConcurrentDictionary<Group, float> _curAmplitudes;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _mikeOn;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _announcerOn;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool _waitingForUserPermission;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VolumeControl inst;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GroupMixerGroupPair[] mixerGroupMap;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _lastVoicePitch;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xC4DEDC", Offset = "0xC4DEDC", VA = "0xC4DEDC")]
	private GroupParams getParams(Group group)
	{
		return default(GroupParams);
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC4DFCC", Offset = "0xC4DFCC", VA = "0xC4DFCC")]
	private string getKey(Group group)
	{
		return null;
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xC4E144", Offset = "0xC4E144", VA = "0xC4E144")]
	public void setVolume(Group group, float amplitude, bool saveChange = true)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xC4E4F8", Offset = "0xC4E4F8", VA = "0xC4E4F8")]
	public float getDefualtVolume(Group group)
	{
		return default(float);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xC4BB9C", Offset = "0xC4BB9C", VA = "0xC4BB9C")]
	public static Group? GroupOfMixerGroup(AudioMixerGroup mixerGroup)
	{
		return null;
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC4BDE4", Offset = "0xC4BDE4", VA = "0xC4BDE4")]
	public float getVolume(Group group)
	{
		return default(float);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC4E520", Offset = "0xC4E520", VA = "0xC4E520")]
	public void setMikeOn(bool mikeOn, bool saveChange = true)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xC4E6B8", Offset = "0xC4E6B8", VA = "0xC4E6B8")]
	public bool getMikeOn()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xC4E6C0", Offset = "0xC4E6C0", VA = "0xC4E6C0")]
	private void requestPermission()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xC4E740", Offset = "0xC4E740", VA = "0xC4E740")]
	private void onPermissionResult(bool granted)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xC4E88C", Offset = "0xC4E88C", VA = "0xC4E88C")]
	private void noLongerWaitingForUser()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xC4E894", Offset = "0xC4E894", VA = "0xC4E894")]
	private void onPermissionGranted()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xC4E8A0", Offset = "0xC4E8A0", VA = "0xC4E8A0")]
	public void setAnnouncerOn(bool announcerOn, bool saveChange = true)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC4E934", Offset = "0xC4E934", VA = "0xC4E934")]
	public bool getAnnouncerOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC4E93C", Offset = "0xC4E93C", VA = "0xC4E93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xC4EBAC", Offset = "0xC4EBAC", VA = "0xC4EBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xC4EBDC", Offset = "0xC4EBDC", VA = "0xC4EBDC")]
	public void SetVoicePitch(float pitch)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xC4EA08", Offset = "0xC4EA08", VA = "0xC4EA08")]
	private void initGroups()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC4EBB0", Offset = "0xC4EBB0", VA = "0xC4EBB0")]
	private void loadVolumes()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xC4ECC4", Offset = "0xC4ECC4", VA = "0xC4ECC4")]
	private void loadVolume(Group group)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC4E4D4", Offset = "0xC4E4D4", VA = "0xC4E4D4")]
	private void saveVolume(Group group, float amplitude)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC4E3E4", Offset = "0xC4E3E4", VA = "0xC4E3E4")]
	private float linearToDecibel(float amplitude)
	{
		return default(float);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC4ED7C", Offset = "0xC4ED7C", VA = "0xC4ED7C")]
	private float decibelToLinear(float dB)
	{
		return default(float);
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xC4EA60", Offset = "0xC4EA60", VA = "0xC4EA60")]
	public void loadMikeOn()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC4E644", Offset = "0xC4E644", VA = "0xC4E644")]
	private void saveMikeOn()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC4EB04", Offset = "0xC4EB04", VA = "0xC4EB04")]
	private void loadAnnouncerOn()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC4E8C0", Offset = "0xC4E8C0", VA = "0xC4E8C0")]
	private void saveAnnouncerOn()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xC4EE00", Offset = "0xC4EE00", VA = "0xC4EE00")]
	public VolumeControl()
	{
	}
}
[Token(Token = "0x20000AB")]
public class BallBlendedMaterial : MonoBehaviour
{
	[Token(Token = "0x20000AC")]
	public enum BallVisualMode
	{
		[Token(Token = "0x40004DC")]
		Idle,
		[Token(Token = "0x40004DD")]
		Plow,
		[Token(Token = "0x40004DE")]
		Ice,
		[Token(Token = "0x40004DF")]
		Disabled
	}

	[Serializable]
	[Token(Token = "0x20000AD")]
	public struct BallBlendedMaterialData
	{
		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material normal;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material plow;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material ice;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material disabled;

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xC4EF50", Offset = "0xC4EF50", VA = "0xC4EF50")]
		public bool ControlsMaterial(Material m)
		{
			return default(bool);
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xC4F05C", Offset = "0xC4F05C", VA = "0xC4F05C")]
		public Material GetMaterialByMode(BallVisualMode mode)
		{
			return null;
		}
	}

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setBallVel;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BallBlendedMaterialData P1;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BallBlendedMaterialData P2;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Material materialInstance;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC4EE90", Offset = "0xC4EE90", VA = "0xC4EE90")]
	public void FirstTimeSetup()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC4EF10", Offset = "0xC4EF10", VA = "0xC4EF10")]
	public bool ControlsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC4F048", Offset = "0xC4F048", VA = "0xC4F048")]
	public Material GetMaterialByMode(BallVisualMode mode, bool player2 = false)
	{
		return null;
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC4F16C", Offset = "0xC4F16C", VA = "0xC4F16C")]
	public BallBlendedMaterial()
	{
	}
}
[Token(Token = "0x20000AE")]
public class BallTrail : MonoBehaviour
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _transform;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _posHistory;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ball _ball;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int _historyLen;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _lineWidth;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color _startColor;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color _endColor;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _minTimeStep;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _passedTime;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _lastUsedIndex;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _lastUsedAlpha;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _perlinScale;

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC4F174", Offset = "0xC4F174", VA = "0xC4F174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC4F228", Offset = "0xC4F228", VA = "0xC4F228")]
	public void Reset()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC4F35C", Offset = "0xC4F35C", VA = "0xC4F35C")]
	public void ApplyParams_Editor(float trailApproxStrength)
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC4F458", Offset = "0xC4F458", VA = "0xC4F458")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC4FE98", Offset = "0xC4FE98", VA = "0xC4FE98")]
	public BallTrail()
	{
	}
}
[Token(Token = "0x20000AF")]
public class BallVisualBlender : MonoBehaviour
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light _ballLight;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ball _myBall;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _chargeAmount;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _chargeAmountVel;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _powerShotAmount;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _powerShotAmountVel;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _offAmount;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _offAmountVel;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject materialsSetupRoot;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BallBlendedMaterial[] _materialBlenders;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animation _animation;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Ball Velocity Effects")]
	public Transform _ballVelocityReferenceTransform;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _plowingMinVelScale;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _plowingMaxVelScale;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _smoothBallVelocityDuration;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Renderer[] showOnlyWhenCloseToPlayer;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Wrecking Ball")]
	public GameObject wreckingBallRoot;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material wreckingBallP1Material;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material wreckingBallP2Material;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<MeshRenderer> wreckingBallMeshRenderers;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _smoothBallVel;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 _smoothBallVel_Vel;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _ballVelParamShaderID;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int _ballPlowingShaderID;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int _ballPositionID;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _ballColorID;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _lastAnimationValue;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC4FEB8", Offset = "0xC4FEB8", VA = "0xC4FEB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC4FFB0", Offset = "0xC4FFB0", VA = "0xC4FFB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC507B4", Offset = "0xC507B4", VA = "0xC507B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC50950", Offset = "0xC50950", VA = "0xC50950")]
	private void SampleAnimation(float value)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC4FFD0", Offset = "0xC4FFD0", VA = "0xC4FFD0")]
	private void FirstTimeSetup()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC5057C", Offset = "0xC5057C", VA = "0xC5057C")]
	public void setupVisualMode_Editor(BallBlendedMaterial.BallVisualMode mode, bool isPlayer2)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xC509D4", Offset = "0xC509D4", VA = "0xC509D4")]
	private void blendVisuals(bool isPlayer2 = false)
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC51588", Offset = "0xC51588", VA = "0xC51588")]
	private void updateShowOnlyWhenCloseToPlayer()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC507C4", Offset = "0xC507C4", VA = "0xC507C4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xC51840", Offset = "0xC51840", VA = "0xC51840")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xC5165C", Offset = "0xC5165C", VA = "0xC5165C")]
	private void UpdateWreckingBall(bool isBlueBall)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xC51A0C", Offset = "0xC51A0C", VA = "0xC51A0C")]
	public BallVisualBlender()
	{
	}
}
[Token(Token = "0x20000B0")]
public class Ball : MonoBehaviour
{
	[Token(Token = "0x20000B1")]
	private struct Plow
	{
		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool active;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 up;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timer;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 additionalPotential;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float planck;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float initSpeed;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 pos;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 smoothPos;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 smoothPosVelocity;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 planeNormal;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 lastRayOrigin;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float numBumpersHit;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float currentSpeed;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speedFactor;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool canHitSameBrickAgain;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int postBlasterCount;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int currentHextrudeLayer;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int lowestHextrudeLayer;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 rotatingVelocity;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 rotatingForce;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool wasPulledOnStart;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private PlowableSurface _currentPlowableSurface;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Collider _lastCollider;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Quaternion ROTATE_90_AROUND_Y;

		[Token(Token = "0x4000593")]
		public const float DIST_FROM_COLLIDER = 0.1f;

		[Token(Token = "0x4000594")]
		public const float DIR_BY_VELOCITY_ANGLE_MIN = 20f;

		[Token(Token = "0x4000595")]
		public const float DIR_BY_VELOCITY_ANGLE_MAX = 70f;

		[Token(Token = "0x4000596")]
		public const float SMOOTH_TIME = 0.02f;

		[Token(Token = "0x170000F1")]
		public PlowableSurface currentPlowableSurface
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0xCFCAAC", Offset = "0xCFCAAC", VA = "0xCFCAAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		public Collider lastCollider
		{
			[Token(Token = "0x6000542")]
			[Address(RVA = "0xCFCAB4", Offset = "0xCFCAB4", VA = "0xCFCAB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000543")]
			[Address(RVA = "0xCFCABC", Offset = "0xCFCABC", VA = "0xCFCABC")]
			set
			{
			}
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xCFCBBC", Offset = "0xCFCBBC", VA = "0xCFCBBC")]
		public void start()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B2")]
	public class Dbg
	{
		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minForwardVelocity;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxForwardVelocity;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode randomVelocityKeyCode;

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xCFCC3C", Offset = "0xCFCC3C", VA = "0xCFCC3C")]
		public Dbg()
		{
		}
	}

	[Token(Token = "0x20000B3")]
	public class BallCollision
	{
		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 contactPoint;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ball ball;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 impactVelocity;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float impactStrength;

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xCFCC58", Offset = "0xCFCC58", VA = "0xCFCC58")]
		public BallCollision()
		{
		}
	}

	[Token(Token = "0x20000B4")]
	[CompilerGenerated]
	private sealed class <DelayCollisionCo>d__182 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball <>4__this;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxRadius;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minDist;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeDelay;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <lastPos>5__2;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <dist>5__3;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timer>5__4;

		[Token(Token = "0x170000F3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600054B")]
			[Address(RVA = "0xCFCF20", Offset = "0xCFCF20", VA = "0xCFCF20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600054D")]
			[Address(RVA = "0xCFCF68", Offset = "0xCFCF68", VA = "0xCFCF68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xCFCC60", Offset = "0xCFCC60", VA = "0xCFCC60")]
		[DebuggerHidden]
		public <DelayCollisionCo>d__182(int <>1__state)
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xCFCC88", Offset = "0xCFCC88", VA = "0xCFCC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xCFCC8C", Offset = "0xCFCC8C", VA = "0xCFCC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xCFCF28", Offset = "0xCFCF28", VA = "0xCFCF28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B5")]
	[CompilerGenerated]
	private sealed class <TimerSoundCo>d__221 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball <>4__this;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <interval>5__2;

		[Token(Token = "0x170000F5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000551")]
			[Address(RVA = "0xCFD2A4", Offset = "0xCFD2A4", VA = "0xCFD2A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0xCFD2EC", Offset = "0xCFD2EC", VA = "0xCFD2EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xCFCFC4", Offset = "0xCFCFC4", VA = "0xCFCFC4")]
		[DebuggerHidden]
		public <TimerSoundCo>d__221(int <>1__state)
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xCFCFEC", Offset = "0xCFCFEC", VA = "0xCFCFEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xCFCFF0", Offset = "0xCFCFF0", VA = "0xCFCFF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0xCFD2AC", Offset = "0xCFD2AC", VA = "0xCFD2AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B6")]
	[CompilerGenerated]
	private sealed class <enterPortalCo>d__251 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball <>4__this;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Portal portal;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeInPortal>5__2;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <portalDuration>5__3;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <portalPos>5__4;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <portalDir>5__5;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Line <portalLine>5__6;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <forwardStregth>5__7;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <centricStrength>5__8;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float <angularStrength>5__9;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float <baseDrag>5__10;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <antiFleeDrag>5__11;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <dt>5__12;

		[Token(Token = "0x170000F7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xCFE2B4", Offset = "0xCFE2B4", VA = "0xCFE2B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000559")]
			[Address(RVA = "0xCFE2FC", Offset = "0xCFE2FC", VA = "0xCFE2FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xCFD348", Offset = "0xCFD348", VA = "0xCFD348")]
		[DebuggerHidden]
		public <enterPortalCo>d__251(int <>1__state)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xCFD370", Offset = "0xCFD370", VA = "0xCFD370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0xCFD374", Offset = "0xCFD374", VA = "0xCFD374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0xCFE2BC", Offset = "0xCFE2BC", VA = "0xCFE2BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <exitPortalCo>d__253 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Portal portal;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Ball <>4__this;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <exitPortalPosition>5__2;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <exitVelocity>5__3;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 <enterPortalSide>5__4;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 <enterPortalUp>5__5;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform <enterBall>5__6;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Line <enterPortalLine>5__7;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Bezier.BezierSegment <segment>5__8;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float <dt>5__9;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float <timeInPortal>5__10;

		[Token(Token = "0x170000F9")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600055D")]
			[Address(RVA = "0xCFF1AC", Offset = "0xCFF1AC", VA = "0xCFF1AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600055F")]
			[Address(RVA = "0xCFF1F4", Offset = "0xCFF1F4", VA = "0xCFF1F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0xCFE358", Offset = "0xCFE358", VA = "0xCFE358")]
		[DebuggerHidden]
		public <exitPortalCo>d__253(int <>1__state)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0xCFE380", Offset = "0xCFE380", VA = "0xCFE380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0xCFE384", Offset = "0xCFE384", VA = "0xCFE384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0xCFF1B4", Offset = "0xCFF1B4", VA = "0xCFF1B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Plow _plow;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _keyboardShot_setPlowDirection;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector2 _keyboardShot_initMousePos;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _debugPlowAngle;

	[Token(Token = "0x4000512")]
	private const float MAX_ANGLE_FROM_WALL_NORMAL = 60f;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Dbg debug;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool useGravity;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform player;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Vector3 spawnOffset;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Ball current;

	[NonSerialized]
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float _radius;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float minPitch;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float maxPitch;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 startingLocalScale;

	[NonSerialized]
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BallTrail[] _ballTrails;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ShotInfo _currentShot;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _hangingInMidAir;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float _hangingInMidAirTimer;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _enteringPortal;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	private bool _exitingPortal;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _racketLayerMask;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Transform _racketCollider;

	[Token(Token = "0x4000526")]
	private const int HISTORY_SIZE = 5;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private CyclicBuffer<Matrix4x4> _racketTransformHistory;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private CyclicBuffer<Vector3> _ballPositionHistory;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _pullRailParam;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private PullRail _pullRail;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _pullRailExitSoundPlayed;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool _goToPositionMode;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float _goToPositionRailParam;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _goToPositionCurveSpeed;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float _goToPositionSpringK;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float _goToPositionSpringD;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float _goToPositionCurveExtraDamp;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private BezierCurve _goToPositionCurve;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Vector3 _goToPosition;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private bool _isPowerShot;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private float _powerShotPower;

	[NonSerialized]
	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Rigidbody _rigidBody;

	[NonSerialized]
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public SphereCollider _collider;

	[NonSerialized]
	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public BallSwitchEffect _switchEffect;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Vector3 _lastPos;

	[NonSerialized]
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Vector3 _velocity;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float _maxAngularVelocity;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float _bounceAngularVelocityAbsorbed;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float _bounceAngularVelocityTranslatedToVelocity;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private float _timeSinceLastRacketCollision;

	[NonSerialized]
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool _lastHitWasRacket;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private float _averageTimeBetweenRacketHits;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private int _numRacketHitsInAverage;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool _silenced;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Camera _camera;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private GameObject _collidedGameObject;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Vector3 _contactPointPoint;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private Vector3 _contactPointNormal;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool _hitRacket;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x241")]
	private bool _hitBrick;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private HexTrudeManager.Arc _collidedSideWall;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private Brick _collidedBrick;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private Target _collidedBrickTarget;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Vector3 _impactSelfVelocity;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	private Vector3 _impactVelocity;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private Mobile _colliderMobile;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private bool _needToStartTrailSession;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	private Vector3 _preBounceVelocity;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private float _ballImpactFactor;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	private bool _ballImpactFadingOut;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private float _ballImpactFactorVel;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private float _ballImpactFactorTime;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private bool _hitRacketSinceTookControl_MP;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	private bool _missedSinceTookControl_MP;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
	private bool _inPlayArea_MP;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A3")]
	private bool _outgoingBall_MP;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject _RightRacket;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public GameObject iccicle;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[Header("Fix Dardale")]
	public float _fixDardaleMaxDist;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public float _fixDardalePower;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float _timeAlive;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	private LayerMask _plowLayerMask;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private PlayerID _trailPlayerID;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private TrailMaker.TrailType _trailType;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private float _timeSinceLastRespawn;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float _timeSinceFixDardaleStarted;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private CoroutineHandle? _delayedCollisionCo;

	[Token(Token = "0x4000566")]
	private const float _SKIP_RACKET_COLLISION_DIST_SQ = 4f;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private int _newPosesCounter;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool _timerSoundPlaying;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private CoroutineHandle _timerSoundCo;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private int _prevMPState;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private readonly BallCollision _collisionInfo;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private string _coroutinesTag;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private Vector3 _lastMousePoint;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	private Vector3 _lastMouseDir;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Vector3 effectiveVelocityReadOnly;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private Vector3 _lastValidPos;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private Vector3 _lastValidVel;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private int _stayFramesCount;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool _ignoreOnCollisionStay;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	public bool returnBallToPlayerOnNextCollision;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	private int _pullingBallIntoFloorCounter;

	[Token(Token = "0x4000579")]
	private const int MAX_PULLING_BALL_INTO_FLOOR = 10;

	[Token(Token = "0x170000D6")]
	public bool plowing
	{
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xC514F8", Offset = "0xC514F8", VA = "0xC514F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D7")]
	public float plowRemainingTimer
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xC51500", Offset = "0xC51500", VA = "0xC51500")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D8")]
	public Vector3 plowTargetNormal
	{
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xC51D1C", Offset = "0xC51D1C", VA = "0xC51D1C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000D9")]
	public Vector3 plowVelocity
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xC51D28", Offset = "0xC51D28", VA = "0xC51D28")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000DA")]
	public Collider plowLastCollider
	{
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xC51D34", Offset = "0xC51D34", VA = "0xC51D34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DB")]
	public SpatializedAudio _ballLoopAudio
	{
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xC57B8C", Offset = "0xC57B8C", VA = "0xC57B8C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xC57B94", Offset = "0xC57B94", VA = "0xC57B94")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public SpatializedAudio _plowLoopAudio
	{
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xC57BA4", Offset = "0xC57BA4", VA = "0xC57BA4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xC57BAC", Offset = "0xC57BAC", VA = "0xC57BAC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public float gravityCoeff
	{
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xC57BBC", Offset = "0xC57BBC", VA = "0xC57BBC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000DE")]
	public byte damage
	{
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xC57C64", Offset = "0xC57C64", VA = "0xC57C64")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000DF")]
	public ShotInfo currentShot
	{
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xC57CCC", Offset = "0xC57CCC", VA = "0xC57CCC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xC545A0", Offset = "0xC545A0", VA = "0xC545A0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public bool exitingPortal
	{
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xC57DF4", Offset = "0xC57DF4", VA = "0xC57DF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E1")]
	public float PullRailParam
	{
		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xC57DFC", Offset = "0xC57DFC", VA = "0xC57DFC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E2")]
	public bool isInPullRail
	{
		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xC57E04", Offset = "0xC57E04", VA = "0xC57E04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E3")]
	public bool isCharged
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xC51574", Offset = "0xC51574", VA = "0xC51574")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E4")]
	public int chargeCounter
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xC57E64", Offset = "0xC57E64", VA = "0xC57E64")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E5")]
	public bool isPowerShot
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xC57E7C", Offset = "0xC57E7C", VA = "0xC57E7C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xC540CC", Offset = "0xC540CC", VA = "0xC540CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public float powerShotPower
	{
		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xC57E84", Offset = "0xC57E84", VA = "0xC57E84")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000E7")]
	public Vector3 normalizedVelocity
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xC57E8C", Offset = "0xC57E8C", VA = "0xC57E8C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000E8")]
	public Vector3 angularVelocity
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xC57F18", Offset = "0xC57F18", VA = "0xC57F18")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000E9")]
	public float visibilityParam
	{
		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xC57F28", Offset = "0xC57F28", VA = "0xC57F28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000EA")]
	public Target collidedBrickTarget
	{
		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xC58094", Offset = "0xC58094", VA = "0xC58094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EB")]
	public Vector3 preBounceVelocity
	{
		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xC5809C", Offset = "0xC5809C", VA = "0xC5809C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000EC")]
	public Vector3 position
	{
		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xC580AC", Offset = "0xC580AC", VA = "0xC580AC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170000ED")]
	public bool isBlueBall
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xC515FC", Offset = "0xC515FC", VA = "0xC515FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000EE")]
	public Player ControllingPlayer
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xC51938", Offset = "0xC51938", VA = "0xC51938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000EF")]
	public bool ShotClockPassed
	{
		[Token(Token = "0x600050F")]
		[Address(RVA = "0xC5954C", Offset = "0xC5954C", VA = "0xC5954C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F0")]
	public float ShotClockTime
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0xC5D114", Offset = "0xC5D114", VA = "0xC5D114")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0xC5D11C", Offset = "0xC5D11C", VA = "0xC5D11C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event Action plowStart
	{
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xC51A34", Offset = "0xC51A34", VA = "0xC51A34")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xC51AEC", Offset = "0xC51AEC", VA = "0xC51AEC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event Action plowEnd
	{
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xC51BA4", Offset = "0xC51BA4", VA = "0xC51BA4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xC51C60", Offset = "0xC51C60", VA = "0xC51C60")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event Action<Ball> onBallTakeOwnership
	{
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xC5D450", Offset = "0xC5D450", VA = "0xC5D450")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xC5D520", Offset = "0xC5D520", VA = "0xC5D520")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event Action<Ball> onBallGiveOwnership
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xC5D970", Offset = "0xC5D970", VA = "0xC5D970")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xC5DA40", Offset = "0xC5DA40", VA = "0xC5DA40")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xC51D3C", Offset = "0xC51D3C", VA = "0xC51D3C")]
	private void startPlowing(bool remoteUpdate = false)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xC52A0C", Offset = "0xC52A0C", VA = "0xC52A0C")]
	private void debugPlowDirection()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xC533D8", Offset = "0xC533D8", VA = "0xC533D8")]
	private void updatePlowDirectionForNewTarget()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xC53710", Offset = "0xC53710", VA = "0xC53710")]
	public void stopPlowing(bool ballReturnToPlayer, bool canGiveOwnership = true, bool returnBallDirectlyToHand = false, bool remoteUpdate = false)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xC545E8", Offset = "0xC545E8", VA = "0xC545E8")]
	public void slide()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xC53A3C", Offset = "0xC53A3C", VA = "0xC53A3C")]
	private void plowHitBrick(Brick brick)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xC54DDC", Offset = "0xC54DDC", VA = "0xC54DDC")]
	public float GetPlowPitchBoost()
	{
		return default(float);
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xC54E00", Offset = "0xC54E00", VA = "0xC54E00")]
	private void blastHitToNeighbor(HexTrudeManager.Arc arc)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xC55060", Offset = "0xC55060", VA = "0xC55060")]
	private bool handleCollideWithSideWall(Vector3 pos, bool directHit = false)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xC55CE8", Offset = "0xC55CE8", VA = "0xC55CE8")]
	private void applyForceOnPlow()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xC55FB8", Offset = "0xC55FB8", VA = "0xC55FB8")]
	private void updatePlowRotation(float dt)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xC56430", Offset = "0xC56430", VA = "0xC56430")]
	private bool plowRaycast(float dt, out RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xC56680", Offset = "0xC56680", VA = "0xC56680")]
	private void plowStep(float dt)
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xC57800", Offset = "0xC57800", VA = "0xC57800")]
	private void plowUpdate()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xC57CD4", Offset = "0xC57CD4", VA = "0xC57CD4")]
	public void updateTrailName(bool forced = false)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xC580C8", Offset = "0xC580C8", VA = "0xC580C8")]
	public void Rotate(Quaternion rot)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xC583AC", Offset = "0xC583AC", VA = "0xC583AC")]
	public void ResetTrails()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xC4FE78", Offset = "0xC4FE78", VA = "0xC4FE78")]
	public bool IsDuringPortal()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xC58318", Offset = "0xC58318", VA = "0xC58318")]
	public bool IsInControlledMotion()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xC58408", Offset = "0xC58408", VA = "0xC58408")]
	public void LeavePullRail()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xC584F4", Offset = "0xC584F4", VA = "0xC584F4")]
	private void push(Vector3 dir)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xC514DC", Offset = "0xC514DC", VA = "0xC514DC")]
	public float GetImpactFactor()
	{
		return default(float);
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xC52D50", Offset = "0xC52D50", VA = "0xC52D50")]
	private void CheckOutOfBounds(bool forPlowing = false)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xC58604", Offset = "0xC58604", VA = "0xC58604")]
	private void keyboardShortcuts()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xC58B98", Offset = "0xC58B98", VA = "0xC58B98")]
	public void limitVelocity(float max)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xC58E18", Offset = "0xC58E18", VA = "0xC58E18")]
	private void updatePitch()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xC59004", Offset = "0xC59004", VA = "0xC59004")]
	private void FixDardale()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xC536FC", Offset = "0xC536FC", VA = "0xC536FC")]
	public void setImpactFactor(float factor, bool withFadeOut = false)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xC544DC", Offset = "0xC544DC", VA = "0xC544DC")]
	private void startImpactFadeOut(float overrideImpactFactor = -1f)
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xC540EC", Offset = "0xC540EC", VA = "0xC540EC")]
	public void returnBallToPlayer(bool willTransferOwnershipInMultiplayer = false, bool forceReturn = false, bool portalReturn = false, bool returnBallDirectlyToHand = false)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xC595D8", Offset = "0xC595D8", VA = "0xC595D8")]
	private void StopDelayedCollision()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xC543C8", Offset = "0xC543C8", VA = "0xC543C8")]
	private void DelayCollision(float minDist = -1f, float maxRadius = 10f, float timeDelay = 0.2f)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xC59678", Offset = "0xC59678", VA = "0xC59678")]
	[IteratorStateMachine(typeof(<DelayCollisionCo>d__182))]
	private IEnumerator<float> DelayCollisionCo(float minDist, float maxRadius, float timeDelay)
	{
		return null;
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xC59710", Offset = "0xC59710", VA = "0xC59710")]
	private void SetColliderState(bool enabled)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xC59744", Offset = "0xC59744", VA = "0xC59744")]
	public void DeterminePowershot(float ballSpeed)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC59C50", Offset = "0xC59C50", VA = "0xC59C50")]
	private void bounceFromPlane(Vector3 PlaneNormal, Vector3 PlanePoint, float fBounciness = 1f, [Optional] Vector3 PlaneVelocity)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC59DA8", Offset = "0xC59DA8", VA = "0xC59DA8")]
	private void bounceBack(bool bCollisionStay = false)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xC59FB4", Offset = "0xC59FB4", VA = "0xC59FB4")]
	public void PlayWallHitSound(bool bSendToRemote = true)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC5A2AC", Offset = "0xC5A2AC", VA = "0xC5A2AC")]
	private void postBounceResponse_Static()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC5A5B4", Offset = "0xC5A5B4", VA = "0xC5A5B4")]
	public void enterPullRail(PullRail p)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC5A74C", Offset = "0xC5A74C", VA = "0xC5A74C")]
	private void racketCollisionData(RaycastHit hitInfo)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC5A868", Offset = "0xC5A868", VA = "0xC5A868")]
	private void onNewPoseApplied()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC5A878", Offset = "0xC5A878", VA = "0xC5A878")]
	private void racketCollisionTest()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC5BA70", Offset = "0xC5BA70", VA = "0xC5BA70")]
	private void onHandsSwitched()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC5B264", Offset = "0xC5B264", VA = "0xC5B264")]
	private void newRacketBallImpactStuff(Vector3 racketForward, bool foreHandShot)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xC5BAE4", Offset = "0xC5BAE4", VA = "0xC5BAE4")]
	public void doHitByRacketStuff(Player hittingPlayer, bool foreHandShot = true, [Optional] Vector3? normalizedVelocityOverride)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xC5BF78", Offset = "0xC5BF78", VA = "0xC5BF78")]
	public Ball instantiate()
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC5C120", Offset = "0xC5C120", VA = "0xC5C120")]
	public void FirstTimeInit()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xC5BFAC", Offset = "0xC5BFAC", VA = "0xC5BFAC")]
	public void reset()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xC5C4E8", Offset = "0xC5C4E8", VA = "0xC5C4E8")]
	private void free()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xC5C568", Offset = "0xC5C568", VA = "0xC5C568")]
	public void deactivate()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xC5C58C", Offset = "0xC5C58C", VA = "0xC5C58C")]
	public Vector3 getRespawnPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xC58AAC", Offset = "0xC58AAC", VA = "0xC58AAC")]
	public void respawn(bool shouldReset = true)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xC5C7B0", Offset = "0xC5C7B0", VA = "0xC5C7B0")]
	public void respawn(Vector3 pos, bool newSession = true, bool shouldReset = true)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xC5C970", Offset = "0xC5C970", VA = "0xC5C970")]
	private void GetSpawnPosAndForward(out Vector3 pos, out Vector3 forward)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xC58AD8", Offset = "0xC58AD8", VA = "0xC58AD8")]
	private void respawnAndPushForward(float powerShotScale = 1f, bool foreHand = true)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xC5CA5C", Offset = "0xC5CA5C", VA = "0xC5CA5C")]
	public void respawnAndPush(Player player, Vector3 pos, Vector3 dir, [Optional] Vector3? plowDirOverride, float powerShotScale = 1f, bool foreHand = true)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xC5C484", Offset = "0xC5C484", VA = "0xC5C484")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xC5D124", Offset = "0xC5D124", VA = "0xC5D124")]
	private void OnFloaterTaken(Player p)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xC5D1E0", Offset = "0xC5D1E0", VA = "0xC5D1E0")]
	private void UpdateShotTime()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xC5D2AC", Offset = "0xC5D2AC", VA = "0xC5D2AC")]
	private void PlayTimerSound()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xC5D330", Offset = "0xC5D330", VA = "0xC5D330")]
	[IteratorStateMachine(typeof(<TimerSoundCo>d__221))]
	private IEnumerator<float> TimerSoundCo()
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xC5D3A4", Offset = "0xC5D3A4", VA = "0xC5D3A4")]
	private bool MuteShotClock()
	{
		return default(bool);
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xC5D5F0", Offset = "0xC5D5F0", VA = "0xC5D5F0")]
	public void TakeOwnership_Multiplayer()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xC5DB10", Offset = "0xC5DB10", VA = "0xC5DB10")]
	public void GiveOwnership_Multiplayer()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xC5DD48", Offset = "0xC5DD48", VA = "0xC5DD48")]
	public void SetVelocities_Multiplayer(Vector3 vel, Vector3 angularVel)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xC5E078", Offset = "0xC5E078", VA = "0xC5E078")]
	public void SetState_Multiplayer(int state, Vector3 auxV1, Vector3 auxV2)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xC5E334", Offset = "0xC5E334", VA = "0xC5E334")]
	private void FixedUpdate_MP()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xC5E700", Offset = "0xC5E700", VA = "0xC5E700")]
	public void contactStayResponse_Racket()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xC5E9F4", Offset = "0xC5E9F4", VA = "0xC5E9F4")]
	private void contactResponse_PushAway()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xC5EA84", Offset = "0xC5EA84", VA = "0xC5EA84")]
	private void WreckingBall_hitCloseByBricks()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xC5EE94", Offset = "0xC5EE94", VA = "0xC5EE94")]
	public void contactResponse_Standard()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xC5F0F8", Offset = "0xC5F0F8", VA = "0xC5F0F8")]
	public void contactResponse_SideWall()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xC54C64", Offset = "0xC54C64", VA = "0xC54C64")]
	public void contactResponse_Brick()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xC5F344", Offset = "0xC5F344", VA = "0xC5F344")]
	private void initCollisionData(Collision collision)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xC54F48", Offset = "0xC54F48", VA = "0xC54F48")]
	private void initCollisionData(Brick brick, Vector3 point)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xC55AB0", Offset = "0xC55AB0", VA = "0xC55AB0")]
	private void initCollisionData(RaycastHit hit, Brick brick, Collider collider, bool obtainSideWall = false)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xC5475C", Offset = "0xC5475C", VA = "0xC5475C")]
	private void calcImpactVelocity()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xC549C8", Offset = "0xC549C8", VA = "0xC549C8")]
	private void broadcastCollision()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xC5F630", Offset = "0xC5F630", VA = "0xC5F630")]
	public void enterPortal(Portal portal)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xC5F5D0", Offset = "0xC5F5D0", VA = "0xC5F5D0")]
	private void fixPortalEntryCourse()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xC5F820", Offset = "0xC5F820", VA = "0xC5F820")]
	[IteratorStateMachine(typeof(<enterPortalCo>d__251))]
	private IEnumerator<float> enterPortalCo(Portal portal)
	{
		return null;
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xC5F8B0", Offset = "0xC5F8B0", VA = "0xC5F8B0")]
	public void exitPortal(Portal portal)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xC5FA0C", Offset = "0xC5FA0C", VA = "0xC5FA0C")]
	[IteratorStateMachine(typeof(<exitPortalCo>d__253))]
	private IEnumerator<float> exitPortalCo(Portal portal)
	{
		return null;
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xC5FA9C", Offset = "0xC5FA9C", VA = "0xC5FA9C")]
	public void GoToLocation(Vector3 targetPos, float springK = 250f, float springD = 5f)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xC5FAE8", Offset = "0xC5FAE8", VA = "0xC5FAE8")]
	public void GoToPositionCurve(BezierCurve targetCurve, float pathSpeed = 1f, float springK = 250f, float springD = 5f, float endOfCurveExtraDamp = 50f)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xC5FBBC", Offset = "0xC5FBBC", VA = "0xC5FBBC")]
	public void StopGoToLocation()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xC5FBD4", Offset = "0xC5FBD4", VA = "0xC5FBD4")]
	public bool IsInGoToLocationMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xC5FBDC", Offset = "0xC5FBDC", VA = "0xC5FBDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xC5FBE0", Offset = "0xC5FBE0", VA = "0xC5FBE0")]
	private void UpdateImpactFactor()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xC5FCC4", Offset = "0xC5FCC4", VA = "0xC5FCC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xC6032C", Offset = "0xC6032C", VA = "0xC6032C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xC5DFC0", Offset = "0xC5DFC0", VA = "0xC5DFC0")]
	private bool isInvalid(Vector3 v)
	{
		return default(bool);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xC6121C", Offset = "0xC6121C", VA = "0xC6121C")]
	private void fixNanBall()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xC612D0", Offset = "0xC612D0", VA = "0xC612D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xC61380", Offset = "0xC61380", VA = "0xC61380")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xC6157C", Offset = "0xC6157C", VA = "0xC6157C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xC61890", Offset = "0xC61890", VA = "0xC61890")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xC61A80", Offset = "0xC61A80", VA = "0xC61A80")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xC621C8", Offset = "0xC621C8", VA = "0xC621C8")]
	public Ball()
	{
	}
}
[Token(Token = "0x20000B8")]
public class GravitySling : MonoBehaviour
{
	[Token(Token = "0x20000B9")]
	private class Spring
	{
		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 inHandle;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 outHandle;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _weight;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _pos;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _velocity;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _initialized;

		[Token(Token = "0x170000FC")]
		public Vector3 velocity
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0xD01D08", Offset = "0xD01D08", VA = "0xD01D08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xD019E8", Offset = "0xD019E8", VA = "0xD019E8")]
		public Spring(float p)
		{
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xD0159C", Offset = "0xD0159C", VA = "0xD0159C")]
		public void reset()
		{
		}

		[Token(Token = "0x6000574")]
		[Address(RVA = "0xD003D8", Offset = "0xD003D8", VA = "0xD003D8")]
		public void updateHandles(Vector3 prevPos, Vector3 nextPos)
		{
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xD000A0", Offset = "0xD000A0", VA = "0xD000A0")]
		public void update(Vector3 target, float dt)
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xCFFCCC", Offset = "0xCFFCCC", VA = "0xCFFCCC")]
		public void Rotate(Quaternion rot, bool ignoreFOV)
		{
		}
	}

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GravitySling inst;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Springs")]
	public int numSprings;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float springStrength;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float springDrag;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Line")]
	public int lengthSamples;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float drawSpeed;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ballVelocityFalloffDist;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ballVelocityMultiplier;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ballLastForceMultiplier;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float forwardTangentMultiplier;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Helix")]
	public int numPointsHelix;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float radius;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float noiseScale;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noiseAmplitude;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float noiseFrequency;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float frequency;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float speed;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float squash;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float widthHelix;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxLength;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Header("Glow")]
	public int numPointsGlow;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float widthGlow;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	[Header("Tear")]
	public float tearGraceTimeMultiplier;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float tearGraceTime;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float tearDuration;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float tearAmplitude;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tearFrequency;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float tearSpeed;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Setup")]
	private LineRenderer lineHelix;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer lineGlow;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int curUsedLineRenderers;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LineRenderer[] lineHelixCache;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LineRenderer[] lineGlowCache;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material helixMaterialP1;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material helixMaterialP2;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material glowMaterialP1;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material glowMaterialP2;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Ball _ball;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform _racketCenter;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bezier.BezierSegment _segment;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Bezier.BezierSegment _springSegment;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Spring[] _springs;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _beginParam;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float _endParam;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _radius;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _frequency;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _curDeltaTime;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _curUnscaledDeltaTime;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _curTime;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private PlayerID _playerID;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Player _player;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RacketSling _sling;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3[] _pointsHelix;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3[] _pointsGlow;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _on;

	[Token(Token = "0x170000FB")]
	public bool isOn
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xCFF250", Offset = "0xCFF250", VA = "0xCFF250")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000B")]
	public static event Action<bool> onSlingBegin
	{
		[Token(Token = "0x600056A")]
		[Address(RVA = "0xD010F8", Offset = "0xD010F8", VA = "0xD010F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600056B")]
		[Address(RVA = "0xD011C8", Offset = "0xD011C8", VA = "0xD011C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xCFF258", Offset = "0xCFF258", VA = "0xCFF258")]
	private static Vector3 noise(Vector3 v, float frequency, float amplitude)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xCFF2E8", Offset = "0xCFF2E8", VA = "0xCFF2E8")]
	private static Vector3 fractalNoise(float t, float frequency, float amplitude, int octaves = 3, float lacunarity = 2f, float gain = 0.5f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xCFF3AC", Offset = "0xCFF3AC", VA = "0xCFF3AC")]
	private void updatePoints()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xCFFAE4", Offset = "0xCFFAE4", VA = "0xCFFAE4")]
	public void Rotate(Quaternion rot, bool ignoreFOV)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xCFFE78", Offset = "0xCFFE78", VA = "0xCFFE78")]
	public Vector3 getBallSpringPull()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xCFFEB8", Offset = "0xCFFEB8", VA = "0xCFFEB8")]
	private void updateSprings()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xD00424", Offset = "0xD00424", VA = "0xD00424")]
	private Vector3 getSpringPos(float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xD005B0", Offset = "0xD005B0", VA = "0xD005B0")]
	private void drawSling()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xD00F1C", Offset = "0xD00F1C", VA = "0xD00F1C")]
	private void updateEndParams()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xD01298", Offset = "0xD01298", VA = "0xD01298")]
	public void begin(bool opponentBall = false, float graceTimeMult = 1f)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xD015A4", Offset = "0xD015A4", VA = "0xD015A4")]
	public void stop(bool opponentBall = false)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xD015E4", Offset = "0xD015E4", VA = "0xD015E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xD01A24", Offset = "0xD01A24", VA = "0xD01A24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xD01C88", Offset = "0xD01C88", VA = "0xD01C88")]
	public GravitySling()
	{
	}
}
[Token(Token = "0x20000BA")]
public class TrailMaker : MonoBehaviour
{
	[Token(Token = "0x20000BB")]
	private struct HistoryPoint
	{
		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 velocity;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distFromPrevPoint;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 noisePosition;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float noiseStrength;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _noise;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _length;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _position;

		[Token(Token = "0x170000FD")]
		public Vector3 position
		{
			[Token(Token = "0x6000585")]
			[Address(RVA = "0xD02FF4", Offset = "0xD02FF4", VA = "0xD02FF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000586")]
			[Address(RVA = "0xD03000", Offset = "0xD03000", VA = "0xD03000")]
			set
			{
			}
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xD03014", Offset = "0xD03014", VA = "0xD03014")]
		private void calculateNoise()
		{
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xD03084", Offset = "0xD03084", VA = "0xD03084")]
		public void update(float dt)
		{
		}
	}

	[Token(Token = "0x20000BC")]
	private class Trail
	{
		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int index;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numPoints;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float length;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float startParam;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float endParam;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TrailDef _trailDef;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer _line;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] _points;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color _debugColor;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GradientColorKey[] _colorKeys;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GradientAlphaKey[] _alphaKeys;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Gradient _gradient;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color _glowColor;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Renderer _glow;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _glowStrength;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _glowStrengthVelocity;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Ball _ball;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TrailSession _session;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _startSpeed;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _endSpeed;

		[Token(Token = "0x170000FE")]
		public TrailDef trailDef
		{
			[Token(Token = "0x6000589")]
			[Address(RVA = "0xD030C0", Offset = "0xD030C0", VA = "0xD030C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600058A")]
			[Address(RVA = "0xD030C8", Offset = "0xD030C8", VA = "0xD030C8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		private Color color
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xD0315C", Offset = "0xD0315C", VA = "0xD0315C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xD03218", Offset = "0xD03218", VA = "0xD03218")]
		public void init(Ball ball, TrailSession session, TrailDef def)
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xD03750", Offset = "0xD03750", VA = "0xD03750")]
		private void reset()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xD037CC", Offset = "0xD037CC", VA = "0xD037CC")]
		private void refreshGradient()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xD03804", Offset = "0xD03804", VA = "0xD03804")]
		public void update()
		{
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xD02BB0", Offset = "0xD02BB0", VA = "0xD02BB0")]
		public void updateEnd()
		{
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xD03BB4", Offset = "0xD03BB4", VA = "0xD03BB4")]
		public void remove()
		{
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xD03C90", Offset = "0xD03C90", VA = "0xD03C90")]
		public void glow()
		{
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xD03ED0", Offset = "0xD03ED0", VA = "0xD03ED0")]
		public void fadeStart(bool on)
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xD03F0C", Offset = "0xD03F0C", VA = "0xD03F0C")]
		public void fadeEnd(bool on)
		{
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xD03F44", Offset = "0xD03F44", VA = "0xD03F44")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xD01DBC", Offset = "0xD01DBC", VA = "0xD01DBC")]
		public Trail()
		{
		}
	}

	[Token(Token = "0x20000BD")]
	private class TrailSession
	{
		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int currentIndex;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HistoryPoint[] history;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Trail currentTrail;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<Trail> _trails;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Trail _firstTrail;

		[Token(Token = "0x17000100")]
		public bool isFree
		{
			[Token(Token = "0x6000597")]
			[Address(RVA = "0xD0407C", Offset = "0xD0407C", VA = "0xD0407C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xD040CC", Offset = "0xD040CC", VA = "0xD040CC")]
		public TrailSession(Ball ball)
		{
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xD04310", Offset = "0xD04310", VA = "0xD04310")]
		public void disconnect()
		{
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xD041C0", Offset = "0xD041C0", VA = "0xD041C0")]
		public void reset(Ball ball)
		{
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xD0431C", Offset = "0xD0431C", VA = "0xD0431C")]
		public void addTrail(Ball ball, TrailDef def, bool crossFade = true)
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xD044A8", Offset = "0xD044A8", VA = "0xD044A8")]
		public void updateHistory(Ball ball, float dt)
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xD04CB0", Offset = "0xD04CB0", VA = "0xD04CB0")]
		public void updateTrails()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xD04F38", Offset = "0xD04F38", VA = "0xD04F38")]
		public void drawGizmos()
		{
		}
	}

	[Token(Token = "0x20000BE")]
	private class BallTrailSessions
	{
		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Ball _ball;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TrailSession> _sessions;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TrailSession current;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _trailAddedInThisFrame;

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xD02454", Offset = "0xD02454", VA = "0xD02454")]
		public BallTrailSessions(Ball ball)
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xD02098", Offset = "0xD02098", VA = "0xD02098")]
		public void pauseSession()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xD022AC", Offset = "0xD022AC", VA = "0xD022AC")]
		public void startSession()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xD025B4", Offset = "0xD025B4", VA = "0xD025B4")]
		public void stopSession()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xD026DC", Offset = "0xD026DC", VA = "0xD026DC")]
		public void addTrail(TrailDef def, bool crossFade = true)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xD02AFC", Offset = "0xD02AFC", VA = "0xD02AFC")]
		public void update(float dt)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xD02E08", Offset = "0xD02E08", VA = "0xD02E08")]
		public void drawGizmos()
		{
		}
	}

	[Token(Token = "0x20000BF")]
	public enum TrailType
	{
		[Token(Token = "0x4000643")]
		Default,
		[Token(Token = "0x4000644")]
		Impact,
		[Token(Token = "0x4000645")]
		Frozen
	}

	[Serializable]
	[Token(Token = "0x20000C0")]
	public class TrailDef
	{
		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerID playerID;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TrailType type;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material material;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float noiseStrength;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float width;

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xD02EEC", Offset = "0xD02EEC", VA = "0xD02EEC")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xD05090", Offset = "0xD05090", VA = "0xD05090")]
		public TrailDef()
		{
		}
	}

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TrailMaker inst;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool active;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int historySize;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int crossFadeGap;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ballVisibilitySmoothTime;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float glowStrenght;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float glowDamp;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debug;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float breakTrailAngle;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minTrailLength;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailDef[] trailDefs;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<Ball, BallTrailSessions> _trailsPerBall;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ball _ball;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _ballVisibility;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _ballVisibilityVelocity;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _dt;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _lineColorID;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _arenaRadiusID;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _ballVisibilityID;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Stack<Trail> _unusedTrails;

	[Token(Token = "0x400061A")]
	private const float EPSILON = 0.0001f;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float timeStep;

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xD01D14", Offset = "0xD01D14", VA = "0xD01D14")]
	private Trail allocateTrail()
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xD01DCC", Offset = "0xD01DCC", VA = "0xD01DCC")]
	private void freeTrail(Trail trail)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xD01E24", Offset = "0xD01E24", VA = "0xD01E24")]
	private TrailDef getTrailDef(PlayerID playerID, TrailType type)
	{
		return null;
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xD01FE4", Offset = "0xD01FE4", VA = "0xD01FE4")]
	public void pauseSession(Ball ball)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xD020DC", Offset = "0xD020DC", VA = "0xD020DC")]
	public void startSession(Ball ball)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xD02500", Offset = "0xD02500", VA = "0xD02500")]
	public void stopSession(Ball ball)
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xD025F8", Offset = "0xD025F8", VA = "0xD025F8")]
	public void addTrail(Ball ball, PlayerID playerID, TrailType type, bool crossFade = true)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xD02724", Offset = "0xD02724", VA = "0xD02724")]
	private void Awake()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xD028A0", Offset = "0xD028A0", VA = "0xD028A0")]
	private void InternalUpdate(float dt)
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xD02BE8", Offset = "0xD02BE8", VA = "0xD02BE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xD02C28", Offset = "0xD02C28", VA = "0xD02C28")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xD02CA4", Offset = "0xD02CA4", VA = "0xD02CA4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xD02E90", Offset = "0xD02E90", VA = "0xD02E90")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xD02FB8", Offset = "0xD02FB8", VA = "0xD02FB8")]
	public TrailMaker()
	{
	}
}
[Token(Token = "0x20000C1")]
public class CinematicCamera : MonoBehaviour
{
	[Token(Token = "0x20000C2")]
	public enum GameStateRelevance
	{
		[Token(Token = "0x4000671")]
		MainMenu,
		[Token(Token = "0x4000672")]
		ArenaIdle,
		[Token(Token = "0x4000673")]
		ArenaDuringPlay,
		[Token(Token = "0x4000674")]
		ArenaAlways
	}

	[Serializable]
	[Token(Token = "0x20000C3")]
	public class SerializableGameStateRelevance : SerializableEnum<GameStateRelevance>
	{
		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xD07888", Offset = "0xD07888", VA = "0xD07888")]
		public SerializableGameStateRelevance()
		{
		}
	}

	[Token(Token = "0x20000C4")]
	public enum PointOfInterest
	{
		[Token(Token = "0x4000676")]
		Ball,
		[Token(Token = "0x4000677")]
		BallPredictedHitPos,
		[Token(Token = "0x4000678")]
		ArenaCenter
	}

	[Token(Token = "0x20000C5")]
	private struct PointSample
	{
		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float sessionTimeWhenScored;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int scoreAmount;
	}

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General")]
	public SerializableGameStateRelevance relevantGameState;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool relevantInSingleplayer;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool relevantInMultiplayer;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool firstPersonCamera;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string _groupId;

	[NonSerialized]
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int _groupIdHash;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Postioning")]
	public PointOfInterest pointOfInterest;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("+/- in degrees")]
	[Range(0f, 180f)]
	public float rotationRandomRange;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Pick Scoring")]
	[Tooltip("Once positioned, what is the angle to the ball from the center of the fov, in degrees")]
	public float extrapolateBallPositionTime;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve angleToBall;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve timeSinceRacketHit;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve timeSinceBallReturnToPlayer;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve timeSinceWallDisconnect;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve timeSinceGutterActivated;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _coolDownTime;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Tooltip("The time window (seconds) that points are looked at for scoring\r\npointsMadeInTimeWindow condition")]
	[Range(0f, 5f)]
	public float pointsTimeWindow;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve pointsMadeInTimeWindow;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve slingUsedDuration;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Out scoring")]
	public AnimationCurve angleToBall_Out;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AnimationCurve timeSinceRacketHit_Out;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve timeSinceBallReturnToPlayer_Out;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve cameraActiveDuration;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float cameraMinDuration;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float cameraMaxDuration;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float currentShotDuration;

	[NonSerialized]
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool thirdPersonCamera;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private ThirdPersonCamera _thirdPersonCamera;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Camera _camera;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Queue<PointSample> _scoreHistory;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform _cameraTransform;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform _transform;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Animator _animator;

	[NonSerialized]
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float _timeSinceCameraWasPicked;

	[NonSerialized]
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float _timeSinceStartedRecording;

	[NonSerialized]
	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float _lastPickScore;

	[NonSerialized]
	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool _cameraActive;

	[Token(Token = "0x17000101")]
	public Camera camera
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xD050F0", Offset = "0xD050F0", VA = "0xD050F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xD050F8", Offset = "0xD050F8", VA = "0xD050F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xD052BC", Offset = "0xD052BC", VA = "0xD052BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xD05350", Offset = "0xD05350", VA = "0xD05350")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xD0545C", Offset = "0xD0545C", VA = "0xD0545C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xD0550C", Offset = "0xD0550C", VA = "0xD0550C")]
	public void AlignWithFirstPerson()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xD055C4", Offset = "0xD055C4", VA = "0xD055C4")]
	public void AlignThirdPerson()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xD05404", Offset = "0xD05404", VA = "0xD05404")]
	private void Reset()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xD0608C", Offset = "0xD0608C", VA = "0xD0608C")]
	public void StartShooting()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xD06250", Offset = "0xD06250", VA = "0xD06250")]
	public void StopShooting()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xD06374", Offset = "0xD06374", VA = "0xD06374")]
	private void RemoveOldScoreSamples()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xD06478", Offset = "0xD06478", VA = "0xD06478")]
	private void onScore(int score, Player p)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xD06564", Offset = "0xD06564", VA = "0xD06564")]
	public float GetPickScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xD07258", Offset = "0xD07258", VA = "0xD07258")]
	public float GetOutScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xD075DC", Offset = "0xD075DC", VA = "0xD075DC")]
	private float CameraActiveScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xD07010", Offset = "0xD07010", VA = "0xD07010")]
	private float PointsEarnedScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xD06B7C", Offset = "0xD06B7C", VA = "0xD06B7C")]
	private float AngleToBallScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xD072AC", Offset = "0xD072AC", VA = "0xD072AC")]
	private float AngleToBallScore_Out()
	{
		return default(float);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xD06DB4", Offset = "0xD06DB4", VA = "0xD06DB4")]
	private float TimeSinceRacketHitScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xD074BC", Offset = "0xD074BC", VA = "0xD074BC")]
	private float TimeSinceRacketHitScore_Out()
	{
		return default(float);
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xD06E44", Offset = "0xD06E44", VA = "0xD06E44")]
	private float TimeSinceBallReturnToPlayerScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xD0754C", Offset = "0xD0754C", VA = "0xD0754C")]
	private float TimeSinceBallReturnToPlayerScore_Out()
	{
		return default(float);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xD06ED4", Offset = "0xD06ED4", VA = "0xD06ED4")]
	private float TimeSinceWallDisconnectScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xD06F64", Offset = "0xD06F64", VA = "0xD06F64")]
	private float TimeSinceCameraWasUsedScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xD06F80", Offset = "0xD06F80", VA = "0xD06F80")]
	private float TimeSinceGutterActivatedScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xD071A8", Offset = "0xD071A8", VA = "0xD071A8")]
	private float SlingDurationScore()
	{
		return default(float);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xD0764C", Offset = "0xD0764C", VA = "0xD0764C")]
	public Vector3 GetBallPredictedHitPos(Ball ball)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xD06888", Offset = "0xD06888", VA = "0xD06888")]
	public bool RePosition()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xD077B0", Offset = "0xD077B0", VA = "0xD077B0")]
	public CinematicCamera()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CinematicCameraManager : MonoBehaviour
{
	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTakeTime;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeStep;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CinematicCamera[] _allCameras;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CinematicCamera _activeCamera;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeSinceLastCameraPick;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeSinceLastTimeStep;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _indifferentHash;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _lastPickedCameraHash;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xD078D0", Offset = "0xD078D0", VA = "0xD078D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xD07954", Offset = "0xD07954", VA = "0xD07954")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xD079E4", Offset = "0xD079E4", VA = "0xD079E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xD079F4", Offset = "0xD079F4", VA = "0xD079F4")]
	private void CheckCameraChange()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xD07AD4", Offset = "0xD07AD4", VA = "0xD07AD4")]
	private void PickCamera()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xD07D74", Offset = "0xD07D74", VA = "0xD07D74")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xD07F4C", Offset = "0xD07F4C", VA = "0xD07F4C")]
	public CinematicCameraManager()
	{
	}
}
[Token(Token = "0x20000C7")]
public class OculusSpectatorCamera : MonoBehaviour
{
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text debugText;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Fov;

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xD07F68", Offset = "0xD07F68", VA = "0xD07F68")]
	public OculusSpectatorCamera()
	{
	}
}
[Token(Token = "0x20000C8")]
public class SimpleStreamingCam : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SimpleStreamingCam inst;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject streamingCam;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isAvailable;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xD07F78", Offset = "0xD07F78", VA = "0xD07F78", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xD07FF8", Offset = "0xD07FF8", VA = "0xD07FF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xD08054", Offset = "0xD08054", VA = "0xD08054")]
	public SimpleStreamingCam()
	{
	}
}
[Token(Token = "0x20000C9")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x20000CA")]
	[CompilerGenerated]
	private sealed class <shakeCo>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ThirdPersonCamera <>4__this;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float strength;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005E4")]
			[Address(RVA = "0xD08F7C", Offset = "0xD08F7C", VA = "0xD08F7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005E6")]
			[Address(RVA = "0xD08FC4", Offset = "0xD08FC4", VA = "0xD08FC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xD086C8", Offset = "0xD086C8", VA = "0xD086C8")]
		[DebuggerHidden]
		public <shakeCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xD08E90", Offset = "0xD08E90", VA = "0xD08E90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xD08E94", Offset = "0xD08E94", VA = "0xD08E94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xD08F84", Offset = "0xD08F84", VA = "0xD08F84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Position")]
	public float pivotHeight;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posSmoothTime;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 targetSmoothTimeRange;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shakeStrength;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shakeDuration;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float centerParam;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float playerLerpSpeed;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Zoom")]
	public float maxAngle;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float zoomSmoothTime;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 radiusRange;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 fovRange;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Debug")]
	public bool debugDraw;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Camera _camera;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _cameraTransform;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _pos;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _velocity;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _lastPos;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _target;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _targetVelocity;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _radius;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _radiusVelocity;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _fov;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _fovVelocity;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _playerParam;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Line _line;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 _offset;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Coroutine _lastShake;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SmoothFloat _pivotHeight;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _selfUpdate;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xD080A8", Offset = "0xD080A8", VA = "0xD080A8")]
	private Player getPlayer(bool useBallDir)
	{
		return null;
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xD08140", Offset = "0xD08140", VA = "0xD08140")]
	private Vector3 getPivot(Player player, float dt, bool useBallDir)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xD055DC", Offset = "0xD055DC", VA = "0xD055DC")]
	public void updateNow()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xD083B4", Offset = "0xD083B4", VA = "0xD083B4")]
	private void onBallHitRacket(ShotInfo shotInfo, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xD08588", Offset = "0xD08588", VA = "0xD08588")]
	private void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xD08590", Offset = "0xD08590", VA = "0xD08590")]
	private void onRoomExplode()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xD08598", Offset = "0xD08598", VA = "0xD08598")]
	private void OnShieldBroken(Target target)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xD0851C", Offset = "0xD0851C", VA = "0xD0851C")]
	private void shake(float strength, float duration)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xD0863C", Offset = "0xD0863C", VA = "0xD0863C")]
	[IteratorStateMachine(typeof(<shakeCo>d__36))]
	private IEnumerator shakeCo(float strength, float duration)
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD086F0", Offset = "0xD086F0", VA = "0xD086F0")]
	private void reset()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD0882C", Offset = "0xD0882C", VA = "0xD0882C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD0896C", Offset = "0xD0896C", VA = "0xD0896C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD0897C", Offset = "0xD0897C", VA = "0xD0897C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD08B74", Offset = "0xD08B74", VA = "0xD08B74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD08D64", Offset = "0xD08D64", VA = "0xD08D64")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x20000CB")]
[CreateAssetMenu(menuName = "Data/Analytics Settings")]
public class AnalyticsSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x20000CC")]
	public class RemoteLogger
	{
		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string cacheFilename;

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xD09114", Offset = "0xD09114", VA = "0xD09114")]
		public RemoteLogger()
		{
		}
	}

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RemoteLogger remoteLogger;

	[Token(Token = "0x17000104")]
	public string apiUrl
	{
		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xD08FCC", Offset = "0xD08FCC", VA = "0xD08FCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD0910C", Offset = "0xD0910C", VA = "0xD0910C")]
	public AnalyticsSettings()
	{
	}
}
[Token(Token = "0x20000CD")]
[CreateAssetMenu(menuName = "Data/Announcer Settings")]
public class AnnouncerSettings : UpdatableData
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Clutch Saves")]
	public float riskTimeForMinChance;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float riskTimeForMaxChance;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minClutchSaveChance;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxClutchSaveChance;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Coop")]
	public float coopEncourageCooldown;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Teamwork (shields)")]
	public int shieldTeamworkMinHP;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int shieldTeamworkHPForMaxChance;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minShieldTeamworkChance;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxShieldTeamworkChance;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Teamwork (ice breaker)")]
	public int iceTeamworkMinTargets;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int iceTeamworkMaxTargets;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minIceTeamworkChance;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxIceTeamworkChance;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float iceTeamworkMaxHittingPlayerRatio;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("On Fire (Coop only)")]
	public int minScoreForEachShot;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numConsecutiveShotsForOnFire;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float extraChancePerExtraShot;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float bestShotForMinChance;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float bestShotForMaxChance;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float minOnFireChance;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float maxOnFireChance;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float onFireDelay;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("The time to wait after the announcer says the achievement is unlocked and the sfx in seconds")]
	[Header("Achievements & items")]
	public float achievementUnlockedSfxDelay;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD0916C", Offset = "0xD0916C", VA = "0xD0916C")]
	public AnnouncerSettings()
	{
	}
}
[Token(Token = "0x20000CE")]
[CreateAssetMenu(menuName = "Data/Arcades Settings")]
public class ArcadesSettings : UpdatableData
{
	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD091F4", Offset = "0xD091F4", VA = "0xD091F4")]
	public ArcadesSettings()
	{
	}
}
[Token(Token = "0x20000CF")]
[CreateAssetMenu(menuName = "Data/Avatar Settings")]
public class AvatarSettings : UpdatableData
{
	[Token(Token = "0x20000D0")]
	public enum AvatarLabel
	{
		[Token(Token = "0x40006CB")]
		Unknown,
		[Token(Token = "0x40006CC")]
		OG,
		[Token(Token = "0x40006CD")]
		Kahin,
		[Token(Token = "0x40006CE")]
		Razon,
		[Token(Token = "0x40006CF")]
		Reaper
	}

	[Token(Token = "0x20000D1")]
	public enum CoatLabel
	{
		[Token(Token = "0x40006D1")]
		Unknown,
		[Token(Token = "0x40006D2")]
		Glass,
		[Token(Token = "0x40006D3")]
		Unused_1,
		[Token(Token = "0x40006D4")]
		Void,
		[Token(Token = "0x40006D5")]
		Plastic,
		[Token(Token = "0x40006D6")]
		Brushed,
		[Token(Token = "0x40006D7")]
		Carbon,
		[Token(Token = "0x40006D8")]
		Gold
	}

	[Token(Token = "0x20000D2")]
	public enum PrimaryCoats
	{
		[Token(Token = "0x40006DA")]
		Unknown,
		[Token(Token = "0x40006DB")]
		Glass,
		[Token(Token = "0x40006DC")]
		Void,
		[Token(Token = "0x40006DD")]
		Gold
	}

	[Token(Token = "0x20000D3")]
	public enum SecondaryCoat
	{
		[Token(Token = "0x40006DF")]
		Unknown,
		[Token(Token = "0x40006E0")]
		Plastric,
		[Token(Token = "0x40006E1")]
		Brushed,
		[Token(Token = "0x40006E2")]
		Carbon,
		[Token(Token = "0x40006E3")]
		Gold
	}

	[Serializable]
	[Token(Token = "0x20000D4")]
	public class AvatarCoat
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private string name;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoatLabel label;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform p1;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform p2;

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xD094D4", Offset = "0xD094D4", VA = "0xD094D4")]
		public void Validate()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xD0954C", Offset = "0xD0954C", VA = "0xD0954C")]
		public AvatarCoat()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000D5")]
	public class AvatarDefinition
	{
		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private string name;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ItemId(ItemsDefs.ItemShelf.None)]
		public string id;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarLabel label;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AvatarController avatarPrefab;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RacketModel racketPrefab;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AvatarCoat[] primaryCoats;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AvatarCoat[] secondaryCoats;

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xD09554", Offset = "0xD09554", VA = "0xD09554")]
		public void Validate()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0xD09658", Offset = "0xD09658", VA = "0xD09658")]
		public AvatarDefinition()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000D6")]
	public class ItemDefinition
	{
		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ItemId(ItemsDefs.ItemShelf.None)]
		public string id;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Item_Base prefab;

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0xD09660", Offset = "0xD09660", VA = "0xD09660")]
		public void Validate()
		{
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xD096F4", Offset = "0xD096F4", VA = "0xD096F4")]
		public ItemDefinition()
		{
		}
	}

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AvatarDefinition[] definitions;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ItemDefinition[] items;

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD091FC", Offset = "0xD091FC", VA = "0xD091FC")]
	public static CoatLabel GetCoatLabel(PrimaryCoats primary)
	{
		return default(CoatLabel);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD092BC", Offset = "0xD092BC", VA = "0xD092BC")]
	public static CoatLabel GetCoatLabel(SecondaryCoat secondary)
	{
		return default(CoatLabel);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD0937C", Offset = "0xD0937C", VA = "0xD0937C")]
	public AvatarDefinition FindAvatarDef(string id)
	{
		return null;
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD093FC", Offset = "0xD093FC", VA = "0xD093FC")]
	public AvatarDefinition FindAvatarDef(AvatarLabel label)
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xD0944C", Offset = "0xD0944C", VA = "0xD0944C")]
	public ItemDefinition FindItemDef(string id)
	{
		return null;
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD094CC", Offset = "0xD094CC", VA = "0xD094CC")]
	public AvatarSettings()
	{
	}
}
[Token(Token = "0x20000D7")]
[CreateAssetMenu(menuName = "Data/Backend Settings")]
public class BackendSettings : UpdatableData
{
	[Token(Token = "0x20000D8")]
	public enum Region
	{
		[Token(Token = "0x40006F7")]
		Western,
		[Token(Token = "0x40006F8")]
		China
	}

	[Token(Token = "0x20000D9")]
	public enum Env
	{
		[Token(Token = "0x40006FA")]
		Development,
		[Token(Token = "0x40006FB")]
		Production
	}

	[Token(Token = "0x20000DA")]
	public class PerRegion<T>
	{
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T western;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T china;

		[Token(Token = "0x60005F9")]
		protected T getByRegion(Region region)
		{
			return (T)null;
		}

		[Token(Token = "0x60005FA")]
		public PerRegion()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000DB")]
	public class StringPerEnv
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string development;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string production;

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xD09704", Offset = "0xD09704", VA = "0xD09704")]
		public string getByEnv(Env env)
		{
			return null;
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xD097BC", Offset = "0xD097BC", VA = "0xD097BC")]
		public StringPerEnv()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000DC")]
	public abstract class StringPerEnvPerRegion : PerRegion<StringPerEnv>
	{
		[Token(Token = "0x17000105")]
		protected abstract Env env
		{
			[Token(Token = "0x60005FD")]
			get;
		}

		[Token(Token = "0x17000106")]
		public string Value
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0xD097C4", Offset = "0xD097C4", VA = "0xD097C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xD098CC", Offset = "0xD098CC", VA = "0xD098CC")]
		protected StringPerEnvPerRegion()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000DD")]
	public class RNXPlatform
	{
		[Serializable]
		[Token(Token = "0x20000DE")]
		public class RNXPlatformString : StringPerEnv
		{
			[Token(Token = "0x17000107")]
			public string Value
			{
				[Token(Token = "0x6000601")]
				[Address(RVA = "0xD0991C", Offset = "0xD0991C", VA = "0xD0991C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000602")]
			[Address(RVA = "0xD09988", Offset = "0xD09988", VA = "0xD09988")]
			public RNXPlatformString()
			{
			}
		}

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RNXPlatformString apiUrl;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RNXPlatformString chinaApiUrl;

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xD09914", Offset = "0xD09914", VA = "0xD09914")]
		public RNXPlatform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000DF")]
	public class Analytics
	{
		[Serializable]
		[Token(Token = "0x20000E0")]
		public class AnalyticsString : StringPerEnv
		{
			[Token(Token = "0x17000108")]
			public string Value
			{
				[Token(Token = "0x6000604")]
				[Address(RVA = "0xD090A0", Offset = "0xD090A0", VA = "0xD090A0")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000605")]
			[Address(RVA = "0xD09998", Offset = "0xD09998", VA = "0xD09998")]
			public AnalyticsString()
			{
			}
		}

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnalyticsString apiUrl;

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xD09990", Offset = "0xD09990", VA = "0xD09990")]
		public Analytics()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E1")]
	public class RemoteConfig
	{
		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string bucketUrl;

		[Token(Token = "0x6000606")]
		[Address(RVA = "0xD099A0", Offset = "0xD099A0", VA = "0xD099A0")]
		public RemoteConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E2")]
	public class Crates
	{
		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string devBucketUrl;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string prodBucketUrl;

		[Token(Token = "0x6000607")]
		[Address(RVA = "0xD099A8", Offset = "0xD099A8", VA = "0xD099A8")]
		public Crates()
		{
		}
	}

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RNXPlatform rNXPlatform;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Analytics analytics;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RemoteConfig remoteConfig;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Crates crates;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xD096FC", Offset = "0xD096FC", VA = "0xD096FC")]
	public BackendSettings()
	{
	}
}
[Token(Token = "0x20000E3")]
public enum BuildType
{
	[Token(Token = "0x4000707")]
	Regular,
	[Token(Token = "0x4000708")]
	Arcades,
	[Token(Token = "0x4000709")]
	Demo
}
[Token(Token = "0x20000E4")]
[CreateAssetMenu(menuName = "Data/Debug Settings")]
public class DebugSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x20000E5")]
	public class Achievements
	{
		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Tooltip("Achievements will not count any progress")]
		public bool disable;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[Tooltip("Unlock all the achievements")]
		public bool unlockAll;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[Tooltip("Clears the achievements list from profile")]
		public bool clearAchievements;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Disable report of the achievement to the native platform")]
		public bool disableReportToNativePlatform;

		[Token(Token = "0x6000609")]
		[Address(RVA = "0xD099B8", Offset = "0xD099B8", VA = "0xD099B8")]
		public Achievements()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E6")]
	public class Audio
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool dontPlayInGameMusic;

		[Token(Token = "0x17000109")]
		public bool playInGameMusic
		{
			[Token(Token = "0x600060A")]
			[Address(RVA = "0xD099C0", Offset = "0xD099C0", VA = "0xD099C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xD099D0", Offset = "0xD099D0", VA = "0xD099D0")]
		public Audio()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E7")]
	public class Backend
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool forceOffline;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool debugRNXPlatform;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BackendSettings.Env RNXPlatformEnv;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Note: This does not affect custom sets")]
		public BackendSettings.Env cratesEnv;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BackendSettings.Env analyticsEnv;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackendSettings.Env matchMakingLobby;

		[Token(Token = "0x1700010A")]
		public bool workOffline
		{
			[Token(Token = "0x600060C")]
			[Address(RVA = "0xD099D8", Offset = "0xD099D8", VA = "0xD099D8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xD09AB0", Offset = "0xD09AB0", VA = "0xD09AB0")]
		public Backend()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E8")]
	public class HexTiles
	{
		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool drawGizmos;

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xD09AB8", Offset = "0xD09AB8", VA = "0xD09AB8")]
		public HexTiles()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000E9")]
	public class Gameplay
	{
		[Token(Token = "0x20000EA")]
		public enum TimeLimit
		{
			[Token(Token = "0x4000732")]
			Normal,
			[Token(Token = "0x4000733")]
			Infinite,
			[Token(Token = "0x4000734")]
			Short
		}

		[Serializable]
		[Token(Token = "0x20000EB")]
		public class KeyboardShot
		{
			[Token(Token = "0x20000EC")]
			public enum PlowDirection
			{
				[Token(Token = "0x400073C")]
				Mouse,
				[Token(Token = "0x400073D")]
				Random,
				[Token(Token = "0x400073E")]
				FixedAngle,
				[Token(Token = "0x400073F")]
				MouseScroll
			}

			[Serializable]
			[Token(Token = "0x20000ED")]
			public class LastShot
			{
				[Token(Token = "0x20000EE")]
				public enum Mode
				{
					[Token(Token = "0x400074A")]
					Locked,
					[Token(Token = "0x400074B")]
					Record,
					[Token(Token = "0x400074C")]
					Replay,
					[Token(Token = "0x400074D")]
					Reset
				}

				[Token(Token = "0x4000740")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public Mode mode;

				[Token(Token = "0x4000741")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public bool draw;

				[Token(Token = "0x4000742")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
				public bool shootNow;

				[Token(Token = "0x4000743")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float autoShootTime;

				[Token(Token = "0x4000744")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public Vector3 origin;

				[Token(Token = "0x4000745")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public float yaw;

				[Token(Token = "0x4000746")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public float pitch;

				[Token(Token = "0x4000747")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public float speed;

				[Token(Token = "0x4000748")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
				public float plowAngle;

				[Token(Token = "0x1700010B")]
				public bool ShouldDraw
				{
					[Token(Token = "0x6000611")]
					[Address(RVA = "0xD09AE8", Offset = "0xD09AE8", VA = "0xD09AE8")]
					get
					{
						return default(bool);
					}
				}

				[Token(Token = "0x6000612")]
				[Address(RVA = "0xD09BB8", Offset = "0xD09BB8", VA = "0xD09BB8")]
				public LastShot()
				{
				}
			}

			[Token(Token = "0x4000735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool powerShot;

			[Token(Token = "0x4000736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float powerShotStrength;

			[Token(Token = "0x4000737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool randomSpeed;

			[Token(Token = "0x4000738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public PlowDirection plowDirection;

			[Token(Token = "0x4000739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("Counter clockwise with 0 pointing leftward")]
			public float plowFixedAngle;

			[Token(Token = "0x400073A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LastShot lastShot;

			[Token(Token = "0x6000610")]
			[Address(RVA = "0xD09AD0", Offset = "0xD09AD0", VA = "0xD09AD0")]
			public KeyboardShot()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000EF")]
		public class Waves
		{
			[Serializable]
			[Token(Token = "0x20000F0")]
			public class Arcade
			{
				[Token(Token = "0x4000753")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool playByOrder;

				[Token(Token = "0x4000754")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public string[] testWaveNames;

				[Token(Token = "0x6000614")]
				[Address(RVA = "0xD09BD0", Offset = "0xD09BD0", VA = "0xD09BD0")]
				public Arcade()
				{
				}
			}

			[Token(Token = "0x400074E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Ignore wave positioning setting")]
			public bool fixedPositioning;

			[Token(Token = "0x400074F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool testMode;

			[Token(Token = "0x4000750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int startingDifficulty;

			[Token(Token = "0x4000751")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool increasingDifficulty;

			[Token(Token = "0x4000752")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Arcade arcade;

			[Token(Token = "0x6000613")]
			[Address(RVA = "0xD09BC0", Offset = "0xD09BC0", VA = "0xD09BC0")]
			public Waves()
			{
			}
		}

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimeLimit timeLimit;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool disablePortals;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool endlessPlow;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardShot keyboardShot;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeScaleFactor;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool debugScoring;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool testHealingTargets;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool testShields;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Waves waves;

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xD09AC0", Offset = "0xD09AC0", VA = "0xD09AC0")]
		public Gameplay()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F1")]
	public class IAP
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Use a fake in app purchases not supported for this session")]
		public bool fakeIAPNotSupported;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[Tooltip("Use a fake in app purchases for this session, every purchase will succeed")]
		public bool fakeIAP;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[ItemId(ItemsDefs.ItemShelf.Support)]
		[Tooltip("mock purchased items (fakeIAP must be on)")]
		public string[] mockPurchasedItems;

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xD09BD8", Offset = "0xD09BD8", VA = "0xD09BD8")]
		public IAP()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F2")]
	public class Input
	{
		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool noVR;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool mouseRacket;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool keyboardShortcuts;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeysSettings keys;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool bot;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool botWantsRematch;

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xD09BE0", Offset = "0xD09BE0", VA = "0xD09BE0")]
		public Input()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F3")]
	public class Leaderboard
	{
		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool doNotUploadLeaderboards;

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xD09BE8", Offset = "0xD09BE8", VA = "0xD09BE8")]
		public Leaderboard()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F4")]
	public class LogTypeStackTrace
	{
		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool overrideStackTrace;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public StackTraceLogType log;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StackTraceLogType warning;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StackTraceLogType assert;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StackTraceLogType error;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public StackTraceLogType exception;

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xD09BF0", Offset = "0xD09BF0", VA = "0xD09BF0")]
		public LogTypeStackTrace()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000F5")]
	public class MonthlyChallengeDbg
	{
		[Serializable]
		[Token(Token = "0x20000F6")]
		public struct DownloadCustomToEditor
		{
			[Token(Token = "0x4000771")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Download custom set into level editor")]
			public bool download;

			[Token(Token = "0x4000772")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Custom set number to download")]
			public int customSetNum;
		}

		[Serializable]
		[Token(Token = "0x20000F7")]
		public struct DecryptCustomSet
		{
			[Token(Token = "0x4000773")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Decrypt custom set")]
			public bool decrypt;

			[Token(Token = "0x4000774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Custom set to decrypt")]
			public string customSetName;
		}

		[Serializable]
		[Token(Token = "0x20000F8")]
		public struct PackageSetFromEditor
		{
			[Serializable]
			[Token(Token = "0x20000F9")]
			public struct Output
			{
				[Token(Token = "0x4000778")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				[Tooltip("For example, MC_Apr21")]
				public string setId;

				[Token(Token = "0x4000779")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				[Tooltip("Challenge time for crate asset key")]
				public MonthlyChallenge.Time challengeTime;

				[Token(Token = "0x400077A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[Tooltip("Name to appear on Monthly Challenge menu item")]
				public string customName;
			}

			[Token(Token = "0x4000775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Package set from level editor as a crate")]
			public bool package;

			[Token(Token = "0x4000776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Custom private set name to package")]
			public string customSetName;

			[Token(Token = "0x4000777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Output output;
		}

		[Serializable]
		[Token(Token = "0x20000FA")]
		public struct WipSet
		{
			[Token(Token = "0x400077B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Test local WIP content")]
			public bool test;

			[Token(Token = "0x400077C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public WaveSet setPrefab;

			[Token(Token = "0x400077D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MonthlyChallenge.Time challengeTime;

			[Token(Token = "0x400077E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Change the extension of the crate to .bytes")]
			public TextAsset crate;

			[Token(Token = "0x400077F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("If TRUE than the password will be taken from the Crates manager")]
			public bool crateIsEncrypted;
		}

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Disable monthly challenges completely")]
		public bool disable;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool debug;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[Tooltip("Update content every 5 seconds")]
		public bool shortUpdateInterval;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool overrideLast;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonthlyChallengesData.Last last;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DownloadCustomToEditor downloadCustomToEditor;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DecryptCustomSet decryptCustomSed;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PackageSetFromEditor packageSetFromEditor;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WipSet wipSet;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[Tooltip("EDITOR ONLY: Do not download using Crates and instead using built-in content")]
		public bool workOffline;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool forceShowNew;

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xD09C00", Offset = "0xD09C00", VA = "0xD09C00")]
		public MonthlyChallengeDbg()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000FB")]
	public class MR
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool disableMixedReality;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool _sameSpaceMultiplayer;

		[Token(Token = "0x1700010C")]
		public bool sameSpaceMultiplayer
		{
			[Token(Token = "0x600061A")]
			[Address(RVA = "0xD09C08", Offset = "0xD09C08", VA = "0xD09C08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xD09CF0", Offset = "0xD09CF0", VA = "0xD09CF0")]
		public MR()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000FC")]
	public class Multiplayer
	{
		[Serializable]
		[Token(Token = "0x20000FD")]
		public class Network
		{
			[Token(Token = "0x4000792")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Use alternate ports when detecting a conflict with another running instance")]
			public bool allowAltPorts;

			[Token(Token = "0x4000793")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool disablePeerToPeer;

			[Token(Token = "0x4000794")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float simulatedConstantDelayMS;

			[Token(Token = "0x4000795")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float simulatedRandomDelayMS;

			[Token(Token = "0x4000796")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool debugTraffic;

			[Token(Token = "0x4000797")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
			public bool printThroughput;

			[Token(Token = "0x600061F")]
			[Address(RVA = "0xD09D28", Offset = "0xD09D28", VA = "0xD09D28")]
			public Network()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20000FE")]
		public class Seasons
		{
			[Token(Token = "0x4000798")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool debug;

			[Token(Token = "0x4000799")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int oldSkillRating;

			[Token(Token = "0x400079A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MultiplayerSeasonsData.Season fakeSeason;

			[Token(Token = "0x400079B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Tooltip("Delay handling of online data until keypress")]
			public bool delay;

			[Token(Token = "0x400079C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode delayedKey;

			[Token(Token = "0x400079D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[Tooltip("Test UI using keypress")]
			public bool testUI;

			[Token(Token = "0x400079E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode testUIKey;

			[Token(Token = "0x6000620")]
			[Address(RVA = "0xD09D30", Offset = "0xD09D30", VA = "0xD09D30")]
			public Seasons()
			{
			}
		}

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debugMatchSetup;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool autoAcceptRanked;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool debugSkillRating;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool debugSyncing;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool debugShotInfos;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool debugWaveCreation;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool debugSnakes;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool debugVoice;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("List of RNX IDs of players to show in friends list")]
		public string[] friends;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _fakeLocal;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VersusMatchType fakeMatchType;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerID fakePlayerID;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ItemId(ItemsDefs.ItemShelf.None)]
		[Tooltip("fake items for the opponent model")]
		public string[] fakeItems;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _scoreMultiplier;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Network network;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Seasons seasons;

		[Token(Token = "0x1700010D")]
		public bool fakeLocal
		{
			[Token(Token = "0x600061C")]
			[Address(RVA = "0xCFE220", Offset = "0xCFE220", VA = "0xCFE220")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public float scoreMult
		{
			[Token(Token = "0x600061D")]
			[Address(RVA = "0xD09CF8", Offset = "0xD09CF8", VA = "0xD09CF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xD09D08", Offset = "0xD09D08", VA = "0xD09D08")]
		public Multiplayer()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000FF")]
	public class OculusRichPresence
	{
		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong testGroupRoomID;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string testDestination;

		[Token(Token = "0x6000621")]
		[Address(RVA = "0xD09D50", Offset = "0xD09D50", VA = "0xD09D50")]
		public OculusRichPresence()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000100")]
	public class Profile
	{
		[Serializable]
		[Token(Token = "0x2000101")]
		public class OverrideSkillRating
		{
			[Token(Token = "0x40007AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool active;

			[Token(Token = "0x40007AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float rating;

			[Token(Token = "0x40007AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float ratingDeviation;

			[Token(Token = "0x6000623")]
			[Address(RVA = "0xD09D60", Offset = "0xD09D60", VA = "0xD09D60")]
			public OverrideSkillRating()
			{
			}
		}

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debug;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool debugSync;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool debugXP;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[Tooltip("load the offline profile but fail every try of getting the online profile")]
		public bool failFetchOnlineProfile;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool doNotUploadProfile;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool resetProfile;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool useFakeRnxID;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fakeRnxID;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OverrideSkillRating overrideSkillRating;

		[Token(Token = "0x6000622")]
		[Address(RVA = "0xD09D58", Offset = "0xD09D58", VA = "0xD09D58")]
		public Profile()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000102")]
	public class Setup
	{
		[Token(Token = "0x2000103")]
		public enum SkipStartRoom
		{
			[Token(Token = "0x40007BA")]
			DoNotSkip,
			[Token(Token = "0x40007BB")]
			SkipWhenReady,
			[Token(Token = "0x40007BC")]
			SkipQuickly
		}

		[Token(Token = "0x2000104")]
		public enum StartMode
		{
			[Token(Token = "0x40007BE")]
			MainMenu,
			[Token(Token = "0x40007BF")]
			AutoStartArcade,
			[Token(Token = "0x40007C0")]
			AutoStartNightmare,
			[Token(Token = "0x40007C1")]
			AutoStartSolo,
			[Token(Token = "0x40007C2")]
			AutoStartMonthlyChallenge,
			[Token(Token = "0x40007C3")]
			AutoStartFindVersus,
			[Token(Token = "0x40007C4")]
			AutoStartFindCoOp,
			[Token(Token = "0x40007C5")]
			AutoStartFindVersusOrCoOp,
			[Token(Token = "0x40007C6")]
			AutoStartPINVersus,
			[Token(Token = "0x40007C7")]
			AutoStartPINCoOp,
			[Token(Token = "0x40007C8")]
			AutoStartLevelEditor
		}

		[Serializable]
		[Token(Token = "0x2000105")]
		public class FirstTimeUX
		{
			[Token(Token = "0x2000106")]
			private enum ShowOnce
			{
				[Token(Token = "0x40007CC")]
				Once,
				[Token(Token = "0x40007CD")]
				Always,
				[Token(Token = "0x40007CE")]
				Never
			}

			[Token(Token = "0x40007C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private ShowOnce showLegal;

			[Token(Token = "0x40007CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[SerializeField]
			private ShowOnce showTutorial;

			[Token(Token = "0x17000112")]
			public bool showLegalOnce
			{
				[Token(Token = "0x6000628")]
				[Address(RVA = "0xD09D98", Offset = "0xD09D98", VA = "0xD09D98")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000113")]
			public bool alwaysShowLegal
			{
				[Token(Token = "0x6000629")]
				[Address(RVA = "0xD09DA8", Offset = "0xD09DA8", VA = "0xD09DA8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000114")]
			public bool neverShowLegal
			{
				[Token(Token = "0x600062A")]
				[Address(RVA = "0xD09DB8", Offset = "0xD09DB8", VA = "0xD09DB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000115")]
			public bool showTutorialOnce
			{
				[Token(Token = "0x600062B")]
				[Address(RVA = "0xD09DC8", Offset = "0xD09DC8", VA = "0xD09DC8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000116")]
			public bool alwaysShowTutorial
			{
				[Token(Token = "0x600062C")]
				[Address(RVA = "0xD09DD8", Offset = "0xD09DD8", VA = "0xD09DD8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000117")]
			public bool neverShowTutorial
			{
				[Token(Token = "0x600062D")]
				[Address(RVA = "0xD09DE8", Offset = "0xD09DE8", VA = "0xD09DE8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600062E")]
			[Address(RVA = "0xD09DF8", Offset = "0xD09DF8", VA = "0xD09DF8")]
			public FirstTimeUX()
			{
			}
		}

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool deselectAllOnStart;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SkipStartRoom skipStartRoom;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableWelcomePopUps;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public StartMode startMode;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoRestartOnGameOver;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("For example: A2, D5, Tutorial")]
		public string startSoloId;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("For example: MP1, MP13")]
		public string forceMultiplayerSetId;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("555 by default if empty")]
		public string startPIN;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool _fastOpeningSequence;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool unlockSoloSets;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FirstTimeUX FTUE;

		[Token(Token = "0x1700010F")]
		public bool skipStartRoomWhenReady
		{
			[Token(Token = "0x6000624")]
			[Address(RVA = "0xD09D68", Offset = "0xD09D68", VA = "0xD09D68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public bool skipStartRoomQuickly
		{
			[Token(Token = "0x6000625")]
			[Address(RVA = "0xD09D78", Offset = "0xD09D78", VA = "0xD09D78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public bool fastOpeningSequence
		{
			[Token(Token = "0x6000626")]
			[Address(RVA = "0xD09D88", Offset = "0xD09D88", VA = "0xD09D88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xD09D90", Offset = "0xD09D90", VA = "0xD09D90")]
		public Setup()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000107")]
	public class SuperSamplingSettings
	{
		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool overrideSuperSampling;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float overriddenSuperSamplingValue;

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xD09E00", Offset = "0xD09E00", VA = "0xD09E00")]
		public SuperSamplingSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000108")]
	public class UI
	{
		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool debugController;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool printFlow;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool debugSound;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool debugSoundIncludeHover;

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xD09E10", Offset = "0xD09E10", VA = "0xD09E10")]
		public UI()
		{
		}
	}

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Input input;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Setup setup;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Backend backend;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Profile profile;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Leaderboard leaderboard;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Gameplay gameplay;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Multiplayer multiplayer;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UI ui;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MR mr;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Audio audio;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MonthlyChallengeDbg monthlyChallenge;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Achievements achievements;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SuperSamplingSettings settings;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HexTiles hexTiles;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OculusRichPresence oculusRichPresence;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public IAP inAppPurchases;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LogTypeStackTrace logTypeStackTrace;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xD099B0", Offset = "0xD099B0", VA = "0xD099B0")]
	public DebugSettings()
	{
	}
}
[Token(Token = "0x2000109")]
[CreateAssetMenu(menuName = "Data/Demo Settings")]
public class DemoSettings : UpdatableData
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] unlockedSetIds;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xD09E18", Offset = "0xD09E18", VA = "0xD09E18")]
	public bool isSoloSetUnlocked(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xD09E70", Offset = "0xD09E70", VA = "0xD09E70")]
	public DemoSettings()
	{
	}
}
[Token(Token = "0x200010A")]
[CreateAssetMenu(menuName = "Data/Email Settings")]
public class EmailSettings : UpdatableData
{
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string senderAddress;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string senderPassword;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string recipientAddress;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SmtpHost;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int SmtpPort;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xD09E78", Offset = "0xD09E78", VA = "0xD09E78")]
	public EmailSettings()
	{
	}
}
[Token(Token = "0x200010B")]
public class ItemIdAttribute : PropertyAttribute
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ItemsDefs.ItemShelf filterByShelf;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xD09F24", Offset = "0xD09F24", VA = "0xD09F24")]
	public ItemIdAttribute(ItemsDefs.ItemShelf shelf = ItemsDefs.ItemShelf.None)
	{
	}
}
[Token(Token = "0x200010C")]
[CreateAssetMenu(menuName = "Data/Items Defs")]
public class ItemsDefs : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200010D")]
	public class ItemDefinition
	{
		[Token(Token = "0x40007DF")]
		public const int MAX_REQUIRED_ACHIEVEMENTS = 3;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string title;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isNewItem;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[ShowAssetPreview(64, 64)]
		public Sprite icon;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Labels")]
		public ItemSlot slot;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("If the item is coat than what is the label for it in the avatar settings of it")]
		public AvatarSettings.PrimaryCoats primaryCoatLable;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("If the item is coat than what is the label for it in the avatar settings of it")]
		public AvatarSettings.SecondaryCoat secondaryCoatLable;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Use this item as the default for the slot")]
		public bool useAsDefaultItem;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString defaultItemTitle;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Purchasable item")]
		[Header("Requirements")]
		public bool support;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Tooltip("Purchasable item price")]
		public string price;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Tooltip("Oculus purchase description")]
		public string purchaseDescription;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Leave empty for support and default items")]
		public string[] requiredAchievements;

		[Token(Token = "0x17000119")]
		public PlayerProfileData.Summary.AchievementStatus[] RequiredAchievementsStatus
		{
			[Token(Token = "0x6000642")]
			[Address(RVA = "0xD0BA08", Offset = "0xD0BA08", VA = "0xD0BA08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011A")]
		public PlayerProfileData.Summary.ItemStatus Status
		{
			[Token(Token = "0x6000643")]
			[Address(RVA = "0xD0A4E8", Offset = "0xD0A4E8", VA = "0xD0A4E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		public ItemShelf ItemShelf
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0xD0BB28", Offset = "0xD0BB28", VA = "0xD0BB28")]
			get
			{
				return default(ItemShelf);
			}
		}

		[Token(Token = "0x1700011C")]
		public AvatarSettings.AvatarDefinition AvatarDefinition
		{
			[Token(Token = "0x6000646")]
			[Address(RVA = "0xD0BB7C", Offset = "0xD0BB7C", VA = "0xD0BB7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0xD0B16C", Offset = "0xD0B16C", VA = "0xD0B16C")]
		public void ValidateLockStateByAchievements()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xD0A608", Offset = "0xD0A608", VA = "0xD0A608")]
		public void EquipOnModel(PlayerModel model)
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xD0BC48", Offset = "0xD0BC48", VA = "0xD0BC48")]
		private void RemoveAllItemsFromModelButThis(PlayerModel model)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xD0A978", Offset = "0xD0A978", VA = "0xD0A978")]
		public void UnequipFromModel(PlayerModel model)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xD0BD1C", Offset = "0xD0BD1C", VA = "0xD0BD1C")]
		public ItemDefinition()
		{
		}
	}

	[Token(Token = "0x200010F")]
	public enum ItemShelf
	{
		[Token(Token = "0x40007F2")]
		None = 0,
		[Token(Token = "0x40007F3")]
		Model = 1,
		[Token(Token = "0x40007F4")]
		Coating = 2,
		[Token(Token = "0x40007F5")]
		Trails = 3,
		[Token(Token = "0x40007F6")]
		Headware = 100,
		[Token(Token = "0x40007F7")]
		Extras = 101,
		[Token(Token = "0x40007F8")]
		Support = 102
	}

	[Token(Token = "0x2000110")]
	public enum ItemSlot
	{
		[Token(Token = "0x40007FA")]
		None = 0,
		[Token(Token = "0x40007FB")]
		Model = 1,
		[Token(Token = "0x40007FC")]
		PrimaryCoat = 2,
		[Token(Token = "0x40007FD")]
		SecondaryCoat = 3,
		[Token(Token = "0x40007FE")]
		Trail = 4,
		[Token(Token = "0x40007FF")]
		Head = 100,
		[Token(Token = "0x4000800")]
		Mouth = 101,
		[Token(Token = "0x4000801")]
		Neck = 102,
		[Token(Token = "0x4000802")]
		Racket = 103,
		[Token(Token = "0x4000803")]
		Trinket = 104,
		[Token(Token = "0x4000804")]
		Eyes = 105
	}

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemDefinition[] items;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<ItemSlot, ItemDefinition[]> _itemsOfSlot;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, ItemDefinition> _supportItems;

	[Token(Token = "0x17000118")]
	public static Dictionary<string, ItemDefinition> SupportItems
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xD0B584", Offset = "0xD0B584", VA = "0xD0B584")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xD09F4C", Offset = "0xD09F4C", VA = "0xD09F4C")]
	private static ItemShelf ShelfOf(ItemDefinition item)
	{
		return default(ItemShelf);
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xD09FC0", Offset = "0xD09FC0", VA = "0xD09FC0")]
	public static bool MustBeEquipped(ItemSlot itemSlot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xD09FD8", Offset = "0xD09FD8", VA = "0xD09FD8")]
	public static int IsLeftShelf(ItemShelf shelf)
	{
		return default(int);
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xD0A000", Offset = "0xD0A000", VA = "0xD0A000")]
	public static void EquipAvatarItems()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xD0A99C", Offset = "0xD0A99C", VA = "0xD0A99C")]
	public static void EquipOpponentAvatarItems()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xD0A17C", Offset = "0xD0A17C", VA = "0xD0A17C")]
	private static void ValidateItems()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xD0ACB4", Offset = "0xD0ACB4", VA = "0xD0ACB4")]
	public static void ValidateDefaultItem(ItemSlot s, [Optional] ItemDefinition[] slotItems)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xD0AB58", Offset = "0xD0AB58", VA = "0xD0AB58")]
	private static void ValidateItem(ItemDefinition item)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xD0B364", Offset = "0xD0B364", VA = "0xD0B364")]
	public static ItemDefinition[] ItemsOfSlot(ItemSlot slot)
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xD0B81C", Offset = "0xD0B81C", VA = "0xD0B81C")]
	public static ItemDefinition[] UnseenUnlockedItems()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xD0B968", Offset = "0xD0B968", VA = "0xD0B968")]
	public ItemsDefs()
	{
	}
}
[Token(Token = "0x2000115")]
[CreateAssetMenu(menuName = "Data/Items Settings")]
public class ItemsSettings : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000116")]
	public enum HatSoundOrigin
	{
		[Token(Token = "0x4000814")]
		Ambient,
		[Token(Token = "0x4000815")]
		AnnouncerSpeakers,
		[Token(Token = "0x4000816")]
		Racket
	}

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Headware settings")]
	public HatSoundOrigin hatSoundOrigin;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hatSoundUiStereo;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("cooldown for playing the particle and sound effect in the shelves ui")]
	[Range(0f, 2f)]
	public float fxCooldown;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(1f, 20f)]
	[Tooltip("A Sequence of how match power shot to wait for the next headware sound and particle fx player 1")]
	public int[] headwareSoundIntervalsP1;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 20f)]
	[Tooltip("A Sequence of how match power shot to wait for the next headware sound and particle fx player 2")]
	public int[] headwareSoundIntervalsP2;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xD0BF98", Offset = "0xD0BF98", VA = "0xD0BF98")]
	public ItemsSettings()
	{
	}
}
[Token(Token = "0x2000117")]
[CreateAssetMenu(menuName = "Data/Keys Settings")]
public class KeysSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000118")]
	public class General
	{
		[Serializable]
		[Token(Token = "0x2000119")]
		public class MouseController
		{
			[Token(Token = "0x4000821")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode moveRacket;

			[Token(Token = "0x4000822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode trigger1;

			[Token(Token = "0x4000823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode trigger2;

			[Token(Token = "0x4000824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode menu;

			[Token(Token = "0x4000825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode back;

			[Token(Token = "0x4000826")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public KeyCode joystickLeft;

			[Token(Token = "0x4000827")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public KeyCode joystickRight;

			[Token(Token = "0x4000828")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public KeyCode joystickUp;

			[Token(Token = "0x4000829")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public KeyCode joystickDown;

			[Token(Token = "0x400082A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public KeyCode grip;

			[Token(Token = "0x400082B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public KeyCode rotateX;

			[Token(Token = "0x6000660")]
			[Address(RVA = "0xD0BFD4", Offset = "0xD0BFD4", VA = "0xD0BFD4")]
			public MouseController()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200011A")]
		public class Racket
		{
			[Token(Token = "0x400082C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode load;

			[Token(Token = "0x400082D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode remove;

			[Token(Token = "0x400082E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode ballHit;

			[Token(Token = "0x6000661")]
			[Address(RVA = "0xD0C004", Offset = "0xD0C004", VA = "0xD0C004")]
			public Racket()
			{
			}
		}

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode ok;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode yes;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode no;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode disableBotLook;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode toggleStreamingCam;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MouseController mouseController;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Racket racket;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xD0BFB8", Offset = "0xD0BFB8", VA = "0xD0BFB8")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200011B")]
	public class MainMenu
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode startZen;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode startArcade;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode startNightmare;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode startSolo;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode startMonthlyChallenge;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode startFindVersus;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode startFindCoOp;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode startFindVersusOrCoOp;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode startPINVersus;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode startLevelEditor;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode openProfile;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode quit;

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xD0C020", Offset = "0xD0C020", VA = "0xD0C020")]
		public MainMenu()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200011C")]
	public class InGame
	{
		[Serializable]
		[Token(Token = "0x200011D")]
		public class Multiplayer
		{
			[Token(Token = "0x4000848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KeyCode randomScore;

			[Token(Token = "0x4000849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public KeyCode loseRound;

			[Token(Token = "0x400084A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode winRound;

			[Token(Token = "0x400084B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public KeyCode ctrlAltGameOver;

			[Token(Token = "0x400084C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public KeyCode opponentDisconnect;

			[Token(Token = "0x6000664")]
			[Address(RVA = "0xD0C070", Offset = "0xD0C070", VA = "0xD0C070")]
			public Multiplayer()
			{
			}
		}

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode shootBall;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyCode backHandShoot;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode respawnBall;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode respawnBallPos;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode pullBall;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode fillUpEnergy;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode endTime;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode increaseStreak;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode skipWave;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode skipSet;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeyCode quitGameOver;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public KeyCode skipSetInLE;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Multiplayer multiplayer;

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xD0C048", Offset = "0xD0C048", VA = "0xD0C048")]
		public InGame()
		{
		}
	}

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public General general;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MainMenu mainMenu;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InGame inGame;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xD0BFB0", Offset = "0xD0BFB0", VA = "0xD0BFB0")]
	public KeysSettings()
	{
	}
}
[Token(Token = "0x200011E")]
[CreateAssetMenu(menuName = "Data/Leaderboard Settings")]
public class LeaderboardSettings : UpdatableData
{
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string arcadeName;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string nightmareName;

	[Token(Token = "0x400084F")]
	public const LeaderboardSortMethod arcadeSort = LeaderboardSortMethod.Descending;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string soloPrefix;

	[Token(Token = "0x4000851")]
	public const LeaderboardSortMethod soloSort = LeaderboardSortMethod.Ascending;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string customSetPrefix;

	[Token(Token = "0x4000853")]
	public const LeaderboardSortMethod versusSort = LeaderboardSortMethod.Descending;

	[Token(Token = "0x4000854")]
	public const LeaderboardSortMethod coOpSort = LeaderboardSortMethod.Descending;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string coOpName;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xD0C08C", Offset = "0xD0C08C", VA = "0xD0C08C")]
	public string getArcadeName(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xD0C0B8", Offset = "0xD0C0B8", VA = "0xD0C0B8")]
	public LeaderboardSortMethod getArcadeSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xD0C0C0", Offset = "0xD0C0C0", VA = "0xD0C0C0")]
	public string getSoloName(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xD0C154", Offset = "0xD0C154", VA = "0xD0C154")]
	public LeaderboardSortMethod getSoloSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xD0C15C", Offset = "0xD0C15C", VA = "0xD0C15C")]
	public string GetSoloCustomSetName(CustomSet customSet)
	{
		return null;
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xD0C310", Offset = "0xD0C310", VA = "0xD0C310")]
	public string getVersusName()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xD0C3CC", Offset = "0xD0C3CC", VA = "0xD0C3CC")]
	public LeaderboardSortMethod getVersusSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xD0C3D4", Offset = "0xD0C3D4", VA = "0xD0C3D4")]
	public string getCoOpName()
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xD0C3DC", Offset = "0xD0C3DC", VA = "0xD0C3DC")]
	public LeaderboardSortMethod getCoOpSort()
	{
		return default(LeaderboardSortMethod);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xD0C3E4", Offset = "0xD0C3E4", VA = "0xD0C3E4")]
	public LeaderboardSettings()
	{
	}
}
[Token(Token = "0x200011F")]
[CreateAssetMenu(menuName = "Data/LevelEditor Settings")]
public class LevelEditorSettings : ScriptableObject
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string password;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xD0C4DC", Offset = "0xD0C4DC", VA = "0xD0C4DC")]
	public LevelEditorSettings()
	{
	}
}
[Token(Token = "0x2000120")]
[CreateAssetMenu(menuName = "Data/Localization Settings")]
public class LocalizationSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000121")]
	public struct Fonts
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FontSet english;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public DynamicFontSet chinese;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DynamicFontSet japanese;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DynamicFontSet korean;
	}

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Language startLanguage;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Fonts fonts;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 genericChromaticScaleFactor;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xD0C4E4", Offset = "0xD0C4E4", VA = "0xD0C4E4")]
	public LocalizationSettings()
	{
	}
}
[Token(Token = "0x2000122")]
[CreateAssetMenu(menuName = "Data/Medals Settings")]
public class MedalsSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000123")]
	public class PrefabInfo
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MedalType medal;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject prefab;

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xD0C6F8", Offset = "0xD0C6F8", VA = "0xD0C6F8")]
		public PrefabInfo()
		{
		}
	}

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MedalType> order;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PrefabInfo> visualPrefabs;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xD0C4EC", Offset = "0xD0C4EC", VA = "0xD0C4EC")]
	public GameObject findPrefab(MedalType medal)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xD0C6F0", Offset = "0xD0C6F0", VA = "0xD0C6F0")]
	public MedalsSettings()
	{
	}
}
[Token(Token = "0x2000124")]
[CreateAssetMenu(menuName = "Data/Multiplayer Settings")]
public class MultiplayerSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000125")]
	public class Network
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int defaultPersonalLobbyServerPort;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int defaultRankedLobbyServerPort;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int defaultPINLobbyServerPort;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int defaultPINLockedLobbyServerPort;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float remoteTimeEstimateLerp;

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xD0C710", Offset = "0xD0C710", VA = "0xD0C710")]
		public Network()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000126")]
	public class UI
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float playerInvitationTimeout;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float friendInvitationTimeout;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The delay after creating a lobby in which we allow the player to go do something else")]
		public float allowBrowseAwayFromLobbyDelay;

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xD0C730", Offset = "0xD0C730", VA = "0xD0C730")]
		public UI()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000127")]
	public class InGame
	{
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxScore;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSlingDuration;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxSlingDuration2;

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xD0C74C", Offset = "0xD0C74C", VA = "0xD0C74C")]
		public InGame()
		{
		}
	}

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Network networkDefault;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Network networkPS4;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UI ui;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InGame inGame;

	[Token(Token = "0x1700011D")]
	public Network network
	{
		[Token(Token = "0x6000674")]
		[Address(RVA = "0xD0C700", Offset = "0xD0C700", VA = "0xD0C700")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xD0C708", Offset = "0xD0C708", VA = "0xD0C708")]
	public MultiplayerSettings()
	{
	}
}
[Token(Token = "0x2000128")]
[CreateAssetMenu(menuName = "Data/Power-up Settings")]
public class PowerUpSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000129")]
	public class PowerupTypeAndProbability
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string title;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SerializablePowerupType type;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float weight;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int minWaveIndex;

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xD0C770", Offset = "0xD0C770", VA = "0xD0C770")]
		public PowerupTypeAndProbability()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200012A")]
	public class Params
	{
		[Serializable]
		[Token(Token = "0x200012B")]
		public class RangeCurve
		{
			[Token(Token = "0x4000880")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Notice: Max above Min, forming together a graph")]
			public AnimationCurve max;

			[Token(Token = "0x4000881")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Notice: Min Below Max, forming together a graph")]
			public AnimationCurve min;

			[Token(Token = "0x600067E")]
			[Address(RVA = "0xD0CC24", Offset = "0xD0CC24", VA = "0xD0CC24")]
			public RangeCurve()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200012C")]
		public class FirstPowerUp
		{
			[Serializable]
			[Token(Token = "0x200012D")]
			public class Unknown
			{
				[Token(Token = "0x4000885")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				[Tooltip("The minimum number of available power-up types required to display a power-up as unknown")]
				public int minAvailablePowerUpTypes;

				[Token(Token = "0x4000886")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[Tooltip("Appearance interval, measure in power-ups in between unknowns, not including")]
				public RangeCurve powerUpsWithout;

				[Token(Token = "0x6000680")]
				[Address(RVA = "0xD0CC34", Offset = "0xD0CC34", VA = "0xD0CC34")]
				public Unknown()
				{
				}
			}

			[Token(Token = "0x4000882")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Appearance interval, measure in waves in between power-ups, not including")]
			public RangeCurve wavesWithout;

			[Token(Token = "0x4000883")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Measured in number of turns")]
			public int delay;

			[Token(Token = "0x4000884")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Unknown unknown;

			[Token(Token = "0x600067F")]
			[Address(RVA = "0xD0CC2C", Offset = "0xD0CC2C", VA = "0xD0CC2C")]
			public FirstPowerUp()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200012E")]
		public class RescuePowerUp
		{
			[Token(Token = "0x4000887")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool enabled;

			[Token(Token = "0x4000888")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Number of waves without")]
			public int cooldown;

			[Token(Token = "0x4000889")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("The X axis is % of energy left")]
			public AnimationCurve numMisses;

			[Token(Token = "0x6000681")]
			[Address(RVA = "0xD0CC44", Offset = "0xD0CC44", VA = "0xD0CC44")]
			public RescuePowerUp()
			{
			}
		}

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int maxWaveIndex;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FirstPowerUp firstPowerUp;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RescuePowerUp rescuePowerUp;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PowerupTypeAndProbability[] availablePowerups;

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xD0C778", Offset = "0xD0C778", VA = "0xD0C778")]
		public void validate()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xD0C780", Offset = "0xD0C780", VA = "0xD0C780")]
		private void validateList(PowerupTypeAndProbability[] availablePowerups)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xD0CC1C", Offset = "0xD0CC1C", VA = "0xD0CC1C")]
		public Params()
		{
		}
	}

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool debug;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Params arcade;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space(20f)]
	public Params versus;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Space(20f)]
	public Params coOp;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Space(20f)]
	public bool test;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Params testParams;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Space(20f)]
	public SerializablePowerupType[] rescuePowerups;

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xD0C768", Offset = "0xD0C768", VA = "0xD0C768")]
	public PowerUpSettings()
	{
	}
}
[Token(Token = "0x200012F")]
[CreateAssetMenu(menuName = "Data/Profile Settings")]
public class ProfileSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000130")]
	public struct OverallStats
	{
		[Serializable]
		[Token(Token = "0x2000131")]
		public struct ClutchSave
		{
			[Token(Token = "0x4000895")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Critical timer threshold (in seconds) to enter clutch mode")]
			public float criticalTimerThreshold;

			[Token(Token = "0x4000896")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("Nominal timer threshold (in seconds) to complete (survive) clutch mode (should be higher than critical threshold)")]
			public float nominalTimerThreshold;

			[Token(Token = "0x4000897")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Time players need to get back to nominal in order to count a clutch save")]
			public float timeToGetToNominal;
		}

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float avgHitAccuracyWindow;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float avgDamagePerShotWindow;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float avgPointsPerShotWindow;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float avgPowershotUsageWindow;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float avgGravitySlingUsageWindow;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int minNumShotsToCalcHitAccuracy;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClutchSave clutchSave;
	}

	[Serializable]
	[Token(Token = "0x2000132")]
	public struct Solo
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numIncompleteSetsToUnlockNextStage;
	}

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeoutToOfferOfflineMode;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OverallStats overallStats;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Solo solo;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string offlineFilename;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xD0CC4C", Offset = "0xD0CC4C", VA = "0xD0CC4C")]
	public ProfileSettings()
	{
	}
}
[Token(Token = "0x2000133")]
[CreateAssetMenu(menuName = "Data/Racket Configurations")]
public class RacketConfigurations : ScriptableObject
{
	[Token(Token = "0x2000134")]
	public enum Mode
	{
		[Token(Token = "0x40008B4")]
		Release,
		[Token(Token = "0x40008B5")]
		Debug
	}

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string multiplayerVersion;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mode mode;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Store/Social platform (or None for offline)")]
	public NativePlatformType nativePlatform;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Affects RNX platform and UNet backend selection")]
	public BackendSettings.Region region;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BuildType buildType;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Config assets")]
	public DebugSettings debug;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DebugSettings release;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ArcadesSettings arcades;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RNX.AudioSettings audio;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VideoSettings video;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UISettings UI;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ProfileSettings profile;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LeaderboardSettings leaderboard;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BackendSettings backend;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MultiplayerSettings multiplayer;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnalyticsSettings analytics;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public EmailSettings email;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LocalizationSettings localization;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MedalsSettings medals;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PowerUpSettings powerUp;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AvatarSettings avatars;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnnouncerSettings announcer;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DemoSettings demo;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ItemsDefs itemsDefs;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ItemsSettings itemsSettings;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LevelEditorSettings levelEditorConfig;

	[Token(Token = "0x1700011E")]
	public string versionText
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0xD0CCD0", Offset = "0xD0CCD0", VA = "0xD0CCD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xD0CD34", Offset = "0xD0CD34", VA = "0xD0CD34")]
	public RacketConfigurations()
	{
	}
}
[Token(Token = "0x2000135")]
[ExecuteInEditMode]
public class RacketSettings : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x2000136")]
	public class GeneralSettings
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float openingSequenceSpeed;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float restartSequenceSpeed;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float roomAssemblySpeed;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float roomDisassemblySpeed;

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xD0F638", Offset = "0xD0F638", VA = "0xD0F638")]
		public GeneralSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000137")]
	public class ScoreTextSettings
	{
		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Placement")]
		public float damageScoreDistFromHex;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float bossScoreDistFromCenter;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float powerupDistFromWall;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float toalDistFromWall;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Roll up animation")]
		public float rollUpAnimationAmount;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rollUpAnimationAmountBig;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rollUpAnimationDuration;

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xD0F648", Offset = "0xD0F648", VA = "0xD0F648")]
		public ScoreTextSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000138")]
	public class RoomSettings
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float defaultReflectionExposure;

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xD0F678", Offset = "0xD0F678", VA = "0xD0F678")]
		public RoomSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000139")]
	public class ScoreAndEnergy
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Damage PTS")]
		public int baseDamagePoints;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int eachDamageIncrease;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxDamagePoints;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Boss PTS")]
		public int bossRemovalPoints;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bossSingleShotBonus;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int doubleBossBonus;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int healingRemovalPoints;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int healingBonusPerDP;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int snakeRemovalPoints;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int hyperspeedBossBonus;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Energy")]
		public float energyFromBooster;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float energyFromDowner;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float energyFromTargetScale;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Header("Multiplayer")]
		public int downerPointsLost;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int bossSingleShotBonusMP;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int doubleBossBonusMP;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int maxDamagePointsMP;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int lastTargetBonusMP;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int hyperspeedBossBonusMP;

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xD0F680", Offset = "0xD0F680", VA = "0xD0F680")]
		public ScoreAndEnergy()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200013A")]
	public class TimeScaleParams
	{
		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] steps;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float scalePerStep;

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xD0F6DC", Offset = "0xD0F6DC", VA = "0xD0F6DC")]
		public float GetScale(int value, out float progressToNextLevel, out bool lastLevel)
		{
			return default(float);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xD0F7B4", Offset = "0xD0F7B4", VA = "0xD0F7B4")]
		public TimeScaleParams()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200013B")]
	public class GamePlaySettings
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Diffculty")]
		[Tooltip("Initial timer amount")]
		public float globalTimerMaxValue;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Timer rate of descent per diff.\r\n2 - means timer depleats at twice the normal rate")]
		public AnimationCurve timerDifficultyCurve_Arcade;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The amount of time bonus required\r\nto generate a hael particle (score)")]
		public float timePerScorePoint;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Multiplayer Score")]
		[Tooltip("Score multiplier according to wave progress (drama escalataion)")]
		public AnimationCurve scoreRampUpPerWave_MP;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("(Unused) Max round time in seconds)")]
		[Header("Multiplayer Best Of Three")]
		[Obsolete]
		public float maxRoundTime;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Max wave time in seconds")]
		public float maxWaveTime;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Max wave time for last wave in seconds")]
		public float maxWaveTimeLastWave;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Shot clock time in seconds")]
		public float shotClock;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Shot clock time before the first hit in seconds")]
		public float startShotClock;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("T - this time for playing the beep sound")]
		public float shotCountWarningStart;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Array that contains all the streaks displayed to the player")]
		public int[] streakDisplayList;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Time scale")]
		public TimeScaleParams arcadeClassicTimeScale;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TimeScaleParams arcadeNightmareTimeScale;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimeScaleParams coOpTimeScale;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeScaleParams versusTimeScale;

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xD0F7C8", Offset = "0xD0F7C8", VA = "0xD0F7C8")]
		public GamePlaySettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200013C")]
	public class BallModeSettings
	{
		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material[] Materials;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light BallLightSettings;

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xD0F7F0", Offset = "0xD0F7F0", VA = "0xD0F7F0")]
		public BallModeSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200013D")]
	public class Racket
	{
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float colliderScale_MinSpeed;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float colliderScale_MaxSpeed;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float colliderScale_Scale;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float angularVelocitySpinFactor;

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xD0F7F8", Offset = "0xD0F7F8", VA = "0xD0F7F8")]
		public Racket()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200013E")]
	public class BallSettings
	{
		[Serializable]
		[Token(Token = "0x200013F")]
		public class Power
		{
			[Token(Token = "0x400093B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float minPowerShotSpeed;

			[Token(Token = "0x400093C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxPowerShotSpeed;

			[Token(Token = "0x60006CF")]
			[Address(RVA = "0xD0FBBC", Offset = "0xD0FBBC", VA = "0xD0FBBC")]
			public Power()
			{
			}
		}

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Physics")]
		public float fastBallDamping;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _minDampedVelocity;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxVelocity;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float floaterHitVelocity;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float floaterHitVelocityCoOp;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float shieldReturnVelocity;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gravityFactor;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float awayFactor;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Racket Impact Control")]
		public float velocityFactor;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minTimeBetweenRacketHits;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float massRatio;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float racketFriction;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Spin Control")]
		public float _maxSpin;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float racketSpinFactor;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float racketSpinExponent;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float spinToVelocityFactor;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float spinDamping;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float maxDampingAtAngularVel;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Power shot")]
		public Power power;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Portal Entry")]
		public float disappearDuration;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float portalEntryForwardStrength;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float portalEntryCentricStrength;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float portalEntryAngularStrength;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float portalBaseDrag;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float portalAntiFleeDrag;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Visual Modes")]
		public BallModeSettings NormalMode;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BallModeSettings ImpactMode;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BallModeSettings IceChargeMode;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BallModeSettings RacketBrokenMode;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BallModeSettings NormalMode_P2;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BallModeSettings ImpactMode_P2;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BallModeSettings IceChargeMode_P2;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BallModeSettings RacketBrokenMode_P2;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Header("Trigger Pull")]
		public float pullFactor;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float pullDamping;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float pullDampingFromBehind;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float pullSidewayDamping;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float pullSidewayDampingFromBehind;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float pullKeepDistanceK;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float pullVelocityTransferToBall;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float pullSpringTransferToBall;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float pullSpringTearTimer;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[Header("Impact")]
		public float wallHitImpactFactor;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float lowRacketHitImpactFactor;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float highRacketHitImpactFactor;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float lowRacketHitValue;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float powerShotRacketHitImpactFactorMin;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float powerShotRacketHitImpactFactorMax;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float minImpactDuration;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float maxImpactDuration;

		[Token(Token = "0x1700014F")]
		public float minDampedVelocity
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0xD0F800", Offset = "0xD0F800", VA = "0xD0F800")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000150")]
		public float currentVelocityFactor
		{
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0xD0F8EC", Offset = "0xD0F8EC", VA = "0xD0F8EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000151")]
		public float maxSpin
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0xD0F9D8", Offset = "0xD0F9D8", VA = "0xD0F9D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xD0F9FC", Offset = "0xD0F9FC", VA = "0xD0F9FC")]
		public BallModeSettings GetModeSettings(BallBlendedMaterial.BallVisualMode mode, bool player2 = false)
		{
			return null;
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xD0FB48", Offset = "0xD0FB48", VA = "0xD0FB48")]
		public BallSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000140")]
	public class BrickSettings
	{
		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Surface")]
		public float[] distancesFromOutline;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Glow")]
		public HitLight hitLightPrefab_P1;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitLight hitLightPrefab_P2;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HitLight freezeHitLightPrefab;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BrickGlow.Params glowParamsP1;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BrickGlow.Params glowParamsP2;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BrickGlow.Params freezeGlowParams;

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xD0FBD0", Offset = "0xD0FBD0", VA = "0xD0FBD0")]
		public BrickSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000141")]
	public class RippleSettings
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int initialCharge;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int initialDoubleCharge;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float volumeReductionPerHex;

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xD0FBD8", Offset = "0xD0FBD8", VA = "0xD0FBD8")]
		public RippleSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000142")]
	public class PortalSettings
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Audio")]
		public float minDuration;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float exitSoundTimeBeforeEmergence;

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xD0FBF4", Offset = "0xD0FBF4", VA = "0xD0FBF4")]
		public PortalSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000143")]
	public class ShieldSettings
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabledInArcade;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool enabledInCoOp;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Space]
		public int staticTargetMinWave;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int snakeTargetMinWave;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int singleHexTargetMinWave;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int healingTargetMinWave;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Space]
		public int initStep;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int finalStep;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int finalStepWave;

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xD0FC08", Offset = "0xD0FC08", VA = "0xD0FC08")]
		public ShieldSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000144")]
	public class PowerShot
	{
		[Serializable]
		[Token(Token = "0x2000145")]
		public class PlowEffect
		{
			[Token(Token = "0x400095F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject prefab;

			[Token(Token = "0x4000960")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fadeInTime;

			[Token(Token = "0x4000961")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float minSpedkMlt;

			[Token(Token = "0x4000962")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxSpedkMlt;

			[Token(Token = "0x60006D5")]
			[Address(RVA = "0xD0FC5C", Offset = "0xD0FC5C", VA = "0xD0FC5C")]
			public PlowEffect()
			{
			}
		}

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Params")]
		public float rotationStrength;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("Plow timer")]
		public float minPlowTime;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxPlowTime;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Plow timer loss")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowEmptyEnergyLoss;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowTargetEnergyLoss;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowBoosterEnergyLoss;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowDownerEnergyLoss;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowSliderEnergyLoss;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowPostBlasterEnergyLoss_1st;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("1 - keeps all energy\r\n0 - lose all enery")]
		public float plowPostBlasterEnergyLoss_2nd;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Plow params")]
		public float plowSpeed;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float plowExitSpeed;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PlowEffect plowEffect;

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xD0FC38", Offset = "0xD0FC38", VA = "0xD0FC38")]
		public PowerShot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000146")]
	public class SnapTurnSettings
	{
		[Token(Token = "0x2000147")]
		public enum TurnMode
		{
			[Token(Token = "0x4000968")]
			Snap,
			[Token(Token = "0x4000969")]
			Smooth
		}

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TurnMode mode;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float angle;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Time it takes to smooth turn 90 degrees")]
		public float duration;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ball;

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xD0FC78", Offset = "0xD0FC78", VA = "0xD0FC78")]
		public SnapTurnSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000148")]
	public class HapticSettings
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxImpactStrength;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDuration;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDuration;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float minIntensity;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxIntensity;

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xD0FC94", Offset = "0xD0FC94", VA = "0xD0FC94")]
		public HapticSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000149")]
	public class LevelEditor
	{
		[Serializable]
		[Token(Token = "0x200014A")]
		public class Materials
		{
			[Token(Token = "0x4000979")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material empty;

			[Token(Token = "0x400097A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material portal;

			[Token(Token = "0x400097B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material bonus;

			[Token(Token = "0x400097C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material bogus;

			[Token(Token = "0x400097D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Material boosterSwitch;

			[Token(Token = "0x400097E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Material staticTarget;

			[Token(Token = "0x400097F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Material snakeHead;

			[Token(Token = "0x4000980")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Material snakeTail;

			[Token(Token = "0x4000981")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public Material disabled;

			[Token(Token = "0x4000982")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Material healing;

			[Token(Token = "0x4000983")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Material slider;

			[Token(Token = "0x60006D9")]
			[Address(RVA = "0xD0FD10", Offset = "0xD0FD10", VA = "0xD0FD10")]
			public Materials()
			{
			}
		}

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Materials materials;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gutterImagePrefab;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture numbersTexture;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture hexTexture;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material hexExtrudedMat;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material hexKickerMat;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Material hexBlasterMat;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Material hexForceFieldMat;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float tileHeight;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 spacing;

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xD0FCB0", Offset = "0xD0FCB0", VA = "0xD0FCB0")]
		public LevelEditor()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200014B")]
	public class Legal
	{
		[Serializable]
		[Token(Token = "0x200014C")]
		public class Keys
		{
			[Token(Token = "0x4000985")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string agreed;

			[Token(Token = "0x60006DB")]
			[Address(RVA = "0xD0FD20", Offset = "0xD0FD20", VA = "0xD0FD20")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Keys keys;

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xD0FD18", Offset = "0xD0FD18", VA = "0xD0FD18")]
		public Legal()
		{
		}
	}

	[Token(Token = "0x200014D")]
	public struct RNX_Config
	{
		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool use_2nd_controller;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool spectating_camera_mode;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool disable_swoosh;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool disable_snap_turn;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool disable_song_skipping;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int personal_lobby_server_port;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int ranked_lobby_server_port;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pin_lobby_server_port;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int pin_locked_lobby_server_port;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool render_first_person_view;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float first_person_view_fov;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool crop_player;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool show_player_proxy;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float body_radius;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float body_extension;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float arm_radius;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float arm_extension;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool disable_scorebar;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float players_distance;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool dynamic_players_distance;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int delayed_mr_buffer_size;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int delayed_mr_frame_step;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool override_near_and_far;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool same_space_multiplayer;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string override_players_file;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool lan_enabled;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool lan_role_is_server;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string lan_server_hostname;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int lan_server_udp_port;

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xD0FD78", Offset = "0xD0FD78", VA = "0xD0FD78")]
		public void loadDefaults()
		{
		}
	}

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float Epsilon;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool WAVE_CONTENT_CONFIG;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RacketConfigurations configuration;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RacketVersion _version;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static RacketVersion _multiplayerVersion;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header(" Debug ")]
	public bool enableAudioDemo;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GeneralSettings _general;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ScoreTextSettings _scoreText;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RoomSettings _room;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ScoreAndEnergy _scoreAndEnergy;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GamePlaySettings _gamePlay;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Racket _racket;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BallSettings _ball;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BrickSettings _brick;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RippleSettings _ripple;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PortalSettings _portal;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ShieldSettings _shield;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PowerShot _powerShot;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SnapTurnSettings _snapTurn;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HapticSettings _haptic;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LevelEditor _levelEditor;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Legal _legal;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _externalConfigFileName;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public RNX_Config _externalConfig;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static RacketSettings inst_waveContent;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static RacketSettings inst;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool _needsToReadExternalConfig;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _UnscaledTimeID;

	[Token(Token = "0x1700011F")]
	public static string versionText
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0xD0CD3C", Offset = "0xD0CD3C", VA = "0xD0CD3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000120")]
	public static string multiplayerVersionText
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0xD0CDA4", Offset = "0xD0CDA4", VA = "0xD0CDA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000121")]
	private static string RegionMultiplayerVersion
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xD0CE4C", Offset = "0xD0CE4C", VA = "0xD0CE4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000122")]
	public static RacketVersion version
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xD0CF10", Offset = "0xD0CF10", VA = "0xD0CF10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public static RacketVersion multiplayerVersion
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0xD0CFD0", Offset = "0xD0CFD0", VA = "0xD0CFD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000124")]
	public static RacketConfigurations.Mode mode
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0xD0D090", Offset = "0xD0D090", VA = "0xD0D090")]
		get
		{
			return default(RacketConfigurations.Mode);
		}
	}

	[Token(Token = "0x17000125")]
	public static bool isDebugMode
	{
		[Token(Token = "0x600068B")]
		[Address(RVA = "0xD0D0FC", Offset = "0xD0D0FC", VA = "0xD0D0FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000126")]
	public static bool isReleaseMode
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xD0D170", Offset = "0xD0D170", VA = "0xD0D170")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000127")]
	public static DebugSettings debug
	{
		[Token(Token = "0x600068D")]
		[Address(RVA = "0xCFE0C4", Offset = "0xCFE0C4", VA = "0xCFE0C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000128")]
	public static BuildType buildType
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0xD0D3E8", Offset = "0xD0D3E8", VA = "0xD0D3E8")]
		get
		{
			return default(BuildType);
		}
	}

	[Token(Token = "0x17000129")]
	public static BackendSettings.Region region
	{
		[Token(Token = "0x600068F")]
		[Address(RVA = "0xD09860", Offset = "0xD09860", VA = "0xD09860")]
		get
		{
			return default(BackendSettings.Region);
		}
	}

	[Token(Token = "0x1700012A")]
	public static NativePlatformType nativePlatform
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0xD09A44", Offset = "0xD09A44", VA = "0xD09A44")]
		get
		{
			return default(NativePlatformType);
		}
	}

	[Token(Token = "0x1700012B")]
	public static ArcadesSettings arcades
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0xD0D454", Offset = "0xD0D454", VA = "0xD0D454")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public static RNX.AudioSettings audio
	{
		[Token(Token = "0x6000692")]
		[Address(RVA = "0xD0D4C0", Offset = "0xD0D4C0", VA = "0xD0D4C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012D")]
	public static VideoSettings video
	{
		[Token(Token = "0x6000693")]
		[Address(RVA = "0xD0D52C", Offset = "0xD0D52C", VA = "0xD0D52C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public static UISettings ui
	{
		[Token(Token = "0x6000694")]
		[Address(RVA = "0xD0D598", Offset = "0xD0D598", VA = "0xD0D598")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public static ProfileSettings profile
	{
		[Token(Token = "0x6000695")]
		[Address(RVA = "0xD0D604", Offset = "0xD0D604", VA = "0xD0D604")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public static LeaderboardSettings leaderboard
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0xD0D670", Offset = "0xD0D670", VA = "0xD0D670")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000131")]
	public static BackendSettings backend
	{
		[Token(Token = "0x6000697")]
		[Address(RVA = "0xD09034", Offset = "0xD09034", VA = "0xD09034")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000132")]
	public static MultiplayerSettings multiplayer
	{
		[Token(Token = "0x6000698")]
		[Address(RVA = "0xD0D6DC", Offset = "0xD0D6DC", VA = "0xD0D6DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000133")]
	public static AnalyticsSettings analytics
	{
		[Token(Token = "0x6000699")]
		[Address(RVA = "0xD0D748", Offset = "0xD0D748", VA = "0xD0D748")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000134")]
	public static EmailSettings email
	{
		[Token(Token = "0x600069A")]
		[Address(RVA = "0xD0D7B4", Offset = "0xD0D7B4", VA = "0xD0D7B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000135")]
	public static LocalizationSettings localization
	{
		[Token(Token = "0x600069B")]
		[Address(RVA = "0xD0D820", Offset = "0xD0D820", VA = "0xD0D820")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000136")]
	public static MedalsSettings medals
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0xD0D88C", Offset = "0xD0D88C", VA = "0xD0D88C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000137")]
	public static PowerUpSettings powerUp
	{
		[Token(Token = "0x600069D")]
		[Address(RVA = "0xD0D8F8", Offset = "0xD0D8F8", VA = "0xD0D8F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public static AvatarSettings avatars
	{
		[Token(Token = "0x600069E")]
		[Address(RVA = "0xD0BBDC", Offset = "0xD0BBDC", VA = "0xD0BBDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000139")]
	public static AnnouncerSettings announcer
	{
		[Token(Token = "0x600069F")]
		[Address(RVA = "0xD0D964", Offset = "0xD0D964", VA = "0xD0D964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013A")]
	public static DemoSettings demo
	{
		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xD0D9D0", Offset = "0xD0D9D0", VA = "0xD0D9D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public static ItemsDefs itemsDefs
	{
		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xD0A47C", Offset = "0xD0A47C", VA = "0xD0A47C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013C")]
	public static ItemsSettings itemsSettings
	{
		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xD0DA3C", Offset = "0xD0DA3C", VA = "0xD0DA3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013D")]
	public static bool monthlyChallengesDisabled
	{
		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xD0DAA8", Offset = "0xD0DAA8", VA = "0xD0DAA8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013E")]
	public static GeneralSettings general
	{
		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xD0DB30", Offset = "0xD0DB30", VA = "0xD0DB30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013F")]
	public static ScoreTextSettings scoreText
	{
		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xD0DB94", Offset = "0xD0DB94", VA = "0xD0DB94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000140")]
	public static RoomSettings room
	{
		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xD0DBF8", Offset = "0xD0DBF8", VA = "0xD0DBF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000141")]
	public static ScoreAndEnergy scoreAndEnergy
	{
		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xD0DC5C", Offset = "0xD0DC5C", VA = "0xD0DC5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000142")]
	public static GamePlaySettings gamePlay
	{
		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xCFD240", Offset = "0xCFD240", VA = "0xCFD240")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000143")]
	public static Racket racket
	{
		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xD0DCC0", Offset = "0xD0DCC0", VA = "0xD0DCC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000144")]
	public static BallSettings ball
	{
		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xCFE250", Offset = "0xCFE250", VA = "0xCFE250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000145")]
	public static BrickSettings brick
	{
		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xD0DD24", Offset = "0xD0DD24", VA = "0xD0DD24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000146")]
	public static RippleSettings ripple
	{
		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xD0DD88", Offset = "0xD0DD88", VA = "0xD0DD88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000147")]
	public static PortalSettings portal
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xD0DDEC", Offset = "0xD0DDEC", VA = "0xD0DDEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public static ShieldSettings shield
	{
		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xD0DE50", Offset = "0xD0DE50", VA = "0xD0DE50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000149")]
	public static PowerShot powerShot
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xD0DEB4", Offset = "0xD0DEB4", VA = "0xD0DEB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014A")]
	public static SnapTurnSettings snapTurn
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xD0DF18", Offset = "0xD0DF18", VA = "0xD0DF18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014B")]
	public static HapticSettings haptic
	{
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xD0DF7C", Offset = "0xD0DF7C", VA = "0xD0DF7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014C")]
	public static LevelEditor levelEditor
	{
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xD0DFE0", Offset = "0xD0DFE0", VA = "0xD0DFE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014D")]
	public static Legal legal
	{
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xD0E0B0", Offset = "0xD0E0B0", VA = "0xD0E0B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public static RNX_Config externalConfig
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xD09C80", Offset = "0xD09C80", VA = "0xD09C80")]
		get
		{
			return default(RNX_Config);
		}
	}

	[Token(Token = "0x1400000C")]
	public static event Action onExternalConfigUpdated
	{
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xD0ED00", Offset = "0xD0ED00", VA = "0xD0ED00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xD0EDDC", Offset = "0xD0EDDC", VA = "0xD0EDDC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xD0E114", Offset = "0xD0E114", VA = "0xD0E114")]
	private void readExternalConfig()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xD0D1E4", Offset = "0xD0D1E4", VA = "0xD0D1E4")]
	private static void init()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xD0EEB8", Offset = "0xD0EEB8", VA = "0xD0EEB8", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xD0EF04", Offset = "0xD0EF04", VA = "0xD0EF04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xD0F1B0", Offset = "0xD0F1B0", VA = "0xD0F1B0")]
	private void SetCloudDiagnosticsMetaData()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xD0F3B4", Offset = "0xD0F3B4", VA = "0xD0F3B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xD0F47C", Offset = "0xD0F47C", VA = "0xD0F47C")]
	private static void onExternalConfigFileChanged(bool exists)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xD0F4D8", Offset = "0xD0F4D8", VA = "0xD0F4D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xD0F578", Offset = "0xD0F578", VA = "0xD0F578")]
	public RacketSettings()
	{
	}
}
[Token(Token = "0x200014E")]
[CreateAssetMenu(menuName = "Data/UI Configuration", fileName = "UI Configuration")]
public class UISettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x200014F")]
	public class PlayerHeight
	{
		[Serializable]
		[Token(Token = "0x2000150")]
		public class RelativeHeights
		{
			[Token(Token = "0x40009B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("The position of the head-mounted display relative to the player height")]
			public float hmd;

			[Token(Token = "0x40009B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float eye;

			[Token(Token = "0x40009B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float chest;

			[Token(Token = "0x40009B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float pelvis;

			[Token(Token = "0x60006DF")]
			[Address(RVA = "0xD0FE98", Offset = "0xD0FE98", VA = "0xD0FE98")]
			public RelativeHeights()
			{
			}
		}

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RelativeHeights relativeHeights;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Initial period when no data is collected")]
		public float initialDelay;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Measurment time window")]
		public float historyDuration;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Measurment interval - the lower the more accurate")]
		public float measureInterval;

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xD0FE7C", Offset = "0xD0FE7C", VA = "0xD0FE7C")]
		public PlayerHeight()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000151")]
	public class Controller
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 raycastOriginOffset;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float raycastBackStart;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float length;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float lengthStartRoom;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lengthMainMenu;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lengthPlayerProfile;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float lengthTutorial;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lengthLevelEditor;

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xD0FEAC", Offset = "0xD0FEAC", VA = "0xD0FEAC")]
		public Controller()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000152")]
	public class Area
	{
		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float focusArcDegrees;

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xD0FED4", Offset = "0xD0FED4", VA = "0xD0FED4")]
		public Area()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000153")]
	public class MainMenu
	{
		[Serializable]
		[Token(Token = "0x2000154")]
		public class Transition
		{
			[Token(Token = "0x40009C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Tooltip("Smooth times: 1) between Hidden and Idle, 2) between Idle and Highlit and 3) between Highlit and Selected.")]
			public float[] smoothTimes;

			[Token(Token = "0x40009C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float minSmoothTime;

			[Token(Token = "0x40009C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float hideSpeedFactor;

			[Token(Token = "0x40009C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxSpeed;

			[Token(Token = "0x40009C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float interactableEpsilon;

			[Token(Token = "0x40009C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float nearlyDoneEpsilon;

			[Token(Token = "0x40009C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float doneEpsilon;

			[Token(Token = "0x60006E3")]
			[Address(RVA = "0xD0FEF8", Offset = "0xD0FEF8", VA = "0xD0FEF8")]
			public Transition()
			{
			}
		}

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transition transition;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Distance of sounds coming from distant celestial bodies (main menu items)")]
		public float farSoundDistance;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float areaShowDelay;

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xD0FEE4", Offset = "0xD0FEE4", VA = "0xD0FEE4")]
		public MainMenu()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000155")]
	public class Haptic
	{
		[Serializable]
		[Token(Token = "0x2000156")]
		public class Intensities
		{
			[Token(Token = "0x40009C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(100f, 3999f)]
			public ushort hover;

			[Token(Token = "0x40009CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[Range(100f, 3999f)]
			public ushort unhover;

			[Token(Token = "0x60006E5")]
			[Address(RVA = "0xD0FF28", Offset = "0xD0FF28", VA = "0xD0FF28")]
			public Intensities()
			{
			}
		}

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Intensities intensities;

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xD0FF20", Offset = "0xD0FF20", VA = "0xD0FF20")]
		public Haptic()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000157")]
	public class BallCounter
	{
		[Serializable]
		[Token(Token = "0x2000158")]
		public class Active
		{
			[Token(Token = "0x40009CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float smoothTime;

			[Token(Token = "0x40009CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float decayStart;

			[Token(Token = "0x40009CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float decayDuration;

			[Token(Token = "0x60006E7")]
			[Address(RVA = "0xD0FF44", Offset = "0xD0FF44", VA = "0xD0FF44")]
			public Active()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000159")]
		public class Hits
		{
			[Token(Token = "0x40009D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float increase;

			[Token(Token = "0x40009D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float decayDuration;

			[Token(Token = "0x60006E8")]
			[Address(RVA = "0xD0FF64", Offset = "0xD0FF64", VA = "0xD0FF64")]
			public Hits()
			{
			}
		}

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Active active;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hits hits;

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xD0FF3C", Offset = "0xD0FF3C", VA = "0xD0FF3C")]
		public BallCounter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200015A")]
	public class LocalizedTexts
	{
		[Serializable]
		[Token(Token = "0x200015B")]
		public class PlayerLevels
		{
			[Token(Token = "0x40009D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString noLevel;

			[Token(Token = "0x40009D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString unrated;

			[Token(Token = "0x40009DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString noob;

			[Token(Token = "0x40009DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString underdog;

			[Token(Token = "0x40009DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LocalizedString risingStar;

			[Token(Token = "0x40009DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public LocalizedString baller;

			[Token(Token = "0x40009DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public LocalizedString master;

			[Token(Token = "0x40009DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public LocalizedString racketLord;

			[Token(Token = "0x40009E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public LocalizedString ballBuster;

			[Token(Token = "0x60006EA")]
			[Address(RVA = "0xD0FF7C", Offset = "0xD0FF7C", VA = "0xD0FF7C")]
			public PlayerLevels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200015C")]
		public class PlayerStatuses
		{
			[Token(Token = "0x40009E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString unknown;

			[Token(Token = "0x40009E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString offline;

			[Token(Token = "0x40009E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString notInRacket_Online;

			[Token(Token = "0x40009E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString notInRacket_Away;

			[Token(Token = "0x40009E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LocalizedString notInRacket_Busy;

			[Token(Token = "0x40009E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public LocalizedString inMenus;

			[Token(Token = "0x40009E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public LocalizedString playingSolo;

			[Token(Token = "0x40009E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public LocalizedString playingArcade;

			[Token(Token = "0x40009E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public LocalizedString playingMultiplayer;

			[Token(Token = "0x40009EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public LocalizedString playingCustomSet;

			[Token(Token = "0x40009EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			public LocalizedString editingCustomSet;

			[Token(Token = "0x60006EB")]
			[Address(RVA = "0xD0FF84", Offset = "0xD0FF84", VA = "0xD0FF84")]
			public PlayerStatuses()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200015D")]
		public class Options
		{
			[Token(Token = "0x40009EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString settings;

			[Token(Token = "0x40009ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString howToPlay;

			[Token(Token = "0x40009EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString restart;

			[Token(Token = "0x40009EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString forfeit;

			[Token(Token = "0x40009F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public LocalizedString zenFinish;

			[Token(Token = "0x40009F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public LocalizedString mainMenu;

			[Token(Token = "0x40009F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public LocalizedString skipTutorial;

			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public LocalizedString edit;

			[Token(Token = "0x40009F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public LocalizedString browse;

			[Token(Token = "0x60006EC")]
			[Address(RVA = "0xD0FF8C", Offset = "0xD0FF8C", VA = "0xD0FF8C")]
			public Options()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200015E")]
		public class MultiplayerDesc
		{
			[Token(Token = "0x40009F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString offline;

			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString tempOffline;

			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString unsupportedMultiplayerVersion;

			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString newSeason;

			[Token(Token = "0x60006ED")]
			[Address(RVA = "0xD0FF94", Offset = "0xD0FF94", VA = "0xD0FF94")]
			public MultiplayerDesc()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200015F")]
		public class InGame
		{
			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString shot;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizedString oneShot;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizedString forceField;

			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public LocalizedString tooFast;

			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xD0FF9C", Offset = "0xD0FF9C", VA = "0xD0FF9C")]
			public InGame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000160")]
		public class Months
		{
			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizedString[] full;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LocalizedString[] abbr;

			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xD0FFA4", Offset = "0xD0FFA4", VA = "0xD0FFA4")]
			public Months()
			{
			}
		}

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerLevels playerLevels;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerStatuses playerStatuses;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Options options;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MultiplayerDesc multiplayerDesc;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public InGame inGame;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Months months;

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xD0FF74", Offset = "0xD0FF74", VA = "0xD0FF74")]
		public LocalizedTexts()
		{
		}
	}

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerHeight playerHeight;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Controller controller;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Area area;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float clickCoolDown;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float popUpSafetyDisabledPeriod;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MainMenu mainMenu;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Haptic haptic;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("Where the visual trigger moves when squeezed")]
	public Vector3 triggerPressDirection;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BallCounter ballCounter;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LocalizedTexts localizedTexts;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xD0FE58", Offset = "0xD0FE58", VA = "0xD0FE58")]
	public UISettings()
	{
	}
}
[Token(Token = "0x2000161")]
[CreateAssetMenu(menuName = "Data/Video Settings")]
public class VideoSettings : UpdatableData
{
	[Serializable]
	[Token(Token = "0x2000162")]
	public struct PlatformSettings
	{
		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AntiAliasing.Mode antiAliasing;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SuperSampling.Mode superSampling;
	}

	[Serializable]
	[Token(Token = "0x2000163")]
	public class Keys
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string antiAliasing;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string renderScale;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string streamCamera;

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xD0FFD0", Offset = "0xD0FFD0", VA = "0xD0FFD0")]
		public Keys()
		{
		}
	}

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlatformSettings PCDefaultSettings;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlatformSettings questFixedSettings;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlatformSettings quest2FixedSettings;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlatformSettings psvrFixedSettings;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlatformSettings iqiyiFixedSettings;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Keys keys;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xD0FFAC", Offset = "0xD0FFAC", VA = "0xD0FFAC")]
	public VideoSettings()
	{
	}
}
[Token(Token = "0x2000164")]
public class LevelDeserializer : LevelSerializerBase
{
	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _text;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly object _tempBuilder_lock;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder _tempBuilder;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xD10078", Offset = "0xD10078", VA = "0xD10078")]
	public LevelDeserializer(string text)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xD104A0", Offset = "0xD104A0", VA = "0xD104A0")]
	public char GetChar(IntVector2 coords, int row, int col)
	{
		return default(char);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xD10568", Offset = "0xD10568", VA = "0xD10568")]
	public string GetString(IntVector2 coords, int row, int col, int size)
	{
		return null;
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xD107E4", Offset = "0xD107E4", VA = "0xD107E4")]
	public string GetRow(IntVector2 coords, int row, int leftTrim = 0, int rightTrim = 0)
	{
		return null;
	}
}
[Token(Token = "0x2000165")]
public class LevelSerializer : LevelSerializerBase
{
	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private StringBuilder _outputBuilder;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xD10998", Offset = "0xD10998", VA = "0xD10998")]
	public LevelSerializer()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xD10A3C", Offset = "0xD10A3C", VA = "0xD10A3C", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xD10A5C", Offset = "0xD10A5C", VA = "0xD10A5C")]
	public void SetChar(IntVector2 coords, int row, int col, char ch)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xD10B2C", Offset = "0xD10B2C", VA = "0xD10B2C")]
	public void WriteString(IntVector2 coords, int row, int col, string text)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xD10BB4", Offset = "0xD10BB4", VA = "0xD10BB4")]
	public void WriteStringCentered(IntVector2 coords, int row, int shift, string text)
	{
	}
}
[Token(Token = "0x2000166")]
public class LevelSerializerBase
{
	[Token(Token = "0x2000167")]
	protected class PsyfasData
	{
		[Token(Token = "0x2000168")]
		public struct Range
		{
			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int start;

			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int count;
		}

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string cleanText;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<IntVector2, Range[]> rangesByCoords;

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xD10E54", Offset = "0xD10E54", VA = "0xD10E54")]
		public PsyfasData()
		{
		}
	}

	[Token(Token = "0x4000A0E")]
	private const string psyfasResName = "psyfas";

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static string _resourcesDir;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static PsyfasData _psyfasData;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xD100B4", Offset = "0xD100B4", VA = "0xD100B4")]
	protected static void InitPsyfasData()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xD10C7C", Offset = "0xD10C7C", VA = "0xD10C7C")]
	private static int[] FindLineStarts(string text)
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xD10830", Offset = "0xD10830", VA = "0xD10830")]
	protected int GetRowWidth(IntVector2 coords, int row)
	{
		return default(int);
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xD100AC", Offset = "0xD100AC", VA = "0xD100AC")]
	public LevelSerializerBase()
	{
	}
}
[Token(Token = "0x200016A")]
public class WaveSetPacker : CratePacker
{
	[Token(Token = "0x6000704")]
	[Address(RVA = "0xD10EF0", Offset = "0xD10EF0", VA = "0xD10EF0", Slot = "4")]
	public override void Pack(BuiltCrate crate)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xD114BC", Offset = "0xD114BC", VA = "0xD114BC")]
	private static string SerializeWaveSet(WaveSet waveSet)
	{
		return null;
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xD11554", Offset = "0xD11554", VA = "0xD11554")]
	private static string SerializeWave(WaveHandcrafted wave)
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xD11804", Offset = "0xD11804", VA = "0xD11804")]
	private static string SerializeLevel(IEnumerable<IBrick> bricks)
	{
		return null;
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xD11D90", Offset = "0xD11D90", VA = "0xD11D90")]
	private static void SerializeBrickHextrusion(LevelSerializer serializer, IntVector2 coords, IBrick brick)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xD11F6C", Offset = "0xD11F6C", VA = "0xD11F6C")]
	private static string SerializeBrickTypeAndID(IBrick brick)
	{
		return null;
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xD12258", Offset = "0xD12258", VA = "0xD12258")]
	public WaveSetPacker()
	{
	}
}
[Token(Token = "0x200016B")]
public static class WaveSetUnpacker
{
	[Token(Token = "0x200016C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DownloadedCrate crate;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveSet waveSet;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Queue<string> resultQueue;

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xD13A14", Offset = "0xD13A14", VA = "0xD13A14")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xD13A1C", Offset = "0xD13A1C", VA = "0xD13A1C")]
		internal void <UnpackCo>b__0()
		{
		}
	}

	[Token(Token = "0x200016D")]
	[CompilerGenerated]
	private sealed class <UnpackCo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DownloadedCrate crate;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaveSet waveSet;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass6_0 <>8__1;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<WaveSet> onDone;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<string> onError;

		[Token(Token = "0x17000152")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000720")]
			[Address(RVA = "0xD13DE4", Offset = "0xD13DE4", VA = "0xD13DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000722")]
			[Address(RVA = "0xD13E2C", Offset = "0xD13E2C", VA = "0xD13E2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xD12500", Offset = "0xD12500", VA = "0xD12500")]
		[DebuggerHidden]
		public <UnpackCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xD13A2C", Offset = "0xD13A2C", VA = "0xD13A2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xD13A30", Offset = "0xD13A30", VA = "0xD13A30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xD13DEC", Offset = "0xD13DEC", VA = "0xD13DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<char, HexTrudeManager.WallType> _inverseWallTypeChars;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, BrickType> _inverseNonTargetTypeStrings;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<char, BrickType> _inverseTargetTypeChars;

	[Token(Token = "0x600070B")]
	public static Dictionary<TValue, TKey> Reverse<TKey, TValue>(this IDictionary<TKey, TValue> source)
	{
		return null;
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xD12260", Offset = "0xD12260", VA = "0xD12260")]
	private static void Init()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xD12408", Offset = "0xD12408", VA = "0xD12408")]
	public static void Unpack(MonoBehaviour surrogate, DownloadedCrate crate, Action<WaveSet> onDone, Action<string> onError, [Optional] WaveSet waveSet)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xD12440", Offset = "0xD12440", VA = "0xD12440")]
	[IteratorStateMachine(typeof(<UnpackCo>d__6))]
	private static IEnumerator UnpackCo(DownloadedCrate crate, Action<WaveSet> onDone, Action<string> onError, [Optional] WaveSet waveSet)
	{
		return null;
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xD12528", Offset = "0xD12528", VA = "0xD12528")]
	private static void UnpackWaves(DownloadedCrate crate, WaveSet waveSet)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xD127E8", Offset = "0xD127E8", VA = "0xD127E8")]
	private static void UnpackThread(DownloadedCrate crate, WaveSet waveSet, Queue<string> resultQueue)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xD1273C", Offset = "0xD1273C", VA = "0xD1273C")]
	public static int GetNumWaves(DownloadedCrate crate)
	{
		return default(int);
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xD12FB8", Offset = "0xD12FB8", VA = "0xD12FB8")]
	private static void DeserializeWaveSet(WaveSet waveSet, string json)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xD1303C", Offset = "0xD1303C", VA = "0xD1303C")]
	private static void DeserializeWave(WaveHandcrafted wave, string json)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD131DC", Offset = "0xD131DC", VA = "0xD131DC")]
	private static void DeserializeLevel(RuntimeBrick[] levelBricks, string text)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD13698", Offset = "0xD13698", VA = "0xD13698")]
	private static void DeserializeLevelNonRuntime(LevelBrick[] levelBricks, string text)
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD13824", Offset = "0xD13824", VA = "0xD13824")]
	private static void DeserializeBrickHextrusionLevelBrick(LevelBrick brick, char hextrusionChar)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD138E8", Offset = "0xD138E8", VA = "0xD138E8")]
	private static void DeserializeBrickTypeAndIDLevelBrick(LevelBrick brick, string text)
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD133BC", Offset = "0xD133BC", VA = "0xD133BC")]
	private static void DeserializeBrickHextrusion(ref RuntimeBrick brick, char hextrusionChar)
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xD13490", Offset = "0xD13490", VA = "0xD13490")]
	private static void DeserializeBrickTypeAndID(ref RuntimeBrick brick, string text)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xD135C8", Offset = "0xD135C8", VA = "0xD135C8")]
	private static bool DeserializeBrickForceField(string text)
	{
		return default(bool);
	}
}
[Token(Token = "0x200016E")]
public class DebugArrowVis : MonoBehaviour
{
	[Token(Token = "0x200016F")]
	[CompilerGenerated]
	private sealed class <EndOfFrameUpdate>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugArrowVis <>4__this;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <waitFormEnd>5__2;

		[Token(Token = "0x17000154")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xD1426C", Offset = "0xD1426C", VA = "0xD1426C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000155")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xD142B4", Offset = "0xD142B4", VA = "0xD142B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xD14174", Offset = "0xD14174", VA = "0xD14174")]
		[DebuggerHidden]
		public <EndOfFrameUpdate>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xD141A4", Offset = "0xD141A4", VA = "0xD141A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xD141A8", Offset = "0xD141A8", VA = "0xD141A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xD14274", Offset = "0xD14274", VA = "0xD14274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugArrowVis inst;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _AutoHide;

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xD13E34", Offset = "0xD13E34", VA = "0xD13E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xD13F50", Offset = "0xD13F50", VA = "0xD13F50")]
	public void Show(Vector3 pos, Vector3 arrow, bool bAutoHide = true)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xD13EDC", Offset = "0xD13EDC", VA = "0xD13EDC")]
	[IteratorStateMachine(typeof(<EndOfFrameUpdate>d__4))]
	private IEnumerator EndOfFrameUpdate()
	{
		return null;
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xD13EAC", Offset = "0xD13EAC", VA = "0xD13EAC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xD1419C", Offset = "0xD1419C", VA = "0xD1419C")]
	public DebugArrowVis()
	{
	}
}
[Token(Token = "0x2000170")]
public class DebugHUD : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	[CompilerGenerated]
	private sealed class <LinePeriod>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DebugHUD <>4__this;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float duration;

		[Token(Token = "0x17000156")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000737")]
			[Address(RVA = "0xD14638", Offset = "0xD14638", VA = "0xD14638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000157")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000739")]
			[Address(RVA = "0xD14680", Offset = "0xD14680", VA = "0xD14680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xD14584", Offset = "0xD14584", VA = "0xD14584")]
		[DebuggerHidden]
		public <LinePeriod>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xD145B4", Offset = "0xD145B4", VA = "0xD145B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xD145B8", Offset = "0xD145B8", VA = "0xD145B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xD14640", Offset = "0xD14640", VA = "0xD14640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugHUD inst;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text m_DebugText;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_iFrameCounter;

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xD142BC", Offset = "0xD142BC", VA = "0xD142BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xD14394", Offset = "0xD14394", VA = "0xD14394")]
	public void AddLine(string line)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xD14478", Offset = "0xD14478", VA = "0xD14478")]
	public void AddLine(string line, float duration)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xD14538", Offset = "0xD14538", VA = "0xD14538")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xD14498", Offset = "0xD14498", VA = "0xD14498")]
	[IteratorStateMachine(typeof(<LinePeriod>d__7))]
	private IEnumerator LinePeriod(string text, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xD145AC", Offset = "0xD145AC", VA = "0xD145AC")]
	public DebugHUD()
	{
	}
}
[Token(Token = "0x2000172")]
public class Mirror : MonoBehaviour
{
	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resolution;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _headCamera;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera _mirrorCamera;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh _mesh;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] _uv;

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xD14688", Offset = "0xD14688", VA = "0xD14688")]
	private void Awake()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xD14884", Offset = "0xD14884", VA = "0xD14884")]
	private void Update()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xD14CCC", Offset = "0xD14CCC", VA = "0xD14CCC")]
	public Mirror()
	{
	}
}
[Token(Token = "0x2000173")]
public class HexTile : MonoBehaviour, IEquatable<HexTile>, IComparable<HexTile>
{
	[Token(Token = "0x2000174")]
	public enum HexDirection
	{
		[Token(Token = "0x4000A4E")]
		Top,
		[Token(Token = "0x4000A4F")]
		TopRight,
		[Token(Token = "0x4000A50")]
		BottomRight,
		[Token(Token = "0x4000A51")]
		Bottom,
		[Token(Token = "0x4000A52")]
		BottomLeft,
		[Token(Token = "0x4000A53")]
		TopLeft,
		[Token(Token = "0x4000A54")]
		Count,
		[Token(Token = "0x4000A55")]
		Invalid
	}

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public IntVector2 coords;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int _numNeighbors;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _numBrickNeighbors;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HexTile[] _neighborHexes;

	[NonSerialized]
	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 originalPos;

	[NonSerialized]
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 targetPos;

	[NonSerialized]
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 prevPos;

	[NonSerialized]
	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<WallText> _attachedWallTexts;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Brick[] _brickNeighbors;

	[NonSerialized]
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform _surfaceObj;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Mesh _mesh;

	[NonSerialized]
	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int uvDepthIndex;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Brick _brick;

	[NonSerialized]
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HexTrudeManager.Hex _hextrudeHex;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector2[] _cachedUV2;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Vector3> _cachedUVList3;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _vertexCount;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UVMap _uvMap;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static UVMapFusion _staticFuseMapper;

	[Token(Token = "0x4000A4C")]
	private const float dontCare = 0.12345f;

	[Token(Token = "0x17000158")]
	public Brick[] brickNeighbors
	{
		[Token(Token = "0x600073D")]
		[Address(RVA = "0xD14CDC", Offset = "0xD14CDC", VA = "0xD14CDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000159")]
	public Mesh surfaceMesh
	{
		[Token(Token = "0x600073F")]
		[Address(RVA = "0xD14F70", Offset = "0xD14F70", VA = "0xD14F70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015A")]
	public UVMap uvMap
	{
		[Token(Token = "0x6000740")]
		[Address(RVA = "0xD14F78", Offset = "0xD14F78", VA = "0xD14F78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xD14EB8", Offset = "0xD14EB8", VA = "0xD14EB8")]
	public bool isNeighbor(HexTile otherHex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xD14F80", Offset = "0xD14F80", VA = "0xD14F80")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xD15008", Offset = "0xD15008", VA = "0xD15008")]
	public void init()
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xD156CC", Offset = "0xD156CC", VA = "0xD156CC")]
	public static bool isCoordDisabledInMultiplayer(IntVector2 coords)
	{
		return default(bool);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xD15174", Offset = "0xD15174", VA = "0xD15174")]
	private void initSurfaceObj()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xD154A4", Offset = "0xD154A4", VA = "0xD154A4")]
	private void UVMapSingleHex()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xD15800", Offset = "0xD15800", VA = "0xD15800")]
	private void applyHexUvMap()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xD15908", Offset = "0xD15908", VA = "0xD15908")]
	private void applyFusionUvMap()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xD15540", Offset = "0xD15540", VA = "0xD15540")]
	public void ApplyHexPortalUvMap()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xD15A04", Offset = "0xD15A04", VA = "0xD15A04")]
	private float[] getDistancesFromFushionOutline(float minDist, float maxDist)
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xD15B00", Offset = "0xD15B00", VA = "0xD15B00")]
	public static HexDirection oppositeDirection(HexDirection dir)
	{
		return default(HexDirection);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xD15B28", Offset = "0xD15B28", VA = "0xD15B28")]
	public static HexDirection mirrorDirection(HexDirection dir)
	{
		return default(HexDirection);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xD15B40", Offset = "0xD15B40", VA = "0xD15B40")]
	private static bool isOppositeDirections(HexDirection dir1, HexDirection dir2)
	{
		return default(bool);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xD15BC8", Offset = "0xD15BC8", VA = "0xD15BC8")]
	private static float[] calculateSnakeMapping(HexTile tile, HexDirection prevDir, HexDirection nextDir)
	{
		return null;
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xD162E4", Offset = "0xD162E4", VA = "0xD162E4")]
	public static void UVMapHexChain(List<HexTile> hexChain, bool reversed, HexTile prevHexTile)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xD166CC", Offset = "0xD166CC", VA = "0xD166CC")]
	public static void UVMapHexList(List<HexTile> hexList, bool apply = true)
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xD17344", Offset = "0xD17344", VA = "0xD17344")]
	public void RestoreUVMap()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xD162A8", Offset = "0xD162A8", VA = "0xD162A8")]
	public HexTile GetNeighborTile(HexDirection dir)
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xD17058", Offset = "0xD17058", VA = "0xD17058")]
	public HexDirection GetNeighborDir(HexTile hex)
	{
		return default(HexDirection);
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xD17348", Offset = "0xD17348", VA = "0xD17348")]
	public void Init()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xD17498", Offset = "0xD17498", VA = "0xD17498")]
	public static void RemoveHexesFromListWithNeighbors(List<HexTile> srcList, List<HexTile> removeList, int degree)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xD17674", Offset = "0xD17674", VA = "0xD17674")]
	public static void RemoveHexesFromListWithNeighbors(List<HexTile> srcList, HexTile[] removeList, int degree)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xD177B0", Offset = "0xD177B0", VA = "0xD177B0")]
	private Color getColorByIndex(int index)
	{
		return default(Color);
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xD177F4", Offset = "0xD177F4", VA = "0xD177F4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xD17A68", Offset = "0xD17A68", VA = "0xD17A68", Slot = "4")]
	public bool Equals(HexTile other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xD17AD0", Offset = "0xD17AD0", VA = "0xD17AD0", Slot = "5")]
	public int CompareTo(HexTile other)
	{
		return default(int);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xD17B1C", Offset = "0xD17B1C", VA = "0xD17B1C")]
	public HexTile()
	{
	}
}
[Token(Token = "0x2000175")]
public class HitLight : MonoBehaviour
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve curve;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer closeGlow;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer farGlow;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _transform;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialPropertyBlock _mpbClose;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock _mpbFar;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _closeMat;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material _farMat;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Color _highLightClose;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color _highLightFar;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _timer;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _duration;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _initialized;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _prefabInitialized;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _colorID;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static HitLight _prefab;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xD17D70", Offset = "0xD17D70", VA = "0xD17D70")]
	public static HitLight allocate(HitLight prefab, Vector3 pos, float duration)
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xD180E4", Offset = "0xD180E4", VA = "0xD180E4")]
	private void start(Vector3 pos, float duration)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xD18200", Offset = "0xD18200", VA = "0xD18200")]
	private void blend()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xD17F38", Offset = "0xD17F38", VA = "0xD17F38")]
	private void initPrefab()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xD1801C", Offset = "0xD1801C", VA = "0xD1801C")]
	private void init()
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xD18308", Offset = "0xD18308", VA = "0xD18308")]
	private void Update()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xD18388", Offset = "0xD18388", VA = "0xD18388")]
	public HitLight()
	{
	}
}
[Token(Token = "0x2000176")]
public interface IBallCollisionResponse
{
	[Token(Token = "0x6000763")]
	void OnCollisionWithBall(Ball ball, Collision col_info);
}
[Token(Token = "0x2000177")]
public static class MeshEdges
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool[,] isEdge;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool[,] isEdgeOutline;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xD18390", Offset = "0xD18390", VA = "0xD18390")]
	public static void init(Mesh mesh)
	{
	}
}
[Token(Token = "0x2000178")]
public class PlowableSurface : MonoBehaviour
{
	[Token(Token = "0x2000179")]
	public enum Type
	{
		[Token(Token = "0x4000A6C")]
		Floor,
		[Token(Token = "0x4000A6D")]
		Ceiling,
		[Token(Token = "0x4000A6E")]
		Brick
	}

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool _canStartPlowing;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool _isPlowable;

	[Token(Token = "0x1700015B")]
	public bool canStartPlowing
	{
		[Token(Token = "0x6000765")]
		[Address(RVA = "0xD186D4", Offset = "0xD186D4", VA = "0xD186D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015C")]
	public bool canPlowInto
	{
		[Token(Token = "0x6000766")]
		[Address(RVA = "0xD186F4", Offset = "0xD186F4", VA = "0xD186F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xD186FC", Offset = "0xD186FC", VA = "0xD186FC")]
	public PlowableSurface()
	{
	}
}
[Token(Token = "0x200017A")]
public class PullRail : MonoBehaviour
{
	[Token(Token = "0x200017B")]
	private struct PointData
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xD19118", Offset = "0xD19118", VA = "0xD19118")]
		public PointData(BezierPoint point)
		{
		}
	}

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BezierCurve _path;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BezierCurve[] _allPaths;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _startSpeed;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _endSpeed;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _pathStartParam;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _pathEndParam;

	[NonSerialized]
	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _timeInRail;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _easeInWindow;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pullDamping;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pullForce;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _chargeStart;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _chargeEnd;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _slowMotionStart;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _slowMotionPeak;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _slowMotionEnd;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float _slowMotionAmount;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Materials")]
	public Material _OffMaterial;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material _X1Material;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material _X2Material;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _WithBallMaterial;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _chargeAmountID;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material _currentMaterial;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshRenderer _railMesh;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Ball _ballOnRail;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PullRail primary;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PointData[] _initData;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _gutterEnabled;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool _doubleCharge;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _currentMat;

	[Token(Token = "0x1700015D")]
	public Transform gutterRootTransform
	{
		[Token(Token = "0x6000768")]
		[Address(RVA = "0xD18714", Offset = "0xD18714", VA = "0xD18714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015E")]
	public Ball ballOnRail
	{
		[Token(Token = "0x6000769")]
		[Address(RVA = "0xD18734", Offset = "0xD18734", VA = "0xD18734")]
		set
		{
		}
	}

	[Token(Token = "0x1700015F")]
	public bool IsEnabled
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0xD19B4C", Offset = "0xD19B4C", VA = "0xD19B4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xD18918", Offset = "0xD18918", VA = "0xD18918")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xD18AE4", Offset = "0xD18AE4", VA = "0xD18AE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xD18C38", Offset = "0xD18C38", VA = "0xD18C38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xD18D40", Offset = "0xD18D40", VA = "0xD18D40")]
	private void onGameInitialized()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xD188AC", Offset = "0xD188AC", VA = "0xD188AC")]
	private void BallLeftRail()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xD18D44", Offset = "0xD18D44", VA = "0xD18D44")]
	private void OffsetPathCurrentPlayer(bool toOtherPlayer = false)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xD1917C", Offset = "0xD1917C", VA = "0xD1917C")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xD191A8", Offset = "0xD191A8", VA = "0xD191A8")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xD19674", Offset = "0xD19674", VA = "0xD19674")]
	public static void EnterClosestGutter(Ball ball)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xD19980", Offset = "0xD19980", VA = "0xD19980")]
	private void NormalizeCurveHeight(bool opponent)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xD193A8", Offset = "0xD193A8", VA = "0xD193A8")]
	public void EnterGutter(Ball ball, bool opponentGutter = false)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xD19B54", Offset = "0xD19B54", VA = "0xD19B54")]
	public int GetChargeCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xD19BD8", Offset = "0xD19BD8", VA = "0xD19BD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xD19F50", Offset = "0xD19F50", VA = "0xD19F50")]
	private float ResampleParam(float fParam)
	{
		return default(float);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xD19F78", Offset = "0xD19F78", VA = "0xD19F78")]
	public Vector3 SamplePosition(float fParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xD197F8", Offset = "0xD197F8", VA = "0xD197F8")]
	public float FindClosestParam_Approx(Vector3 position, out float closestDistance, float step = 0.05f)
	{
		return default(float);
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xD19F94", Offset = "0xD19F94", VA = "0xD19F94")]
	public int GetNumPaths_Edtior()
	{
		return default(int);
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xD19FF4", Offset = "0xD19FF4", VA = "0xD19FF4")]
	public bool GetPathVisible_Editor(int nPath)
	{
		return default(bool);
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xD1A0C4", Offset = "0xD1A0C4", VA = "0xD1A0C4")]
	public Vector3 SamplePosition_Editor(int nPath, float fParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xD1A1F8", Offset = "0xD1A1F8", VA = "0xD1A1F8")]
	public float SampleSpeed(float fParam)
	{
		return default(float);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xD1A238", Offset = "0xD1A238", VA = "0xD1A238")]
	public PullRail()
	{
	}
}
[Token(Token = "0x200017C")]
public class UVMap
{
	[Token(Token = "0x200017D")]
	[CompilerGenerated]
	private sealed class <neighborsByMesh>d__10 : IEnumerable<UVMapVertex>, IEnumerable, IEnumerator<UVMapVertex>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UVMapVertex <>2__current;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UVMapVertex vertex;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UVMapVertex <>3__vertex;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UVMap <>4__this;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <v>5__2;

		[Token(Token = "0x17000160")]
		private UVMapVertex System.Collections.Generic.IEnumerator<UVMapVertex>.Current
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0xD1C36C", Offset = "0xD1C36C", VA = "0xD1C36C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000161")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000792")]
			[Address(RVA = "0xD1C3B4", Offset = "0xD1C3B4", VA = "0xD1C3B4", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xD1B764", Offset = "0xD1B764", VA = "0xD1B764")]
		[DebuggerHidden]
		public <neighborsByMesh>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xD1C250", Offset = "0xD1C250", VA = "0xD1C250", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xD1C254", Offset = "0xD1C254", VA = "0xD1C254", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xD1C374", Offset = "0xD1C374", VA = "0xD1C374", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xD1C3BC", Offset = "0xD1C3BC", VA = "0xD1C3BC", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<UVMapVertex> System.Collections.Generic.IEnumerable<UVMapVertex>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xD1C478", Offset = "0xD1C478", VA = "0xD1C478", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UVMapVertex[] _vertices;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UVMapVertex[] _canonicalVertices;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HexTile _hexTile;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UVMapVertex> _cachedVertList;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Queue<UVMapVertex> _verticesToDo;

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xD156F0", Offset = "0xD156F0", VA = "0xD156F0")]
	public UVMap(Mesh mesh, Transform transform, HexTile hexTile)
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xD1AE10", Offset = "0xD1AE10", VA = "0xD1AE10")]
	private void canonizeVerts(Transform transform)
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xD1A268", Offset = "0xD1A268", VA = "0xD1A268")]
	private void initVertices(Mesh mesh, Transform transform)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xD1A414", Offset = "0xD1A414", VA = "0xD1A414")]
	private List<UVMapVertex> getEdgeVertices(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xD1A6A8", Offset = "0xD1A6A8", VA = "0xD1A6A8")]
	private void calcOrderFromOutline(IEnumerable<UVMapVertex> edgeVertices)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xD1B6C4", Offset = "0xD1B6C4", VA = "0xD1B6C4")]
	[IteratorStateMachine(typeof(<neighborsByMesh>d__10))]
	private IEnumerable<UVMapVertex> neighborsByMesh(UVMapVertex vertex)
	{
		return null;
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xD1AD80", Offset = "0xD1AD80", VA = "0xD1AD80")]
	private void getDistancesFromOutlineByVertexColor(Mesh mesh)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xD1ADF8", Offset = "0xD1ADF8", VA = "0xD1ADF8")]
	private void createEdges()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xD1B798", Offset = "0xD1B798", VA = "0xD1B798")]
	private void createEdgesBetweenSameOrder()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xD1BB58", Offset = "0xD1BB58", VA = "0xD1BB58")]
	private void createEdgesBetweenAdjacentOrders()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xD1BFE4", Offset = "0xD1BFE4", VA = "0xD1BFE4")]
	public void removeWeldEdges()
	{
	}
}
[Token(Token = "0x200017E")]
public class UVMapEdge
{
	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UVMapVertex _vertex0;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UVMapVertex _vertex1;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _distance;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _isWeld;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool _isWeldedToAnotherEdge;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	private bool _inPool;

	[Token(Token = "0x4000AA0")]
	private const int _edgePoolSizeIncrease = 128;

	[Token(Token = "0x4000AA1")]
	private const int _edgePoolStartSize = 65536;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<UVMapEdge> _edgePool;

	[Token(Token = "0x17000162")]
	public bool isFusionOutline
	{
		[Token(Token = "0x600079D")]
		[Address(RVA = "0xD1CA00", Offset = "0xD1CA00", VA = "0xD1CA00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xD1C47C", Offset = "0xD1C47C", VA = "0xD1C47C")]
	public static void initPreallocatedPool()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xD1C4CC", Offset = "0xD1C4CC", VA = "0xD1C4CC")]
	private static void fillPreallocatedPool(int size)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xD1C590", Offset = "0xD1C590", VA = "0xD1C590")]
	public static UVMapEdge allocate()
	{
		return null;
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xD1BF6C", Offset = "0xD1BF6C", VA = "0xD1BF6C")]
	public static void connect(UVMapVertex vertex0, UVMapVertex vertex1, float distance)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xD1C728", Offset = "0xD1C728", VA = "0xD1C728")]
	public static void connect(UVMapVertex vertex0, UVMapVertex vertex1)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xD1C65C", Offset = "0xD1C65C", VA = "0xD1C65C")]
	protected static void connect(UVMapVertex vertex0, UVMapVertex vertex1, float distance, bool isWeld)
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xD1C818", Offset = "0xD1C818", VA = "0xD1C818")]
	public void destroy()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xD1C984", Offset = "0xD1C984", VA = "0xD1C984")]
	public UVMapVertex getOtherVertex(UVMapVertex vertex)
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xD1CA44", Offset = "0xD1CA44", VA = "0xD1CA44")]
	private bool isWeldedToAnotherEdge()
	{
		return default(bool);
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xD1C588", Offset = "0xD1C588", VA = "0xD1C588")]
	public UVMapEdge()
	{
	}
}
[Token(Token = "0x200017F")]
public class UVMapFusion
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<UVMap> _uvMaps;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Queue<UVMapVertex> _cachedVertQueue;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<UVMapVertex> _cachedVertList;

	[Token(Token = "0x4000AA6")]
	private const float worldDistanceEpsilon = 0.2f;

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xD17C14", Offset = "0xD17C14", VA = "0xD17C14")]
	public UVMapFusion()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xD1CF48", Offset = "0xD1CF48", VA = "0xD1CF48")]
	public UVMapFusion(List<UVMap> uvMaps)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xD1731C", Offset = "0xD1731C", VA = "0xD1731C")]
	public void DoMapping()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xD1710C", Offset = "0xD1710C", VA = "0xD1710C")]
	public void loadDistancesFromFusionOutline(float[] savedUVs, float minDist, float maxDist)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xD1D700", Offset = "0xD1D700", VA = "0xD1D700")]
	public float[] getDistancesFromFushionOutline()
	{
		return null;
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xD1D12C", Offset = "0xD1D12C", VA = "0xD1D12C")]
	private void fuseAll()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xD1D0A4", Offset = "0xD1D0A4", VA = "0xD1D0A4")]
	private void unfuseAll()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xD1D9C4", Offset = "0xD1D9C4", VA = "0xD1D9C4")]
	public void fuseUvMaps(UVMap uvMap1, UVMap uvMap2)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xD1DB5C", Offset = "0xD1DB5C", VA = "0xD1DB5C")]
	public void unfuseUvMap(UVMap uvMap)
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xD1D230", Offset = "0xD1D230", VA = "0xD1D230")]
	private void calcDistancesFromOutline()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xD1D5AC", Offset = "0xD1D5AC", VA = "0xD1D5AC")]
	private void normalizeDistancesFromOutline()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xD1DB70", Offset = "0xD1DB70", VA = "0xD1DB70")]
	private List<UVMapVertex> getEdgeVertices()
	{
		return null;
	}
}
[Token(Token = "0x2000180")]
public class UVMapVertex
{
	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int _index;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int _canonicalIndex;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _worldPosition;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int _orderFromOutline;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _distanceFromOutline;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _distanceFromFusionOutline;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _v;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public HashSet<UVMapEdge> _edges;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HashSet<UVMapEdge> _weldEdges;

	[Token(Token = "0x17000163")]
	public bool isFusionOutline
	{
		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xD1DD08", Offset = "0xD1DD08", VA = "0xD1DD08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xD1B5CC", Offset = "0xD1B5CC", VA = "0xD1B5CC")]
	public UVMapVertex(int index, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xD1C794", Offset = "0xD1C794", VA = "0xD1C794")]
	public void addEdge(UVMapEdge edge)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xD1C8F4", Offset = "0xD1C8F4", VA = "0xD1C8F4")]
	public void removeEdge(UVMapEdge edge)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xD1C040", Offset = "0xD1C040", VA = "0xD1C040")]
	public void removeWeldEdges()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xD1CD2C", Offset = "0xD1CD2C", VA = "0xD1CD2C")]
	public bool isVertexNeighbor(UVMapVertex otherVertex)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000181")]
public class FloaterBehaviour_OrbitAround : FloaterBehaviour
{
	[Serializable]
	[Token(Token = "0x2000182")]
	public class Config : IConfig
	{
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float factor;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public OneHumus.Math.FloatRange horizontalAngleRange;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public OneHumus.Math.FloatRange verticalAngleRange;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public OneHumus.Math.FloatRange radiusRange;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OneHumus.Math.FloatRange horizontalSpeedRange;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public OneHumus.Math.FloatRange verticalAmplitudeRange;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public OneHumus.Math.FloatRange radialAmplitudeRange;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public OneHumus.Math.FloatRange loopDurationRange;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public OneHumus.Math.FloatRange phaseOffsetRange;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public OneHumus.Math.FloatRange angularVelocityRange;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xD1E2C8", Offset = "0xD1E2C8", VA = "0xD1E2C8")]
		public Config()
		{
		}
	}

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Config _config;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _horizontalSpeed;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _verticalAmplitude;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _radialAmplitude;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _loopDuration;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _phaseOffset;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _baseVertAngle;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _baseRadius;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _angularAxis;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _angularSpeed;

	[Token(Token = "0x17000164")]
	protected override IConfig config
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xD1DE78", Offset = "0xD1DE78", VA = "0xD1DE78", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xD1DE80", Offset = "0xD1DE80", VA = "0xD1DE80", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xD1DF2C", Offset = "0xD1DF2C", VA = "0xD1DF2C", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xD1E070", Offset = "0xD1E070", VA = "0xD1E070", Slot = "9")]
	public override void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xD1E0D8", Offset = "0xD1E0D8", VA = "0xD1E0D8", Slot = "10")]
	public override void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xD1E140", Offset = "0xD1E140", VA = "0xD1E140")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xD1E258", Offset = "0xD1E258", VA = "0xD1E258")]
	public FloaterBehaviour_OrbitAround()
	{
	}
}
[Token(Token = "0x2000183")]
public class FloaterBehaviour_Random : FloaterBehaviour
{
	[Serializable]
	[Token(Token = "0x2000184")]
	public class Config : IConfig
	{
		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Allowed Area")]
		public OneHumus.Math.FloatRange horizontalAngleRange;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OneHumus.Math.FloatRange verticalAngleRange;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OneHumus.Math.FloatRange distanceRange;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Move Params")]
		public OneHumus.Math.FloatRange stayDurationRange;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OneHumus.Math.FloatRange moveVerticalRange;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public OneHumus.Math.FloatRange moveHorizontalRange;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OneHumus.Math.FloatRange moveDistanceRange;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool keepMovingHorizontally;

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xD1E7F8", Offset = "0xD1E7F8", VA = "0xD1E7F8")]
		public Config()
		{
		}
	}

	[Token(Token = "0x4000AC4")]
	private const float awayFromPsyfasSpeed = 3f;

	[Token(Token = "0x4000AC5")]
	private const float maxLateralSpeed = 3f;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Config _config;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float curStayDuration;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float curStayTimer;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _sign;

	[Token(Token = "0x17000165")]
	protected override IConfig config
	{
		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xD1E2D8", Offset = "0xD1E2D8", VA = "0xD1E2D8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xD1E2E0", Offset = "0xD1E2E0", VA = "0xD1E2E0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xD1E38C", Offset = "0xD1E38C", VA = "0xD1E38C", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xD1E3DC", Offset = "0xD1E3DC", VA = "0xD1E3DC", Slot = "9")]
	public override void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xD1E49C", Offset = "0xD1E49C", VA = "0xD1E49C", Slot = "10")]
	public override void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xD1E4C0", Offset = "0xD1E4C0", VA = "0xD1E4C0")]
	private static Vector3 getPositionOnTarget(Target target)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xD1E61C", Offset = "0xD1E61C", VA = "0xD1E61C", Slot = "14")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xD1E794", Offset = "0xD1E794", VA = "0xD1E794")]
	public FloaterBehaviour_Random()
	{
	}
}
[Token(Token = "0x2000185")]
public class FloaterBehaviour_Sinusoid : FloaterBehaviour
{
	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FloaterData_Sinusoid sinusoidData;

	[Token(Token = "0x4000AD3")]
	private const float updateTxInterval = 0.1f;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OneHumus.Math.FloatRange _angleRange;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _alpha;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _targetRadius;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _orbitSpeed;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _swingSpeed;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _speedMultiplier;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _timeSinceLastUpdateTx;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xD1E808", Offset = "0xD1E808", VA = "0xD1E808", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xD1F514", Offset = "0xD1F514", VA = "0xD1F514", Slot = "14")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xD1F77C", Offset = "0xD1F77C", VA = "0xD1F77C")]
	public FloaterBehaviour_Sinusoid()
	{
	}
}
[Token(Token = "0x2000186")]
public class FloaterBehaviour_Static : FloaterBehaviour
{
	[Serializable]
	[Token(Token = "0x2000187")]
	public class Config : IConfig
	{
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OneHumus.Math.FloatRange horizontalAngleRange;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OneHumus.Math.FloatRange verticalAngleRange;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float radius;

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xD1FA34", Offset = "0xD1FA34", VA = "0xD1FA34")]
		public Config()
		{
		}
	}

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Config _config;

	[Token(Token = "0x17000166")]
	protected override IConfig config
	{
		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xD1F7E8", Offset = "0xD1F7E8", VA = "0xD1F7E8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xD1F7F0", Offset = "0xD1F7F0", VA = "0xD1F7F0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xD1F89C", Offset = "0xD1F89C", VA = "0xD1F89C", Slot = "8")]
	public override void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xD1F904", Offset = "0xD1F904", VA = "0xD1F904", Slot = "9")]
	public override void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xD1F96C", Offset = "0xD1F96C", VA = "0xD1F96C", Slot = "10")]
	public override void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xD1F9D4", Offset = "0xD1F9D4", VA = "0xD1F9D4")]
	public FloaterBehaviour_Static()
	{
	}
}
[Token(Token = "0x2000188")]
public class DamageCounter
{
	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> _damageHistory;

	[Token(Token = "0x4000AE0")]
	private const int maxHistory = 30;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xD1FA44", Offset = "0xD1FA44", VA = "0xD1FA44")]
	public DamageCounter()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xD1FCDC", Offset = "0xD1FCDC", VA = "0xD1FCDC")]
	private void OnWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xD1FD80", Offset = "0xD1FD80", VA = "0xD1FD80")]
	private void OnBallReturnToPlayer(Player player)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xD1FE28", Offset = "0xD1FE28", VA = "0xD1FE28")]
	private void onTargetHit(Target target)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xD1FF00", Offset = "0xD1FF00", VA = "0xD1FF00")]
	private void onTargetDamaged(Target target)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xD1FF9C", Offset = "0xD1FF9C", VA = "0xD1FF9C")]
	private void onTargetHealed(Target target)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xD20038", Offset = "0xD20038", VA = "0xD20038")]
	private void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xD200B8", Offset = "0xD200B8", VA = "0xD200B8")]
	public int GetNumTurnsWithoutProgress()
	{
		return default(int);
	}
}
[Token(Token = "0x2000189")]
[CreateAssetMenu(menuName = "Data/Floater Data/Follow")]
public class FloaterData_Follow : UpdatableData
{
	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float spring;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float drag;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angularDrag;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float torque;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float initAngularSpeed;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xD20214", Offset = "0xD20214", VA = "0xD20214")]
	public FloaterData_Follow()
	{
	}
}
[Token(Token = "0x200018A")]
[CreateAssetMenu(menuName = "Data/Floater Data/Sinusoid")]
public class FloaterData_Sinusoid : UpdatableData
{
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Range of speed rotating around the dome")]
	public OneHumus.Math.FloatRange orbitalSpeed;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Range of speed moving up and down")]
	public OneHumus.Math.FloatRange swingSpeed;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Range of vertical angle relative to Room center")]
	public OneHumus.Math.FloatRange verticalRange;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Range of orbit radius")]
	public OneHumus.Math.FloatRange radiusRange;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Range of amplitude angle")]
	public OneHumus.Math.FloatRange angleRange;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float initSpeedMultiplier;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xD20230", Offset = "0xD20230", VA = "0xD20230")]
	public FloaterData_Sinusoid()
	{
	}
}
[Token(Token = "0x200018B")]
public class Floater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018C")]
	public struct Objects
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform armOrigin;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform armEndPoint;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform physicsTarget;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform floater;
	}

	[Token(Token = "0x200018D")]
	[CompilerGenerated]
	private sealed class <blinkCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reveal;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Floater <>4__this;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scale;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float duration;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool hide;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x17000171")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0xD2249C", Offset = "0xD2249C", VA = "0xD2249C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0xD224E4", Offset = "0xD224E4", VA = "0xD224E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xD20F98", Offset = "0xD20F98", VA = "0xD20F98")]
		[DebuggerHidden]
		public <blinkCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xD221F8", Offset = "0xD221F8", VA = "0xD221F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xD221FC", Offset = "0xD221FC", VA = "0xD221FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xD224A4", Offset = "0xD224A4", VA = "0xD224A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018E")]
	[CompilerGenerated]
	private sealed class <onTimeOutCo>d__66 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x17000173")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0xD22694", Offset = "0xD22694", VA = "0xD22694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000174")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0xD226DC", Offset = "0xD226DC", VA = "0xD226DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xD2127C", Offset = "0xD2127C", VA = "0xD2127C")]
		[DebuggerHidden]
		public <onTimeOutCo>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xD22540", Offset = "0xD22540", VA = "0xD22540", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xD22544", Offset = "0xD22544", VA = "0xD22544", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xD2269C", Offset = "0xD2269C", VA = "0xD2269C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018F")]
	[CompilerGenerated]
	private sealed class <keepAliveCo>d__68 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x17000175")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xD228E4", Offset = "0xD228E4", VA = "0xD228E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000176")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080C")]
			[Address(RVA = "0xD2292C", Offset = "0xD2292C", VA = "0xD2292C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xD212B4", Offset = "0xD212B4", VA = "0xD212B4")]
		[DebuggerHidden]
		public <keepAliveCo>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xD22738", Offset = "0xD22738", VA = "0xD22738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xD2273C", Offset = "0xD2273C", VA = "0xD2273C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xD228EC", Offset = "0xD228EC", VA = "0xD228EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000190")]
	[CompilerGenerated]
	private sealed class <selfDestructCo>d__75 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform <iconTransform>5__2;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <pos>5__3;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <hasColor>5__4;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__5;

		[Token(Token = "0x17000177")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0xD22EA4", Offset = "0xD22EA4", VA = "0xD22EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000812")]
			[Address(RVA = "0xD22EEC", Offset = "0xD22EEC", VA = "0xD22EEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xD21A1C", Offset = "0xD21A1C", VA = "0xD21A1C")]
		[DebuggerHidden]
		public <selfDestructCo>d__75(int <>1__state)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xD22988", Offset = "0xD22988", VA = "0xD22988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xD2298C", Offset = "0xD2298C", VA = "0xD2298C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xD22EAC", Offset = "0xD22EAC", VA = "0xD22EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000191")]
	[CompilerGenerated]
	private sealed class <disableColliderForTime>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Floater <>4__this;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x17000179")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0xD23020", Offset = "0xD23020", VA = "0xD23020", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0xD23068", Offset = "0xD23068", VA = "0xD23068", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xD21A44", Offset = "0xD21A44", VA = "0xD21A44")]
		[DebuggerHidden]
		public <disableColliderForTime>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xD22F48", Offset = "0xD22F48", VA = "0xD22F48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xD22F4C", Offset = "0xD22F4C", VA = "0xD22F4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xD23028", Offset = "0xD23028", VA = "0xD23028", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Objects objects;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isOwner;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private BasePowerup _powerup;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FloaterBehaviour _behaviour;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _targetRigidbody;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BasePowerup powerupPrefab;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color dustColor;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color particleA;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color particleB;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _editorButtonPrefab;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject _editorButton;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Collider _collider;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _timedOut;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool _destroyed;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	private bool _showing;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material insideMaterial;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public SyncGameEvents.FloaterSpawnEvent _syncGameEvents_SpawnEvent;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public SyncGameEvents.FloaterHitEvent _syncGameEvents_HitEvent;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public SyncGameEvents.FloaterUpdateEvent _syncGameEvents_UpdateEvent;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public SyncGameEvents.FloaterTimeOutEvent _syncGameEvents_TimeOutEvent;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Transform _icon;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Renderer _iconRenderer;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected MaterialPropertyBlock _iconMPB;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Renderer _flare;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MaterialPropertyBlock _flareMPB;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _PhaseID;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int _ColorID;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _iconOriginalPos;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion _iconOriginalRot;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 _iconOriginalScale;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Color _iconOriginalColor;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform _iconOriginalParent;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CoroutineHandle _blinckCo;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private CoroutineHandle? _selfDestructCoroutine;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 _initModelScale;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform _modelParent;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string _coroutineTag;

	[Token(Token = "0x17000167")]
	public uint id
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xD20240", Offset = "0xD20240", VA = "0xD20240")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000168")]
	public bool isOwner
	{
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xD202C0", Offset = "0xD202C0", VA = "0xD202C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000169")]
	public virtual bool isUnknown
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xD202C8", Offset = "0xD202C8", VA = "0xD202C8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016A")]
	public virtual PowerupType powerupType
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xD202D0", Offset = "0xD202D0", VA = "0xD202D0", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x1700016B")]
	public BasePowerup powerup
	{
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xD202F0", Offset = "0xD202F0", VA = "0xD202F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016C")]
	public FloaterBehaviour behaviour
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xD202F8", Offset = "0xD202F8", VA = "0xD202F8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016D")]
	public Rigidbody targetRigidbody
	{
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xD20300", Offset = "0xD20300", VA = "0xD20300")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700016E")]
	public bool timedOut
	{
		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xD204FC", Offset = "0xD204FC", VA = "0xD204FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700016F")]
	public bool Destroyed
	{
		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xD20504", Offset = "0xD20504", VA = "0xD20504")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000170")]
	public bool Showing
	{
		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xD2050C", Offset = "0xD2050C", VA = "0xD2050C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xD20308", Offset = "0xD20308", VA = "0xD20308")]
	private void InitEditorButton()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xD20514", Offset = "0xD20514", VA = "0xD20514", Slot = "6")]
	public virtual void init(uint id, bool isOwner)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xD20ADC", Offset = "0xD20ADC", VA = "0xD20ADC", Slot = "7")]
	public virtual void deinit()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xD20DC4", Offset = "0xD20DC4", VA = "0xD20DC4")]
	private void RemoveFloater(GameEndReason reason)
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xD20EEC", Offset = "0xD20EEC", VA = "0xD20EEC")]
	private void RemoveFloater(string waveName, int waveID)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xD20998", Offset = "0xD20998", VA = "0xD20998")]
	private void blink(float duration, float scale, bool reveal = false, bool hide = false)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xD20EF0", Offset = "0xD20EF0", VA = "0xD20EF0")]
	[IteratorStateMachine(typeof(<blinkCo>d__60))]
	private IEnumerator<float> blinkCo(float duration, float scale, bool reveal = false, bool hide = false)
	{
		return null;
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xD20FC0", Offset = "0xD20FC0", VA = "0xD20FC0")]
	public void initPosition()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xD20FE0", Offset = "0xD20FE0", VA = "0xD20FE0")]
	public void initPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xD21000", Offset = "0xD21000", VA = "0xD21000")]
	public void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xD21038", Offset = "0xD21038", VA = "0xD21038")]
	public void onHitFromNetwork(SyncGameEvents.FloaterHitEvent floaterHitEvent)
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xD20DC8", Offset = "0xD20DC8", VA = "0xD20DC8")]
	public void onTimeOut()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xD21208", Offset = "0xD21208", VA = "0xD21208")]
	[IteratorStateMachine(typeof(<onTimeOutCo>d__66))]
	private IEnumerator<float> onTimeOutCo()
	{
		return null;
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xD212A4", Offset = "0xD212A4", VA = "0xD212A4")]
	public void onTimeOutFromNetwork(SyncGameEvents.FloaterTimeOutEvent floaterTimeOutEvent)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xD20924", Offset = "0xD20924", VA = "0xD20924")]
	[IteratorStateMachine(typeof(<keepAliveCo>d__68))]
	private IEnumerator<float> keepAliveCo()
	{
		return null;
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xD212DC", Offset = "0xD212DC", VA = "0xD212DC")]
	public void onHit(Vector3 hitPos, Ball ball)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xD2146C", Offset = "0xD2146C", VA = "0xD2146C", Slot = "8")]
	protected virtual void selfDestruct()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xD216F4", Offset = "0xD216F4", VA = "0xD216F4", Slot = "9")]
	protected virtual void InitIconDefaults()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xD21838", Offset = "0xD21838", VA = "0xD21838", Slot = "10")]
	protected virtual void RestoreIconDefaults()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xD2199C", Offset = "0xD2199C", VA = "0xD2199C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xD2159C", Offset = "0xD2159C", VA = "0xD2159C")]
	[IteratorStateMachine(typeof(<selfDestructCo>d__75))]
	private IEnumerator<float> selfDestructCo()
	{
		return null;
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xD21610", Offset = "0xD21610", VA = "0xD21610")]
	private void selfDestructImmediate()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xD208A0", Offset = "0xD208A0", VA = "0xD208A0")]
	[IteratorStateMachine(typeof(<disableColliderForTime>d__77))]
	private IEnumerator<float> disableColliderForTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xD21A6C", Offset = "0xD21A6C", VA = "0xD21A6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xD220D0", Offset = "0xD220D0", VA = "0xD220D0")]
	public Floater()
	{
	}
}
[Token(Token = "0x2000192")]
public abstract class FloaterBehaviour : MonoBehaviour
{
	[Token(Token = "0x2000193")]
	public interface IConfig
	{
	}

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloaterData_Follow followData;

	[Token(Token = "0x4000B2F")]
	private const float dragFadeInTime = 1f;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Floater _floater;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float _initTime;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float _horizAngle;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float _vertAngle;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _radius;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Rigidbody _rigidbody;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpringJoint _spring;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _rotationFollowMultiplier;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<HexTile> _visibleHexTiles;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _lastFloaterSpawnFrame;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _debugInit;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _debugLastRigidbodyPos;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _debugLastTargetPos;

	[Token(Token = "0x1700017B")]
	public float horizAngle
	{
		[Token(Token = "0x6000819")]
		[Address(RVA = "0xD230C4", Offset = "0xD230C4", VA = "0xD230C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700017C")]
	public float vertAngle
	{
		[Token(Token = "0x600081A")]
		[Address(RVA = "0xD230CC", Offset = "0xD230CC", VA = "0xD230CC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700017D")]
	public float radius
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xD230D4", Offset = "0xD230D4", VA = "0xD230D4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700017E")]
	public Rigidbody rigidbody
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0xD230DC", Offset = "0xD230DC", VA = "0xD230DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017F")]
	protected virtual IConfig config
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xD231F4", Offset = "0xD231F4", VA = "0xD231F4", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xD231FC", Offset = "0xD231FC", VA = "0xD231FC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xD230E4", Offset = "0xD230E4", VA = "0xD230E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xD23200", Offset = "0xD23200", VA = "0xD23200", Slot = "6")]
	protected virtual void cloneParams(FloaterBehaviour other)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xD23204", Offset = "0xD23204", VA = "0xD23204", Slot = "7")]
	public virtual void init(Floater floater)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xD1E9F4", Offset = "0xD1E9F4", VA = "0xD1E9F4", Slot = "8")]
	public virtual void initCurrentAndDesiredPositions()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xD232B4", Offset = "0xD232B4", VA = "0xD232B4", Slot = "9")]
	public virtual void initCurrentPositionFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xD23374", Offset = "0xD23374", VA = "0xD23374", Slot = "10")]
	public virtual void updateFromNetwork(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xD23398", Offset = "0xD23398", VA = "0xD23398", Slot = "11")]
	protected virtual void setPosition(float horizAngle, float vertAngle, float radius)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xD233AC", Offset = "0xD233AC", VA = "0xD233AC", Slot = "12")]
	protected virtual void updatePosition()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xD23404", Offset = "0xD23404", VA = "0xD23404")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xD23658", Offset = "0xD23658", VA = "0xD23658")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xD236F0", Offset = "0xD236F0", VA = "0xD236F0", Slot = "13")]
	protected virtual void onHit(Vector3 hitPos, Ball ball)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xD23710", Offset = "0xD23710", VA = "0xD23710")]
	private void debugUpdate()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xD1F708", Offset = "0xD1F708", VA = "0xD1F708", Slot = "14")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xD23914", Offset = "0xD23914", VA = "0xD23914")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xD1E2B8", Offset = "0xD1E2B8", VA = "0xD1E2B8")]
	protected FloaterBehaviour()
	{
	}
}
[Token(Token = "0x2000194")]
public class FloaterExplosion : MonoBehaviour
{
	[Token(Token = "0x2000195")]
	[CompilerGenerated]
	private sealed class <explodeCo>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloaterExplosion <>4__this;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x17000180")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000837")]
			[Address(RVA = "0xD24674", Offset = "0xD24674", VA = "0xD24674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000839")]
			[Address(RVA = "0xD246BC", Offset = "0xD246BC", VA = "0xD246BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xD243F4", Offset = "0xD243F4", VA = "0xD243F4")]
		[DebuggerHidden]
		public <explodeCo>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xD2441C", Offset = "0xD2441C", VA = "0xD2441C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xD24420", Offset = "0xD24420", VA = "0xD24420", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xD2467C", Offset = "0xD2467C", VA = "0xD2467C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer fracture;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem dust;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem glitter;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _ColorAID;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int _ColorBID;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _TimeOffsetID;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _HitPosID;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _SpecVec1ID;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _SpecVec2ID;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _Spec1ColorID;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int _Spec2ColorID;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int _CornerAddID;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static FloaterExplosion _prefab;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _fractureMat;

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xD210DC", Offset = "0xD210DC", VA = "0xD210DC")]
	public static void createExplosion(Floater floater, Vector3 hitPos, Vector3 hitVelocity)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xD23CA0", Offset = "0xD23CA0", VA = "0xD23CA0")]
	private void explode(Vector3 hitPos, Vector3 hitVelocity, Floater floater)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xD240E8", Offset = "0xD240E8", VA = "0xD240E8")]
	[IteratorStateMachine(typeof(<explodeCo>d__17))]
	private IEnumerator<float> explodeCo(Vector3 hitPos, Vector3 hitVelocity)
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xD2415C", Offset = "0xD2415C", VA = "0xD2415C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xD243E4", Offset = "0xD243E4", VA = "0xD243E4")]
	public FloaterExplosion()
	{
	}
}
[Token(Token = "0x2000196")]
public class Floaters : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000197")]
	public class ArenaParams
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform center;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float radius;

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xD25EB4", Offset = "0xD25EB4", VA = "0xD25EB4")]
		public ArenaParams()
		{
		}
	}

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Floaters inst;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float keepAliveSFXPeriod;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Floater[] floaterPrefabs;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Floater unknownFloaterPrefab;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ArenaParams arena;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool debug;

	[NonSerialized]
	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool disabled;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<PowerupType, Floater> _floaterPrefabsByType;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Floater> _floaters;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<uint, BasePowerup> _powerups;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static uint _nextUnusedFloaterID;

	[Token(Token = "0x17000182")]
	public List<Floater> CurrentFloaters
	{
		[Token(Token = "0x600083A")]
		[Address(RVA = "0xD24718", Offset = "0xD24718", VA = "0xD24718")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xD24720", Offset = "0xD24720", VA = "0xD24720")]
	public Floater GetFloaterPrefabByPowerupType(PowerupType type)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xD24778", Offset = "0xD24778", VA = "0xD24778")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xD24980", Offset = "0xD24980", VA = "0xD24980")]
	private void onNewArenaChosen()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xD249E0", Offset = "0xD249E0", VA = "0xD249E0")]
	public void onFloaterDone(Floater floater)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xD24AAC", Offset = "0xD24AAC", VA = "0xD24AAC")]
	public void onFloaterDoneNoErrorLog(Floater floater)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xD24B70", Offset = "0xD24B70", VA = "0xD24B70")]
	public void onPowerupDone(BasePowerup powerup)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xD24C98", Offset = "0xD24C98", VA = "0xD24C98")]
	public void ClearAllFloaters()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xD24DE4", Offset = "0xD24DE4", VA = "0xD24DE4")]
	public void RemoveFloater(Floater floater)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xD24E70", Offset = "0xD24E70", VA = "0xD24E70")]
	public Floater spawnFromNetwork(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xD24F8C", Offset = "0xD24F8C", VA = "0xD24F8C")]
	protected Floater instantiateFloater(PowerupType powerupType, uint floaterId, bool isOwner, bool isUnknown)
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xD25474", Offset = "0xD25474", VA = "0xD25474")]
	public Floater spawn(PowerupType powerupType, bool displayAsUnknown)
	{
		return null;
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xD2569C", Offset = "0xD2569C", VA = "0xD2569C")]
	public void onRxFloaterSpawnEvent(SyncGameEvents.FloaterSpawnEvent floaterSpawnEvent)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xD257B8", Offset = "0xD257B8", VA = "0xD257B8")]
	public void onRxFloaterUpdateEvent(SyncGameEvents.FloaterUpdateEvent floaterUpdateEvent)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xD25864", Offset = "0xD25864", VA = "0xD25864")]
	public void onRxFloaterHitEvent(SyncGameEvents.FloaterHitEvent floaterHitEvent)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xD259E0", Offset = "0xD259E0", VA = "0xD259E0")]
	public void onRxFloaterTimeOutEvent(SyncGameEvents.FloaterTimeOutEvent floaterTimeOutEvent)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xD25BAC", Offset = "0xD25BAC", VA = "0xD25BAC")]
	public void onRxPowerupRemovedEvent(SyncGameEvents.PowerupRemovedEvent powerupRemovedEvent)
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xD25D74", Offset = "0xD25D74", VA = "0xD25D74")]
	public Floaters()
	{
	}
}
[Token(Token = "0x2000198")]
public class PowerupInjector : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	public struct PowerUpEvent
	{
		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public PowerupType type;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool displayAsUnknown;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int delay;
	}

	[Token(Token = "0x200019A")]
	[CompilerGenerated]
	private sealed class <showInitialPowerups>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupInjector <>4__this;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private PowerUpEvent <powerUp>5__3;

		[Token(Token = "0x17000184")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xD280EC", Offset = "0xD280EC", VA = "0xD280EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xD28134", Offset = "0xD28134", VA = "0xD28134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xD27674", Offset = "0xD27674", VA = "0xD27674")]
		[DebuggerHidden]
		public <showInitialPowerups>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xD27F78", Offset = "0xD27F78", VA = "0xD27F78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xD27F7C", Offset = "0xD27F7C", VA = "0xD27F7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xD280F4", Offset = "0xD280F4", VA = "0xD280F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019B")]
	[CompilerGenerated]
	private sealed class <monitorRescuePowerup>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupInjector <>4__this;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EnergyArena <arena>5__2;

		[Token(Token = "0x17000186")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0xD28690", Offset = "0xD28690", VA = "0xD28690", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000187")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xD286D8", Offset = "0xD286D8", VA = "0xD286D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xD27D2C", Offset = "0xD27D2C", VA = "0xD27D2C")]
		[DebuggerHidden]
		public <monitorRescuePowerup>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xD28190", Offset = "0xD28190", VA = "0xD28190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xD28194", Offset = "0xD28194", VA = "0xD28194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xD28698", Offset = "0xD28698", VA = "0xD28698", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PowerupInjector inst;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FairChance _powerUpAppearChance;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FairChance _powerUpUnknownChance;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveHandcrafted _wave;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CoroutineHandle _showInitialPowerupsCo;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CoroutineHandle _monitorRescuePowerupCo;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<PowerUpSettings.PowerupTypeAndProbability> _relevantPowerUps;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IEnumerable<float> _availableWeights;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly List<PowerUpEvent> _powerUps;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _turnCount;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private DamageCounter _damageCounter;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _rescueCooldown;

	[Token(Token = "0x17000183")]
	private PowerUpSettings.Params CurParams
	{
		[Token(Token = "0x600084E")]
		[Address(RVA = "0xD26240", Offset = "0xD26240", VA = "0xD26240")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xD25EBC", Offset = "0xD25EBC", VA = "0xD25EBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xD263F0", Offset = "0xD263F0", VA = "0xD263F0")]
	private void onGameStarted()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xD26430", Offset = "0xD26430", VA = "0xD26430")]
	public void onWaveShow(WaveHandcrafted wave)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xD275FC", Offset = "0xD275FC", VA = "0xD275FC")]
	private void stopTheShow()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xD27664", Offset = "0xD27664", VA = "0xD27664")]
	private void OnBallReturnToPlayer(Player player)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xD27588", Offset = "0xD27588", VA = "0xD27588")]
	[IteratorStateMachine(typeof(<showInitialPowerups>d__20))]
	private IEnumerator<float> showInitialPowerups()
	{
		return null;
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xD26AA0", Offset = "0xD26AA0", VA = "0xD26AA0")]
	private void generateFirstPowerUp()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xD279A4", Offset = "0xD279A4", VA = "0xD279A4")]
	private void setFairChanceFrequency(FairChance fairChance, PowerUpSettings.Params.RangeCurve gapRanges, float progress)
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xD27330", Offset = "0xD27330", VA = "0xD27330")]
	private void generateRescuePowerUp()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xD27CB8", Offset = "0xD27CB8", VA = "0xD27CB8")]
	[IteratorStateMachine(typeof(<monitorRescuePowerup>d__24))]
	private IEnumerator<float> monitorRescuePowerup()
	{
		return null;
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xD2769C", Offset = "0xD2769C", VA = "0xD2769C")]
	private void findRelevantPowerUps(bool isRescue)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xD27D54", Offset = "0xD27D54", VA = "0xD27D54")]
	private bool isPowerUpExcludedByWave(PowerupType powerUpType)
	{
		return default(bool);
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xD27DE4", Offset = "0xD27DE4", VA = "0xD27DE4")]
	private bool isPowerUpAllowedAsRescue(PowerupType powerUpType)
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xD27E98", Offset = "0xD27E98", VA = "0xD27E98")]
	public PowerupInjector()
	{
	}
}
[Token(Token = "0x200019D")]
public class UnknownFloater : Floater
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Unknowns")]
	[ReorderableList]
	public PowerupType[] powerups;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[ReorderableList]
	public GameObject[] powerupIcons;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject unknownIcon;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Transform powerupIcon;

	[Token(Token = "0x17000188")]
	public override bool isUnknown
	{
		[Token(Token = "0x600086D")]
		[Address(RVA = "0xD287C4", Offset = "0xD287C4", VA = "0xD287C4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public PowerupType actualPowerupType
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0xD287CC", Offset = "0xD287CC", VA = "0xD287CC")]
		[CompilerGenerated]
		get
		{
			return default(PowerupType);
		}
		[Token(Token = "0x600086F")]
		[Address(RVA = "0xD287D4", Offset = "0xD287D4", VA = "0xD287D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xD25238", Offset = "0xD25238", VA = "0xD25238")]
	public void SetActualPowerup(PowerupType ptype)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xD287DC", Offset = "0xD287DC", VA = "0xD287DC", Slot = "8")]
	protected override void selfDestruct()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xD288C4", Offset = "0xD288C4", VA = "0xD288C4", Slot = "7")]
	public override void deinit()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xD28974", Offset = "0xD28974", VA = "0xD28974")]
	public UnknownFloater()
	{
	}
}
[Token(Token = "0x200019E")]
public class BallSwitchEffect : MonoBehaviour
{
	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material player1Material;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material player2Material;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _renderer;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _material;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _time;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _phaseID;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _scale;

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xD2897C", Offset = "0xD2897C", VA = "0xD2897C")]
	public void doit(bool oppositeColor = false, float scaleFactor = 1f)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xD28AE4", Offset = "0xD28AE4", VA = "0xD28AE4")]
	private void stop()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xD28B20", Offset = "0xD28B20", VA = "0xD28B20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xD28C50", Offset = "0xD28C50", VA = "0xD28C50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xD28D58", Offset = "0xD28D58", VA = "0xD28D58")]
	public BallSwitchEffect()
	{
	}
}
[Token(Token = "0x200019F")]
public class HyperspaceSphere : MonoBehaviour
{
	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HyperspaceSphere inst;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeDuration;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _bg;

	[Token(Token = "0x1700018A")]
	public bool isActive
	{
		[Token(Token = "0x6000879")]
		[Address(RVA = "0xD28D68", Offset = "0xD28D68", VA = "0xD28D68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xD28D84", Offset = "0xD28D84", VA = "0xD28D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xD28E14", Offset = "0xD28E14", VA = "0xD28E14")]
	public void show()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xD2905C", Offset = "0xD2905C", VA = "0xD2905C")]
	public void hide()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xD28E44", Offset = "0xD28E44", VA = "0xD28E44")]
	private void toggle(bool fadeInElseOut)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xD291A4", Offset = "0xD291A4", VA = "0xD291A4")]
	public HyperspaceSphere()
	{
	}
}
[Token(Token = "0x20001A0")]
public class LotusMaster : MonoBehaviour
{
	[Token(Token = "0x20001A1")]
	private class Flower
	{
		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _transform;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _position;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _rotation;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _radius;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _delay;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _speed;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _spin;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _scale;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _initialized;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _removed;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool _stopped;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color _debugColor;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Quaternion ROTATE_90_X;

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xD297E0", Offset = "0xD297E0", VA = "0xD297E0")]
		public Flower(float maxDelay)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xD29A4C", Offset = "0xD29A4C", VA = "0xD29A4C")]
		private void init()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xD29B5C", Offset = "0xD29B5C", VA = "0xD29B5C")]
		private void remove()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xD29B9C", Offset = "0xD29B9C", VA = "0xD29B9C")]
		public bool update(float dt)
		{
			return default(bool);
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xD295C0", Offset = "0xD295C0", VA = "0xD295C0")]
		public void stop()
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[CompilerGenerated]
	private sealed class <blincCo>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 normal;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LotusMaster <>4__this;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <pos>5__2;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject <flower>5__3;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <flowerTransform>5__4;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer <smr>5__5;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool <firstInstanceInThisFrame>5__6;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Renderer <glowRenderer>5__7;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material <originalGlowMat>5__8;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Material <glowMat>5__9;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 <drift>5__10;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float <t>5__11;

		[Token(Token = "0x1700018B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xD2ABF4", Offset = "0xD2ABF4", VA = "0xD2ABF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0xD2AC3C", Offset = "0xD2AC3C", VA = "0xD2AC3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xD29320", Offset = "0xD29320", VA = "0xD29320")]
		[DebuggerHidden]
		public <blincCo>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xD2A3C8", Offset = "0xD2A3C8", VA = "0xD2A3C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xD2A3CC", Offset = "0xD2A3CC", VA = "0xD2A3CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xD2ABFC", Offset = "0xD2ABFC", VA = "0xD2ABFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[CompilerGenerated]
	private sealed class <showCo>d__33 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LotusMaster <>4__this;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <allDone>5__2;

		[Token(Token = "0x1700018D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000897")]
			[Address(RVA = "0xD2AF88", Offset = "0xD2AF88", VA = "0xD2AF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000899")]
			[Address(RVA = "0xD2AFD0", Offset = "0xD2AFD0", VA = "0xD2AFD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xD295CC", Offset = "0xD295CC", VA = "0xD295CC")]
		[DebuggerHidden]
		public <showCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xD2AC98", Offset = "0xD2AC98", VA = "0xD2AC98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xD2AC9C", Offset = "0xD2AC9C", VA = "0xD2AC9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xD2AF90", Offset = "0xD2AF90", VA = "0xD2AF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LotusMaster inst;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 radiusRange;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 speedRange;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 spinRange;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 scaleRange;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float upnessRatio;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxHeight;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scaleUpHeight;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float scaleDownHeight;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float bankAmount;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxDensityCount;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float emmitionRate;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float blinkDuration;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float blinkScale;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float blinkSpin;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve blinkSpinCurve;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float blinkOffset;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float blinkGlow;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector2 blinkDriftRange;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector2 blinkPushRange;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject staticPrefab;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject dynamicPrefab;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _count;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Flower> _flowers;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Material _currentGlowMaterial;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _BrightnessID;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Quaternion ROTATION_OFFSET;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private CoroutineHandle _showCo;

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xD291B4", Offset = "0xD291B4", VA = "0xD291B4")]
	public void blink(Vector3 pos, Vector3 normal)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xD29270", Offset = "0xD29270", VA = "0xD29270")]
	[IteratorStateMachine(typeof(<blincCo>d__29))]
	private IEnumerator<float> blincCo(Vector3 point, Vector3 normal)
	{
		return null;
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xD29348", Offset = "0xD29348", VA = "0xD29348")]
	public void show()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xD2942C", Offset = "0xD2942C", VA = "0xD2942C")]
	public void stop()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xD293B8", Offset = "0xD293B8", VA = "0xD293B8")]
	[IteratorStateMachine(typeof(<showCo>d__33))]
	private IEnumerator<float> showCo()
	{
		return null;
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xD295F4", Offset = "0xD295F4", VA = "0xD295F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xD29684", Offset = "0xD29684", VA = "0xD29684")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xD29690", Offset = "0xD29690", VA = "0xD29690")]
	public LotusMaster()
	{
	}
}
[Token(Token = "0x20001A4")]
public class NukeSurface : MonoBehaviour
{
	[Token(Token = "0x20001A5")]
	private enum State
	{
		[Token(Token = "0x4000BD2")]
		Inactive,
		[Token(Token = "0x4000BD3")]
		Heating,
		[Token(Token = "0x4000BD4")]
		Exploding
	}

	[Token(Token = "0x20001A6")]
	[CompilerGenerated]
	private sealed class <explodeCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NukeSurface <>4__this;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x1700018F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0xD2B954", Offset = "0xD2B954", VA = "0xD2B954", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A8")]
			[Address(RVA = "0xD2B99C", Offset = "0xD2B99C", VA = "0xD2B99C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xD2B350", Offset = "0xD2B350", VA = "0xD2B350")]
		[DebuggerHidden]
		public <explodeCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xD2B780", Offset = "0xD2B780", VA = "0xD2B780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xD2B784", Offset = "0xD2B784", VA = "0xD2B784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xD2B95C", Offset = "0xD2B95C", VA = "0xD2B95C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NukeSurface inst;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _explosionSurface;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _heatSurface;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 _explosionCenter;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _maxRadius;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _fade;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private State _state;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _CenterID;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _MaxRadiusID;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _RadiusID;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _FadeID;

	[Token(Token = "0x4000BCF")]
	private const float THRESH = 0.001f;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CoroutineHandle _co;

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xD2B02C", Offset = "0xD2B02C", VA = "0xD2B02C")]
	public void init(bool showHeat)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xD24D40", Offset = "0xD24D40", VA = "0xD24D40")]
	public void remove()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xD2B058", Offset = "0xD2B058", VA = "0xD2B058")]
	public void update(Vector3 floaterCenter, float coneAngle)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xD2B1F0", Offset = "0xD2B1F0", VA = "0xD2B1F0")]
	public void explode()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xD2B2DC", Offset = "0xD2B2DC", VA = "0xD2B2DC")]
	[IteratorStateMachine(typeof(<explodeCo>d__19))]
	private IEnumerator<float> explodeCo()
	{
		return null;
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xD2B378", Offset = "0xD2B378", VA = "0xD2B378")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xD2B37C", Offset = "0xD2B37C", VA = "0xD2B37C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xD2B5CC", Offset = "0xD2B5CC", VA = "0xD2B5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xD2B770", Offset = "0xD2B770", VA = "0xD2B770")]
	public NukeSurface()
	{
	}
}
[Token(Token = "0x20001A7")]
public class RacketSwoosh : MonoBehaviour
{
	[Token(Token = "0x20001A8")]
	public enum NormalMethod
	{
		[Token(Token = "0x4000BEC")]
		Cyclindrical,
		[Token(Token = "0x4000BED")]
		Planar
	}

	[Serializable]
	[Token(Token = "0x20001A9")]
	public class Swoosh
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string copyFrom;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NormalMethod normalMethod;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve speedCurve;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material materialP1;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material materialP2;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] points;

		[NonSerialized]
		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float currentSpeed;

		[NonSerialized]
		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Swoosh reference;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RacketSwoosh _parent;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color _debugColor;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3[] _verts;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _normals;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Color32[] _colors;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int[] _triangles;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] _uv0;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _historyLength;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int _numPoints;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3[] _velocities;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Mesh _mesh;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MeshRenderer _renderer;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Bounds _bounds;

		[Token(Token = "0x17000191")]
		private Material material
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0xD2D674", Offset = "0xD2D674", VA = "0xD2D674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xD2BEF0", Offset = "0xD2BEF0", VA = "0xD2BEF0")]
		public void init(RacketSwoosh parent)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xD2C53C", Offset = "0xD2C53C", VA = "0xD2C53C")]
		public void resetHistory()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xD2D6A4", Offset = "0xD2D6A4", VA = "0xD2D6A4")]
		private void initMesh()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xD2DD9C", Offset = "0xD2DD9C", VA = "0xD2DD9C")]
		private void shiftVertsBackwards()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xD2DF98", Offset = "0xD2DF98", VA = "0xD2DF98")]
		private void updateMesh()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xD2C9D8", Offset = "0xD2C9D8", VA = "0xD2C9D8")]
		public void refreshMaterial()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xD2C990", Offset = "0xD2C990", VA = "0xD2C990")]
		public void setVisibility(bool visible)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xD2CA7C", Offset = "0xD2CA7C", VA = "0xD2CA7C")]
		public void update()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xD2D504", Offset = "0xD2D504", VA = "0xD2D504")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xD2E038", Offset = "0xD2E038", VA = "0xD2E038")]
		public Swoosh()
		{
		}
	}

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Visual")]
	public float historyTime;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float historyDamp;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxSpeed;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Setup")]
	public Swoosh[] swooshes;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debug;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Player _player;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _transform;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _racketTransform;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _unscaledFixedDeltaTime;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private PlayerID _playerID;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool _isRacketActive;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _needsHistoryReset;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Header("NEW SFX")]
	public float minVolume;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxVolume;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minPitch;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float maxPitch;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float START_THRESH;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float STOP_THRESH;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xD2B9F8", Offset = "0xD2B9F8", VA = "0xD2B9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xD2C1B0", Offset = "0xD2C1B0", VA = "0xD2C1B0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xD2C33C", Offset = "0xD2C33C", VA = "0xD2C33C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xD2C4C8", Offset = "0xD2C4C8", VA = "0xD2C4C8")]
	private void RequestHistoryReset()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xD2C4D4", Offset = "0xD2C4D4", VA = "0xD2C4D4")]
	private void ResetHistory()
	{
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xD2C81C", Offset = "0xD2C81C", VA = "0xD2C81C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xD2CA18", Offset = "0xD2CA18", VA = "0xD2CA18")]
	private void UpdateSwooshes()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xD2D4A0", Offset = "0xD2D4A0", VA = "0xD2D4A0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xD2D63C", Offset = "0xD2D63C", VA = "0xD2D63C")]
	public RacketSwoosh()
	{
	}
}
[Token(Token = "0x20001AA")]
[RequireComponent(typeof(MeshFilter))]
public class RandomColorMaker : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	public enum Channel
	{
		[Token(Token = "0x4000C07")]
		Color,
		[Token(Token = "0x4000C08")]
		UV0,
		[Token(Token = "0x4000C09")]
		UV1,
		[Token(Token = "0x4000C0A")]
		UV2,
		[Token(Token = "0x4000C0B")]
		UV3
	}

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Channel channel;

	[Token(Token = "0x60008BD")]
	private void fillArrayWithSameValue<T>(T[] array, T value)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xD2E040", Offset = "0xD2E040", VA = "0xD2E040")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xD2E3C0", Offset = "0xD2E3C0", VA = "0xD2E3C0")]
	public RandomColorMaker()
	{
	}
}
[Token(Token = "0x20001AC")]
[RequireComponent(typeof(Camera))]
public class SimplePostProcess : MonoBehaviour
{
	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float intensity;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _original;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _duplicate;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _IntensityID;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xD2E3C8", Offset = "0xD2E3C8", VA = "0xD2E3C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xD2E418", Offset = "0xD2E418", VA = "0xD2E418")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xD2E654", Offset = "0xD2E654", VA = "0xD2E654")]
	public SimplePostProcess()
	{
	}
}
[Token(Token = "0x20001AD")]
public class Snow : MonoBehaviour
{
	[Token(Token = "0x20001AE")]
	[CompilerGenerated]
	private sealed class <StopCo>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Snow <>4__this;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xD2ECB4", Offset = "0xD2ECB4", VA = "0xD2ECB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0xD2ECFC", Offset = "0xD2ECFC", VA = "0xD2ECFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xD2E9AC", Offset = "0xD2E9AC", VA = "0xD2E9AC")]
		[DebuggerHidden]
		public <StopCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xD2EBC8", Offset = "0xD2EBC8", VA = "0xD2EBC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xD2EBCC", Offset = "0xD2EBCC", VA = "0xD2EBCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xD2ECBC", Offset = "0xD2ECBC", VA = "0xD2ECBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Snow inst;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isXmasNow;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem _particles;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine _StopCo;

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xD2E664", Offset = "0xD2E664", VA = "0xD2E664")]
	private void OnGameInit()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xD2E8B8", Offset = "0xD2E8B8", VA = "0xD2E8B8")]
	private void OnGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xD2E938", Offset = "0xD2E938", VA = "0xD2E938")]
	[IteratorStateMachine(typeof(<StopCo>d__6))]
	private IEnumerator StopCo()
	{
		return null;
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xD2E9D4", Offset = "0xD2E9D4", VA = "0xD2E9D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xD2EBC0", Offset = "0xD2EBC0", VA = "0xD2EBC0")]
	public Snow()
	{
	}
}
[Token(Token = "0x20001AF")]
public class SpaceShrinker : MonoBehaviour
{
	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpaceShrinker inst;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int resolution;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float activateAtPercent;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve shrinkGraph;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer shrinkPlane;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem shrinkParticles;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material pcMaterial;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material androidMaterial;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask hiddenLayers;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture rtL;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture rtR;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool testMode;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _timer;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isPlaying;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _activated;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _opponentPos;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _manuallyStarted;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private LayerMask _mask;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _strengthID;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int _EyeLID;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _EyeRID;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[Tooltip("Camera for rendering each eye texture")]
	private Camera eyeHelperCamera;

	[Token(Token = "0x17000194")]
	public bool isDone
	{
		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xD2ED04", Offset = "0xD2ED04", VA = "0xD2ED04")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xD2ED0C", Offset = "0xD2ED0C", VA = "0xD2ED0C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000195")]
	private Camera cam
	{
		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xD2ED18", Offset = "0xD2ED18", VA = "0xD2ED18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xD2ED74", Offset = "0xD2ED74", VA = "0xD2ED74")]
	private void updatePlane()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xD2EE34", Offset = "0xD2EE34", VA = "0xD2EE34")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xD2EE80", Offset = "0xD2EE80", VA = "0xD2EE80")]
	public void begin()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xD2F114", Offset = "0xD2F114", VA = "0xD2F114")]
	public void begin_special()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xD2F19C", Offset = "0xD2F19C", VA = "0xD2F19C")]
	public void abort()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xD2F244", Offset = "0xD2F244", VA = "0xD2F244")]
	private void done()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xD2F2A8", Offset = "0xD2F2A8", VA = "0xD2F2A8")]
	public void updateRT()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xD2F48C", Offset = "0xD2F48C", VA = "0xD2F48C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xD2F57C", Offset = "0xD2F57C", VA = "0xD2F57C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xD2F7B4", Offset = "0xD2F7B4", VA = "0xD2F7B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xD2F7B8", Offset = "0xD2F7B8", VA = "0xD2F7B8")]
	public SpaceShrinker()
	{
	}
}
[Token(Token = "0x20001B0")]
public class SuperflowSphere : MonoBehaviour
{
	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SuperflowSphere inst;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeDuration;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer arcade;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer solo_and_mp;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _bg;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _current;

	[Token(Token = "0x17000196")]
	public bool isActive
	{
		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xD2F7FC", Offset = "0xD2F7FC", VA = "0xD2F7FC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xD2F818", Offset = "0xD2F818", VA = "0xD2F818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xD2F918", Offset = "0xD2F918", VA = "0xD2F918")]
	public void show()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xD2FC50", Offset = "0xD2FC50", VA = "0xD2FC50")]
	public void hide()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xD2FA20", Offset = "0xD2FA20", VA = "0xD2FA20")]
	private void toggleCo(bool fadeInElseOut)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xD2FCCC", Offset = "0xD2FCCC", VA = "0xD2FCCC")]
	public SuperflowSphere()
	{
	}
}
[Token(Token = "0x20001B1")]
public class AlwaysFaceCamera : MonoBehaviour
{
	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform rotateTarget;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool reverse;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xD2FCDC", Offset = "0xD2FCDC", VA = "0xD2FCDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xD2FE08", Offset = "0xD2FE08", VA = "0xD2FE08")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xD2FE94", Offset = "0xD2FE94", VA = "0xD2FE94")]
	public AlwaysFaceCamera()
	{
	}
}
[Token(Token = "0x20001B2")]
public class AntiAliasing
{
	[Token(Token = "0x20001B3")]
	public enum Mode
	{
		[Token(Token = "0x4000C39")]
		Disabled,
		[Token(Token = "0x4000C3A")]
		x2,
		[Token(Token = "0x4000C3B")]
		x4,
		[Token(Token = "0x4000C3C")]
		x8
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xD2FE9C", Offset = "0xD2FE9C", VA = "0xD2FE9C")]
	private static int modeToNumber(Mode mode)
	{
		return default(int);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xD2FF68", Offset = "0xD2FF68", VA = "0xD2FF68")]
	private static Mode numberToMode(int aaNum)
	{
		return default(Mode);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xD3001C", Offset = "0xD3001C", VA = "0xD3001C")]
	public static void setMode(Mode mode, bool saveChange = true)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xD30034", Offset = "0xD30034", VA = "0xD30034")]
	public static void setNum(int aaNum, bool saveChange = true)
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xD30190", Offset = "0xD30190", VA = "0xD30190")]
	public static Mode getMode()
	{
		return default(Mode);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xD301A4", Offset = "0xD301A4", VA = "0xD301A4")]
	public static int getNum()
	{
		return default(int);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xD301AC", Offset = "0xD301AC", VA = "0xD301AC")]
	public static void load()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xD30114", Offset = "0xD30114", VA = "0xD30114")]
	public static void save()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xD302B4", Offset = "0xD302B4", VA = "0xD302B4")]
	public AntiAliasing()
	{
	}
}
[Token(Token = "0x20001B4")]
public class AudioControl : MonoBehaviour
{
	[Token(Token = "0x20001B5")]
	public enum Mode
	{
		[Token(Token = "0x4000C47")]
		NX,
		[Token(Token = "0x4000C48")]
		Unity3D,
		[Token(Token = "0x4000C49")]
		Stereo
	}

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioControl inst;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode toggleKeyCode;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public KeyCode nxKeyCode;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode unity3DKeyCode;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode stereoKeyCode;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stereoVolumeScale;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float unity3DVolumeScale;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float volumeScale;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	private Mode _mode;

	[Token(Token = "0x17000197")]
	public Mode mode
	{
		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xD302BC", Offset = "0xD302BC", VA = "0xD302BC")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xD302C4", Offset = "0xD302C4", VA = "0xD302C4")]
		set
		{
		}
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xD30494", Offset = "0xD30494", VA = "0xD30494")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xD304EC", Offset = "0xD304EC", VA = "0xD304EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xD3061C", Offset = "0xD3061C", VA = "0xD3061C")]
	private void toggleMode()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xD302DC", Offset = "0xD302DC", VA = "0xD302DC")]
	private void onModeChanged()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xD30640", Offset = "0xD30640", VA = "0xD30640")]
	public AudioControl()
	{
	}
}
[Token(Token = "0x20001B6")]
[RequireComponent(typeof(Renderer))]
public class BallCounter : MonoBehaviour
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UISettings.BallCounter _config;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Ball _myBall;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _material;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _intensityId;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _hitsId;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _p2Id;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _plowing;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _numBossesHit;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lastHitTime;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _visible;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _intensity;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _smoothedIntensity;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _smoothedIntensityVelocity;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _hits;

	[Token(Token = "0x4000C58")]
	private const float minHits = 1f;

	[Token(Token = "0x4000C59")]
	private const float maxHits = 5f;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xD3066C", Offset = "0xD3066C", VA = "0xD3066C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xD30930", Offset = "0xD30930", VA = "0xD30930")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xD30958", Offset = "0xD30958", VA = "0xD30958")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xD30960", Offset = "0xD30960", VA = "0xD30960")]
	private void onPlowStart()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xD3096C", Offset = "0xD3096C", VA = "0xD3096C")]
	private void onPlowEnd()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xD30978", Offset = "0xD30978", VA = "0xD30978")]
	private void onTargetHit(Target target)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xD309F4", Offset = "0xD309F4", VA = "0xD309F4")]
	private void onBigTotalShotWillAppear()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xD30A44", Offset = "0xD30A44", VA = "0xD30A44")]
	private void Update()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xD30BF0", Offset = "0xD30BF0", VA = "0xD30BF0")]
	public BallCounter()
	{
	}
}
[Token(Token = "0x20001B7")]
public class BallPool : MonoBehaviour
{
	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Ball ballPrototype;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int initialPoolSize;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BallPool _inst;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<Ball> _pool;

	[Token(Token = "0x17000198")]
	public static BallPool inst
	{
		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xD30BF8", Offset = "0xD30BF8", VA = "0xD30BF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xD30D74", Offset = "0xD30D74", VA = "0xD30D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xD30F20", Offset = "0xD30F20", VA = "0xD30F20")]
	private void Start()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xD30E6C", Offset = "0xD30E6C", VA = "0xD30E6C")]
	private void createPool()
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xD310A0", Offset = "0xD310A0", VA = "0xD310A0")]
	private Ball allocateBall()
	{
		return null;
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xD311E4", Offset = "0xD311E4", VA = "0xD311E4")]
	public Ball allocate()
	{
		return null;
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xD31290", Offset = "0xD31290", VA = "0xD31290")]
	public void free(Ball oldBall)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xD3136C", Offset = "0xD3136C", VA = "0xD3136C")]
	public BallPool()
	{
	}
}
[Token(Token = "0x20001B8")]
public class BallVisibility : MonoBehaviour
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer innerMesh;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer crystalGlowMesh;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer crystalMesh;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer glowMesh;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light pointLight;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _innerMeshOriginalAlbedoColor;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _innerMeshOriginalEmissionColor;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _crystalGlowMeshOriginalTintColor;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color _crystalMeshOriginalAlbedoColor;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _glowMeshOriginalLodAlpha;

	[Token(Token = "0x17000199")]
	public float visibility
	{
		[Token(Token = "0x6000906")]
		[Address(RVA = "0xD3137C", Offset = "0xD3137C", VA = "0xD3137C")]
		set
		{
		}
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xD31508", Offset = "0xD31508", VA = "0xD31508")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xD31658", Offset = "0xD31658", VA = "0xD31658")]
	public BallVisibility()
	{
	}
}
[Token(Token = "0x20001B9")]
public class Brick : MonoBehaviour
{
	[Token(Token = "0x20001BA")]
	public enum ContactSource
	{
		[Token(Token = "0x4000C7B")]
		Ball,
		[Token(Token = "0x4000C7C")]
		Ripple,
		[Token(Token = "0x4000C7D")]
		WreckingBallRipple,
		[Token(Token = "0x4000C7E")]
		SplashDamagePellet,
		[Token(Token = "0x4000C7F")]
		NukePellet,
		[Token(Token = "0x4000C80")]
		Blaster,
		[Token(Token = "0x4000C81")]
		HealingTarget,
		[Token(Token = "0x4000C82")]
		IceFreeze,
		[Token(Token = "0x4000C83")]
		IceExplode,
		[Token(Token = "0x4000C84")]
		ShieldBreak,
		[Token(Token = "0x4000C85")]
		ShieldRebuild
	}

	[Token(Token = "0x20001BB")]
	[CompilerGenerated]
	private sealed class <shakeCo>d__70 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float duration;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float strenght;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Brick <>4__this;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__2;

		[Token(Token = "0x170001AA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0xD33F4C", Offset = "0xD33F4C", VA = "0xD33F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xD33F94", Offset = "0xD33F94", VA = "0xD33F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xD32F10", Offset = "0xD32F10", VA = "0xD32F10")]
		[DebuggerHidden]
		public <shakeCo>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xD33DB8", Offset = "0xD33DB8", VA = "0xD33DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xD33DBC", Offset = "0xD33DBC", VA = "0xD33DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xD33F54", Offset = "0xD33F54", VA = "0xD33F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Target _target;

	[NonSerialized]
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HexTrudeManager.WallType overrideWallType;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private HexTrudeManager.WallType _wallType;

	[NonSerialized]
	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool overrideExtruded;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool _isExtruded;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _surfaceRenderer;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer _reflectionRenderer;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer _shieldRenderer;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PowerupIceBreaker.Ice ice;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LevelEditorBrickSelection selection;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _modelParent;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BrickData _data;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private BrickGlow _glow;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HexTile _hexTile;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshCollider _meshCollider;

	[Token(Token = "0x4000C77")]
	public const float EXPLOSION_THRESH = 1f;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Ripple _ripple;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public Transform powerupFX;

	[Token(Token = "0x1700019A")]
	public Target target
	{
		[Token(Token = "0x6000909")]
		[Address(RVA = "0xD31660", Offset = "0xD31660", VA = "0xD31660")]
		get
		{
			return null;
		}
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xD31668", Offset = "0xD31668", VA = "0xD31668")]
		set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public bool isGlowingDueToHit
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xD316E8", Offset = "0xD316E8", VA = "0xD316E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019C")]
	public HexTrudeManager.WallType wallType
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xD31704", Offset = "0xD31704", VA = "0xD31704")]
		get
		{
			return default(HexTrudeManager.WallType);
		}
		[Token(Token = "0x600090D")]
		[Address(RVA = "0xD31774", Offset = "0xD31774", VA = "0xD31774")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public bool isBumper
	{
		[Token(Token = "0x600090E")]
		[Address(RVA = "0xD3177C", Offset = "0xD3177C", VA = "0xD3177C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019E")]
	public bool isStopper
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0xD31810", Offset = "0xD31810", VA = "0xD31810")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019F")]
	public bool isBlaster
	{
		[Token(Token = "0x6000910")]
		[Address(RVA = "0xD3183C", Offset = "0xD3183C", VA = "0xD3183C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A0")]
	public bool isExtruded
	{
		[Token(Token = "0x6000912")]
		[Address(RVA = "0xD317A4", Offset = "0xD317A4", VA = "0xD317A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000911")]
		[Address(RVA = "0xD31868", Offset = "0xD31868", VA = "0xD31868")]
		set
		{
		}
	}

	[Token(Token = "0x170001A1")]
	public MeshRenderer surfaceRenderer
	{
		[Token(Token = "0x6000913")]
		[Address(RVA = "0xD31874", Offset = "0xD31874", VA = "0xD31874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A2")]
	public MeshRenderer reflectionRenderer
	{
		[Token(Token = "0x6000914")]
		[Address(RVA = "0xD3187C", Offset = "0xD3187C", VA = "0xD3187C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A3")]
	public MeshRenderer ShieldRenderer
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0xD31884", Offset = "0xD31884", VA = "0xD31884")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A4")]
	public Brick[] neighbors
	{
		[Token(Token = "0x6000917")]
		[Address(RVA = "0xD31B24", Offset = "0xD31B24", VA = "0xD31B24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A5")]
	public BrickGlow glow
	{
		[Token(Token = "0x6000918")]
		[Address(RVA = "0xD31B40", Offset = "0xD31B40", VA = "0xD31B40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A6")]
	public HexTile hexTile
	{
		[Token(Token = "0x6000919")]
		[Address(RVA = "0xD31B48", Offset = "0xD31B48", VA = "0xD31B48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A7")]
	public MeshCollider meshCollider
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0xD31B50", Offset = "0xD31B50", VA = "0xD31B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A8")]
	public Ripple ripple
	{
		[Token(Token = "0x600091B")]
		[Address(RVA = "0xD31B58", Offset = "0xD31B58", VA = "0xD31B58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600091C")]
		[Address(RVA = "0xD31B60", Offset = "0xD31B60", VA = "0xD31B60")]
		set
		{
		}
	}

	[Token(Token = "0x170001A9")]
	public bool isRippling
	{
		[Token(Token = "0x600091D")]
		[Address(RVA = "0xD31BC8", Offset = "0xD31BC8", VA = "0xD31BC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xD3192C", Offset = "0xD3192C", VA = "0xD3192C")]
	public MeshRenderer CloneSurface(string name)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xD31BD8", Offset = "0xD31BD8", VA = "0xD31BD8")]
	public Vector3 getNeighborCoord(Brick neighbor)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xD31C78", Offset = "0xD31C78", VA = "0xD31C78")]
	public GameObject getChildByName(string nameSuffix)
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xD31D08", Offset = "0xD31D08", VA = "0xD31D08")]
	public bool isInView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xD3202C", Offset = "0xD3202C", VA = "0xD3202C")]
	public void useTheseMaterials(Material surfaceMaterial, Material reflectionMaterial)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xD29064", Offset = "0xD29064", VA = "0xD29064")]
	public void updateMaterials()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xD32194", Offset = "0xD32194", VA = "0xD32194")]
	private void ResetLocalTransform(Transform t)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xD32224", Offset = "0xD32224", VA = "0xD32224")]
	private static void scaleRearColliderVerts(Brick brick)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xD3248C", Offset = "0xD3248C", VA = "0xD3248C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xD32940", Offset = "0xD32940", VA = "0xD32940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xD32970", Offset = "0xD32970", VA = "0xD32970")]
	public void onGlowPropagate()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xD32984", Offset = "0xD32984", VA = "0xD32984")]
	public void onGlowDone()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xD3298C", Offset = "0xD3298C", VA = "0xD3298C")]
	private void onBallCollision(Ball.BallCollision collisionInfo)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xD32AE0", Offset = "0xD32AE0", VA = "0xD32AE0")]
	public void RemoteContactMade(ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xD32DE8", Offset = "0xD32DE8", VA = "0xD32DE8")]
	public void shake(float duration, float strenght, float delay = 0f)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xD32E78", Offset = "0xD32E78", VA = "0xD32E78")]
	[IteratorStateMachine(typeof(<shakeCo>d__70))]
	private IEnumerator<float> shakeCo(float duration, float strenght, float delay)
	{
		return null;
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xD32F38", Offset = "0xD32F38", VA = "0xD32F38", Slot = "4")]
	public virtual void shotMadeContact(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, bool forceHit = false)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xD33B24", Offset = "0xD33B24", VA = "0xD33B24")]
	public void playPremonitionSound(float timeUntilHit)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xD33B28", Offset = "0xD33B28", VA = "0xD33B28")]
	public void playPortalEntrySound()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xD33BBC", Offset = "0xD33BBC", VA = "0xD33BBC")]
	public void playPortalExitSound()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xD33C50", Offset = "0xD33C50", VA = "0xD33C50")]
	public void playeEnterPortalAnimation(float duration)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xD33CFC", Offset = "0xD33CFC", VA = "0xD33CFC")]
	public void playeExitPortalAnimation(float duration)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xD33DA8", Offset = "0xD33DA8", VA = "0xD33DA8")]
	public Brick()
	{
	}
}
[Token(Token = "0x20001BC")]
public class BrickData : MonoBehaviour
{
	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int[] neighborIds;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3[] coords;

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xD33FF0", Offset = "0xD33FF0", VA = "0xD33FF0")]
	public BrickData()
	{
	}
}
[Token(Token = "0x20001BD")]
public class BrickGlow : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001BE")]
	public class Params
	{
		[Serializable]
		[Token(Token = "0x20001BF")]
		public class Materials
		{
			[Token(Token = "0x4000CAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material start;

			[Token(Token = "0x4000CAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material end;

			[Token(Token = "0x600094F")]
			[Address(RVA = "0xD354C4", Offset = "0xD354C4", VA = "0xD354C4")]
			public Materials()
			{
			}
		}

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Materials materials;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fadeInNormTime;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float fadeOutNormTime;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fillNormTime;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float propagationNormTime;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float damageNormTime;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fullHitDuration;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xD354B0", Offset = "0xD354B0", VA = "0xD354B0")]
		public Params()
		{
		}
	}

	[Token(Token = "0x20001C0")]
	[CompilerGenerated]
	private sealed class <animateGlowCo>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BrickGlow <>4__this;

		[Token(Token = "0x170001AF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xD35598", Offset = "0xD35598", VA = "0xD35598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000955")]
			[Address(RVA = "0xD355E0", Offset = "0xD355E0", VA = "0xD355E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xD352E8", Offset = "0xD352E8", VA = "0xD352E8")]
		[DebuggerHidden]
		public <animateGlowCo>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xD354CC", Offset = "0xD354CC", VA = "0xD354CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xD354D0", Offset = "0xD354D0", VA = "0xD354D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xD355A0", Offset = "0xD355A0", VA = "0xD355A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _AlphaMultID;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _scaleAndOffsetID;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShotInfo _currentShot;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SyncHexHits.HexHitInfo _hitInfo;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshCollider _collider;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CoroutineHandle _animationCo;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _isGlowing;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Brick _brick;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform _transform;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _propagated;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _isGlowVisible;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool _hitEmpty;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool _charged;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _damaged;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Params _params;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Renderer _glowRenderer;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material _sharedGlowMaterial;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private MaterialsManager.MaterialPool _materialPool;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 _hitCoords;

	[NonSerialized]
	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float currentGlowTimeNormalized;

	[Token(Token = "0x170001AC")]
	public SyncHexHits.HexHitInfo hitInfo
	{
		[Token(Token = "0x600093B")]
		[Address(RVA = "0xD33FF8", Offset = "0xD33FF8", VA = "0xD33FF8")]
		get
		{
			return default(SyncHexHits.HexHitInfo);
		}
	}

	[Token(Token = "0x170001AD")]
	public MeshCollider meshCollider
	{
		[Token(Token = "0x600093C")]
		[Address(RVA = "0xD34008", Offset = "0xD34008", VA = "0xD34008")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public bool isGlowing
	{
		[Token(Token = "0x600093D")]
		[Address(RVA = "0xD34010", Offset = "0xD34010", VA = "0xD34010")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xD34018", Offset = "0xD34018", VA = "0xD34018")]
	private void initHitLight(Vector3 hitPos, bool charged, PlayerID playerID)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xD3418C", Offset = "0xD3418C", VA = "0xD3418C")]
	private void onPropagate()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xD341C0", Offset = "0xD341C0", VA = "0xD341C0")]
	private void setGlowVisibility(bool state)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xD34200", Offset = "0xD34200", VA = "0xD34200")]
	private MaterialsManager.MaterialPool getMaterialPool(PlayerID playerID, ref SyncHexHits.HexHitInfo hitInfo)
	{
		return null;
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xD34310", Offset = "0xD34310", VA = "0xD34310")]
	protected void reset()
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xD33B08", Offset = "0xD33B08", VA = "0xD33B08")]
	public void endGlowImmediately()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xD343F8", Offset = "0xD343F8", VA = "0xD343F8")]
	private void animateGlow(float t)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xD346D0", Offset = "0xD346D0", VA = "0xD346D0")]
	public void MakeCurrentGlowNotDealAnyDamage()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xD346A0", Offset = "0xD346A0", VA = "0xD346A0")]
	private void onDone()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xD346DC", Offset = "0xD346DC", VA = "0xD346DC")]
	public Vector2 getImpactCoord(Vector3 origin)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xD34888", Offset = "0xD34888", VA = "0xD34888")]
	public void glow(bool charged, ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xD35170", Offset = "0xD35170", VA = "0xD35170")]
	private void PlayDamageSFXAndUpdateCombos(float pitchBoost = 0f)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xD35274", Offset = "0xD35274", VA = "0xD35274")]
	[IteratorStateMachine(typeof(<animateGlowCo>d__39))]
	private IEnumerator<float> animateGlowCo()
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xD35310", Offset = "0xD35310", VA = "0xD35310")]
	private void Awake()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xD353A8", Offset = "0xD353A8", VA = "0xD353A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0xD354A8", Offset = "0xD354A8", VA = "0xD354A8")]
	public BrickGlow()
	{
	}
}
[Token(Token = "0x20001C1")]
public enum BrickType
{
	[Token(Token = "0x4000CB1")]
	Empty,
	[Token(Token = "0x4000CB2")]
	Portal,
	[Token(Token = "0x4000CB3")]
	Bonus,
	[Token(Token = "0x4000CB4")]
	Bogus,
	[Token(Token = "0x4000CB5")]
	StaticTarget,
	[Token(Token = "0x4000CB6")]
	SnakeHead,
	[Token(Token = "0x4000CB7")]
	SnakeTail,
	[Token(Token = "0x4000CB8")]
	PowerUp_OBSOLETE,
	[Token(Token = "0x4000CB9")]
	StaticHealing,
	[Token(Token = "0x4000CBA")]
	BoosterSwitch,
	[Token(Token = "0x4000CBB")]
	Jumper,
	[Token(Token = "0x4000CBC")]
	Slider,
	[Token(Token = "0x4000CBD")]
	Disabled
}
[Token(Token = "0x20001C2")]
public class CombineChildren : MonoBehaviour
{
	[Token(Token = "0x6000956")]
	[Address(RVA = "0xD3563C", Offset = "0xD3563C", VA = "0xD3563C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xD35C90", Offset = "0xD35C90", VA = "0xD35C90")]
	public CombineChildren()
	{
	}
}
[Token(Token = "0x20001C3")]
public class CopyCat : MonoBehaviour
{
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, CopyCat> dictionary;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Component[] specificComponents;

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xD35C98", Offset = "0xD35C98", VA = "0xD35C98")]
	public static int getLabelHash(string label)
	{
		return default(int);
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xD35CC0", Offset = "0xD35CC0", VA = "0xD35CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xD35EAC", Offset = "0xD35EAC", VA = "0xD35EAC")]
	public CopyCat()
	{
	}
}
[Token(Token = "0x20001C4")]
public class CratesInitializer : MonoBehaviour
{
	[Token(Token = "0x600095C")]
	[Address(RVA = "0xD35F4C", Offset = "0xD35F4C", VA = "0xD35F4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xD35FB8", Offset = "0xD35FB8", VA = "0xD35FB8")]
	private static string GetBucketURL()
	{
		return null;
	}

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xD3613C", Offset = "0xD3613C", VA = "0xD3613C")]
	public CratesInitializer()
	{
	}
}
[Token(Token = "0x20001C5")]
public class DeflectorController : MonoBehaviour
{
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ballDeflector;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform deflectorTarget;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mobile racketVelocity;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider mainDeflector;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider positiveDeflector;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider negativeDeflector;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 positiveDirection;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xD36144", Offset = "0xD36144", VA = "0xD36144")]
	public void toggleDeflectors(bool state)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xD361A0", Offset = "0xD361A0", VA = "0xD361A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xD361C4", Offset = "0xD361C4", VA = "0xD361C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xD363C0", Offset = "0xD363C0", VA = "0xD363C0")]
	public DeflectorController()
	{
	}
}
[Token(Token = "0x20001C6")]
public class DeselectAllOnStart : MonoBehaviour
{
	[Token(Token = "0x6000963")]
	[Address(RVA = "0xD36420", Offset = "0xD36420", VA = "0xD36420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xD36424", Offset = "0xD36424", VA = "0xD36424")]
	public DeselectAllOnStart()
	{
	}
}
[Token(Token = "0x20001C7")]
public class DetachAudio : MonoBehaviour
{
	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _parent;

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xD3642C", Offset = "0xD3642C", VA = "0xD3642C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xD36504", Offset = "0xD36504", VA = "0xD36504")]
	public void detach()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xD36544", Offset = "0xD36544", VA = "0xD36544")]
	public void detachAndSetPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xD3658C", Offset = "0xD3658C", VA = "0xD3658C")]
	public DetachAudio()
	{
	}
}
[Token(Token = "0x20001C8")]
public class DisplayVersion : MonoBehaviour
{
	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI _textMeshProUgui;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xD36594", Offset = "0xD36594", VA = "0xD36594")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xD36624", Offset = "0xD36624", VA = "0xD36624")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xD36628", Offset = "0xD36628", VA = "0xD36628")]
	private void setVersion()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xD36834", Offset = "0xD36834", VA = "0xD36834")]
	public DisplayVersion()
	{
	}
}
[Token(Token = "0x20001C9")]
public class DontDestroyOnLoad : MonoBehaviour
{
	[Token(Token = "0x600096D")]
	[Address(RVA = "0xD3683C", Offset = "0xD3683C", VA = "0xD3683C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xD368A8", Offset = "0xD368A8", VA = "0xD368A8")]
	public DontDestroyOnLoad()
	{
	}
}
[Token(Token = "0x20001CA")]
public static class DynamicMeshCombiner
{
	[Token(Token = "0x20001CB")]
	private struct CombineKey
	{
		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int layer;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xD3570C", Offset = "0xD3570C", VA = "0xD3570C")]
	public static GameObject[] combineMeshes(MeshRenderer[] meshRenderers, bool dynamic = false, bool diactivateRenderers = true)
	{
		return null;
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xD368B0", Offset = "0xD368B0", VA = "0xD368B0")]
	private static GameObject dynamicCombineMeshesWithSameMaterial(MeshRenderer[] renderers, bool diactivateRenderers)
	{
		return null;
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xD36FD8", Offset = "0xD36FD8", VA = "0xD36FD8")]
	private static GameObject staticCombineMeshesWithSameMaterial(MeshRenderer[] renderers, bool diactivateRenderers)
	{
		return null;
	}
}
[Token(Token = "0x20001CC")]
public class Forward : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001CD")]
	public class Dbg
	{
		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool drawRay;

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xD37578", Offset = "0xD37578", VA = "0xD37578")]
		public Dbg()
		{
		}
	}

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 forwardDirection;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dbg debug;

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xD37418", Offset = "0xD37418", VA = "0xD37418")]
	private void Update()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xD37518", Offset = "0xD37518", VA = "0xD37518")]
	public Forward()
	{
	}
}
[Token(Token = "0x20001CE")]
public class GameObjectActivationStateRNX : MonoBehaviour, IEquatable<GameObjectActivationStateRNX>, IComparable<GameObjectActivationStateRNX>
{
	[Token(Token = "0x20001CF")]
	public enum ActiveState
	{
		[Token(Token = "0x4000CD5")]
		On,
		[Token(Token = "0x4000CD6")]
		Off,
		[Token(Token = "0x4000CD7")]
		OnInDebugMode
	}

	[Token(Token = "0x20001D0")]
	public enum ActiveStage
	{
		[Token(Token = "0x4000CD9")]
		Awake,
		[Token(Token = "0x4000CDA")]
		Start
	}

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActiveState state;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ActiveStage stage;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int priority;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xD37580", Offset = "0xD37580", VA = "0xD37580")]
	public void onAwake()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xD3765C", Offset = "0xD3765C", VA = "0xD3765C")]
	public void onStart()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xD3773C", Offset = "0xD3773C", VA = "0xD3773C", Slot = "5")]
	public int CompareTo(GameObjectActivationStateRNX other)
	{
		return default(int);
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xD377E0", Offset = "0xD377E0", VA = "0xD377E0", Slot = "4")]
	public bool Equals(GameObjectActivationStateRNX other)
	{
		return default(bool);
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xD37848", Offset = "0xD37848", VA = "0xD37848")]
	public GameObjectActivationStateRNX()
	{
	}
}
[Token(Token = "0x20001D1")]
public class GameObjectActivatorRNX : MonoBehaviour
{
	[Token(Token = "0x600097A")]
	[Address(RVA = "0xD37858", Offset = "0xD37858", VA = "0xD37858")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xD379E0", Offset = "0xD379E0", VA = "0xD379E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xD37B68", Offset = "0xD37B68", VA = "0xD37B68")]
	public GameObjectActivatorRNX()
	{
	}
}
[Token(Token = "0x20001D2")]
public class Grow : MonoBehaviour
{
	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxScale;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _startTime;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xD38B70", Offset = "0xD38B70", VA = "0xD38B70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xD38BEC", Offset = "0xD38BEC", VA = "0xD38BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xD38C58", Offset = "0xD38C58", VA = "0xD38C58")]
	public Grow()
	{
	}
}
[Token(Token = "0x20001D3")]
public static class HelperFunctions
{
	[Token(Token = "0x6000980")]
	public static void addUniqueToList<T>(List<T> list, T newObj)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xD38C6C", Offset = "0xD38C6C", VA = "0xD38C6C")]
	public static GameObject getChildWhereNameContains(Transform parent, string childSuffix)
	{
		return null;
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xD38D14", Offset = "0xD38D14", VA = "0xD38D14")]
	public static GameObject getChildBySuffix(Transform parent, string parentSuffix, string childSuffix)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xD38DF0", Offset = "0xD38DF0", VA = "0xD38DF0")]
	public static void setActiveUpwards(GameObject obj, bool active)
	{
	}
}
[Token(Token = "0x20001D4")]
public class Highlight : MonoBehaviour
{
	[Token(Token = "0x20001D5")]
	private enum State
	{
		[Token(Token = "0x4000CE9")]
		Diminished,
		[Token(Token = "0x4000CEA")]
		Highlighting,
		[Token(Token = "0x4000CEB")]
		Highlighted,
		[Token(Token = "0x4000CEC")]
		Diminishing
	}

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float epsilon;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float highlightDuration;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float highAlpha;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fadeFromBlack;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Graphic[] _grafix;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _origAlpha;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private State _state;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _highlightTime;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _currentHighlightDuration;

	[Token(Token = "0x170001B1")]
	private float alpha
	{
		[Token(Token = "0x6000984")]
		[Address(RVA = "0xD38EAC", Offset = "0xD38EAC", VA = "0xD38EAC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000985")]
		[Address(RVA = "0xD38EEC", Offset = "0xD38EEC", VA = "0xD38EEC")]
		set
		{
		}
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xD38FBC", Offset = "0xD38FBC", VA = "0xD38FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xD39034", Offset = "0xD39034", VA = "0xD39034")]
	public void highlight()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xD39048", Offset = "0xD39048", VA = "0xD39048")]
	public void highlightForDefaultDuration()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xD3905C", Offset = "0xD3905C", VA = "0xD3905C")]
	public void highlightForDuration(float duration)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xD3906C", Offset = "0xD3906C", VA = "0xD3906C")]
	public void diminish()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xD39078", Offset = "0xD39078", VA = "0xD39078")]
	private void Update()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xD39174", Offset = "0xD39174", VA = "0xD39174")]
	public Highlight()
	{
	}
}
[Token(Token = "0x20001D6")]
public class KeyboardMove : MonoBehaviour
{
	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xD39188", Offset = "0xD39188", VA = "0xD39188")]
	private void Update()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xD39298", Offset = "0xD39298", VA = "0xD39298")]
	public KeyboardMove()
	{
	}
}
[Token(Token = "0x20001D7")]
public class LazyFollow : MonoBehaviour
{
	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float laziness;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool lazyPosition;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool lazyRotation;

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xD392A8", Offset = "0xD392A8", VA = "0xD392A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xD39324", Offset = "0xD39324", VA = "0xD39324")]
	private void Update()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xD394EC", Offset = "0xD394EC", VA = "0xD394EC")]
	public LazyFollow()
	{
	}
}
[Token(Token = "0x20001D8")]
public class Legal
{
	[Token(Token = "0x6000992")]
	[Address(RVA = "0xD39504", Offset = "0xD39504", VA = "0xD39504")]
	public static bool getAgreed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xD39598", Offset = "0xD39598", VA = "0xD39598")]
	public static void onAgreed()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xD39608", Offset = "0xD39608", VA = "0xD39608")]
	public Legal()
	{
	}
}
[Token(Token = "0x20001D9")]
public class Logger : MonoBehaviour, ISingleton
{
	[Token(Token = "0x20001DA")]
	private struct LogMessage
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string logString;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string stackTrace;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LogType type;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime gameTime;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _checked;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _ignore;

		[Token(Token = "0x170001B9")]
		public bool Ignore
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xD3B2C8", Offset = "0xD3B2C8", VA = "0xD3B2C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xD39E8C", Offset = "0xD39E8C", VA = "0xD39E8C")]
		public LogMessage(string logString, string stackTrace, LogType type, DateTime gameTime)
		{
		}
	}

	[Token(Token = "0x20001DB")]
	public class StackTraceEnabler : IDisposable
	{
		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xD39F48", Offset = "0xD39F48", VA = "0xD39F48")]
		public StackTraceEnabler()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xD3CB40", Offset = "0xD3CB40", VA = "0xD3CB40", Slot = "4")]
		private void System.IDisposable.Dispose()
		{
		}
	}

	[Token(Token = "0x4000CF3")]
	private const string filename = "racketnx.log";

	[Token(Token = "0x4000CF4")]
	private const string prevFilename = "racketnx-prev.log";

	[Token(Token = "0x4000CF5")]
	private const string prev2Filename = "racketnx-prev2.log";

	[Token(Token = "0x4000CF6")]
	private const string tempFilenameFormat = "racketnx-{0}-{1}.log";

	[Token(Token = "0x4000CF7")]
	private const int maxMessages = 10000;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Logger inst;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DateTime _startTime;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CyclicBuffer<LogMessage> _messages;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<string> _usedTokens;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _lastSaveTime;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _logs_written_this_session;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _logs_sent_this_session;

	[Token(Token = "0x170001B2")]
	private string permanentFilepath
	{
		[Token(Token = "0x6000995")]
		[Address(RVA = "0xD39610", Offset = "0xD39610", VA = "0xD39610")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B3")]
	private string permanentPrevFilepath
	{
		[Token(Token = "0x6000996")]
		[Address(RVA = "0xD3968C", Offset = "0xD3968C", VA = "0xD3968C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B4")]
	private string permanentPrev2Filepath
	{
		[Token(Token = "0x6000997")]
		[Address(RVA = "0xD39708", Offset = "0xD39708", VA = "0xD39708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B5")]
	private string nativeUserId
	{
		[Token(Token = "0x6000998")]
		[Address(RVA = "0xD39784", Offset = "0xD39784", VA = "0xD39784")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B6")]
	private string nativeUserName
	{
		[Token(Token = "0x6000999")]
		[Address(RVA = "0xD397FC", Offset = "0xD397FC", VA = "0xD397FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B7")]
	private string myRnxId
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0xD39874", Offset = "0xD39874", VA = "0xD39874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B8")]
	public static string RandomSessionId
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xD398EC", Offset = "0xD398EC", VA = "0xD398EC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xD39934", Offset = "0xD39934", VA = "0xD39934")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xD39984", Offset = "0xD39984", VA = "0xD39984", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xD39C54", Offset = "0xD39C54", VA = "0xD39C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xD39D8C", Offset = "0xD39D8C", VA = "0xD39D8C")]
	private void onLogMessage(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xD39EDC", Offset = "0xD39EDC", VA = "0xD39EDC")]
	public StackTraceEnabler EnableStackTrace()
	{
		return null;
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xD39F68", Offset = "0xD39F68", VA = "0xD39F68")]
	private void OnApplicationFocus(bool hasFocus)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xD3A9D0", Offset = "0xD3A9D0", VA = "0xD3A9D0")]
	private void OnApplicationPause(bool hasPaused)
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xD3AA04", Offset = "0xD3AA04", VA = "0xD3AA04")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xD3AA20", Offset = "0xD3AA20", VA = "0xD3AA20")]
	private string LogHeader()
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xD39F9C", Offset = "0xD39F9C", VA = "0xD39F9C")]
	private void writeMessagesToFile(string filepath)
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xD3B3D4", Offset = "0xD3B3D4", VA = "0xD3B3D4")]
	public void sendByEmail(bool byPlayer, [Optional] string logToken)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xD3C7DC", Offset = "0xD3C7DC", VA = "0xD3C7DC")]
	private string CreateTempFilename()
	{
		return null;
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xD3CA70", Offset = "0xD3CA70", VA = "0xD3CA70")]
	private Attachment createAttachment(string filepath, string displayName, string mediaType)
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xD3C984", Offset = "0xD3C984", VA = "0xD3C984")]
	private string generateUniqueToken()
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0xD3CB0C", Offset = "0xD3CB0C", VA = "0xD3CB0C")]
	private string generateToken()
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xD3CB38", Offset = "0xD3CB38", VA = "0xD3CB38")]
	public Logger()
	{
	}
}
[Token(Token = "0x20001DE")]
public class LookAt : MonoBehaviour
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _lookAtPlayer;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool _reverse;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool _fromAllCameras;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _transform;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("can be null if this is the objcet to rotate")]
	public Transform objectToRotate;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xD3CDF4", Offset = "0xD3CDF4", VA = "0xD3CDF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xD3CF20", Offset = "0xD3CF20", VA = "0xD3CF20")]
	private void Update()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xD3D054", Offset = "0xD3D054", VA = "0xD3D054")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xD3D0A4", Offset = "0xD3D0A4", VA = "0xD3D0A4")]
	public LookAt()
	{
	}
}
[Token(Token = "0x20001DF")]
public class MakeRoomForElder : MonoBehaviour
{
	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component componentType;

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xD3D0AC", Offset = "0xD3D0AC", VA = "0xD3D0AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xD3D290", Offset = "0xD3D290", VA = "0xD3D290")]
	public MakeRoomForElder()
	{
	}
}
[Token(Token = "0x20001E0")]
public class Mobile : MonoBehaviour
{
	[Token(Token = "0x20001E1")]
	private struct SpeedKey
	{
		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float speed;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float smoothSpeed;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float time;
	}

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fidelity;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool trackAngularVelocity;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxAngularVelocityAngle;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool saveSpeedHistory;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Stopwatch _stopWatch;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _transform;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _lastPos;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _historyIndex;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _posHistory;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion[] _rotHistory;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private long[] _deltaTimeHistory;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _startRecordingTime;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<SpeedKey> _speedHistory;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int NumFramesInWindow;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _smoothVelocity;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _smoothVelocityVelocity;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _velocityMultiplier;

	[Token(Token = "0x4000D28")]
	private const float SMOOTH_VELOCITY_DAMP = 0.01f;

	[Token(Token = "0x170001BA")]
	public Vector3 velocity
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xD3D298", Offset = "0xD3D298", VA = "0xD3D298")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BB")]
	public float angularVelocityAngle
	{
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xD3D2B4", Offset = "0xD3D2B4", VA = "0xD3D2B4")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xD3D2BC", Offset = "0xD3D2BC", VA = "0xD3D2BC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public Vector3 angularVelocityAxis
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xD3D2C4", Offset = "0xD3D2C4", VA = "0xD3D2C4")]
		[CompilerGenerated]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xD3D2D0", Offset = "0xD3D2D0", VA = "0xD3D2D0")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public Vector3 angularVelocity
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xD3D2DC", Offset = "0xD3D2DC", VA = "0xD3D2DC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0xD3D2F4", Offset = "0xD3D2F4", VA = "0xD3D2F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0xD3D514", Offset = "0xD3D514", VA = "0xD3D514")]
	public void OnPositionUpdate()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xD3DDF8", Offset = "0xD3DDF8", VA = "0xD3DDF8")]
	public Vector3 GetVelocityAtPoint(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xD3DFD8", Offset = "0xD3DFD8", VA = "0xD3DFD8")]
	public Mobile()
	{
	}
}
[Token(Token = "0x20001E2")]
public class MobileProxy : MonoBehaviour
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mobile mobile;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xD3E06C", Offset = "0xD3E06C", VA = "0xD3E06C")]
	public MobileProxy()
	{
	}
}
[Token(Token = "0x20001E3")]
public class Mouse : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E4")]
	public class Racket
	{
		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float mouseSensitivity;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 orbitOffsetFromCamera;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float distance;

		[NonSerialized]
		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hand;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xD3E810", Offset = "0xD3E810", VA = "0xD3E810")]
		public Racket()
		{
		}
	}

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Mouse inst;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mouseSensitivity;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minXAngle;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxXAngle;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Racket racket;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera _camera;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _racketRelPosition;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _neck;

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xD3E074", Offset = "0xD3E074", VA = "0xD3E074")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xD3E21C", Offset = "0xD3E21C", VA = "0xD3E21C")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xD3E7F4", Offset = "0xD3E7F4", VA = "0xD3E7F4")]
	public Mouse()
	{
	}
}
[Token(Token = "0x20001E5")]
public class PasteCat : MonoBehaviour
{
	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string label;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new bool enabled;

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xD3E82C", Offset = "0xD3E82C", VA = "0xD3E82C")]
	private void copyComponent(Component refComp)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xD3E93C", Offset = "0xD3E93C", VA = "0xD3E93C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xD3EC9C", Offset = "0xD3EC9C", VA = "0xD3EC9C")]
	public PasteCat()
	{
	}
}
[Token(Token = "0x20001E6")]
public class PlanetRotation : MonoBehaviour
{
	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xD3ECAC", Offset = "0xD3ECAC", VA = "0xD3ECAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xD3ED44", Offset = "0xD3ED44", VA = "0xD3ED44")]
	public PlanetRotation()
	{
	}
}
[Token(Token = "0x20001E7")]
public enum PlayerLevel
{
	[Token(Token = "0x4000D3F")]
	Unrated,
	[Token(Token = "0x4000D40")]
	Noob,
	[Token(Token = "0x4000D41")]
	Underdog,
	[Token(Token = "0x4000D42")]
	RisingStar,
	[Token(Token = "0x4000D43")]
	Baller,
	[Token(Token = "0x4000D44")]
	Master,
	[Token(Token = "0x4000D45")]
	RacketLord,
	[Token(Token = "0x4000D46")]
	BallBuster
}
[Serializable]
[Token(Token = "0x20001E8")]
public class SerializablePlayerLevel : SerializableEnum<PlayerLevel>
{
	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xD3ED4C", Offset = "0xD3ED4C", VA = "0xD3ED4C")]
	public SerializablePlayerLevel()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E9")]
public class PlowEffect : MonoBehaviour
{
	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _material;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color _origColorBase;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color _origColor1;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _origColor2;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Ball _ball;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _fadingIn;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _fadeStartTime;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _fadeEndTime;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _colorBaseID;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _color1ID;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _color2ID;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _speelMltID;

	[Token(Token = "0x170001BE")]
	private Quaternion desiredRotation
	{
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xD3EEF8", Offset = "0xD3EEF8", VA = "0xD3EEF8")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170001BF")]
	public float speed
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xD3F30C", Offset = "0xD3F30C", VA = "0xD3F30C")]
		set
		{
		}
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0xD3ED94", Offset = "0xD3ED94", VA = "0xD3ED94")]
	public void init(Ball ball)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0xD3EF6C", Offset = "0xD3EF6C", VA = "0xD3EF6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0xD3F130", Offset = "0xD3F130", VA = "0xD3F130")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0xD3F3D4", Offset = "0xD3F3D4", VA = "0xD3F3D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xD3F158", Offset = "0xD3F158", VA = "0xD3F158")]
	private void fadeIn()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xD3F410", Offset = "0xD3F410", VA = "0xD3F410")]
	public PlowEffect()
	{
	}
}
[Token(Token = "0x20001EA")]
public class Portal
{
	[Token(Token = "0x20001EB")]
	[CompilerGenerated]
	private sealed class <playCo>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Portal <>4__this;

		[Token(Token = "0x170001C4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0xD3F918", Offset = "0xD3F918", VA = "0xD3F918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009E3")]
			[Address(RVA = "0xD3F960", Offset = "0xD3F960", VA = "0xD3F960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xD3F7C0", Offset = "0xD3F7C0", VA = "0xD3F7C0")]
		[DebuggerHidden]
		public <playCo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xD3F7E8", Offset = "0xD3F7E8", VA = "0xD3F7E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xD3F7EC", Offset = "0xD3F7EC", VA = "0xD3F7EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xD3F920", Offset = "0xD3F920", VA = "0xD3F920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Ball _enterBall;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Brick _entryBrick;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Brick _exitBrick;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _duration;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Ball _exitBall;

	[Token(Token = "0x170001C0")]
	public Ball enterBall
	{
		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xD3F418", Offset = "0xD3F418", VA = "0xD3F418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C1")]
	public Brick entryBrick
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xD3F420", Offset = "0xD3F420", VA = "0xD3F420")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C2")]
	public Brick exitBrick
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xD3F428", Offset = "0xD3F428", VA = "0xD3F428")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C3")]
	public float duration
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xD3F430", Offset = "0xD3F430", VA = "0xD3F430")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xD3F438", Offset = "0xD3F438", VA = "0xD3F438")]
	public Portal(Ball ball, Brick entryBrick, Brick exitBrick, float duration)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xD3F74C", Offset = "0xD3F74C", VA = "0xD3F74C")]
	[IteratorStateMachine(typeof(<playCo>d__14))]
	private IEnumerator<float> playCo()
	{
		return null;
	}
}
[Token(Token = "0x20001EC")]
public class PremonitionAudio : MonoBehaviour
{
	[Token(Token = "0x20001ED")]
	[CompilerGenerated]
	private sealed class <playCo>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PremonitionAudio <>4__this;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeUntilHit;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <startTime>5__2;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <endTime>5__3;

		[Token(Token = "0x170001C6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0xD3FD50", Offset = "0xD3FD50", VA = "0xD3FD50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xD3FD98", Offset = "0xD3FD98", VA = "0xD3FD98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xD3FB30", Offset = "0xD3FB30", VA = "0xD3FB30")]
		[DebuggerHidden]
		public <playCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xD3FB70", Offset = "0xD3FB70", VA = "0xD3FB70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xD3FB74", Offset = "0xD3FB74", VA = "0xD3FB74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xD3FD58", Offset = "0xD3FD58", VA = "0xD3FD58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float playStartTime;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minPlayTime;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxPlayTime;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource _audio;

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xD3F9BC", Offset = "0xD3F9BC", VA = "0xD3F9BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xD3FA14", Offset = "0xD3FA14", VA = "0xD3FA14")]
	public void play(float timeUntilHit)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xD3FAAC", Offset = "0xD3FAAC", VA = "0xD3FAAC")]
	[IteratorStateMachine(typeof(<playCo>d__6))]
	private IEnumerator<float> playCo(float timeUntilHit)
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xD3FB58", Offset = "0xD3FB58", VA = "0xD3FB58")]
	public PremonitionAudio()
	{
	}
}
[Token(Token = "0x20001EE")]
public class PTL_Racket : PTL_Adapter
{
	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float arenaRadius;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float arenaHeight;

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xD3FDF4", Offset = "0xD3FDF4", VA = "0xD3FDF4", Slot = "4")]
	public override Bounds getBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xD3FE48", Offset = "0xD3FE48", VA = "0xD3FE48")]
	public PTL_Racket()
	{
	}
}
[Token(Token = "0x20001EF")]
public static class Quitter
{
	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _quitting;

	[Token(Token = "0x170001C8")]
	public static bool quitting
	{
		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xD3FE5C", Offset = "0xD3FE5C", VA = "0xD3FE5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xD3FEA4", Offset = "0xD3FEA4", VA = "0xD3FEA4")]
	public static void Quit()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xD3FF50", Offset = "0xD3FF50", VA = "0xD3FF50")]
	private static void SetCloudDiagnosticsMetaData()
	{
	}
}
[Token(Token = "0x20001F0")]
public class RacketHaptic : MonoBehaviour
{
	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ushort _requestedIntensity;

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xD3FFAC", Offset = "0xD3FFAC", VA = "0xD3FFAC")]
	public void onRacketExplode()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xD40190", Offset = "0xD40190", VA = "0xD40190")]
	public void onBallCollision(Ball.BallCollision collisionInfo)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xD402D8", Offset = "0xD402D8", VA = "0xD402D8")]
	public void hapticPulse(float duration, float intensity = 1f, bool diminish = true)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xD40350", Offset = "0xD40350", VA = "0xD40350")]
	public void hapticPulse(ushort intensity, float duration = 0.1f)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xD40370", Offset = "0xD40370", VA = "0xD40370")]
	public void hapticPulseManaged(ushort intensity)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xD40384", Offset = "0xD40384", VA = "0xD40384")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xD403C4", Offset = "0xD403C4", VA = "0xD403C4")]
	public RacketHaptic()
	{
	}
}
[Token(Token = "0x20001F1")]
public class RacketTrigger : MonoBehaviour
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider collider_;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RacketTrigger otherTrigger;

	[Token(Token = "0x170001C9")]
	public bool isTriggered
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xD403CC", Offset = "0xD403CC", VA = "0xD403CC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xD403D4", Offset = "0xD403D4", VA = "0xD403D4")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xD403E0", Offset = "0xD403E0", VA = "0xD403E0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xD40488", Offset = "0xD40488", VA = "0xD40488")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xD40510", Offset = "0xD40510", VA = "0xD40510")]
	public RacketTrigger()
	{
	}
}
[Token(Token = "0x20001F2")]
public class RacketVersion
{
	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string major;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minor;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int update;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool dev;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool demo;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool china;

	[Token(Token = "0x4000D72")]
	public const string devPostfix = "[DEV]";

	[Token(Token = "0x4000D73")]
	public const string demoPostfix = "[DEMO]";

	[Token(Token = "0x4000D74")]
	public const string chinaPostfix = "[CHINA]";

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xD40518", Offset = "0xD40518", VA = "0xD40518")]
	public RacketVersion(string versionStr)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xD408B0", Offset = "0xD408B0", VA = "0xD408B0", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xD40AF4", Offset = "0xD40AF4", VA = "0xD40AF4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xD40C24", Offset = "0xD40C24", VA = "0xD40C24", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xD40B84", Offset = "0xD40B84", VA = "0xD40B84")]
	public static bool operator ==(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xD40C80", Offset = "0xD40C80", VA = "0xD40C80")]
	public static bool operator !=(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xD40CBC", Offset = "0xD40CBC", VA = "0xD40CBC")]
	public static bool operator <(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xD40CD0", Offset = "0xD40CD0", VA = "0xD40CD0")]
	public static bool operator >(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xD40CE8", Offset = "0xD40CE8", VA = "0xD40CE8")]
	public static bool operator <=(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xD40D00", Offset = "0xD40D00", VA = "0xD40D00")]
	public static bool operator >=(RacketVersion version1, RacketVersion version2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xD40BB0", Offset = "0xD40BB0", VA = "0xD40BB0")]
	public static int compare(RacketVersion version1, RacketVersion version2)
	{
		return default(int);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xD40D18", Offset = "0xD40D18", VA = "0xD40D18")]
	private static int compareMajors(string major1, string major2)
	{
		return default(int);
	}
}
[Token(Token = "0x20001F3")]
public class Ripple
{
	[Token(Token = "0x20001F4")]
	private class DistanceComparer : IComparer
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _originPoint;

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xD424E4", Offset = "0xD424E4", VA = "0xD424E4")]
		public DistanceComparer(Vector3 originPoint)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xD425D8", Offset = "0xD425D8", VA = "0xD425D8", Slot = "4")]
		public int Compare(object x, object y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000D75")]
	private const int RIPPLE_BANK_SIZE = 32;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<Ripple> _freeRipples;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Ripple> _usedRipples;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ShotInfo _shot;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SyncHexHits.HexHitInfo _originHitInfo;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _wreckingBallRipple;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _charged;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _remainingCharges;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _originBrickWasExplodable;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Brick> _affectedBricks;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Brick> _curWave;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Brick> _lastWave;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curWaveProgress;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Target> _damagedTargets;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _deallocateWhenEmpty;

	[Token(Token = "0x170001CA")]
	public uint ShotIndex
	{
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xD41450", Offset = "0xD41450", VA = "0xD41450")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170001CB")]
	public bool IsWreckingBallRipple
	{
		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xD41468", Offset = "0xD41468", VA = "0xD41468")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CC")]
	public bool Charged
	{
		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xD41470", Offset = "0xD41470", VA = "0xD41470")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CD")]
	private int remainingCharges
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xD41478", Offset = "0xD41478", VA = "0xD41478")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001CE")]
	public bool remoteRipple
	{
		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xD414C0", Offset = "0xD414C0", VA = "0xD414C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xD40DC8", Offset = "0xD40DC8", VA = "0xD40DC8")]
	public static Ripple AllocateRipple()
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xD412D4", Offset = "0xD412D4", VA = "0xD412D4")]
	static Ripple()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xD410CC", Offset = "0xD410CC", VA = "0xD410CC")]
	public static void DeallocateRipple(Ripple ripple)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xD4117C", Offset = "0xD4117C", VA = "0xD4117C")]
	public Ripple()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xD41560", Offset = "0xD41560", VA = "0xD41560")]
	public void Initialize(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, PowerupType powerup)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xD41B00", Offset = "0xD41B00", VA = "0xD41B00")]
	public void Initialize(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, int numCharges)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xD41680", Offset = "0xD41680", VA = "0xD41680")]
	private void _InternalInit(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, int numCharges)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xD41B70", Offset = "0xD41B70", VA = "0xD41B70")]
	public int GetAffectedBrickCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xD41950", Offset = "0xD41950", VA = "0xD41950")]
	private void createFirstWave()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xD41EE4", Offset = "0xD41EE4", VA = "0xD41EE4")]
	private void consumeDamage()
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xD41C00", Offset = "0xD41C00", VA = "0xD41C00")]
	private void createGlow(ref SyncHexHits.HexHitInfo newHitInfo)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xD41F10", Offset = "0xD41F10", VA = "0xD41F10")]
	public void onGlowPropagate()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xD42380", Offset = "0xD42380", VA = "0xD42380")]
	public void RemoveBrick(Brick b)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0xD42434", Offset = "0xD42434", VA = "0xD42434")]
	public void AddBrick(Brick b)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0xD41F98", Offset = "0xD41F98", VA = "0xD41F98")]
	private void createNextWave()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xD41BB8", Offset = "0xD41BB8", VA = "0xD41BB8")]
	private bool canBrickBeFirstInRipple(Brick brick)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xD42520", Offset = "0xD42520", VA = "0xD42520")]
	private bool canBrickBeNextInRipple(Brick brick)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001F5")]
public class RNXPlatformInitializer : MonoBehaviour
{
	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xD427D4", Offset = "0xD427D4", VA = "0xD427D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xD42930", Offset = "0xD42930", VA = "0xD42930")]
	public RNXPlatformInitializer()
	{
	}
}
[Token(Token = "0x20001F6")]
public class Room : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class ObjectLocations
	{
		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform floor;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform ceiling;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] gutters;

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xD43848", Offset = "0xD43848", VA = "0xD43848")]
		public ObjectLocations()
		{
		}
	}

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Room inst;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Vector3 center;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Brick> _bricks;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HexTile brickHexTile0;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HexTile[] _brickHexTiles;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] _roomAmbientSoundLocations;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light[] _roomAnimatedLights;

	[NonSerialized]
	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float[] _roomAnimatedLightsDefaultIntensity;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] _roomBaseLights;

	[NonSerialized]
	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] _roomBaseLightsDefaultIntensity;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ObjectLocations objectLocations;

	[Token(Token = "0x4000D90")]
	public const int NUM_ROWS = 3;

	[Token(Token = "0x4000D91")]
	public const int NUM_COLUMNS = 32;

	[Token(Token = "0x4000D92")]
	public const int stripWidth = 2;

	[Token(Token = "0x4000D93")]
	public const int quarterWidth = 8;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] _roomObjectsWithoutBackground;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshRenderer _ceilingRefractionMesh;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private PullRail[] _pullRails;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, HexTile> _tilesByCoord;

	[Token(Token = "0x170001CF")]
	public List<Brick> bricks
	{
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xD42938", Offset = "0xD42938", VA = "0xD42938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xD42940", Offset = "0xD42940", VA = "0xD42940")]
	public void Select()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xD42B08", Offset = "0xD42B08", VA = "0xD42B08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xD42B70", Offset = "0xD42B70", VA = "0xD42B70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xD42BD4", Offset = "0xD42BD4", VA = "0xD42BD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xD434DC", Offset = "0xD434DC", VA = "0xD434DC")]
	public void PlayRoomAmbientSound(AudioManager.SoundEffect sfx, float delay = 0f)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xD435B4", Offset = "0xD435B4", VA = "0xD435B4")]
	public void ActivateRoomWithoutBackground()
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xD43618", Offset = "0xD43618", VA = "0xD43618")]
	public HexTile getHexTile(IntVector2 coords)
	{
		return null;
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xD436B8", Offset = "0xD436B8", VA = "0xD436B8")]
	public static IntVector2 xShiftedCoords(IntVector2 coords, int xShift)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xD436F8", Offset = "0xD436F8", VA = "0xD436F8")]
	public void activatePullRails(bool bActive)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xD4376C", Offset = "0xD4376C", VA = "0xD4376C")]
	public Room()
	{
	}
}
[Token(Token = "0x20001F8")]
[ExecuteInEditMode]
public class RoomInitializer : MonoBehaviour
{
	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Bricks")]
	public Material brickSurfaceMaterial;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material brickReflectionMaterial;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material brickGlowMaterial;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material brickHighlightMaterial;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Wall")]
	public Material frameMaterial;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Ceiling")]
	public Material ceilingMaterial;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] ceilingPrefabs;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Floor")]
	public Material floorMaterial;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] floorPrefabs;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Room _room;

	[Token(Token = "0x170001D0")]
	private Room room
	{
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xD43850", Offset = "0xD43850", VA = "0xD43850")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xD438F8", Offset = "0xD438F8", VA = "0xD438F8")]
	private void initObject(GameObject obj, [Optional] Material mat, bool isStatic = false)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xD43A20", Offset = "0xD43A20", VA = "0xD43A20")]
	private void initObject(Transform t, [Optional] Material mat, bool isStatic = false)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xD43AC4", Offset = "0xD43AC4", VA = "0xD43AC4")]
	private void initCeiling(Transform ceiling)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xD43D60", Offset = "0xD43D60", VA = "0xD43D60")]
	private void initBrick(Transform brickCollider)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xD440C8", Offset = "0xD440C8", VA = "0xD440C8")]
	private void initWall(Transform wall)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xD44498", Offset = "0xD44498", VA = "0xD44498")]
	private void initFloor(Transform floor)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xD446D0", Offset = "0xD446D0", VA = "0xD446D0")]
	public void initHexTiles()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xD450FC", Offset = "0xD450FC", VA = "0xD450FC")]
	public void renumHexTiles()
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xD45250", Offset = "0xD45250", VA = "0xD45250")]
	public void initHexTileCoordsNew()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xD45564", Offset = "0xD45564", VA = "0xD45564")]
	public void initHexTileCoords()
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xD45984", Offset = "0xD45984", VA = "0xD45984")]
	private static HexTile nextBottomTileToTheRight(HexTile hexTile)
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xD456F4", Offset = "0xD456F4", VA = "0xD456F4")]
	private void findTile0()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xD45A20", Offset = "0xD45A20", VA = "0xD45A20")]
	public void init()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xD45B5C", Offset = "0xD45B5C", VA = "0xD45B5C")]
	private void CreateLane(Transform root, Vector3[] arrKeys)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xD45DFC", Offset = "0xD45DFC", VA = "0xD45DFC")]
	private void TransformLaneArray(ref Vector3[] laneArray)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xD45ED0", Offset = "0xD45ED0", VA = "0xD45ED0")]
	public void initLanes()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xD46914", Offset = "0xD46914", VA = "0xD46914")]
	public void removeShadowsFromAllRenderers()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xD46AC4", Offset = "0xD46AC4", VA = "0xD46AC4")]
	public RoomInitializer()
	{
	}
}
[Token(Token = "0x20001F9")]
public class SceneStarter : MonoBehaviour
{
	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneStarter <>4__this;

		[Token(Token = "0x170001D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xD46F84", Offset = "0xD46F84", VA = "0xD46F84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xD46FCC", Offset = "0xD46FCC", VA = "0xD46FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xD46B40", Offset = "0xD46B40", VA = "0xD46B40")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xD46DF4", Offset = "0xD46DF4", VA = "0xD46DF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xD46DF8", Offset = "0xD46DF8", VA = "0xD46DF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xD46F8C", Offset = "0xD46F8C", VA = "0xD46F8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StartRoom startRoomPrefab;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform container;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float delay;

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xD46ACC", Offset = "0xD46ACC", VA = "0xD46ACC")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xD46B68", Offset = "0xD46B68", VA = "0xD46B68")]
	private void init()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xD46BF4", Offset = "0xD46BF4", VA = "0xD46BF4")]
	private void requestPermissionToRecordAudio()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xD46D14", Offset = "0xD46D14", VA = "0xD46D14")]
	private void createStartRoom()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xD46DEC", Offset = "0xD46DEC", VA = "0xD46DEC")]
	public SceneStarter()
	{
	}
}
[Token(Token = "0x20001FC")]
public class ShowDebugMode : MonoBehaviour
{
	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xD47160", Offset = "0xD47160", VA = "0xD47160")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xD471FC", Offset = "0xD471FC", VA = "0xD471FC")]
	public ShowDebugMode()
	{
	}
}
[Token(Token = "0x20001FD")]
public class ShowNumBricksLeft : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class Highlight
	{
		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speed;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float epsilon;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xD478D8", Offset = "0xD478D8", VA = "0xD478D8")]
		public Highlight()
		{
		}
	}

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Highlight highlight;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeout;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Text _text;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image _image;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _moving;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _highlighted;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _highlightTime;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _desiredAlpha;

	[Token(Token = "0x170001D3")]
	public int numBricksLeft
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xD47204", Offset = "0xD47204", VA = "0xD47204")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xD4720C", Offset = "0xD4720C", VA = "0xD4720C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170001D4")]
	private float alpha
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xD47214", Offset = "0xD47214", VA = "0xD47214")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xD47240", Offset = "0xD47240", VA = "0xD47240")]
		set
		{
		}
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xD47354", Offset = "0xD47354", VA = "0xD47354")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xD47434", Offset = "0xD47434", VA = "0xD47434")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xD475E0", Offset = "0xD475E0", VA = "0xD475E0")]
	public void onExplode()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xD47804", Offset = "0xD47804", VA = "0xD47804")]
	private void selfDestruct()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xD47870", Offset = "0xD47870", VA = "0xD47870")]
	public ShowNumBricksLeft()
	{
	}
}
[Token(Token = "0x20001FF")]
public static class SuperSampling
{
	[Token(Token = "0x2000200")]
	public enum Mode
	{
		[Token(Token = "0x4000DBC")]
		x0_7,
		[Token(Token = "0x4000DBD")]
		x1_0,
		[Token(Token = "0x4000DBE")]
		x1_2,
		[Token(Token = "0x4000DBF")]
		x1_6
	}

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<Mode, float> renderScales;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xD478F4", Offset = "0xD478F4", VA = "0xD478F4")]
	private static float modeToRenderScale(Mode mode)
	{
		return default(float);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xD47A54", Offset = "0xD47A54", VA = "0xD47A54")]
	private static Mode renderScaleToMode(float renderScale)
	{
		return default(Mode);
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xD47BF8", Offset = "0xD47BF8", VA = "0xD47BF8")]
	public static void setMode(Mode mode, bool saveChange = true)
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xD47F40", Offset = "0xD47F40", VA = "0xD47F40")]
	public static Mode getMode()
	{
		return default(Mode);
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xD47C60", Offset = "0xD47C60", VA = "0xD47C60")]
	public static void setRenderScale(float renderScale, bool saveChange = true)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xD47F94", Offset = "0xD47F94", VA = "0xD47F94")]
	public static float getRenderScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xD48038", Offset = "0xD48038", VA = "0xD48038")]
	public static void load()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xD47F9C", Offset = "0xD47F9C", VA = "0xD47F9C")]
	public static void save()
	{
	}
}
[Token(Token = "0x2000201")]
public class TextWriterBetter
{
	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FileStream _fs;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xD3B144", Offset = "0xD3B144", VA = "0xD3B144")]
	public TextWriterBetter(string path)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xD3B1E4", Offset = "0xD3B1E4", VA = "0xD3B1E4")]
	public void Write(string str)
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xD3B180", Offset = "0xD3B180", VA = "0xD3B180")]
	public void WriteLine(string str)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xD3B39C", Offset = "0xD3B39C", VA = "0xD3B39C")]
	public void close()
	{
	}
}
[Token(Token = "0x2000202")]
public class Triggers : MonoBehaviour
{
	[Token(Token = "0x2000203")]
	public delegate void EventHandler();

	[Token(Token = "0x2000204")]
	private struct Pulse
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float duration;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float timer;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float interval;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float intensity;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool diminish;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _lastPulseTime;

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xD48570", Offset = "0xD48570", VA = "0xD48570")]
		public void Init(float duration, float interval, float intensity, bool diminish)
		{
		}
	}

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _pulseInterval;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Pulse> pulses;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Triggers _inst;

	[Token(Token = "0x170001D5")]
	public static Triggers inst
	{
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xD48274", Offset = "0xD48274", VA = "0xD48274")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xD482BC", Offset = "0xD482BC", VA = "0xD482BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xD48374", Offset = "0xD48374", VA = "0xD48374")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xD484AC", Offset = "0xD484AC", VA = "0xD484AC")]
	private void updatePulse(ref Pulse pulse)
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xD40058", Offset = "0xD40058", VA = "0xD40058")]
	public void hapticPulse(float duration, float intensity, bool diminish, float interval = 0.025f)
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xD48590", Offset = "0xD48590", VA = "0xD48590")]
	public Triggers()
	{
	}
}
[Token(Token = "0x2000205")]
public class LeaderboardManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000206")]
	public struct PreloadedLeaderboard
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LeaderboardSortMethod sortMethod;
	}

	[Token(Token = "0x2000207")]
	public class Entry
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string userID;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string userID2;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isMe;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int globalRank;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int score;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string name;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string name2;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string extraData;

		[Token(Token = "0x170001D6")]
		public bool hasUser2
		{
			[Token(Token = "0x6000A89")]
			[Address(RVA = "0xD49ECC", Offset = "0xD49ECC", VA = "0xD49ECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xD49A64", Offset = "0xD49A64", VA = "0xD49A64")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x2000208")]
	public class LeaderboardContainer
	{
		[Token(Token = "0x2000209")]
		public delegate bool NameForRank(int rank, int maxRank);

		[Token(Token = "0x200020A")]
		public static class NameForRankCallbacks
		{
			[Token(Token = "0x6000A90")]
			[Address(RVA = "0xD4A148", Offset = "0xD4A148", VA = "0xD4A148")]
			public static bool All(int rank, int maxRank)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xD4A150", Offset = "0xD4A150", VA = "0xD4A150")]
			public static bool None(int rank, int maxRank)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xD4A158", Offset = "0xD4A158", VA = "0xD4A158")]
			public static bool TopTen(int rank, int maxRank)
			{
				return default(bool);
			}

			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xD4A164", Offset = "0xD4A164", VA = "0xD4A164")]
			public static bool TopTenAndLastRank(int rank, int maxRank)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RnxPlatform.Leaderboard.Type type;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardSortMethod sortMethod;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool leaderboardLoaded;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Entry[] lastAcquiredLeaderboardData;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool haveFinalResults;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool dataUpdated;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool haveNames;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool uploadScoreSucceeded;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int myCurrentValue;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int myCurrentRank;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int myPreviousValue;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int myPreviousRank;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Entry myEntry;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NameForRank nameForRankCallback;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xD48E60", Offset = "0xD48E60", VA = "0xD48E60")]
		public LeaderboardContainer(RnxPlatform.Leaderboard.Type type, string id, LeaderboardSortMethod sortMethod)
		{
		}
	}

	[Token(Token = "0x200020C")]
	[CompilerGenerated]
	private sealed class <LoadLeaderboard>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardContainer lcontainer;

		[Token(Token = "0x170001D7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xD4A51C", Offset = "0xD4A51C", VA = "0xD4A51C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xD4A564", Offset = "0xD4A564", VA = "0xD4A564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xD48EEC", Offset = "0xD48EEC", VA = "0xD48EEC")]
		[DebuggerHidden]
		public <LoadLeaderboard>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xD4A348", Offset = "0xD4A348", VA = "0xD4A348", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xD4A34C", Offset = "0xD4A34C", VA = "0xD4A34C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xD4A524", Offset = "0xD4A524", VA = "0xD4A524", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200020D")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _haveResult;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardContainer lcontainer;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xD4A56C", Offset = "0xD4A56C", VA = "0xD4A56C")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xD4A574", Offset = "0xD4A574", VA = "0xD4A574")]
		internal void <LoadLeaderboardAttempt>b__0(bool success)
		{
		}
	}

	[Token(Token = "0x200020E")]
	[CompilerGenerated]
	private sealed class <LoadLeaderboardAttempt>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardManager <>4__this;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LeaderboardContainer lcontainer;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass13_0 <>8__1;

		[Token(Token = "0x170001D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xD4A974", Offset = "0xD4A974", VA = "0xD4A974", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AA3")]
			[Address(RVA = "0xD4A9BC", Offset = "0xD4A9BC", VA = "0xD4A9BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xD48FA4", Offset = "0xD48FA4", VA = "0xD48FA4")]
		[DebuggerHidden]
		public <LoadLeaderboardAttempt>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xD4A62C", Offset = "0xD4A62C", VA = "0xD4A62C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xD4A630", Offset = "0xD4A630", VA = "0xD4A630", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xD4A97C", Offset = "0xD4A97C", VA = "0xD4A97C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaderboardManager inst;

	[Token(Token = "0x4000DCB")]
	public const string noNameYet = "---";

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, LeaderboardContainer> _leaderboards;

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xD486B0", Offset = "0xD486B0", VA = "0xD486B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xD48708", Offset = "0xD48708", VA = "0xD48708")]
	public LeaderboardContainer GetLeaderboard(string leaderboardId)
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xD4879C", Offset = "0xD4879C", VA = "0xD4879C")]
	public void ClearLeaderboardCache(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xD48888", Offset = "0xD48888", VA = "0xD48888")]
	public void PostNormalLeaderboardValue(string leaderboardId, int value, LeaderboardUpdateMethod updateMethod, [Optional] string extraData, [Optional] Action postCompleteAction)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xD488A0", Offset = "0xD488A0", VA = "0xD488A0")]
	public void PostLeaderboardValue(string leaderboardId, string rnxId2, int value, LeaderboardUpdateMethod updateMethod, [Optional] string extraData, [Optional] Action postCompleteAction)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xD48CDC", Offset = "0xD48CDC", VA = "0xD48CDC")]
	public LeaderboardContainer LoadOrCreateLeaderboard(RnxPlatform.Leaderboard.Type leadeboardType, string leaderboardId, LeaderboardSortMethod sortMethod)
	{
		return null;
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xD48DD0", Offset = "0xD48DD0", VA = "0xD48DD0")]
	[IteratorStateMachine(typeof(<LoadLeaderboard>d__12))]
	private IEnumerator LoadLeaderboard(LeaderboardContainer lcontainer)
	{
		return null;
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xD48F14", Offset = "0xD48F14", VA = "0xD48F14")]
	[IteratorStateMachine(typeof(<LoadLeaderboardAttempt>d__13))]
	private IEnumerator LoadLeaderboardAttempt(LeaderboardContainer lcontainer)
	{
		return null;
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xD48FCC", Offset = "0xD48FCC", VA = "0xD48FCC")]
	private void onLeaderboardCreated(LeaderboardContainer curLB)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xD490D0", Offset = "0xD490D0", VA = "0xD490D0")]
	public void DownloadNormalLeaderboardResults(string leaderboardId, int startRank, int count, [Optional] LeaderboardContainer.NameForRank nameForRank)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xD490E8", Offset = "0xD490E8", VA = "0xD490E8")]
	public void DownloadLeaderboardResults(string leaderboardId, string rnxId2, int startRank, int count, [Optional] LeaderboardContainer.NameForRank nameForRank, bool fetchNames = true)
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xD4948C", Offset = "0xD4948C", VA = "0xD4948C")]
	private void onDownloadResults(string leaderboardId, string rnxId2, List<RnxPlatform.LeaderboardEntry> entries, bool fetchNames)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xD49A6C", Offset = "0xD49A6C", VA = "0xD49A6C")]
	private static string min(string rnxId1, string rnxId2)
	{
		return null;
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xD49A98", Offset = "0xD49A98", VA = "0xD49A98")]
	private static string max(string rnxId1, string rnxId2)
	{
		return null;
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xD49AC4", Offset = "0xD49AC4", VA = "0xD49AC4")]
	private void fetchMissingNames(LeaderboardContainer curLB)
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xD49EEC", Offset = "0xD49EEC", VA = "0xD49EEC")]
	public void DownloadMyResult(string leaderboardId)
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xD49F04", Offset = "0xD49F04", VA = "0xD49F04")]
	public void DownloadOurResult(string leaderboardId, string rnxId2)
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xD49F18", Offset = "0xD49F18", VA = "0xD49F18")]
	public LeaderboardManager()
	{
	}
}
[Token(Token = "0x2000211")]
public class LeaderboardsLoader : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LeaderboardsLoader <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xD4BB0C", Offset = "0xD4BB0C", VA = "0xD4BB0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xD4BB54", Offset = "0xD4BB54", VA = "0xD4BB54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xD4B220", Offset = "0xD4B220", VA = "0xD4B220")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xD4B8C4", Offset = "0xD4B8C4", VA = "0xD4B8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xD4B8C8", Offset = "0xD4B8C8", VA = "0xD4B8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xD4BB14", Offset = "0xD4BB14", VA = "0xD4BB14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaderboardsLoader inst;

	[Token(Token = "0x170001DB")]
	private LeaderboardSettings config
	{
		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xD4B104", Offset = "0xD4B104", VA = "0xD4B104")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xD4B154", Offset = "0xD4B154", VA = "0xD4B154", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xD4B1AC", Offset = "0xD4B1AC", VA = "0xD4B1AC")]
	[IteratorStateMachine(typeof(<Start>d__4))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xD4B248", Offset = "0xD4B248", VA = "0xD4B248")]
	public LeaderboardManager.LeaderboardContainer GetArcade(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xD4B368", Offset = "0xD4B368", VA = "0xD4B368")]
	public LeaderboardManager.LeaderboardContainer GetSolo(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xD4B3F4", Offset = "0xD4B3F4", VA = "0xD4B3F4")]
	public LeaderboardManager.LeaderboardContainer GetSoloMusicChallenge(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xD4B480", Offset = "0xD4B480", VA = "0xD4B480")]
	public LeaderboardManager.LeaderboardContainer GetSoloCustomSet(CustomSet customSet)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xD4B50C", Offset = "0xD4B50C", VA = "0xD4B50C")]
	public LeaderboardManager.LeaderboardContainer GetVersusCurrentSeason()
	{
		return null;
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xD4B590", Offset = "0xD4B590", VA = "0xD4B590")]
	public LeaderboardManager.LeaderboardContainer GetVersus(int seasonIndex)
	{
		return null;
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0xD4B63C", Offset = "0xD4B63C", VA = "0xD4B63C")]
	public LeaderboardManager.LeaderboardContainer GetCoOp()
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xD4B644", Offset = "0xD4B644", VA = "0xD4B644")]
	private LeaderboardManager.LeaderboardContainer GetCoOp(ArcadeType arcadeType)
	{
		return null;
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xD4B754", Offset = "0xD4B754", VA = "0xD4B754")]
	public LeaderboardsLoader()
	{
	}
}
[Token(Token = "0x2000214")]
public class OculusLeaderboard : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OculusLeaderboard inst;

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xD4BB5C", Offset = "0xD4BB5C", VA = "0xD4BB5C", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xD4BBB4", Offset = "0xD4BBB4", VA = "0xD4BBB4")]
	public void UpdateUserEntry(string leaderboardName, int value, LeaderboardEntryData entryData, LeaderboardUpdateMethod updateMethod, Action<bool, RnxPlatform.LeaderboardEntry, RnxPlatform.LeaderboardEntry> onResponse)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xD4BBB8", Offset = "0xD4BBB8", VA = "0xD4BBB8")]
	public OculusLeaderboard()
	{
	}
}
[Token(Token = "0x2000215")]
public class TheLeaderboards : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TheLeaderboards inst;

	[Token(Token = "0x170001DE")]
	private bool shouldUpdateOculus
	{
		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xD4BBC0", Offset = "0xD4BBC0", VA = "0xD4BBC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xD4BCBC", Offset = "0xD4BCBC", VA = "0xD4BCBC", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xD4A8E4", Offset = "0xD4A8E4", VA = "0xD4A8E4")]
	public void FindOrCreateLeaderboard(RnxPlatform.Leaderboard.Type leaderboardType, string leaderboardName, LeaderboardSortMethod sortOrder, Action<bool> onResponse)
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xD48C20", Offset = "0xD48C20", VA = "0xD48C20")]
	public void UpdateUserEntry(RnxPlatform.Leaderboard.Type leaderboardType, string leaderboardName, int value, LeaderboardEntryData entryData, string rnxId, string rnxId2, LeaderboardUpdateMethod updateMethod, Action<bool, RnxPlatform.LeaderboardEntry, RnxPlatform.LeaderboardEntry> onResponse)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xD493DC", Offset = "0xD493DC", VA = "0xD493DC")]
	public void GetEntries(RnxPlatform.Leaderboard.Type leaderboardType, string leaderboardName, string rnxId, string rnxId2, int start, int count, Action<bool, List<RnxPlatform.LeaderboardEntry>> onResponse)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xD4BD14", Offset = "0xD4BD14", VA = "0xD4BD14")]
	private string IMPORT_AWS_CHINA__WrapLeaderboardName(string leaderboardName)
	{
		return null;
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xD4BDA4", Offset = "0xD4BDA4", VA = "0xD4BDA4")]
	public TheLeaderboards()
	{
	}
}
[Serializable]
[Token(Token = "0x2000216")]
public enum BrushType
{
	[Token(Token = "0x4000E05")]
	None,
	[Token(Token = "0x4000E06")]
	Eraser,
	[Token(Token = "0x4000E07")]
	Booster,
	[Token(Token = "0x4000E08")]
	Downer,
	[Token(Token = "0x4000E09")]
	Slider,
	[Token(Token = "0x4000E0A")]
	Portal,
	[Token(Token = "0x4000E0B")]
	StaticTarget,
	[Token(Token = "0x4000E0C")]
	HealingTarget,
	[Token(Token = "0x4000E0D")]
	Forcefield,
	[Token(Token = "0x4000E0E")]
	Snake,
	[Token(Token = "0x4000E0F")]
	Bumper,
	[Token(Token = "0x4000E10")]
	Stopper,
	[Token(Token = "0x4000E11")]
	Blaster,
	[Token(Token = "0x4000E12")]
	Intrude,
	[Token(Token = "0x4000E13")]
	Invalid
}
[Token(Token = "0x2000217")]
public class LevelEditorAlignMarkerWithWaveShift : MonoBehaviour
{
	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xD4BDAC", Offset = "0xD4BDAC", VA = "0xD4BDAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xD4BE3C", Offset = "0xD4BE3C", VA = "0xD4BE3C")]
	public LevelEditorAlignMarkerWithWaveShift()
	{
	}
}
[Token(Token = "0x2000218")]
public static class LevelEditorAudio
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly float _PITCH_FACTOR;

	[Token(Token = "0x170001DF")]
	private static Vector3 _UiHitPoint
	{
		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xD4BE44", Offset = "0xD4BE44", VA = "0xD4BE44")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001E0")]
	private static Vector3 _HighlitBrick
	{
		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xD4BEC8", Offset = "0xD4BEC8", VA = "0xD4BEC8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001E1")]
	private static AudioManager _AM
	{
		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xD4BF30", Offset = "0xD4BF30", VA = "0xD4BF30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xD4BF78", Offset = "0xD4BF78", VA = "0xD4BF78")]
	public static void PlayUIOffsetSound()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xD4C070", Offset = "0xD4C070", VA = "0xD4C070")]
	public static void PlayUIDeleteSound()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xD4C168", Offset = "0xD4C168", VA = "0xD4C168")]
	public static void PlayUINewSound()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xD4C260", Offset = "0xD4C260", VA = "0xD4C260")]
	public static void PlayUIAddPowerUp()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xD4C358", Offset = "0xD4C358", VA = "0xD4C358")]
	public static void PlayUIPublishSound(bool success)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xD4C470", Offset = "0xD4C470", VA = "0xD4C470")]
	public static void PlayDefaultExtrutionSound(HexTrudeManager.WallType wallType)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xD4C58C", Offset = "0xD4C58C", VA = "0xD4C58C")]
	public static void PlayBrickExtrutionSound(HexTrudeManager.WallType wallType)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xD4CB8C", Offset = "0xD4CB8C", VA = "0xD4CB8C")]
	public static void PlayBrickSelectionSound()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xD4CC84", Offset = "0xD4CC84", VA = "0xD4CC84")]
	public static void PlayBrickHighlightSound()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xD4CD7C", Offset = "0xD4CD7C", VA = "0xD4CD7C")]
	public static void PlayBrickDeselectionSound()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xD4CE44", Offset = "0xD4CE44", VA = "0xD4CE44")]
	public static void PlayShield(Target target, bool added)
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xD4CF70", Offset = "0xD4CF70", VA = "0xD4CF70")]
	private static float HpPitch(int hp)
	{
		return default(float);
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xD4CFB8", Offset = "0xD4CFB8", VA = "0xD4CFB8")]
	public static void PlayHp(int hp)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xD4D12C", Offset = "0xD4D12C", VA = "0xD4D12C")]
	public static void PlayInvalidSelection()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xD4D224", Offset = "0xD4D224", VA = "0xD4D224")]
	public static void PlayPrimitiveBrush(BrushType brush)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xD4D47C", Offset = "0xD4D47C", VA = "0xD4D47C")]
	public static void PlayComplexBrush(BrushType brush)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xD4C78C", Offset = "0xD4C78C", VA = "0xD4C78C")]
	private static Vector3 GetBricksCenter()
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000219")]
public class LevelEditorBrickSelection
{
	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool highlit;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool targetHighlit;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool selected;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool available;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HexTile.HexDirection availableDir;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _renderer;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SmoothFloat _selectedValue;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothFloat _availableValue;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _HighLitID;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _SelectedID;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _AvailableID;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _AvailablityArrowRotateID;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xD4D678", Offset = "0xD4D678", VA = "0xD4D678")]
	public LevelEditorBrickSelection(Brick brick)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xD4D894", Offset = "0xD4D894", VA = "0xD4D894")]
	public void Update(float dt, float smoothTime = 0.2f)
	{
	}
}
[Token(Token = "0x200021A")]
public static class LevelEditorHelpers
{
	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xD4DAD4", Offset = "0xD4DAD4", VA = "0xD4DAD4")]
	public static bool WaveIsValid(WaveHandcrafted wave)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xD4DC28", Offset = "0xD4DC28", VA = "0xD4DC28")]
	public static bool IsGroupTarget(BrickType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xD4DC48", Offset = "0xD4DC48", VA = "0xD4DC48")]
	public static bool IsStaticTarget(BrickType brickType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xD4DC64", Offset = "0xD4DC64", VA = "0xD4DC64")]
	public static float StepBetween(float value, float min, float max, float steps)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xD4DCA0", Offset = "0xD4DCA0", VA = "0xD4DCA0")]
	public static bool IsSnakeType(Brick t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xD4DCC0", Offset = "0xD4DCC0", VA = "0xD4DCC0")]
	public static bool IsSnakeType(BrickType type)
	{
		return default(bool);
	}
}
[Token(Token = "0x200021C")]
public class LevelEditorManager : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x200021D")]
	private struct CustomSetMeta
	{
		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool published;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int publicNumber;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float personalBest;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int bestProgress;

		[Token(Token = "0x170001F8")]
		public PlayerProfileData.Solo.Set.Result bestResult
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xD5BB90", Offset = "0xD5BB90", VA = "0xD5BB90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xD5BBFC", Offset = "0xD5BBFC", VA = "0xD5BBFC")]
			set
			{
			}
		}
	}

	[Token(Token = "0x200021E")]
	public enum SetsMode
	{
		[Token(Token = "0x4000E62")]
		Custom,
		[Token(Token = "0x4000E63")]
		Solo,
		[Token(Token = "0x4000E64")]
		Multiplayer,
		[Token(Token = "0x4000E65")]
		MonthlyChallenge
	}

	[Token(Token = "0x200021F")]
	public enum LevelEditorMode
	{
		[Token(Token = "0x4000E67")]
		Disabled,
		[Token(Token = "0x4000E68")]
		Editing,
		[Token(Token = "0x4000E69")]
		Playing,
		[Token(Token = "0x4000E6A")]
		Browsing
	}

	[Token(Token = "0x2000220")]
	public class WaveChangeEvent : UnityEvent<WaveHandcrafted, int>
	{
		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0xD5BC1C", Offset = "0xD5BC1C", VA = "0xD5BC1C")]
		public WaveChangeEvent()
		{
		}
	}

	[Token(Token = "0x200022F")]
	[CompilerGenerated]
	private sealed class <ShowWelcomeWhenArenaIsReady>d__213 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xD5D440", Offset = "0xD5D440", VA = "0xD5D440", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xD5D488", Offset = "0xD5D488", VA = "0xD5D488", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xD5D318", Offset = "0xD5D318", VA = "0xD5D318")]
		[DebuggerHidden]
		public <ShowWelcomeWhenArenaIsReady>d__213(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xD5D340", Offset = "0xD5D340", VA = "0xD5D340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xD5D344", Offset = "0xD5D344", VA = "0xD5D344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xD5D448", Offset = "0xD5D448", VA = "0xD5D448", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000230")]
	[CompilerGenerated]
	private sealed class <ShowUtilityWhenArenaIsReady>d__214 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelEditorManager <>4__this;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xD5D5CC", Offset = "0xD5D5CC", VA = "0xD5D5CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xD5D614", Offset = "0xD5D614", VA = "0xD5D614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xD5D490", Offset = "0xD5D490", VA = "0xD5D490")]
		[DebuggerHidden]
		public <ShowUtilityWhenArenaIsReady>d__214(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xD5D4B8", Offset = "0xD5D4B8", VA = "0xD5D4B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xD5D4BC", Offset = "0xD5D4BC", VA = "0xD5D4BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xD5D5D4", Offset = "0xD5D5D4", VA = "0xD5D5D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000231")]
	[CompilerGenerated]
	private sealed class <ShowBrowsingWhenArenaIsReady>d__215 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xD5D754", Offset = "0xD5D754", VA = "0xD5D754", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xD5D79C", Offset = "0xD5D79C", VA = "0xD5D79C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xD5D61C", Offset = "0xD5D61C", VA = "0xD5D61C")]
		[DebuggerHidden]
		public <ShowBrowsingWhenArenaIsReady>d__215(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xD5D644", Offset = "0xD5D644", VA = "0xD5D644", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xD5D648", Offset = "0xD5D648", VA = "0xD5D648", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xD5D75C", Offset = "0xD5D75C", VA = "0xD5D75C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly HashSet<int> _usedIdes;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<IntVector2, RuntimeBrick> _brickToRuntimeBrick;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _setsFolder;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SetsMode _lastSetsMode;

	[Token(Token = "0x4000E28")]
	private const string COPY_EXTENTION = " - Copy";

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _lastMatchBeatsHighScore;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool _reloadTargets;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool _reloadHextrusions;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private bool _reloadHextrusionsFast;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _reloadHard;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool _needToSave;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	private bool _skipAutoSave;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	private bool _skipUndoState;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _savePending;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _timeSinceLastSave;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float saveTime;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HashSet<Brick> _validSnakeNeighbors;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private HashSet<Target> _selectedSnakes;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Brick> _splitSnakeList;

	[Token(Token = "0x4000E38")]
	private const float DOUBLE_CLICK_INTERVAL = 0.2f;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HashSet<Brick> _selectedBricks;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Brick _highlitBrick;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Floater _highlitFloater;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Brick _lastClickedBrick;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _lastClickedBrickWasInSelection;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _pointingAtTheEditor;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool _clickWasOnFloater;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private RaycastHit _pointerHit;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _timeSinceLastClick;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool _disableSelectionUntilTriggerReleased;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<WaveHandcrafted> _freeStack;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<WaveHandcrafted> _undoList;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Stack<WaveHandcrafted> _redoStack;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WaveHandcrafted _tempWave;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Transform _undoParent;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorManager inst;

	[Token(Token = "0x4000E49")]
	[Header("IO")]
	public const string DEFAULT_SET_NAME = "New Custom Set";

	[Token(Token = "0x4000E4A")]
	public const int DEFAULT_TARGET_HP = 3;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int maxNumOfSets;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int maxNumOfWaves;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public LocalizedString waveNameFormat;

	[Token(Token = "0x4000E4E")]
	public const SetsMode setsMode = SetsMode.Custom;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[Header("Selection")]
	public BrushType selectedBrushType;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public LayerMask tilesLayerMask;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Undo")]
	public int maxUndoCount;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	[Header("Debug")]
	public bool debugDrawIDs;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[Header("Events")]
	public WaveChangeEvent CurretWaveChanged;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnWaveChanged;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private LevelEditorMode _mode;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WaveSet _currentSet;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _playingFromStart;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaveHandcrafted _currentWave;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _currentWaveIndex;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RuntimeBrick _tempBrick;

	[Token(Token = "0x170001E2")]
	public string SetsFolder
	{
		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xD4FF94", Offset = "0xD4FF94", VA = "0xD4FF94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E3")]
	public string CurrentSetFile
	{
		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xD50070", Offset = "0xD50070", VA = "0xD50070")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xD50078", Offset = "0xD50078", VA = "0xD50078")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public bool LastMatchBeatsHighScore
	{
		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xD50080", Offset = "0xD50080", VA = "0xD50080")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E5")]
	public IEnumerable<Brick> SelectedBricks
	{
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xD55414", Offset = "0xD55414", VA = "0xD55414")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E6")]
	public Brick HighlitBrick
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xD5541C", Offset = "0xD5541C", VA = "0xD5541C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001E7")]
	public bool PointingAtTheEditor
	{
		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xD55424", Offset = "0xD55424", VA = "0xD55424")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E8")]
	public bool HasUndoSteps
	{
		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xD56E18", Offset = "0xD56E18", VA = "0xD56E18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E9")]
	public bool HasRedoSteps
	{
		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xD56E68", Offset = "0xD56E68", VA = "0xD56E68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EA")]
	public string password
	{
		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xD51148", Offset = "0xD51148", VA = "0xD51148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001EB")]
	public LevelEditorMode Mode
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xD57F10", Offset = "0xD57F10", VA = "0xD57F10")]
		get
		{
			return default(LevelEditorMode);
		}
		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xD57F18", Offset = "0xD57F18", VA = "0xD57F18")]
		set
		{
		}
	}

	[Token(Token = "0x170001EC")]
	public static bool InEditorPlayMode
	{
		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xD5838C", Offset = "0xD5838C", VA = "0xD5838C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001ED")]
	public static bool InEditorBrowseMode
	{
		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xD583E8", Offset = "0xD583E8", VA = "0xD583E8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EE")]
	public static bool InEditMode
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xD55E38", Offset = "0xD55E38", VA = "0xD55E38")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001EF")]
	public static bool InEditorArena
	{
		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xD4BC60", Offset = "0xD4BC60", VA = "0xD4BC60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F0")]
	public static bool IsPlayingPublicSet
	{
		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xD58444", Offset = "0xD58444", VA = "0xD58444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F1")]
	public static bool IsPlayingPrivateSet
	{
		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xD584B8", Offset = "0xD584B8", VA = "0xD584B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F2")]
	public WaveSet CurrentSet
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xD5851C", Offset = "0xD5851C", VA = "0xD5851C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xD58524", Offset = "0xD58524", VA = "0xD58524")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public WaveHandcrafted CurrentWave
	{
		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xD585EC", Offset = "0xD585EC", VA = "0xD585EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F4")]
	public bool IsPublicSet
	{
		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xD584A8", Offset = "0xD584A8", VA = "0xD584A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F5")]
	public CustomSet CurrentPublicSetMeta
	{
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xD585F4", Offset = "0xD585F4", VA = "0xD585F4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xD585FC", Offset = "0xD585FC", VA = "0xD585FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170001F6")]
	public bool PlayingFromStart
	{
		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xD5860C", Offset = "0xD5860C", VA = "0xD5860C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001F7")]
	public static int LastEditWaveIndex
	{
		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xD58614", Offset = "0xD58614", VA = "0xD58614")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1400000D")]
	public event UnityAction<WaveSet> SetLoaded
	{
		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xD57DA8", Offset = "0xD57DA8", VA = "0xD57DA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xD57E5C", Offset = "0xD57E5C", VA = "0xD57E5C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xD4DE04", Offset = "0xD4DE04", VA = "0xD4DE04")]
	public int GetFreeGroupId()
	{
		return default(int);
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xD4DFD0", Offset = "0xD4DFD0", VA = "0xD4DFD0")]
	public RuntimeBrick GetRuntimeBrickFromBrick(Brick brick)
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xD4E204", Offset = "0xD4E204", VA = "0xD4E204")]
	private bool AtLeastOneForceField(IEnumerable<Brick> bricks)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xD4E380", Offset = "0xD4E380", VA = "0xD4E380")]
	private void SelectBrushType(BrushType brash)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xD4E388", Offset = "0xD4E388", VA = "0xD4E388")]
	public bool AddHpToHighlightedBrick(int hpToAdd)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xD4E4B4", Offset = "0xD4E4B4", VA = "0xD4E4B4")]
	public int GetHpById(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xD4E4EC", Offset = "0xD4E4EC", VA = "0xD4E4EC")]
	public void RemovePowerup(Floater floater)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xD4E774", Offset = "0xD4E774", VA = "0xD4E774")]
	public void AddPowerUp(PowerupType type = PowerupType.SplashDamage)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xD4E984", Offset = "0xD4E984", VA = "0xD4E984")]
	private bool HasNuke()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xD4EA90", Offset = "0xD4EA90", VA = "0xD4EA90")]
	private void SetSelectedBricksAsType(BrickType brickType)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xD4ED00", Offset = "0xD4ED00", VA = "0xD4ED00")]
	private void ResetBricksIds(IEnumerable<Brick> bricks)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xD4EFE4", Offset = "0xD4EFE4", VA = "0xD4EFE4")]
	private void SetSelectedBricksAsGroupType(BrickType brickType)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xD4F1BC", Offset = "0xD4F1BC", VA = "0xD4F1BC")]
	private void SetSelectedBrickExtrusion(HexTrudeManager.WallType type)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xD4F328", Offset = "0xD4F328", VA = "0xD4F328")]
	private void SetBrickExtrution(Brick brick, HexTrudeManager.WallType type)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xD4F188", Offset = "0xD4F188", VA = "0xD4F188")]
	private RuntimeBrick SetBrickTypeAndId(Brick brick, BrickType type = BrickType.Empty, int id = 0, bool forceField = false)
	{
		return null;
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xD4F398", Offset = "0xD4F398", VA = "0xD4F398")]
	public void SetExtrusion(HexTrudeManager.WallType wallType, bool silent = false)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xD4F448", Offset = "0xD4F448", VA = "0xD4F448")]
	public void SetTimeFactor(float factor)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xD4F4D4", Offset = "0xD4F4D4", VA = "0xD4F4D4")]
	public void ToggleForceFiledForBrick(Target target)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xD4F848", Offset = "0xD4F848", VA = "0xD4F848")]
	private void DrawHighlightedBrick(Brick brick)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xD4FA0C", Offset = "0xD4FA0C", VA = "0xD4FA0C")]
	private void DrawSelectedBricks()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xD4FB64", Offset = "0xD4FB64", VA = "0xD4FB64")]
	private void DrawValidSnakeMoves()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xD4FDD0", Offset = "0xD4FDD0", VA = "0xD4FDD0")]
	private void DrawIDs()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xD50088", Offset = "0xD50088", VA = "0xD50088")]
	public List<WaveSetData> LoadSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xD50438", Offset = "0xD50438", VA = "0xD50438")]
	private string GetSoloSetNameFromID(string id)
	{
		return null;
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xD50588", Offset = "0xD50588", VA = "0xD50588")]
	private List<WaveSetData> LoadSoloSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xD508D0", Offset = "0xD508D0", VA = "0xD508D0")]
	private List<WaveSetData> LoadMultiplayerSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xD50950", Offset = "0xD50950", VA = "0xD50950")]
	private List<WaveSetData> LoadMonthlyChallengeSetsList()
	{
		return null;
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xD509D8", Offset = "0xD509D8", VA = "0xD509D8")]
	private string FixSetName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xD50608", Offset = "0xD50608", VA = "0xD50608")]
	private List<WaveSetData> LoadSetsList(WaveSet[] sets)
	{
		return null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xD50ED0", Offset = "0xD50ED0", VA = "0xD50ED0")]
	private void LoadSet(string setName, Action<WaveSet> done)
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xD511BC", Offset = "0xD511BC", VA = "0xD511BC")]
	private void RecoverMyPublicSetIfMissing(WaveSet set, CustomSet meta)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xD51B4C", Offset = "0xD51B4C", VA = "0xD51B4C")]
	public void PlayPublicSet(DownloadedCrate crate, CustomSet meta)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xD519AC", Offset = "0xD519AC", VA = "0xD519AC")]
	private void SaveSet([Optional] WaveSet set)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xD50B5C", Offset = "0xD50B5C", VA = "0xD50B5C")]
	private void SaveSet(WaveSet set, string fileName)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xD51D10", Offset = "0xD51D10", VA = "0xD51D10")]
	public WaveSet CreateNewSetCrate()
	{
		return null;
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xD514D0", Offset = "0xD514D0", VA = "0xD514D0")]
	private string GenerateNewSetName(string baseName = "New Custom Set", bool useBaseIfUnique = false)
	{
		return null;
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xD50ABC", Offset = "0xD50ABC", VA = "0xD50ABC")]
	private string GetSetFileFromName(string setName)
	{
		return null;
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xD51E90", Offset = "0xD51E90", VA = "0xD51E90")]
	public void DeleteSetCrate(string setName)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xD51EF4", Offset = "0xD51EF4", VA = "0xD51EF4")]
	public WaveSetData DuplicateSetCrate(string setName)
	{
		return default(WaveSetData);
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xD520A8", Offset = "0xD520A8", VA = "0xD520A8")]
	public bool RenameSetCrate(string oldSetName, string newSetName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xD51FB8", Offset = "0xD51FB8", VA = "0xD51FB8")]
	private static string GetSetMetaFile(string setFile)
	{
		return null;
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0xD52708", Offset = "0xD52708", VA = "0xD52708")]
	private static CustomSetMeta GetSetMeta(string metaFile)
	{
		return default(CustomSetMeta);
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0xD52028", Offset = "0xD52028", VA = "0xD52028")]
	private void SaveSetMeta(string metaFile, CustomSetMeta meta)
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0xD51EC0", Offset = "0xD51EC0", VA = "0xD51EC0")]
	public void DeleteSetMetaFile(string setFile)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0xD52690", Offset = "0xD52690", VA = "0xD52690")]
	private void RenameSetMeta(string oldSetFile, string newSetFile)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0xD52778", Offset = "0xD52778", VA = "0xD52778")]
	public bool IsSetPublished(string setFile, out int publicNumber)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0xD51B10", Offset = "0xD51B10", VA = "0xD51B10")]
	private void SavePublicNumber(string setFile, int number)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xD527D4", Offset = "0xD527D4", VA = "0xD527D4")]
	public PlayerProfileData.Solo.Set.Result GetSetPersonalBest(string setFile)
	{
		return null;
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xD52804", Offset = "0xD52804", VA = "0xD52804")]
	public void UpdatePersonalBest(string setFile, PlayerProfileData.Solo.Set.Result result)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xD51CE8", Offset = "0xD51CE8", VA = "0xD51CE8")]
	private void ResetPersonalBest(string setFile)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xD5288C", Offset = "0xD5288C", VA = "0xD5288C")]
	public void DevOnly_DownloadCustomSetToEditor()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xD52ACC", Offset = "0xD52ACC", VA = "0xD52ACC")]
	public void DevOnly_PackageSetFromEditorForMC()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xD52CF4", Offset = "0xD52CF4", VA = "0xD52CF4")]
	public void DevOnly_DecryptCustomSet()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xD53054", Offset = "0xD53054", VA = "0xD53054")]
	private void ReloadTargets()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xD53158", Offset = "0xD53158", VA = "0xD53158")]
	private void ReloadHextrusions()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xD5326C", Offset = "0xD5326C", VA = "0xD5326C")]
	private void ReloadHard()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xD53418", Offset = "0xD53418", VA = "0xD53418")]
	private void SaveIfNeeded(bool now = false)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xD53758", Offset = "0xD53758", VA = "0xD53758")]
	private bool IsValidSnake(IEnumerable<Brick> bricks)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xD53CD0", Offset = "0xD53CD0", VA = "0xD53CD0")]
	private Brick FindSnakeHead(IEnumerable<Brick> bricks)
	{
		return null;
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xD53E20", Offset = "0xD53E20", VA = "0xD53E20")]
	private (Brick, Brick) FindSnakeHeadAndTail(IEnumerable<Brick> bricks)
	{
		return default((Brick, Brick));
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xD53FE0", Offset = "0xD53FE0", VA = "0xD53FE0")]
	private void SetBricksAsSnake(IEnumerable<Brick> bricks)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xD543B0", Offset = "0xD543B0", VA = "0xD543B0")]
	private IEnumerable<Brick> SelectedNeighbors(Brick brick)
	{
		return null;
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xD5446C", Offset = "0xD5446C", VA = "0xD5446C")]
	private void ResetValidSnakeNeighbors()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xD549A0", Offset = "0xD549A0", VA = "0xD549A0")]
	private void SplitSnakeIfSelectionCutThrough()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xD54CE8", Offset = "0xD54CE8", VA = "0xD54CE8")]
	private void SplitOneSnake(TargetSnake snake)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xD54FDC", Offset = "0xD54FDC", VA = "0xD54FDC")]
	private void DeselectHalfSnake(Brick clickedBrick)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xD551D8", Offset = "0xD551D8", VA = "0xD551D8")]
	private List<Brick> GetSnakeSelectionFromTo(Brick from, Brick to, [Optional] Brick prev)
	{
		return null;
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xD5542C", Offset = "0xD5542C", VA = "0xD5542C")]
	private void ShootBrushRay(Ray ray, out RaycastHit hit)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xD55864", Offset = "0xD55864", VA = "0xD55864")]
	private void UpdateSelection()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xD557A0", Offset = "0xD557A0", VA = "0xD557A0")]
	private void OnPointerEnterBrick()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xD55CD8", Offset = "0xD55CD8", VA = "0xD55CD8")]
	private void OnTriggerClicked()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xD56008", Offset = "0xD56008", VA = "0xD56008")]
	private void OnTriggerOneClick()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xD55EF4", Offset = "0xD55EF4", VA = "0xD55EF4")]
	private void OnTriggerDoubleClick()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xD56B1C", Offset = "0xD56B1C", VA = "0xD56B1C")]
	private void OnTriggerReleased()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xD56C3C", Offset = "0xD56C3C", VA = "0xD56C3C")]
	private void OnGripReleased()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xD56BD0", Offset = "0xD56BD0", VA = "0xD56BD0")]
	private void ApplySelection()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xD56CBC", Offset = "0xD56CBC", VA = "0xD56CBC")]
	private void ApplyBrush()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xD56878", Offset = "0xD56878", VA = "0xD56878")]
	private void AddNeighborsToSelection(Brick brick, bool skipIfSelected = false)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xD569C8", Offset = "0xD569C8", VA = "0xD569C8")]
	private void RemoveNeighborsFromSelection(Brick brick, bool skipIfNotSelected = false)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xD560D0", Offset = "0xD560D0", VA = "0xD560D0")]
	private void AddTargetGroupToSelection(Target target)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xD564A4", Offset = "0xD564A4", VA = "0xD564A4")]
	private void RemoveTargetGroupFromSelection(Target target)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xD559EC", Offset = "0xD559EC", VA = "0xD559EC")]
	private void RemoveBrickFromSelection(Brick brick, bool silent = false)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xD55B3C", Offset = "0xD55B3C", VA = "0xD55B3C")]
	private void AddBrickToSelection(Brick brick, bool silent = false)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xD55E94", Offset = "0xD55E94", VA = "0xD55E94")]
	private void DeselectAllBricks()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xD56EB8", Offset = "0xD56EB8", VA = "0xD56EB8")]
	private WaveHandcrafted CreateUndoWave(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xD56F68", Offset = "0xD56F68", VA = "0xD56F68")]
	private void InitUndo()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xD57148", Offset = "0xD57148", VA = "0xD57148")]
	private void ResetUndo()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xD57388", Offset = "0xD57388", VA = "0xD57388")]
	private void ResetRedoStack()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xD57A68", Offset = "0xD57A68", VA = "0xD57A68")]
	private void CopyLevelBrick(RuntimeBrick from, RuntimeBrick to)
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xD57498", Offset = "0xD57498", VA = "0xD57498")]
	private void CopyWaveState(WaveHandcrafted from, WaveHandcrafted to)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xD5353C", Offset = "0xD5353C", VA = "0xD5353C")]
	private void SaveUndoState()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xD57AA0", Offset = "0xD57AA0", VA = "0xD57AA0")]
	public void Undo()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xD57C14", Offset = "0xD57C14", VA = "0xD57C14")]
	public void Redo()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xD58668", Offset = "0xD58668", VA = "0xD58668", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xD57FF4", Offset = "0xD57FF4", VA = "0xD57FF4")]
	private void UnRegisterCallbacks()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xD58188", Offset = "0xD58188", VA = "0xD58188")]
	private void RegisterCallbacks()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xD5874C", Offset = "0xD5874C", VA = "0xD5874C")]
	private void OnAppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xD5875C", Offset = "0xD5875C", VA = "0xD5875C")]
	public void PreviewLocalWave(WaveSetData setData)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xD58848", Offset = "0xD58848", VA = "0xD58848")]
	public void StartEditingLocalWave(WaveSetData setData, [Optional] Action<WaveSet> done)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xD58954", Offset = "0xD58954", VA = "0xD58954")]
	public void LoadEditorArena()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xD58BFC", Offset = "0xD58BFC", VA = "0xD58BFC")]
	public void BackToBrowse()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xD58CEC", Offset = "0xD58CEC", VA = "0xD58CEC")]
	public void ClearCurrentSetEntirely()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xD58E5C", Offset = "0xD58E5C", VA = "0xD58E5C")]
	public void BackToEditCurrentWave()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xD58B9C", Offset = "0xD58B9C", VA = "0xD58B9C")]
	[IteratorStateMachine(typeof(<ShowWelcomeWhenArenaIsReady>d__213))]
	private IEnumerator ShowWelcomeWhenArenaIsReady()
	{
		return null;
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xD58C78", Offset = "0xD58C78", VA = "0xD58C78")]
	[IteratorStateMachine(typeof(<ShowUtilityWhenArenaIsReady>d__214))]
	private IEnumerator ShowUtilityWhenArenaIsReady()
	{
		return null;
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xD58C18", Offset = "0xD58C18", VA = "0xD58C18")]
	[IteratorStateMachine(typeof(<ShowBrowsingWhenArenaIsReady>d__215))]
	private IEnumerator ShowBrowsingWhenArenaIsReady()
	{
		return null;
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xD59220", Offset = "0xD59220", VA = "0xD59220")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xD592B8", Offset = "0xD592B8", VA = "0xD592B8")]
	public void PlaySetFromCurrentWave()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xD592C0", Offset = "0xD592C0", VA = "0xD592C0")]
	public void PlaySet(int fromIndex = 0)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xD59640", Offset = "0xD59640", VA = "0xD59640")]
	public void PublishCurrentSet(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xD59804", Offset = "0xD59804", VA = "0xD59804")]
	public void RePublishCurrentSet(Action<bool> onDone)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xD599C8", Offset = "0xD599C8", VA = "0xD599C8")]
	private void OnArenaShutdown()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xD51D80", Offset = "0xD51D80", VA = "0xD51D80")]
	private WaveSet CreateNewSet(string set_name)
	{
		return null;
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xD59BC0", Offset = "0xD59BC0", VA = "0xD59BC0")]
	public WaveHandcrafted AddNewWave([Optional] WaveSet set)
	{
		return null;
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xD59E34", Offset = "0xD59E34", VA = "0xD59E34")]
	private void SetWavesPosition(WaveSet set)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xD59F24", Offset = "0xD59F24", VA = "0xD59F24")]
	public string NameWave(int index)
	{
		return null;
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xD59FB0", Offset = "0xD59FB0", VA = "0xD59FB0")]
	private void RenameWaves()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xD5A02C", Offset = "0xD5A02C", VA = "0xD5A02C")]
	private void OnLocalize()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xD5A0F0", Offset = "0xD5A0F0", VA = "0xD5A0F0")]
	public bool MoveWave(int oldIndex, int newIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xD5A1F4", Offset = "0xD5A1F4", VA = "0xD5A1F4")]
	public void ShiftCurrentWave(int offset)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xD5A3F0", Offset = "0xD5A3F0", VA = "0xD5A3F0")]
	public bool RemoveWave(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xD5A428", Offset = "0xD5A428", VA = "0xD5A428")]
	public bool RemoveWave([Optional] Wave wave)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xD5A61C", Offset = "0xD5A61C", VA = "0xD5A61C")]
	public int AlternativeIndexForDeletedWave(int i = -1)
	{
		return default(int);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xD5A634", Offset = "0xD5A634", VA = "0xD5A634")]
	public bool ChangeCurrentEditWave(int waveIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xD58F24", Offset = "0xD58F24", VA = "0xD58F24")]
	private void ChangeCurrentEditWave(WaveHandcrafted wave, int waveIndex = -1)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xD5A700", Offset = "0xD5A700", VA = "0xD5A700")]
	private void SetCurrentEditSet(WaveSet set)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xD59A7C", Offset = "0xD59A7C", VA = "0xD59A7C")]
	private void HideAllUIs()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xD5A738", Offset = "0xD5A738", VA = "0xD5A738")]
	public LevelEditorManager()
	{
	}
}
[Token(Token = "0x2000236")]
public class EditorBordersKnob : KnobBase
{
	[Token(Token = "0x2000237")]
	public class ValueChangedEvent : UnityEvent<HexTrudeManager.WallType>
	{
		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xD5E1C8", Offset = "0xD5E1C8", VA = "0xD5E1C8")]
		public ValueChangedEvent()
		{
		}
	}

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool initialChange;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ValueChangedEvent ValueChanged;

	[Token(Token = "0x170001FF")]
	public HexTrudeManager.WallType Value
	{
		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xD5DF48", Offset = "0xD5DF48", VA = "0xD5DF48")]
		[CompilerGenerated]
		get
		{
			return default(HexTrudeManager.WallType);
		}
		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xD5DF50", Offset = "0xD5DF50", VA = "0xD5DF50")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xD5DE54", Offset = "0xD5DE54", VA = "0xD5DE54")]
	public void InitializeKnob()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xD5DE7C", Offset = "0xD5DE7C", VA = "0xD5DE7C", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xD5DF58", Offset = "0xD5DF58", VA = "0xD5DF58", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xD5DF9C", Offset = "0xD5DF9C", VA = "0xD5DF9C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0xD5E150", Offset = "0xD5E150", VA = "0xD5E150")]
	public EditorBordersKnob()
	{
	}
}
[Token(Token = "0x2000238")]
public class EditorBrowsKnob : KnobBase
{
	[Token(Token = "0x2000239")]
	[CompilerGenerated]
	private sealed class <BackToDefaultCo>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorBrowsKnob <>4__this;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startAmp>5__2;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__3;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__4;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BEB")]
			[Address(RVA = "0xD5E9E4", Offset = "0xD5E9E4", VA = "0xD5E9E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0xD5EA2C", Offset = "0xD5EA2C", VA = "0xD5EA2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xD5E7D0", Offset = "0xD5E7D0", VA = "0xD5E7D0")]
		[DebuggerHidden]
		public <BackToDefaultCo>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xD5E88C", Offset = "0xD5E88C", VA = "0xD5E88C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xD5E890", Offset = "0xD5E890", VA = "0xD5E890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xD5E9EC", Offset = "0xD5E9EC", VA = "0xD5E9EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Browsing")]
	public int index;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float stepTime;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro countText;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _timeSinceLastStep;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _step;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _count;

	[Token(Token = "0x4000EA9")]
	private const string LAST_KNOWN_VALUE_KEY = "LastSeenSetInLevelEditorBrowser";

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine _BackToDefaultCo;

	[Token(Token = "0x17000200")]
	public int Count
	{
		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xD5E210", Offset = "0xD5E210", VA = "0xD5E210")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xD5E218", Offset = "0xD5E218", VA = "0xD5E218")]
		set
		{
		}
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0xD5E2C8", Offset = "0xD5E2C8", VA = "0xD5E2C8", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0xD5E2D0", Offset = "0xD5E2D0", VA = "0xD5E2D0", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0xD5E538", Offset = "0xD5E538", VA = "0xD5E538", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0xD5E554", Offset = "0xD5E554", VA = "0xD5E554", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0xD5E570", Offset = "0xD5E570", VA = "0xD5E570")]
	public void LoadLastIndex()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xD5E5D0", Offset = "0xD5E5D0", VA = "0xD5E5D0")]
	public static int LastIndexPref()
	{
		return default(int);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xD5E634", Offset = "0xD5E634", VA = "0xD5E634")]
	public void SaveLastIndex()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xD5E688", Offset = "0xD5E688", VA = "0xD5E688")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xD5E6CC", Offset = "0xD5E6CC", VA = "0xD5E6CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xD5E75C", Offset = "0xD5E75C", VA = "0xD5E75C")]
	[IteratorStateMachine(typeof(<BackToDefaultCo>d__20))]
	private IEnumerator BackToDefaultCo()
	{
		return null;
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xD5E7F8", Offset = "0xD5E7F8", VA = "0xD5E7F8")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xD5E83C", Offset = "0xD5E83C", VA = "0xD5E83C")]
	public void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0xD5E518", Offset = "0xD5E518", VA = "0xD5E518")]
	public void SetIndex(int newIndex)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xD5E870", Offset = "0xD5E870", VA = "0xD5E870")]
	public EditorBrowsKnob()
	{
	}
}
[Token(Token = "0x200023A")]
public class EditorBrowsUI : Area
{
	[Token(Token = "0x200023B")]
	private struct SetCache
	{
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CustomSet meta;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timestamp;

		[Token(Token = "0x4000EC2")]
		private const float CACHE_VALID_TIME = 600f;

		[Token(Token = "0x17000209")]
		public bool IsValid
		{
			[Token(Token = "0x6000C0E")]
			[Address(RVA = "0xD5F23C", Offset = "0xD5F23C", VA = "0xD5F23C")]
			get
			{
				return default(bool);
			}
		}
	}

	[Token(Token = "0x2000240")]
	[CompilerGenerated]
	private sealed class <DebugPrintAllSets>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorBrowsUI <>4__this;

		[Token(Token = "0x1700020A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xD60B48", Offset = "0xD60B48", VA = "0xD60B48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1C")]
			[Address(RVA = "0xD60B90", Offset = "0xD60B90", VA = "0xD60B90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xD600D0", Offset = "0xD600D0", VA = "0xD600D0")]
		[DebuggerHidden]
		public <DebugPrintAllSets>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xD60A34", Offset = "0xD60A34", VA = "0xD60A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xD60A38", Offset = "0xD60A38", VA = "0xD60A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xD60B50", Offset = "0xD60B50", VA = "0xD60B50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorBrowsUI inst;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float refreshTime;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EditorBrowsKnob knob;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions playButton;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIItemTransitions madeBy;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LocalizeFormatted madeByText;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIItemTransitions timesButton;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform leaderboardRotator;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CustomSet _setMeta;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<int, SetCache> _set_meta_cache;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _lastIndex;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _timeSinceIndexChanged;

	[Token(Token = "0x4000EBD")]
	private const int REFRESH_DISABLED = 1000;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<string, string> _playerNames;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _numSets;

	[Token(Token = "0x17000203")]
	public CustomSet SetMeta
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xD5EA34", Offset = "0xD5EA34", VA = "0xD5EA34")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xD5EA3C", Offset = "0xD5EA3C", VA = "0xD5EA3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000204")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xD5EBA0", Offset = "0xD5EBA0", VA = "0xD5EBA0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000205")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xD5EBA8", Offset = "0xD5EBA8", VA = "0xD5EBA8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000206")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xD5EBB0", Offset = "0xD5EBB0", VA = "0xD5EBB0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000207")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xD5EBB8", Offset = "0xD5EBB8", VA = "0xD5EBB8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000208")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xD5EBC0", Offset = "0xD5EBC0", VA = "0xD5EBC0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xD5EBC8", Offset = "0xD5EBC8", VA = "0xD5EBC8", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xD5ECC8", Offset = "0xD5ECC8", VA = "0xD5ECC8", Slot = "14")]
	public override void hide(bool byPopUp = false)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xD5ED00", Offset = "0xD5ED00", VA = "0xD5ED00")]
	private void OnNumSetsReceived(bool success, int count)
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xD5EE08", Offset = "0xD5EE08", VA = "0xD5EE08", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xD5F058", Offset = "0xD5F058", VA = "0xD5F058")]
	private void OnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xD5F0C4", Offset = "0xD5F0C4", VA = "0xD5F0C4")]
	private void SetIndex(int index)
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xD5F26C", Offset = "0xD5F26C", VA = "0xD5F26C")]
	private void GetIndexMeta(int index, Action<bool, CustomSet> OnResponse)
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xD5F324", Offset = "0xD5F324", VA = "0xD5F324")]
	public static void GetIndexMeta_Cahce(int index, Action<bool, CustomSet> OnResponse)
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xD5D984", Offset = "0xD5D984", VA = "0xD5D984")]
	public void UpdateSetCache(CustomSet set)
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xD5F470", Offset = "0xD5F470", VA = "0xD5F470")]
	private void OnSetMetaReceived(bool success, CustomSet set)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xD5F824", Offset = "0xD5F824", VA = "0xD5F824")]
	private void AddUserNameOnCustomSetMeta(CustomSet set)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0xD5F940", Offset = "0xD5F940", VA = "0xD5F940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0xD5FA50", Offset = "0xD5FA50", VA = "0xD5FA50", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0xD5FAFC", Offset = "0xD5FAFC", VA = "0xD5FAFC")]
	public void OnPlayClicked()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0xD5FB04", Offset = "0xD5FB04", VA = "0xD5FB04")]
	public void PlaySet(CustomSet set)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0xD5FD18", Offset = "0xD5FD18", VA = "0xD5FD18")]
	public void OnRandomClicked()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0xD5FD64", Offset = "0xD5FD64", VA = "0xD5FD64")]
	public void SetKnobSetNumber(int setNum)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xD5FD98", Offset = "0xD5FD98", VA = "0xD5FD98")]
	public void OnLeaderboardClicked()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xD5FE88", Offset = "0xD5FE88", VA = "0xD5FE88")]
	public void GetNextValidSet(int index, Action<CustomSet> OnResponse, int tries = 0)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xD6005C", Offset = "0xD6005C", VA = "0xD6005C")]
	[IteratorStateMachine(typeof(<DebugPrintAllSets>d__48))]
	private IEnumerator DebugPrintAllSets()
	{
		return null;
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0xD600F8", Offset = "0xD600F8", VA = "0xD600F8")]
	private void DebugGetSetInfo(int setNum)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xD601D8", Offset = "0xD601D8", VA = "0xD601D8")]
	private void DebugPrintSetInfo(CustomSet set)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xD6032C", Offset = "0xD6032C", VA = "0xD6032C")]
	public EditorBrowsUI()
	{
	}
}
[Token(Token = "0x2000243")]
public class EditorDarkener : MonoBehaviour
{
	[Token(Token = "0x2000244")]
	[CompilerGenerated]
	private sealed class <FadeCo>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool revense;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorDarkener <>4__this;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color0>5__2;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <color1>5__3;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <timer>5__4;

		[Token(Token = "0x1700020C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xD613F8", Offset = "0xD613F8", VA = "0xD613F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xD61440", Offset = "0xD61440", VA = "0xD61440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xD610D4", Offset = "0xD610D4", VA = "0xD610D4")]
		[DebuggerHidden]
		public <FadeCo>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xD61200", Offset = "0xD61200", VA = "0xD61200", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xD61204", Offset = "0xD61204", VA = "0xD61204", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xD61400", Offset = "0xD61400", VA = "0xD61400", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float durationIn;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float durationOut;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color _originalColor;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _param;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private CoroutineHandle? _handle;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _wasVisible;

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xD60F24", Offset = "0xD60F24", VA = "0xD60F24")]
	private void Fade(float duration, bool reverse = false)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xD6103C", Offset = "0xD6103C", VA = "0xD6103C")]
	[IteratorStateMachine(typeof(<FadeCo>d__7))]
	private IEnumerator<float> FadeCo(float duration, bool revense)
	{
		return null;
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xD610FC", Offset = "0xD610FC", VA = "0xD610FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xD61198", Offset = "0xD61198", VA = "0xD61198")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xD611EC", Offset = "0xD611EC", VA = "0xD611EC")]
	public EditorDarkener()
	{
	}
}
[Token(Token = "0x2000245")]
public class EditorEnergyKnob : KnobBase
{
	[Token(Token = "0x2000246")]
	public class ValueChangedEvent : UnityEvent<float>
	{
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xD61A04", Offset = "0xD61A04", VA = "0xD61A04")]
		public ValueChangedEvent()
		{
		}
	}

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[Header("Energy")]
	public float minEnergy;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float maxEnergy;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float barPower;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer energyBar;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ValueChangedEvent ValueChanged;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _TimeLeftID;

	[Token(Token = "0x1700020E")]
	public float EnergyFactor
	{
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xD6149C", Offset = "0xD6149C", VA = "0xD6149C")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xD614A4", Offset = "0xD614A4", VA = "0xD614A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xD614AC", Offset = "0xD614AC", VA = "0xD614AC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xD61504", Offset = "0xD61504", VA = "0xD61504")]
	private void UpdateBar(float amplitude)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xD61570", Offset = "0xD61570", VA = "0xD61570", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xD61764", Offset = "0xD61764", VA = "0xD61764", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xD617F4", Offset = "0xD617F4", VA = "0xD617F4", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xD61658", Offset = "0xD61658", VA = "0xD61658")]
	private static float RoundFloat(float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xD616CC", Offset = "0xD616CC", VA = "0xD616CC")]
	private float ValueToAmplitude(float energy)
	{
		return default(float);
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xD618BC", Offset = "0xD618BC", VA = "0xD618BC")]
	private float AmplitudeToValue(float amplitude)
	{
		return default(float);
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xD61920", Offset = "0xD61920", VA = "0xD61920")]
	public void OnKnobDeselect()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xD6197C", Offset = "0xD6197C", VA = "0xD6197C")]
	public EditorEnergyKnob()
	{
	}
}
[Token(Token = "0x2000247")]
public class EditorFloaterButton : MonoBehaviour
{
	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xD61A4C", Offset = "0xD61A4C", VA = "0xD61A4C")]
	public void OnDeleteClicked()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0xD61B20", Offset = "0xD61B20", VA = "0xD61B20")]
	public EditorFloaterButton()
	{
	}
}
[Token(Token = "0x2000248")]
public class EditorOffsetKnob : KnobBase
{
	[Token(Token = "0x2000249")]
	[CompilerGenerated]
	private sealed class <BackToDefaultCo>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EditorOffsetKnob <>4__this;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <startAmp>5__2;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0xD62040", Offset = "0xD62040", VA = "0xD62040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xD62088", Offset = "0xD62088", VA = "0xD62088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD61D64", Offset = "0xD61D64", VA = "0xD61D64")]
		[DebuggerHidden]
		public <BackToDefaultCo>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xD61F0C", Offset = "0xD61F0C", VA = "0xD61F0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD61F10", Offset = "0xD61F10", VA = "0xD61F10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xD62048", Offset = "0xD62048", VA = "0xD62048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float firstDelay;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float delay;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _offset;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _timeSinceLastShift;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _delay;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine _BackToDefaultCo;

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xD61B28", Offset = "0xD61B28", VA = "0xD61B28", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xD61B30", Offset = "0xD61B30", VA = "0xD61B30", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xD61B74", Offset = "0xD61B74", VA = "0xD61B74", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xD61CF0", Offset = "0xD61CF0", VA = "0xD61CF0")]
	[IteratorStateMachine(typeof(<BackToDefaultCo>d__9))]
	private IEnumerator BackToDefaultCo()
	{
		return null;
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0xD61D8C", Offset = "0xD61D8C", VA = "0xD61D8C")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0xD61DD0", Offset = "0xD61DD0", VA = "0xD61DD0")]
	public void OnUnGrabbed()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0xD61E08", Offset = "0xD61E08", VA = "0xD61E08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0xD61EB4", Offset = "0xD61EB4", VA = "0xD61EB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0xD61EF8", Offset = "0xD61EF8", VA = "0xD61EF8")]
	public EditorOffsetKnob()
	{
	}
}
[Token(Token = "0x200024A")]
public class EditorSetSelectionUI : Area
{
	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorSetSelectionUI inst;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SelectableWavesSetsTouchItemGruop setListContainer;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions newSetButton;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions duplicateSetButton;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UIItemTransitions openSetButton;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIItemTransitions deleteSetButton;

	[Token(Token = "0x17000211")]
	private bool _SelectedNotAvaliable
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xD62090", Offset = "0xD62090", VA = "0xD62090")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000212")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xD62108", Offset = "0xD62108", VA = "0xD62108", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000213")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xD62110", Offset = "0xD62110", VA = "0xD62110", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000214")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xD62118", Offset = "0xD62118", VA = "0xD62118", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000215")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xD62120", Offset = "0xD62120", VA = "0xD62120", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000216")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xD62128", Offset = "0xD62128", VA = "0xD62128", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000217")]
	public int waveShiftForCurrentSession
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xD62130", Offset = "0xD62130", VA = "0xD62130")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xD62138", Offset = "0xD62138", VA = "0xD62138")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xD62140", Offset = "0xD62140", VA = "0xD62140", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xD621A4", Offset = "0xD621A4", VA = "0xD621A4")]
	public void SetWaveShiftInFrontOfPlayer()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xD62204", Offset = "0xD62204", VA = "0xD62204", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xD62398", Offset = "0xD62398", VA = "0xD62398")]
	private void DisableButtonsIfNeeded()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xD624B0", Offset = "0xD624B0", VA = "0xD624B0", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xD62588", Offset = "0xD62588", VA = "0xD62588")]
	public void OnCreateNewSet()
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xD62718", Offset = "0xD62718", VA = "0xD62718")]
	public void OnDeleteClick()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xD628D4", Offset = "0xD628D4", VA = "0xD628D4")]
	public void OnDuplicateClick()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xD62A10", Offset = "0xD62A10", VA = "0xD62A10")]
	public void OnOpenClick()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xD62B38", Offset = "0xD62B38", VA = "0xD62B38")]
	public EditorSetSelectionUI()
	{
	}
}
[Token(Token = "0x200024B")]
public class EditorStickUI : MonoBehaviour
{
	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorStickUI inst;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI hpText;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIItemTransitions hpIncrement;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions hpDecrement;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIItemTransitions forceFieldToggle;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder _builder;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Target target;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _button;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _center;

	[Token(Token = "0x17000218")]
	public bool IsVisible
	{
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xD62BB4", Offset = "0xD62BB4", VA = "0xD62BB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xD62BD0", Offset = "0xD62BD0", VA = "0xD62BD0")]
	private void OnModelChanged()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xD62CAC", Offset = "0xD62CAC", VA = "0xD62CAC")]
	private void OnMusicSkipRequestedNoDelay(int dir)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xD62D28", Offset = "0xD62D28", VA = "0xD62D28")]
	private void OnSnapTurnRequested(int dir)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xD62DA8", Offset = "0xD62DA8", VA = "0xD62DA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xD62E38", Offset = "0xD62E38", VA = "0xD62E38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0xD62FD8", Offset = "0xD62FD8", VA = "0xD62FD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0xD63308", Offset = "0xD63308", VA = "0xD63308")]
	public EditorStickUI()
	{
	}
}
[Token(Token = "0x200024C")]
[RequireComponent(typeof(EditorUtilityUI))]
public class EditorUtilityRotator : MonoBehaviour
{
	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Follow")]
	public float smoothTime;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Fold")]
	public float foldHorizontalAngleThresh;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float foldAngle;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float foldHeight;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float foldSmoothTime;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform foldTransform;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EditorUtilityUI _ui;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SmoothVector3 _dir;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SmoothFloat _foldAngle;

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0xD6337C", Offset = "0xD6337C", VA = "0xD6337C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0xD633F0", Offset = "0xD633F0", VA = "0xD633F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xD63C00", Offset = "0xD63C00", VA = "0xD63C00")]
	public EditorUtilityRotator()
	{
	}
}
[Token(Token = "0x200024D")]
public class EditorUtilityUI : Area
{
	[Token(Token = "0x200024F")]
	[CompilerGenerated]
	private sealed class <ScrollToCo>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool oneFrameDeley;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EditorUtilityUI <>4__this;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float endValue;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x1700021E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0xD65FDC", Offset = "0xD65FDC", VA = "0xD65FDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xD66024", Offset = "0xD66024", VA = "0xD66024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xD652DC", Offset = "0xD652DC", VA = "0xD652DC")]
		[DebuggerHidden]
		public <ScrollToCo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xD65EA8", Offset = "0xD65EA8", VA = "0xD65EA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xD65EAC", Offset = "0xD65EAC", VA = "0xD65EAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xD65FE4", Offset = "0xD65FE4", VA = "0xD65FE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorUtilityUI inst;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SelectableTouchItemGroupDynamic selectableBrushes;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SelectableDynamicTouchItemWaveSetGroup selectableWaves;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ScrollRect wavesScrollRect;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro SetTitleText;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIItemTransitions centerMark;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("UI Buttons")]
	public UIItemTransitions undoButton;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions redoButton;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIItemTransitions publishButton;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIItemTransitions cantPublishTooltip;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UIItemTransitions republishButton;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UIItemTransitions cantRePublishTooltip;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public LocalizeFormatted publicIDText;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UIItemTransitions deleteWaveButton;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public UIItemTransitions addWaveButton;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UIItemTransitions playSetButton;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UIItemTransitions playFromHereButton;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("UI Knobs")]
	public EditorEnergyKnob energyKnob;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public EditorBordersKnob bordersKnob;

	[Token(Token = "0x4000F24")]
	public const int MAX_POWERUPS = 10;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Power ups buttons")]
	public UIItemTransitions nukePowerUp;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<UIItemTransitions> powerUps;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _powerUpsCount;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Coroutine _scrollToCo;

	[Token(Token = "0x17000219")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xD63C98", Offset = "0xD63C98", VA = "0xD63C98", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021A")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xD63CA0", Offset = "0xD63CA0", VA = "0xD63CA0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021B")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xD63CA8", Offset = "0xD63CA8", VA = "0xD63CA8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021C")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xD63CB0", Offset = "0xD63CB0", VA = "0xD63CB0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700021D")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xD63CB8", Offset = "0xD63CB8", VA = "0xD63CB8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xD63CC0", Offset = "0xD63CC0", VA = "0xD63CC0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xD63EF8", Offset = "0xD63EF8", VA = "0xD63EF8")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xD642F4", Offset = "0xD642F4", VA = "0xD642F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xD64414", Offset = "0xD64414", VA = "0xD64414")]
	private void UpdatePowerUpUI()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xD64788", Offset = "0xD64788", VA = "0xD64788")]
	private void DisableWaveListButtons()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xD648B0", Offset = "0xD648B0", VA = "0xD648B0", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xD64F5C", Offset = "0xD64F5C", VA = "0xD64F5C", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xD64F88", Offset = "0xD64F88", VA = "0xD64F88")]
	private void OnWaveChanged()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xD65048", Offset = "0xD65048", VA = "0xD65048")]
	private void ReValidateSelectedItem()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xD63EFC", Offset = "0xD63EFC", VA = "0xD63EFC")]
	private void UpdatePublishButtons()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xD64DD4", Offset = "0xD64DD4", VA = "0xD64DD4")]
	private void SetLoaded([Optional] WaveSet set)
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xD64FA0", Offset = "0xD64FA0", VA = "0xD64FA0")]
	private void AutoSelectLastEditWave()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0xD64B9C", Offset = "0xD64B9C", VA = "0xD64B9C")]
	public void RefreshList()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0xD64EC8", Offset = "0xD64EC8", VA = "0xD64EC8")]
	private void ScrollToItem([Optional] WaveListItemUI item)
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xD6512C", Offset = "0xD6512C", VA = "0xD6512C")]
	private void SnapTo(WaveListItemUI target)
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0xD6523C", Offset = "0xD6523C", VA = "0xD6523C")]
	[IteratorStateMachine(typeof(<ScrollToCo>d__49))]
	private IEnumerator ScrollToCo(float endValue, float time = 0.2f, bool oneFrameDeley = true)
	{
		return null;
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0xD65304", Offset = "0xD65304", VA = "0xD65304")]
	public void OnWaveItemSelected(SelectableTouchItem item)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xD653D8", Offset = "0xD653D8", VA = "0xD653D8")]
	public void OnBrushItemSelected(SelectableTouchItem item)
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0xD6545C", Offset = "0xD6545C", VA = "0xD6545C")]
	public void OnExitButtonClicked()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0xD654FC", Offset = "0xD654FC", VA = "0xD654FC")]
	public void OnPowerUpClick(int powerUp)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xD65584", Offset = "0xD65584", VA = "0xD65584")]
	public void PlayFromHere()
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0xD64730", Offset = "0xD64730", VA = "0xD64730")]
	public void PlayFromStart()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0xD655D8", Offset = "0xD655D8", VA = "0xD655D8")]
	public void OnPublishClicked()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xD656B4", Offset = "0xD656B4", VA = "0xD656B4")]
	public void OnRePublishClicked()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0xD65790", Offset = "0xD65790", VA = "0xD65790")]
	public void OnWaveUpClick()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0xD658A4", Offset = "0xD658A4", VA = "0xD658A4")]
	public void OnWaveDownClick()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xD659B8", Offset = "0xD659B8", VA = "0xD659B8")]
	public void OnWaveDelete()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0xD65B84", Offset = "0xD65B84", VA = "0xD65B84")]
	public void OnNewWave()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xD65C5C", Offset = "0xD65C5C", VA = "0xD65C5C")]
	public void OnUndoClicked()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xD65CB0", Offset = "0xD65CB0", VA = "0xD65CB0")]
	public void OnRedoClicked()
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xD65D04", Offset = "0xD65D04", VA = "0xD65D04")]
	public EditorUtilityUI()
	{
	}
}
[Token(Token = "0x2000250")]
public class EditorWelcomeUI : Area
{
	[Serializable]
	[Token(Token = "0x2000251")]
	public struct JapaneseSwitch
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RectTransform welcomeText;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RectTransform welcomeSuperText;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float welcomeTextOffset;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float welcomeSuperTextOffset;
	}

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EditorWelcomeUI inst;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public JapaneseSwitch japaneseSwitch;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _welcomeTextOrigY;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _welcomeSuperTextOrigY;

	[Token(Token = "0x17000220")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xD6602C", Offset = "0xD6602C", VA = "0xD6602C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000221")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xD66034", Offset = "0xD66034", VA = "0xD66034", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000222")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xD6603C", Offset = "0xD6603C", VA = "0xD6603C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000223")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xD66044", Offset = "0xD66044", VA = "0xD66044", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000224")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xD6604C", Offset = "0xD6604C", VA = "0xD6604C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0xD66054", Offset = "0xD66054", VA = "0xD66054", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0xD660E8", Offset = "0xD660E8", VA = "0xD660E8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0xD6617C", Offset = "0xD6617C", VA = "0xD6617C")]
	public void OnCreateClicked()
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0xD66234", Offset = "0xD66234", VA = "0xD66234")]
	public void OnBrowseClicked()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0xD662FC", Offset = "0xD662FC", VA = "0xD662FC")]
	public void OnWelcomeLocalized()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0xD6641C", Offset = "0xD6641C", VA = "0xD6641C")]
	public EditorWelcomeUI()
	{
	}
}
[Token(Token = "0x2000252")]
public class MaterialProgressController : MonoBehaviour
{
	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressTouchItem progressItem;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image progressImage;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string property;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float from;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _progressID;

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0xD66424", Offset = "0xD66424", VA = "0xD66424")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0xD6650C", Offset = "0xD6650C", VA = "0xD6650C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0xD665F4", Offset = "0xD665F4", VA = "0xD665F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0xD666DC", Offset = "0xD666DC", VA = "0xD666DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0xD667C4", Offset = "0xD667C4", VA = "0xD667C4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0xD66840", Offset = "0xD66840", VA = "0xD66840")]
	private void updateMaterialProgress(float value)
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0xD668C0", Offset = "0xD668C0", VA = "0xD668C0")]
	public MaterialProgressController()
	{
	}
}
[Token(Token = "0x2000253")]
public class SelectableDynamicTouchItemWaveSetGroup : SelectableTouchItemGroupDynamic<WaveListItemUI, WaveHandcrafted>
{
	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0xD66920", Offset = "0xD66920", VA = "0xD66920")]
	public SelectableDynamicTouchItemWaveSetGroup()
	{
	}
}
[Token(Token = "0x2000254")]
public class SelectableWaveSetItem : SelectableDynamicTouchItem<WaveSetData>
{
	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI NameText;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI IdText;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UIItemTransitions renameButton;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WaveSetData _data;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private UIItemTransitions _transition;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TouchScreenKeyboard _keyboard;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] INVALID_CHARS;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder _builder;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string _lastText;

	[Token(Token = "0x17000225")]
	public override WaveSetData Data
	{
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xD66968", Offset = "0xD66968", VA = "0xD66968", Slot = "8")]
		get
		{
			return default(WaveSetData);
		}
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0xD6697C", Offset = "0xD6697C", VA = "0xD6697C", Slot = "9")]
	public override void InitializeItem(WaveSetData data)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0xD66BF4", Offset = "0xD66BF4", VA = "0xD66BF4")]
	private void OnSelectedThisSet()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0xD66C94", Offset = "0xD66C94", VA = "0xD66C94")]
	public void OnRenameClicked()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0xD66C98", Offset = "0xD66C98", VA = "0xD66C98")]
	private static string GetValidFilename(string fileName, char replaceChar = '_')
	{
		return null;
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0xD66E8C", Offset = "0xD66E8C", VA = "0xD66E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0xD670D4", Offset = "0xD670D4", VA = "0xD670D4")]
	public SelectableWaveSetItem()
	{
	}
}
[Token(Token = "0x2000256")]
public class SelectableWavesSetsTouchItemGruop : SelectableTouchItemGroupDynamic<SelectableWaveSetItem, WaveSetData>
{
	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0xD671C4", Offset = "0xD671C4", VA = "0xD671C4")]
	public SelectableWavesSetsTouchItemGruop()
	{
	}
}
[Token(Token = "0x2000257")]
public class WaveListItemUI : SelectableDynamicTouchItem<WaveHandcrafted>
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI waveText;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject WarningIcon;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _isValid;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string _name;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private WaveHandcrafted _wave;

	[Token(Token = "0x17000226")]
	public bool IsValid
	{
		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xD6720C", Offset = "0xD6720C", VA = "0xD6720C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xD67214", Offset = "0xD67214", VA = "0xD67214")]
		set
		{
		}
	}

	[Token(Token = "0x17000227")]
	public string Name
	{
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xD67244", Offset = "0xD67244", VA = "0xD67244")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xD6724C", Offset = "0xD6724C", VA = "0xD6724C")]
		set
		{
		}
	}

	[Token(Token = "0x17000228")]
	public WaveHandcrafted Wave
	{
		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xD672B0", Offset = "0xD672B0", VA = "0xD672B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000229")]
	public override WaveHandcrafted Data
	{
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xD672B8", Offset = "0xD672B8", VA = "0xD672B8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0xD672C0", Offset = "0xD672C0", VA = "0xD672C0", Slot = "9")]
	public override void InitializeItem(WaveHandcrafted wave)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0xD65100", Offset = "0xD65100", VA = "0xD65100")]
	public bool ReValidate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0xD67318", Offset = "0xD67318", VA = "0xD67318")]
	public WaveListItemUI()
	{
	}
}
[Token(Token = "0x2000258")]
public struct WaveSetData
{
	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string name;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool isPublished;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string publicId;

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0xD626AC", Offset = "0xD626AC", VA = "0xD626AC")]
	public WaveSetData(string name)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0xD67360", Offset = "0xD67360", VA = "0xD67360")]
	public WaveSetData(string name, bool isPublished, string publicId)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0xD5BD68", Offset = "0xD5BD68", VA = "0xD5BD68")]
	public WaveSetData(FileInfo fileInfo)
	{
	}
}
[Token(Token = "0x2000259")]
public class DifficultyTest : MonoBehaviour
{
	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0xD67398", Offset = "0xD67398", VA = "0xD67398")]
	public DifficultyTest()
	{
	}
}
[Token(Token = "0x200025A")]
public interface IBrick
{
	[Token(Token = "0x1700022A")]
	IntVector2 Coords
	{
		[Token(Token = "0x6000CC6")]
		get;
	}

	[Token(Token = "0x1700022B")]
	BrickType Type
	{
		[Token(Token = "0x6000CC7")]
		get;
	}

	[Token(Token = "0x1700022C")]
	int Id
	{
		[Token(Token = "0x6000CC8")]
		get;
	}

	[Token(Token = "0x1700022D")]
	bool Extruded
	{
		[Token(Token = "0x6000CC9")]
		get;
	}

	[Token(Token = "0x1700022E")]
	bool ForceField
	{
		[Token(Token = "0x6000CCA")]
		get;
	}

	[Token(Token = "0x1700022F")]
	HexTrudeManager.WallType WallType
	{
		[Token(Token = "0x6000CCB")]
		get;
	}
}
[Token(Token = "0x200025B")]
[ExecuteInEditMode]
public class Level : MonoBehaviour
{
	[Token(Token = "0x200025C")]
	[CompilerGenerated]
	private sealed class <get_iterBricks>d__7 : IEnumerable<LevelBrick>, IEnumerable, IEnumerator<LevelBrick>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private LevelBrick <>2__current;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Level <>4__this;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LevelBrick[] <>7__wrap1;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <>7__wrap2;

		[Token(Token = "0x17000233")]
		private LevelBrick System.Collections.Generic.IEnumerator<LevelBrick>.Current
		{
			[Token(Token = "0x6000CD6")]
			[Address(RVA = "0xD67974", Offset = "0xD67974", VA = "0xD67974", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000234")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CD8")]
			[Address(RVA = "0xD679BC", Offset = "0xD679BC", VA = "0xD679BC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xD6747C", Offset = "0xD6747C", VA = "0xD6747C")]
		[DebuggerHidden]
		public <get_iterBricks>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xD67898", Offset = "0xD67898", VA = "0xD67898", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xD6789C", Offset = "0xD6789C", VA = "0xD6789C", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xD6797C", Offset = "0xD6797C", VA = "0xD6797C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xD679C4", Offset = "0xD679C4", VA = "0xD679C4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<LevelBrick> System.Collections.Generic.IEnumerable<LevelBrick>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xD67A70", Offset = "0xD67A70", VA = "0xD67A70", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<IntVector2, LevelBrick> _bricksByCoords;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelBrick[] bricks;

	[Token(Token = "0x17000230")]
	private LevelBrick levelBrickPrefab
	{
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xD673A0", Offset = "0xD673A0", VA = "0xD673A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000231")]
	public Dictionary<IntVector2, LevelBrick> bricksByCoords
	{
		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xD673F0", Offset = "0xD673F0", VA = "0xD673F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000232")]
	public IEnumerable<LevelBrick> iterBricks
	{
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xD673F8", Offset = "0xD673F8", VA = "0xD673F8")]
		[IteratorStateMachine(typeof(<get_iterBricks>d__7))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0xD674B0", Offset = "0xD674B0", VA = "0xD674B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xD674B4", Offset = "0xD674B4", VA = "0xD674B4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xD67514", Offset = "0xD67514", VA = "0xD67514")]
	private void initBricksByCoords()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xD67890", Offset = "0xD67890", VA = "0xD67890")]
	public Level()
	{
	}
}
[Token(Token = "0x200025D")]
public class LevelBrick : MonoBehaviour, IBrick
{
	[Token(Token = "0x200025E")]
	public struct Data
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BrickType type;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int id;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool extruded;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HexTrudeManager.WallType wallType;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool forcefield;
	}

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public IntVector2 coords;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BrickType type;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool extruded;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool forcefield;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HexTrudeManager.WallType wallType;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Level _level;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LevelBrick[] _neighbors;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer _renderer;

	[Token(Token = "0x17000235")]
	private IntVector2 IBrick.Coords
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xD67A74", Offset = "0xD67A74", VA = "0xD67A74", Slot = "4")]
		get
		{
			return default(IntVector2);
		}
	}

	[Token(Token = "0x17000236")]
	private BrickType IBrick.Type
	{
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xD67A7C", Offset = "0xD67A7C", VA = "0xD67A7C", Slot = "5")]
		get
		{
			return default(BrickType);
		}
	}

	[Token(Token = "0x17000237")]
	private int IBrick.Id
	{
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xD67A84", Offset = "0xD67A84", VA = "0xD67A84", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000238")]
	private bool IBrick.Extruded
	{
		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xD67A8C", Offset = "0xD67A8C", VA = "0xD67A8C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000239")]
	private bool IBrick.ForceField
	{
		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xD67A94", Offset = "0xD67A94", VA = "0xD67A94", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023A")]
	private HexTrudeManager.WallType IBrick.WallType
	{
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xD67A9C", Offset = "0xD67A9C", VA = "0xD67A9C", Slot = "9")]
		get
		{
			return default(HexTrudeManager.WallType);
		}
	}

	[Token(Token = "0x1700023B")]
	private Level level
	{
		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xD67AA4", Offset = "0xD67AA4", VA = "0xD67AA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023C")]
	public LevelBrick[] neighbors
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xD67B6C", Offset = "0xD67B6C", VA = "0xD67B6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700023D")]
	public bool isBumper
	{
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xD67B90", Offset = "0xD67B90", VA = "0xD67B90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023E")]
	public bool isBlaster
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xD67BA0", Offset = "0xD67BA0", VA = "0xD67BA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700023F")]
	public bool isAnyTarget
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xD67BB0", Offset = "0xD67BB0", VA = "0xD67BB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000240")]
	public Material typeMaterial
	{
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xD67DF4", Offset = "0xD67DF4", VA = "0xD67DF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xD67BD0", Offset = "0xD67BD0", VA = "0xD67BD0")]
	public static bool IsAnyTarget(BrickType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xD67BF0", Offset = "0xD67BF0", VA = "0xD67BF0")]
	public Data getData()
	{
		return default(Data);
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xD67C24", Offset = "0xD67C24", VA = "0xD67C24")]
	public void reset(bool ignoreOnEdited = false)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xD67D24", Offset = "0xD67D24", VA = "0xD67D24")]
	public void copyDataFrom(LevelBrick other)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xD67D58", Offset = "0xD67D58", VA = "0xD67D58")]
	public void copyDataFrom(Data data)
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xD67D8C", Offset = "0xD67D8C", VA = "0xD67D8C")]
	public void randomize()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0xD67DF0", Offset = "0xD67DF0", VA = "0xD67DF0")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0xD67C60", Offset = "0xD67C60", VA = "0xD67C60")]
	public void onEdited()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xD680D0", Offset = "0xD680D0", VA = "0xD680D0")]
	public LevelBrick()
	{
	}
}
[Token(Token = "0x200025F")]
public class RuntimeBrick : IBrick
{
	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntVector2 coords;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BrickType type;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int id;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool extruded;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool forcefield;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public HexTrudeManager.WallType wallType;

	[Token(Token = "0x17000241")]
	private IntVector2 IBrick.Coords
	{
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xD680D8", Offset = "0xD680D8", VA = "0xD680D8", Slot = "4")]
		get
		{
			return default(IntVector2);
		}
	}

	[Token(Token = "0x17000242")]
	private BrickType IBrick.Type
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xD680E0", Offset = "0xD680E0", VA = "0xD680E0", Slot = "5")]
		get
		{
			return default(BrickType);
		}
	}

	[Token(Token = "0x17000243")]
	private int IBrick.Id
	{
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xD680E8", Offset = "0xD680E8", VA = "0xD680E8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000244")]
	private bool IBrick.Extruded
	{
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xD680F0", Offset = "0xD680F0", VA = "0xD680F0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000245")]
	private bool IBrick.ForceField
	{
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xD680F8", Offset = "0xD680F8", VA = "0xD680F8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000246")]
	private HexTrudeManager.WallType IBrick.WallType
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xD68100", Offset = "0xD68100", VA = "0xD68100", Slot = "9")]
		get
		{
			return default(HexTrudeManager.WallType);
		}
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0xD68108", Offset = "0xD68108", VA = "0xD68108")]
	public RuntimeBrick()
	{
	}
}
[Token(Token = "0x2000260")]
public class LocalizeDuration : LocalizeDynamic
{
	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder _builder;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _duration;

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0xD68110", Offset = "0xD68110", VA = "0xD68110")]
	public void SetDuration(float duration)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0xD68148", Offset = "0xD68148", VA = "0xD68148", Slot = "5")]
	protected override void UpdateTextForReal()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0xD68330", Offset = "0xD68330", VA = "0xD68330")]
	public LocalizeDuration()
	{
	}
}
[Token(Token = "0x2000261")]
[RequireComponent(typeof(LocalizeEx))]
[RequireComponent(typeof(TMP_Text))]
[RequireComponent(typeof(Localize))]
public abstract class LocalizeDynamic : MonoBehaviour
{
	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _initialized;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TMP_Text _text;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Localize _localize;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected LocalizeEx _localizeEx;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected string _origFormat;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _altText;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private StringBuilder _altText2;

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0xD683C4", Offset = "0xD683C4", VA = "0xD683C4", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0xD68504", Offset = "0xD68504", VA = "0xD68504")]
	private void OnLocalized()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0xD68118", Offset = "0xD68118", VA = "0xD68118")]
	protected void OnDataChanged()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xD686F8", Offset = "0xD686F8", VA = "0xD686F8")]
	private void ClearAltText()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xD68720", Offset = "0xD68720", VA = "0xD68720")]
	public void SetAltText(string altText)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xD6874C", Offset = "0xD6874C", VA = "0xD6874C")]
	public void SetAltText(StringBuilder altText)
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xD685E4", Offset = "0xD685E4", VA = "0xD685E4")]
	protected void UpdateText()
	{
	}

	[Token(Token = "0x6000D02")]
	protected abstract void UpdateTextForReal();

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xD68338", Offset = "0xD68338", VA = "0xD68338")]
	protected LocalizeDynamic()
	{
	}
}
[Token(Token = "0x2000262")]
public class LocalizeFormatted : LocalizeDynamic
{
	[Serializable]
	[Token(Token = "0x2000263")]
	public struct Param
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Name to be used by code")]
		public string name;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Tooltip("String to replace in original (localized) text")]
		public string stringToReplace;
	}

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Param[] parameters;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<string, string> _args;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xD5EB30", Offset = "0xD5EB30", VA = "0xD5EB30")]
	public void SetArg(string name, string value)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xD68788", Offset = "0xD68788", VA = "0xD68788", Slot = "5")]
	protected override void UpdateTextForReal()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xD688A0", Offset = "0xD688A0", VA = "0xD688A0")]
	public LocalizeFormatted()
	{
	}
}
[Token(Token = "0x2000264")]
public class LocalizeInt : LocalizeDynamic
{
	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _value;

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xD68928", Offset = "0xD68928", VA = "0xD68928")]
	public void SetInt(int value)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xD68930", Offset = "0xD68930", VA = "0xD68930", Slot = "5")]
	protected override void UpdateTextForReal()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0xD6899C", Offset = "0xD6899C", VA = "0xD6899C")]
	public LocalizeInt()
	{
	}
}
[Token(Token = "0x2000265")]
[CreateAssetMenu(menuName = "Data/Dynamic Font Set")]
public class DynamicFontSet : ScriptableObject
{
	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset bold;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset medium;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset regular;

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0xD689A4", Offset = "0xD689A4", VA = "0xD689A4")]
	public DynamicFontSet()
	{
	}
}
[Token(Token = "0x2000266")]
[CreateAssetMenu(menuName = "Data/Font Set")]
public class FontSet : ScriptableObject
{
	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_FontAsset bold;

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset block;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset blockBlur;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_FontAsset medium;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_FontAsset mediumBlur;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_FontAsset regular;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TMP_FontAsset ultra;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_FontAsset ultraBlur;

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xD689AC", Offset = "0xD689AC", VA = "0xD689AC")]
	public FontSet()
	{
	}
}
[Token(Token = "0x2000267")]
public enum Language
{
	[Token(Token = "0x4000F8C")]
	System,
	[Token(Token = "0x4000F8D")]
	English,
	[Token(Token = "0x4000F8E")]
	ChineseSimplified,
	[Token(Token = "0x4000F8F")]
	Japanese,
	[Token(Token = "0x4000F90")]
	Korean,
	[Token(Token = "0x4000F91")]
	Hebrew
}
[Token(Token = "0x2000268")]
[DisallowMultipleComponent]
public class LocalizeEx : MonoBehaviour
{
	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _language;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Localize _localize;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text _textMeshPro;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TMP_FontAsset _origFont;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TextAlignmentOptions _origAlignment;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material _origMaterial;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _inited;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent onAfterLocalized;

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xD689B4", Offset = "0xD689B4", VA = "0xD689B4")]
	public void setOrigMaterial(Material origMaterial)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0xD689E0", Offset = "0xD689E0", VA = "0xD689E0")]
	private void Init()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0xD68BB0", Offset = "0xD68BB0", VA = "0xD68BB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0xD68C94", Offset = "0xD68C94", VA = "0xD68C94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0xD68CAC", Offset = "0xD68CAC", VA = "0xD68CAC")]
	private void onLocalized()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0xD68D74", Offset = "0xD68D74", VA = "0xD68D74")]
	public void replaceFontAndMaterial()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0xD68E5C", Offset = "0xD68E5C", VA = "0xD68E5C")]
	public void SetCustomMaterial(Material material)
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xD690A8", Offset = "0xD690A8", VA = "0xD690A8")]
	public void SetTerm(string primary)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xD6910C", Offset = "0xD6910C", VA = "0xD6910C")]
	public LocalizeEx()
	{
	}
}
[Token(Token = "0x2000269")]
public class LocalizeHighlight : MonoBehaviour
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject english;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject nonEnglish;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text _text;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xD69114", Offset = "0xD69114", VA = "0xD69114")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xD692C8", Offset = "0xD692C8", VA = "0xD692C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xD692CC", Offset = "0xD692CC", VA = "0xD692CC")]
	private void onLocalized()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xD694CC", Offset = "0xD694CC", VA = "0xD694CC")]
	public LocalizeHighlight()
	{
	}
}
[Token(Token = "0x200026A")]
public class Localizer : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200026B")]
	private struct MergingMaterials
	{
		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material baseMaterial;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material textureMaterial;

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xD69C64", Offset = "0xD69C64", VA = "0xD69C64")]
		public MergingMaterials(Material baseMaterial, Material textureMaterial)
		{
		}
	}

	[Token(Token = "0x200026C")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localizer <>4__this;

		[Token(Token = "0x17000247")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xD69EF8", Offset = "0xD69EF8", VA = "0xD69EF8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xD69F40", Offset = "0xD69F40", VA = "0xD69F40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xD69608", Offset = "0xD69608", VA = "0xD69608")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xD69DC8", Offset = "0xD69DC8", VA = "0xD69DC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xD69DCC", Offset = "0xD69DCC", VA = "0xD69DCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xD69F00", Offset = "0xD69F00", VA = "0xD69F00", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Localizer inst;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Dictionary<MergingMaterials, Material> _mergedMaterials;

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xD694D4", Offset = "0xD694D4", VA = "0xD694D4", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xD6952C", Offset = "0xD6952C", VA = "0xD6952C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xD69594", Offset = "0xD69594", VA = "0xD69594")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xD69630", Offset = "0xD69630", VA = "0xD69630")]
	public static string getLanguageName(Language language)
	{
		return null;
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xD696B8", Offset = "0xD696B8", VA = "0xD696B8")]
	public void setLanguage(Language language)
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xD69964", Offset = "0xD69964", VA = "0xD69964")]
	private Language getSystemLanguage()
	{
		return default(Language);
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xD69AB0", Offset = "0xD69AB0", VA = "0xD69AB0")]
	private void AddFontsAsFallbacks(DynamicFontSet fontSet)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0xD69B78", Offset = "0xD69B78", VA = "0xD69B78")]
	private void AddFallbackFont(TMP_FontAsset font, TMP_FontAsset fallbackFont)
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0xD68F98", Offset = "0xD68F98", VA = "0xD68F98")]
	public Material mergeFontMaterials(Material baseMaterial, Material textureMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xD69C94", Offset = "0xD69C94", VA = "0xD69C94")]
	private Material mergeFontMaterials_actual(Material baseMaterial, Material textureMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xD69D40", Offset = "0xD69D40", VA = "0xD69D40")]
	public Localizer()
	{
	}
}
[Token(Token = "0x200026D")]
public class AnalyticsManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200026E")]
	public static class CustomEvents
	{
		[Token(Token = "0x200026F")]
		public interface ICustomEvent
		{
			[Token(Token = "0x17000249")]
			string EventName
			{
				[Token(Token = "0x6000D34")]
				get;
			}

			[Token(Token = "0x1700024A")]
			Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D35")]
				[Address(RVA = "0xD6A74C", Offset = "0xD6A74C", VA = "0xD6A74C", Slot = "1")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xD6A7BC", Offset = "0xD6A7BC", VA = "0xD6A7BC", Slot = "2")]
			void Apply()
			{
			}
		}

		[Token(Token = "0x2000270")]
		public class GameOver : ICustomEvent
		{
			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ArenaType arenaType;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ArcadeType arcadeType;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameEndReason endReason;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float gameDuration;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool usedQuickButton;

			[Token(Token = "0x1700024B")]
			public string EventName
			{
				[Token(Token = "0x6000D37")]
				[Address(RVA = "0xD6A7C0", Offset = "0xD6A7C0", VA = "0xD6A7C0", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			public Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D38")]
				[Address(RVA = "0xD6A800", Offset = "0xD6A800", VA = "0xD6A800", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xD6A1E4", Offset = "0xD6A1E4", VA = "0xD6A1E4")]
			public GameOver()
			{
			}
		}

		[Token(Token = "0x2000271")]
		public abstract class QueueEndEvent : ICustomEvent
		{
			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float searchTime;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public QueueType intent;

			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClient.Connecting connecting;

			[Token(Token = "0x1700024D")]
			public virtual string EventName
			{
				[Token(Token = "0x6000D3A")]
				[Address(RVA = "0xD6AA78", Offset = "0xD6AA78", VA = "0xD6AA78", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			public virtual Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D3B")]
				[Address(RVA = "0xD6AAB8", Offset = "0xD6AAB8", VA = "0xD6AAB8", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xD6AD1C", Offset = "0xD6AD1C", VA = "0xD6AD1C")]
			protected QueueEndEvent()
			{
			}
		}

		[Token(Token = "0x2000272")]
		public enum MatchFailReason
		{
			[Token(Token = "0x4000FC0")]
			None,
			[Token(Token = "0x4000FC1")]
			Cancel,
			[Token(Token = "0x4000FC2")]
			Fail
		}

		[Token(Token = "0x2000273")]
		public class QueueEndFail : QueueEndEvent
		{
			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MatchFailReason failReason;

			[Token(Token = "0x1700024F")]
			public override string EventName
			{
				[Token(Token = "0x6000D3D")]
				[Address(RVA = "0xD6AD24", Offset = "0xD6AD24", VA = "0xD6AD24", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			public override Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D3E")]
				[Address(RVA = "0xD6AD94", Offset = "0xD6AD94", VA = "0xD6AD94", Slot = "8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xD6A40C", Offset = "0xD6A40C", VA = "0xD6A40C")]
			public QueueEndFail()
			{
			}
		}

		[Token(Token = "0x2000274")]
		public class QueueEndConnected : QueueEndEvent
		{
			[Token(Token = "0x17000251")]
			public override string EventName
			{
				[Token(Token = "0x6000D40")]
				[Address(RVA = "0xD6AE50", Offset = "0xD6AE50", VA = "0xD6AE50", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D41")]
			[Address(RVA = "0xD6A2F4", Offset = "0xD6A2F4", VA = "0xD6A2F4")]
			public QueueEndConnected()
			{
			}
		}

		[Token(Token = "0x2000275")]
		public class OpponentFound : ICustomEvent
		{
			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool accept;

			[Token(Token = "0x17000252")]
			public string EventName
			{
				[Token(Token = "0x6000D42")]
				[Address(RVA = "0xD6AEC0", Offset = "0xD6AEC0", VA = "0xD6AEC0", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000253")]
			public Dictionary<string, object> EventParams
			{
				[Token(Token = "0x6000D43")]
				[Address(RVA = "0xD6AF00", Offset = "0xD6AF00", VA = "0xD6AF00", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D44")]
			[Address(RVA = "0xD6A4E4", Offset = "0xD6A4E4", VA = "0xD6A4E4")]
			public OpponentFound()
			{
			}
		}

		[Token(Token = "0x2000276")]
		public enum FriendInviteResult
		{
			[Token(Token = "0x4000FC6")]
			Accept,
			[Token(Token = "0x4000FC7")]
			Decline,
			[Token(Token = "0x4000FC8")]
			Ignore
		}

		[Token(Token = "0x2000277")]
		public class FriendInvite : ICustomEvent
		{
			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FriendInviteResult inviteResult;

			[Token(Token = "0x17000254")]
			public string EventName
			{
				[Token(Token = "0x6000D45")]
				[Address(RVA = "0xD6AFE8", Offset = "0xD6AFE8", VA = "0xD6AFE8", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xD6A5B8", Offset = "0xD6A5B8", VA = "0xD6A5B8")]
			public FriendInvite()
			{
			}
		}

		[Token(Token = "0x4000FA7")]
		private const string GAME_OVER = "GameOver";

		[Token(Token = "0x4000FA8")]
		private const string QUEUE_END = "QueueEnd";

		[Token(Token = "0x4000FA9")]
		private const string OPPONENT_FOUND = "OpponentFound";

		[Token(Token = "0x4000FAA")]
		private const string FRIEND_INVITE = "FriendInvite";

		[Token(Token = "0x4000FAB")]
		private const string ARENA_TYPE_PARAM = "arenaType";

		[Token(Token = "0x4000FAC")]
		private const string ARCADE_TYPE_PARAM = "arcadeType";

		[Token(Token = "0x4000FAD")]
		private const string END_REASON_PARAM = "endReason";

		[Token(Token = "0x4000FAE")]
		private const string GAME_DURATION_PARAM = "gameDuration";

		[Token(Token = "0x4000FAF")]
		private const string QUICK_BUTTON_PARAM = "quick_button";

		[Token(Token = "0x4000FB0")]
		private const string SEARCH_TIME_PARAM = "search_time";

		[Token(Token = "0x4000FB1")]
		private const string INTENT_PARAM = "intent";

		[Token(Token = "0x4000FB2")]
		private const string CO_MODE_PARAM = "co_mode";

		[Token(Token = "0x4000FB3")]
		private const string PHASE_PARAM = "phase";

		[Token(Token = "0x4000FB4")]
		private const string SOURCE_PARAM = "source";

		[Token(Token = "0x4000FB5")]
		private const string MATCH_FAIL_REASON_PARAM = "matchFailReason";

		[Token(Token = "0x4000FB6")]
		private const string ACCEPT_PARAM = "acceptedInvite";

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xD6A5C8", Offset = "0xD6A5C8", VA = "0xD6A5C8")]
		public static void ApplyEvent(ICustomEvent e)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000278")]
	[CompilerGenerated]
	private struct <Start>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<List<string>> <>u__2;

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xD6B080", Offset = "0xD6B080", VA = "0xD6B080", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xD6B534", Offset = "0xD6B534", VA = "0xD6B534", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnalyticsManager inst;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool used_quick_button;

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xD69F48", Offset = "0xD69F48", VA = "0xD69F48", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xD69FA0", Offset = "0xD69FA0", VA = "0xD69FA0")]
	[AsyncStateMachine(typeof(<Start>d__3))]
	private void Start()
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0xD6A03C", Offset = "0xD6A03C", VA = "0xD6A03C")]
	public void onGameOver(GameEndReason endReason, float gameDuration)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xD6A1EC", Offset = "0xD6A1EC", VA = "0xD6A1EC")]
	public void OnMultiplayerQueueConnected(float searchTime, LobbyistClient.Connecting connecting, QueueType intent)
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xD6A2FC", Offset = "0xD6A2FC", VA = "0xD6A2FC")]
	public void OnMatchQueueCanceled(float searchTime, LobbyistClient.Connecting connecting, CustomEvents.MatchFailReason reason, QueueType intent)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0xD6A414", Offset = "0xD6A414", VA = "0xD6A414")]
	public void onOpponentFoundUIResponse(bool didAccept)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0xD6A4EC", Offset = "0xD6A4EC", VA = "0xD6A4EC")]
	public void onFriendInvite(CustomEvents.FriendInviteResult result)
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0xD6A5C0", Offset = "0xD6A5C0", VA = "0xD6A5C0")]
	public AnalyticsManager()
	{
	}
}
[Token(Token = "0x2000279")]
public class Analytiks : MonoBehaviour
{
	[Token(Token = "0x200027A")]
	public enum GameMode
	{
		[Token(Token = "0x4000FD8")]
		None,
		[Token(Token = "0x4000FD9")]
		ArcadeZen,
		[Token(Token = "0x4000FDA")]
		ArcadeClassic,
		[Token(Token = "0x4000FDB")]
		ArcadeNightmare,
		[Token(Token = "0x4000FDC")]
		SoloCampaign,
		[Token(Token = "0x4000FDD")]
		SoloMonthlyChallenge,
		[Token(Token = "0x4000FDE")]
		SoloMusicChallenge,
		[Token(Token = "0x4000FDF")]
		SoloCustomPrivate,
		[Token(Token = "0x4000FE0")]
		SoloCustomPublic,
		[Token(Token = "0x4000FE1")]
		MPVersusRanked,
		[Token(Token = "0x4000FE2")]
		MPVersusFriendly,
		[Token(Token = "0x4000FE3")]
		MPCoOpRanked
	}

	[Token(Token = "0x200027B")]
	private class Session
	{
		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int num;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime startTime;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int realtimeDuration;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameMode lastGameMode;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string lastSetId;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string lastWaveId;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int lastWaveDifficulty;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GameEndReason lastGameEndReason;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int timeInArcadeZen;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int timeInArcadeClassic;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int timeInArcadeNightmare;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int timeInSoloCampaign;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int timeInSoloMonthlyChallenge;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int timeInSoloMusicChallenge;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int timeInSoloCustomPrivate;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int timeInSoloCustomPublic;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int timeInMPVersusRanked;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int timeInMPVersusFriendly;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int timeInMPCoOpRanked;

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xD6E4B8", Offset = "0xD6E4B8", VA = "0xD6E4B8")]
		public Session()
		{
		}
	}

	[Token(Token = "0x200027C")]
	private class Match
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int num;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime startTime;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int realtimeDuration;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int sessionNum;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string player1RnxId;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string player2RnxId;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameMode mode;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int gameDuration;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int matchScoreP1;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int matchScoreP2;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PlayerID winningPlayerId;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int roundNum;

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD6F60C", Offset = "0xD6F60C", VA = "0xD6F60C")]
		public Match()
		{
		}
	}

	[Token(Token = "0x200027D")]
	public enum GameFollowUp
	{
		[Token(Token = "0x4001006")]
		Undefined,
		[Token(Token = "0x4001007")]
		BackToMenu,
		[Token(Token = "0x4001008")]
		Retry,
		[Token(Token = "0x4001009")]
		Next,
		[Token(Token = "0x400100A")]
		Quit,
		[Token(Token = "0x400100B")]
		Rematch,
		[Token(Token = "0x400100C")]
		Again
	}

	[Token(Token = "0x200027E")]
	private class Game
	{
		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int num;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int matchNum;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int roundNum;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sessionNum;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DateTime startTime;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int realtimeDuration;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameMode mode;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string setId;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameEndReason endReason;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string endWaveId;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int endDifficulty;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int score;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int gameDuration;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int progress;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameFollowUp followUp;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int numTimesSetPlayed;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int numTimesSetCompleted;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float powershotUsage;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float gravitySlingUsage;

		[Token(Token = "0x17000257")]
		public bool isNonCustomSoloMode
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xD70078", Offset = "0xD70078", VA = "0xD70078")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000258")]
		public bool isCustomSoloMode
		{
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xD721FC", Offset = "0xD721FC", VA = "0xD721FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000259")]
		public bool isSoloMode
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xD70054", Offset = "0xD70054", VA = "0xD70054")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xD70014", Offset = "0xD70014", VA = "0xD70014")]
		public Game()
		{
		}
	}

	[Token(Token = "0x200027F")]
	private enum PowerUpUsage
	{
		[Token(Token = "0x4001022")]
		NotAvailable,
		[Token(Token = "0x4001023")]
		None,
		[Token(Token = "0x4001024")]
		Some,
		[Token(Token = "0x4001025")]
		All
	}

	[Token(Token = "0x2000280")]
	private class Wave
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int msgId;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DateTime startTime;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int realtimeDuration;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int sessionNum;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int gameNum;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public GameMode gameMode;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string setId;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameEndReason endReason;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int difficulty;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float _gameDurationAtStart;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int gameDuration;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int _numPowerUps;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int _numPowerUpsTaken;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PowerUpUsage powerupUsage;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xD71830", Offset = "0xD71830", VA = "0xD71830")]
		public Wave()
		{
		}
	}

	[Token(Token = "0x2000281")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Analytiks <>4__this;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xD726E8", Offset = "0xD726E8", VA = "0xD726E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xD72730", Offset = "0xD72730", VA = "0xD72730", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xD6B6F0", Offset = "0xD6B6F0", VA = "0xD6B6F0")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xD72210", Offset = "0xD72210", VA = "0xD72210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xD72214", Offset = "0xD72214", VA = "0xD72214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xD726F0", Offset = "0xD726F0", VA = "0xD726F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Analytiks inst;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RNXDepot.MyDepot<AnalytiksCounters> _personalCounters;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Arena _curGameArena;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameMode _curGameMode;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Session _session;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Match _match;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Game _game;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Game _justEndedGame;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Wave _wave;

	[Token(Token = "0x17000255")]
	private string player1RnxId
	{
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xD6F494", Offset = "0xD6F494", VA = "0xD6F494")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000256")]
	private string player2RnxId
	{
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xD6F550", Offset = "0xD6F550", VA = "0xD6F550")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0xD6B540", Offset = "0xD6B540", VA = "0xD6B540")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0xD6B67C", Offset = "0xD6B67C", VA = "0xD6B67C")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xD6B718", Offset = "0xD6B718", VA = "0xD6B718")]
	private void onSessionStarted()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xD6BD74", Offset = "0xD6BD74", VA = "0xD6BD74")]
	public void onEndedGameFollowUp(GameFollowUp followUp)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xD6BEF8", Offset = "0xD6BEF8", VA = "0xD6BEF8")]
	private void onGameStart()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xD6CA40", Offset = "0xD6CA40", VA = "0xD6CA40")]
	private void onGameEnded(GameEndReason endReason)
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xD6D764", Offset = "0xD6D764", VA = "0xD6D764")]
	private void onWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0xD6DC84", Offset = "0xD6DC84", VA = "0xD6DC84")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0xD6DE34", Offset = "0xD6DE34", VA = "0xD6DE34")]
	private void onRoundEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0xD6DFF4", Offset = "0xD6DFF4", VA = "0xD6DFF4")]
	private void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0xD6E1A4", Offset = "0xD6E1A4", VA = "0xD6E1A4")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0xD6BAFC", Offset = "0xD6BAFC", VA = "0xD6BAFC")]
	private void startSession()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0xD6E4C0", Offset = "0xD6E4C0", VA = "0xD6E4C0")]
	private void updateSession()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0xD6E5BC", Offset = "0xD6E5BC", VA = "0xD6E5BC")]
	private void sendSession(Session session)
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0xD6E344", Offset = "0xD6E344", VA = "0xD6E344")]
	private void endSession()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0xD6C3E4", Offset = "0xD6C3E4", VA = "0xD6C3E4")]
	private void startMatch()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0xD6D464", Offset = "0xD6D464", VA = "0xD6D464")]
	private void endMatch()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0xD6F614", Offset = "0xD6F614", VA = "0xD6F614")]
	private void sendMatch(Match match)
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xD6C6B4", Offset = "0xD6C6B4", VA = "0xD6C6B4")]
	private void startGame()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xD6C11C", Offset = "0xD6C11C", VA = "0xD6C11C")]
	public GameMode determineCurrentGameMode()
	{
		return default(GameMode);
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xD6CF08", Offset = "0xD6CF08", VA = "0xD6CF08")]
	private void endGame()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xD7001C", Offset = "0xD7001C", VA = "0xD7001C")]
	private bool isScoreRelevant(Game game)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xD6BEC4", Offset = "0xD6BEC4", VA = "0xD6BEC4")]
	private void updateEndedGame(GameFollowUp followUp)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xD7009C", Offset = "0xD7009C", VA = "0xD7009C")]
	private int getNumTimesSoloSetPlayed()
	{
		return default(int);
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xD700E8", Offset = "0xD700E8", VA = "0xD700E8")]
	private int getNumTimesSoloSetCompleted()
	{
		return default(int);
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0xD70154", Offset = "0xD70154", VA = "0xD70154")]
	private void sendGame(Game game)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xD71114", Offset = "0xD71114", VA = "0xD71114")]
	private void updateTimeInMode()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xD6D970", Offset = "0xD6D970", VA = "0xD6D970")]
	private void startWave(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xD715E0", Offset = "0xD715E0", VA = "0xD715E0")]
	private string determineCurrentSetId()
	{
		return null;
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xD6CC50", Offset = "0xD6CC50", VA = "0xD6CC50")]
	private void endWave()
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xD7187C", Offset = "0xD7187C", VA = "0xD7187C")]
	private void sendWave(Wave wave)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xD71838", Offset = "0xD71838", VA = "0xD71838")]
	private PowerUpUsage calcPowerUpUsage()
	{
		return default(PowerUpUsage);
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xD721F4", Offset = "0xD721F4", VA = "0xD721F4")]
	public Analytiks()
	{
	}
}
[Serializable]
[Token(Token = "0x2000282")]
public class AnalytiksCounters
{
	[Serializable]
	[Token(Token = "0x2000283")]
	public class Solo
	{
		[Serializable]
		[Token(Token = "0x2000284")]
		public class Set
		{
			[Token(Token = "0x400103E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x400103F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numGamesPlayed;

			[Token(Token = "0x4001040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numGamesComplete;

			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xD72830", Offset = "0xD72830", VA = "0xD72830")]
			public Set()
			{
			}
		}

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Set> sets;

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xD71390", Offset = "0xD71390", VA = "0xD71390")]
		public Set getSet(string setId)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xD727A8", Offset = "0xD727A8", VA = "0xD727A8")]
		public Solo()
		{
		}
	}

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int messageNumber;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int sessionNumber;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int matchNumber;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int gameNumber;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Solo solo;

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD72738", Offset = "0xD72738", VA = "0xD72738")]
	public AnalytiksCounters()
	{
	}
}
[Token(Token = "0x2000285")]
public class ConnectionMaster : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000286")]
	public delegate void OfflineStateChange(bool isOffline);

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool _tempOffline;

	[Token(Token = "0x1700025C")]
	public static bool offline
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xD72838", Offset = "0xD72838", VA = "0xD72838")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000E")]
	public static event OfflineStateChange OnOfflineStateChanged
	{
		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xD5EFA0", Offset = "0xD5EFA0", VA = "0xD5EFA0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xD72880", Offset = "0xD72880", VA = "0xD72880")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xD72938", Offset = "0xD72938", VA = "0xD72938")]
	private bool HasNoWiFiConnectivity()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xD72954", Offset = "0xD72954", VA = "0xD72954", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xD729AC", Offset = "0xD729AC", VA = "0xD729AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xD72A04", Offset = "0xD72A04", VA = "0xD72A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD72A5C", Offset = "0xD72A5C", VA = "0xD72A5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0xD72BDC", Offset = "0xD72BDC", VA = "0xD72BDC")]
	public ConnectionMaster()
	{
	}
}
[Token(Token = "0x2000287")]
public class ControllerButtons : MonoBehaviour
{
	[Token(Token = "0x2000288")]
	public delegate void OnMenuButtonClick();

	[Token(Token = "0x2000289")]
	public delegate void OnPadClick();

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ControllerButtons inst;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ListStack<OnMenuButtonClick> _onMenuButtonClickHandlers;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ListStack<OnPadClick> _onPadClickHandlers;

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD72C90", Offset = "0xD72C90", VA = "0xD72C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD72D94", Offset = "0xD72D94", VA = "0xD72D94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xD72EEC", Offset = "0xD72EEC", VA = "0xD72EEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xD730B0", Offset = "0xD730B0", VA = "0xD730B0")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xD731AC", Offset = "0xD731AC", VA = "0xD731AC")]
	private void onPadClicked()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xD732A8", Offset = "0xD732A8", VA = "0xD732A8")]
	public void handleMenuButtonClick(OnMenuButtonClick onMenuButtonClickHandler)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xD73300", Offset = "0xD73300", VA = "0xD73300")]
	public void unhandleMenuButtonClick(OnMenuButtonClick onMenuButtonClickHandler)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xD733B8", Offset = "0xD733B8", VA = "0xD733B8")]
	public void handlePadClick(OnPadClick onPadClickHandler)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xD73410", Offset = "0xD73410", VA = "0xD73410")]
	public void unhandlePadClick(OnPadClick onPadClickHandler)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xD734C8", Offset = "0xD734C8", VA = "0xD734C8")]
	public ControllerButtons()
	{
	}
}
[Token(Token = "0x200028A")]
public class DebugFriends
{
	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<RnxPlatform.User> _users;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string> _friendRnxIds;

	[Token(Token = "0x1700025D")]
	public List<RnxPlatform.User> users
	{
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xD736E8", Offset = "0xD736E8", VA = "0xD736E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700025E")]
	public static bool any
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD736F0", Offset = "0xD736F0", VA = "0xD736F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action onUpdated
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xD73B48", Offset = "0xD73B48", VA = "0xD73B48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xD73BE4", Offset = "0xD73BE4", VA = "0xD73BE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0xD73768", Offset = "0xD73768", VA = "0xD73768")]
	public DebugFriends()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0xD73C80", Offset = "0xD73C80", VA = "0xD73C80")]
	private void onGotFriendDetails(bool success, Dictionary<string, RnxPlatform.User> rnxIdToUser)
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0xD73E30", Offset = "0xD73E30", VA = "0xD73E30")]
	public void update()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0xD73EE8", Offset = "0xD73EE8", VA = "0xD73EE8")]
	private void onFriendStatusUpdated(bool success, Dictionary<string, Status> rnxIdToStatus)
	{
	}
}
[Token(Token = "0x200028B")]
public class GameEventsManager : MonoBehaviour
{
	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static float _lastRacketHitSessionTime;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static float _lastHexHitSessionTime;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static float _lastWallDisconnectSessionTime;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public static float _lastReturnBallToPlayerSessionTime;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static float _lastGutterActivationSessionTime;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public static int _lastReturnBallToPlayerFrame;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static bool _hasSessionStarted;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private static bool _hasQuit;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private static bool _game_in_progress;

	[Token(Token = "0x1700025F")]
	public static float timeSinceRacketHit
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xD76B00", Offset = "0xD76B00", VA = "0xD76B00")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000260")]
	public static float timeSinceHexHit
	{
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xD76C74", Offset = "0xD76C74", VA = "0xD76C74")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000261")]
	public static float timeSinceBallDisconnectedFromWall
	{
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xD76DE8", Offset = "0xD76DE8", VA = "0xD76DE8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000262")]
	public static float timeSinceBallReturnedToPlayer
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xD76F5C", Offset = "0xD76F5C", VA = "0xD76F5C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000263")]
	public static float timeSinceGutterActivation
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xD770D0", Offset = "0xD770D0", VA = "0xD770D0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000264")]
	public static bool hasSessionStarted
	{
		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xD77244", Offset = "0xD77244", VA = "0xD77244")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000010")]
	public static event Action onSessionStarted
	{
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xD75118", Offset = "0xD75118", VA = "0xD75118")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xD751F0", Offset = "0xD751F0", VA = "0xD751F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event Action onBallContact
	{
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xD752C8", Offset = "0xD752C8", VA = "0xD752C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xD753A4", Offset = "0xD753A4", VA = "0xD753A4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event Action<ShotInfo, Vector3> onBallHitRacket
	{
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xD75480", Offset = "0xD75480", VA = "0xD75480")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xD75574", Offset = "0xD75574", VA = "0xD75574")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event Action<ShotInfo, HexTile> onBallHitHex
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xD75668", Offset = "0xD75668", VA = "0xD75668")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xD7575C", Offset = "0xD7575C", VA = "0xD7575C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event Action<HexTrudeManager.WallType> onBallHitWall
	{
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xD75850", Offset = "0xD75850", VA = "0xD75850")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xD75944", Offset = "0xD75944", VA = "0xD75944")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event Action<Player> onBallReturnedToPlayer
	{
		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xD75A38", Offset = "0xD75A38", VA = "0xD75A38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xD75B2C", Offset = "0xD75B2C", VA = "0xD75B2C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Action<string, int> onWaveStarted
	{
		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xD75C20", Offset = "0xD75C20", VA = "0xD75C20")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xD75D14", Offset = "0xD75D14", VA = "0xD75D14")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Action<string, int> onWaveEnded
	{
		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xD75E08", Offset = "0xD75E08", VA = "0xD75E08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xD75EFC", Offset = "0xD75EFC", VA = "0xD75EFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event Action<int, Player> onScore
	{
		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xD75FF0", Offset = "0xD75FF0", VA = "0xD75FF0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xD760E4", Offset = "0xD760E4", VA = "0xD760E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event Action<GameEndReason> onNonLastRoundEnded
	{
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD761D8", Offset = "0xD761D8", VA = "0xD761D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD762CC", Offset = "0xD762CC", VA = "0xD762CC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event Action<Player> onFloaterTaken
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD763C0", Offset = "0xD763C0", VA = "0xD763C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD764B4", Offset = "0xD764B4", VA = "0xD764B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event Action onQuit
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xD765A8", Offset = "0xD765A8", VA = "0xD765A8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xD76684", Offset = "0xD76684", VA = "0xD76684")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event Action onRoundStarted
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xD76760", Offset = "0xD76760", VA = "0xD76760")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xD7683C", Offset = "0xD7683C", VA = "0xD7683C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event Action<GameEndReason> onLastRoundEnded
	{
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xD76918", Offset = "0xD76918", VA = "0xD76918")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xD76A0C", Offset = "0xD76A0C", VA = "0xD76A0C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event Action OnGameStart
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xD7781C", Offset = "0xD7781C", VA = "0xD7781C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xD778F8", Offset = "0xD778F8", VA = "0xD778F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event Action<GameEndReason> OnGameEnd
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xD77B5C", Offset = "0xD77B5C", VA = "0xD77B5C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xD77C50", Offset = "0xD77C50", VA = "0xD77C50")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xD7729C", Offset = "0xD7729C", VA = "0xD7729C")]
	public static void BallContact()
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xD77310", Offset = "0xD77310", VA = "0xD77310")]
	public static void BallHitWall(HexTrudeManager.WallType wallType)
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xD7738C", Offset = "0xD7738C", VA = "0xD7738C")]
	public static void BallHitRacket(ShotInfo shot, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xD77520", Offset = "0xD77520", VA = "0xD77520")]
	public static void BallHitHex(ShotInfo shot, HexTile h)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xD7761C", Offset = "0xD7761C", VA = "0xD7761C")]
	public static void BallReturnedToPlayer(Player p)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0xD7778C", Offset = "0xD7778C", VA = "0xD7778C")]
	public static void Score(int score, Player p)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0xD779D4", Offset = "0xD779D4", VA = "0xD779D4")]
	private static void GameStarted()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0xD77D44", Offset = "0xD77D44", VA = "0xD77D44")]
	private static void GameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0xD77E94", Offset = "0xD77E94", VA = "0xD77E94")]
	public static void waveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0xD78000", Offset = "0xD78000", VA = "0xD78000")]
	public static void waveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0xD7816C", Offset = "0xD7816C", VA = "0xD7816C")]
	public static void gameInitialized()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0xD782D4", Offset = "0xD782D4", VA = "0xD782D4")]
	public static void gameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0xD78434", Offset = "0xD78434", VA = "0xD78434")]
	public static void roundEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0xD7858C", Offset = "0xD7858C", VA = "0xD7858C")]
	public static void floaterTaken(Player player)
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0xD786E4", Offset = "0xD786E4", VA = "0xD786E4")]
	public static void sessionStarted()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0xD78874", Offset = "0xD78874", VA = "0xD78874")]
	public static void quit()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0xD7890C", Offset = "0xD7890C", VA = "0xD7890C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0xD78958", Offset = "0xD78958", VA = "0xD78958")]
	public GameEventsManager()
	{
	}
}
[Token(Token = "0x200028C")]
public class HexTrudeManager : MonoBehaviour
{
	[Token(Token = "0x200028D")]
	public class Point
	{
		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Node node;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Hex> hexes;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int numHexes;

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD7F494", Offset = "0xD7F494", VA = "0xD7F494")]
		public Point(Vector3 p)
		{
		}
	}

	[Token(Token = "0x200028E")]
	public class Arc
	{
		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Arc next;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arc prev;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WallType _currentWallType;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Node _node1;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Node _node2;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 forward;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 center;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Hex _hex1;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Hex _hex2;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _normal;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool used;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool reveresed;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Point> _points;

		[Token(Token = "0x17000268")]
		public Node node1
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xD79154", Offset = "0xD79154", VA = "0xD79154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E04")]
			[Address(RVA = "0xD7F544", Offset = "0xD7F544", VA = "0xD7F544")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public Node node2
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xD79170", Offset = "0xD79170", VA = "0xD79170")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xD7F5DC", Offset = "0xD7F5DC", VA = "0xD7F5DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public Hex hex1
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xD7911C", Offset = "0xD7911C", VA = "0xD7911C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xD7F5F8", Offset = "0xD7F5F8", VA = "0xD7F5F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public Hex hex2
		{
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xD79138", Offset = "0xD79138", VA = "0xD79138")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xD7F600", Offset = "0xD7F600", VA = "0xD7F600")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public int higherLayer
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xD7F608", Offset = "0xD7F608", VA = "0xD7F608")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026D")]
		public Brick lowerBrick
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xD7F690", Offset = "0xD7F690", VA = "0xD7F690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public Brick higherBrick
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xD7F6D0", Offset = "0xD7F6D0", VA = "0xD7F6D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public Vector3 normal
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xD7946C", Offset = "0xD7946C", VA = "0xD7946C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000270")]
		public int numPoints
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xD7FC40", Offset = "0xD7FC40", VA = "0xD7FC40")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xD7F560", Offset = "0xD7F560", VA = "0xD7F560")]
		private void UpdateCenter()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xD7F710", Offset = "0xD7F710", VA = "0xD7F710")]
		public Brick GetOtherBrick(Brick b)
		{
			return null;
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xD7F884", Offset = "0xD7F884", VA = "0xD7F884")]
		public bool GetNormalAtPosition(Vector3 pos, out Vector3 retNormal)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xD79990", Offset = "0xD79990", VA = "0xD79990")]
		public Vector3 projectPointOnNeighbor(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xD7FA74", Offset = "0xD7FA74", VA = "0xD7FA74")]
		public Vector3 projectPointOnArc(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xD7FB4C", Offset = "0xD7FB4C", VA = "0xD7FB4C")]
		public bool isPointOnLeftSide(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xD7FBC8", Offset = "0xD7FBC8", VA = "0xD7FBC8")]
		public Point getPoint(int i)
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xD7FC88", Offset = "0xD7FC88", VA = "0xD7FC88")]
		public void addPoint(Point point)
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xD7B884", Offset = "0xD7B884", VA = "0xD7B884")]
		public void calculateNormal()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xD7F080", Offset = "0xD7F080", VA = "0xD7F080")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xD7FD38", Offset = "0xD7FD38", VA = "0xD7FD38")]
		public void _drawGizmos()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xD801BC", Offset = "0xD801BC", VA = "0xD801BC")]
		public Arc()
		{
		}
	}

	[Token(Token = "0x200028F")]
	public class Node
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Point point;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Arc> arcs;

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xD80244", Offset = "0xD80244", VA = "0xD80244")]
		public Node(Point p)
		{
		}
	}

	[Token(Token = "0x2000290")]
	public class Hex
	{
		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HexTile tile;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Arc> arcs;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Point> _points;

		[Token(Token = "0x40010A5")]
		private const float THRESH = 0.0001f;

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xD7AA58", Offset = "0xD7AA58", VA = "0xD7AA58")]
		public Hex(HexTile h)
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xD7AFA8", Offset = "0xD7AFA8", VA = "0xD7AFA8")]
		public void findSharedPoints(Hex other)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xD7B288", Offset = "0xD7B288", VA = "0xD7B288")]
		public void initArcs()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xD7B538", Offset = "0xD7B538", VA = "0xD7B538")]
		public void findSharedArcs()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xD7BB10", Offset = "0xD7BB10", VA = "0xD7BB10")]
		public void cleanup()
		{
		}
	}

	[Token(Token = "0x2000291")]
	private class Strip
	{
		[Token(Token = "0x2000292")]
		[CompilerGenerated]
		private sealed class <rebuild>d__44 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Strip <>4__this;

			[Token(Token = "0x17000271")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000E31")]
				[Address(RVA = "0xD82140", Offset = "0xD82140", VA = "0xD82140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E33")]
				[Address(RVA = "0xD82188", Offset = "0xD82188", VA = "0xD82188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0xD81664", Offset = "0xD81664", VA = "0xD81664")]
			[DebuggerHidden]
			public <rebuild>d__44(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2F")]
			[Address(RVA = "0xD81E64", Offset = "0xD81E64", VA = "0xD81E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0xD81E68", Offset = "0xD81E68", VA = "0xD81E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0xD82148", Offset = "0xD82148", VA = "0xD82148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000293")]
		[CompilerGenerated]
		private sealed class <initMesh>d__47 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Strip <>4__this;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <numPoints>5__2;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <numSteps>5__3;

			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <step>5__4;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <i>5__5;

			[Token(Token = "0x40010D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <mod>5__6;

			[Token(Token = "0x17000273")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6000E37")]
				[Address(RVA = "0xD835E4", Offset = "0xD835E4", VA = "0xD835E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E39")]
				[Address(RVA = "0xD8362C", Offset = "0xD8362C", VA = "0xD8362C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0xD818B8", Offset = "0xD818B8", VA = "0xD818B8")]
			[DebuggerHidden]
			public <initMesh>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0xD821E4", Offset = "0xD821E4", VA = "0xD821E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0xD821E8", Offset = "0xD821E8", VA = "0xD821E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0xD835EC", Offset = "0xD835EC", VA = "0xD835EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _numSegments;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arc firstArc;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh _mesh;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh _meshGlow;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh _meshBack;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MeshFilter _meshFilterGlow;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshFilter _meshFilterBack;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer _meshRendererGlow;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer _meshRendererBack;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Vector3> _points;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Vector3> _pointNormals;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<float> _mappingVcoord;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<int> _materialIndexes;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<float> _highlights;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<Vector3> _vertices;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<Vector3> _normals;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Vector3> _targetVertices;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<int>[] _triangles;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Vector2> _uv0;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<Color> _colors;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Vector3> _verticesGlow;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private List<Vector3> _targetVerticesGlow;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<int> _trianglesGlow;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<Vector2> _uv0Glow;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<Vector2> _uv1Glow;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Vector3> _verticesBack;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<Vector3> _targetVerticesBack;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<int>[] _trianglesBack;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] _int6;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int[] _intSteps6;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] _vec3Steps1;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector3[] _vec3Steps2;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector2[] _vec2Steps;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Color[] _colorSteps;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int _numWallTypes;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WallType[] _wallTypeByIndex;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _initialized;

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xD7C2F8", Offset = "0xD7C2F8", VA = "0xD7C2F8")]
		public Strip()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xD7DBEC", Offset = "0xD7DBEC", VA = "0xD7DBEC")]
		public void debug()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xD802E8", Offset = "0xD802E8", VA = "0xD802E8")]
		private void initPoints()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xD81438", Offset = "0xD81438", VA = "0xD81438")]
		private Material getMaterialByWallType(WallType wallType)
		{
			return null;
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xD81518", Offset = "0xD81518", VA = "0xD81518")]
		private Material getMaterialBackByWallType(WallType wallType)
		{
			return null;
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xD815F0", Offset = "0xD815F0", VA = "0xD815F0")]
		[IteratorStateMachine(typeof(<rebuild>d__44))]
		public IEnumerator<float> rebuild()
		{
			return null;
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xD8168C", Offset = "0xD8168C", VA = "0xD8168C")]
		private void weldSeamNormals()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xD813E0", Offset = "0xD813E0", VA = "0xD813E0")]
		private int getMaterialIndexFromWallType(WallType wallType)
		{
			return default(int);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xD81844", Offset = "0xD81844", VA = "0xD81844")]
		[IteratorStateMachine(typeof(<initMesh>d__47))]
		private IEnumerator<float> initMesh()
		{
			return null;
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xD818E0", Offset = "0xD818E0", VA = "0xD818E0")]
		public void updateVerts(float t)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xD7D28C", Offset = "0xD7D28C", VA = "0xD7D28C")]
		public void disable()
		{
		}
	}

	[Token(Token = "0x2000294")]
	public enum WallType
	{
		[Token(Token = "0x40010D9")]
		Bumper,
		[Token(Token = "0x40010DA")]
		Stopper,
		[Token(Token = "0x40010DB")]
		Blaster,
		[Token(Token = "0x40010DC")]
		Invalid
	}

	[Token(Token = "0x2000295")]
	[CompilerGenerated]
	private sealed class <switchTilesCo>d__74 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HexTrudeManager <>4__this;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool gameEnded;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool immediate;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <t>5__2;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <roomCenter>5__3;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <dontStop>5__4;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Strip>.Enumerator <>7__wrap4;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <w>5__6;

		[Token(Token = "0x17000275")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0xD84174", Offset = "0xD84174", VA = "0xD84174", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000276")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0xD841BC", Offset = "0xD841BC", VA = "0xD841BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xD7D75C", Offset = "0xD7D75C", VA = "0xD7D75C")]
		[DebuggerHidden]
		public <switchTilesCo>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xD83688", Offset = "0xD83688", VA = "0xD83688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xD836A4", Offset = "0xD836A4", VA = "0xD836A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xD84124", Offset = "0xD84124", VA = "0xD84124")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xD8417C", Offset = "0xD8417C", VA = "0xD8417C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HexTrudeManager inst;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Transition")]
	public float moveDuration;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Bumper")]
	public float bumperStrength;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float bumperCooldown;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bumperSnapAngle;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bumperCornerSize;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Model")]
	private bool walledBorders;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WallType borderWallType;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 3f)]
	public float layerHeight;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float pushAmount;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float pushBackAmount;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 0.5f)]
	public float chamfer;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 10f)]
	public float glowDistance;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Range(0f, 1f)]
	public float glowPush;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BezierCurve profileCurve;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material stopperMaterial;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Material bumperMaterial;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material blasterMaterial;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material stopperBackMaterial;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material bumperBackMaterial;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material blasterBackMaterial;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material glowMaterial;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float hitlightDuration;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HitLight hitlightBumperPrefab;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public HitLight hitlightStopperPrefab;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WallType overrideWallType;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool debug;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool overrideBricks;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<Room, Arc[]> _roomArcs;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Strip> _strips;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Strip> _prevStrips;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<Strip> _stripsPool;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	protected Vector3[] _profileNormalizedPoints;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected float[] _profileUValues;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	protected float[] _profilePointsNonFrontality;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly float cornerMultiplier;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static OneHumus.Math.Geometry.Segment _segment;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Vector4 _hitGlobalShaderVector;

	[Token(Token = "0x4001089")]
	private const string COROUTINES_TAG = "HexTrudeManager_Coroutines";

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _swhitchingTiles;

	[Token(Token = "0x400108B")]
	private const float DELAY_TIME = 0.3f;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _ballStoppedPlowingAt;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector4 _lastHitGlobalShaderVector;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _HextrudeHitID;

	[Token(Token = "0x17000265")]
	public Material _stopperMaterial
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xD789B8", Offset = "0xD789B8", VA = "0xD789B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000266")]
	public Material _bumperMaterial
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xD78AFC", Offset = "0xD78AFC", VA = "0xD78AFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000267")]
	public Material _blasterMaterial
	{
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xD78C40", Offset = "0xD78C40", VA = "0xD78C40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000020")]
	public static event Action onHextrusionStarted
	{
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xD7D2D8", Offset = "0xD7D2D8", VA = "0xD7D2D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xD7D3B4", Offset = "0xD7D3B4", VA = "0xD7D3B4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0xD78D84", Offset = "0xD78D84", VA = "0xD78D84")]
	private static int getHexLayer(Hex hex)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0xD78E98", Offset = "0xD78E98", VA = "0xD78E98")]
	public static float distanceFromBricksBoarder(Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0xD7918C", Offset = "0xD7918C", VA = "0xD7918C")]
	private static bool isPointOnSideWall(Vector3 hitPoint, Arc arc, out float dist, float radiusMultiplier)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0xD7948C", Offset = "0xD7948C", VA = "0xD7948C")]
	public static Arc getSideWallArc(Vector3 point, Brick brick, float radiusMultiplier = 1.1f)
	{
		return null;
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0xD78DF0", Offset = "0xD78DF0", VA = "0xD78DF0")]
	public static int getTileLayer(HexTile tile)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0xD79BA4", Offset = "0xD79BA4", VA = "0xD79BA4")]
	public static int getBrickLayer(Brick brick)
	{
		return default(int);
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0xD79C68", Offset = "0xD79C68", VA = "0xD79C68")]
	private static WallType getHexWallType(Hex hex)
	{
		return default(WallType);
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xD79D24", Offset = "0xD79D24", VA = "0xD79D24")]
	public static WallType getBrickWallType(Brick brick)
	{
		return default(WallType);
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xD79E5C", Offset = "0xD79E5C", VA = "0xD79E5C")]
	public static void stopperHit(Vector3 pos, bool corner = false, bool fromRemote = false)
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0xD79FEC", Offset = "0xD79FEC", VA = "0xD79FEC")]
	public static void bumperHit(Vector3 pos, float pitchBoost, bool fromRemote = false)
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0xD7A170", Offset = "0xD7A170", VA = "0xD7A170")]
	public void initRoom(Room room)
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0xD7BD00", Offset = "0xD7BD00", VA = "0xD7BD00")]
	private void initStrips(bool gameEnded = false)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0xD7CE08", Offset = "0xD7CE08", VA = "0xD7CE08")]
	private void setTilesHeight(bool gameEnded = false)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0xD7D028", Offset = "0xD7D028", VA = "0xD7D028")]
	private void onArenaShutdown()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0xD7D0BC", Offset = "0xD7D0BC", VA = "0xD7D0BC")]
	private void clearStrips()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0xD7D490", Offset = "0xD7D490", VA = "0xD7D490")]
	private void stopPlowing()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0xD7D56C", Offset = "0xD7D56C", VA = "0xD7D56C")]
	private void switchTiles(bool gameEnded = false, bool immediate = false)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0xD7D6C8", Offset = "0xD7D6C8", VA = "0xD7D6C8")]
	[IteratorStateMachine(typeof(<switchTilesCo>d__74))]
	private IEnumerator<float> switchTilesCo(bool gameEnded = false, bool immediate = false)
	{
		return null;
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0xD7D784", Offset = "0xD7D784", VA = "0xD7D784")]
	public void flatten()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0xD7D874", Offset = "0xD7D874", VA = "0xD7D874")]
	public void randomize(int seed)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0xD7D9CC", Offset = "0xD7D9CC", VA = "0xD7D9CC")]
	public void loadCurrentWave(bool immediate = false)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0xD7DA80", Offset = "0xD7DA80", VA = "0xD7DA80")]
	private void onWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0xD7DA88", Offset = "0xD7DA88", VA = "0xD7DA88")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0xD7DA8C", Offset = "0xD7DA8C", VA = "0xD7DA8C")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0xD7E488", Offset = "0xD7E488", VA = "0xD7E488")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0xD7E494", Offset = "0xD7E494", VA = "0xD7E494")]
	private void onProfileCurveUpdated()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0xD7EAC4", Offset = "0xD7EAC4", VA = "0xD7EAC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0xD7ED00", Offset = "0xD7ED00", VA = "0xD7ED00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0xD7EDA4", Offset = "0xD7EDA4", VA = "0xD7EDA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0xD7EED8", Offset = "0xD7EED8", VA = "0xD7EED8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0xD7EF4C", Offset = "0xD7EF4C", VA = "0xD7EF4C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0xD7F24C", Offset = "0xD7F24C", VA = "0xD7F24C")]
	public HexTrudeManager()
	{
	}
}
[Token(Token = "0x2000296")]
public class LightAndReflectionManager : MonoBehaviour
{
	[Token(Token = "0x2000297")]
	[CompilerGenerated]
	private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LightAndReflectionManager <>4__this;

		[Token(Token = "0x17000277")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0xD84A80", Offset = "0xD84A80", VA = "0xD84A80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000278")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0xD84AC8", Offset = "0xD84AC8", VA = "0xD84AC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xD84558", Offset = "0xD84558", VA = "0xD84558")]
		[DebuggerHidden]
		public <Start>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xD84870", Offset = "0xD84870", VA = "0xD84870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xD84874", Offset = "0xD84874", VA = "0xD84874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xD84A88", Offset = "0xD84A88", VA = "0xD84A88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LightAndReflectionManager inst;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color defaultReflectionColor;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ReflectionProbe probe;

	[NonSerialized]
	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float currentReflectionExposure;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color _targetReflectionColor;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color _currentReflectionColor;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color _lastReflectionColor;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color _targetLightColor;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color _currentLightColor;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ArenaLightAndReflection _currentArenaLNR;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _currentLNRAmountChanged;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _currentLNRAmount;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int tintColorID;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _tintID;

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xD84218", Offset = "0xD84218", VA = "0xD84218")]
	private void onArenaSelected()
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xD84350", Offset = "0xD84350", VA = "0xD84350")]
	private void onArenaShutdown()
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xD8435C", Offset = "0xD8435C", VA = "0xD8435C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xD844E4", Offset = "0xD844E4", VA = "0xD844E4")]
	[IteratorStateMachine(typeof(<Start>d__17))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xD84580", Offset = "0xD84580", VA = "0xD84580")]
	private float colorDistance(Color c1, Color c2)
	{
		return default(float);
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xD84598", Offset = "0xD84598", VA = "0xD84598")]
	public void OverrideLNRAmount(float amount)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xD845A8", Offset = "0xD845A8", VA = "0xD845A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xD84850", Offset = "0xD84850", VA = "0xD84850")]
	public LightAndReflectionManager()
	{
	}
}
[Token(Token = "0x2000298")]
public class MappingCacher : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000299")]
	private class CahceKeyValue
	{
		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint key;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] value;

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xD85A9C", Offset = "0xD85A9C", VA = "0xD85A9C")]
		public CahceKeyValue(uint key, float[] value)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200029A")]
	private class CachedDatabase
	{
		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string version;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CahceKeyValue[] data;

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xD854CC", Offset = "0xD854CC", VA = "0xD854CC")]
		public CachedDatabase(Dictionary<uint, float[]> pool)
		{
		}
	}

	[Token(Token = "0x200029B")]
	[CompilerGenerated]
	private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MappingCacher <>4__this;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000279")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E64")]
			[Address(RVA = "0xD861C0", Offset = "0xD861C0", VA = "0xD861C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E66")]
			[Address(RVA = "0xD86208", Offset = "0xD86208", VA = "0xD86208", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xD859DC", Offset = "0xD859DC", VA = "0xD859DC")]
		[DebuggerHidden]
		public <Start>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xD85AD4", Offset = "0xD85AD4", VA = "0xD85AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xD85AD8", Offset = "0xD85AD8", VA = "0xD85AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xD861C8", Offset = "0xD861C8", VA = "0xD861C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MappingCacher inst;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool validate;

	[Token(Token = "0x40010FA")]
	public const float EPSILON = 1E-05f;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset template;

	[Token(Token = "0x40010FC")]
	private const string FILE_NAME = "HexMapping.dat";

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<uint, float[]> _hexMappingPool;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _currentVersion;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _needToCacheArenas;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _needToSaveHexMapping;

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xD84AD0", Offset = "0xD84AD0", VA = "0xD84AD0")]
	public bool hasHexMapping(uint hash)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xD84B28", Offset = "0xD84B28", VA = "0xD84B28")]
	public float[] getHexMapping(uint hash)
	{
		return null;
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xD84B80", Offset = "0xD84B80", VA = "0xD84B80")]
	public void addHexMapping(uint hash, float[] mapping)
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xD84BF4", Offset = "0xD84BF4", VA = "0xD84BF4")]
	public bool hasSnakeMapping(uint hash)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xD84C4C", Offset = "0xD84C4C", VA = "0xD84C4C")]
	public float[] getSnakeMapping(uint hash)
	{
		return null;
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xD84CA4", Offset = "0xD84CA4", VA = "0xD84CA4")]
	public void addSnakeMapping(uint hash, float[] mapping)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xD84D18", Offset = "0xD84D18", VA = "0xD84D18")]
	public static void copyCachedDataToPath(string path)
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xD84E9C", Offset = "0xD84E9C", VA = "0xD84E9C")]
	public uint getSnakeHash(HexTile.HexDirection prevDir, HexTile.HexDirection nextDir)
	{
		return default(uint);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xD84EB4", Offset = "0xD84EB4", VA = "0xD84EB4")]
	private bool loadCachedData()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xD85368", Offset = "0xD85368", VA = "0xD85368")]
	private void saveCachedData()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xD8577C", Offset = "0xD8577C", VA = "0xD8577C")]
	public uint getHexHash(HexTile hex, List<HexTile> hexList)
	{
		return default(uint);
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xD858E0", Offset = "0xD858E0", VA = "0xD858E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xD85968", Offset = "0xD85968", VA = "0xD85968")]
	[IteratorStateMachine(typeof(<Start>d__23))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xD85A04", Offset = "0xD85A04", VA = "0xD85A04")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xD85A08", Offset = "0xD85A08", VA = "0xD85A08")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xD85A14", Offset = "0xD85A14", VA = "0xD85A14")]
	public MappingCacher()
	{
	}
}
[Token(Token = "0x200029C")]
public class MaterialsManager : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x200029D")]
	public class MaterialPool
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int initInstances;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInstances;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stack<Material> _unusedInstances;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _lastIndex;

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0xD873A0", Offset = "0xD873A0", VA = "0xD873A0")]
		private Material instantiate()
		{
			return null;
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xD86F88", Offset = "0xD86F88", VA = "0xD86F88")]
		public void InitPool()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xD874B0", Offset = "0xD874B0", VA = "0xD874B0")]
		public Material GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xD87670", Offset = "0xD87670", VA = "0xD87670")]
		public void ReturnInstance(Material instance)
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xD87788", Offset = "0xD87788", VA = "0xD87788")]
		public MaterialPool()
		{
		}
	}

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MaterialsManager inst;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Global")]
	public Material _defaultReflectionProbe;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material _freezeReflectionProbe;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _globalSphereFader;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material _ceilingRefaction;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D _blackTexture;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Shader _fadeToBlackPostProcessShader;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Bricks")]
	[SerializeField]
	private Material _brickBonus;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material _brickDowner;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material _brickDownerBlue;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material _brickSelection;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material _brickSnake;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material _brickSlider;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material _brickSliderAdditive;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material _buildingBricks;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Pools")]
	[SerializeField]
	private MaterialPool[] _brickTargetGroup;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MaterialPool _brickHealing;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MaterialPool _brickGlow;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public MaterialPool _brickGlow_empty_P1;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public MaterialPool _brickGlow_empty_P2;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public MaterialPool _brickFreezeGlow;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MaterialPool _brickFreezeGlow_empty;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MaterialPool _brickShield;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MaterialPool _brickIce;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MaterialPool _brickPortal;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public MaterialPool _brickBoosterSwitch;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private MaterialPool _brickRefractionBroken;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private MaterialPool _brickReflectionBroken;

	[NonSerialized]
	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Material skybox;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<Material, Material> _originalMaterials;

	[Token(Token = "0x1700027B")]
	public Material brickBonus
	{
		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xD86210", Offset = "0xD86210", VA = "0xD86210")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027C")]
	public Material brickDowner
	{
		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xD86354", Offset = "0xD86354", VA = "0xD86354")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027D")]
	public Material brickDownerBlue
	{
		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xD86498", Offset = "0xD86498", VA = "0xD86498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027E")]
	public Material brickSnake
	{
		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xD865DC", Offset = "0xD865DC", VA = "0xD865DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700027F")]
	public Material brickSlider
	{
		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xD86720", Offset = "0xD86720", VA = "0xD86720")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000280")]
	public MaterialPool[] brickTargetGroup
	{
		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xD86864", Offset = "0xD86864", VA = "0xD86864")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000281")]
	public MaterialPool brickHealing
	{
		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xD86964", Offset = "0xD86964", VA = "0xD86964")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000282")]
	public MaterialPool brickRefractionBroken
	{
		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xD86AB0", Offset = "0xD86AB0", VA = "0xD86AB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000283")]
	public MaterialPool brickReflectionBroken
	{
		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xD86BFC", Offset = "0xD86BFC", VA = "0xD86BFC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xD86D48", Offset = "0xD86D48", VA = "0xD86D48")]
	public static Material duplicateMaterial(Material m)
	{
		return null;
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xD86E80", Offset = "0xD86E80", VA = "0xD86E80")]
	public bool resetMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xD86F28", Offset = "0xD86F28", VA = "0xD86F28")]
	public static void initPool(MaterialPool[] pools)
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xD870A4", Offset = "0xD870A4", VA = "0xD870A4")]
	public static void initPool(MaterialPool pool)
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xD870B0", Offset = "0xD870B0", VA = "0xD870B0")]
	private void initAllPools()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xD8715C", Offset = "0xD8715C", VA = "0xD8715C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xD87318", Offset = "0xD87318", VA = "0xD87318")]
	public MaterialsManager()
	{
	}
}
[Token(Token = "0x200029E")]
public class Medals : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x200029F")]
	public class Bunch
	{
		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MedalType medal;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int count;

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xD88368", Offset = "0xD88368", VA = "0xD88368")]
		public Bunch()
		{
		}
	}

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Medals inst;

	[Token(Token = "0x400112E")]
	private const string MC_EVENT_ID_PREFIX = "MonthlyChallenge_";

	[Token(Token = "0x14000021")]
	public event Action onMedalAwarded
	{
		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xD8779C", Offset = "0xD8779C", VA = "0xD8779C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xD87838", Offset = "0xD87838", VA = "0xD87838")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xD878D4", Offset = "0xD878D4", VA = "0xD878D4", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xD8792C", Offset = "0xD8792C", VA = "0xD8792C")]
	public bool isMyEventMedalSet(string eventId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD87990", Offset = "0xD87990", VA = "0xD87990")]
	public void setMyEventMedal(string eventId, MedalType medal)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD87A90", Offset = "0xD87A90", VA = "0xD87A90")]
	public static string getMonthlyChallengeSetIdFromEventId(string eventId)
	{
		return null;
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD87B68", Offset = "0xD87B68", VA = "0xD87B68")]
	public static string getMonthlyChallengeEventId(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xD87BB4", Offset = "0xD87BB4", VA = "0xD87BB4")]
	public bool isMyMonthlyChallengeMedalSet(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xD87BCC", Offset = "0xD87BCC", VA = "0xD87BCC")]
	public void setMyMonthlyChallengeMedal(string setId, MedalType medal)
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xD87BFC", Offset = "0xD87BFC", VA = "0xD87BFC")]
	public List<Bunch> getAllMedals(PlayerProfileData profileData)
	{
		return null;
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xD88370", Offset = "0xD88370", VA = "0xD88370")]
	public List<Bunch> getAllMyMedals()
	{
		return null;
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0xD88388", Offset = "0xD88388", VA = "0xD88388")]
	public Medals()
	{
	}
}
[Token(Token = "0x20002A0")]
public class Pauser : MonoBehaviour
{
	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pauser inst;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _pausedForDashboard;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _pausedForPopUp;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _timeBeforePause;

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0xD88390", Offset = "0xD88390", VA = "0xD88390")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0xD883E8", Offset = "0xD883E8", VA = "0xD883E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0xD88560", Offset = "0xD88560", VA = "0xD88560")]
	private void OnPopUpPopped(Transform popUp)
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xD8856C", Offset = "0xD8856C", VA = "0xD8856C")]
	private void OnPopUpUnpopped()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xD88574", Offset = "0xD88574", VA = "0xD88574")]
	private void OnRoundStart()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xD88598", Offset = "0xD88598", VA = "0xD88598")]
	public void OnDashShown()
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xD88694", Offset = "0xD88694", VA = "0xD88694")]
	public void OnDashHidden()
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xD88828", Offset = "0xD88828", VA = "0xD88828")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xD8892C", Offset = "0xD8892C", VA = "0xD8892C")]
	public Pauser()
	{
	}
}
[Token(Token = "0x20002A1")]
public class PhysicsManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x20002A2")]
	[RequireComponent(typeof(Rigidbody))]
	public class PhysicsFollower : MonoBehaviour
	{
		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xD88CA4", Offset = "0xD88CA4", VA = "0xD88CA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xD88E20", Offset = "0xD88E20", VA = "0xD88E20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0xD88E80", Offset = "0xD88E80", VA = "0xD88E80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xD88F28", Offset = "0xD88F28", VA = "0xD88F28")]
		public PhysicsFollower()
		{
		}
	}

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PhysicsManager inst;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Scene _unscaledTimeScene;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private PhysicsScene _unscaledTimePhysicsScene;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _unscaledTimer;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _comingBackFromPause;

	[Token(Token = "0x400113A")]
	private const int MAX_ITERAIONS = 100;

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xD8893C", Offset = "0xD8893C", VA = "0xD8893C", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0xD88994", Offset = "0xD88994", VA = "0xD88994")]
	public void MoveToUnscaledTimeScene(GameObject go)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xD88AC4", Offset = "0xD88AC4", VA = "0xD88AC4")]
	public PhysicsFollower CreatePhysicsFollower(Rigidbody rb)
	{
		return null;
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xD88B20", Offset = "0xD88B20", VA = "0xD88B20")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xD88B2C", Offset = "0xD88B2C", VA = "0xD88B2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xD88BD4", Offset = "0xD88BD4", VA = "0xD88BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xD88C9C", Offset = "0xD88C9C", VA = "0xD88C9C")]
	public PhysicsManager()
	{
	}
}
[Token(Token = "0x20002A3")]
public class MultiplayerUpdateMsg : SimpleMessage
{
	[Token(Token = "0x20002A4")]
	[CompilerGenerated]
	private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MultiplayerUpdateMsg <>4__this;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xD89268", Offset = "0xD89268", VA = "0xD89268", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA8")]
			[Address(RVA = "0xD892B0", Offset = "0xD892B0", VA = "0xD892B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xD89054", Offset = "0xD89054", VA = "0xD89054")]
		[DebuggerHidden]
		public <Start>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xD8919C", Offset = "0xD8919C", VA = "0xD8919C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xD891A0", Offset = "0xD891A0", VA = "0xD891A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xD89270", Offset = "0xD89270", VA = "0xD89270", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[Tooltip("Debug")]
	public bool forceShow;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerUpdateMsg inst;

	[Token(Token = "0x17000284")]
	protected override bool playerIsQualified
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xD8907C", Offset = "0xD8907C", VA = "0xD8907C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000285")]
	protected override string popUpSeenByUserKey
	{
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xD8912C", Offset = "0xD8912C", VA = "0xD8912C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000286")]
	public override bool needToShow
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xD8916C", Offset = "0xD8916C", VA = "0xD8916C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xD88F30", Offset = "0xD88F30", VA = "0xD88F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xD88FE0", Offset = "0xD88FE0", VA = "0xD88FE0")]
	[IteratorStateMachine(typeof(<Start>d__3))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xD89174", Offset = "0xD89174", VA = "0xD89174")]
	public MultiplayerUpdateMsg()
	{
	}
}
[Token(Token = "0x20002A5")]
public class NxMessage : SimpleMessage, ISingleton
{
	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NxMessage inst;

	[Token(Token = "0x17000289")]
	protected override string popUpSeenByUserKey
	{
		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xD89310", Offset = "0xD89310", VA = "0xD89310", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xD892B8", Offset = "0xD892B8", VA = "0xD892B8", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xD89350", Offset = "0xD89350", VA = "0xD89350")]
	public NxMessage()
	{
	}
}
[Token(Token = "0x20002A6")]
public abstract class SimpleMessage : MonoBehaviour
{
	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerLevel minLevel;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool skipNewPlayers;

	[Token(Token = "0x1700028A")]
	protected virtual bool playerIsQualified
	{
		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xD89090", Offset = "0xD89090", VA = "0xD89090", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028B")]
	protected abstract string popUpSeenByUserKey
	{
		[Token(Token = "0x6000EAD")]
		get;
	}

	[Token(Token = "0x1700028C")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xD89364", Offset = "0xD89364", VA = "0xD89364")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xD88FB8", Offset = "0xD88FB8", VA = "0xD88FB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700028D")]
	public virtual bool needToShow
	{
		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xD8938C", Offset = "0xD8938C", VA = "0xD8938C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xD89188", Offset = "0xD89188", VA = "0xD89188")]
	protected SimpleMessage()
	{
	}
}
[Token(Token = "0x20002A7")]
public class WelcomePopups : MonoBehaviour
{
	[Token(Token = "0x20002A8")]
	[CompilerGenerated]
	private sealed class <showDelayed>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WelcomePopups <>4__this;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool gameStart;

		[Token(Token = "0x17000290")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0xD89B5C", Offset = "0xD89B5C", VA = "0xD89B5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xD89BA4", Offset = "0xD89BA4", VA = "0xD89BA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xD8998C", Offset = "0xD8998C", VA = "0xD8998C")]
		[DebuggerHidden]
		public <showDelayed>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xD89A98", Offset = "0xD89A98", VA = "0xD89A98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xD89A9C", Offset = "0xD89A9C", VA = "0xD89A9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xD89B64", Offset = "0xD89B64", VA = "0xD89B64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBetweenPopups;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sfxVolume;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float showDelay;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static WelcomePopups inst;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _showing;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	private bool _gameStart;

	[Token(Token = "0x1700028E")]
	public bool needToShow
	{
		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xD894D8", Offset = "0xD894D8", VA = "0xD894D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700028F")]
	public bool showing
	{
		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xD896A4", Offset = "0xD896A4", VA = "0xD896A4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0xD89480", Offset = "0xD89480", VA = "0xD89480")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0xD896AC", Offset = "0xD896AC", VA = "0xD896AC")]
	public void show(bool gameStart, bool delay = true)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0xD89730", Offset = "0xD89730", VA = "0xD89730")]
	private void _show()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0xD898F4", Offset = "0xD898F4", VA = "0xD898F4")]
	[IteratorStateMachine(typeof(<showDelayed>d__13))]
	private IEnumerator showDelayed(bool gameStart, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0xD899B4", Offset = "0xD899B4", VA = "0xD899B4")]
	public void onPopupDone()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xD89A7C", Offset = "0xD89A7C", VA = "0xD89A7C")]
	public WelcomePopups()
	{
	}
}
[Token(Token = "0x20002A9")]
public class YURMessage : SimpleMessage, ISingleton
{
	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static YURMessage inst;

	[Token(Token = "0x17000292")]
	protected override string popUpSeenByUserKey
	{
		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xD89C04", Offset = "0xD89C04", VA = "0xD89C04", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xD89BAC", Offset = "0xD89BAC", VA = "0xD89BAC", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xD89C44", Offset = "0xD89C44", VA = "0xD89C44")]
	public YURMessage()
	{
	}
}
[Token(Token = "0x20002AA")]
[RequireComponent(typeof(Renderer))]
public class PortalVortex : MonoBehaviour
{
	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer _rend;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _mat;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _strengthID;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _angleID;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timer;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _duration;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isPlaying;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _isEntering;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Quaternion ROTATION_OFFSET;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3 UP;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly Vector3 ONE;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly float Z_OFFSET;

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xD89C58", Offset = "0xD89C58", VA = "0xD89C58")]
	private void init(Vector3 hitPos, float duration)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xD89ED0", Offset = "0xD89ED0", VA = "0xD89ED0")]
	public void enter(Vector3 hitPos, float duration)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xD89F78", Offset = "0xD89F78", VA = "0xD89F78")]
	public void exit(Vector3 hitPos, float duration)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xD8A020", Offset = "0xD8A020", VA = "0xD8A020")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xD8A100", Offset = "0xD8A100", VA = "0xD8A100")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xD8A2D4", Offset = "0xD8A2D4", VA = "0xD8A2D4")]
	public PortalVortex()
	{
	}
}
[Serializable]
[Token(Token = "0x20002AB")]
public class DemoLockTextData
{
	[Serializable]
	[Token(Token = "0x20002AC")]
	public class StoreLink
	{
		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string English;

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xD8A3D8", Offset = "0xD8A3D8", VA = "0xD8A3D8")]
		public StoreLink()
		{
		}
	}

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public StoreLink storeLink;

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xD8A3D0", Offset = "0xD8A3D0", VA = "0xD8A3D0")]
	public DemoLockTextData()
	{
	}
}
[Token(Token = "0x20002AD")]
public class DemoLockText : RemoteConfig<DemoLockTextData>
{
	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DemoLockText inst;

	[Token(Token = "0x17000293")]
	public bool ready
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xD8A3E0", Offset = "0xD8A3E0", VA = "0xD8A3E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000294")]
	public string StoreLinkText
	{
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xD8A480", Offset = "0xD8A480", VA = "0xD8A480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xD8A428", Offset = "0xD8A428", VA = "0xD8A428")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xD8A52C", Offset = "0xD8A52C", VA = "0xD8A52C")]
	public DemoLockText()
	{
	}
}
[Serializable]
[Token(Token = "0x20002AE")]
public class EventMedalsData
{
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class Event
	{
		[Serializable]
		[Token(Token = "0x20002B0")]
		public class Medalist
		{
			[Token(Token = "0x4001163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string medal;

			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0xD8A584", Offset = "0xD8A584", VA = "0xD8A584")]
			public Medalist()
			{
			}
		}

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string eventId;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Medalist[] medalists;

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xD8A57C", Offset = "0xD8A57C", VA = "0xD8A57C")]
		public Event()
		{
		}
	}

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Event[] events;

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xD8A574", Offset = "0xD8A574", VA = "0xD8A574")]
	public EventMedalsData()
	{
	}
}
[Token(Token = "0x20002B1")]
public class EventMedals : RemoteConfig<EventMedalsData>
{
	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private sealed class <awardMedals>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EventMedals <>4__this;

		[Token(Token = "0x17000296")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EDB")]
			[Address(RVA = "0xD8AAC0", Offset = "0xD8AAC0", VA = "0xD8AAC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EDD")]
			[Address(RVA = "0xD8AB08", Offset = "0xD8AB08", VA = "0xD8AB08", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xD8A6C0", Offset = "0xD8A6C0", VA = "0xD8A6C0")]
		[DebuggerHidden]
		public <awardMedals>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xD8A730", Offset = "0xD8A730", VA = "0xD8A730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xD8A734", Offset = "0xD8A734", VA = "0xD8A734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xD8AAC8", Offset = "0xD8AAC8", VA = "0xD8AAC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EventMedals inst;

	[Token(Token = "0x17000295")]
	public bool ready
	{
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xD8A58C", Offset = "0xD8A58C", VA = "0xD8A58C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0xD8A5D4", Offset = "0xD8A5D4", VA = "0xD8A5D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0xD8A62C", Offset = "0xD8A62C", VA = "0xD8A62C", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0xD8A64C", Offset = "0xD8A64C", VA = "0xD8A64C")]
	[IteratorStateMachine(typeof(<awardMedals>d__5))]
	private IEnumerator awardMedals()
	{
		return null;
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0xD8A6E8", Offset = "0xD8A6E8", VA = "0xD8A6E8")]
	public EventMedals()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B3")]
public class GenericData
{
	[Serializable]
	[Token(Token = "0x20002B4")]
	public class Multiplayer
	{
		[Serializable]
		[Token(Token = "0x20002B5")]
		public class SetWeight
		{
			[Token(Token = "0x400116B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string setId;

			[Token(Token = "0x400116C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float weight;

			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xD8AB20", Offset = "0xD8AB20", VA = "0xD8AB20")]
			public SetWeight()
			{
			}
		}

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SetWeight[] setWeights;

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xD8AB18", Offset = "0xD8AB18", VA = "0xD8AB18")]
		public Multiplayer()
		{
		}
	}

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Multiplayer multiplayer;

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xD8AB10", Offset = "0xD8AB10", VA = "0xD8AB10")]
	public GenericData()
	{
	}
}
[Token(Token = "0x20002B6")]
public class GenericRemoteConfig : RemoteConfig<GenericData>, ISingleton
{
	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GenericRemoteConfig inst;

	[Token(Token = "0x17000298")]
	public bool ready
	{
		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xD8AB28", Offset = "0xD8AB28", VA = "0xD8AB28")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000299")]
	public GenericData data
	{
		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xD8AB70", Offset = "0xD8AB70", VA = "0xD8AB70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xD8AB78", Offset = "0xD8AB78", VA = "0xD8AB78", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xD8ABD0", Offset = "0xD8ABD0", VA = "0xD8ABD0")]
	public GenericRemoteConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x20002B7")]
public class MultiplayerSeasonsData
{
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class Season
	{
		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string leaderboard;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string type;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string end;

		[Token(Token = "0x1700029A")]
		public bool IsCurrent
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xD8AC20", Offset = "0xD8AC20", VA = "0xD8AC20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029B")]
		public DateTime EndDate
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xD8AC2C", Offset = "0xD8AC2C", VA = "0xD8AC2C")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0xD8AD64", Offset = "0xD8AD64", VA = "0xD8AD64")]
		public Season()
		{
		}
	}

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Season> seasons;

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xD8AC18", Offset = "0xD8AC18", VA = "0xD8AC18")]
	public MultiplayerSeasonsData()
	{
	}
}
[Token(Token = "0x20002B9")]
public class MultiplayerSeasons : RemoteConfig<MultiplayerSeasonsData>, ISingleton
{
	[Token(Token = "0x20002BA")]
	[CompilerGenerated]
	private sealed class <waitForProfileCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiplayerSeasons <>4__this;

		[Token(Token = "0x170002A8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0xD8BA58", Offset = "0xD8BA58", VA = "0xD8BA58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F07")]
			[Address(RVA = "0xD8BAA0", Offset = "0xD8BAA0", VA = "0xD8BAA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xD8B46C", Offset = "0xD8B46C", VA = "0xD8B46C")]
		[DebuggerHidden]
		public <waitForProfileCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xD8B8C4", Offset = "0xD8B8C4", VA = "0xD8B8C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xD8B8C8", Offset = "0xD8B8C8", VA = "0xD8B8C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xD8BA60", Offset = "0xD8BA60", VA = "0xD8BA60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002BB")]
	[CompilerGenerated]
	private sealed class <debugKeysCo>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MultiplayerSeasons <>4__this;

		[Token(Token = "0x170002AA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0xD8BBD8", Offset = "0xD8BBD8", VA = "0xD8BBD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0xD8BC20", Offset = "0xD8BC20", VA = "0xD8BC20", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xD8B494", Offset = "0xD8B494", VA = "0xD8B494")]
		[DebuggerHidden]
		public <debugKeysCo>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xD8BAFC", Offset = "0xD8BAFC", VA = "0xD8BAFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xD8BB00", Offset = "0xD8BB00", VA = "0xD8BB00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xD8BBE0", Offset = "0xD8BBE0", VA = "0xD8BBE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PlayerLevel minLevel;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerSeasons inst;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _debugActualLeaderboard;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _newMsgToShowUser;

	[Token(Token = "0x1700029C")]
	private DebugSettings.Multiplayer.Seasons debugConfig
	{
		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0xD8AD6C", Offset = "0xD8AD6C", VA = "0xD8AD6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700029D")]
	public bool ready
	{
		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0xD8ADD4", Offset = "0xD8ADD4", VA = "0xD8ADD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700029E")]
	public int numSeasons
	{
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0xD8AE60", Offset = "0xD8AE60", VA = "0xD8AE60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700029F")]
	private MultiplayerSeasonsData.Season currentSeason
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xD8AF10", Offset = "0xD8AF10", VA = "0xD8AF10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A0")]
	private MultiplayerSeasonsData.Season previousSeason
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xD8AF7C", Offset = "0xD8AF7C", VA = "0xD8AF7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A1")]
	public string seasonName
	{
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xD8AFE8", Offset = "0xD8AFE8", VA = "0xD8AFE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A2")]
	private string seasonLeaderboard
	{
		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0xD8B004", Offset = "0xD8B004", VA = "0xD8B004")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A3")]
	private string seasonType
	{
		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0xD8B020", Offset = "0xD8B020", VA = "0xD8B020")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002A4")]
	private bool playerIsQualified
	{
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0xD8B3D0", Offset = "0xD8B3D0", VA = "0xD8B3D0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A5")]
	private bool needToReset
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xD8B614", Offset = "0xD8B614", VA = "0xD8B614")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002A6")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0xD8B84C", Offset = "0xD8B84C", VA = "0xD8B84C")]
		set
		{
		}
	}

	[Token(Token = "0x170002A7")]
	public bool needToShow
	{
		[Token(Token = "0x6000F00")]
		[Address(RVA = "0xD89678", Offset = "0xD89678", VA = "0xD89678")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000022")]
	public event Action changed
	{
		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0xD8B03C", Offset = "0xD8B03C", VA = "0xD8B03C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0xD8B0D8", Offset = "0xD8B0D8", VA = "0xD8B0D8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xD8AEB0", Offset = "0xD8AEB0", VA = "0xD8AEB0")]
	public MultiplayerSeasonsData.Season getSeason(int index)
	{
		return null;
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xD8B174", Offset = "0xD8B174", VA = "0xD8B174")]
	private void onChanged()
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xD8B190", Offset = "0xD8B190", VA = "0xD8B190", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xD8B1E8", Offset = "0xD8B1E8", VA = "0xD8B1E8", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xD8B2E8", Offset = "0xD8B2E8", VA = "0xD8B2E8")]
	[IteratorStateMachine(typeof(<waitForProfileCo>d__28))]
	private IEnumerator<float> waitForProfileCo()
	{
		return null;
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xD8B35C", Offset = "0xD8B35C", VA = "0xD8B35C")]
	[IteratorStateMachine(typeof(<debugKeysCo>d__29))]
	private IEnumerator<float> debugKeysCo()
	{
		return null;
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0xD8B4BC", Offset = "0xD8B4BC", VA = "0xD8B4BC", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xD8B528", Offset = "0xD8B528", VA = "0xD8B528")]
	private void fakeNewSeasonNow()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xD8B5E0", Offset = "0xD8B5E0", VA = "0xD8B5E0")]
	private void onReady()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD8B684", Offset = "0xD8B684", VA = "0xD8B684")]
	private void resetUserProfile()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xD8B874", Offset = "0xD8B874", VA = "0xD8B874")]
	public MultiplayerSeasons()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BC")]
public class OSTReleaseData
{
	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool released;

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xD8BC7C", Offset = "0xD8BC7C", VA = "0xD8BC7C")]
	public OSTReleaseData()
	{
	}
}
[Token(Token = "0x20002BD")]
public class OSTRelease : RemoteConfig<OSTReleaseData>
{
	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public PlayerLevel minLevel;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Debug")]
	public bool forceShow;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OSTRelease inst;

	[Token(Token = "0x4001182")]
	private const string ostReleasedKey = "ost_released";

	[Token(Token = "0x4001183")]
	private const string popUpSeenByUserKey = "ost_release_seen";

	[Token(Token = "0x170002AC")]
	private bool playerIsQualified
	{
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xD8BE08", Offset = "0xD8BE08", VA = "0xD8BE08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002AD")]
	public bool ostReleased
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xD8BEB4", Offset = "0xD8BEB4", VA = "0xD8BEB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xD8BD44", Offset = "0xD8BD44", VA = "0xD8BD44")]
		set
		{
		}
	}

	[Token(Token = "0x170002AE")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xD8BF04", Offset = "0xD8BF04", VA = "0xD8BF04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xD8BD90", Offset = "0xD8BD90", VA = "0xD8BD90")]
		set
		{
		}
	}

	[Token(Token = "0x170002AF")]
	public bool needToShow
	{
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xD89648", Offset = "0xD89648", VA = "0xD89648")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xD8BC84", Offset = "0xD8BC84", VA = "0xD8BC84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xD8BDDC", Offset = "0xD8BDDC", VA = "0xD8BDDC", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xD8BF54", Offset = "0xD8BF54", VA = "0xD8BF54")]
	public OSTRelease()
	{
	}
}
[Serializable]
[Token(Token = "0x20002BE")]
public class RankingData
{
	[Serializable]
	[Token(Token = "0x20002BF")]
	public class Levels
	{
		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xp;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xD8BFAC", Offset = "0xD8BFAC", VA = "0xD8BFAC")]
		public Levels()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C0")]
	public class General
	{
		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float incompleteWaveXpRatio;

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xD8BFB4", Offset = "0xD8BFB4", VA = "0xD8BFB4")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C1")]
	public class Solo
	{
		[Serializable]
		[Token(Token = "0x20002C2")]
		public class Campaign
		{
			[Token(Token = "0x400118F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] xpPerWaveByStage;

			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xD8BFC4", Offset = "0xD8BFC4", VA = "0xD8BFC4")]
			public Campaign()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002C3")]
		public class MonthlyChallenge
		{
			[Token(Token = "0x4001190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float xpPerWave;

			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xD8BFCC", Offset = "0xD8BFCC", VA = "0xD8BFCC")]
			public MonthlyChallenge()
			{
			}
		}

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Campaign campaign;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonthlyChallenge monthlyChallenge;

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xD8BFBC", Offset = "0xD8BFBC", VA = "0xD8BFBC")]
		public Solo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C4")]
	public class ArcadeStyleXp
	{
		[Serializable]
		[Token(Token = "0x20002C5")]
		public class XpDifficultyFactor
		{
			[Token(Token = "0x4001193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float maxDifficulty;

			[Token(Token = "0x4001194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxFactor;

			[Token(Token = "0x6000F1F")]
			[Address(RVA = "0xD8BFDC", Offset = "0xD8BFDC", VA = "0xD8BFDC")]
			public XpDifficultyFactor()
			{
			}
		}

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float xpPerWaveBase;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XpDifficultyFactor xpDifficultyFactor;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xD8BFD4", Offset = "0xD8BFD4", VA = "0xD8BFD4")]
		public ArcadeStyleXp()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C6")]
	public class Arcade
	{
		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeStyleXp classic;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ArcadeStyleXp nightmare;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xD8BFE4", Offset = "0xD8BFE4", VA = "0xD8BFE4")]
		public Arcade()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C7")]
	public class CoOp
	{
		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ArcadeStyleXp classic;

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xD8BFEC", Offset = "0xD8BFEC", VA = "0xD8BFEC")]
		public CoOp()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002C8")]
	public class Versus
	{
		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float xpPerWave;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float xpPerWin;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xpPerRatingGain;

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xD8BFF4", Offset = "0xD8BFF4", VA = "0xD8BFF4")]
		public Versus()
		{
		}
	}

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Levels[] levels;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public General general;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Solo solo;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Arcade arcade;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CoOp coOp;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Versus versus;

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xD8BFA4", Offset = "0xD8BFA4", VA = "0xD8BFA4")]
	public RankingData()
	{
	}
}
[Token(Token = "0x20002C9")]
public class Ranking : RemoteConfig<RankingData>, ISingleton
{
	[Token(Token = "0x400119B")]
	private const float minGameDurationForAnyXp = 5f;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Ranking inst;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PlayerLevel[] _levels;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UISettings.LocalizedTexts.PlayerLevels _levelTexts;

	[Token(Token = "0x170002B0")]
	public bool ready
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xD8BFFC", Offset = "0xD8BFFC", VA = "0xD8BFFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xD8C044", Offset = "0xD8C044", VA = "0xD8C044", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xD8C0AC", Offset = "0xD8C0AC", VA = "0xD8C0AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xD8C120", Offset = "0xD8C120", VA = "0xD8C120")]
	public PlayerLevel getLevelByXp(int xp)
	{
		return default(PlayerLevel);
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xD8C264", Offset = "0xD8C264", VA = "0xD8C264")]
	public int GetRequiredXpForLevel(PlayerLevel level)
	{
		return default(int);
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xD8C464", Offset = "0xD8C464", VA = "0xD8C464")]
	public LocalizedString levelTerm(PlayerLevel level)
	{
		return default(LocalizedString);
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xD8C804", Offset = "0xD8C804", VA = "0xD8C804")]
	private int levelIndex(PlayerLevel level)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xD8C87C", Offset = "0xD8C87C", VA = "0xD8C87C")]
	public int CalcArcadeXp(ArcadeType arcadeType)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xD8D020", Offset = "0xD8D020", VA = "0xD8D020")]
	public int CalcCoOpXp()
	{
		return default(int);
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xD8CA6C", Offset = "0xD8CA6C", VA = "0xD8CA6C")]
	private int CalcArcadeStyleXp(RankingData.ArcadeStyleXp arcadeStyleXp)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xD8D14C", Offset = "0xD8D14C", VA = "0xD8D14C")]
	public int CalcSoloXp(string setId)
	{
		return default(int);
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xD8D7BC", Offset = "0xD8D7BC", VA = "0xD8D7BC")]
	public int CalcVersusXp()
	{
		return default(int);
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xD8DED0", Offset = "0xD8DED0", VA = "0xD8DED0")]
	public Ranking()
	{
	}
}
[Token(Token = "0x20002CA")]
public class RemoteConfig<Data> : MonoBehaviour
{
	[Token(Token = "0x20002CB")]
	[CompilerGenerated]
	private sealed class <readCo>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RemoteConfig<Data> <>4__this;

		[Token(Token = "0x170002B4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F41")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F43")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3E")]
		[DebuggerHidden]
		public <readCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3F")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F40")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F42")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CC")]
	[CompilerGenerated]
	private sealed class <readDataCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float <>2__current;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RemoteConfig<Data> <>4__this;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <fetchedOnline>5__2;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool <offlineable>5__3;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string <url>5__4;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private UnityWebRequest <www>5__5;

		[Token(Token = "0x170002B6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F48")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4A")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F44")]
		[DebuggerHidden]
		public <readDataCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000F45")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F46")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F47")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000F49")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string resourceName;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float updateInterval;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool allowOffline;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool forceOffline;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool clearCache;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool readOfflineFirst;

	[Token(Token = "0x40011A5")]
	private const string keyPrefix = "remote_config_cache_";

	[Token(Token = "0x40011A6")]
	private const int WWW_TIMEOUT = 10;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected Data _data;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private CoroutineHandle _readDataRoutine;

	[Token(Token = "0x170002B1")]
	public string local
	{
		[Token(Token = "0x6000F31")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B2")]
	private string key
	{
		[Token(Token = "0x6000F32")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002B3")]
	protected bool dataLoaded
	{
		[Token(Token = "0x6000F33")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F34")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000F35")]
	private void OnOnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6000F36")]
	[IteratorStateMachine(typeof(RemoteConfig<>.<readCo>d__18))]
	private IEnumerator<float> readCo()
	{
		return null;
	}

	[Token(Token = "0x6000F37")]
	[IteratorStateMachine(typeof(RemoteConfig<>.<readDataCo>d__19))]
	private IEnumerator<float> readDataCo()
	{
		return null;
	}

	[Token(Token = "0x6000F38")]
	private string readOffline()
	{
		return null;
	}

	[Token(Token = "0x6000F39")]
	private bool parseData(string textResponse)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3A")]
	private void OnDataParsed(bool isOnline)
	{
	}

	[Token(Token = "0x6000F3B")]
	protected virtual void onDataParsed(bool isOnline)
	{
	}

	[Token(Token = "0x6000F3C")]
	protected virtual void onDataParsed()
	{
	}

	[Token(Token = "0x6000F3D")]
	public RemoteConfig()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CD")]
public class RNXVersionData
{
	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string minSupportedGameVersion;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string minSupportedMultiplayerVersion;

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xD8E05C", Offset = "0xD8E05C", VA = "0xD8E05C")]
	public RNXVersionData()
	{
	}
}
[Token(Token = "0x20002CE")]
public class RemoteRNXVersion : RemoteConfig<RNXVersionData>, ISingleton
{
	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RemoteRNXVersion inst;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RacketVersion _minSupportedGameVersion;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RacketVersion _minSupportedMultiplayerVersion;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RacketVersion _lastPrintedMinSupportedMultiplayerVersion;

	[Token(Token = "0x170002B8")]
	public bool ready
	{
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xD8E064", Offset = "0xD8E064", VA = "0xD8E064")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002B9")]
	public static bool multiplayerVersionSupported
	{
		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xD8E418", Offset = "0xD8E418", VA = "0xD8E418")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000023")]
	public event Action multiplayerVersionSupportedChanged
	{
		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xD8E0AC", Offset = "0xD8E0AC", VA = "0xD8E0AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xD8E148", Offset = "0xD8E148", VA = "0xD8E148")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xD8E1E4", Offset = "0xD8E1E4", VA = "0xD8E1E4")]
	private void onMultiplayerVersionSupportedChanged()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xD8E200", Offset = "0xD8E200", VA = "0xD8E200", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xD8E258", Offset = "0xD8E258", VA = "0xD8E258", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xD8E544", Offset = "0xD8E544", VA = "0xD8E544")]
	public RemoteRNXVersion()
	{
	}
}
[Serializable]
[Token(Token = "0x20002CF")]
public class SoloProgressData
{
	[Serializable]
	[Token(Token = "0x20002D0")]
	public class Set
	{
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] starThresholds;

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xD8E594", Offset = "0xD8E594", VA = "0xD8E594")]
		public Set()
		{
		}
	}

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Set[] sets;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xD8E58C", Offset = "0xD8E58C", VA = "0xD8E58C")]
	public SoloProgressData()
	{
	}
}
[Token(Token = "0x20002D1")]
public class SoloProgress : RemoteConfig<SoloProgressData>, ISingleton
{
	[Token(Token = "0x20002D2")]
	public class StarsEarned
	{
		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int[] numStars;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numPotentialStars;

		[Token(Token = "0x170002BC")]
		public int totalNumStars
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0xD8F580", Offset = "0xD8F580", VA = "0xD8F580")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xD8F1A0", Offset = "0xD8F1A0", VA = "0xD8F1A0")]
		public StarsEarned()
		{
		}
	}

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloProgress inst;

	[Token(Token = "0x170002BA")]
	public static bool Ready
	{
		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xD8E59C", Offset = "0xD8E59C", VA = "0xD8E59C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002BB")]
	public bool ready
	{
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xD8E640", Offset = "0xD8E640", VA = "0xD8E640")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xD8E688", Offset = "0xD8E688", VA = "0xD8E688", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xD8E6E0", Offset = "0xD8E6E0", VA = "0xD8E6E0")]
	public SoloProgressData.Set getSetInfo(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xD8E838", Offset = "0xD8E838", VA = "0xD8E838")]
	public int getSetNumStarsEarned(PlayerProfileData.Solo.Set setStats)
	{
		return default(int);
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xD8EF00", Offset = "0xD8EF00", VA = "0xD8EF00")]
	public StarsEarned getTotalStarsEarned(PlayerProfileData profileData)
	{
		return null;
	}

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xD8F204", Offset = "0xD8F204", VA = "0xD8F204")]
	public StarsEarned getStarsEarnedInStage(int stageIndex)
	{
		return null;
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xD8F538", Offset = "0xD8F538", VA = "0xD8F538")]
	public SoloProgress()
	{
	}
}
[Token(Token = "0x20002D3")]
public class SoloContent : MonoBehaviour, ISingleton
{
	[Serializable]
	[Token(Token = "0x20002D4")]
	public struct StageInput
	{
		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SoloSetMenuItem[] soloSetMenuItems;
	}

	[Token(Token = "0x20002D5")]
	public class Stage
	{
		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Set> sets;

		[Token(Token = "0x170002C1")]
		public bool isLast
		{
			[Token(Token = "0x6000F69")]
			[Address(RVA = "0xD900CC", Offset = "0xD900CC", VA = "0xD900CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C2")]
		public Stage next
		{
			[Token(Token = "0x6000F6A")]
			[Address(RVA = "0xD90148", Offset = "0xD90148", VA = "0xD90148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xD900BC", Offset = "0xD900BC", VA = "0xD900BC")]
		public Stage()
		{
		}
	}

	[Token(Token = "0x20002D6")]
	public class Set
	{
		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stage stage;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloSetMenuItem uiItem;

		[Token(Token = "0x170002C3")]
		private int indexInStage
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0xD901E0", Offset = "0xD901E0", VA = "0xD901E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C4")]
		public bool isLastInStage
		{
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0xD9024C", Offset = "0xD9024C", VA = "0xD9024C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public Set next
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0xD902B0", Offset = "0xD902B0", VA = "0xD902B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xD900B4", Offset = "0xD900B4", VA = "0xD900B4")]
		public Set()
		{
		}
	}

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SoloSetMenuItem tutorialSoloSetMenuItem;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StageInput[] stageUis;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloContent inst;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Stage> _stages;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Set> _sets;

	[Token(Token = "0x170002BD")]
	public List<Stage> stages
	{
		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xD8F5C4", Offset = "0xD8F5C4", VA = "0xD8F5C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BE")]
	public List<Set> sets
	{
		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xD8F5CC", Offset = "0xD8F5CC", VA = "0xD8F5CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002BF")]
	public IEnumerable<Set> iterAllSets
	{
		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xD8F5D4", Offset = "0xD8F5D4", VA = "0xD8F5D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002C0")]
	public int CountSets
	{
		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xD8F6D8", Offset = "0xD8F6D8", VA = "0xD8F6D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xD8F4B8", Offset = "0xD8F4B8", VA = "0xD8F4B8")]
	public Stage getStage(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xD8F7DC", Offset = "0xD8F7DC", VA = "0xD8F7DC")]
	public Set findSet(string setId)
	{
		return null;
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xD8F948", Offset = "0xD8F948", VA = "0xD8F948", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xD8F9A8", Offset = "0xD8F9A8", VA = "0xD8F9A8")]
	private void extractContentFromUi()
	{
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xD900C4", Offset = "0xD900C4", VA = "0xD900C4")]
	public SoloContent()
	{
	}
}
[Token(Token = "0x20002D9")]
public class TutorialSequence : MonoBehaviour
{
	[Token(Token = "0x20002DA")]
	private class KeepTime
	{
		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _timeAtStart;

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xD91188", Offset = "0xD91188", VA = "0xD91188")]
		public KeepTime()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xD911AC", Offset = "0xD911AC", VA = "0xD911AC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xD911C8", Offset = "0xD911C8", VA = "0xD911C8")]
		public float TimeSince()
		{
			return default(float);
		}
	}

	[Token(Token = "0x20002DB")]
	[CompilerGenerated]
	private sealed class <WaitForUserPrompt>d__45 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool restartBall;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TutorialSequence <>4__this;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TutorialPromptUI.TextList.MessageContent text;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioManager.SoundEffect announcerSFX;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TutorialPromptUI.TextList.MessageContent nextText;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AudioManager.SoundEffect nextAnnouncerSFX;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool noBallRespawn;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool <racketWasInGame>5__2;

		[Token(Token = "0x170002CC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xD91468", Offset = "0xD91468", VA = "0xD91468", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xD914B0", Offset = "0xD914B0", VA = "0xD914B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xD90EB4", Offset = "0xD90EB4", VA = "0xD90EB4")]
		[DebuggerHidden]
		public <WaitForUserPrompt>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD911E8", Offset = "0xD911E8", VA = "0xD911E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xD911EC", Offset = "0xD911EC", VA = "0xD911EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xD91470", Offset = "0xD91470", VA = "0xD91470", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DC")]
	[CompilerGenerated]
	private sealed class <WaitPostRacketHit>d__46 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialSequence <>4__this;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x170002CE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F98")]
			[Address(RVA = "0xD915EC", Offset = "0xD915EC", VA = "0xD915EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0xD91634", Offset = "0xD91634", VA = "0xD91634", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xD90F60", Offset = "0xD90F60", VA = "0xD90F60")]
		[DebuggerHidden]
		public <WaitPostRacketHit>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD9150C", Offset = "0xD9150C", VA = "0xD9150C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xD91510", Offset = "0xD91510", VA = "0xD91510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xD915F4", Offset = "0xD915F4", VA = "0xD915F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[CompilerGenerated]
	private sealed class <TutorialSequenceCo>d__49 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TutorialSequence <>4__this;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Ball <ball>5__2;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private KeepTime <shotsStart>5__3;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private KeepTime <pullStart>5__4;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timePulling>5__5;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <numSlings>5__6;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private KeepTime <powerShotStart>5__7;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <prevPowerShots>5__8;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <reminderTimer>5__9;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <lastDamage>5__10;

		[Token(Token = "0x170002D0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0xD9275C", Offset = "0xD9275C", VA = "0xD9275C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0xD927A4", Offset = "0xD927A4", VA = "0xD927A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xD91118", Offset = "0xD91118", VA = "0xD91118")]
		[DebuggerHidden]
		public <TutorialSequenceCo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xD91690", Offset = "0xD91690", VA = "0xD91690", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xD91694", Offset = "0xD91694", VA = "0xD91694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xD92764", Offset = "0xD92764", VA = "0xD92764", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialSequence inst;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _postRacketHitDelay;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Stage I")]
	public int _numRacketHitsNeeded;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _minSlingDuration;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _numSlingsRequired;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _powerShotsRequired;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Stage II")]
	public float _postTargetAppearDelay;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _postEnergyBarDelay;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Stage III")]
	public int _stage3StartingWave;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timeouts")]
	public float _timoutFirstHits;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _timoutGravitySling;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _timoutPlow;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Physics Changes")]
	public float ballMinDampedVelocity;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float ballMinPowershotSpeed;

	[NonSerialized]
	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _isPlaying;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool ballHitRacket;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool playerFailed;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool _canCompleteWaves;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _canProgressTimer;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _canShowDisplayTimerBar;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool _shouldUIPromptsBeInFrontOfPlayer;

	[Token(Token = "0x40011E4")]
	private const string COROUTINE_TAG = "TutorialSequence_Coroutines";

	[Token(Token = "0x170002C6")]
	public static bool playing
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xD90470", Offset = "0xD90470", VA = "0xD90470")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002C7")]
	public static bool canCompleteWaves
	{
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xD904C4", Offset = "0xD904C4", VA = "0xD904C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002C8")]
	public static bool canProgressTimer
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xD90528", Offset = "0xD90528", VA = "0xD90528")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002C9")]
	public static bool canShowDisplayTimerBar
	{
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xD9058C", Offset = "0xD9058C", VA = "0xD9058C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002CA")]
	public static bool shouldUIPromptsBeInFrontOfPlayer
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xD905F0", Offset = "0xD905F0", VA = "0xD905F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002CB")]
	public bool isPlaying
	{
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xD90654", Offset = "0xD90654", VA = "0xD90654")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xD9065C", Offset = "0xD9065C", VA = "0xD9065C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xD906C4", Offset = "0xD906C4", VA = "0xD906C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xD9071C", Offset = "0xD9071C", VA = "0xD9071C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xD90958", Offset = "0xD90958", VA = "0xD90958")]
	public void CheckIfNeedTutorial()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xD90A3C", Offset = "0xD90A3C", VA = "0xD90A3C")]
	private void MarkTutorialDone()
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0xD90AA4", Offset = "0xD90AA4", VA = "0xD90AA4")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0xD90BB0", Offset = "0xD90BB0", VA = "0xD90BB0")]
	private void StopTutorial()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0xD90CB4", Offset = "0xD90CB4", VA = "0xD90CB4")]
	private void onBallHitRacket(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0xD90CC0", Offset = "0xD90CC0", VA = "0xD90CC0")]
	public void PlayerFailed()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0xD90CCC", Offset = "0xD90CCC", VA = "0xD90CCC")]
	public void BuildTutorialArena()
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0xD90DC0", Offset = "0xD90DC0", VA = "0xD90DC0")]
	[IteratorStateMachine(typeof(<WaitForUserPrompt>d__45))]
	private IEnumerator<float> WaitForUserPrompt(TutorialPromptUI.TextList.MessageContent text, bool restartBall = false, bool noBallRespawn = false, [Optional] TutorialPromptUI.TextList.MessageContent nextText, [Optional] AudioManager.SoundEffect announcerSFX, [Optional] AudioManager.SoundEffect nextAnnouncerSFX)
	{
		return null;
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0xD90EDC", Offset = "0xD90EDC", VA = "0xD90EDC")]
	[IteratorStateMachine(typeof(<WaitPostRacketHit>d__46))]
	private IEnumerator<float> WaitPostRacketHit(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0xD90F88", Offset = "0xD90F88", VA = "0xD90F88")]
	private void SpawnArenaBall(float pathSpeed = 0.25f)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0xD90754", Offset = "0xD90754", VA = "0xD90754")]
	public void Abort()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0xD90D4C", Offset = "0xD90D4C", VA = "0xD90D4C")]
	[IteratorStateMachine(typeof(<TutorialSequenceCo>d__49))]
	private IEnumerator<float> TutorialSequenceCo()
	{
		return null;
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0xD91140", Offset = "0xD91140", VA = "0xD91140")]
	public TutorialSequence()
	{
	}
}
[Token(Token = "0x20002DE")]
public class UIPlayerPosition : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002DF")]
	public struct Debugg
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Test states in runtime")]
		public bool enable;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[Range(0f, 2f)]
		public float hmdHeight;
	}

	[Token(Token = "0x20002E0")]
	public enum Level
	{
		[Token(Token = "0x400120C")]
		Eye,
		[Token(Token = "0x400120D")]
		Chest,
		[Token(Token = "0x400120E")]
		Pelvis
	}

	[Token(Token = "0x20002E1")]
	[CompilerGenerated]
	private sealed class <updateCo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIPlayerPosition <>4__this;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <interval>5__2;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <waitTimer>5__3;

		[Token(Token = "0x170002D4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xD93654", Offset = "0xD93654", VA = "0xD93654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xD9369C", Offset = "0xD9369C", VA = "0xD9369C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xD932F8", Offset = "0xD932F8", VA = "0xD932F8")]
		[DebuggerHidden]
		public <updateCo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xD93424", Offset = "0xD93424", VA = "0xD93424", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xD93428", Offset = "0xD93428", VA = "0xD93428", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xD9365C", Offset = "0xD9365C", VA = "0xD9365C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001200")]
	private const float _initialHeight = 1.7f;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Debugg debug;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UISettings.PlayerHeight _config;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CyclicBuffer<float> _lastHeights;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _playerHeight;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _monitoring;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle _monitoringCo;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIPlayerPosition inst;

	[Token(Token = "0x170002D2")]
	private float playerHeight
	{
		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xD92954", Offset = "0xD92954", VA = "0xD92954")]
		set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public static Vector3 centerPosAtEyeHeight
	{
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xD92BC8", Offset = "0xD92BC8", VA = "0xD92BC8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x14000024")]
	public event Action playerHeightChanged
	{
		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xD92800", Offset = "0xD92800", VA = "0xD92800")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xD9289C", Offset = "0xD9289C", VA = "0xD9289C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xD92938", Offset = "0xD92938", VA = "0xD92938")]
	private void onPlayerHeightChanged()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0xD92A38", Offset = "0xD92A38", VA = "0xD92A38")]
	public static float getHeightAt(Level level)
	{
		return default(float);
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xD92C8C", Offset = "0xD92C8C", VA = "0xD92C8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xD92E04", Offset = "0xD92E04", VA = "0xD92E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0xD9303C", Offset = "0xD9303C", VA = "0xD9303C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0xD92FBC", Offset = "0xD92FBC", VA = "0xD92FBC")]
	private void startMonitoring()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0xD93158", Offset = "0xD93158", VA = "0xD93158")]
	private void stopMonitoring()
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0xD93240", Offset = "0xD93240", VA = "0xD93240")]
	private void onUiConfigUpdated()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0xD931CC", Offset = "0xD931CC", VA = "0xD931CC")]
	[IteratorStateMachine(typeof(<updateCo>d__25))]
	private IEnumerator<float> updateCo()
	{
		return null;
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0xD93320", Offset = "0xD93320", VA = "0xD93320")]
	private void calculateHeight()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0xD93410", Offset = "0xD93410", VA = "0xD93410")]
	public UIPlayerPosition()
	{
	}
}
[Token(Token = "0x20002E2")]
public class VideoControl : MonoBehaviour
{
	[Token(Token = "0x20002E3")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0xD938E8", Offset = "0xD938E8", VA = "0xD938E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xD93930", Offset = "0xD93930", VA = "0xD93930", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xD937B0", Offset = "0xD937B0", VA = "0xD937B0")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xD937E0", Offset = "0xD937E0", VA = "0xD937E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xD937E4", Offset = "0xD937E4", VA = "0xD937E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xD938F0", Offset = "0xD938F0", VA = "0xD938F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VideoControl inst;

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0xD936F8", Offset = "0xD936F8", VA = "0xD936F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0xD93750", Offset = "0xD93750", VA = "0xD93750")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0xD937D8", Offset = "0xD937D8", VA = "0xD937D8")]
	public VideoControl()
	{
	}
}
[Token(Token = "0x20002E4")]
public class VortexManager : MonoBehaviour
{
	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VortexManager inst;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float enterDuration;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float exitDuration;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strength;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float angle;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve enterAnimation;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve exitAnimation;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PortalVortex enterVortex;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PortalVortex exitVertex;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool vortexAtMiddle;

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0xD93938", Offset = "0xD93938", VA = "0xD93938")]
	public static void enter(Transform portal, Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0xD9393C", Offset = "0xD9393C", VA = "0xD9393C")]
	public static void exit(Transform portal)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0xD93940", Offset = "0xD93940", VA = "0xD93940")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0xD93998", Offset = "0xD93998", VA = "0xD93998")]
	public VortexManager()
	{
	}
}
[Token(Token = "0x20002E5")]
public class MultiplayerDebugText : MonoBehaviour
{
	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text _text;

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0xD939BC", Offset = "0xD939BC", VA = "0xD939BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xD93A48", Offset = "0xD93A48", VA = "0xD93A48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0xD9415C", Offset = "0xD9415C", VA = "0xD9415C")]
	public MultiplayerDebugText()
	{
	}
}
[Token(Token = "0x20002E6")]
[RequireComponent(typeof(AudioSource))]
public class NoiseCanceller : MonoBehaviour
{
	[Token(Token = "0x20002E7")]
	private enum State
	{
		[Token(Token = "0x4001237")]
		Silent,
		[Token(Token = "0x4001238")]
		Speak,
		[Token(Token = "0x4001239")]
		Noise
	}

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxBucketLowerLimit;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float silentBucketThresh;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float noiseRatioThresh;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speechSpectrumMin;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speechSpectrumMax;

	[NonSerialized]
	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool active;

	[NonSerialized]
	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool noiseDetected;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource _audioSource;

	[Token(Token = "0x400122B")]
	private const int SPECTRUM_SIZE = 256;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] _spectrum;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] _playbackBuffer;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private short[] _shortsBuffer;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _readIndex;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _writeIndex;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State _currentState;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private State _wantedState;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _stateChangeCounter;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _delayFromCurrentToWanted;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _normalizedNoise;

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xD94164", Offset = "0xD94164", VA = "0xD94164")]
	private int GetDelay(State from, State to)
	{
		return default(int);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xD941B8", Offset = "0xD941B8", VA = "0xD941B8")]
	private void UpdateState(State targetState)
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0xD942B8", Offset = "0xD942B8", VA = "0xD942B8")]
	private void SetActiveState(bool state)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0xD9436C", Offset = "0xD9436C", VA = "0xD9436C")]
	public void CopyDataFromBuffer(byte[] buffer, int count)
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0xD94448", Offset = "0xD94448", VA = "0xD94448")]
	private void DetectNoise()
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0xD945D0", Offset = "0xD945D0", VA = "0xD945D0")]
	private void OnHeadphonesConnectionChange(bool state)
	{
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0xD945DC", Offset = "0xD945DC", VA = "0xD945DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xD94634", Offset = "0xD94634", VA = "0xD94634")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xD9463C", Offset = "0xD9463C", VA = "0xD9463C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xD946BC", Offset = "0xD946BC", VA = "0xD946BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xD946C0", Offset = "0xD946C0", VA = "0xD946C0")]
	private void OnAudioFilterRead(float[] floatBuf, int numChannels)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xD94890", Offset = "0xD94890", VA = "0xD94890")]
	public NoiseCanceller()
	{
	}
}
[Token(Token = "0x20002E8")]
public class SyncBall : SyncObject
{
	[Token(Token = "0x20002E9")]
	public struct BallFrame
	{
		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float time;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 position;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion rotation;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 velocity;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 angularVelocity;
	}

	[Token(Token = "0x20002EA")]
	public enum BallStates
	{
		[Token(Token = "0x4001256")]
		Charged = 1,
		[Token(Token = "0x4001257")]
		Powershot = 2,
		[Token(Token = "0x4001258")]
		Plowing = 4,
		[Token(Token = "0x4001259")]
		GravitySlingUsed = 8,
		[Token(Token = "0x400125A")]
		GravitySlingTorn = 0x10,
		[Token(Token = "0x400125B")]
		ExitingPortal = 0x20,
		[Token(Token = "0x400125C")]
		GoToPositionMode = 0x40
	}

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SyncBall inst;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SyncBall> allInstances;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Ball _ball;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _velocity;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _auxVector1;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _auxVector2;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 _lastPosition;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Quaternion _lastRotation;

	[Token(Token = "0x4001244")]
	private const float targetBallHistoryDelay = 0.04f;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float currentBallRemoteTime;

	[Token(Token = "0x4001246")]
	private const int historyBufferLength = 20;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private CyclicBuffer<BallFrame> historyBuffer;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float interpolationSoftness;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 predictedPos;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion predictedRotation;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 interpolationPosVel;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Quaternion interpolationRotVel;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool logOwnershipChanges;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _lastBallState;

	[Token(Token = "0x170002D8")]
	public static bool recievedBallPacketSinceTurnOver
	{
		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xD94974", Offset = "0xD94974", VA = "0xD94974")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xD949BC", Offset = "0xD949BC", VA = "0xD949BC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public override PlayerID playerID
	{
		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xD94A08", Offset = "0xD94A08", VA = "0xD94A08", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public static SyncBall Current
	{
		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xD94B58", Offset = "0xD94B58", VA = "0xD94B58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002DB")]
	public static Ball CurrentBall
	{
		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xD94BA0", Offset = "0xD94BA0", VA = "0xD94BA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002DC")]
	public static bool isBallControlledByOtherPlayer
	{
		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xD94C40", Offset = "0xD94C40", VA = "0xD94C40")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002DD")]
	public static bool isBallUnderMyControl
	{
		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xD93FC8", Offset = "0xD93FC8", VA = "0xD93FC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002DE")]
	public static PlayerID ballOwnerID
	{
		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xD94D4C", Offset = "0xD94D4C", VA = "0xD94D4C")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x170002DF")]
	public static Player ballOwner
	{
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xD94DCC", Offset = "0xD94DCC", VA = "0xD94DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002E0")]
	public int lastBallState
	{
		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xD950F8", Offset = "0xD950F8", VA = "0xD950F8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xD94AF4", Offset = "0xD94AF4", VA = "0xD94AF4", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xD94E3C", Offset = "0xD94E3C", VA = "0xD94E3C")]
	public static void setControllingPlayer(PlayerID playerID)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xD95100", Offset = "0xD95100", VA = "0xD95100")]
	private void registerInstance()
	{
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0xD95270", Offset = "0xD95270", VA = "0xD95270")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0xD95358", Offset = "0xD95358", VA = "0xD95358")]
	protected new void OnEnable()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0xD956F0", Offset = "0xD956F0", VA = "0xD956F0")]
	protected new void OnDisable()
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0xD95694", Offset = "0xD95694", VA = "0xD95694")]
	private void ResetHistoryBuffer()
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0xD95A4C", Offset = "0xD95A4C", VA = "0xD95A4C")]
	private void BallChangedOwnership(PlayerID owningPlayerID)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0xD95B00", Offset = "0xD95B00", VA = "0xD95B00", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0xD95B5C", Offset = "0xD95B5C", VA = "0xD95B5C", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0xD95BF4", Offset = "0xD95BF4", VA = "0xD95BF4", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0xD95C10", Offset = "0xD95C10", VA = "0xD95C10", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0xD95F18", Offset = "0xD95F18", VA = "0xD95F18")]
	public static void SpawnMultiplayerBall(float entryPathSpeed)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0xD9672C", Offset = "0xD9672C", VA = "0xD9672C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0xD95CB4", Offset = "0xD95CB4", VA = "0xD95CB4")]
	public static int getCurrentBallState()
	{
		return default(int);
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xD968CC", Offset = "0xD968CC", VA = "0xD968CC", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xD96A1C", Offset = "0xD96A1C", VA = "0xD96A1C", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xD97030", Offset = "0xD97030", VA = "0xD97030")]
	private BallFrame GetBallFrameForTime(float time)
	{
		return default(BallFrame);
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xD973F4", Offset = "0xD973F4", VA = "0xD973F4")]
	public static bool CanAssumeOwnership()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xD974F4", Offset = "0xD974F4", VA = "0xD974F4")]
	public static void OnBallFixedUpdate()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xD97544", Offset = "0xD97544", VA = "0xD97544")]
	public void _onBallFixedUpdate()
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xD978E0", Offset = "0xD978E0", VA = "0xD978E0")]
	public void ApplyLastDataToBall()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0xD97A04", Offset = "0xD97A04", VA = "0xD97A04")]
	public SyncBall()
	{
	}
}
[Token(Token = "0x20002EB")]
public class SyncBallTurnOver : SyncObject
{
	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SyncBallTurnOver inst;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _needToTakeOwnership;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _needToGoIntoGutter;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool _needToGiveOwnership;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool _skipNextGiveOnership;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _fakePlayerHitBallThisTurn;

	[Token(Token = "0x170002E1")]
	public static bool skipNextGiveOnership
	{
		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xD97B88", Offset = "0xD97B88", VA = "0xD97B88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002E2")]
	public static bool aboutToGiveOwnership
	{
		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xD95C48", Offset = "0xD95C48", VA = "0xD95C48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002E3")]
	public static bool aboutToTakeOwnership
	{
		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xD95BA0", Offset = "0xD95BA0", VA = "0xD95BA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000025")]
	public static event Action<PlayerID> onBallChangeOwnership
	{
		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xD955C4", Offset = "0xD955C4", VA = "0xD955C4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xD9597C", Offset = "0xD9597C", VA = "0xD9597C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0xD97BDC", Offset = "0xD97BDC", VA = "0xD97BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0xD97C34", Offset = "0xD97C34", VA = "0xD97C34", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0xD97C74", Offset = "0xD97C74", VA = "0xD97C74", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0xD97C7C", Offset = "0xD97C7C", VA = "0xD97C7C")]
	public static void SkipNextGiveOwnership()
	{
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xD97CD4", Offset = "0xD97CD4", VA = "0xD97CD4")]
	public static void GiveOwnership()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xD9659C", Offset = "0xD9659C", VA = "0xD9659C")]
	public static void setControllingPlayer(PlayerID playerID)
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xD980F4", Offset = "0xD980F4", VA = "0xD980F4", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xD980FC", Offset = "0xD980FC", VA = "0xD980FC", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xD98108", Offset = "0xD98108", VA = "0xD98108")]
	public void Update()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xD98480", Offset = "0xD98480", VA = "0xD98480", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xD9884C", Offset = "0xD9884C", VA = "0xD9884C", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xD9888C", Offset = "0xD9888C", VA = "0xD9888C", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xD98240", Offset = "0xD98240", VA = "0xD98240")]
	private void ActuallyTakeOwnership_Internal()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xD988C4", Offset = "0xD988C4", VA = "0xD988C4")]
	public SyncBallTurnOver()
	{
	}
}
[Token(Token = "0x20002EC")]
public class SyncBoxTester : MonoBehaviour
{
	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool bPlayerOne;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPos;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _time;

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xD98918", Offset = "0xD98918", VA = "0xD98918")]
	private void Start()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xD989A8", Offset = "0xD989A8", VA = "0xD989A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xD98BCC", Offset = "0xD98BCC", VA = "0xD98BCC")]
	public SyncBoxTester()
	{
	}
}
[Token(Token = "0x20002ED")]
public class SyncGameEvents : SyncObject
{
	[Token(Token = "0x20002EE")]
	public enum SyncedEventID : byte
	{
		[Token(Token = "0x4001279")]
		RacketHitBall,
		[Token(Token = "0x400127A")]
		GameOver,
		[Token(Token = "0x400127B")]
		RematchRequest,
		[Token(Token = "0x400127C")]
		PlayerQuit,
		[Token(Token = "0x400127D")]
		Ping,
		[Token(Token = "0x400127E")]
		Checkpoint,
		[Token(Token = "0x400127F")]
		HitHextrudeWall,
		[Token(Token = "0x4001280")]
		StartMPSet,
		[Token(Token = "0x4001281")]
		FloaterSpawn,
		[Token(Token = "0x4001282")]
		FloaterUpdate,
		[Token(Token = "0x4001283")]
		FloaterHit,
		[Token(Token = "0x4001284")]
		FloaterTimeOut,
		[Token(Token = "0x4001285")]
		PowerupRemoved,
		[Token(Token = "0x4001286")]
		CoopTimer,
		[Token(Token = "0x4001287")]
		ScoreSync,
		[Token(Token = "0x4001288")]
		StartingPlayer,
		[Token(Token = "0x4001289")]
		AnnouncerSeed,
		[Token(Token = "0x400128A")]
		PlayerSentLog
	}

	[Token(Token = "0x20002EF")]
	public abstract class GameEvent
	{
		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SyncedEventID eventID;

		[Token(Token = "0x600102B")]
		public abstract void AddDataToSendBuffer(byte[] buffer, ref int index);

		[Token(Token = "0x600102C")]
		public abstract void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime);

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xD9BAE8", Offset = "0xD9BAE8", VA = "0xD9BAE8")]
		protected GameEvent()
		{
		}
	}

	[Token(Token = "0x20002F0")]
	public class ScoreSyncEvent : GameEvent
	{
		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gameScore;

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xD9BAC0", Offset = "0xD9BAC0", VA = "0xD9BAC0")]
		public ScoreSyncEvent()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xD9BAF0", Offset = "0xD9BAF0", VA = "0xD9BAF0", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xD9BB14", Offset = "0xD9BB14", VA = "0xD9BB14", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F1")]
	public class RacketHitEvent : GameEvent
	{
		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 normalizedVelocity;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xD99290", Offset = "0xD99290", VA = "0xD99290")]
		public RacketHitEvent(Vector3 normalizedVelocity)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xD9BBB4", Offset = "0xD9BBB4", VA = "0xD9BBB4", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xD9BC80", Offset = "0xD9BC80", VA = "0xD9BC80", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F2")]
	public class SyncCheckpointEvent : GameEvent
	{
		[Token(Token = "0x20002F3")]
		public enum Checkpoint : byte
		{
			[Token(Token = "0x4001294")]
			MPStartSequence_Begin,
			[Token(Token = "0x4001295")]
			MPStartSequence_SelectSet,
			[Token(Token = "0x4001296")]
			MPStartSequence_ReleaseBall,
			[Token(Token = "0x4001297")]
			MPRoundOver_ClearOldSet,
			[Token(Token = "0x4001298")]
			MPRoundOver_ShowTargets,
			[Token(Token = "0x4001299")]
			MPRoundOver_ReleaseBall
		}

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int numCheckPoints;

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] checkPointReachedP1;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] checkPointReachedP2;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Checkpoint> locallyReachedCheckpoints;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SyncCheckpointEvent inst;

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xD98D14", Offset = "0xD98D14", VA = "0xD98D14")]
		public SyncCheckpointEvent()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xD9AA3C", Offset = "0xD9AA3C", VA = "0xD9AA3C")]
		public static void ResetSyncedCheckpoint(Checkpoint c)
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xD9AAFC", Offset = "0xD9AAFC", VA = "0xD9AAFC")]
		public static bool WaitForSyncedCheckpoint(Checkpoint c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xD98F58", Offset = "0xD98F58", VA = "0xD98F58")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xD990B0", Offset = "0xD990B0", VA = "0xD990B0")]
		public bool HaveSendData()
		{
			return default(bool);
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xD9BE24", Offset = "0xD9BE24", VA = "0xD9BE24", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xD9BF50", Offset = "0xD9BF50", VA = "0xD9BF50", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F4")]
	public class StartMPSetEvent : GameEvent
	{
		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int setIndex;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ballEntryPathSpeed;

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xD9B920", Offset = "0xD9B920", VA = "0xD9B920")]
		public StartMPSetEvent(int selectedSetIndex)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xD9C04C", Offset = "0xD9C04C", VA = "0xD9C04C", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xD9C088", Offset = "0xD9C088", VA = "0xD9C088", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F5")]
	public class HextrudeWallHitEvent : GameEvent
	{
		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float effectPitch;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hitCorner;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool hitBumper;

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xD99824", Offset = "0xD99824", VA = "0xD99824")]
		public HextrudeWallHitEvent(bool bumper, Vector3 pos, float pitch, bool corner)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xD9C150", Offset = "0xD9C150", VA = "0xD9C150", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xD9C1B8", Offset = "0xD9C1B8", VA = "0xD9C1B8", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F6")]
	public class StartingPlayerEvent : GameEvent
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int startingPlayer;

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xD9B950", Offset = "0xD9B950", VA = "0xD9B950")]
		public StartingPlayerEvent(PlayerID startingPlayer)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xD9C300", Offset = "0xD9C300", VA = "0xD9C300", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xD9C30C", Offset = "0xD9C30C", VA = "0xD9C30C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F7")]
	public class AnnouncerSeedEvent : GameEvent
	{
		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int seed;

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xD9B984", Offset = "0xD9B984", VA = "0xD9B984")]
		public AnnouncerSeedEvent(int seed)
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0xD9C390", Offset = "0xD9C390", VA = "0xD9C390", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xD9C39C", Offset = "0xD9C39C", VA = "0xD9C39C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F8")]
	public class PlayerSentLogEvent : GameEvent
	{
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _token;

		[Token(Token = "0x40012A3")]
		private const int TOKEN_LENGTH = 3;

		[Token(Token = "0x170002E5")]
		public string Token
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xD9C420", Offset = "0xD9C420", VA = "0xD9C420")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xD99DB8", Offset = "0xD99DB8", VA = "0xD99DB8")]
			set
			{
			}
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xD9B9B4", Offset = "0xD9B9B4", VA = "0xD9B9B4")]
		public PlayerSentLogEvent()
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xD9C428", Offset = "0xD9C428", VA = "0xD9C428", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xD9C4A8", Offset = "0xD9C4A8", VA = "0xD9C4A8", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002F9")]
	public class GameOverEvent : GameEvent
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameEndReason _gameEndReason;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _player1_score;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _roundNum;

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xD99618", Offset = "0xD99618", VA = "0xD99618")]
		public GameOverEvent(GameEndReason gameEndReason, int player1_score, int roundNum)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xD9C658", Offset = "0xD9C658", VA = "0xD9C658", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xD9C6A8", Offset = "0xD9C6A8", VA = "0xD9C6A8", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xD9C864", Offset = "0xD9C864", VA = "0xD9C864")]
		private static GameEndReason fixGameEndReasonFromOpponent(GameEndReason gameEndReason)
		{
			return default(GameEndReason);
		}
	}

	[Token(Token = "0x20002FA")]
	public class RematchRequestEvent : GameEvent
	{
		[Token(Token = "0x6001050")]
		[Address(RVA = "0xD99F1C", Offset = "0xD99F1C", VA = "0xD99F1C")]
		public RematchRequestEvent()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xD9C884", Offset = "0xD9C884", VA = "0xD9C884", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xD9C888", Offset = "0xD9C888", VA = "0xD9C888", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002FB")]
	public class PlayerQuitEvent : GameEvent
	{
		[Token(Token = "0x6001053")]
		[Address(RVA = "0xD9A03C", Offset = "0xD9A03C", VA = "0xD9A03C")]
		public PlayerQuitEvent()
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xD9C8F0", Offset = "0xD9C8F0", VA = "0xD9C8F0", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xD9C9A8", Offset = "0xD9C9A8", VA = "0xD9C9A8", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002FC")]
	public class PingEvent : GameEvent
	{
		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool isPong;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float pingTime;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int lastPing;

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xD993D8", Offset = "0xD993D8", VA = "0xD993D8")]
		public PingEvent(bool isPong = false, float pingTime = float.MaxValue)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xD9CAFC", Offset = "0xD9CAFC", VA = "0xD9CAFC", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xD9CB54", Offset = "0xD9CB54", VA = "0xD9CB54", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002FD")]
	public class FloaterSpawnEvent : GameEvent
	{
		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupType powerupType;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isUnknown;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion rotation;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xD9B9D4", Offset = "0xD9B9D4", VA = "0xD9B9D4")]
		public FloaterSpawnEvent()
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xD9CDF4", Offset = "0xD9CDF4", VA = "0xD9CDF4", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0xD9CEA4", Offset = "0xD9CEA4", VA = "0xD9CEA4", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002FE")]
	public class FloaterUpdateEvent : GameEvent
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float horizAngle;

		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float vertAngle;

		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float radius;

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xD9B9FC", Offset = "0xD9B9FC", VA = "0xD9B9FC")]
		public FloaterUpdateEvent()
		{
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xD9CFB4", Offset = "0xD9CFB4", VA = "0xD9CFB4", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xD9D018", Offset = "0xD9D018", VA = "0xD9D018", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x20002FF")]
	public class FloaterHitEvent : GameEvent
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rotation;

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 contactPoint;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 ballVelocity;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public uint powerupUParam;

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xD9BA24", Offset = "0xD9BA24", VA = "0xD9BA24")]
		public FloaterHitEvent()
		{
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xD9D0D4", Offset = "0xD9D0D4", VA = "0xD9D0D4", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xD9D170", Offset = "0xD9D170", VA = "0xD9D170", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000300")]
	public class FloaterTimeOutEvent : GameEvent
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xD9BA50", Offset = "0xD9BA50", VA = "0xD9BA50")]
		public FloaterTimeOutEvent()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xD9D254", Offset = "0xD9D254", VA = "0xD9D254", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xD9D260", Offset = "0xD9D260", VA = "0xD9D260", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000301")]
	public class PowerupRemovedEvent : GameEvent
	{
		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint id;

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xD9BA78", Offset = "0xD9BA78", VA = "0xD9BA78")]
		public PowerupRemovedEvent()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xD9D2E0", Offset = "0xD9D2E0", VA = "0xD9D2E0", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xD9D2EC", Offset = "0xD9D2EC", VA = "0xD9D2EC", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000302")]
	public class CoopTimerEvent : GameEvent
	{
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int waveNumber;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float remainingTime;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pendingBonusTime;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeSinceLastBonusEarn;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float pendingPenaltyTime;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float timeSinceLastPenaltyEarn;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int laneChargeStreakCount;

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xD9BAA0", Offset = "0xD9BAA0", VA = "0xD9BAA0")]
		public CoopTimerEvent()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xD9D36C", Offset = "0xD9D36C", VA = "0xD9D36C", Slot = "4")]
		public override void AddDataToSendBuffer(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xD9D48C", Offset = "0xD9D48C", VA = "0xD9D48C", Slot = "5")]
		public override void ReadDataFromBuffer_AndApplyEvent(byte[] buffer, ref int index, float remoteTime)
		{
		}
	}

	[Token(Token = "0x2000303")]
	[CompilerGenerated]
	private sealed class <delayGameOverMsg>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameOverEvent gameOverEvent;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SyncGameEvents <>4__this;

		[Token(Token = "0x170002E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xD9D760", Offset = "0xD9D760", VA = "0xD9D760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001070")]
			[Address(RVA = "0xD9D7A8", Offset = "0xD9D7A8", VA = "0xD9D7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xD99DF4", Offset = "0xD99DF4", VA = "0xD99DF4")]
		[DebuggerHidden]
		public <delayGameOverMsg>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xD9D604", Offset = "0xD9D604", VA = "0xD9D604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xD9D608", Offset = "0xD9D608", VA = "0xD9D608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xD9D768", Offset = "0xD9D768", VA = "0xD9D768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncGameEvents inst;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameEvent> _sendGameEvents;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SyncCheckpointEvent synchedCheckpoints;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Coroutine _delayGameOverMsgCo;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private HextrudeWallHitEvent _hextrudeEvent_ForReading;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private RacketHitEvent _racketHitEvent_ForReading;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private StartMPSetEvent _startMPSetEvent;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StartingPlayerEvent _startingPlayerEvent;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private AnnouncerSeedEvent _announcerSeedEvent;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerSentLogEvent _playerSentLogEvent;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private FloaterSpawnEvent _floaterSpawnEvent;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private FloaterUpdateEvent _floaterUpdateEvent;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private FloaterHitEvent _floaterHitEvent;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private FloaterTimeOutEvent _floaterTimeOutEvent;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PowerupRemovedEvent _powerupRemovedEvent;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoopTimerEvent _coopTimerEvent;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ScoreSyncEvent _scoreSyncEvent;

	[Token(Token = "0x170002E4")]
	public bool HasGameEventsToSend
	{
		[Token(Token = "0x6001009")]
		[Address(RVA = "0xD98BD4", Offset = "0xD98BD4", VA = "0xD98BD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xD98C24", Offset = "0xD98C24", VA = "0xD98C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xD98EC0", Offset = "0xD98EC0", VA = "0xD98EC0", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0xD99000", Offset = "0xD99000", VA = "0xD99000", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xD99040", Offset = "0xD99040", VA = "0xD99040", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xD99048", Offset = "0xD99048", VA = "0xD99048", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xD99100", Offset = "0xD99100", VA = "0xD99100", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xD99168", Offset = "0xD99168", VA = "0xD99168")]
	public static void SendRacketHit(Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0xD992D0", Offset = "0xD992D0", VA = "0xD992D0")]
	public static void SendPing()
	{
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0xD99418", Offset = "0xD99418", VA = "0xD99418")]
	public static void SendPong(float timeReceived)
	{
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xD9952C", Offset = "0xD9952C", VA = "0xD9952C")]
	public static void SendGameOver(GameEndReason gameEndReason, int player1Score, int roundNum)
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xD996EC", Offset = "0xD996EC", VA = "0xD996EC")]
	public static void SendBumperHit(Vector3 pos, float pitchBoost)
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xD99884", Offset = "0xD99884", VA = "0xD99884")]
	public static void SendStopperHit(Vector3 pos, bool corner)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xD999C8", Offset = "0xD999C8", VA = "0xD999C8")]
	public static void SendStartMPSet(float ballStartSpeed, int setIndex)
	{
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0xD99AB0", Offset = "0xD99AB0", VA = "0xD99AB0")]
	public static void SendStartingPlayer(PlayerID playerId)
	{
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0xD99B88", Offset = "0xD99B88", VA = "0xD99B88")]
	public static void SendRandomAnnouncerSeed()
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0xD99CCC", Offset = "0xD99CCC", VA = "0xD99CCC")]
	public static void PlayerSentLog(string logToken)
	{
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0xD9965C", Offset = "0xD9965C", VA = "0xD9965C")]
	[IteratorStateMachine(typeof(<delayGameOverMsg>d__42))]
	private IEnumerator delayGameOverMsg(GameOverEvent gameOverEvent)
	{
		return null;
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0xD99E1C", Offset = "0xD99E1C", VA = "0xD99E1C")]
	public static void SendRematchRequest()
	{
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0xD99F3C", Offset = "0xD99F3C", VA = "0xD99F3C")]
	public static void SendQuitMatch()
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xD9A05C", Offset = "0xD9A05C", VA = "0xD9A05C")]
	public static void SendFloaterSpawn(Floater floater)
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xD9A318", Offset = "0xD9A318", VA = "0xD9A318")]
	public static void SendFloaterUpdate(Floater floater)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xD9A41C", Offset = "0xD9A41C", VA = "0xD9A41C")]
	public static void SendFloaterHit(Floater floater, Vector3 contactPoint, Vector3 ballVelocity, uint powerupUParam)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xD9A628", Offset = "0xD9A628", VA = "0xD9A628")]
	public static void SendFloaterTimeOut(Floater floater)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xD9A798", Offset = "0xD9A798", VA = "0xD9A798")]
	public static void SendPowerupRemovedEvent(BasePowerup powerup)
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xD986C4", Offset = "0xD986C4", VA = "0xD986C4")]
	public static void SendCoopTimerSync()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xD9A8F4", Offset = "0xD9A8F4", VA = "0xD9A8F4")]
	public static void SendScoreSync(int score)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xD9AA38", Offset = "0xD9AA38", VA = "0xD9AA38")]
	public static void ResetCheckpoint(SyncCheckpointEvent.Checkpoint c)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xD9AAF8", Offset = "0xD9AAF8", VA = "0xD9AAF8")]
	public static bool WaitForCheckpoint(SyncCheckpointEvent.Checkpoint c)
	{
		return default(bool);
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0xD9ACE8", Offset = "0xD9ACE8", VA = "0xD9ACE8", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0xD9AD00", Offset = "0xD9AD00", VA = "0xD9AD00")]
	public void AddDataToSendBuffer(byte[] buffer, ref int index, out List<(SyncedEventID, int)> report)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xD9B068", Offset = "0xD9B068", VA = "0xD9B068", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xD9B080", Offset = "0xD9B080", VA = "0xD9B080")]
	public void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime, out List<(SyncedEventID, int)> report)
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xD9B4FC", Offset = "0xD9B4FC", VA = "0xD9B4FC")]
	public SyncGameEvents()
	{
	}
}
[Token(Token = "0x2000304")]
public class SyncHexHits : SyncObject
{
	[Token(Token = "0x2000305")]
	public struct HexHitInfo
	{
		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 contactPoint;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float impactStrength;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Brick hitBrick;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntVector2 hexCoords;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVector2 exitPortal;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint targetUniqueID;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Brick.ContactSource hitSource;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte damagePotential;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool oneShotBoss;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool doubleBoss;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool shielded;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool GodModeActive;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int targetExpectedDamage;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int damageApplied;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Target _target;

		[Token(Token = "0x170002E8")]
		public Target target
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0xD9E75C", Offset = "0xD9E75C", VA = "0xD9E75C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xD9E89C", Offset = "0xD9E89C", VA = "0xD9E89C")]
		private static byte DamageByContactSource(Brick.ContactSource contactSource)
		{
			return default(byte);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xD9E9B4", Offset = "0xD9E9B4", VA = "0xD9E9B4")]
		public HexHitInfo(Target t, Brick.ContactSource contactSource, Vector3 contactPoint, float impactStrength)
		{
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xD9EA98", Offset = "0xD9EA98", VA = "0xD9EA98")]
		public HexHitInfo(Brick b, Brick.ContactSource contactSource, Vector3 contactPoint, float impactStrength)
		{
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xD9DDA0", Offset = "0xD9DDA0", VA = "0xD9DDA0")]
		public HexHitInfo(TargetMainHealing healingTarget)
		{
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xD9DA18", Offset = "0xD9DA18", VA = "0xD9DA18")]
		public void DebugLog()
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xD9E320", Offset = "0xD9E320", VA = "0xD9E320")]
		public void Read(byte[] buffer, ref int index)
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xD9E104", Offset = "0xD9E104", VA = "0xD9E104")]
		public void Write(byte[] buffer, ref int index)
		{
		}
	}

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SyncHexHits inst;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<HexHitInfo> _sendHits;

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xD9D7B0", Offset = "0xD9D7B0", VA = "0xD9D7B0", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xD9D820", Offset = "0xD9D820", VA = "0xD9D820", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xD9D860", Offset = "0xD9D860", VA = "0xD9D860")]
	public static bool ReportHit(HexHitInfo hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xD9DC64", Offset = "0xD9DC64", VA = "0xD9DC64")]
	public static bool ReportHeal(TargetMainHealing healingTarget)
	{
		return default(bool);
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0xD9DE4C", Offset = "0xD9DE4C", VA = "0xD9DE4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0xD9DEB0", Offset = "0xD9DEB0", VA = "0xD9DEB0", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xD9DEB8", Offset = "0xD9DEB8", VA = "0xD9DEB8", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0xD9DEC4", Offset = "0xD9DEC4", VA = "0xD9DEC4", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0xD9DF14", Offset = "0xD9DF14", VA = "0xD9DF14", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xD9E1DC", Offset = "0xD9E1DC", VA = "0xD9E1DC", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xD9E590", Offset = "0xD9E590", VA = "0xD9E590")]
	private void ApplyHitInfo(ref HexHitInfo info)
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xD9E7F0", Offset = "0xD9E7F0", VA = "0xD9E7F0")]
	public SyncHexHits()
	{
	}
}
[Token(Token = "0x2000306")]
public class SyncManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000307")]
	private class SyncObjectComparer : Comparer<SyncObject>
	{
		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xDA1BD4", Offset = "0xDA1BD4", VA = "0xDA1BD4", Slot = "6")]
		public override int Compare(SyncObject x, SyncObject y)
		{
			return default(int);
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xDA1B8C", Offset = "0xDA1B8C", VA = "0xDA1B8C")]
		public SyncObjectComparer()
		{
		}
	}

	[Token(Token = "0x2000308")]
	private enum SwitchConnectionMode
	{
		[Token(Token = "0x40012ED")]
		None,
		[Token(Token = "0x40012EE")]
		Switching,
		[Token(Token = "0x40012EF")]
		Switched
	}

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncManager inst;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _P2PDisconnectedSeconds;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _P2PInactiveSeconds;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sessionTime;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SyncTime _timerObject;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SyncObject> _senderObjects;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<SyncObject> _listenerObjects;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SyncObject> _allSyncObjects;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerID _myPlayerID;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeSinceLastPacket;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool sessionIsOpen;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool sessionIsActive;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool sessionDisconnected;

	[Token(Token = "0x40012E6")]
	public const int MAX_BUFFER_SIZE = 512;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private byte[] sendBuffer;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private byte[] receiveBuffer;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private SyncObjectComparer _syncObjectComparer;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SwitchConnectionMode _switchedMode;

	[Token(Token = "0x40012EB")]
	public const int SEND_PACKET_MOD = 2;

	[Token(Token = "0x170002E9")]
	public PlayerID _otherPlayerID
	{
		[Token(Token = "0x6001087")]
		[Address(RVA = "0xD94DB8", Offset = "0xD94DB8", VA = "0xD94DB8")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x170002EA")]
	public static bool isMultiplayer
	{
		[Token(Token = "0x6001088")]
		[Address(RVA = "0xD9074C", Offset = "0xD9074C", VA = "0xD9074C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002EB")]
	public static bool isHost
	{
		[Token(Token = "0x6001089")]
		[Address(RVA = "0xD9EDEC", Offset = "0xD9EDEC", VA = "0xD9EDEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002EC")]
	public static bool isClient
	{
		[Token(Token = "0x600108A")]
		[Address(RVA = "0xD9EEA4", Offset = "0xD9EEA4", VA = "0xD9EEA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xD9EBB0", Offset = "0xD9EBB0", VA = "0xD9EBB0")]
	private static string ColorTag(string str, string hex)
	{
		return null;
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xD9EDA4", Offset = "0xD9EDA4", VA = "0xD9EDA4")]
	private static string ColorTagStr(string str)
	{
		return null;
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xD9EF10", Offset = "0xD9EF10", VA = "0xD9EF10")]
	public void StartSwitchConnectionProcess()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xD9EF1C", Offset = "0xD9EF1C", VA = "0xD9EF1C")]
	public void SwitchConnectionProcessClientResponse()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xD9EF28", Offset = "0xD9EF28", VA = "0xD9EF28")]
	private void SendSwitchPacket()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xD9F440", Offset = "0xD9F440", VA = "0xD9F440", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xD9F630", Offset = "0xD9F630", VA = "0xD9F630")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xD9F820", Offset = "0xD9F820", VA = "0xD9F820")]
	private void InitializeSyncObject(SyncObject so)
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xD9FEB8", Offset = "0xD9FEB8", VA = "0xD9FEB8")]
	public void RestartMatch()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xDA02AC", Offset = "0xDA02AC", VA = "0xDA02AC")]
	public void onLocalPlayerDisconnected()
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xDA02D8", Offset = "0xDA02D8", VA = "0xDA02D8")]
	private void onConnectionClosed()
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xD9CA7C", Offset = "0xD9CA7C", VA = "0xD9CA7C")]
	public void onRemotePlayerQuitMatch()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xDA0134", Offset = "0xDA0134", VA = "0xDA0134")]
	public void StartSession(PlayerID playerID, bool isRestart = false)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xDA0358", Offset = "0xDA0358", VA = "0xDA0358")]
	public void UnRegisterSyncObj(SyncObject obj)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xDA03D8", Offset = "0xDA03D8", VA = "0xDA03D8")]
	public void RegisterSyncObj(SyncObject obj)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xD96654", Offset = "0xD96654", VA = "0xD96654")]
	public void BallChangedOwnership()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xD9869C", Offset = "0xD9869C", VA = "0xD9869C")]
	public void ChangedOwnership(SyncObject so)
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xD9F920", Offset = "0xD9F920", VA = "0xD9F920")]
	private void RegisterSender(SyncObject obj)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0xD9FBEC", Offset = "0xD9FBEC", VA = "0xD9FBEC")]
	private void RegisterListener(SyncObject obj)
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xDA04C8", Offset = "0xDA04C8", VA = "0xDA04C8")]
	public SyncObject FindSyncObject(SyncObject.SyncObjectID syncID, bool bSender)
	{
		return null;
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xDA05BC", Offset = "0xDA05BC", VA = "0xDA05BC")]
	[CanBeNull]
	public static SyncObject FindListenerSyncObject(SyncObject.SyncObjectID syncID)
	{
		return null;
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xDA06BC", Offset = "0xDA06BC", VA = "0xDA06BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xDA1660", Offset = "0xDA1660", VA = "0xDA1660")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xDA1720", Offset = "0xDA1720", VA = "0xDA1720")]
	private void SendUpdatePacket()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xDA1B10", Offset = "0xDA1B10", VA = "0xDA1B10")]
	public SyncManager()
	{
	}
}
[Token(Token = "0x200030B")]
public abstract class SyncObject : MonoBehaviour
{
	[Token(Token = "0x200030C")]
	public enum SyncObjectID : byte
	{
		[Token(Token = "0x4001303")]
		Invalid,
		[Token(Token = "0x4001304")]
		Timestamp,
		[Token(Token = "0x4001305")]
		HexHits,
		[Token(Token = "0x4001306")]
		Ball,
		[Token(Token = "0x4001307")]
		BallTurnOver,
		[Token(Token = "0x4001308")]
		RacketHand,
		[Token(Token = "0x4001309")]
		FreeHand,
		[Token(Token = "0x400130A")]
		Head,
		[Token(Token = "0x400130B")]
		Score,
		[Token(Token = "0x400130C")]
		Wave,
		[Token(Token = "0x400130D")]
		GameEnd,
		[Token(Token = "0x400130E")]
		GameEvents,
		[Token(Token = "0x400130F")]
		Voice,
		[Token(Token = "0x4001310")]
		SwitchConnection
	}

	[Token(Token = "0x200030D")]
	[Flags]
	public enum SyncObjectIDFlag
	{
		[Token(Token = "0x4001312")]
		None = 0,
		[Token(Token = "0x4001313")]
		Invalid = 1,
		[Token(Token = "0x4001314")]
		Timestamp = 2,
		[Token(Token = "0x4001315")]
		HexHits = 4,
		[Token(Token = "0x4001316")]
		Ball = 8,
		[Token(Token = "0x4001317")]
		BallTurnOver = 0x10,
		[Token(Token = "0x4001318")]
		RacketHand = 0x20,
		[Token(Token = "0x4001319")]
		FreeHand = 0x40,
		[Token(Token = "0x400131A")]
		Head = 0x80,
		[Token(Token = "0x400131B")]
		Score = 0x100,
		[Token(Token = "0x400131C")]
		Wave = 0x200,
		[Token(Token = "0x400131D")]
		GameEnd = 0x400,
		[Token(Token = "0x400131E")]
		GameEvents = 0x800,
		[Token(Token = "0x400131F")]
		Voice = 0x1000,
		[Token(Token = "0x4001320")]
		SwitchConnection = 0x2000
	}

	[Serializable]
	[Token(Token = "0x200030E")]
	public class SerializableSyncObjectID : SerializableEnum<SyncObjectID>
	{
		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xDA1E78", Offset = "0xDA1E78", VA = "0xDA1E78")]
		public SerializableSyncObjectID()
		{
		}
	}

	[Token(Token = "0x200030F")]
	[CompilerGenerated]
	private sealed class <onEnableCo>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SyncObject <>4__this;

		[Token(Token = "0x170002EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C1")]
			[Address(RVA = "0xDA2004", Offset = "0xDA2004", VA = "0xDA2004", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xDA204C", Offset = "0xDA204C", VA = "0xDA204C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xDA1E44", Offset = "0xDA1E44", VA = "0xDA1E44")]
		[DebuggerHidden]
		public <onEnableCo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xDA1F0C", Offset = "0xDA1F0C", VA = "0xDA1F0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xDA1F10", Offset = "0xDA1F10", VA = "0xDA1F10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xDA200C", Offset = "0xDA200C", VA = "0xDA200C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableSyncObjectID _objectID;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOwner;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool fullDuplex;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _indexOfLengthByte;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _indexAtStartOfObjectParsing;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _lastHeaderLength;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected byte _expectedLength;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _duringObj;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private byte[] _lastSendBuffer;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _haveInitData;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private PlayerID _orgPlayerID;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	private bool _orgIsOwner;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	private bool _orgFullDuplex;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _onEnableCo;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int HeaderSize;

	[Token(Token = "0x170002ED")]
	public virtual PlayerID playerID
	{
		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xDA1DC0", Offset = "0xDA1DC0", VA = "0xDA1DC0", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return default(PlayerID);
		}
		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xDA1DC8", Offset = "0xDA1DC8", VA = "0xDA1DC8", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xDA1D98", Offset = "0xDA1D98", VA = "0xDA1D98")]
	public static SyncObjectIDFlag SyncObjectID2Flag(SyncObjectID objId)
	{
		return default(SyncObjectIDFlag);
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xD94B34", Offset = "0xD94B34", VA = "0xD94B34", Slot = "6")]
	public virtual void Cleanup()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xD954CC", Offset = "0xD954CC", VA = "0xD954CC", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xDA1DD0", Offset = "0xDA1DD0", VA = "0xDA1DD0")]
	[IteratorStateMachine(typeof(<onEnableCo>d__24))]
	private IEnumerator onEnableCo()
	{
		return null;
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xD958EC", Offset = "0xD958EC", VA = "0xD958EC", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xDA1E6C", Offset = "0xDA1E6C", VA = "0xDA1E6C")]
	public void SetOwner(bool bOwner)
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xD9F110", Offset = "0xD9F110", VA = "0xD9F110")]
	public void Close(int index)
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xD9F00C", Offset = "0xD9F00C", VA = "0xD9F00C")]
	public void WriteHeader(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xDA13FC", Offset = "0xDA13FC", VA = "0xDA13FC")]
	public static SyncObjectID PeekHeader(byte[] buffer, int index, out byte length)
	{
		return default(SyncObjectID);
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xDA157C", Offset = "0xDA157C", VA = "0xDA157C")]
	public static bool PacketContainsID(byte[] buffer, int size, SyncObjectID ID)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B4")]
	public abstract bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet);

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xDA1454", Offset = "0xDA1454", VA = "0xDA1454")]
	public bool StartParsingObject(byte[] buffer, ref int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60010B6")]
	public abstract void onSessionStart();

	[Token(Token = "0x60010B7")]
	public abstract bool NeedToSendPacket();

	[Token(Token = "0x60010B8")]
	public abstract bool NeedToSendReliablePacket();

	[Token(Token = "0x60010B9")]
	public abstract void AddDataToSendBuffer(byte[] buffer, ref int index);

	[Token(Token = "0x60010BA")]
	public abstract void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime);

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xD97B10", Offset = "0xD97B10", VA = "0xD97B10")]
	protected SyncObject()
	{
	}
}
[Token(Token = "0x2000310")]
public class SyncSwitchConnection : SyncObject
{
	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncSwitchConnection inst;

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xDA2054", Offset = "0xDA2054", VA = "0xDA2054")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xDA20AC", Offset = "0xDA20AC", VA = "0xDA20AC", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xDA20B4", Offset = "0xDA20B4", VA = "0xDA20B4", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xDA20B8", Offset = "0xDA20B8", VA = "0xDA20B8", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xDA20C0", Offset = "0xDA20C0", VA = "0xDA20C0", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xDA20C8", Offset = "0xDA20C8", VA = "0xDA20C8", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xDA20CC", Offset = "0xDA20CC", VA = "0xDA20CC", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xDA20D0", Offset = "0xDA20D0", VA = "0xDA20D0")]
	public SyncSwitchConnection()
	{
	}
}
[Token(Token = "0x2000311")]
public class SyncTime : SyncObject
{
	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _maxOffsetFromLastKnownTime;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float lastKnownRemoteTime;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float currentRemoteTime;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float localSessionTime;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float networkJitter;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float lastKnownRemoteTimeScale;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncTime inst;

	[Token(Token = "0x170002F0")]
	public static bool remoteIsPaused
	{
		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xDA2124", Offset = "0xDA2124", VA = "0xDA2124")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xDA216C", Offset = "0xDA216C", VA = "0xDA216C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xDA21B8", Offset = "0xDA21B8", VA = "0xDA21B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xDA2244", Offset = "0xDA2244", VA = "0xDA2244")]
	public static float getLastRemoteTimeScale()
	{
		return default(float);
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xDA2298", Offset = "0xDA2298", VA = "0xDA2298", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xDA0304", Offset = "0xDA0304", VA = "0xDA0304")]
	public void onSessionRestart()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xDA22F8", Offset = "0xDA22F8", VA = "0xDA22F8", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xDA2378", Offset = "0xDA2378", VA = "0xDA2378")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xDA23C8", Offset = "0xDA23C8", VA = "0xDA23C8", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xDA23D4", Offset = "0xDA23D4", VA = "0xDA23D4", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xDA240C", Offset = "0xDA240C", VA = "0xDA240C", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xDA2414", Offset = "0xDA2414", VA = "0xDA2414", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xDA2510", Offset = "0xDA2510", VA = "0xDA2510", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xDA2734", Offset = "0xDA2734", VA = "0xDA2734")]
	public SyncTime()
	{
	}
}
[Token(Token = "0x2000312")]
public class SyncTransform : SyncObject
{
	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _velocity;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _angularVelocity;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float predictionLookAheadMaxTime;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float interpolationSoftness;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float interpolationDT;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeSinceLastSend;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float timeOfLastData;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 _lastPosition;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Quaternion _lastRotation;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float auxiliary;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool sendAuxiliary;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 predictedPos;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion predictedRotation;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 interpolationPosVel;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Quaternion interpolationRotVel;

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xB5DFC0", Offset = "0xB5DFC0", VA = "0xB5DFC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xB5DFE4", Offset = "0xB5DFE4", VA = "0xB5DFE4", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xB5DFEC", Offset = "0xB5DFEC", VA = "0xB5DFEC", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xB5E010", Offset = "0xB5E010", VA = "0xB5E010", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xB5E01C", Offset = "0xB5E01C", VA = "0xB5E01C", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xB5E038", Offset = "0xB5E038", VA = "0xB5E038", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xB5E040", Offset = "0xB5E040", VA = "0xB5E040")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xB5E6F4", Offset = "0xB5E6F4", VA = "0xB5E6F4", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0xB5E7AC", Offset = "0xB5E7AC", VA = "0xB5E7AC", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0xB5E240", Offset = "0xB5E240", VA = "0xB5E240")]
	private void CalcPrediction()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0xB5E844", Offset = "0xB5E844", VA = "0xB5E844")]
	public SyncTransform()
	{
	}
}
[Token(Token = "0x2000313")]
public class SyncVoice : SyncObject
{
	[Token(Token = "0x2000314")]
	private struct VoiceProcess
	{
		[Token(Token = "0x2000315")]
		public enum ThreadState
		{
			[Token(Token = "0x4001366")]
			Stopped,
			[Token(Token = "0x4001367")]
			Starting,
			[Token(Token = "0x4001368")]
			Running
		}

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool started;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Thread thread;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ThreadState threadState;
	}

	[Token(Token = "0x2000316")]
	public struct DecompressChunk
	{
		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte[] buffer;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int size;
	}

	[StructLayout(2)]
	[Token(Token = "0x2000317")]
	private struct ShortBytes
	{
		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte b1;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte b2;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public short value;
	}

	[Token(Token = "0x2000318")]
	[CompilerGenerated]
	private sealed class <SetupVoiceProcessesCo>d__59 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SyncVoice <>4__this;

		[Token(Token = "0x170002F3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xB623C4", Offset = "0xB623C4", VA = "0xB623C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xB6240C", Offset = "0xB6240C", VA = "0xB6240C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xB60B60", Offset = "0xB60B60", VA = "0xB60B60")]
		[DebuggerHidden]
		public <SetupVoiceProcessesCo>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xB62278", Offset = "0xB62278", VA = "0xB62278", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xB6227C", Offset = "0xB6227C", VA = "0xB6227C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xB623CC", Offset = "0xB623CC", VA = "0xB623CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncVoice inst;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public uint desiredSampleRate;

	[Token(Token = "0x400133F")]
	public const int MAX_SEND_BYTES = 512;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool printWarnings;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int playbackBufferWriteIndex;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int playbackBufferReadIndex;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private byte[] playbackBuffer;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private short[] auxShortBuffer;

	[Token(Token = "0x4001345")]
	public const uint MAX_UNCOMPRESSED_BLOCK_SIZE = 48000u;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private byte[] _partialRecordedBlock;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint _partialRecordedBlockSize;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VoiceProcess _voiceRecorder;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private VoiceProcess _voicePlayback;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _loudness;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _myLoudness;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int _statsBytesReceived;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _statsBytesPlayedBack;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _statsBytesSent;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _statsTime;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioClip streamClipInsteadOfVoice;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float[] streamClipInsteadOfVoiceData;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int curStreamedClipSample;

	[Token(Token = "0x4001353")]
	private const int NUM_COMPRESSED_BUFFERS = 16;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Queue<DecompressChunk> _sendQueue;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Stack<byte[]> _sendBufferCache;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Queue<DecompressChunk> _decompressQueue;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Stack<byte[]> _decompressBufferCache;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private AudioSource _audioSource;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NxSource _nxSource;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private NoiseCanceller _noiseCanceller;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private PXR_Audio_Spatializer_AudioSource _PXRAudioSource;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool useNoiseCanceller;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string _coroutineTag;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _skipEnableAndDisable;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _queuedUncompressedAudioSeconds;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _skipEveryNthIncomingSample;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private ShortBytes _bytesToShort;

	[Token(Token = "0x170002F1")]
	public float loudness
	{
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xB5E8F4", Offset = "0xB5E8F4", VA = "0xB5E8F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002F2")]
	public float myLoudness
	{
		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xB5E8FC", Offset = "0xB5E8FC", VA = "0xB5E8FC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60010E7")]
	private void DestroyNull<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xB5E904", Offset = "0xB5E904", VA = "0xB5E904")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xB5EC90", Offset = "0xB5EC90", VA = "0xB5EC90")]
	private void setOutputSampleRate()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xB5EDD4", Offset = "0xB5EDD4", VA = "0xB5EDD4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xB5EF08", Offset = "0xB5EF08", VA = "0xB5EF08")]
	private void ClearBuffers()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xB5F1A8", Offset = "0xB5F1A8", VA = "0xB5F1A8", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xB5F554", Offset = "0xB5F554", VA = "0xB5F554")]
	private void StartPlayback()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xB5F7DC", Offset = "0xB5F7DC", VA = "0xB5F7DC")]
	private void StartVoiceDecompresserThread()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xB5F408", Offset = "0xB5F408", VA = "0xB5F408")]
	private void StopPlayback()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xB5F930", Offset = "0xB5F930", VA = "0xB5F930")]
	private void StartRecording()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xB5FA70", Offset = "0xB5FA70", VA = "0xB5FA70")]
	private void StartVoiceRecorderThread()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xB5F300", Offset = "0xB5F300", VA = "0xB5F300")]
	private void StopRecording()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xB5FBC4", Offset = "0xB5FBC4", VA = "0xB5FBC4", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xB5FC48", Offset = "0xB5FC48", VA = "0xB5FC48", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xB5FC50", Offset = "0xB5FC50", VA = "0xB5FC50", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xB5FCA0", Offset = "0xB5FCA0", VA = "0xB5FCA0", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xB5FCA8", Offset = "0xB5FCA8", VA = "0xB5FCA8", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xB60000", Offset = "0xB60000", VA = "0xB60000")]
	private void voiceDecompresserJob()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xB607E0", Offset = "0xB607E0", VA = "0xB607E0", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xB5F4E0", Offset = "0xB5F4E0", VA = "0xB5F4E0")]
	[IteratorStateMachine(typeof(<SetupVoiceProcessesCo>d__59))]
	private IEnumerator<float> SetupVoiceProcessesCo()
	{
		return null;
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xB60B88", Offset = "0xB60B88", VA = "0xB60B88")]
	private void voiceRecorderJob()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xB61774", Offset = "0xB61774", VA = "0xB61774")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xB61B3C", Offset = "0xB61B3C", VA = "0xB61B3C", Slot = "7")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xB61C2C", Offset = "0xB61C2C", VA = "0xB61C2C", Slot = "8")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xB61C50", Offset = "0xB61C50", VA = "0xB61C50")]
	private void OnAudioFilterRead(float[] floatBuf, int numChannels)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xB620D4", Offset = "0xB620D4", VA = "0xB620D4")]
	public SyncVoice()
	{
	}
}
[Token(Token = "0x2000319")]
public class SyncWave : SyncObject
{
	[Token(Token = "0x200031A")]
	public struct SnakeMove
	{
		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint targetUniqueID;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntVector2[] hexCoords;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HexTile.HexDirection lastMoveDir;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool reversed;
	}

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SyncWave inst;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _sendCreateWaveIndex;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _sendDestroyWaveIndex;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _sendCreateWaveShift;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _sendFlippedHorizontally;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _sendFlippedVertically;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _receivedCreateWaveIndex;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _receivedDestroyWaveIndex;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _receivedCreateWaveShift;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _receivedFlippedHorizontally;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool _receivedFlippedVertically;

	[Token(Token = "0x400137C")]
	private const int _desroyWaveBits = 16;

	[Token(Token = "0x400137D")]
	private const int _destroyWaveMask = 65535;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<SnakeMove> _receivedSnakeMoves;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<SnakeMove> _sendSnakeMoves;

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xB62468", Offset = "0xB62468", VA = "0xB62468")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xB624D8", Offset = "0xB624D8", VA = "0xB624D8", Slot = "10")]
	public override void onSessionStart()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xB6259C", Offset = "0xB6259C", VA = "0xB6259C", Slot = "6")]
	public override void Cleanup()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xB625C0", Offset = "0xB625C0", VA = "0xB625C0")]
	public static bool needToMoveSnake(uint targetUniqueID, out SnakeMove move)
	{
		return default(bool);
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xB6274C", Offset = "0xB6274C", VA = "0xB6274C")]
	public static void reportSnakeMove(uint targetUniqueID, List<HexTile> hexTiles, HexTile.HexDirection lastMoveDir, bool reversed)
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xB6294C", Offset = "0xB6294C", VA = "0xB6294C")]
	public static bool needToDestroyWave(ref int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xB629FC", Offset = "0xB629FC", VA = "0xB629FC")]
	public static bool needToCreateWave(ref int waveIndex, ref int waveShift, ref bool flippedHorizontally, ref bool flippedVertically)
	{
		return default(bool);
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xB62B08", Offset = "0xB62B08", VA = "0xB62B08")]
	public static void reportWaveDestroyed(int waveIndex)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xB62CC0", Offset = "0xB62CC0", VA = "0xB62CC0")]
	public static void reportWaveCreated(int waveIndex, int wavePosShift, bool flippedHorizontally, bool flippedVertically)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xB62F04", Offset = "0xB62F04", VA = "0xB62F04", Slot = "9")]
	public override bool WantToReadPacket(bool bOldPacket, bool bReliablePakcet)
	{
		return default(bool);
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xB62F0C", Offset = "0xB62F0C", VA = "0xB62F0C", Slot = "11")]
	public override bool NeedToSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xB62F18", Offset = "0xB62F18", VA = "0xB62F18", Slot = "12")]
	public override bool NeedToSendReliablePacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xB62F88", Offset = "0xB62F88", VA = "0xB62F88", Slot = "13")]
	public override void AddDataToSendBuffer(byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xB63200", Offset = "0xB63200", VA = "0xB63200", Slot = "14")]
	public override void ReadDataFromBuffer(byte[] buffer, ref int index, float remoteTime)
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xB631E8", Offset = "0xB631E8", VA = "0xB631E8")]
	private byte packCoords(IntVector2 hexCoords)
	{
		return default(byte);
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xB63774", Offset = "0xB63774", VA = "0xB63774")]
	private IntVector2 unpackCoords(byte packedCoords)
	{
		return default(IntVector2);
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0xB631F4", Offset = "0xB631F4", VA = "0xB631F4")]
	private byte packDirectionAndReversed(HexTile.HexDirection direction, bool reversed)
	{
		return default(byte);
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0xB63784", Offset = "0xB63784", VA = "0xB63784")]
	private void unpackDirectionAndReversed(byte packed, out HexTile.HexDirection direction, out bool reversed)
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0xB63798", Offset = "0xB63798", VA = "0xB63798")]
	public SyncWave()
	{
	}
}
[Token(Token = "0x200031B")]
public class CurrentConnection : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200031C")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool doneGettingUserDetails;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RNXDepot.FriendDepot<PlayerProfileData> opponentProfile;

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xB661DC", Offset = "0xB661DC", VA = "0xB661DC")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xB66300", Offset = "0xB66300", VA = "0xB66300")]
		internal bool <LoadOpponentInfoCo>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xB66308", Offset = "0xB66308", VA = "0xB66308")]
		internal bool <LoadOpponentInfoCo>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200031D")]
	[CompilerGenerated]
	private sealed class <LoadOpponentInfoCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurrentConnection <>4__this;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass4_0 <>8__1;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TaskCompletionSource<PlayerProfileData> promise;

		[Token(Token = "0x17000303")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001156")]
			[Address(RVA = "0xB668B4", Offset = "0xB668B4", VA = "0xB668B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000304")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001158")]
			[Address(RVA = "0xB668FC", Offset = "0xB668FC", VA = "0xB668FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xB63B1C", Offset = "0xB63B1C", VA = "0xB63B1C")]
		[DebuggerHidden]
		public <LoadOpponentInfoCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xB66358", Offset = "0xB66358", VA = "0xB66358", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xB6635C", Offset = "0xB6635C", VA = "0xB6635C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xB668BC", Offset = "0xB668BC", VA = "0xB668BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031E")]
	[CompilerGenerated]
	private sealed class <DisposeFirstConnectionCo>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000305")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600115C")]
			[Address(RVA = "0xB66A24", Offset = "0xB66A24", VA = "0xB66A24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000306")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600115E")]
			[Address(RVA = "0xB66A6C", Offset = "0xB66A6C", VA = "0xB66A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xB64DF8", Offset = "0xB64DF8", VA = "0xB64DF8")]
		[DebuggerHidden]
		public <DisposeFirstConnectionCo>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xB66958", Offset = "0xB66958", VA = "0xB66958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xB6695C", Offset = "0xB6695C", VA = "0xB6695C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xB66A2C", Offset = "0xB66A2C", VA = "0xB66A2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000320")]
	[CompilerGenerated]
	private sealed class <FlushAllSyncManagerMessagesAndCleanup>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x17000307")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001165")]
			[Address(RVA = "0xB66D4C", Offset = "0xB66D4C", VA = "0xB66D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000308")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001167")]
			[Address(RVA = "0xB66D94", Offset = "0xB66D94", VA = "0xB66D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xB65A18", Offset = "0xB65A18", VA = "0xB65A18")]
		[DebuggerHidden]
		public <FlushAllSyncManagerMessagesAndCleanup>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xB66BA0", Offset = "0xB66BA0", VA = "0xB66BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xB66BA4", Offset = "0xB66BA4", VA = "0xB66BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xB66D54", Offset = "0xB66D54", VA = "0xB66D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CurrentConnection inst;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CoroutineHandle _loadOpponentInfoCo;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerProfileData _otherPlayerProfile;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private P2PNode _readConnection;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private P2PNode _writeConnection;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly ConcurrentQueue<byte[]> _switchQueue;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private P2PNode _switchConnection;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _switchPacketCount;

	[Token(Token = "0x400138E")]
	private const float DISPOSE_FIRST_CONNECTION_COOLDOWN = 5f;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly ConcurrentQueue<byte[]> _packetQueue;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerID roundStartingPlayer;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _announcerSeed;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _remotePlayerLeftOrDisconnected;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _remotePlayerLeftExplicitly;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool _localDisconnected;

	[Token(Token = "0x170002F5")]
	private static string MyName
	{
		[Token(Token = "0x600111D")]
		[Address(RVA = "0xB63B44", Offset = "0xB63B44", VA = "0xB63B44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002F6")]
	private static string OtherPlayerName
	{
		[Token(Token = "0x600111E")]
		[Address(RVA = "0xB63BA0", Offset = "0xB63BA0", VA = "0xB63BA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002F7")]
	public static string Player1Name
	{
		[Token(Token = "0x600111F")]
		[Address(RVA = "0xB63BEC", Offset = "0xB63BEC", VA = "0xB63BEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002F8")]
	public static string Player2Name
	{
		[Token(Token = "0x6001120")]
		[Address(RVA = "0xB63C98", Offset = "0xB63C98", VA = "0xB63C98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002F9")]
	public string OtherPlayerId
	{
		[Token(Token = "0x6001121")]
		[Address(RVA = "0xB63D44", Offset = "0xB63D44", VA = "0xB63D44")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001122")]
		[Address(RVA = "0xB63D4C", Offset = "0xB63D4C", VA = "0xB63D4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002FA")]
	public static RnxPlatform.User OtherPlayerRnxUser
	{
		[Token(Token = "0x6001123")]
		[Address(RVA = "0xB63D54", Offset = "0xB63D54", VA = "0xB63D54")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001124")]
		[Address(RVA = "0xB63D9C", Offset = "0xB63D9C", VA = "0xB63D9C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170002FB")]
	public PlayerProfileData OtherPlayerProfile
	{
		[Token(Token = "0x6001125")]
		[Address(RVA = "0xB63DEC", Offset = "0xB63DEC", VA = "0xB63DEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170002FC")]
	public static bool IsPeerToPeer
	{
		[Token(Token = "0x6001126")]
		[Address(RVA = "0xB63EF4", Offset = "0xB63EF4", VA = "0xB63EF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002FD")]
	public static bool IsNativePlatformPeerToPeer
	{
		[Token(Token = "0x6001127")]
		[Address(RVA = "0xB63FBC", Offset = "0xB63FBC", VA = "0xB63FBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002FE")]
	public static bool HasConnection
	{
		[Token(Token = "0x6001128")]
		[Address(RVA = "0xB64084", Offset = "0xB64084", VA = "0xB64084")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170002FF")]
	public static PlayerID MyPlayerId
	{
		[Token(Token = "0x6001129")]
		[Address(RVA = "0xB640F0", Offset = "0xB640F0", VA = "0xB640F0")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x17000300")]
	public static bool AmITheHost
	{
		[Token(Token = "0x600112A")]
		[Address(RVA = "0xB6413C", Offset = "0xB6413C", VA = "0xB6413C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000301")]
	private static bool IsReceiver
	{
		[Token(Token = "0x600112E")]
		[Address(RVA = "0xB64830", Offset = "0xB64830", VA = "0xB64830")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000302")]
	private static bool IsInitiator
	{
		[Token(Token = "0x600112F")]
		[Address(RVA = "0xB64834", Offset = "0xB64834", VA = "0xB64834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0xB63894", Offset = "0xB63894", VA = "0xB63894", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0xB638EC", Offset = "0xB638EC", VA = "0xB638EC")]
	public TaskCompletionSource<PlayerProfileData> SetupUser(string id)
	{
		return null;
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0xB63A8C", Offset = "0xB63A8C", VA = "0xB63A8C")]
	[IteratorStateMachine(typeof(<LoadOpponentInfoCo>d__4))]
	private IEnumerator<float> LoadOpponentInfoCo(TaskCompletionSource<PlayerProfileData> promise)
	{
		return null;
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xB64230", Offset = "0xB64230", VA = "0xB64230")]
	public void SetConnection(P2PNode connection)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xB645BC", Offset = "0xB645BC", VA = "0xB645BC")]
	private void SwitchReadConnection(P2PNode readConnection)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xB647A8", Offset = "0xB647A8", VA = "0xB647A8")]
	private void SwitchWriteConnection(P2PNode writeConnection)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xB6484C", Offset = "0xB6484C", VA = "0xB6484C")]
	public void BetterConnectionFound(NodeStatus status)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xB6499C", Offset = "0xB6499C", VA = "0xB6499C")]
	private void SwitchConnectionOnReceivedData(byte[] packet)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xB64A00", Offset = "0xB64A00", VA = "0xB64A00")]
	public void OnSentSwitchPacket()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xB64A84", Offset = "0xB64A84", VA = "0xB64A84")]
	public void OnSwitchedConnection()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xB64A24", Offset = "0xB64A24", VA = "0xB64A24")]
	private static void DisposeFirstConnection()
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xB64D98", Offset = "0xB64D98", VA = "0xB64D98")]
	[IteratorStateMachine(typeof(<DisposeFirstConnectionCo>d__52))]
	private static IEnumerator<float> DisposeFirstConnectionCo()
	{
		return null;
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xB643A0", Offset = "0xB643A0", VA = "0xB643A0")]
	private void DisposeConnection()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xB64E34", Offset = "0xB64E34", VA = "0xB64E34")]
	private void DisposeP2PNode(ref P2PNode connection)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xB64FD4", Offset = "0xB64FD4", VA = "0xB64FD4")]
	public bool CanSendPacket()
	{
		return default(bool);
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xB65074", Offset = "0xB65074", VA = "0xB65074")]
	public void SendPacket(byte[] buffer, int size, bool reliable)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xB65250", Offset = "0xB65250", VA = "0xB65250")]
	public void SendVoicePacket(byte[] buffer, int size)
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xB65258", Offset = "0xB65258", VA = "0xB65258")]
	private void OnReceivedData(byte[] packet)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xB652B0", Offset = "0xB652B0", VA = "0xB652B0")]
	public bool ReceivePacket(byte[] buffer, out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xB653BC", Offset = "0xB653BC", VA = "0xB653BC")]
	public void SendStartingPlayerToOtherPlayer(PlayerID startingPlayerId)
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xB653E8", Offset = "0xB653E8", VA = "0xB653E8")]
	public void SetStartingPlayer(PlayerID startingPlayer)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xB653F0", Offset = "0xB653F0", VA = "0xB653F0")]
	public void SwitchStartingPlayer()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xB6555C", Offset = "0xB6555C", VA = "0xB6555C")]
	public PlayerID GetStartingPlayer()
	{
		return default(PlayerID);
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xB64E2C", Offset = "0xB64E2C", VA = "0xB64E2C")]
	public void ResetAnnouncerSeed()
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xB6562C", Offset = "0xB6562C", VA = "0xB6562C")]
	public void SetAnnouncerSeed(int seed)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xB65634", Offset = "0xB65634", VA = "0xB65634")]
	public int GetAnnouncerSeed()
	{
		return default(int);
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xB6439C", Offset = "0xB6439C", VA = "0xB6439C")]
	private void DebugAssertDisconnectionState()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xB64E20", Offset = "0xB64E20", VA = "0xB64E20")]
	private void ResetDisconnectionSate()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xB656C8", Offset = "0xB656C8", VA = "0xB656C8")]
	public void OnLocalPlayerDisconnected()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xB658D0", Offset = "0xB658D0", VA = "0xB658D0")]
	public void OnLocalPlayerDisconnectedDelayClose()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xB659B8", Offset = "0xB659B8", VA = "0xB659B8")]
	[IteratorStateMachine(typeof(<FlushAllSyncManagerMessagesAndCleanup>d__77))]
	private IEnumerator<float> FlushAllSyncManagerMessagesAndCleanup()
	{
		return null;
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xB65A40", Offset = "0xB65A40", VA = "0xB65A40")]
	public void OnRemotePlayerDisconnected(bool explicitly)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xB65C58", Offset = "0xB65C58", VA = "0xB65C58")]
	public bool DidDisconnectOccur()
	{
		return default(bool);
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xB65C78", Offset = "0xB65C78", VA = "0xB65C78")]
	public bool DidRemoteDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xB65C80", Offset = "0xB65C80", VA = "0xB65C80")]
	public bool DidRemoteLeaveExplicitly()
	{
		return default(bool);
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xB657C0", Offset = "0xB657C0", VA = "0xB657C0")]
	private static void CleanupMultiplayer()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xB66100", Offset = "0xB66100", VA = "0xB66100")]
	public CurrentConnection()
	{
	}
}
[Token(Token = "0x2000321")]
[RequireComponent(typeof(LobbyistClient))]
public class MultiplayerOverseer : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000322")]
	private class LobbyistClientCallbacks : IDisposable
	{
		[Token(Token = "0x2000323")]
		[CompilerGenerated]
		private sealed class <ConnectCo>d__9 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40013B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClientCallbacks <>4__this;

			[Token(Token = "0x40013B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TaskCompletionSource<bool> promise;

			[Token(Token = "0x17000311")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60011A4")]
				[Address(RVA = "0xB69CA4", Offset = "0xB69CA4", VA = "0xB69CA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011A6")]
				[Address(RVA = "0xB69CEC", Offset = "0xB69CEC", VA = "0xB69CEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A1")]
			[Address(RVA = "0xB69044", Offset = "0xB69044", VA = "0xB69044")]
			[DebuggerHidden]
			public <ConnectCo>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60011A2")]
			[Address(RVA = "0xB69AE8", Offset = "0xB69AE8", VA = "0xB69AE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A3")]
			[Address(RVA = "0xB69AEC", Offset = "0xB69AEC", VA = "0xB69AEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xB69CAC", Offset = "0xB69CAC", VA = "0xB69CAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000324")]
		[CompilerGenerated]
		private struct <OnMatchConnectingTask>d__20 : IAsyncStateMachine
		{
			[Token(Token = "0x40013BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40013BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40013BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClient client;

			[Token(Token = "0x40013BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private System.Threading.Tasks.Task<PlayerProfileData> <otherUserProfileTask>5__2;

			[Token(Token = "0x40013BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private YieldAwaitable.YieldAwaiter <>u__1;

			[Token(Token = "0x40013BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<PlayerProfileData> <>u__2;

			[Token(Token = "0x40013C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__3;

			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private TaskAwaiter<bool?> <>u__4;

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xB69D48", Offset = "0xB69D48", VA = "0xB69D48", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60011A8")]
			[Address(RVA = "0xB6A6B4", Offset = "0xB6A6B4", VA = "0xB6A6B4", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000326")]
		[CompilerGenerated]
		private sealed class <OnMatchConnectedCo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40013C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClientCallbacks <>4__this;

			[Token(Token = "0x17000313")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60011AF")]
				[Address(RVA = "0xB6AC6C", Offset = "0xB6AC6C", VA = "0xB6AC6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B1")]
				[Address(RVA = "0xB6ACB4", Offset = "0xB6ACB4", VA = "0xB6ACB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011AC")]
			[Address(RVA = "0xB69734", Offset = "0xB69734", VA = "0xB69734")]
			[DebuggerHidden]
			public <OnMatchConnectedCo>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60011AD")]
			[Address(RVA = "0xB6A7C8", Offset = "0xB6A7C8", VA = "0xB6A7C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011AE")]
			[Address(RVA = "0xB6A7CC", Offset = "0xB6A7CC", VA = "0xB6A7CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B0")]
			[Address(RVA = "0xB6AC74", Offset = "0xB6AC74", VA = "0xB6AC74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000327")]
		[CompilerGenerated]
		private sealed class <InitIceDelayCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40013C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40013C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x17000315")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60011B5")]
				[Address(RVA = "0xB6ADD0", Offset = "0xB6ADD0", VA = "0xB6ADD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011B7")]
				[Address(RVA = "0xB6AE18", Offset = "0xB6AE18", VA = "0xB6AE18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011B2")]
			[Address(RVA = "0xB69AA0", Offset = "0xB69AA0", VA = "0xB69AA0")]
			[DebuggerHidden]
			public <InitIceDelayCo>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x60011B3")]
			[Address(RVA = "0xB6AD10", Offset = "0xB6AD10", VA = "0xB6AD10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xB6AD14", Offset = "0xB6AD14", VA = "0xB6AD14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011B6")]
			[Address(RVA = "0xB6ADD8", Offset = "0xB6ADD8", VA = "0xB6ADD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LobbyistClient _client;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _playerID;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string _host;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _port;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly string _multiplayer_version;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _calledConnect;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _failReason;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _connectFailed;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _connected;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private System.Threading.Tasks.Task _onMatchConnectingTask;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CoroutineHandle _onMatchConnectedCo;

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xB686EC", Offset = "0xB686EC", VA = "0xB686EC")]
		public LobbyistClientCallbacks(LobbyistClient client, string host, int port, string playerID, string multiplayer_version)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xB68A90", Offset = "0xB68A90", VA = "0xB68A90", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xB68E10", Offset = "0xB68E10", VA = "0xB68E10")]
		public TaskCompletionSource<bool> Connect()
		{
			return null;
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xB68FB4", Offset = "0xB68FB4", VA = "0xB68FB4")]
		[IteratorStateMachine(typeof(<ConnectCo>d__9))]
		private IEnumerator<float> ConnectCo(TaskCompletionSource<bool> promise)
		{
			return null;
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xB6906C", Offset = "0xB6906C", VA = "0xB6906C")]
		private void OnClientConnected(LobbyistClient _)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xB69078", Offset = "0xB69078", VA = "0xB69078")]
		private void OnConnectionToServerFailed(LobbyistClient _, string reason)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xB6908C", Offset = "0xB6908C", VA = "0xB6908C")]
		private void OnDisconnectedFromServer(LobbyistClient _, string reason)
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xB69214", Offset = "0xB69214", VA = "0xB69214")]
		private void OnQueueFailed(LobbyistClient _)
		{
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xB69338", Offset = "0xB69338", VA = "0xB69338")]
		private void OnQueue(LobbyistClient _)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xB69388", Offset = "0xB69388", VA = "0xB69388")]
		private void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xB693C4", Offset = "0xB693C4", VA = "0xB693C4")]
		[AsyncStateMachine(typeof(<OnMatchConnectingTask>d__20))]
		private static System.Threading.Tasks.Task OnMatchConnectingTask(LobbyistClient client)
		{
			return null;
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xB694B4", Offset = "0xB694B4", VA = "0xB694B4")]
		private static void DeclineMatch(LobbyistClient client)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xB694D0", Offset = "0xB694D0", VA = "0xB694D0")]
		private static void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xB69544", Offset = "0xB69544", VA = "0xB69544")]
		private void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xB696C0", Offset = "0xB696C0", VA = "0xB696C0")]
		[IteratorStateMachine(typeof(<OnMatchConnectedCo>d__25))]
		private IEnumerator<float> OnMatchConnectedCo()
		{
			return null;
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xB6975C", Offset = "0xB6975C", VA = "0xB6975C")]
		private static void AnnounceMatchFound()
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xB6984C", Offset = "0xB6984C", VA = "0xB6984C")]
		private void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xB69A40", Offset = "0xB69A40", VA = "0xB69A40")]
		[IteratorStateMachine(typeof(<InitIceDelayCo>d__28))]
		private IEnumerator<float> InitIceDelayCo()
		{
			return null;
		}
	}

	[Token(Token = "0x2000328")]
	public static class OverseerState
	{
		[Token(Token = "0x17000317")]
		public static LobbyistClient.State State
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0xB6AE74", Offset = "0xB6AE74", VA = "0xB6AE74")]
			get
			{
				return default(LobbyistClient.State);
			}
		}

		[Token(Token = "0x17000318")]
		public static bool IsIdle
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0xB67E34", Offset = "0xB67E34", VA = "0xB67E34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000319")]
		public static bool IsQueued
		{
			[Token(Token = "0x60011BA")]
			[Address(RVA = "0xB67E4C", Offset = "0xB67E4C", VA = "0xB67E4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031A")]
		public static bool IsConnecting
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xB6AED0", Offset = "0xB6AED0", VA = "0xB6AED0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031B")]
		public static bool IsConnected
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xB64124", Offset = "0xB64124", VA = "0xB64124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031C")]
		public static bool IsConnectedToServer
		{
			[Token(Token = "0x60011BD")]
			[Address(RVA = "0xB6AEE8", Offset = "0xB6AEE8", VA = "0xB6AEE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031D")]
		public static LobbyistClient.Connecting Connecting
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xB641C4", Offset = "0xB641C4", VA = "0xB641C4")]
			get
			{
				return default(LobbyistClient.Connecting);
			}
		}

		[Token(Token = "0x1700031E")]
		public static QueueType PlayerIntent
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xB6B0DC", Offset = "0xB6B0DC", VA = "0xB6B0DC")]
			get
			{
				return default(QueueType);
			}
		}

		[Token(Token = "0x1700031F")]
		public static LobbyistClient.PlayerIntentParams PlayerIntentParams
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xB6B138", Offset = "0xB6B138", VA = "0xB6B138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000026")]
		public static event Action<bool> OnServerConnectionStateChanged
		{
			[Token(Token = "0x60011BF")]
			[Address(RVA = "0xB6AF44", Offset = "0xB6AF44", VA = "0xB6AF44")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xB6B010", Offset = "0xB6B010", VA = "0xB6B010")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xB691A8", Offset = "0xB691A8", VA = "0xB691A8")]
		public static void ServerConnectionStateChanged(bool isConnected)
		{
		}
	}

	[Token(Token = "0x2000329")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public System.Threading.Tasks.Task<bool> t;

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xB6B194", Offset = "0xB6B194", VA = "0xB6B194")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xB6B19C", Offset = "0xB6B19C", VA = "0xB6B19C")]
		internal bool <SignInCo>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200032B")]
	[CompilerGenerated]
	private sealed class <SignInCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string playerID;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass15_0 <>8__1;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <attemptsCount>5__2;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LobbyistClientConfig <conf>5__3;

		[Token(Token = "0x17000320")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xB6B818", Offset = "0xB6B818", VA = "0xB6B818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000321")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xB6B860", Offset = "0xB6B860", VA = "0xB6B860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xB67144", Offset = "0xB67144", VA = "0xB67144")]
		[DebuggerHidden]
		public <SignInCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xB6B298", Offset = "0xB6B298", VA = "0xB6B298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xB6B29C", Offset = "0xB6B29C", VA = "0xB6B29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xB6B820", Offset = "0xB6B820", VA = "0xB6B820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerOverseer inst;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LobbyistClient _lobbyistClient;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Expandable]
	public LobbyistClientConfig developmentLobbyistConfig;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Expandable]
	public LobbyistClientConfig productionLobbyistConfig;

	[Token(Token = "0x40013A6")]
	private const float RETRY_SIGNIN_EVERY = 15f;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LobbyistClientCallbacks _connector;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static CoroutineHandle _signInCo;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ICEProcess iceProcess;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static QueueType _intentOnSetupIce;

	[Token(Token = "0x17000309")]
	[CanBeNull]
	public static string MultiplayerVersionAndSeason
	{
		[Token(Token = "0x6001168")]
		[Address(RVA = "0xB66DF0", Offset = "0xB66DF0", VA = "0xB66DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700030A")]
	public LobbyistClientConfig LobbyistConfig
	{
		[Token(Token = "0x600116B")]
		[Address(RVA = "0xB66FC4", Offset = "0xB66FC4", VA = "0xB66FC4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700030B")]
	public bool isSearchingForRanked
	{
		[Token(Token = "0x600117B")]
		[Address(RVA = "0xB67DA4", Offset = "0xB67DA4", VA = "0xB67DA4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030C")]
	public bool isInvitingFriend
	{
		[Token(Token = "0x600117C")]
		[Address(RVA = "0xB67DC8", Offset = "0xB67DC8", VA = "0xB67DC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030D")]
	public bool isSearchingForPIN
	{
		[Token(Token = "0x600117D")]
		[Address(RVA = "0xB67DEC", Offset = "0xB67DEC", VA = "0xB67DEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030E")]
	public bool IsSetupToJoinPrivateFriendMatch
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xB67E10", Offset = "0xB67E10", VA = "0xB67E10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700030F")]
	public bool canBrowseAwayFromLobbyUntilConnected
	{
		[Token(Token = "0x600117F")]
		[Address(RVA = "0xB67E64", Offset = "0xB67E64", VA = "0xB67E64")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000310")]
	public bool canCancelRankedQueue
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0xB67F14", Offset = "0xB67F14", VA = "0xB67F14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xB66EB4", Offset = "0xB66EB4", VA = "0xB66EB4", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xB66F44", Offset = "0xB66F44", VA = "0xB66F44")]
	private void Awake()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xB67030", Offset = "0xB67030", VA = "0xB67030")]
	public void SignIn(string playerID)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xB670D0", Offset = "0xB670D0", VA = "0xB670D0")]
	[IteratorStateMachine(typeof(<SignInCo>d__15))]
	private static IEnumerator<float> SignInCo(string playerID)
	{
		return null;
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xB6716C", Offset = "0xB6716C", VA = "0xB6716C")]
	private void InitIce()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xB676C4", Offset = "0xB676C4", VA = "0xB676C4")]
	private static void OnUdpUtpChosenAddress(LobbyistClient _, AgentType type, object data)
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xB67738", Offset = "0xB67738", VA = "0xB67738")]
	private static void OnEndIce(LobbyistClient _, AgentType type, [CanBeNull] object data)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xB677AC", Offset = "0xB677AC", VA = "0xB677AC")]
	private static void OnEstablished(LobbyistClient _, AgentType type, object data)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xB67820", Offset = "0xB67820", VA = "0xB67820")]
	private static void OnRxReflexiveAddress(LobbyistClient _, ReflexiveAddress[] addresses)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xB67884", Offset = "0xB67884", VA = "0xB67884")]
	private static void OnRxHostAddresses(LobbyistClient _, string[] addresses)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xB678E8", Offset = "0xB678E8", VA = "0xB678E8")]
	private static void OnRxSuccessfulTest(LobbyistClient client, AgentType type, object data)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xB6795C", Offset = "0xB6795C", VA = "0xB6795C")]
	private static void OnRxRelayedAddresses(LobbyistClient _, string[] addresses)
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xB679C0", Offset = "0xB679C0", VA = "0xB679C0")]
	private static void OnRxTestsDone(LobbyistClient client, AgentType agentType)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xB67A24", Offset = "0xB67A24", VA = "0xB67A24")]
	private static void OnFirstIceConnected(ICEProcess _, NodeStatus status)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xB67AC4", Offset = "0xB67AC4", VA = "0xB67AC4")]
	private static void OnICEConnectionFailed(ICEProcess _)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xB67CA0", Offset = "0xB67CA0", VA = "0xB67CA0")]
	private static void OnICEBetterConnected(ICEProcess _, NodeStatus status)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xB65CA0", Offset = "0xB65CA0", VA = "0xB65CA0")]
	public static void CleanIce()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xB67F30", Offset = "0xB67F30", VA = "0xB67F30")]
	public void InviteFriend(string friendId, CoMode coMode)
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xB67F4C", Offset = "0xB67F4C", VA = "0xB67F4C")]
	public void QueueForGroupLaunch(ulong roomId, CoMode coMode)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xB67F9C", Offset = "0xB67F9C", VA = "0xB67F9C")]
	public void QueueForPIN(string pin, CoMode coMode)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xB67FB8", Offset = "0xB67FB8", VA = "0xB67FB8")]
	public void QueueForRanked(CoModes coModes)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xB6804C", Offset = "0xB6804C", VA = "0xB6804C")]
	public void CancelQueueIfQueued()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xB68148", Offset = "0xB68148", VA = "0xB68148")]
	public void OnPlayerSentLog(string logToken)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xB681F0", Offset = "0xB681F0", VA = "0xB681F0")]
	private static void SetupMultiplayer()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xB68544", Offset = "0xB68544", VA = "0xB68544")]
	public static DateTime NetworkUtcNow()
	{
		return default(DateTime);
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xB685C8", Offset = "0xB685C8", VA = "0xB685C8")]
	public static long NetworkEpochTimeNow()
	{
		return default(long);
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xB67BC8", Offset = "0xB67BC8", VA = "0xB67BC8")]
	private static void MultiplayerUITriggerBack()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0xB657A4", Offset = "0xB657A4", VA = "0xB657A4")]
	public void DisconnectMatch()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0xB68648", Offset = "0xB68648", VA = "0xB68648")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0xB686E4", Offset = "0xB686E4", VA = "0xB686E4")]
	public MultiplayerOverseer()
	{
	}
}
[Token(Token = "0x200032C")]
public class Elo : MonoBehaviour
{
	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float K;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float N;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initialRating;

	[Token(Token = "0x40013D7")]
	public const float WIN = 1f;

	[Token(Token = "0x40013D8")]
	public const float DRAW = 0.5f;

	[Token(Token = "0x40013D9")]
	public const float LOSS = 0f;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Elo inst;

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xB6B8BC", Offset = "0xB6B8BC", VA = "0xB6B8BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xB6B914", Offset = "0xB6B914", VA = "0xB6B914")]
	public float CalcExpectedScore(float mySR, float opSR)
	{
		return default(float);
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xB6B960", Offset = "0xB6B960", VA = "0xB6B960")]
	public float CalcNewRating(float mySR, float opSR, float Smy)
	{
		return default(float);
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xB6B9D8", Offset = "0xB6B9D8", VA = "0xB6B9D8")]
	public Elo()
	{
	}
}
[Token(Token = "0x200032D")]
public class Glicko : MonoBehaviour
{
	[Token(Token = "0x200032E")]
	public struct Rating
	{
		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float mean;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float deviation;

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xB6BA50", Offset = "0xB6BA50", VA = "0xB6BA50")]
		public Rating(float mean, float deviation)
		{
		}
	}

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minRD;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxRD;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float initialRating;

	[Token(Token = "0x40013DE")]
	private const float Q = 0.005756463f;

	[Token(Token = "0x40013DF")]
	public const int unratedSkillRating = -1;

	[Token(Token = "0x40013E0")]
	public const float WIN = 1f;

	[Token(Token = "0x40013E1")]
	public const float DRAW = 0.5f;

	[Token(Token = "0x40013E2")]
	public const float LOSS = 0f;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Glicko inst;

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xB6B9F4", Offset = "0xB6B9F4", VA = "0xB6B9F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xB6BA4C", Offset = "0xB6BA4C", VA = "0xB6BA4C")]
	private void SelfTest()
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xB6BB54", Offset = "0xB6BB54", VA = "0xB6BB54")]
	private float CalcImpact(float ratingDeviation)
	{
		return default(float);
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0xB6BB88", Offset = "0xB6BB88", VA = "0xB6BB88")]
	private float _CalcExpectedScore(ref Rating rating, ref Rating otherRating, float impact)
	{
		return default(float);
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xB6BA58", Offset = "0xB6BA58", VA = "0xB6BA58")]
	public Rating CalcNewRating(ref Rating rating, float actualScore, ref Rating otherRating)
	{
		return default(Rating);
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xB6BBC4", Offset = "0xB6BBC4", VA = "0xB6BBC4")]
	public float CalcExpectedScore(ref Rating rating, ref Rating otherRating)
	{
		return default(float);
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xB6BC44", Offset = "0xB6BC44", VA = "0xB6BC44")]
	public Glicko()
	{
	}
}
[Token(Token = "0x200032F")]
public class VersusRating : MonoBehaviour
{
	[Token(Token = "0x2000331")]
	[CompilerGenerated]
	private sealed class <InitCo>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusRating <>4__this;

		[Token(Token = "0x17000324")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60011F8")]
			[Address(RVA = "0xB6DABC", Offset = "0xB6DABC", VA = "0xB6DABC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000325")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011FA")]
			[Address(RVA = "0xB6DB04", Offset = "0xB6DB04", VA = "0xB6DB04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xB6C1C8", Offset = "0xB6C1C8", VA = "0xB6C1C8")]
		[DebuggerHidden]
		public <InitCo>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xB6D7E0", Offset = "0xB6D7E0", VA = "0xB6D7E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xB6D7E4", Offset = "0xB6D7E4", VA = "0xB6D7E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xB6DAC4", Offset = "0xB6DAC4", VA = "0xB6DAC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000332")]
	[CompilerGenerated]
	private sealed class <DoRankedMatchStart>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusRating <>4__this;

		[Token(Token = "0x17000326")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60011FE")]
			[Address(RVA = "0xB6DD60", Offset = "0xB6DD60", VA = "0xB6DD60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000327")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001200")]
			[Address(RVA = "0xB6DDA8", Offset = "0xB6DDA8", VA = "0xB6DDA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xB6C3FC", Offset = "0xB6C3FC", VA = "0xB6C3FC")]
		[DebuggerHidden]
		public <DoRankedMatchStart>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xB6DB60", Offset = "0xB6DB60", VA = "0xB6DB60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xB6DB64", Offset = "0xB6DB64", VA = "0xB6DB64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xB6DD68", Offset = "0xB6DD68", VA = "0xB6DD68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000333")]
	[CompilerGenerated]
	private sealed class <DoRatingForMatch>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusRating <>4__this;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <myScore>5__2;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int <opScore>5__3;

		[Token(Token = "0x17000328")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001204")]
			[Address(RVA = "0xB6E368", Offset = "0xB6E368", VA = "0xB6E368", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000329")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001206")]
			[Address(RVA = "0xB6E3B0", Offset = "0xB6E3B0", VA = "0xB6E3B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xB6CB08", Offset = "0xB6CB08", VA = "0xB6CB08")]
		[DebuggerHidden]
		public <DoRatingForMatch>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xB6DE04", Offset = "0xB6DE04", VA = "0xB6DE04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xB6DE08", Offset = "0xB6DE08", VA = "0xB6DE08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xB6E370", Offset = "0xB6E370", VA = "0xB6E370", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013E6")]
	public const int unratedSkillRating = -1;

	[Token(Token = "0x40013E7")]
	public const int unratedSkillRatingDev = -1;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VersusRating inst;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutineHandle _getOldRatingsCo;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private CoroutineHandle _calcNewRatingCo;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LeaderboardManager.LeaderboardContainer _rankedLeaderboard;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _haveRatings;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _duringMatch;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _myOldRating;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _myNewRatingIfWin;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _myNewRatingIfDefeat;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _myOldRatingDeviation;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _myNewRatingDeviation;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastRatingDiff;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _calcNewRatingIsRunning;

	[Token(Token = "0x17000322")]
	public float LastRatingDiff
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xB6BD9C", Offset = "0xB6BD9C", VA = "0xB6BD9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000323")]
	private PlayerProfileData.Multiplayer.Versus profileVersus
	{
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xB6BDA4", Offset = "0xB6BDA4", VA = "0xB6BDA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000027")]
	public event Action matchConcluded
	{
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xB6BC64", Offset = "0xB6BC64", VA = "0xB6BC64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xB6BD00", Offset = "0xB6BD00", VA = "0xB6BD00")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xB6BDCC", Offset = "0xB6BDCC", VA = "0xB6BDCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xB6BE24", Offset = "0xB6BE24", VA = "0xB6BE24")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xB6BF58", Offset = "0xB6BF58", VA = "0xB6BF58")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xB6BEE4", Offset = "0xB6BEE4", VA = "0xB6BEE4")]
	[IteratorStateMachine(typeof(<InitCo>d__24))]
	private IEnumerator<float> InitCo()
	{
		return null;
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xB6C1F0", Offset = "0xB6C1F0", VA = "0xB6C1F0")]
	private void loadRankedLeaderboard()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xB6C314", Offset = "0xB6C314", VA = "0xB6C314")]
	public void RankedMatchStarted()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xB6C388", Offset = "0xB6C388", VA = "0xB6C388")]
	[IteratorStateMachine(typeof(<DoRankedMatchStart>d__27))]
	private IEnumerator<float> DoRankedMatchStart()
	{
		return null;
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xB6C424", Offset = "0xB6C424", VA = "0xB6C424")]
	private void calcPotentialRatings()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xB6C990", Offset = "0xB6C990", VA = "0xB6C990")]
	public void onNewMultiplayerSeason()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xB6CA20", Offset = "0xB6CA20", VA = "0xB6CA20")]
	public void UpdateRating()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xB6CA94", Offset = "0xB6CA94", VA = "0xB6CA94")]
	[IteratorStateMachine(typeof(<DoRatingForMatch>d__32))]
	private IEnumerator<float> DoRatingForMatch()
	{
		return null;
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xB6CB30", Offset = "0xB6CB30", VA = "0xB6CB30")]
	private void updateNewRatingAndLeaderboard([Optional] Action postCompleteAction)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xB6BF64", Offset = "0xB6BF64", VA = "0xB6BF64")]
	private void checkAndReportUnreportedRating()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xB6D0C4", Offset = "0xB6D0C4", VA = "0xB6D0C4")]
	private void postResultsDone()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xB6D234", Offset = "0xB6D234", VA = "0xB6D234")]
	public float CalcWinProbablity(PlayerProfileData.Multiplayer.Versus p1Data, PlayerProfileData.Multiplayer.Versus p2Data)
	{
		return default(float);
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xB6D69C", Offset = "0xB6D69C", VA = "0xB6D69C")]
	public VersusRating()
	{
	}
}
[Token(Token = "0x2000334")]
public class LobbyistManualTest : MonoBehaviour
{
	[StructLayout(3)]
	[Token(Token = "0x2000335")]
	[CompilerGenerated]
	private struct <OnPingClicked>d__38 : IAsyncStateMachine
	{
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LobbyistManualTest <>4__this;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<(bool, long)> <>u__1;

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xB6F598", Offset = "0xB6F598", VA = "0xB6F598", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xB6F8E0", Offset = "0xB6F8E0", VA = "0xB6F8E0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Address lobbyistAddress;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ICEProcess _iceProcess;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField playerIDInputField;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button connectButton;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button disconnectButton;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text serverConnectionStatus;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InputField remotePlayerIDInputField;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button findRankedButton;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button inviteButton;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InputField pinInputField;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button pinButton;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text clientState;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text connectedPlayerID;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text connectedCoMode;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text connectedRole;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button leaveButton;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Dropdown coMode;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InputField mpVersion;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button pingButton;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LobbyistClient _client;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private P2PNode _p2p;

	[Token(Token = "0x4001419")]
	private const string DEFAULT_MP_VERSION = "42";

	[Token(Token = "0x1700032A")]
	private string MpVersion
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0xB6F108", Offset = "0xB6F108", VA = "0xB6F108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xB6E40C", Offset = "0xB6E40C", VA = "0xB6E40C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xB6E8B8", Offset = "0xB6E8B8", VA = "0xB6E8B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xB6E8BC", Offset = "0xB6E8BC", VA = "0xB6E8BC")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xB6ECC4", Offset = "0xB6ECC4", VA = "0xB6ECC4")]
	private void OnQueue(LobbyistClient client)
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xB6ED3C", Offset = "0xB6ED3C", VA = "0xB6ED3C")]
	private void OnMatchConnecting(LobbyistClient client)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xB6ED70", Offset = "0xB6ED70", VA = "0xB6ED70")]
	private void OnICEConnectionFailed(ICEProcess _)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xB6EDD8", Offset = "0xB6EDD8", VA = "0xB6EDD8")]
	private void OnFirstIceConnected(ICEProcess _, NodeStatus status)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xB6EEE4", Offset = "0xB6EEE4", VA = "0xB6EEE4")]
	private void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xB6F004", Offset = "0xB6F004", VA = "0xB6F004")]
	public void OnConnectClicked()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xB6F184", Offset = "0xB6F184", VA = "0xB6F184")]
	public void OnDisconnectClicked()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xB6F1A0", Offset = "0xB6F1A0", VA = "0xB6F1A0")]
	public void OnFindRankedClicked()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xB6F1F4", Offset = "0xB6F1F4", VA = "0xB6F1F4")]
	public void OnInviteClicked()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xB6F2CC", Offset = "0xB6F2CC", VA = "0xB6F2CC")]
	public void OnPinClicked()
	{
	}

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xB6F3A4", Offset = "0xB6F3A4", VA = "0xB6F3A4")]
	public void OnLeaveClicked()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xB6F3EC", Offset = "0xB6F3EC", VA = "0xB6F3EC")]
	[AsyncStateMachine(typeof(<OnPingClicked>d__38))]
	public void OnPingClicked()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xB6F4A4", Offset = "0xB6F4A4", VA = "0xB6F4A4")]
	public LobbyistManualTest()
	{
	}
}
[Token(Token = "0x2000336")]
public class LobbyistTestsConfig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000337")]
	public class RankedMeta
	{
		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mpVersion;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool dev;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string seasonLB;

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xB6FAEC", Offset = "0xB6FAEC", VA = "0xB6FAEC")]
		public RankedMeta()
		{
		}
	}

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public LobbyistClientConfig lobbyistAddress;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ICESettings iceSettings;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cooldownBetweenTests;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] playerIDs;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RankedMeta rankedMeta;

	[Token(Token = "0x4001423")]
	public const float initialRating = 1500f;

	[Token(Token = "0x4001424")]
	public const float maxRatingDev = 200f;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LobbyistTestsConfig inst;

	[Token(Token = "0x1700032B")]
	public string MultiplayerVersion
	{
		[Token(Token = "0x6001221")]
		[Address(RVA = "0xB6F8EC", Offset = "0xB6F8EC", VA = "0xB6F8EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xB6F8F8", Offset = "0xB6F8F8", VA = "0xB6F8F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xB6F950", Offset = "0xB6F950", VA = "0xB6F950")]
	public LobbyistTestsConfig()
	{
	}
}
[Token(Token = "0x2000338")]
[AddComponentMenu("Multiplayer/Tests/SkipSignInTest")]
public class SkipSignInTest : LobbyistTest
{
	[Token(Token = "0x1700032C")]
	public override string title
	{
		[Token(Token = "0x6001225")]
		[Address(RVA = "0xB6FAF4", Offset = "0xB6FAF4", VA = "0xB6FAF4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xB6FB34", Offset = "0xB6FB34", VA = "0xB6FB34", Slot = "5")]
	public override void Run()
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xB6FD10", Offset = "0xB6FD10", VA = "0xB6FD10")]
	public SkipSignInTest()
	{
	}
}
[Token(Token = "0x200033A")]
public class BackgroundUDPConnectionToLobbyist : MonoBehaviour
{
	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LobbyistClientConfig lobbyistConfig;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LobbyistClient _lobbyistClient;

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xB6FE08", Offset = "0xB6FE08", VA = "0xB6FE08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xB6FE60", Offset = "0xB6FE60", VA = "0xB6FE60")]
	private void Start()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xB70018", Offset = "0xB70018", VA = "0xB70018")]
	private static void OnConnectionToServerFailed(LobbyistClient _, string reason)
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xB700A4", Offset = "0xB700A4", VA = "0xB700A4")]
	private static void OnConnectedToServer(LobbyistClient _)
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xB7010C", Offset = "0xB7010C", VA = "0xB7010C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xB70200", Offset = "0xB70200", VA = "0xB70200")]
	public BackgroundUDPConnectionToLobbyist()
	{
	}
}
[Token(Token = "0x200033B")]
public class RelayManualTest : MonoBehaviour
{
	[Token(Token = "0x200033C")]
	[Flags]
	public enum LogMessagesFilter
	{
		[Token(Token = "0x400143F")]
		Incoming = 1,
		[Token(Token = "0x4001440")]
		Outgoing = 2
	}

	[Token(Token = "0x200033D")]
	[Flags]
	public enum SendType
	{
		[Token(Token = "0x4001442")]
		Both = -1,
		[Token(Token = "0x4001443")]
		Reliable = 1,
		[Token(Token = "0x4001444")]
		Unreliable = 2
	}

	[StructLayout(3)]
	[Token(Token = "0x200033E")]
	[CompilerGenerated]
	private struct <Start>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<List<string>> <>u__2;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xB71518", Offset = "0xB71518", VA = "0xB71518", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xB718B8", Offset = "0xB718B8", VA = "0xB718B8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200033F")]
	[CompilerGenerated]
	private struct <OnCreateClicked>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xB718C4", Offset = "0xB718C4", VA = "0xB718C4", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xB71D50", Offset = "0xB71D50", VA = "0xB71D50", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000340")]
	[CompilerGenerated]
	private struct <OnDestroyClicked>d__19 : IAsyncStateMachine
	{
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xB71D5C", Offset = "0xB71D5C", VA = "0xB71D5C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xB71F3C", Offset = "0xB71F3C", VA = "0xB71F3C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000341")]
	[CompilerGenerated]
	private struct <OnJoinClicked>d__20 : IAsyncStateMachine
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xB71F48", Offset = "0xB71F48", VA = "0xB71F48", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xB723AC", Offset = "0xB723AC", VA = "0xB723AC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000342")]
	[CompilerGenerated]
	private struct <OnLeaveClicked>d__22 : IAsyncStateMachine
	{
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RelayManualTest <>4__this;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xB723B8", Offset = "0xB723B8", VA = "0xB723B8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xB72598", Offset = "0xB72598", VA = "0xB72598", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LogMessagesFilter logMessagesFilter;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SendType sendType;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField joinCodeOutputField;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField joinCodeInputField;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField messageInputField;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle sendMessageAsHostToggle;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dropdown regionDropdown;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle sendRandomDataEveryFrameToggle;

	[Token(Token = "0x4001435")]
	private const int MAX_CONNECTIONS = 8;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RelayUtpHost _host;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RelayUtpClient _client;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<string> _regions;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly byte[] _randomBuffer;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[MinMaxSlider(0f, 1024f)]
	public Vector2 packetSizeRandomRange;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Expandable]
	public LobbyistClientConfig lobbyistConfig;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LobbyistClient lobbyistClient;

	[Token(Token = "0x400143D")]
	private const string URELAY_PREFIX = "urelay:";

	[Token(Token = "0x6001232")]
	[Address(RVA = "0xB70208", Offset = "0xB70208", VA = "0xB70208")]
	[AsyncStateMachine(typeof(<Start>d__14))]
	private void Start()
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0xB702BC", Offset = "0xB702BC", VA = "0xB702BC")]
	[AsyncStateMachine(typeof(<OnCreateClicked>d__15))]
	public void OnCreateClicked()
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0xB70374", Offset = "0xB70374", VA = "0xB70374")]
	private void OnClientConnectedToHost()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0xB703DC", Offset = "0xB703DC", VA = "0xB703DC")]
	private void OnReceiveData(byte[] msgBytes)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0xB704E0", Offset = "0xB704E0", VA = "0xB704E0")]
	private static string ColorStr(string str)
	{
		return null;
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xB7054C", Offset = "0xB7054C", VA = "0xB7054C")]
	[AsyncStateMachine(typeof(<OnDestroyClicked>d__19))]
	public void OnDestroyClicked()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xB70604", Offset = "0xB70604", VA = "0xB70604")]
	[AsyncStateMachine(typeof(<OnJoinClicked>d__20))]
	public void OnJoinClicked()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xB706BC", Offset = "0xB706BC", VA = "0xB706BC")]
	public void OnSendClicked()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xB708D4", Offset = "0xB708D4", VA = "0xB708D4")]
	[AsyncStateMachine(typeof(<OnLeaveClicked>d__22))]
	public void OnLeaveClicked()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xB7098C", Offset = "0xB7098C", VA = "0xB7098C")]
	private void DestroyHost()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xB70A38", Offset = "0xB70A38", VA = "0xB70A38")]
	private void DestroyClient()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xB70AE4", Offset = "0xB70AE4", VA = "0xB70AE4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xB70C10", Offset = "0xB70C10", VA = "0xB70C10")]
	private void Update()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xB70CE4", Offset = "0xB70CE4", VA = "0xB70CE4")]
	private void SendRandomMessages()
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xB70FF8", Offset = "0xB70FF8", VA = "0xB70FF8")]
	public void SignInToLobbyist()
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xB71140", Offset = "0xB71140", VA = "0xB71140")]
	private void OnConnectionToLobbyistFailed(LobbyistClient arg1, string arg2)
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xB711A8", Offset = "0xB711A8", VA = "0xB711A8")]
	private void OnConnectedToLobbyist(LobbyistClient obj)
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xB71210", Offset = "0xB71210", VA = "0xB71210")]
	public void QueueForPin()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xB713A0", Offset = "0xB713A0", VA = "0xB713A0")]
	private void OnRxRelayedAddresses(LobbyistClient _, string[] relayedAddress)
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xB71440", Offset = "0xB71440", VA = "0xB71440")]
	private void OnMatchConnecting(LobbyistClient _)
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xB714A8", Offset = "0xB714A8", VA = "0xB714A8")]
	public RelayManualTest()
	{
	}
}
[Token(Token = "0x2000343")]
public class StunTestsConfig : MonoBehaviour
{
	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int localPort;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string host;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int port;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string transactionID;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float sendTimeout;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float receiveTimeout;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StunTestsConfig inst;

	[Token(Token = "0x6001251")]
	[Address(RVA = "0xB725A4", Offset = "0xB725A4", VA = "0xB725A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xB725FC", Offset = "0xB725FC", VA = "0xB725FC")]
	public StunTestsConfig()
	{
	}
}
[Token(Token = "0x2000344")]
public class TestStun : Test
{
	[Token(Token = "0x2000345")]
	private struct Response
	{
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string transactionID;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string address;
	}

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Thread _thread;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<Action> _toRunOnMainThread;

	[Token(Token = "0x1700032D")]
	public override string title
	{
		[Token(Token = "0x6001253")]
		[Address(RVA = "0xB72698", Offset = "0xB72698", VA = "0xB72698", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032E")]
	public override float timeout
	{
		[Token(Token = "0x6001254")]
		[Address(RVA = "0xB726D8", Offset = "0xB726D8", VA = "0xB726D8", Slot = "6")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700032F")]
	protected static StunTestsConfig config
	{
		[Token(Token = "0x6001255")]
		[Address(RVA = "0xB726E0", Offset = "0xB726E0", VA = "0xB726E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xB72728", Offset = "0xB72728", VA = "0xB72728")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xB727A4", Offset = "0xB727A4", VA = "0xB727A4", Slot = "5")]
	public override void Run()
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0xB7288C", Offset = "0xB7288C", VA = "0xB7288C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0xB72918", Offset = "0xB72918", VA = "0xB72918")]
	private void DoWork()
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xB73060", Offset = "0xB73060", VA = "0xB73060")]
	public TestStun()
	{
	}
}
[Token(Token = "0x2000348")]
public class UtpUdpTest : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000349")]
	public struct Address
	{
		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int port;
	}

	[Token(Token = "0x200034C")]
	[CompilerGenerated]
	private sealed class <TestAddress>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UtpUdpTest <>4__this;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IPEndPoint hostAddress;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IPEndPoint reflexiveAddress;

		[Token(Token = "0x17000330")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001275")]
			[Address(RVA = "0xB745A4", Offset = "0xB745A4", VA = "0xB745A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000331")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001277")]
			[Address(RVA = "0xB745EC", Offset = "0xB745EC", VA = "0xB745EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xB73F28", Offset = "0xB73F28", VA = "0xB73F28")]
		[DebuggerHidden]
		public <TestAddress>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xB742E8", Offset = "0xB742E8", VA = "0xB742E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xB742EC", Offset = "0xB742EC", VA = "0xB742EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xB745AC", Offset = "0xB745AC", VA = "0xB745AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Address STUNServerAddress;

	[Token(Token = "0x400146C")]
	private const bool debug = true;

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xB7334C", Offset = "0xB7334C", VA = "0xB7334C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xB738D4", Offset = "0xB738D4", VA = "0xB738D4")]
	private static IEnumerable<IPAddress> GetHostAddresses()
	{
		return null;
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xB73350", Offset = "0xB73350", VA = "0xB73350")]
	private void CreateCandidates()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xB73D7C", Offset = "0xB73D7C", VA = "0xB73D7C")]
	private void OnReflexiveAddressDetected(IceCandidate candidate)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xB73E84", Offset = "0xB73E84", VA = "0xB73E84")]
	[IteratorStateMachine(typeof(<TestAddress>d__7))]
	private IEnumerator TestAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress)
	{
		return null;
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xB73F50", Offset = "0xB73F50", VA = "0xB73F50")]
	public UtpUdpTest()
	{
	}
}
[Token(Token = "0x200034D")]
public class ByteConverterZ
{
	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int FLOAT_SIZE;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int INT_SIZE;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int UINT_SIZE;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float[] auxFloatArr;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int[] auxIntArr;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static uint[] auxUIntArr;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static byte[] auxBytesArr;

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xB755F4", Offset = "0xB755F4", VA = "0xB755F4")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xB757A0", Offset = "0xB757A0", VA = "0xB757A0")]
	public static void ToByteBuffer(bool val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xB757E0", Offset = "0xB757E0", VA = "0xB757E0")]
	public static void ToByteBuffer(byte val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xB7581C", Offset = "0xB7581C", VA = "0xB7581C")]
	public static void ToByteBuffer(int val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0xB758C0", Offset = "0xB758C0", VA = "0xB758C0")]
	public static void ToByteBuffer(uint val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xB75964", Offset = "0xB75964", VA = "0xB75964")]
	public static void ToByteBuffer(float val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xB75A10", Offset = "0xB75A10", VA = "0xB75A10")]
	public static void ToByteBuffer(Vector2 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xB75AD0", Offset = "0xB75AD0", VA = "0xB75AD0")]
	public static void ToByteBuffer(IntVector2 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xB75B88", Offset = "0xB75B88", VA = "0xB75B88")]
	public static void ToByteBuffer(Vector3 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xB75C64", Offset = "0xB75C64", VA = "0xB75C64")]
	public static void ToByteBuffer(Vector4 val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xB75D4C", Offset = "0xB75D4C", VA = "0xB75D4C")]
	public static void ToByteBuffer(Quaternion val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xB75E34", Offset = "0xB75E34", VA = "0xB75E34")]
	public static void ToByteBuffer(string val, byte[] outArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xB75F00", Offset = "0xB75F00", VA = "0xB75F00")]
	public static void FromByteBuffer(ref bool val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xB75F48", Offset = "0xB75F48", VA = "0xB75F48")]
	public static void FromByteBuffer(ref byte val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xB75F88", Offset = "0xB75F88", VA = "0xB75F88")]
	public static void FromByteBuffer(ref int val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0xB76034", Offset = "0xB76034", VA = "0xB76034")]
	public static void FromByteBuffer(ref uint val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0xB760E0", Offset = "0xB760E0", VA = "0xB760E0")]
	public static void FromByteBuffer(ref float val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0xB7618C", Offset = "0xB7618C", VA = "0xB7618C")]
	public static void FromByteBuffer(ref Vector2 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xB7624C", Offset = "0xB7624C", VA = "0xB7624C")]
	public static void FromByteBuffer(ref IntVector2 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0xB7630C", Offset = "0xB7630C", VA = "0xB7630C")]
	public static void FromByteBuffer(ref Vector3 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xB763E0", Offset = "0xB763E0", VA = "0xB763E0")]
	public static void FromByteBuffer(ref Vector4 val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xB764C0", Offset = "0xB764C0", VA = "0xB764C0")]
	public static void FromByteBuffer(ref Quaternion val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xB765A0", Offset = "0xB765A0", VA = "0xB765A0")]
	public static void FromByteBuffer(ref string val, byte[] inArr, ref int startIndex)
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xB766CC", Offset = "0xB766CC", VA = "0xB766CC")]
	public ByteConverterZ()
	{
	}
}
[Token(Token = "0x200034E")]
[CreateAssetMenu(menuName = "Data/Lobbyist/ICE Settings/Connectivity Test Settings")]
public class ConnectivityTestSettings : ScriptableObject
{
	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int NUM_PINGS;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int NUM_DISCARDED_PINGS;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PING_INTERVAL;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ACCEPTABLE_ROUNDTRIP;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ACCEPTABLE_DROP_RATE;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RELAY_CONNECT_TIMEOUT;

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xB766D4", Offset = "0xB766D4", VA = "0xB766D4")]
	public ConnectivityTestSettings()
	{
	}
}
[Token(Token = "0x200034F")]
public class IceCandidate : MonoBehaviour, IDisposable
{
	[Token(Token = "0x2000350")]
	private struct TxQueueItem
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int port;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] data;

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB77D30", Offset = "0xB77D30", VA = "0xB77D30")]
		public TxQueueItem(string host, int port, byte[] data)
		{
		}
	}

	[Token(Token = "0x2000351")]
	private struct RxQueueItem
	{
		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IPEndPoint remoteIP;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] msgBytes;

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB77748", Offset = "0xB77748", VA = "0xB77748")]
		public RxQueueItem(IPEndPoint remoteIP, byte[] msgBytes)
		{
		}
	}

	[Token(Token = "0x2000352")]
	private class StunRequest
	{
		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string transactionID;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB77D00", Offset = "0xB77D00", VA = "0xB77D00")]
		public StunRequest(string transactionID)
		{
		}
	}

	[Token(Token = "0x2000353")]
	private class StunMessage : StunRequest
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string address;

		[Token(Token = "0x17000334")]
		public bool HasNoAddress
		{
			[Token(Token = "0x60012AD")]
			[Address(RVA = "0xB779C8", Offset = "0xB779C8", VA = "0xB779C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000335")]
		public IPEndPoint ParsedAddress
		{
			[Token(Token = "0x60012AE")]
			[Address(RVA = "0xB77ED0", Offset = "0xB77ED0", VA = "0xB77ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xB77E8C", Offset = "0xB77E8C", VA = "0xB77E8C")]
		public StunMessage(string transactionID, string address)
		{
		}
	}

	[Token(Token = "0x2000354")]
	private class FindUdpClientException : Exception
	{
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB76D90", Offset = "0xB76D90", VA = "0xB76D90")]
		public FindUdpClientException(string message)
		{
		}
	}

	[Token(Token = "0x2000355")]
	public delegate void TestConnectivityDoneDelegate(bool success, NodeAnalyzeReport report);

	[Token(Token = "0x2000356")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IceCandidate <>4__this;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<IPEndPoint> onDone;

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB78610", Offset = "0xB78610", VA = "0xB78610")]
		public <>c__DisplayClass32_0()
		{
		}
	}

	[Token(Token = "0x2000357")]
	[CompilerGenerated]
	private sealed class <DetectReflexiveAddressCo>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceCandidate <>4__this;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<IPEndPoint> onDone;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string stunServerAddress;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int stunServerPort;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass32_0 <>8__1;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <retryTime>5__2;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <numRetries>5__3;

		[Token(Token = "0x17000336")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012B9")]
			[Address(RVA = "0xB78968", Offset = "0xB78968", VA = "0xB78968", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xB789B0", Offset = "0xB789B0", VA = "0xB789B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xB77FAC", Offset = "0xB77FAC", VA = "0xB77FAC")]
		[DebuggerHidden]
		public <DetectReflexiveAddressCo>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xB786B8", Offset = "0xB786B8", VA = "0xB786B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB786BC", Offset = "0xB786BC", VA = "0xB786BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xB78970", Offset = "0xB78970", VA = "0xB78970", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000358")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long[] rxTimes;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stopwatch stopwatch;

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB789B8", Offset = "0xB789B8", VA = "0xB789B8")]
		public <>c__DisplayClass36_0()
		{
		}
	}

	[Token(Token = "0x200035A")]
	[CompilerGenerated]
	private sealed class <TestConnectivityCo>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IceCandidate <>4__this;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass36_0 <>8__1;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IPEndPoint remoteAddress;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TestConnectivityDoneDelegate onDone;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ConnectivityTestSettings <testSettings>5__2;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private long[] <txTimes>5__3;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <p>5__4;

		[Token(Token = "0x17000338")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012C2")]
			[Address(RVA = "0xB79618", Offset = "0xB79618", VA = "0xB79618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xB79660", Offset = "0xB79660", VA = "0xB79660", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xB78140", Offset = "0xB78140", VA = "0xB78140")]
		[DebuggerHidden]
		public <TestConnectivityCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xB78D20", Offset = "0xB78D20", VA = "0xB78D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xB78D24", Offset = "0xB78D24", VA = "0xB78D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xB79620", Offset = "0xB79620", VA = "0xB79620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400148C")]
	private const int STARTING_PORT = 28679;

	[Token(Token = "0x400148D")]
	private const int ENDING_PORT = 28699;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ICESettings _iceSettings;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UdpClient _udpClient;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IPEndPoint _reflexiveAddress;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<TxQueueItem> _txQueue;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Queue<RxQueueItem> _rxQueue;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Action<StunMessage>> _responseHandlers;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CancellationTokenSource _bindCancelTokenSource;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly char[] _PERIOD_SEPARATOR;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _disposed;

	[Token(Token = "0x17000332")]
	public IPEndPoint hostAddress
	{
		[Token(Token = "0x6001291")]
		[Address(RVA = "0xB766F4", Offset = "0xB766F4", VA = "0xB766F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000333")]
	public IPEndPoint reflexiveAddress
	{
		[Token(Token = "0x6001292")]
		[Address(RVA = "0xB76784", Offset = "0xB76784", VA = "0xB76784")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xB7678C", Offset = "0xB7678C", VA = "0xB7678C")]
	public bool HasAddress(IPEndPoint address)
	{
		return default(bool);
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xB767F0", Offset = "0xB767F0", VA = "0xB767F0")]
	private void Init()
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xB7690C", Offset = "0xB7690C", VA = "0xB7690C")]
	public bool Bind(IPAddress address, ICESettings iceSettings)
	{
		return default(bool);
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xB76B84", Offset = "0xB76B84", VA = "0xB76B84")]
	private void FindUdpClient(IPAddress address)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xB76DF8", Offset = "0xB76DF8", VA = "0xB76DF8")]
	private void SocketLoop()
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xB773EC", Offset = "0xB773EC", VA = "0xB773EC")]
	private void HandleReadable(Socket s)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xB77778", Offset = "0xB77778", VA = "0xB77778")]
	private void Update()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xB77804", Offset = "0xB77804", VA = "0xB77804")]
	private void OnRxData(IPEndPoint remoteIP, byte[] msgBytes)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xB77598", Offset = "0xB77598", VA = "0xB77598")]
	private void HandleWritable(Socket s)
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xB77BA4", Offset = "0xB77BA4", VA = "0xB77BA4")]
	private void SendStunRequest(string host, int port, string transactionID, Action<StunMessage> onResponse)
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xB77D68", Offset = "0xB77D68", VA = "0xB77D68")]
	private void SendStunResponse(string host, int port, string transactionID, string address)
	{
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xB779D4", Offset = "0xB779D4", VA = "0xB779D4")]
	private void OnRxStunRequest(IPEndPoint remoteIP, StunRequest request)
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xB77A4C", Offset = "0xB77A4C", VA = "0xB77A4C")]
	private void OnRxStunResponse(StunMessage response)
	{
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xB77ED8", Offset = "0xB77ED8", VA = "0xB77ED8")]
	public void DetectReflexiveAddress(string stunServerAddress, int stunServerPort, Action<IPEndPoint> onDone)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xB77EF8", Offset = "0xB77EF8", VA = "0xB77EF8")]
	[IteratorStateMachine(typeof(<DetectReflexiveAddressCo>d__32))]
	private IEnumerator DetectReflexiveAddressCo(string stunServerAddress, int stunServerPort, Action<IPEndPoint> onDone)
	{
		return null;
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xB77FD4", Offset = "0xB77FD4", VA = "0xB77FD4")]
	public void TestConnectivity(IPEndPoint remoteAddress, TestConnectivityDoneDelegate onDone)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xB7809C", Offset = "0xB7809C", VA = "0xB7809C")]
	[IteratorStateMachine(typeof(<TestConnectivityCo>d__36))]
	private IEnumerator TestConnectivityCo(IPEndPoint remoteAddress, TestConnectivityDoneDelegate onDone)
	{
		return null;
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xB78168", Offset = "0xB78168", VA = "0xB78168")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xB7816C", Offset = "0xB7816C", VA = "0xB7816C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xB781CC", Offset = "0xB781CC", VA = "0xB781CC")]
	private void _Dispose()
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xB7823C", Offset = "0xB7823C", VA = "0xB7823C")]
	public IceCandidate()
	{
	}
}
[Serializable]
[Token(Token = "0x200035B")]
public class ICESettings
{
	[Serializable]
	[Token(Token = "0x200035C")]
	public class ICEDebugSettings
	{
		[Token(Token = "0x200035D")]
		public enum WhoIsHost
		{
			[Token(Token = "0x40014C8")]
			None,
			[Token(Token = "0x40014C9")]
			Client,
			[Token(Token = "0x40014CA")]
			Host
		}

		[Token(Token = "0x200035E")]
		[Flags]
		public enum UdpAddressesToUse
		{
			[Token(Token = "0x40014CC")]
			Everything = -1,
			[Token(Token = "0x40014CD")]
			Reflexive = 1,
			[Token(Token = "0x40014CE")]
			Host = 2
		}

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("When ICE Process finds a new connection after the first one, it chooses it regardless of ping score")]
		[AllowNesting]
		public bool anyNewConnectionIsBetter;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool simulateNoConnectivity;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool fakeUtpBug;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Tooltip("Make sure who would be the chosen relay host UnityRelayQos")]
		public WhoIsHost forceRelayHost;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Make sure who would be the chosen utp host")]
		public WhoIsHost forceUtpHost;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Eliminate Host/Reflexive addresses in tests")]
		public UdpAddressesToUse udpAddressesToUse;

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xB796C4", Offset = "0xB796C4", VA = "0xB796C4")]
		public ICEDebugSettings()
		{
		}
	}

	[Token(Token = "0x200035F")]
	[Flags]
	public enum RelayRegionsAllocation
	{
		[Token(Token = "0x40014D0")]
		None = 0,
		[Token(Token = "0x40014D1")]
		Regionless = 1,
		[Token(Token = "0x40014D2")]
		AvailableRegions = 2
	}

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool debug;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ICEDebugSettings debugSettings;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Maximum time to wait until getting reflexive address in seconds")]
	public float maxReflexiveAddressDetection;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Tooltip("Maximum time to wait until failing the ICE process (both host & client+extra)")]
	public float maxIceDuration;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Extra time to wait until failing the ICE process")]
	public float clientExtraIceDuration;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Tooltip("Connection types to try on the ICE process")]
	public ConnectionsType connectionsType;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private ICEAgentsList iceAgentsList;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[EnableIf("ConnectionTypeHasRelay")]
	[Tooltip("Relay allocation strategy (only if Relay is enabled on connection type)")]
	[AllowNesting]
	[Header("Unity Relay")]
	public RelayRegionsAllocation relayRegionsAllocation;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Tooltip("Maximum relay allocations when using AvailableRegions allocation strategy")]
	[AllowNesting]
	[EnableIf(EConditionOperator.And, new string[] { "HasAvailableRegions", "ConnectionTypeHasRelay" })]
	[Range(1f, 10f)]
	public int maxRelayAllocations;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Host Ice connectivity test settings")]
	[Expandable]
	[Header("Pings Tests")]
	[AllowNesting]
	public ConnectivityTestSettings connectivityTestSettings;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("STUN Server end point")]
	[AllowNesting]
	[Expandable]
	public StunServerConfig stunServerAddress;

	[Token(Token = "0x1700033A")]
	public IceAgent[] IceAgents
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xB79668", Offset = "0xB79668", VA = "0xB79668")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700033B")]
	private bool ConnectionTypeHasRelay
	{
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xB79684", Offset = "0xB79684", VA = "0xB79684")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700033C")]
	private bool HasAvailableRegions
	{
		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xB79690", Offset = "0xB79690", VA = "0xB79690")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xB7969C", Offset = "0xB7969C", VA = "0xB7969C")]
	public ICESettings()
	{
	}
}
[Token(Token = "0x2000360")]
public static class IpParser
{
	[Token(Token = "0x40014D3")]
	private const string COLON_SEPARATOR = ":";

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xB782D4", Offset = "0xB782D4", VA = "0xB782D4")]
	public static IPEndPoint ParseIPEndPoint(string ipEndPoint)
	{
		return null;
	}
}
[Token(Token = "0x2000361")]
public class NativePeerToPeer : MonoBehaviour, P2PNode, IDisposable
{
	[Token(Token = "0x2000362")]
	private enum HandshakeState : uint
	{
		[Token(Token = "0x40014DF")]
		SendHandshakeMessage,
		[Token(Token = "0x40014E0")]
		WaitForHandshakeMessage,
		[Token(Token = "0x40014E1")]
		WaitForSecondHandshakeMessage,
		[Token(Token = "0x40014E2")]
		Done
	}

	[Token(Token = "0x2000363")]
	[CompilerGenerated]
	private sealed class <ConnectCo>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <useHandshake>5__2;

		[Token(Token = "0x1700033E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xB7A808", Offset = "0xB7A808", VA = "0xB7A808", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012E9")]
			[Address(RVA = "0xB7A850", Offset = "0xB7A850", VA = "0xB7A850", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xB79C40", Offset = "0xB79C40", VA = "0xB79C40")]
		[DebuggerHidden]
		public <ConnectCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xB7A5C8", Offset = "0xB7A5C8", VA = "0xB7A5C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xB7A5CC", Offset = "0xB7A5CC", VA = "0xB7A5CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xB7A810", Offset = "0xB7A810", VA = "0xB7A810", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000364")]
	[CompilerGenerated]
	private sealed class <FlushIncomingMessagesCo>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint <packetsRead>5__2;

		[Token(Token = "0x17000340")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012ED")]
			[Address(RVA = "0xB7A910", Offset = "0xB7A910", VA = "0xB7A910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000341")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012EF")]
			[Address(RVA = "0xB7A958", Offset = "0xB7A958", VA = "0xB7A958", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xB79CDC", Offset = "0xB79CDC", VA = "0xB79CDC")]
		[DebuggerHidden]
		public <FlushIncomingMessagesCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xB7A858", Offset = "0xB7A858", VA = "0xB7A858", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xB7A85C", Offset = "0xB7A85C", VA = "0xB7A85C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xB7A918", Offset = "0xB7A918", VA = "0xB7A918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000365")]
	[CompilerGenerated]
	private sealed class <DoHandshakeCo>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HandshakeState <handShakeState>5__2;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] <handshakeMessage>5__3;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <numHandshakeAttempts>5__4;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <timeInThisHandshake>5__5;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <myNum>5__6;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <hisNum>5__7;

		[Token(Token = "0x17000342")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F3")]
			[Address(RVA = "0xB7B404", Offset = "0xB7B404", VA = "0xB7B404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000343")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012F5")]
			[Address(RVA = "0xB7B44C", Offset = "0xB7B44C", VA = "0xB7B44C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xB79D78", Offset = "0xB79D78", VA = "0xB79D78")]
		[DebuggerHidden]
		public <DoHandshakeCo>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xB7A960", Offset = "0xB7A960", VA = "0xB7A960", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xB7A964", Offset = "0xB7A964", VA = "0xB7A964", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xB7B40C", Offset = "0xB7B40C", VA = "0xB7B40C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000366")]
	[CompilerGenerated]
	private sealed class <WaitForConnectionCo>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeLeft>5__2;

		[Token(Token = "0x17000344")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012F9")]
			[Address(RVA = "0xB7B6D8", Offset = "0xB7B6D8", VA = "0xB7B6D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60012FB")]
			[Address(RVA = "0xB7B720", Offset = "0xB7B720", VA = "0xB7B720", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xB79E14", Offset = "0xB79E14", VA = "0xB79E14")]
		[DebuggerHidden]
		public <WaitForConnectionCo>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xB7B454", Offset = "0xB7B454", VA = "0xB7B454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xB7B458", Offset = "0xB7B458", VA = "0xB7B458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xB7B6E0", Offset = "0xB7B6E0", VA = "0xB7B6E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000367")]
	[CompilerGenerated]
	private sealed class <ReceivePacketsCo>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NativePeerToPeer <>4__this;

		[Token(Token = "0x17000346")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FF")]
			[Address(RVA = "0xB7B874", Offset = "0xB7B874", VA = "0xB7B874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001301")]
			[Address(RVA = "0xB7B8BC", Offset = "0xB7B8BC", VA = "0xB7B8BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xB79F48", Offset = "0xB79F48", VA = "0xB79F48")]
		[DebuggerHidden]
		public <ReceivePacketsCo>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB7B728", Offset = "0xB7B728", VA = "0xB7B728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB7B72C", Offset = "0xB7B72C", VA = "0xB7B72C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xB7B87C", Offset = "0xB7B87C", VA = "0xB7B87C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _connected;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isHost;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _opponentRnxId;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _opponentNativeId;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly byte[] _tempBuffer;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _connectCo;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine _receivePacketsCo;

	[Token(Token = "0x1700033D")]
	private bool P2PNode.Connected
	{
		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xB7980C", Offset = "0xB7980C", VA = "0xB7980C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000028")]
	public event Action Connected
	{
		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xB796D4", Offset = "0xB796D4", VA = "0xB796D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xB79770", Offset = "0xB79770", VA = "0xB79770")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event Action FailedToConnect
	{
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xB798D4", Offset = "0xB798D4", VA = "0xB798D4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB79970", Offset = "0xB79970", VA = "0xB79970")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event Action<byte[]> onReceivedData
	{
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xB7A248", Offset = "0xB7A248", VA = "0xB7A248", Slot = "6")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xB7A2F8", Offset = "0xB7A2F8", VA = "0xB7A2F8", Slot = "7")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xB79814", Offset = "0xB79814", VA = "0xB79814", Slot = "8")]
	private void P2PNode.Close()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xB798B0", Offset = "0xB798B0", VA = "0xB798B0")]
	private void OnConnected()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xB79A0C", Offset = "0xB79A0C", VA = "0xB79A0C")]
	private void OnFailedToConnect()
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xB79A28", Offset = "0xB79A28", VA = "0xB79A28")]
	public void Connect(string opponentRnxId, string opponentNativeId, bool isHost)
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xB79BCC", Offset = "0xB79BCC", VA = "0xB79BCC")]
	[IteratorStateMachine(typeof(<ConnectCo>d__18))]
	private IEnumerator ConnectCo()
	{
		return null;
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xB79C68", Offset = "0xB79C68", VA = "0xB79C68")]
	[IteratorStateMachine(typeof(<FlushIncomingMessagesCo>d__19))]
	private IEnumerator FlushIncomingMessagesCo()
	{
		return null;
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xB79D04", Offset = "0xB79D04", VA = "0xB79D04")]
	[IteratorStateMachine(typeof(<DoHandshakeCo>d__21))]
	private IEnumerator DoHandshakeCo()
	{
		return null;
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xB79DA0", Offset = "0xB79DA0", VA = "0xB79DA0")]
	[IteratorStateMachine(typeof(<WaitForConnectionCo>d__22))]
	private IEnumerator WaitForConnectionCo()
	{
		return null;
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xB79E3C", Offset = "0xB79E3C", VA = "0xB79E3C", Slot = "9")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xB79818", Offset = "0xB79818", VA = "0xB79818")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xB79ED4", Offset = "0xB79ED4", VA = "0xB79ED4")]
	[IteratorStateMachine(typeof(<ReceivePacketsCo>d__26))]
	private IEnumerator ReceivePacketsCo()
	{
		return null;
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xB79F70", Offset = "0xB79F70", VA = "0xB79F70")]
	public bool isPacketAvailable(out uint dataSize)
	{
		return default(bool);
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xB79FD4", Offset = "0xB79FD4", VA = "0xB79FD4")]
	public bool receivePacket(byte[] data, out uint dataSize, out string senderId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0xB7A084", Offset = "0xB7A084", VA = "0xB7A084", Slot = "5")]
	public void Send(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xB7A3A8", Offset = "0xB7A3A8", VA = "0xB7A3A8")]
	private void Log(object message)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xB7A43C", Offset = "0xB7A43C", VA = "0xB7A43C")]
	private void LogWarning(object message)
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xB7A4D0", Offset = "0xB7A4D0", VA = "0xB7A4D0")]
	private void LogError(object message)
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xB7A564", Offset = "0xB7A564", VA = "0xB7A564")]
	public NativePeerToPeer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000368")]
public struct NetworkAddress
{
	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string hostname;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int port;

	[Token(Token = "0x17000348")]
	public IPAddress ipAddress
	{
		[Token(Token = "0x6001302")]
		[Address(RVA = "0xB7B8C4", Offset = "0xB7B8C4", VA = "0xB7B8C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0xB7B958", Offset = "0xB7B958", VA = "0xB7B958", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000369")]
public interface P2PNode
{
	[Token(Token = "0x17000349")]
	bool Connected
	{
		[Token(Token = "0x6001304")]
		get;
	}

	[Token(Token = "0x1400002B")]
	event Action<byte[]> onReceivedData;

	[Token(Token = "0x6001305")]
	void Send(ReadOnlySpan<byte> data, bool reliable);

	[Token(Token = "0x6001308")]
	void Close();
}
[Token(Token = "0x200036A")]
public enum PacketSendType
{
	[Token(Token = "0x40014FE")]
	Unreliable,
	[Token(Token = "0x40014FF")]
	UnreliableNoDelay,
	[Token(Token = "0x4001500")]
	Reliable
}
[Token(Token = "0x200036B")]
public static class RelayRegions
{
	[StructLayout(3)]
	[Token(Token = "0x200036E")]
	[CompilerGenerated]
	private struct <GetList>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<List<string>> <>t__builder;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long <now>5__2;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter<List<Region>> <>u__2;

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xB7BF80", Offset = "0xB7BF80", VA = "0xB7BF80", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xB7C718", Offset = "0xB7C718", VA = "0xB7C718", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001501")]
	private const long CACHE_VALIDITY_DURATION_MS = 600000L;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<string> _cachedRegions;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static long _cacheTimeMs;

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xB7B9EC", Offset = "0xB7B9EC", VA = "0xB7B9EC")]
	[AsyncStateMachine(typeof(<GetList>d__3))]
	public static System.Threading.Tasks.Task<List<string>> GetList()
	{
		return null;
	}
}
[Token(Token = "0x200036F")]
public static class RelayThrottling
{
	[StructLayout(3)]
	[Token(Token = "0x2000370")]
	[CompilerGenerated]
	private struct <DoDespiteThrottling>d__1<T> : IAsyncStateMachine
	{
		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AsyncTaskMethodBuilder<T> <>t__builder;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int numRetries;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<System.Threading.Tasks.Task<T>> operation;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int retryDelayMs;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <numRetriesLeft>5__2;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter<T> <>u__1;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6001314")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001315")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400150F")]
	private const uint WARN_FOR_THROTTLING_EVERY = 4u;

	[Token(Token = "0x6001313")]
	[AsyncStateMachine(typeof(<DoDespiteThrottling>d__1<>))]
	public static System.Threading.Tasks.Task<T> DoDespiteThrottling<T>(Func<System.Threading.Tasks.Task<T>> operation, int numRetries = 12, int retryDelayMs = 200)
	{
		return null;
	}
}
[Token(Token = "0x2000371")]
public abstract class RelayUtpBase : MonoBehaviour, P2PNode, IDisposable
{
	[StructLayout(3)]
	[Token(Token = "0x2000373")]
	[CompilerGenerated]
	private struct <BindToAllocation>d__31 : IAsyncStateMachine
	{
		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] allocationIdBytes;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public byte[] connectionDataBytes;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] hostConnectionDataBytes;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public byte[] hmacKeyBytes;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public NetworkEndPoint serverEndpoint;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isSecure;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RelayUtpBase <>4__this;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xB7DD04", Offset = "0xB7DD04", VA = "0xB7DD04", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xB7E4B4", Offset = "0xB7E4B4", VA = "0xB7E4B4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool _debug;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool _disposed;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected NetworkDriver _networkDriver;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	protected NetworkEndPoint _serverEndpoint;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	protected NetworkPipeline _reliablePipe;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	protected NetworkPipeline _unreliablePipe;

	[Token(Token = "0x4001521")]
	private const int CONNECTION_CAPACITY = 2;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	protected List<NetworkConnection> _connections;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	protected readonly HashSet<NetworkConnection> _connectedConnections;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	protected bool _leaving;

	[Token(Token = "0x4001525")]
	private const bool USE_DTLS = false;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	private StatusCode _debug_lastStatusCode;

	[Token(Token = "0x1700034A")]
	public bool Connected
	{
		[Token(Token = "0x6001318")]
		[Address(RVA = "0xB7C8D0", Offset = "0xB7C8D0", VA = "0xB7C8D0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700034B")]
	public bool Ready
	{
		[Token(Token = "0x600131A")]
		[Address(RVA = "0xB7CC14", Offset = "0xB7CC14", VA = "0xB7CC14")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600131B")]
		[Address(RVA = "0xB7CC1C", Offset = "0xB7CC1C", VA = "0xB7CC1C")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x1700034C")]
	public virtual string joinCode
	{
		[Token(Token = "0x600131C")]
		[Address(RVA = "0xB7CC28", Offset = "0xB7CC28", VA = "0xB7CC28", Slot = "10")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600131D")]
		[Address(RVA = "0xB7CC30", Offset = "0xB7CC30", VA = "0xB7CC30", Slot = "11")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x1400002C")]
	public event Action<byte[]> onReceivedData
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0xB7C770", Offset = "0xB7C770", VA = "0xB7C770", Slot = "6")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001317")]
		[Address(RVA = "0xB7C820", Offset = "0xB7C820", VA = "0xB7C820", Slot = "7")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xB7C958", Offset = "0xB7C958", VA = "0xB7C958", Slot = "8")]
	private void P2PNode.Close()
	{
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600131E")]
	[Address(RVA = "0xB7CC38", Offset = "0xB7CC38", VA = "0xB7CC38")]
	public NetworkConnection.State? ConnectionStateOf(NetworkConnection connection)
	{
		return null;
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x600131F")]
	[Address(RVA = "0xB7CCCC", Offset = "0xB7CCCC", VA = "0xB7CCCC")]
	protected bool IsConnectedToDriver(NetworkConnection connection)
	{
		return default(bool);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xB7CD18", Offset = "0xB7CD18", VA = "0xB7CD18")]
	private static RelayAllocationId ConvertAllocationIdBytes(byte[] allocationIdBytes)
	{
		return default(RelayAllocationId);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xB7CD40", Offset = "0xB7CD40", VA = "0xB7CD40")]
	private static RelayConnectionData ConvertConnectionDataBytes(byte[] connectionData)
	{
		return default(RelayConnectionData);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xB7CDB4", Offset = "0xB7CDB4", VA = "0xB7CDB4")]
	private static RelayHMACKey ConvertHMACKeyBytes(byte[] hmac)
	{
		return default(RelayHMACKey);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xB7CE30", Offset = "0xB7CE30", VA = "0xB7CE30")]
	protected static NetworkEndPoint GetEndpointForAllocation(List<RelayServerEndpoint> endpoints, string ip, int port, out bool isSecure)
	{
		return default(NetworkEndPoint);
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xB7CEF0", Offset = "0xB7CEF0", VA = "0xB7CEF0")]
	[AsyncStateMachine(typeof(<BindToAllocation>d__31))]
	protected System.Threading.Tasks.Task BindToAllocation(NetworkEndPoint serverEndpoint, byte[] allocationIdBytes, byte[] connectionDataBytes, byte[] hostConnectionDataBytes, byte[] hmacKeyBytes, bool isSecure)
	{
		return null;
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xB7D08C", Offset = "0xB7D08C", VA = "0xB7D08C", Slot = "12")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xB7D234", Offset = "0xB7D234", VA = "0xB7D234")]
	protected void ReceiveNetworkEvents(NetworkDriver driver)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xB7D4AC", Offset = "0xB7D4AC", VA = "0xB7D4AC")]
	private void ProcessNetworkEvent(NetworkConnection conn, DataStreamReader strm, NetworkEvent.Type cmd)
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xB7D758", Offset = "0xB7D758", VA = "0xB7D758", Slot = "5")]
	private void P2PNode.Send(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xB7D76C", Offset = "0xB7D76C", VA = "0xB7D76C", Slot = "13")]
	protected virtual void BroadcastSend(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xB7D774", Offset = "0xB7D774", VA = "0xB7D774")]
	public void Broadcast(ReadOnlySpan<byte> messageBytes, bool reliable)
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xB7D8E0", Offset = "0xB7D8E0", VA = "0xB7D8E0")]
	private void SendToConnection(ReadOnlySpan<byte> messageBytes, bool reliable, NetworkConnection connection)
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xB7D6D8", Offset = "0xB7D6D8", VA = "0xB7D6D8")]
	private byte[] ReadMessageContents(ref DataStreamReader strm)
	{
		return null;
	}

	[Token(Token = "0x600132D")]
	protected abstract void ProcessDisconnectEvent();

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xB7C95C", Offset = "0xB7C95C", VA = "0xB7C95C")]
	public void Leave()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xB7DADC", Offset = "0xB7DADC", VA = "0xB7DADC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xB7DAE0", Offset = "0xB7DAE0", VA = "0xB7DAE0", Slot = "9")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xB7DB50", Offset = "0xB7DB50", VA = "0xB7DB50", Slot = "15")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xB7DB80", Offset = "0xB7DB80", VA = "0xB7DB80")]
	protected RelayUtpBase()
	{
	}
}
[Token(Token = "0x2000374")]
public class RelayUtpClient : RelayUtpBase
{
	[Token(Token = "0x2000375")]
	public class ConnectToRelayException : Exception
	{
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xB7EE08", Offset = "0xB7EE08", VA = "0xB7EE08")]
		public ConnectToRelayException()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xB7EE60", Offset = "0xB7EE60", VA = "0xB7EE60")]
		public ConnectToRelayException(string message)
		{
		}
	}

	[Token(Token = "0x2000376")]
	public class DisposeWhileConnectToRelayException : ConnectToRelayException
	{
		[Token(Token = "0x6001346")]
		[Address(RVA = "0xB7EEC8", Offset = "0xB7EEC8", VA = "0xB7EEC8")]
		public DisposeWhileConnectToRelayException(string message)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000377")]
	[CompilerGenerated]
	private struct <Join>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string code;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool debug;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xB7EECC", Offset = "0xB7EECC", VA = "0xB7EECC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xB7F484", Offset = "0xB7F484", VA = "0xB7F484", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000378")]
	[CompilerGenerated]
	private struct <JoinAllocation>d__7 : IAsyncStateMachine
	{
		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<JoinAllocation> <>u__1;

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xB7F490", Offset = "0xB7F490", VA = "0xB7F490", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xB7F824", Offset = "0xB7F824", VA = "0xB7F824", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000379")]
	[CompilerGenerated]
	private struct <BindToAllocation>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xB7F830", Offset = "0xB7F830", VA = "0xB7F830", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xB7FB2C", Offset = "0xB7FB2C", VA = "0xB7FB2C", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200037A")]
	[CompilerGenerated]
	private struct <Connect>d__11 : IAsyncStateMachine
	{
		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpClient <>4__this;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xB7FB38", Offset = "0xB7FB38", VA = "0xB7FB38", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xB7FFA0", Offset = "0xB7FFA0", VA = "0xB7FFA0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private JoinAllocation _allocation;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private bool _firstUpdate;

	[Token(Token = "0x1700034D")]
	public bool IsDriverConnectedToHost
	{
		[Token(Token = "0x600133A")]
		[Address(RVA = "0xB7E600", Offset = "0xB7E600", VA = "0xB7E600")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400002D")]
	public event Action onHostDisconnected
	{
		[Token(Token = "0x6001338")]
		[Address(RVA = "0xB7E4C0", Offset = "0xB7E4C0", VA = "0xB7E4C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001339")]
		[Address(RVA = "0xB7E560", Offset = "0xB7E560", VA = "0xB7E560")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xB7E690", Offset = "0xB7E690", VA = "0xB7E690")]
	[AsyncStateMachine(typeof(<Join>d__6))]
	public System.Threading.Tasks.Task Join(string code, bool debug = false)
	{
		return null;
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xB7E7A0", Offset = "0xB7E7A0", VA = "0xB7E7A0")]
	[AsyncStateMachine(typeof(<JoinAllocation>d__7))]
	private System.Threading.Tasks.Task JoinAllocation()
	{
		return null;
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xB7E88C", Offset = "0xB7E88C", VA = "0xB7E88C")]
	[AsyncStateMachine(typeof(<BindToAllocation>d__8))]
	private System.Threading.Tasks.Task BindToAllocation()
	{
		return null;
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xB7E978", Offset = "0xB7E978", VA = "0xB7E978")]
	[AsyncStateMachine(typeof(<Connect>d__11))]
	private System.Threading.Tasks.Task Connect()
	{
		return null;
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xB7EA64", Offset = "0xB7EA64", VA = "0xB7EA64", Slot = "13")]
	protected override void BroadcastSend(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xB7EB1C", Offset = "0xB7EB1C", VA = "0xB7EB1C", Slot = "12")]
	protected override void Update()
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xB7EB74", Offset = "0xB7EB74", VA = "0xB7EB74", Slot = "14")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xB7ECF0", Offset = "0xB7ECF0", VA = "0xB7ECF0")]
	public RelayUtpClient()
	{
	}
}
[Token(Token = "0x200037C")]
public class RelayUtpHost : RelayUtpBase
{
	[StructLayout(3)]
	[Token(Token = "0x200037D")]
	[CompilerGenerated]
	private struct <Allocate>d__13 : IAsyncStateMachine
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string region;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool debug;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int maxConnections;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private System.Threading.Tasks.Task<string> <getJoinCodeTask>5__2;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<string> <>u__2;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xB80EC8", Offset = "0xB80EC8", VA = "0xB80EC8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xB816E4", Offset = "0xB816E4", VA = "0xB816E4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000380")]
	[CompilerGenerated]
	private struct <CreateAllocation>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxConnections;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string region;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<Allocation> <>u__1;

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xB81B30", Offset = "0xB81B30", VA = "0xB81B30", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xB81ECC", Offset = "0xB81ECC", VA = "0xB81ECC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000381")]
	[CompilerGenerated]
	private struct <GetJoinCodeAsync>d__15 : IAsyncStateMachine
	{
		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<string> <>t__builder;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter<string> <>u__1;

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xB81ED8", Offset = "0xB81ED8", VA = "0xB81ED8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xB82228", Offset = "0xB82228", VA = "0xB82228", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000382")]
	[CompilerGenerated]
	private struct <BindToAllocation>d__16 : IAsyncStateMachine
	{
		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RelayUtpHost <>4__this;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xB82280", Offset = "0xB82280", VA = "0xB82280", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xB826C8", Offset = "0xB826C8", VA = "0xB826C8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[SerializeField]
	private int numClients;

	[Token(Token = "0x400154F")]
	private const string connectionType = "udp";

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private Allocation _allocation;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private bool _nothingMoreToAccept;

	[Token(Token = "0x1700034E")]
	public string chosenRegion
	{
		[Token(Token = "0x6001355")]
		[Address(RVA = "0xB80518", Offset = "0xB80518", VA = "0xB80518")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001356")]
		[Address(RVA = "0xB80520", Offset = "0xB80520", VA = "0xB80520")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event Action onClientConnected
	{
		[Token(Token = "0x6001351")]
		[Address(RVA = "0xB80298", Offset = "0xB80298", VA = "0xB80298")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001352")]
		[Address(RVA = "0xB80338", Offset = "0xB80338", VA = "0xB80338")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400002F")]
	public event Action onClientDisconnected
	{
		[Token(Token = "0x6001353")]
		[Address(RVA = "0xB803D8", Offset = "0xB803D8", VA = "0xB803D8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001354")]
		[Address(RVA = "0xB80478", Offset = "0xB80478", VA = "0xB80478")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xB80530", Offset = "0xB80530", VA = "0xB80530")]
	[AsyncStateMachine(typeof(<Allocate>d__13))]
	public System.Threading.Tasks.Task<string> Allocate(int maxConnections, [Optional] string region, bool debug = false)
	{
		return null;
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xB80674", Offset = "0xB80674", VA = "0xB80674")]
	[AsyncStateMachine(typeof(<CreateAllocation>d__14))]
	private System.Threading.Tasks.Task CreateAllocation(int maxConnections, [Optional] string region)
	{
		return null;
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xB80784", Offset = "0xB80784", VA = "0xB80784")]
	[AsyncStateMachine(typeof(<GetJoinCodeAsync>d__15))]
	private System.Threading.Tasks.Task<string> GetJoinCodeAsync()
	{
		return null;
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xB80890", Offset = "0xB80890", VA = "0xB80890")]
	[AsyncStateMachine(typeof(<BindToAllocation>d__16))]
	private System.Threading.Tasks.Task BindToAllocation()
	{
		return null;
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xB8097C", Offset = "0xB8097C", VA = "0xB8097C", Slot = "12")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xB809A4", Offset = "0xB809A4", VA = "0xB809A4")]
	private void UpdateConnections()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xB80CA8", Offset = "0xB80CA8", VA = "0xB80CA8", Slot = "14")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xB80DB8", Offset = "0xB80DB8", VA = "0xB80DB8")]
	public RelayUtpHost()
	{
	}
}
[Token(Token = "0x2000384")]
public static class UnityAuth
{
	[Token(Token = "0x2000385")]
	private enum State
	{
		[Token(Token = "0x4001577")]
		NotSignedIn,
		[Token(Token = "0x4001578")]
		SigningIn,
		[Token(Token = "0x4001579")]
		SignedIn
	}

	[StructLayout(3)]
	[Token(Token = "0x2000386")]
	[CompilerGenerated]
	private struct <TrySignInFallbackToAnonymous>d__4 : IAsyncStateMachine
	{
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object <>7__wrap1;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <>7__wrap2;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xB82BB0", Offset = "0xB82BB0", VA = "0xB82BB0", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xB831B0", Offset = "0xB831B0", VA = "0xB831B0", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000387")]
	[CompilerGenerated]
	private struct <SignInAnonymously>d__5 : IAsyncStateMachine
	{
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xB831BC", Offset = "0xB831BC", VA = "0xB831BC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xB835F4", Offset = "0xB835F4", VA = "0xB835F4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000388")]
	[CompilerGenerated]
	private struct <SignIn>d__6 : IAsyncStateMachine
	{
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder <>t__builder;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private InitializationOptions <options>5__2;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__3;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <timedOut>5__4;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xB83600", Offset = "0xB83600", VA = "0xB83600", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xB84174", Offset = "0xB84174", VA = "0xB84174", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static State _state;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Exception _ex;

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xB829C4", Offset = "0xB829C4", VA = "0xB829C4")]
	static UnityAuth()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xB7C648", Offset = "0xB7C648", VA = "0xB7C648")]
	[AsyncStateMachine(typeof(<TrySignInFallbackToAnonymous>d__4))]
	public static System.Threading.Tasks.Task TrySignInFallbackToAnonymous()
	{
		return null;
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xB82A0C", Offset = "0xB82A0C", VA = "0xB82A0C")]
	[AsyncStateMachine(typeof(<SignInAnonymously>d__5))]
	public static System.Threading.Tasks.Task SignInAnonymously()
	{
		return null;
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xB82ADC", Offset = "0xB82ADC", VA = "0xB82ADC")]
	[AsyncStateMachine(typeof(<SignIn>d__6))]
	public static System.Threading.Tasks.Task SignIn()
	{
		return null;
	}
}
[Token(Token = "0x2000389")]
public class ConnectionTest : MonoBehaviour
{
	[Token(Token = "0x6001378")]
	[Address(RVA = "0xB84180", Offset = "0xB84180", VA = "0xB84180")]
	public ConnectionTest()
	{
	}
}
[Token(Token = "0x200038A")]
public abstract class UdpUtpBase : MonoBehaviour, P2PNode, IDisposable
{
	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool _debug;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected NetworkDriver _networkDriver;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	protected NetworkPipeline _reliablePipe;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	protected NetworkPipeline _unreliablePipe;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	protected List<NetworkConnection> _connections;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	protected bool _leaving;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private StatusCode _debug_lastStatusCode;

	[Token(Token = "0x1700034F")]
	public bool Connected
	{
		[Token(Token = "0x600137F")]
		[Address(RVA = "0xB84558", Offset = "0xB84558", VA = "0xB84558", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000350")]
	protected bool CreatedAndBound
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xB84B6C", Offset = "0xB84B6C", VA = "0xB84B6C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xB84B60", Offset = "0xB84B60", VA = "0xB84B60")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event Action onConnected
	{
		[Token(Token = "0x6001379")]
		[Address(RVA = "0xB84188", Offset = "0xB84188", VA = "0xB84188")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600137A")]
		[Address(RVA = "0xB84224", Offset = "0xB84224", VA = "0xB84224")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event Action onDisconnected
	{
		[Token(Token = "0x600137B")]
		[Address(RVA = "0xB842C0", Offset = "0xB842C0", VA = "0xB842C0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600137C")]
		[Address(RVA = "0xB8435C", Offset = "0xB8435C", VA = "0xB8435C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000032")]
	public event Action<byte[]> onReceivedData
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0xB843F8", Offset = "0xB843F8", VA = "0xB843F8", Slot = "6")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600137E")]
		[Address(RVA = "0xB844A8", Offset = "0xB844A8", VA = "0xB844A8", Slot = "7")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x6001380")]
	[Address(RVA = "0xB84664", Offset = "0xB84664", VA = "0xB84664")]
	public NetworkConnection.State? ConnectionStateOf(NetworkConnection connection)
	{
		return null;
	}

	[MethodImpl(MethodImplOptions.AggressiveInlining)]
	[Token(Token = "0x6001381")]
	[Address(RVA = "0xB846F8", Offset = "0xB846F8", VA = "0xB846F8")]
	public bool IsConnectedToDriver(NetworkConnection connection)
	{
		return default(bool);
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0xB847D0", Offset = "0xB847D0", VA = "0xB847D0", Slot = "8")]
	private void P2PNode.Close()
	{
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0xB84A8C", Offset = "0xB84A8C", VA = "0xB84A8C")]
	protected NetworkEndPoint ConvertIPToUNet(IPEndPoint address)
	{
		return default(NetworkEndPoint);
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xB84B74", Offset = "0xB84B74", VA = "0xB84B74")]
	protected void CreateAndBind(NetworkEndPoint networkEndPoint)
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xB84E44", Offset = "0xB84E44", VA = "0xB84E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xB85300", Offset = "0xB85300", VA = "0xB85300", Slot = "10")]
	protected virtual void BoundUpdate()
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xB85094", Offset = "0xB85094", VA = "0xB85094")]
	protected void ReceiveNetworkEvents()
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0xB85304", Offset = "0xB85304", VA = "0xB85304")]
	private void ProcessNetworkEvent(NetworkConnection conn, DataStreamReader strm, NetworkEvent.Type cmd)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xB85474", Offset = "0xB85474", VA = "0xB85474")]
	private byte[] ReadMessageContents(ref DataStreamReader strm)
	{
		return null;
	}

	[Token(Token = "0x600138C")]
	protected abstract void ProcessConnectEvent();

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xB854F4", Offset = "0xB854F4", VA = "0xB854F4")]
	protected void OnConnected()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xB85510", Offset = "0xB85510", VA = "0xB85510", Slot = "5")]
	private void P2PNode.Send(ReadOnlySpan<byte> data, bool reliable)
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xB85518", Offset = "0xB85518", VA = "0xB85518")]
	public void Broadcast(ReadOnlySpan<byte> messageBytes, bool reliable)
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xB85684", Offset = "0xB85684", VA = "0xB85684")]
	private void SendToConnection(ReadOnlySpan<byte> messageBytes, bool reliable, NetworkConnection connection)
	{
	}

	[Token(Token = "0x6001391")]
	protected abstract void ProcessDisconnectEvent();

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xB85870", Offset = "0xB85870", VA = "0xB85870")]
	protected void OnDisconnected()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xB847D4", Offset = "0xB847D4", VA = "0xB847D4")]
	public void Leave()
	{
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xB8588C", Offset = "0xB8588C", VA = "0xB8588C", Slot = "9")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xB85990", Offset = "0xB85990", VA = "0xB85990")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0xB85994", Offset = "0xB85994", VA = "0xB85994")]
	protected UdpUtpBase()
	{
	}
}
[Token(Token = "0x200038B")]
public class UdpUtpClient : UdpUtpBase
{
	[Token(Token = "0x6001397")]
	[Address(RVA = "0xB85A20", Offset = "0xB85A20", VA = "0xB85A20")]
	public void Connect(IPEndPoint localAddress, IPEndPoint remoteAddress, bool debug)
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0xB85BCC", Offset = "0xB85BCC", VA = "0xB85BCC", Slot = "11")]
	protected override void ProcessConnectEvent()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0xB85CC4", Offset = "0xB85CC4", VA = "0xB85CC4", Slot = "12")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0xB85E1C", Offset = "0xB85E1C", VA = "0xB85E1C")]
	public UdpUtpClient()
	{
	}
}
[Token(Token = "0x200038C")]
public class UdpUtpHost : UdpUtpBase
{
	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	private readonly IPAddress _hostZeroAddress;

	[Token(Token = "0x600139B")]
	[Address(RVA = "0xB85E20", Offset = "0xB85E20", VA = "0xB85E20")]
	public void Listen(IPEndPoint add, bool debug)
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0xB85FC8", Offset = "0xB85FC8", VA = "0xB85FC8", Slot = "10")]
	protected override void BoundUpdate()
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0xB8616C", Offset = "0xB8616C", VA = "0xB8616C", Slot = "11")]
	protected override void ProcessConnectEvent()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0xB8622C", Offset = "0xB8622C", VA = "0xB8622C", Slot = "12")]
	protected override void ProcessDisconnectEvent()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xB8631C", Offset = "0xB8631C", VA = "0xB8631C")]
	public UdpUtpHost()
	{
	}
}
[Token(Token = "0x200038D")]
public class EnterPinUI : Area
{
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject versusTitle;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject coOpTitle;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PINKnob knob1;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PINKnob knob2;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PINKnob knob3;

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UIItemTransitions findingMatchPanel;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions goButton;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnterPinUI inst;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isSearchingForMatch;

	[Token(Token = "0x17000351")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xB863A0", Offset = "0xB863A0", VA = "0xB863A0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000352")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xB863A8", Offset = "0xB863A8", VA = "0xB863A8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000353")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xB863B0", Offset = "0xB863B0", VA = "0xB863B0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000354")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xB863B8", Offset = "0xB863B8", VA = "0xB863B8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000355")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xB863C0", Offset = "0xB863C0", VA = "0xB863C0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xB863C8", Offset = "0xB863C8", VA = "0xB863C8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xB8648C", Offset = "0xB8648C", VA = "0xB8648C")]
	private void OnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xB864B4", Offset = "0xB864B4", VA = "0xB864B4")]
	private void UpdateGoButton()
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0xB86510", Offset = "0xB86510", VA = "0xB86510", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xB865C0", Offset = "0xB865C0", VA = "0xB865C0")]
	public void abortAndHide()
	{
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xB86680", Offset = "0xB86680", VA = "0xB86680", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xB8670C", Offset = "0xB8670C", VA = "0xB8670C")]
	private string getPIN()
	{
		return null;
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xB8679C", Offset = "0xB8679C", VA = "0xB8679C")]
	public void debugSetPIN(string pin)
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xB86998", Offset = "0xB86998", VA = "0xB86998")]
	private void Update()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0xB86B1C", Offset = "0xB86B1C", VA = "0xB86B1C")]
	public void onGoClicked()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xB865FC", Offset = "0xB865FC", VA = "0xB865FC")]
	public void onCancelFindClicked()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0xB86BD8", Offset = "0xB86BD8", VA = "0xB86BD8")]
	public EnterPinUI()
	{
	}
}
[Token(Token = "0x200038E")]
public class FindFriendUI : Area
{
	[Token(Token = "0x200038F")]
	[CompilerGenerated]
	private sealed class <updateCo>d__42 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FindFriendUI <>4__this;

		[Token(Token = "0x1700035F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60013CE")]
			[Address(RVA = "0xB87B98", Offset = "0xB87B98", VA = "0xB87B98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xB87BE0", Offset = "0xB87BE0", VA = "0xB87BE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xB87888", Offset = "0xB87888", VA = "0xB87888")]
		[DebuggerHidden]
		public <updateCo>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xB87ADC", Offset = "0xB87ADC", VA = "0xB87ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xB87AE0", Offset = "0xB87AE0", VA = "0xB87AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xB87BA0", Offset = "0xB87BA0", VA = "0xB87BA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InvitableFriend[] friendItems;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject noFriends;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TouchItem nextButtonTouchItem;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TouchItem prevButtonTouchItem;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PageButton page1Button;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int maxNumPages;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float updateInterval;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions newCoOpIndicator;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _firstShownIndex;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FindFriendUI inst;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DebugFriends _debugFriends;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CoroutineHandle updateCoroutineRef;

	[Token(Token = "0x17000356")]
	private int curPage
	{
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xB86BE0", Offset = "0xB86BE0", VA = "0xB86BE0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000357")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xB86CF4", Offset = "0xB86CF4", VA = "0xB86CF4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000358")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xB86CFC", Offset = "0xB86CFC", VA = "0xB86CFC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000359")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xB86D04", Offset = "0xB86D04", VA = "0xB86D04", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035A")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xB86D0C", Offset = "0xB86D0C", VA = "0xB86D0C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035B")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xB86D14", Offset = "0xB86D14", VA = "0xB86D14", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700035C")]
	private int numFriendsPerPage
	{
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xB86CD8", Offset = "0xB86CD8", VA = "0xB86CD8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700035D")]
	private int numDebugFriends
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xB86D1C", Offset = "0xB86D1C", VA = "0xB86D1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700035E")]
	private int numFriends
	{
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xB86D74", Offset = "0xB86D74", VA = "0xB86D74")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0xB86DFC", Offset = "0xB86DFC", VA = "0xB86DFC")]
	private RnxPlatform.User getFriend(int i)
	{
		return null;
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xB86EB8", Offset = "0xB86EB8", VA = "0xB86EB8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0xB86F1C", Offset = "0xB86F1C", VA = "0xB86F1C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0xB870C4", Offset = "0xB870C4", VA = "0xB870C4")]
	private void loadDebugFriends()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0xB87494", Offset = "0xB87494", VA = "0xB87494", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0xB87594", Offset = "0xB87594", VA = "0xB87594", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0xB875EC", Offset = "0xB875EC", VA = "0xB875EC")]
	public void onNextClicked()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0xB87610", Offset = "0xB87610", VA = "0xB87610")]
	public void onPrevClicked()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0xB87634", Offset = "0xB87634", VA = "0xB87634")]
	public void onPageSelected(TextMeshPro text)
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0xB871B4", Offset = "0xB871B4", VA = "0xB871B4")]
	private void showPage(int firstShownIndex)
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0xB873A8", Offset = "0xB873A8", VA = "0xB873A8")]
	private void updateData()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0xB87880", Offset = "0xB87880", VA = "0xB87880")]
	private void onFriendsInfoUpdated()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0xB87420", Offset = "0xB87420", VA = "0xB87420")]
	[IteratorStateMachine(typeof(<updateCo>d__42))]
	private IEnumerator<float> updateCo()
	{
		return null;
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0xB878B0", Offset = "0xB878B0", VA = "0xB878B0")]
	public void onFriendSelected(RnxPlatform.User info)
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0xB87A00", Offset = "0xB87A00", VA = "0xB87A00")]
	public void onEnterPINClicked()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0xB87A74", Offset = "0xB87A74", VA = "0xB87A74")]
	private void onFindFriendCanceled()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0xB87AC8", Offset = "0xB87AC8", VA = "0xB87AC8")]
	public FindFriendUI()
	{
	}
}
[Token(Token = "0x2000390")]
public class FindingGameUI : MonoBehaviour
{
	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tipObject;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FindingGameUI inst;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shown;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool searchingForOpponentInBackground;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SelectableTouchItem autoAccept;

	[Token(Token = "0x40015B5")]
	private const string AUTO_ACCEPT_KEY = "Auto Accept Multiplayer Invitations";

	[Token(Token = "0x17000361")]
	public bool shown
	{
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xB87C3C", Offset = "0xB87C3C", VA = "0xB87C3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000362")]
	public bool AutoAcceptInvitations
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xB87C44", Offset = "0xB87C44", VA = "0xB87C44")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xB87C4C", Offset = "0xB87C4C", VA = "0xB87C4C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0xB87C58", Offset = "0xB87C58", VA = "0xB87C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0xB87E2C", Offset = "0xB87E2C", VA = "0xB87E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0xB87EA0", Offset = "0xB87EA0", VA = "0xB87EA0")]
	public void show(bool bFirstTime = false)
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0xB87FB0", Offset = "0xB87FB0", VA = "0xB87FB0")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0xB88044", Offset = "0xB88044", VA = "0xB88044")]
	public void hide()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0xB87E38", Offset = "0xB87E38", VA = "0xB87E38")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0xB880E8", Offset = "0xB880E8", VA = "0xB880E8")]
	private void onBack()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0xB880EC", Offset = "0xB880EC", VA = "0xB880EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0xB87FBC", Offset = "0xB87FBC", VA = "0xB87FBC")]
	public void onCancelClicked()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0xB881EC", Offset = "0xB881EC", VA = "0xB881EC")]
	public void OnAutoAcceptChanged(bool state)
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0xB88248", Offset = "0xB88248", VA = "0xB88248")]
	public FindingGameUI()
	{
	}
}
[Token(Token = "0x2000391")]
public class GameFoundUI : Area
{
	[Serializable]
	[Token(Token = "0x2000392")]
	public class WaitingForPlayer
	{
		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchItem playButtonTouchItem;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchItem cancelButtonTouchItem;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GraphBar playButtonCountdown;

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xB892A0", Offset = "0xB892A0", VA = "0xB892A0")]
		public WaitingForPlayer()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000393")]
	public class OpponentDeclined
	{
		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xB892A8", Offset = "0xB892A8", VA = "0xB892A8")]
		public OpponentDeclined()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000394")]
	public class WaitingForOpponent
	{
		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xB892B0", Offset = "0xB892B0", VA = "0xB892B0")]
		public WaitingForOpponent()
		{
		}
	}

	[Token(Token = "0x2000395")]
	[CompilerGenerated]
	private sealed class <safetyDisabledPeriod>d__30 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameFoundUI <>4__this;

		[Token(Token = "0x17000368")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xB8936C", Offset = "0xB8936C", VA = "0xB8936C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000369")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001401")]
			[Address(RVA = "0xB893B4", Offset = "0xB893B4", VA = "0xB893B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xB8893C", Offset = "0xB8893C", VA = "0xB8893C")]
		[DebuggerHidden]
		public <safetyDisabledPeriod>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xB892B8", Offset = "0xB892B8", VA = "0xB892B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xB892BC", Offset = "0xB892BC", VA = "0xB892BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xB89374", Offset = "0xB89374", VA = "0xB89374", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000396")]
	[CompilerGenerated]
	private sealed class <updateCountdown>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameFoundUI <>4__this;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x1700036A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001405")]
			[Address(RVA = "0xB89540", Offset = "0xB89540", VA = "0xB89540", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xB89588", Offset = "0xB89588", VA = "0xB89588", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xB88D34", Offset = "0xB88D34", VA = "0xB88D34")]
		[DebuggerHidden]
		public <updateCountdown>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xB89410", Offset = "0xB89410", VA = "0xB89410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xB89414", Offset = "0xB89414", VA = "0xB89414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xB89548", Offset = "0xB89548", VA = "0xB89548", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] versusObjects;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] coOpObjects;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WaitingForPlayer waitingForPlayerObjects;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public OpponentDeclined opponentDeclinedObjects;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WaitingForOpponent waitingForOpponentObjects;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameFoundUI inst;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoMode _coMode;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool _playerAccepted;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool _opponentAccepted;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CoroutineHandle _updateCountdownCo;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private CoroutineHandle _safetyDisabledPeriodCo;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TaskCompletionSource<bool?> _promise;

	[Token(Token = "0x17000363")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xB88250", Offset = "0xB88250", VA = "0xB88250", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000364")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xB88258", Offset = "0xB88258", VA = "0xB88258", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000365")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xB88260", Offset = "0xB88260", VA = "0xB88260", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000366")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xB88268", Offset = "0xB88268", VA = "0xB88268", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000367")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xB88270", Offset = "0xB88270", VA = "0xB88270", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0xB88278", Offset = "0xB88278", VA = "0xB88278", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0xB882DC", Offset = "0xB882DC", VA = "0xB882DC")]
	public TaskCompletionSource<bool?> ShowGameFoundAcceptPopup(CoMode coMode)
	{
		return null;
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0xB88378", Offset = "0xB88378", VA = "0xB88378")]
	private void Show(CoMode coMode)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0xB88564", Offset = "0xB88564", VA = "0xB88564", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0xB885B4", Offset = "0xB885B4", VA = "0xB885B4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0xB888C8", Offset = "0xB888C8", VA = "0xB888C8")]
	[IteratorStateMachine(typeof(<safetyDisabledPeriod>d__30))]
	private IEnumerator<float> safetyDisabledPeriod()
	{
		return null;
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0xB88880", Offset = "0xB88880", VA = "0xB88880")]
	private void enableButtons(bool enable)
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0xB88964", Offset = "0xB88964", VA = "0xB88964")]
	private void enableButton(TouchItem touchItem, bool enable)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0xB889DC", Offset = "0xB889DC", VA = "0xB889DC", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0xB88B14", Offset = "0xB88B14", VA = "0xB88B14")]
	public void Abort()
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0xB8880C", Offset = "0xB8880C", VA = "0xB8880C")]
	[IteratorStateMachine(typeof(<updateCountdown>d__35))]
	private IEnumerator<float> updateCountdown()
	{
		return null;
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0xB88D5C", Offset = "0xB88D5C", VA = "0xB88D5C")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0xB88D60", Offset = "0xB88D60", VA = "0xB88D60", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0xB88D64", Offset = "0xB88D64", VA = "0xB88D64")]
	public void OnPlayClicked()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0xB88B64", Offset = "0xB88B64", VA = "0xB88B64")]
	public void OnCancelClicked()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0xB88F70", Offset = "0xB88F70", VA = "0xB88F70")]
	private void OnTimedOut()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0xB89088", Offset = "0xB89088", VA = "0xB89088")]
	public void OnOpponentAccepted()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0xB890B0", Offset = "0xB890B0", VA = "0xB890B0")]
	public void OnOpponentDeclined()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0xB89164", Offset = "0xB89164", VA = "0xB89164")]
	public void OnBackClicked()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0xB89178", Offset = "0xB89178", VA = "0xB89178")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0xB89298", Offset = "0xB89298", VA = "0xB89298")]
	public GameFoundUI()
	{
	}
}
[Token(Token = "0x2000397")]
public class GroupLaunchUI : Area
{
	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GroupLaunchUI inst;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject waitingRoot;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject waitingUnknownRoot;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject fullRoot;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro friendName;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image friendAvatar;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _defaultFriendName;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Sprite _defaultAvatar;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isWaitingForConnection;

	[Token(Token = "0x1700036C")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001408")]
		[Address(RVA = "0xB895E4", Offset = "0xB895E4", VA = "0xB895E4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036D")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001409")]
		[Address(RVA = "0xB895EC", Offset = "0xB895EC", VA = "0xB895EC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036E")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600140A")]
		[Address(RVA = "0xB895F4", Offset = "0xB895F4", VA = "0xB895F4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700036F")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600140B")]
		[Address(RVA = "0xB895FC", Offset = "0xB895FC", VA = "0xB895FC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000370")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600140C")]
		[Address(RVA = "0xB89604", Offset = "0xB89604", VA = "0xB89604", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0xB8960C", Offset = "0xB8960C", VA = "0xB8960C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0xB896B8", Offset = "0xB896B8", VA = "0xB896B8", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0xB89708", Offset = "0xB89708", VA = "0xB89708")]
	private void OnMatchIsFull()
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0xB89840", Offset = "0xB89840", VA = "0xB89840")]
	public void showUnknown(ulong roomId, CoMode coMode)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0xB89850", Offset = "0xB89850", VA = "0xB89850")]
	public void show(ulong roomId, string friendName, Texture2D avatarImage, CoMode coMode)
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0xB899F4", Offset = "0xB899F4", VA = "0xB899F4")]
	public void UpdateAvatarImage(Texture2D avatarImage)
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0xB89AF0", Offset = "0xB89AF0", VA = "0xB89AF0", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0xB89CB0", Offset = "0xB89CB0", VA = "0xB89CB0", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0xB89D98", Offset = "0xB89D98", VA = "0xB89D98")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0xB89D9C", Offset = "0xB89D9C", VA = "0xB89D9C", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0xB89DA0", Offset = "0xB89DA0", VA = "0xB89DA0")]
	public void OnMatchConnected()
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0xB89E58", Offset = "0xB89E58", VA = "0xB89E58")]
	public void OnCancelClicked()
	{
	}

	[Token(Token = "0x6001419")]
	[Address(RVA = "0xB89FC4", Offset = "0xB89FC4", VA = "0xB89FC4")]
	public void OnFullOKClicked()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0xB8A07C", Offset = "0xB8A07C", VA = "0xB8A07C")]
	public GroupLaunchUI()
	{
	}
}
[Token(Token = "0x2000398")]
public class InvitableFriend : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000399")]
	public class PlayerObjects
	{
		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro name;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize status;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject statusTipAvailable;

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xB8A264", Offset = "0xB8A264", VA = "0xB8A264")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x200039A")]
	public delegate void OnSelected(RnxPlatform.User friend);

	[Token(Token = "0x200039B")]
	private enum PlayerStatus
	{
		[Token(Token = "0x40015E1")]
		Unavailable,
		[Token(Token = "0x40015E2")]
		Busy,
		[Token(Token = "0x40015E3")]
		Available
	}

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObjects playerObjects;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OnSelected _onSelected;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shown;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RnxPlatform.User _friend;

	[Token(Token = "0x600141B")]
	[Address(RVA = "0xB877E4", Offset = "0xB877E4", VA = "0xB877E4")]
	public void show(RnxPlatform.User info, OnSelected onSelected)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0xB87844", Offset = "0xB87844", VA = "0xB87844")]
	public void hide()
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0xB8A084", Offset = "0xB8A084", VA = "0xB8A084")]
	public void update()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0xB8A1EC", Offset = "0xB8A1EC", VA = "0xB8A1EC")]
	private PlayerStatus determinePlayerStatus()
	{
		return default(PlayerStatus);
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0xB8A234", Offset = "0xB8A234", VA = "0xB8A234")]
	public void onClicked()
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0xB8A25C", Offset = "0xB8A25C", VA = "0xB8A25C")]
	public InvitableFriend()
	{
	}
}
[Token(Token = "0x200039C")]
public class InvitedByFriendUI : Area
{
	[Token(Token = "0x200039D")]
	[CompilerGenerated]
	private sealed class <NotificationTimerCo>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <buttonTimer>5__2;

		[Token(Token = "0x17000376")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xB8B760", Offset = "0xB8B760", VA = "0xB8B760", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000377")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xB8B7A8", Offset = "0xB8B7A8", VA = "0xB8B7A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB8A678", Offset = "0xB8A678", VA = "0xB8A678")]
		[DebuggerHidden]
		public <NotificationTimerCo>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xB8B3EC", Offset = "0xB8B3EC", VA = "0xB8B3EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xB8B3F0", Offset = "0xB8B3F0", VA = "0xB8B3F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xB8B768", Offset = "0xB8B768", VA = "0xB8B768", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039E")]
	[CompilerGenerated]
	private sealed class <safetyDisabledPeriod>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x17000378")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xB8B8C8", Offset = "0xB8B8C8", VA = "0xB8B8C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000379")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xB8B910", Offset = "0xB8B910", VA = "0xB8B910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xB8AC04", Offset = "0xB8AC04", VA = "0xB8AC04")]
		[DebuggerHidden]
		public <safetyDisabledPeriod>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xB8B804", Offset = "0xB8B804", VA = "0xB8B804", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xB8B808", Offset = "0xB8B808", VA = "0xB8B808", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xB8B8D0", Offset = "0xB8B8D0", VA = "0xB8B8D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200039F")]
	[CompilerGenerated]
	private sealed class <UpdateCountdown>d__38 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <startTime>5__2;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <endTime>5__3;

		[Token(Token = "0x1700037A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xB8BAA4", Offset = "0xB8BAA4", VA = "0xB8BAA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001451")]
			[Address(RVA = "0xB8BAEC", Offset = "0xB8BAEC", VA = "0xB8BAEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB8AEA0", Offset = "0xB8AEA0", VA = "0xB8AEA0")]
		[DebuggerHidden]
		public <UpdateCountdown>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB8B96C", Offset = "0xB8B96C", VA = "0xB8B96C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB8B970", Offset = "0xB8B970", VA = "0xB8B970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB8BAAC", Offset = "0xB8BAAC", VA = "0xB8BAAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A0")]
	[CompilerGenerated]
	private sealed class <JoinFriendInviteCo>d__45 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator<float> <a>5__2;

		[Token(Token = "0x1700037C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xB8BDEC", Offset = "0xB8BDEC", VA = "0xB8BDEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001457")]
			[Address(RVA = "0xB8BE34", Offset = "0xB8BE34", VA = "0xB8BE34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB8B318", Offset = "0xB8B318", VA = "0xB8B318")]
		[DebuggerHidden]
		public <JoinFriendInviteCo>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB8BB48", Offset = "0xB8BB48", VA = "0xB8BB48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB8BB4C", Offset = "0xB8BB4C", VA = "0xB8BB4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xB8BDF4", Offset = "0xB8BDF4", VA = "0xB8BDF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003A2")]
	[CompilerGenerated]
	private sealed class <AbortCurrentArena>d__46 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitedByFriendUI <>4__this;

		[Token(Token = "0x1700037E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600145E")]
			[Address(RVA = "0xB8C25C", Offset = "0xB8C25C", VA = "0xB8C25C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001460")]
			[Address(RVA = "0xB8C2A4", Offset = "0xB8C2A4", VA = "0xB8C2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xB8B3B4", Offset = "0xB8B3B4", VA = "0xB8B3B4")]
		[DebuggerHidden]
		public <AbortCurrentArena>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xB8BF98", Offset = "0xB8BF98", VA = "0xB8BF98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xB8BF9C", Offset = "0xB8BF9C", VA = "0xB8BF9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xB8C264", Offset = "0xB8C264", VA = "0xB8C264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image opponentImage;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro incomingTxt;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LocalizedString versusLocalizedText;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LocalizedString coOpLocalizedText;

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject warningText;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TouchItem acceptButtonTouchItem;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TouchItem declineButtonTouchItem;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GraphBar playButtonCountdown;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InvitedByFriendUI inst;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RnxPlatform.User _friendInfo;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CoMode _coMode;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float menuButtonNotificationTimePeriod;

	[Token(Token = "0x40015F0")]
	private const ushort hapticIntensity = 2000;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TaskCompletionSource<bool> _invitePopupPromise;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CoroutineHandle _notificationTimerCo;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private CoroutineHandle _updateCountdownCo;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoroutineHandle _safetyDisabledPeriodCo;

	[Token(Token = "0x17000371")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001426")]
		[Address(RVA = "0xB8A2AC", Offset = "0xB8A2AC", VA = "0xB8A2AC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000372")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001427")]
		[Address(RVA = "0xB8A2B4", Offset = "0xB8A2B4", VA = "0xB8A2B4", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000373")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001428")]
		[Address(RVA = "0xB8A2BC", Offset = "0xB8A2BC", VA = "0xB8A2BC", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000374")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001429")]
		[Address(RVA = "0xB8A2C4", Offset = "0xB8A2C4", VA = "0xB8A2C4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000375")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600142A")]
		[Address(RVA = "0xB8A2CC", Offset = "0xB8A2CC", VA = "0xB8A2CC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0xB8A2D4", Offset = "0xB8A2D4", VA = "0xB8A2D4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0xB8A338", Offset = "0xB8A338", VA = "0xB8A338")]
	public TaskCompletionSource<bool> ShowInvitePopup(RnxPlatform.User friendInfo, CoMode coMode)
	{
		return null;
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0xB8A604", Offset = "0xB8A604", VA = "0xB8A604")]
	[IteratorStateMachine(typeof(<NotificationTimerCo>d__27))]
	private IEnumerator<float> NotificationTimerCo()
	{
		return null;
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0xB8A6A0", Offset = "0xB8A6A0", VA = "0xB8A6A0", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xB8A6F0", Offset = "0xB8A6F0", VA = "0xB8A6F0")]
	private void OnInvitationCanceled()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xB8A770", Offset = "0xB8A770", VA = "0xB8A770", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xB8AAC4", Offset = "0xB8AAC4", VA = "0xB8AAC4")]
	private void SetIncomingText()
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xB8AB90", Offset = "0xB8AB90", VA = "0xB8AB90")]
	[IteratorStateMachine(typeof(<safetyDisabledPeriod>d__34))]
	private IEnumerator<float> safetyDisabledPeriod()
	{
		return null;
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xB8AB5C", Offset = "0xB8AB5C", VA = "0xB8AB5C")]
	private void EnableButtons(bool enable)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xB8AC2C", Offset = "0xB8AC2C", VA = "0xB8AC2C")]
	private void EnableButton(TouchItem touchItem, bool enable)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xB8ACA4", Offset = "0xB8ACA4", VA = "0xB8ACA4", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xB8AA50", Offset = "0xB8AA50", VA = "0xB8AA50")]
	[IteratorStateMachine(typeof(<UpdateCountdown>d__38))]
	private IEnumerator<float> UpdateCountdown()
	{
		return null;
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0xB8AEC8", Offset = "0xB8AEC8", VA = "0xB8AEC8")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0xB8AECC", Offset = "0xB8AECC", VA = "0xB8AECC", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0xB8AED0", Offset = "0xB8AED0", VA = "0xB8AED0")]
	private void Update()
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0xB8B16C", Offset = "0xB8B16C", VA = "0xB8B16C")]
	public void OnDeclineClicked()
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0xB8B208", Offset = "0xB8B208", VA = "0xB8B208")]
	private void OnTimedOut()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0xB8AFF0", Offset = "0xB8AFF0", VA = "0xB8AFF0")]
	public void OnAcceptClicked()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0xB8B2A4", Offset = "0xB8B2A4", VA = "0xB8B2A4")]
	[IteratorStateMachine(typeof(<JoinFriendInviteCo>d__45))]
	private IEnumerator<float> JoinFriendInviteCo()
	{
		return null;
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0xB8B340", Offset = "0xB8B340", VA = "0xB8B340")]
	[IteratorStateMachine(typeof(<AbortCurrentArena>d__46))]
	private IEnumerator<float> AbortCurrentArena()
	{
		return null;
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0xB8B3DC", Offset = "0xB8B3DC", VA = "0xB8B3DC")]
	public InvitedByFriendUI()
	{
	}
}
[Token(Token = "0x20003A3")]
public class InvitingFriendUI : Area
{
	[Serializable]
	[Token(Token = "0x20003A4")]
	public class WaitingObjects
	{
		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizeFormatted waitingForPlayerName;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GraphBar cancelButtonCountdown;

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xB8DCEC", Offset = "0xB8DCEC", VA = "0xB8DCEC")]
		public WaitingObjects()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003A5")]
	public class DeclinedObjects
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizeFormatted declinedText;

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xB8DCF4", Offset = "0xB8DCF4", VA = "0xB8DCF4")]
		public DeclinedObjects()
		{
		}
	}

	[Token(Token = "0x20003A6")]
	private enum State
	{
		[Token(Token = "0x4001617")]
		Hidden,
		[Token(Token = "0x4001618")]
		Waiting,
		[Token(Token = "0x4001619")]
		Declined
	}

	[Token(Token = "0x20003A7")]
	[CompilerGenerated]
	private sealed class <UpdateCountdown>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitingFriendUI <>4__this;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <duration>5__3;

		[Token(Token = "0x17000385")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xB8DE2C", Offset = "0xB8DE2C", VA = "0xB8DE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000386")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xB8DE74", Offset = "0xB8DE74", VA = "0xB8DE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xB8DBF0", Offset = "0xB8DBF0", VA = "0xB8DBF0")]
		[DebuggerHidden]
		public <UpdateCountdown>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xB8DCFC", Offset = "0xB8DCFC", VA = "0xB8DCFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xB8DD00", Offset = "0xB8DD00", VA = "0xB8DD00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xB8DE34", Offset = "0xB8DE34", VA = "0xB8DE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaitingObjects waitingObjects;

	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DeclinedObjects declinedObjects;

	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InvitingFriendUI inst;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State _state;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RnxPlatform.User _friendInfo;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action _onCancel;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoroutineHandle? _updateCountdownCo;

	[Token(Token = "0x17000380")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001461")]
		[Address(RVA = "0xB8D300", Offset = "0xB8D300", VA = "0xB8D300", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000381")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001462")]
		[Address(RVA = "0xB8D308", Offset = "0xB8D308", VA = "0xB8D308", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000382")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001463")]
		[Address(RVA = "0xB8D310", Offset = "0xB8D310", VA = "0xB8D310", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000383")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB8D318", Offset = "0xB8D318", VA = "0xB8D318", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000384")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001465")]
		[Address(RVA = "0xB8D320", Offset = "0xB8D320", VA = "0xB8D320", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0xB8D328", Offset = "0xB8D328", VA = "0xB8D328", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0xB8D38C", Offset = "0xB8D38C", VA = "0xB8D38C")]
	public void show(RnxPlatform.User friendInfo, Action onCancel)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0xB8D3F4", Offset = "0xB8D3F4", VA = "0xB8D3F4", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0xB8D444", Offset = "0xB8D444", VA = "0xB8D444", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0xB8D6A4", Offset = "0xB8D6A4", VA = "0xB8D6A4")]
	public void OnDeclined()
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0xB8D980", Offset = "0xB8D980", VA = "0xB8D980", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0xB8DAF0", Offset = "0xB8DAF0", VA = "0xB8DAF0")]
	private void StartCountdown()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0xB8D630", Offset = "0xB8D630", VA = "0xB8D630")]
	[IteratorStateMachine(typeof(<UpdateCountdown>d__27))]
	private IEnumerator<float> UpdateCountdown()
	{
		return null;
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0xB8DC18", Offset = "0xB8DC18", VA = "0xB8DC18")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0xB8DC1C", Offset = "0xB8DC1C", VA = "0xB8DC1C", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0xB8DC20", Offset = "0xB8DC20", VA = "0xB8DC20")]
	public void OnCancelClicked()
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0xB8DC5C", Offset = "0xB8DC5C", VA = "0xB8DC5C")]
	public void OnBackClicked()
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0xB8DC70", Offset = "0xB8DC70", VA = "0xB8DC70")]
	private void OnTimedOut()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0xB8DCE4", Offset = "0xB8DCE4", VA = "0xB8DCE4")]
	public InvitingFriendUI()
	{
	}
}
[Token(Token = "0x20003A8")]
public class MultiplayerFindUI : Area
{
	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TouchItem findButton;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions newCoOpIndicator;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerFindUI inst;

	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _versusSelected;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _coOpSelected;

	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private UIItemTransitions _findBtnTrans;

	[Token(Token = "0x17000387")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600147C")]
		[Address(RVA = "0xB8DED0", Offset = "0xB8DED0", VA = "0xB8DED0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000388")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB8DED8", Offset = "0xB8DED8", VA = "0xB8DED8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000389")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB8DEE0", Offset = "0xB8DEE0", VA = "0xB8DEE0", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038A")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB8DEE8", Offset = "0xB8DEE8", VA = "0xB8DEE8", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038B")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB8DEF0", Offset = "0xB8DEF0", VA = "0xB8DEF0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0xB8DEF8", Offset = "0xB8DEF8", VA = "0xB8DEF8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0xB8DFE8", Offset = "0xB8DFE8", VA = "0xB8DFE8")]
	private void OnOfflineStateChanged(bool _)
	{
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0xB8E05C", Offset = "0xB8E05C", VA = "0xB8E05C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0xB8E0B4", Offset = "0xB8E0B4", VA = "0xB8E0B4", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0xB8E10C", Offset = "0xB8E10C", VA = "0xB8E10C")]
	public void onVersusSelected()
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0xB8E118", Offset = "0xB8E118", VA = "0xB8E118")]
	public void onVersusUnselected()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0xB8E120", Offset = "0xB8E120", VA = "0xB8E120")]
	public void onCoOpSelected()
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0xB8E12C", Offset = "0xB8E12C", VA = "0xB8E12C")]
	public void onCoOpUnselected()
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0xB8DFEC", Offset = "0xB8DFEC", VA = "0xB8DFEC")]
	private void updateFindButton()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0xB8E134", Offset = "0xB8E134", VA = "0xB8E134")]
	private void EnableFindButton(bool enable)
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0xB8E158", Offset = "0xB8E158", VA = "0xB8E158")]
	public void onFindClicked()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0xB8E224", Offset = "0xB8E224", VA = "0xB8E224")]
	public void startRanked(CoModes coModes)
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0xB8E2E8", Offset = "0xB8E2E8", VA = "0xB8E2E8")]
	public MultiplayerFindUI()
	{
	}
}
[Token(Token = "0x20003A9")]
public class MultiplayerMenuUI : Area
{
	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitions findNewIndicator;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions inviteNewIndicator;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerMenuUI inst;

	[Token(Token = "0x1700038C")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600148E")]
		[Address(RVA = "0xB8E2F0", Offset = "0xB8E2F0", VA = "0xB8E2F0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038D")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600148F")]
		[Address(RVA = "0xB8E2F8", Offset = "0xB8E2F8", VA = "0xB8E2F8", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038E")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001490")]
		[Address(RVA = "0xB8E300", Offset = "0xB8E300", VA = "0xB8E300", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700038F")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB8E308", Offset = "0xB8E308", VA = "0xB8E308", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000390")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB8E310", Offset = "0xB8E310", VA = "0xB8E310", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0xB8E318", Offset = "0xB8E318", VA = "0xB8E318", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0xB8E37C", Offset = "0xB8E37C", VA = "0xB8E37C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0xB8E3E4", Offset = "0xB8E3E4", VA = "0xB8E3E4", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0xB8E474", Offset = "0xB8E474", VA = "0xB8E474")]
	public void onFindClicked()
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0xB8E4E8", Offset = "0xB8E4E8", VA = "0xB8E4E8")]
	public void onFriendlyClicked()
	{
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0xB8E55C", Offset = "0xB8E55C", VA = "0xB8E55C")]
	public MultiplayerMenuUI()
	{
	}
}
[Token(Token = "0x20003AA")]
public class MultiplayerMiniProfiles : MonoBehaviour
{
	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIItemTransitionsGroup _transitionsGroup;

	[Token(Token = "0x6001499")]
	[Address(RVA = "0xB8E564", Offset = "0xB8E564", VA = "0xB8E564")]
	private void Awake()
	{
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0xB8E5BC", Offset = "0xB8E5BC", VA = "0xB8E5BC")]
	public void show()
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0xB8E5DC", Offset = "0xB8E5DC", VA = "0xB8E5DC")]
	public void hide()
	{
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0xB8E5FC", Offset = "0xB8E5FC", VA = "0xB8E5FC")]
	public MultiplayerMiniProfiles()
	{
	}
}
[Token(Token = "0x20003AB")]
public class MultiplayerScoreboardUI : Area
{
	[Serializable]
	[Token(Token = "0x20003AC")]
	public class General
	{
		[Serializable]
		[Token(Token = "0x20003AD")]
		public class CheckersBandMaterials
		{
			[Token(Token = "0x4001636")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material neutral;

			[Token(Token = "0x4001637")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material player1Won;

			[Token(Token = "0x4001638")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material player2Won;

			[Token(Token = "0x60014A8")]
			[Address(RVA = "0xB8F244", Offset = "0xB8F244", VA = "0xB8F244")]
			public CheckersBandMaterials()
			{
			}
		}

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro setName;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image setImage;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer checkersBand;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CheckersBandMaterials checkersBandMaterials;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MultiplayerMiniProfiles miniProfiles;

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xB8F23C", Offset = "0xB8F23C", VA = "0xB8F23C")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AE")]
	public class WinIcons
	{
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite endOfContent;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite timesUp;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite knockOut;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite TKO;

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xB8F24C", Offset = "0xB8F24C", VA = "0xB8F24C")]
		public WinIcons()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003AF")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x20003B0")]
		public class Round
		{
			[Token(Token = "0x4001640")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject win;

			[Token(Token = "0x4001641")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image icon;

			[Token(Token = "0x4001642")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIItemTransitions chromatic;

			[Token(Token = "0x60014AB")]
			[Address(RVA = "0xB8F25C", Offset = "0xB8F25C", VA = "0xB8F25C")]
			public Round()
			{
			}
		}

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro name;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro[] numRoundsWonTexts;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Round[] rounds;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xB8F254", Offset = "0xB8F254", VA = "0xB8F254")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public General general;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WinIcons winIcons;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerObjects player1;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerObjects player2;

	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _player1WonLastRound;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool _player2WonLastRound;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _player1Name;

	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _player2Name;

	[Token(Token = "0x17000391")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB8E604", Offset = "0xB8E604", VA = "0xB8E604", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000392")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB8E60C", Offset = "0xB8E60C", VA = "0xB8E60C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000393")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB8E614", Offset = "0xB8E614", VA = "0xB8E614", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000394")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB8E61C", Offset = "0xB8E61C", VA = "0xB8E61C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000395")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xB8E624", Offset = "0xB8E624", VA = "0xB8E624", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0xB8E62C", Offset = "0xB8E62C", VA = "0xB8E62C")]
	private void Update()
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0xB8E7D0", Offset = "0xB8E7D0", VA = "0xB8E7D0", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0xB8EE4C", Offset = "0xB8EE4C", VA = "0xB8EE4C")]
	private void showWinIcon(PlayerID playerID, int roundIndex)
	{
	}

	[Token(Token = "0x60014A5")]
	[Address(RVA = "0xB8F064", Offset = "0xB8F064", VA = "0xB8F064", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x60014A6")]
	[Address(RVA = "0xB8F234", Offset = "0xB8F234", VA = "0xB8F234")]
	public MultiplayerScoreboardUI()
	{
	}
}
[Token(Token = "0x20003B1")]
public class MultiplayerUI : Area
{
	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitionsGroup modesTransitionsGroup;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerUI inst;

	[Token(Token = "0x17000396")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xB8F264", Offset = "0xB8F264", VA = "0xB8F264", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000397")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xB8F26C", Offset = "0xB8F26C", VA = "0xB8F26C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000398")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xB8F274", Offset = "0xB8F274", VA = "0xB8F274", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000399")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB8F27C", Offset = "0xB8F27C", VA = "0xB8F27C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700039A")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xB8F284", Offset = "0xB8F284", VA = "0xB8F284", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0xB8F28C", Offset = "0xB8F28C", VA = "0xB8F28C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0xB8F2F0", Offset = "0xB8F2F0", VA = "0xB8F2F0", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0xB8F490", Offset = "0xB8F490", VA = "0xB8F490")]
	private void OnServerOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0xB8F57C", Offset = "0xB8F57C", VA = "0xB8F57C", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0xB8F608", Offset = "0xB8F608", VA = "0xB8F608", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0xB8F740", Offset = "0xB8F740", VA = "0xB8F740")]
	public void onVersusLeaderboardClicked()
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0xB8F884", Offset = "0xB8F884", VA = "0xB8F884")]
	public void onCoOpLeaderboardClicked()
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0xB8F9C4", Offset = "0xB8F9C4", VA = "0xB8F9C4")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0xB8F9E4", Offset = "0xB8F9E4", VA = "0xB8F9E4")]
	public MultiplayerUI()
	{
	}
}
[Token(Token = "0x20003B2")]
public class InfectedMC : MusicChallenge
{
	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float speedUpStep;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float[] speedUpTimes;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fasterSFXVolumeOverride;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float[] powerupTimes;

	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float snowStart;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float snowEnd;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isSnowing;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ColorKey[] colorKeys;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float colorShiftSpeed;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int _lastPowerupIndex;

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0xB8F9EC", Offset = "0xB8F9EC", VA = "0xB8F9EC", Slot = "6")]
	public override float GetTimeScale(out float speedLevelProgress)
	{
		return default(float);
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0xB8FAA8", Offset = "0xB8FAA8", VA = "0xB8FAA8", Slot = "7")]
	public override void ManipulateArenaColors(ref Color reflectionColor, ref Color lightColor)
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0xB8FC48", Offset = "0xB8FC48", VA = "0xB8FC48")]
	private void CheckForPowerups()
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0xB8FD04", Offset = "0xB8FD04", VA = "0xB8FD04", Slot = "9")]
	protected override void Cleanup()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0xB8FDA4", Offset = "0xB8FDA4", VA = "0xB8FDA4", Slot = "4")]
	protected override void InternalUpdate(float dt)
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0xB8FED4", Offset = "0xB8FED4", VA = "0xB8FED4")]
	public InfectedMC()
	{
	}
}
[Token(Token = "0x20003B3")]
public abstract class MusicChallenge : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003B4")]
	public struct ColorKey
	{
		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[ColorUsage(true, true)]
		public Color color;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;
	}

	[Serializable]
	[Token(Token = "0x20003B5")]
	public class Key
	{
		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Reflections")]
		public bool changeColor;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[ColorUsage(true, true)]
		public Color color;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[ColorUsage(true, true)]
		public Color color2;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float colorFrequency;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float colorSmoothTime;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Powerups")]
		public bool spawnPowerup;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public PowerupType powerup;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Speedup")]
		public bool changeSpeed;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float speed;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Special")]
		public string special;

		[NonSerialized]
		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool consumed;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xB906D8", Offset = "0xB906D8", VA = "0xB906D8")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xB908E0", Offset = "0xB908E0", VA = "0xB908E0")]
		public Key()
		{
		}
	}

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicChallenge inst;

	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonthlyChallenge.Time time;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string setName;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Key[] keys;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected SmoothColor _color;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeScale;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _smoothTime;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float _length;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float _currentTime;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _isActive;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool _isCurrentChallenge;

	[Token(Token = "0x1700039B")]
	public static bool IsActive
	{
		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB8FF9C", Offset = "0xB8FF9C", VA = "0xB8FF9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0xB90044", Offset = "0xB90044", VA = "0xB90044", Slot = "4")]
	protected virtual void InternalUpdate(float dt)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0xB90048", Offset = "0xB90048", VA = "0xB90048", Slot = "5")]
	protected virtual void OnSpecial(string special)
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0xB9004C", Offset = "0xB9004C", VA = "0xB9004C", Slot = "6")]
	public virtual float GetTimeScale(out float speedLevelProgress)
	{
		return default(float);
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0xB90058", Offset = "0xB90058", VA = "0xB90058", Slot = "7")]
	public virtual void ManipulateArenaColors(ref Color reflectionColor, ref Color lightColor)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0xB900A8", Offset = "0xB900A8", VA = "0xB900A8", Slot = "8")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0xB8FDA0", Offset = "0xB8FDA0", VA = "0xB8FDA0", Slot = "9")]
	protected virtual void Cleanup()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0xB9017C", Offset = "0xB9017C", VA = "0xB9017C")]
	private void OnCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0xB902B0", Offset = "0xB902B0", VA = "0xB902B0")]
	private void UpdateKeys(float dt)
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0xB904C4", Offset = "0xB904C4", VA = "0xB904C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0xB9057C", Offset = "0xB9057C", VA = "0xB9057C", Slot = "10")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0xB8FEFC", Offset = "0xB8FEFC", VA = "0xB8FEFC")]
	protected MusicChallenge()
	{
	}
}
[Token(Token = "0x20003B6")]
public class ZomboyMC : MusicChallenge
{
	[Token(Token = "0x20003B7")]
	private struct SpeedUpKey
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int waveIndex;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float speed;
	}

	[Token(Token = "0x20003B8")]
	[CompilerGenerated]
	private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ZomboyMC <>4__this;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveSetFromCrate <set>5__2;

		[Token(Token = "0x1700039C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xB91830", Offset = "0xB91830", VA = "0xB91830", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xB91878", Offset = "0xB91878", VA = "0xB91878", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xB9134C", Offset = "0xB9134C", VA = "0xB9134C")]
		[DebuggerHidden]
		public <Start>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xB914EC", Offset = "0xB914EC", VA = "0xB914EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xB914F0", Offset = "0xB914F0", VA = "0xB914F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xB91838", Offset = "0xB91838", VA = "0xB91838", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SpeedUpKey> _speedKeys;

	[Token(Token = "0x400166A")]
	public const string FIRE_TRAIL_ID = "FRLN";

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _currentSpeedWaveIndex;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _currentSpeed;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _currentSpeedLevelProgress;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _fireTrailOn;

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0xB908F4", Offset = "0xB908F4", VA = "0xB908F4")]
	private void FillWithSnakes(List<HexTile> tiles)
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0xB90E58", Offset = "0xB90E58", VA = "0xB90E58")]
	private void ActivateSnakeMode()
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0xB90FE8", Offset = "0xB90FE8", VA = "0xB90FE8", Slot = "5")]
	protected override void OnSpecial(string special)
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0xB91050", Offset = "0xB91050", VA = "0xB91050", Slot = "7")]
	public override void ManipulateArenaColors(ref Color reflectionColor, ref Color lightColor)
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0xB91098", Offset = "0xB91098", VA = "0xB91098", Slot = "6")]
	public override float GetTimeScale(out float speedLevelProgress)
	{
		return default(float);
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0xB910A8", Offset = "0xB910A8", VA = "0xB910A8")]
	private void OnWaveStarted(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0xB91178", Offset = "0xB91178", VA = "0xB91178", Slot = "8")]
	protected override void Init()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0xB91234", Offset = "0xB91234", VA = "0xB91234", Slot = "9")]
	protected override void Cleanup()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0xB912D8", Offset = "0xB912D8", VA = "0xB912D8")]
	[IteratorStateMachine(typeof(<Start>d__14))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0xB91374", Offset = "0xB91374", VA = "0xB91374", Slot = "10")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0xB91460", Offset = "0xB91460", VA = "0xB91460")]
	public ZomboyMC()
	{
	}
}
[Token(Token = "0x20003B9")]
public class AudioRecorder : MonoBehaviour
{
	[Token(Token = "0x20003BA")]
	[CompilerGenerated]
	private sealed class <StartRecordingCo>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioRecorder <>4__this;

		[Token(Token = "0x1700039E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xB923F4", Offset = "0xB923F4", VA = "0xB923F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xB9243C", Offset = "0xB9243C", VA = "0xB9243C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xB919C4", Offset = "0xB919C4", VA = "0xB919C4")]
		[DebuggerHidden]
		public <StartRecordingCo>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xB91F6C", Offset = "0xB91F6C", VA = "0xB91F6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xB91F70", Offset = "0xB91F70", VA = "0xB91F70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xB923FC", Offset = "0xB923FC", VA = "0xB923FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001675")]
	private const int MIC_LENGTH_IN_SEC = 5;

	[Token(Token = "0x4001676")]
	private const int MIC_BUFFER_SIZE = 9600;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isRecording;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _recordingDeviceName;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float[] _micBufferFloat;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private short[] _micBufferShort;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _lastMicPos;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _readBufferSize;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _frequency;

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0xB91880", Offset = "0xB91880", VA = "0xB91880")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0xB91950", Offset = "0xB91950", VA = "0xB91950")]
	[IteratorStateMachine(typeof(<StartRecordingCo>d__11))]
	private IEnumerator StartRecordingCo()
	{
		return null;
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0xB919EC", Offset = "0xB919EC", VA = "0xB919EC")]
	public void StopRecording()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0xB91A28", Offset = "0xB91A28", VA = "0xB91A28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0xB91DE8", Offset = "0xB91DE8", VA = "0xB91DE8")]
	public bool GetPCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0xB91ECC", Offset = "0xB91ECC", VA = "0xB91ECC")]
	public AudioRecorder()
	{
	}
}
[Token(Token = "0x20003BB")]
[DisallowMultipleComponent]
public class EmptyNativePlatform : NativePlatform
{
	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<RnxPlatform.User> rnxFriendsList;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x170003A0")]
	public static bool Initialized
	{
		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xB92444", Offset = "0xB92444", VA = "0xB92444")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A1")]
	public override bool isInitialized
	{
		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xB9244C", Offset = "0xB9244C", VA = "0xB9244C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0xB92454", Offset = "0xB92454", VA = "0xB92454", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0xB9245C", Offset = "0xB9245C", VA = "0xB9245C", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0xB92464", Offset = "0xB92464", VA = "0xB92464")]
	private void Awake()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0xB925E0", Offset = "0xB925E0", VA = "0xB925E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0xB9264C", Offset = "0xB9264C", VA = "0xB9264C", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x60014F2")]
	[Address(RVA = "0xB92650", Offset = "0xB92650", VA = "0xB92650", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User rnxUser)
	{
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0xB92654", Offset = "0xB92654", VA = "0xB92654")]
	private int GetFriendsCount()
	{
		return default(int);
	}

	[Token(Token = "0x60014F4")]
	[Address(RVA = "0xB9265C", Offset = "0xB9265C", VA = "0xB9265C", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0xB92660", Offset = "0xB92660", VA = "0xB92660", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0xB92678", Offset = "0xB92678", VA = "0xB92678", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0xB92690", Offset = "0xB92690", VA = "0xB92690", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0xB926A8", Offset = "0xB926A8", VA = "0xB926A8", Slot = "19")]
	public override bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x60014F9")]
	[Address(RVA = "0xB926B0", Offset = "0xB926B0", VA = "0xB926B0", Slot = "21")]
	public override void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x60014FA")]
	[Address(RVA = "0xB926B4", Offset = "0xB926B4", VA = "0xB926B4", Slot = "23")]
	public override void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0xB926B8", Offset = "0xB926B8", VA = "0xB926B8", Slot = "24")]
	public override void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0xB926BC", Offset = "0xB926BC", VA = "0xB926BC", Slot = "25")]
	public override bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0xB926C8", Offset = "0xB926C8", VA = "0xB926C8", Slot = "26")]
	public override bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0xB92730", Offset = "0xB92730", VA = "0xB92730")]
	public EmptyNativePlatform()
	{
	}
}
[Token(Token = "0x20003BC")]
public class GSXRNativePlatform : NativePlatform
{
	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _initialized;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<RnxPlatform.User> _friendsList;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x170003A2")]
	public override bool isInitialized
	{
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xB9287C", Offset = "0xB9287C", VA = "0xB9287C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0xB92884", Offset = "0xB92884", VA = "0xB92884")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0xB929DC", Offset = "0xB929DC", VA = "0xB929DC", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0xB929E0", Offset = "0xB929E0", VA = "0xB929E0", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0xB929E4", Offset = "0xB929E4", VA = "0xB929E4", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0xB929EC", Offset = "0xB929EC", VA = "0xB929EC", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0xB92A9C", Offset = "0xB92A9C", VA = "0xB92A9C", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0xB92B8C", Offset = "0xB92B8C", VA = "0xB92B8C", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x6001507")]
	[Address(RVA = "0xB92BA4", Offset = "0xB92BA4", VA = "0xB92BA4", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x6001508")]
	[Address(RVA = "0xB92BBC", Offset = "0xB92BBC", VA = "0xB92BBC", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0xB92BD4", Offset = "0xB92BD4", VA = "0xB92BD4")]
	public GSXRNativePlatform()
	{
	}
}
[Token(Token = "0x20003BE")]
[DisallowMultipleComponent]
public class iQIYINativePlatform : NativePlatform
{
	[Token(Token = "0x4001688")]
	private const string APP_ID = "68972289";

	[Token(Token = "0x4001689")]
	private const string DEVELOPER_ID = "5973121";

	[Token(Token = "0x400168A")]
	private const string AUTHORIZATION_SECRET = "29b9f118978ecb69fada718ed77cae8a";

	[Token(Token = "0x400168B")]
	private const string SIGN_KEY = "a284caeffcc836323d60d80b5ac2c9c9";

	[Token(Token = "0x400168C")]
	private const string APP_SECRET = "f99418eb081af1a05a510696a3464c29";

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _isInitialized;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<RnxPlatform.User> _friends;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x170003A3")]
	public override bool isInitialized
	{
		[Token(Token = "0x600150C")]
		[Address(RVA = "0xB92C80", Offset = "0xB92C80", VA = "0xB92C80", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0xB92C88", Offset = "0xB92C88", VA = "0xB92C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0xB92CF4", Offset = "0xB92CF4", VA = "0xB92CF4")]
	private void Start()
	{
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0xB92CF8", Offset = "0xB92CF8", VA = "0xB92CF8")]
	private void Init()
	{
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0xB92E60", Offset = "0xB92E60", VA = "0xB92E60", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0xB92E64", Offset = "0xB92E64", VA = "0xB92E64", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0xB92E68", Offset = "0xB92E68", VA = "0xB92E68", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0xB92E70", Offset = "0xB92E70", VA = "0xB92E70", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0xB92E74", Offset = "0xB92E74", VA = "0xB92E74", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0xB92E7C", Offset = "0xB92E7C", VA = "0xB92E7C", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0xB92E94", Offset = "0xB92E94", VA = "0xB92E94", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0xB92EAC", Offset = "0xB92EAC", VA = "0xB92EAC", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0xB92EC4", Offset = "0xB92EC4", VA = "0xB92EC4")]
	public iQIYINativePlatform()
	{
	}
}
[Token(Token = "0x20003BF")]
public abstract class NativePlatform : MonoBehaviour
{
	[Token(Token = "0x20003C0")]
	public class NativeUser
	{
		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Platform platform;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nativeID;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string name;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D avatarImage;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Sprite _sprite;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D _spriteTex;

		[Token(Token = "0x170003AB")]
		public Sprite sprite
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xB9520C", Offset = "0xB9520C", VA = "0xB9520C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xB925D8", Offset = "0xB925D8", VA = "0xB925D8")]
		public NativeUser()
		{
		}
	}

	[Token(Token = "0x20003C1")]
	public class RNXUserSorter : IComparer<RnxPlatform.User>
	{
		[Token(Token = "0x6001551")]
		[Address(RVA = "0xB95374", Offset = "0xB95374", VA = "0xB95374", Slot = "4")]
		public int Compare(RnxPlatform.User a, RnxPlatform.User b)
		{
			return default(int);
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xB94E30", Offset = "0xB94E30", VA = "0xB94E30")]
		public RNXUserSorter()
		{
		}
	}

	[Token(Token = "0x20003C2")]
	public delegate void IMPORT_AWS_CHINA__OnResponseT(bool success, RnxPlatform.User rnxUser);

	[Token(Token = "0x20003C3")]
	[CompilerGenerated]
	private sealed class <DownloadImageCo>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string avatarUrl;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<(bool success, Texture2D avatarTex)> done;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D <avatarImage>5__2;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <avatarRequest>5__3;

		[Token(Token = "0x170003AC")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xB95D04", Offset = "0xB95D04", VA = "0xB95D04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0xB95D4C", Offset = "0xB95D4C", VA = "0xB95D4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xB93A18", Offset = "0xB93A18", VA = "0xB93A18")]
		[DebuggerHidden]
		public <DownloadImageCo>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xB955C0", Offset = "0xB955C0", VA = "0xB955C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xB955DC", Offset = "0xB955DC", VA = "0xB955DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xB95C54", Offset = "0xB95C54", VA = "0xB95C54")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xB95D0C", Offset = "0xB95D0C", VA = "0xB95D0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001690")]
	public const uint desiredSampleRate = 48000u;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NativePlatform inst;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static NativePlatform lastInst;

	[Token(Token = "0x4001693")]
	private const float retryDelay = 3f;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Status _currentGameState;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected NativeUser _myNativeUser;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RnxPlatform.User me;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RNXUserSorter _userSorter;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Dictionary<string, ItemsDefs.ItemDefinition> purchasedItems;

	[Token(Token = "0x400169B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int _numSignInAttempts;

	[Token(Token = "0x400169C")]
	private const int maxSignInAttempts = 3;

	[Token(Token = "0x170003A4")]
	public static bool initialized
	{
		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB92F48", Offset = "0xB92F48", VA = "0xB92F48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A5")]
	public abstract bool isInitialized
	{
		[Token(Token = "0x600151A")]
		get;
	}

	[Token(Token = "0x170003A6")]
	public static bool IsSignedIn
	{
		[Token(Token = "0x600151B")]
		[Address(RVA = "0xB92FF4", Offset = "0xB92FF4", VA = "0xB92FF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003A7")]
	public Status gameState
	{
		[Token(Token = "0x600151C")]
		[Address(RVA = "0xB93058", Offset = "0xB93058", VA = "0xB93058")]
		set
		{
		}
	}

	[Token(Token = "0x170003A8")]
	public NativeUser nativeUser
	{
		[Token(Token = "0x600151F")]
		[Address(RVA = "0xB93248", Offset = "0xB93248", VA = "0xB93248")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003A9")]
	public virtual bool SupportsIAP
	{
		[Token(Token = "0x6001540")]
		[Address(RVA = "0xB93E0C", Offset = "0xB93E0C", VA = "0xB93E0C", Slot = "31")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003AA")]
	public bool IsPurchasedItemsReady
	{
		[Token(Token = "0x6001541")]
		[Address(RVA = "0xB93E14", Offset = "0xB93E14", VA = "0xB93E14")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001542")]
		[Address(RVA = "0xB93E1C", Offset = "0xB93E1C", VA = "0xB93E1C")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event Action friendsInfoUpdated
	{
		[Token(Token = "0x600152A")]
		[Address(RVA = "0xB93A48", Offset = "0xB93A48", VA = "0xB93A48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600152B")]
		[Address(RVA = "0xB93AE4", Offset = "0xB93AE4", VA = "0xB93AE4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600151D")]
	protected abstract void SetCurrentGameState(Status gameState);

	[Token(Token = "0x600151E")]
	[Address(RVA = "0xB93104", Offset = "0xB93104", VA = "0xB93104")]
	public static LocalizedString statusTerm(Status status)
	{
		return default(LocalizedString);
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0xB93250", Offset = "0xB93250", VA = "0xB93250", Slot = "6")]
	protected virtual void SignIn()
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0xB93600", Offset = "0xB93600", VA = "0xB93600", Slot = "7")]
	protected virtual void onSignInResponse(bool success, RnxPlatform.User rnxUser)
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0xB93724", Offset = "0xB93724", VA = "0xB93724", Slot = "8")]
	protected virtual void onSignInSuccess()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0xB9350C", Offset = "0xB9350C", VA = "0xB9350C")]
	private void SetCloudDiagnosticsMetaData_BeforeSignIn()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0xB9378C", Offset = "0xB9378C", VA = "0xB9378C")]
	private void SetCloudDiagnosticsMetaData_AfterSignIn()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0xB93820", Offset = "0xB93820", VA = "0xB93820", Slot = "9")]
	protected virtual void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0xB93910", Offset = "0xB93910", VA = "0xB93910")]
	protected static void DownloadImage(string imgUrl, [Optional] Action<(bool success, Texture2D avatarTex)> done)
	{
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0xB93988", Offset = "0xB93988", VA = "0xB93988")]
	[IteratorStateMachine(typeof(<DownloadImageCo>d__27))]
	protected static IEnumerator<float> DownloadImageCo(string avatarUrl, [Optional] Action<(bool success, Texture2D avatarTex)> done)
	{
		return null;
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0xB93A40", Offset = "0xB93A40", VA = "0xB93A40", Slot = "10")]
	public virtual bool SupportsFriends()
	{
		return default(bool);
	}

	[Token(Token = "0x6001529")]
	public abstract void UpdateFriendsInfo();

	[Token(Token = "0x600152C")]
	[Address(RVA = "0xB93B80", Offset = "0xB93B80", VA = "0xB93B80")]
	protected void onFriendsInfoUpdated()
	{
	}

	[Token(Token = "0x600152D")]
	public abstract List<RnxPlatform.User> GetFriendsList();

	[Token(Token = "0x600152E")]
	public abstract void AddFriendRequest(RnxPlatform.User user);

	[Token(Token = "0x600152F")]
	public abstract RnxPlatform.User GetFriendInfo(string friendId);

	[Token(Token = "0x6001530")]
	[Address(RVA = "0xB93B9C", Offset = "0xB93B9C", VA = "0xB93B9C", Slot = "15")]
	public virtual void OpenStorePage()
	{
	}

	[Token(Token = "0x6001531")]
	public abstract void StartVoiceRecording();

	[Token(Token = "0x6001532")]
	public abstract void StopVoiceRecording();

	[Token(Token = "0x6001533")]
	public abstract bool GetVoicePCM(byte[] buffer, out uint bytesWritten);

	[Token(Token = "0x6001534")]
	[Address(RVA = "0xB93C04", Offset = "0xB93C04", VA = "0xB93C04", Slot = "19")]
	public virtual bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0xB93C0C", Offset = "0xB93C0C", VA = "0xB93C0C", Slot = "20")]
	public virtual bool RequiresP2PHandshake()
	{
		return default(bool);
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0xB93C14", Offset = "0xB93C14", VA = "0xB93C14", Slot = "21")]
	public virtual void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0xB93C64", Offset = "0xB93C64", VA = "0xB93C64", Slot = "22")]
	public virtual bool IsP2PConnected(string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0xB93C6C", Offset = "0xB93C6C", VA = "0xB93C6C", Slot = "23")]
	public virtual void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0xB93CBC", Offset = "0xB93CBC", VA = "0xB93CBC", Slot = "24")]
	public virtual void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0xB93D0C", Offset = "0xB93D0C", VA = "0xB93D0C", Slot = "25")]
	public virtual bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0xB93D5C", Offset = "0xB93D5C", VA = "0xB93D5C", Slot = "26")]
	public virtual bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0xB93DAC", Offset = "0xB93DAC", VA = "0xB93DAC", Slot = "27")]
	public virtual void ReportGameData()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0xB93DB0", Offset = "0xB93DB0", VA = "0xB93DB0", Slot = "28")]
	public virtual bool SupportsAchievements()
	{
		return default(bool);
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0xB93DB8", Offset = "0xB93DB8", VA = "0xB93DB8", Slot = "29")]
	public virtual void UnlockAchievement(string achievementId, Action<string> callback)
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0xB93E08", Offset = "0xB93E08", VA = "0xB93E08", Slot = "30")]
	public virtual void PlaySoundEffectOnHapticSource(AudioManager.SoundEffect sfx, SpatializedAudio spatializedAudio)
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0xB93E28", Offset = "0xB93E28", VA = "0xB93E28")]
	public void InitializeInAppPurchases()
	{
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0xB93F9C", Offset = "0xB93F9C", VA = "0xB93F9C")]
	public bool IsItemPurchased(in string id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0xB94030", Offset = "0xB94030", VA = "0xB94030")]
	public void PurchaseAndEnsure(string itemId, Action onSuccess, Action<string> onError)
	{
	}

	[Token(Token = "0x6001546")]
	[Address(RVA = "0xB942EC", Offset = "0xB942EC", VA = "0xB942EC")]
	public bool ValidatePurchasableItemStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0xB945B0", Offset = "0xB945B0", VA = "0xB945B0", Slot = "32")]
	protected virtual void PurchaseItem(string itemId, Action onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0xB94678", Offset = "0xB94678", VA = "0xB94678", Slot = "33")]
	protected virtual void FetchPurchasedItems(Action<ItemsDefs.ItemDefinition[]> onComplete, Action<string> onError)
	{
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0xB94740", Offset = "0xB94740", VA = "0xB94740")]
	public static ulong GetHash(string str)
	{
		return default(ulong);
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0xB94934", Offset = "0xB94934", VA = "0xB94934")]
	public void IMPORT_AWS_CHINA__ReSignIn(IMPORT_AWS_CHINA__OnResponseT onResponse)
	{
	}

	[Token(Token = "0x600154B")]
	[Address(RVA = "0xB94938", Offset = "0xB94938", VA = "0xB94938")]
	private void IMPORT_AWS_CHINA__ReSignIn_Actually(IMPORT_AWS_CHINA__OnResponseT onResponse)
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0xB927B8", Offset = "0xB927B8", VA = "0xB927B8")]
	protected NativePlatform()
	{
	}
}
[Token(Token = "0x20003C7")]
public class NativePlatformInitializer : MonoBehaviour
{
	[Token(Token = "0x6001567")]
	[Address(RVA = "0xB961E8", Offset = "0xB961E8", VA = "0xB961E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0xB962A0", Offset = "0xB962A0", VA = "0xB962A0")]
	public NativePlatformInitializer()
	{
	}
}
[Token(Token = "0x20003C8")]
public enum NativePlatformType
{
	[Token(Token = "0x40016B3")]
	None,
	[Token(Token = "0x40016B4")]
	Steam,
	[Token(Token = "0x40016B5")]
	OculusHome,
	[Token(Token = "0x40016B6")]
	Viveport,
	[Token(Token = "0x40016B7")]
	Pico,
	[Token(Token = "0x40016B8")]
	NetVios,
	[Token(Token = "0x40016B9")]
	PlayStation,
	[Token(Token = "0x40016BA")]
	iQIYI,
	[Token(Token = "0x40016BB")]
	GSXR
}
[Token(Token = "0x20003C9")]
[DisallowMultipleComponent]
public class NetViosNativePlatform : NativePlatform
{
	[Token(Token = "0x20003CA")]
	private delegate void NetViosSDK_OnInitCompleteFP(int code, string sdkDataString);

	[Token(Token = "0x20003CB")]
	private delegate void NetViosSDK_OnDataReportCompleteFP(int code, string respData);

	[Serializable]
	[Token(Token = "0x20003CC")]
	private struct SDKData
	{
		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string appid;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string udid;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sdk_version;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string app_channel;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string openid;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string unionid;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string merchant_account;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string extra_data;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string platform_version;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string nickname;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string avatar;
	}

	[Token(Token = "0x20003CD")]
	private class InitResult
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int code;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string sdkDataString;

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xB96748", Offset = "0xB96748", VA = "0xB96748")]
		public InitResult()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003CE")]
	public struct GameReportData
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mode;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int bestScore;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int numStars;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float versusRating;

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xB96E08", Offset = "0xB96E08", VA = "0xB96E08")]
		public GameReportData(string mode)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003CF")]
	private struct GameDataReportResponse
	{
		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int code;
	}

	[Token(Token = "0x20003D0")]
	[CompilerGenerated]
	private sealed class <InitCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetViosNativePlatform <>4__this;

		[Token(Token = "0x170003AF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0xB97C58", Offset = "0xB97C58", VA = "0xB97C58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0xB97CA0", Offset = "0xB97CA0", VA = "0xB97CA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xB96750", Offset = "0xB96750", VA = "0xB96750")]
		[DebuggerHidden]
		public <InitCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xB974D0", Offset = "0xB974D0", VA = "0xB974D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xB974D4", Offset = "0xB974D4", VA = "0xB974D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xB97C60", Offset = "0xB97C60", VA = "0xB97C60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D1")]
	[CompilerGenerated]
	private sealed class <DownloadAvatarImage>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetViosNativePlatform <>4__this;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string avatarUrl;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <avatarRequest>5__2;

		[Token(Token = "0x170003B1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0xB98248", Offset = "0xB98248", VA = "0xB98248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0xB98290", Offset = "0xB98290", VA = "0xB98290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xB96948", Offset = "0xB96948", VA = "0xB96948")]
		[DebuggerHidden]
		public <DownloadAvatarImage>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xB97CFC", Offset = "0xB97CFC", VA = "0xB97CFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xB97D18", Offset = "0xB97D18", VA = "0xB97D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xB98198", Offset = "0xB98198", VA = "0xB98198")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xB98250", Offset = "0xB98250", VA = "0xB98250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D3")]
	[CompilerGenerated]
	private sealed class <SendCoOpReport>d__48 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public NetViosNativePlatform <>4__this;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LeaderboardManager.LeaderboardContainer <lb>5__2;

		[Token(Token = "0x170003B3")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0xB98670", Offset = "0xB98670", VA = "0xB98670", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0xB986B8", Offset = "0xB986B8", VA = "0xB986B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xB97270", Offset = "0xB97270", VA = "0xB97270")]
		[DebuggerHidden]
		public <SendCoOpReport>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xB984B4", Offset = "0xB984B4", VA = "0xB984B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xB984B8", Offset = "0xB984B8", VA = "0xB984B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xB98678", Offset = "0xB98678", VA = "0xB98678", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016BC")]
	private const int CODE_OK = 0;

	[Token(Token = "0x40016BD")]
	private const int CODE_PLAT_NOT_FOUND = 1;

	[Token(Token = "0x40016BE")]
	private const int CODE_ANOTHER_GAME_PLAYING = 2;

	[Token(Token = "0x40016BF")]
	private const int CODE_NOT_LAUNCHED_FROM_PLAT = 3;

	[Token(Token = "0x40016C0")]
	private const int CODE_DONT_REPEAT_INITIALIZATION = 4;

	[Token(Token = "0x40016C1")]
	private const int CODE_CONNECT_PLATFORM_FAILED = 10;

	[Token(Token = "0x40016C2")]
	private const int CODE_UNKNOWN = int.MaxValue;

	[Token(Token = "0x40016C3")]
	private const string APP_ID = "74a0132606e64bdd";

	[Token(Token = "0x40016C4")]
	private const string APP_SECRET = "69ad18ae9b6e4cfb90d2d7f859f1ed49";

	[Token(Token = "0x40016C5")]
	private const string GAME_DATA_REPORT_APP = "racketnx";

	[Token(Token = "0x40016C6")]
	private const string GAME_DATA_REPORT_APP_KEY = "e46905222f21d505";

	[Token(Token = "0x40016C7")]
	private const string GAME_DATA_REPORT_API_SECRET = "5dc90935bc464f4c868f943635bb95af";

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _initialized;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static InitResult _initResult;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SDKData _sdkData;

	[Token(Token = "0x170003AE")]
	public override bool isInitialized
	{
		[Token(Token = "0x600156D")]
		[Address(RVA = "0xB96538", Offset = "0xB96538", VA = "0xB96538", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[PreserveSig]
	[Token(Token = "0x6001569")]
	[Address(RVA = "0xB962A8", Offset = "0xB962A8", VA = "0xB962A8")]
	private static extern void NetViosSDK_Init(string appId, string appKey, NetViosSDK_OnInitCompleteFP onInitComplete);

	[PreserveSig]
	[Token(Token = "0x600156A")]
	[Address(RVA = "0xB9636C", Offset = "0xB9636C", VA = "0xB9636C")]
	private static extern void NetViosSDK_Start();

	[PreserveSig]
	[Token(Token = "0x600156B")]
	[Address(RVA = "0xB963D0", Offset = "0xB963D0", VA = "0xB963D0")]
	private static extern void NetViosSDK_Close();

	[PreserveSig]
	[Token(Token = "0x600156C")]
	[Address(RVA = "0xB96434", Offset = "0xB96434", VA = "0xB96434")]
	private static extern void NetViosSDK_ReportGameData(string app, string appKey, string apiSecret, string gameData, NetViosSDK_OnDataReportCompleteFP onDataReportComplete);

	[Token(Token = "0x600156E")]
	[Address(RVA = "0xB96540", Offset = "0xB96540", VA = "0xB96540")]
	private void Awake()
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0xB966A0", Offset = "0xB966A0", VA = "0xB966A0")]
	private static void onInitComplete(int code, string sdkDataString)
	{
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0xB9662C", Offset = "0xB9662C", VA = "0xB9662C")]
	[IteratorStateMachine(typeof(<InitCo>d__28))]
	private IEnumerator<float> InitCo()
	{
		return null;
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0xB96778", Offset = "0xB96778", VA = "0xB96778")]
	private void InitAnonymousPlayer()
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0xB9682C", Offset = "0xB9682C", VA = "0xB9682C")]
	private void InitWeChatPlayer()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0xB968B8", Offset = "0xB968B8", VA = "0xB968B8")]
	[IteratorStateMachine(typeof(<DownloadAvatarImage>d__31))]
	private IEnumerator<float> DownloadAvatarImage(string avatarUrl)
	{
		return null;
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0xB96970", Offset = "0xB96970", VA = "0xB96970", Slot = "8")]
	protected override void onSignInSuccess()
	{
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0xB96A98", Offset = "0xB96A98", VA = "0xB96A98", Slot = "9")]
	protected override void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0xB96AA8", Offset = "0xB96AA8", VA = "0xB96AA8", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0xB96AAC", Offset = "0xB96AAC", VA = "0xB96AAC", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0xB96AB0", Offset = "0xB96AB0", VA = "0xB96AB0", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0xB96B20", Offset = "0xB96B20", VA = "0xB96B20", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0xB96B24", Offset = "0xB96B24", VA = "0xB96B24", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0xB96B2C", Offset = "0xB96B2C", VA = "0xB96B2C", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0xB96B44", Offset = "0xB96B44", VA = "0xB96B44", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0xB96B5C", Offset = "0xB96B5C", VA = "0xB96B5C", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0xB96B74", Offset = "0xB96B74", VA = "0xB96B74", Slot = "27")]
	public override void ReportGameData()
	{
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0xB96E30", Offset = "0xB96E30", VA = "0xB96E30")]
	private void SendReport(GameReportData report)
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0xB970C4", Offset = "0xB970C4", VA = "0xB970C4")]
	private void onVersusMatchConcluded()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0xB97194", Offset = "0xB97194", VA = "0xB97194")]
	private void onCoOpMatchConcluded()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0xB971FC", Offset = "0xB971FC", VA = "0xB971FC")]
	[IteratorStateMachine(typeof(<SendCoOpReport>d__48))]
	private IEnumerator<float> SendCoOpReport()
	{
		return null;
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0xB97298", Offset = "0xB97298", VA = "0xB97298")]
	public NetViosNativePlatform()
	{
	}
}
[Token(Token = "0x20003D4")]
[DisallowMultipleComponent]
public class PicoNativePlatform : NativePlatform
{
	[Token(Token = "0x20003D7")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Message<PlatformInitializeResult> initMsg;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Message<Pico.Platform.Models.User> msg;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PicoNativePlatform <>4__this;

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xB9B130", Offset = "0xB9B130", VA = "0xB9B130")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xB9B138", Offset = "0xB9B138", VA = "0xB9B138")]
		internal void <InitCo>b__0(Message<PlatformInitializeResult> m)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xB9B140", Offset = "0xB9B140", VA = "0xB9B140")]
		internal bool <InitCo>b__1()
		{
			return default(bool);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xB9B150", Offset = "0xB9B150", VA = "0xB9B150")]
		internal void <InitCo>b__2(Message<Pico.Platform.Models.User> m)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xB9B158", Offset = "0xB9B158", VA = "0xB9B158")]
		internal bool <InitCo>b__3()
		{
			return default(bool);
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xB9B168", Offset = "0xB9B168", VA = "0xB9B168")]
		internal void <InitCo>b__4(Texture2D t)
		{
		}
	}

	[Token(Token = "0x20003D8")]
	[CompilerGenerated]
	private sealed class <InitCo>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PicoNativePlatform <>4__this;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass12_0 <>8__1;

		[Token(Token = "0x170003B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xB9BA1C", Offset = "0xB9BA1C", VA = "0xB9BA1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xB9BA64", Offset = "0xB9BA64", VA = "0xB9BA64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xB98E00", Offset = "0xB98E00", VA = "0xB98E00")]
		[DebuggerHidden]
		public <InitCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xB9B250", Offset = "0xB9B250", VA = "0xB9B250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xB9B254", Offset = "0xB9B254", VA = "0xB9B254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xB9BA24", Offset = "0xB9BA24", VA = "0xB9BA24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D9")]
	[CompilerGenerated]
	private sealed class <DownloadAvatarUrlCo>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string avatarURL;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<Texture2D> onSuccess;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x170003BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xB9BEE4", Offset = "0xB9BEE4", VA = "0xB9BEE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60015D8")]
			[Address(RVA = "0xB9BF2C", Offset = "0xB9BF2C", VA = "0xB9BF2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xB9973C", Offset = "0xB9973C", VA = "0xB9973C")]
		[DebuggerHidden]
		public <DownloadAvatarUrlCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xB9BA6C", Offset = "0xB9BA6C", VA = "0xB9BA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xB9BA88", Offset = "0xB9BA88", VA = "0xB9BA88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xB9BE34", Offset = "0xB9BE34", VA = "0xB9BE34")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xB9BEEC", Offset = "0xB9BEEC", VA = "0xB9BEEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _isInitialized;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<RnxPlatform.User> _friends;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x40016EE")]
	private const string KEY_PICO_ID = "RNX_LAST_PICO_ID";

	[Token(Token = "0x40016EF")]
	private const string KEY_PICO_NAME = "RNX_LAST_PICO_NAME";

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _lastSourceId;

	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioManager.SoundEffect _lastPlayedSfx;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SpatializedAudio _lastSpatializedAudio;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly bool supportBroadBandMotor;

	[Token(Token = "0x40016F4")]
	private const PXR_Input.ChannelFlip NO_FLIP = PXR_Input.ChannelFlip.No;

	[Token(Token = "0x170003B5")]
	public override bool isInitialized
	{
		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xB98714", Offset = "0xB98714", VA = "0xB98714", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003B6")]
	private static string AvatarImagePath
	{
		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xB98E28", Offset = "0xB98E28", VA = "0xB98E28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003B7")]
	private static PXR_Input.VibrateController ActiveController
	{
		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xB99EF8", Offset = "0xB99EF8", VA = "0xB99EF8")]
		get
		{
			return default(PXR_Input.VibrateController);
		}
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0xB9871C", Offset = "0xB9871C", VA = "0xB9871C", Slot = "5")]
	protected override void SetCurrentGameState(Status status)
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0xB987AC", Offset = "0xB987AC", VA = "0xB987AC", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0xB98864", Offset = "0xB98864", VA = "0xB98864", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0xB98A18", Offset = "0xB98A18", VA = "0xB98A18", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0xB98A20", Offset = "0xB98A20", VA = "0xB98A20", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0xB98A38", Offset = "0xB98A38", VA = "0xB98A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0xB98A3C", Offset = "0xB98A3C", VA = "0xB98A3C")]
	private void Init()
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0xB98D8C", Offset = "0xB98D8C", VA = "0xB98D8C")]
	[IteratorStateMachine(typeof(<InitCo>d__12))]
	private IEnumerator InitCo()
	{
		return null;
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0xB98EA4", Offset = "0xB98EA4", VA = "0xB98EA4")]
	private void SaveUserDetailsInCache()
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0xB991AC", Offset = "0xB991AC", VA = "0xB991AC")]
	private void LoadUserDataFromCache()
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0xB996AC", Offset = "0xB996AC", VA = "0xB996AC")]
	[IteratorStateMachine(typeof(<DownloadAvatarUrlCo>d__19))]
	private IEnumerator DownloadAvatarUrlCo(string avatarURL, Action<Texture2D> onSuccess)
	{
		return null;
	}

	[Token(Token = "0x60015B0")]
	[Address(RVA = "0xB99764", Offset = "0xB99764", VA = "0xB99764", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0xB9977C", Offset = "0xB9977C", VA = "0xB9977C", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0xB99794", Offset = "0xB99794", VA = "0xB99794")]
	private Status RnxStatusFromPresence(UserPresenceStatus presenceStatus)
	{
		return default(Status);
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0xB997A0", Offset = "0xB997A0", VA = "0xB997A0", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0xB9984C", Offset = "0xB9984C", VA = "0xB9984C")]
	private void OnGotFriendsTranslated(bool success, Dictionary<string, string> pico2rnx)
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0xB99C90", Offset = "0xB99C90", VA = "0xB99C90")]
	private void OnFriendStatusUpdated(bool success, Dictionary<string, Status> rnxIdToStatus)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0xB99F58", Offset = "0xB99F58", VA = "0xB99F58")]
	private float AmpModifierOfSpatializedAudio(SpatializedAudio spatializedAudio)
	{
		return default(float);
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0xB9A0F8", Offset = "0xB9A0F8", VA = "0xB9A0F8", Slot = "30")]
	public override void PlaySoundEffectOnHapticSource(AudioManager.SoundEffect sfx, SpatializedAudio spatializedAudio)
	{
	}

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0xB9A2E4", Offset = "0xB9A2E4", VA = "0xB9A2E4")]
	private void VrPluginOnHandSwitched()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0xB9A3B0", Offset = "0xB9A3B0", VA = "0xB9A3B0")]
	public PicoNativePlatform()
	{
	}
}
[Token(Token = "0x20003DB")]
public class PicoRemoveDestroyIfNotPico3DSpatializer : MonoBehaviour
{
	[Token(Token = "0x60015DB")]
	[Address(RVA = "0xB9BF50", Offset = "0xB9BF50", VA = "0xB9BF50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0xB9C0A8", Offset = "0xB9C0A8", VA = "0xB9C0A8")]
	public PicoRemoveDestroyIfNotPico3DSpatializer()
	{
	}
}
[Token(Token = "0x20003DC")]
[DisallowMultipleComponent]
public class PSVRNativePlatform : NativePlatform
{
	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PSVRNativePlatform _inst;

	[Token(Token = "0x4001709")]
	private const int _PLAYER_ID = 0;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _initialized;

	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioRecorder _audioRecorder;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RnxPlatform.User> _rnxFriendsList;

	[Token(Token = "0x170003BC")]
	public override bool isInitialized
	{
		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xB9C0B0", Offset = "0xB9C0B0", VA = "0xB9C0B0", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0xB9C158", Offset = "0xB9C158", VA = "0xB9C158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0xB9C208", Offset = "0xB9C208", VA = "0xB9C208")]
	private void Start()
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0xB9C314", Offset = "0xB9C314", VA = "0xB9C314")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0xB9C318", Offset = "0xB9C318", VA = "0xB9C318", Slot = "11")]
	public override void UpdateFriendsInfo()
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0xB9C31C", Offset = "0xB9C31C", VA = "0xB9C31C", Slot = "12")]
	public override List<RnxPlatform.User> GetFriendsList()
	{
		return null;
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0xB9C324", Offset = "0xB9C324", VA = "0xB9C324", Slot = "13")]
	public override void AddFriendRequest(RnxPlatform.User user)
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0xB9C328", Offset = "0xB9C328", VA = "0xB9C328", Slot = "14")]
	public override RnxPlatform.User GetFriendInfo(string friendId)
	{
		return null;
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0xB9C330", Offset = "0xB9C330", VA = "0xB9C330", Slot = "5")]
	protected override void SetCurrentGameState(Status gameState)
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0xB9C334", Offset = "0xB9C334", VA = "0xB9C334", Slot = "16")]
	public override void StartVoiceRecording()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0xB9C34C", Offset = "0xB9C34C", VA = "0xB9C34C", Slot = "17")]
	public override void StopVoiceRecording()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0xB9C364", Offset = "0xB9C364", VA = "0xB9C364", Slot = "18")]
	public override bool GetVoicePCM(byte[] buffer, out uint bytesWritten)
	{
		return default(bool);
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0xB9C37C", Offset = "0xB9C37C", VA = "0xB9C37C", Slot = "19")]
	public override bool SupportsP2P()
	{
		return default(bool);
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0xB9C384", Offset = "0xB9C384", VA = "0xB9C384", Slot = "21")]
	public override void AcceptP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0xB9C388", Offset = "0xB9C388", VA = "0xB9C388", Slot = "23")]
	public override void CloseP2PSessionWithUser(string remoteNativeId)
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0xB9C38C", Offset = "0xB9C38C", VA = "0xB9C38C", Slot = "24")]
	public override void SendP2PPacket(string remoteNativeId, ReadOnlySpan<byte> buffer, PacketSendType sendType)
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0xB9C390", Offset = "0xB9C390", VA = "0xB9C390", Slot = "25")]
	public override bool IsP2PPacketAvailable(out uint size)
	{
		return default(bool);
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0xB9C39C", Offset = "0xB9C39C", VA = "0xB9C39C", Slot = "26")]
	public override bool ReadP2PPacket(byte[] data, uint size, out uint numBytesRead, out string remoteNativeId)
	{
		return default(bool);
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0xB9C404", Offset = "0xB9C404", VA = "0xB9C404")]
	public PSVRNativePlatform()
	{
	}
}
[Token(Token = "0x20003DD")]
public abstract class AnimatedSequence : MonoBehaviour
{
	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnimatedSequence current;

	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _abortWhenArenaShutsDown;

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool _isPlaying;

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isNice;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TimedValueLerp[] allTimedValueLerps;

	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected TimedEvent[] allTimedEvents;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float _timer;

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0xB9C48C", Offset = "0xB9C48C", VA = "0xB9C48C", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0xB9C878", Offset = "0xB9C878", VA = "0xB9C878", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0xB9CAFC", Offset = "0xB9CAFC", VA = "0xB9CAFC", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0xB9CDBC", Offset = "0xB9CDBC", VA = "0xB9CDBC", Slot = "7")]
	public virtual void Abort()
	{
	}

	[Token(Token = "0x60015F4")]
	public abstract void StartSequence(float delay = 0f);

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0xB9D07C", Offset = "0xB9D07C", VA = "0xB9D07C")]
	protected AnimatedSequence()
	{
	}
}
[Token(Token = "0x20003DE")]
public class ArenaStartSequence : AnimatedSequence
{
	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArenaStartSequence inst;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedEvent _floorTurnOn;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimedValueLerp _floorTimerRecede;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _reflectionIntensityDamp;

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimedValueLerp _reflectionIntensityUp;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimedValueLerp _hexBlackToTransparent;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedValueLerp _roomLightsTurnOn;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedValueLerp _topLightTurnOn;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedValueLerp _gutterFadeIn;

	[Token(Token = "0x400171D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimedValueLerp _tutorialTimerSkip;

	[Token(Token = "0x400171E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimedEvent _ballStartDropTime;

	[Token(Token = "0x400171F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TimedEvent _firstTargetAppearTime;

	[Token(Token = "0x4001720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _ballEntryPathSpeed;

	[Token(Token = "0x4001721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Header("Objects")]
	private float _delayStart;

	[Token(Token = "0x4001722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _currentPlaySpeed;

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0xB9D090", Offset = "0xB9D090", VA = "0xB9D090", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0xB9D100", Offset = "0xB9D100", VA = "0xB9D100", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0xB9D168", Offset = "0xB9D168", VA = "0xB9D168")]
	private void Start()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0xB9D184", Offset = "0xB9D184", VA = "0xB9D184", Slot = "8")]
	public override void StartSequence(float fDelay = 0f)
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0xB9D390", Offset = "0xB9D390", VA = "0xB9D390")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0xB9D540", Offset = "0xB9D540", VA = "0xB9D540")]
	private void Update()
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0xB9E330", Offset = "0xB9E330", VA = "0xB9E330")]
	public static void SpawnBall()
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0xB9E858", Offset = "0xB9E858", VA = "0xB9E858")]
	private void onAnnouncerLetsGoDone()
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0xB9E8C0", Offset = "0xB9E8C0", VA = "0xB9E8C0")]
	private void playInGameMusic()
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0xB9EA04", Offset = "0xB9EA04", VA = "0xB9EA04")]
	public ArenaStartSequence()
	{
	}
}
[Token(Token = "0x20003DF")]
public class BackToMainMenuSequence : AnimatedSequence
{
	[Token(Token = "0x4001723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BackToMainMenuSequence inst;

	[Token(Token = "0x4001724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedValueLerp _globalFadeOut;

	[Token(Token = "0x6001600")]
	[Address(RVA = "0xB9EA20", Offset = "0xB9EA20", VA = "0xB9EA20", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0xB9EA80", Offset = "0xB9EA80", VA = "0xB9EA80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0xB9EA90", Offset = "0xB9EA90", VA = "0xB9EA90", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0xB9EC60", Offset = "0xB9EC60", VA = "0xB9EC60")]
	private void Update()
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0xB9EE14", Offset = "0xB9EE14", VA = "0xB9EE14")]
	private void onTotalBlackout()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0xB9EE78", Offset = "0xB9EE78", VA = "0xB9EE78")]
	public BackToMainMenuSequence()
	{
	}
}
[Token(Token = "0x20003E0")]
public class BestOfXRoundOverSequence : AnimatedSequence
{
	[Token(Token = "0x20003E1")]
	[CompilerGenerated]
	private sealed class <chooseNextRoundSet>d__16 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BestOfXRoundOverSequence <>4__this;

		[Token(Token = "0x170003BD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0xB9F80C", Offset = "0xB9F80C", VA = "0xB9F80C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xB9F854", Offset = "0xB9F854", VA = "0xB9F854", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xB9F450", Offset = "0xB9F450", VA = "0xB9F450")]
		[DebuggerHidden]
		public <chooseNextRoundSet>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xB9F6B4", Offset = "0xB9F6B4", VA = "0xB9F6B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xB9F6B8", Offset = "0xB9F6B8", VA = "0xB9F6B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xB9F814", Offset = "0xB9F814", VA = "0xB9F814", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003E2")]
	[CompilerGenerated]
	private sealed class <animationCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BestOfXRoundOverSequence <>4__this;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameEndReason reason;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int p1Score;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int p2Score;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int round;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PlayerID winningPlayer;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MultiplayerDisplay <display>5__2;

		[Token(Token = "0x170003BF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xB9FF70", Offset = "0xB9FF70", VA = "0xB9FF70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0xB9FFB8", Offset = "0xB9FFB8", VA = "0xB9FFB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xB9F534", Offset = "0xB9F534", VA = "0xB9F534")]
		[DebuggerHidden]
		public <animationCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xB9F8B0", Offset = "0xB9F8B0", VA = "0xB9F8B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xB9F8B4", Offset = "0xB9F8B4", VA = "0xB9F8B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xB9FF78", Offset = "0xB9FF78", VA = "0xB9FF78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BestOfXRoundOverSequence inst;

	[Token(Token = "0x4001726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Delay before (sec)")]
	public float gameOverReasonAnnouncment;

	[Token(Token = "0x4001727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float roundXCompleteAnnouncment;

	[Token(Token = "0x4001728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float displayCelebration;

	[Token(Token = "0x4001729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scoreStateAnnouncment;

	[Token(Token = "0x400172A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float nextRound;

	[Token(Token = "0x400172B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float showTargetsDelay;

	[Token(Token = "0x400172C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float gameOver;

	[Token(Token = "0x400172D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Config")]
	public float ballEntryPathSpeed;

	[Token(Token = "0x400172E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MultiplayerScoreboardUI roundCompleteUI;

	[Token(Token = "0x400172F")]
	private const string COROUTINES_TAG = "BestOfXRoundOverSequence_TAG";

	[Token(Token = "0x6001606")]
	[Address(RVA = "0xB9EE8C", Offset = "0xB9EE8C", VA = "0xB9EE8C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0xB9EEEC", Offset = "0xB9EEEC", VA = "0xB9EEEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0xB9EEFC", Offset = "0xB9EEFC", VA = "0xB9EEFC")]
	public void StartSequence(GameResolution resolution, GameEndReason reason, PlayerID winningPlayer, int round, int p1Score, int p2Score)
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0xB9F330", Offset = "0xB9F330", VA = "0xB9F330", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0xB9F3D8", Offset = "0xB9F3D8", VA = "0xB9F3D8", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0xB9F3DC", Offset = "0xB9F3DC", VA = "0xB9F3DC")]
	[IteratorStateMachine(typeof(<chooseNextRoundSet>d__16))]
	private IEnumerator<float> chooseNextRoundSet()
	{
		return null;
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0xB9F478", Offset = "0xB9F478", VA = "0xB9F478")]
	private void startNextRound()
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0xB9F4CC", Offset = "0xB9F4CC", VA = "0xB9F4CC")]
	private void showTargets()
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0xB9F284", Offset = "0xB9F284", VA = "0xB9F284")]
	[IteratorStateMachine(typeof(<animationCo>d__19))]
	private IEnumerator<float> animationCo(GameResolution resolution, GameEndReason reason, PlayerID winningPlayer, int round, int p1Score, int p2Score)
	{
		return null;
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0xB9F55C", Offset = "0xB9F55C", VA = "0xB9F55C")]
	private void hideTheBall()
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0xB9F680", Offset = "0xB9F680", VA = "0xB9F680")]
	public BestOfXRoundOverSequence()
	{
	}
}
[Token(Token = "0x20003E3")]
public class GameOverSequence : AnimatedSequence
{
	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverSequence inst;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedValueLerp _hexTransparentToBlack;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimedValueLerp _gutterFadeOut;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimedValueLerp _reflectionsDown;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimedValueLerp _turnOffLights;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _reflectionsDamping;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedEvent _startRoomBreakdown;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedEvent _showEndgameUI;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedEvent _playAnnouncerMsg;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Objects")]
	private bool _specialTutorialEnding;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[HideInInspector]
	public bool _winningSounds;

	[Token(Token = "0x600161D")]
	[Address(RVA = "0xBA0014", Offset = "0xBA0014", VA = "0xBA0014", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0xBA0074", Offset = "0xBA0074", VA = "0xBA0074")]
	private void Start()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0xBA0084", Offset = "0xBA0084", VA = "0xBA0084", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x6001620")]
	[Address(RVA = "0xBA046C", Offset = "0xBA046C", VA = "0xBA046C")]
	public void hideTheBall()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0xBA0590", Offset = "0xBA0590", VA = "0xBA0590")]
	private void Update()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0xBA15B0", Offset = "0xBA15B0", VA = "0xBA15B0")]
	public GameOverSequence()
	{
	}
}
[Token(Token = "0x20003E4")]
public class GameRestartSequence : AnimatedSequence
{
	[Token(Token = "0x20003E5")]
	[CompilerGenerated]
	private sealed class <MPStart>d__24 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameRestartSequence <>4__this;

		[Token(Token = "0x170003C2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0xBA426C", Offset = "0xBA426C", VA = "0xBA426C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xBA42B4", Offset = "0xBA42B4", VA = "0xBA42B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xBA4034", Offset = "0xBA4034", VA = "0xBA4034")]
		[DebuggerHidden]
		public <MPStart>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xBA405C", Offset = "0xBA405C", VA = "0xBA405C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xBA4060", Offset = "0xBA4060", VA = "0xBA4060", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xBA4274", Offset = "0xBA4274", VA = "0xBA4274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameRestartSequence inst;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedEvent _floorTurnOn;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimedValueLerp _floorTimerRecede;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _reflectionIntensityDampSolo;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _reflectionIntensityDampArcade;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TimedValueLerp _reflectionIntensityUp;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimedValueLerp _hexBlackToTransparent;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedValueLerp _roomLightsTurnOn;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedValueLerp _topLightTurnOn;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedValueLerp _gutterFadeIn;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimedEvent _ballStartDropTime;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimedEvent _firstTargetAppearTime;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _ballEntryPathSpeed;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Header("Objects")]
	private float _delayStart;

	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _currentPlaySpeed;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool _quickStart;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool _multiPlayerCanStart;

	[Token(Token = "0x170003C1")]
	public float _reflectionIntensityDamp
	{
		[Token(Token = "0x6001623")]
		[Address(RVA = "0xBA15C4", Offset = "0xBA15C4", VA = "0xBA15C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0xBA15FC", Offset = "0xBA15FC", VA = "0xBA15FC", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0xBA166C", Offset = "0xBA166C", VA = "0xBA166C", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0xBA16CC", Offset = "0xBA16CC", VA = "0xBA16CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0xBA16DC", Offset = "0xBA16DC", VA = "0xBA16DC", Slot = "8")]
	public override void StartSequence(float fDelay = 0f)
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0xBA1C28", Offset = "0xBA1C28", VA = "0xBA1C28")]
	public void OnPlayerRestart()
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0xBA1C40", Offset = "0xBA1C40", VA = "0xBA1C40")]
	[IteratorStateMachine(typeof(<MPStart>d__24))]
	private IEnumerator<float> MPStart()
	{
		return null;
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0xBA18A8", Offset = "0xBA18A8", VA = "0xBA18A8")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0xBA1CB4", Offset = "0xBA1CB4", VA = "0xBA1CB4")]
	private void Update()
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0xBA28D0", Offset = "0xBA28D0", VA = "0xBA28D0")]
	private static void SpawnBall()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0xBA2EB4", Offset = "0xBA2EB4", VA = "0xBA2EB4")]
	private void onAnnouncerLetsGoDone()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0xBA2F04", Offset = "0xBA2F04", VA = "0xBA2F04")]
	private void playInGameMusic()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0xBA300C", Offset = "0xBA300C", VA = "0xBA300C")]
	public GameRestartSequence()
	{
	}
}
[Token(Token = "0x20003E6")]
public class MainMenuSequence : AnimatedSequence
{
	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenuSequence inst;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _reversed;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedValueLerp _globalFadeIn;

	[Token(Token = "0x6001636")]
	[Address(RVA = "0xBA4310", Offset = "0xBA4310", VA = "0xBA4310", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0xBA4374", Offset = "0xBA4374", VA = "0xBA4374")]
	private void Start()
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0xBA437C", Offset = "0xBA437C", VA = "0xBA437C", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0xBA43BC", Offset = "0xBA43BC", VA = "0xBA43BC")]
	public void StartSequence(bool bReversed = false)
	{
	}

	[Token(Token = "0x600163A")]
	[Address(RVA = "0xBA4574", Offset = "0xBA4574", VA = "0xBA4574")]
	private void Update()
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0xBA479C", Offset = "0xBA479C", VA = "0xBA479C")]
	public MainMenuSequence()
	{
	}
}
[Token(Token = "0x20003E7")]
public class MPStartSequence : AnimatedSequence
{
	[Token(Token = "0x20003E9")]
	[CompilerGenerated]
	private sealed class <DoSequenceCo>d__23 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MPStartSequence <>4__this;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <delayCounter>5__2;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool <announcerSeedIsKnown>5__3;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool <startingPlayerIsKnown>5__4;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timeToWaitForStartingPlayer>5__5;

		[Token(Token = "0x170003C5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xBA6D08", Offset = "0xBA6D08", VA = "0xBA6D08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600164F")]
			[Address(RVA = "0xBA6D50", Offset = "0xBA6D50", VA = "0xBA6D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xBA4B9C", Offset = "0xBA4B9C", VA = "0xBA4B9C")]
		[DebuggerHidden]
		public <DoSequenceCo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xBA5D78", Offset = "0xBA5D78", VA = "0xBA5D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xBA5D7C", Offset = "0xBA5D7C", VA = "0xBA5D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xBA6D10", Offset = "0xBA6D10", VA = "0xBA6D10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MultiplayerScoreboardUI roundCompleteUI;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPStartSequence inst;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Timers")]
	public TimedEvent _floorTurnOn;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TimedValueLerp _floorTimerRecede;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _reflectionIntensityDampVersus;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _reflectionIntensityDampCoOp;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TimedValueLerp _reflectionIntensityUp;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TimedValueLerp _hexBlackToTransparent;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TimedValueLerp _roomLightsTurnOn;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TimedValueLerp _topLightTurnOn;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TimedValueLerp _gutterFadeIn;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TimedEvent _scoreboardHide;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float delayTheEnd;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _ballEntryPathSpeed;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _delayStart;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float _currentPlaySpeed;

	[Token(Token = "0x400176E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CoroutineHandle _DoSequenceCo;

	[Token(Token = "0x400176F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool _coroutingRunning;

	[Token(Token = "0x170003C4")]
	public float _reflectionIntensityDamp
	{
		[Token(Token = "0x600163C")]
		[Address(RVA = "0xBA47A4", Offset = "0xBA47A4", VA = "0xBA47A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0xBA47D0", Offset = "0xBA47D0", VA = "0xBA47D0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0xBA483C", Offset = "0xBA483C", VA = "0xBA483C")]
	private void Start()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0xBA4858", Offset = "0xBA4858", VA = "0xBA4858", Slot = "8")]
	public override void StartSequence(float fDelay = 0f)
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0xBA4B28", Offset = "0xBA4B28", VA = "0xBA4B28")]
	[IteratorStateMachine(typeof(<DoSequenceCo>d__23))]
	private IEnumerator<float> DoSequenceCo()
	{
		return null;
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0xBA4BC4", Offset = "0xBA4BC4", VA = "0xBA4BC4", Slot = "7")]
	public override void Abort()
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0xBA4AB0", Offset = "0xBA4AB0", VA = "0xBA4AB0")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0xBA4DE4", Offset = "0xBA4DE4", VA = "0xBA4DE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0xBA5C24", Offset = "0xBA5C24", VA = "0xBA5C24")]
	public MPStartSequence()
	{
	}
}
[Token(Token = "0x20003EA")]
internal class BrickAssembler
{
	[Token(Token = "0x20003EB")]
	[CompilerGenerated]
	private sealed class <get_iterBreakTimers>d__24 : IEnumerable<TimedValueLerp>, IEnumerable, IEnumerator<TimedValueLerp>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TimedValueLerp <>2__current;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BrickAssembler <>4__this;

		[Token(Token = "0x170003CA")]
		private TimedValueLerp System.Collections.Generic.IEnumerator<TimedValueLerp>.Current
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0xBA8304", Offset = "0xBA8304", VA = "0xBA8304", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xBA834C", Offset = "0xBA834C", VA = "0xBA834C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xBA6E58", Offset = "0xBA6E58", VA = "0xBA6E58")]
		[DebuggerHidden]
		public <get_iterBreakTimers>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xBA82A4", Offset = "0xBA82A4", VA = "0xBA82A4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xBA82A8", Offset = "0xBA82A8", VA = "0xBA82A8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xBA830C", Offset = "0xBA830C", VA = "0xBA830C", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xBA8354", Offset = "0xBA8354", VA = "0xBA8354", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<TimedValueLerp> System.Collections.Generic.IEnumerable<TimedValueLerp>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xBA8400", Offset = "0xBA8400", VA = "0xBA8400", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject obj;

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _normal;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _axis;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _finalPos;

	[Token(Token = "0x4001780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _initRot;

	[Token(Token = "0x4001781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _finalRot;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _finalScale;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _firstBuildupUpdate;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _push;

	[Token(Token = "0x4001785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _spinDir;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _spinSpeed;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TimedValueLerp _buildMoveTimer;

	[Token(Token = "0x4001788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private TimedValueLerp _breakPushTimer;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float _minBrickHeight;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float _maxBrickHeight;

	[Token(Token = "0x170003C7")]
	public bool finishedBuildup
	{
		[Token(Token = "0x6001650")]
		[Address(RVA = "0xBA6DAC", Offset = "0xBA6DAC", VA = "0xBA6DAC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001651")]
		[Address(RVA = "0xBA6DB4", Offset = "0xBA6DB4", VA = "0xBA6DB4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170003C8")]
	public bool finishedBreakdown
	{
		[Token(Token = "0x6001652")]
		[Address(RVA = "0xBA6DC0", Offset = "0xBA6DC0", VA = "0xBA6DC0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001653")]
		[Address(RVA = "0xBA6DC8", Offset = "0xBA6DC8", VA = "0xBA6DC8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170003C9")]
	private IEnumerable<TimedValueLerp> iterBreakTimers
	{
		[Token(Token = "0x6001654")]
		[Address(RVA = "0xBA6DD4", Offset = "0xBA6DD4", VA = "0xBA6DD4")]
		[IteratorStateMachine(typeof(<get_iterBreakTimers>d__24))]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0xBA6E8C", Offset = "0xBA6E8C", VA = "0xBA6E8C")]
	public BrickAssembler(GameObject o)
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0xBA7178", Offset = "0xBA7178", VA = "0xBA7178")]
	public void initBuildup(float start)
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0xBA77E0", Offset = "0xBA77E0", VA = "0xBA77E0")]
	private void updateBuildupMove()
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0xBA7AEC", Offset = "0xBA7AEC", VA = "0xBA7AEC")]
	private void finishBuild()
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0xBA7B74", Offset = "0xBA7B74", VA = "0xBA7B74")]
	public void updateBuildup()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0xBA7D10", Offset = "0xBA7D10", VA = "0xBA7D10")]
	public void initBreakdown(Vector3 ballPos)
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0xBA800C", Offset = "0xBA800C", VA = "0xBA800C")]
	private void updateBreakPush()
	{
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0xBA819C", Offset = "0xBA819C", VA = "0xBA819C")]
	private void finishBreak()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0xBA81A8", Offset = "0xBA81A8", VA = "0xBA81A8")]
	public void updateBreakdown()
	{
	}
}
[Token(Token = "0x20003EC")]
public class RoomAssembler : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	public enum State
	{
		[Token(Token = "0x40017D6")]
		Disassembled,
		[Token(Token = "0x40017D7")]
		Building,
		[Token(Token = "0x40017D8")]
		Breaking,
		[Token(Token = "0x40017D9")]
		Assembled
	}

	[Token(Token = "0x20003EE")]
	[CompilerGenerated]
	private sealed class <slowMotionCo>d__89 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomAssembler <>4__this;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <t>5__2;

		[Token(Token = "0x170003CD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xBAB2E0", Offset = "0xBAB2E0", VA = "0xBAB2E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xBAB328", Offset = "0xBAB328", VA = "0xBAB328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xBAA25C", Offset = "0xBAA25C", VA = "0xBAA25C")]
		[DebuggerHidden]
		public <slowMotionCo>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xBAB0C4", Offset = "0xBAB0C4", VA = "0xBAB0C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xBAB0C8", Offset = "0xBAB0C8", VA = "0xBAB0C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xBAB2E8", Offset = "0xBAB2E8", VA = "0xBAB2E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Build")]
	public float buildFloor;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float buildFloorSound;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float buildBrickDelayChaos;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float buildBrickMove;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float buildBrickMoveChaos;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float buildBrickScale;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float buildCeiling;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float buildCeilingRotations;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float buildCeilingSound;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float crossFadeBricks;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Long Build")]
	public float longBuildBrickVerticalDelay;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float longBuildCircularDelay;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float longBuildCeilingDelay;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float longBuildAudioSourceLerp;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float longBuildAudioDelay;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("Short Build")]
	public float shortBuildBrickDelay;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shortBuildCeilingDelay;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float shortBuildAudioDelay;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Break")]
	public float breakFloor;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float breakBrickMinPush;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float breakBrickMaxPush;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float breakBrickPushChaos;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float breakBrickPushDirChaos;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float breakBrickSpin;

	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float breakBrickSpinChaos;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float breakCeiling;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float slowMotionAmount;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float unSlowMotionStart;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float unSlowMotionDuration;

	[Token(Token = "0x40017AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Setup")]
	public GameObject bricks;

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject ceiling;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject floor;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject spaceSphere;

	[Token(Token = "0x40017B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject background;

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform bricksAudioSource;

	[Token(Token = "0x40017B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RoomAssembler inst;

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float timer;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static Vector3 lastBallPos;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Vector3 ZERO;

	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private State _state;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private BrickAssembler[] _animatedBricks;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private TimedValueLerp _buildCeiling;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private TimedValueLerp _logoLightOff;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private TimedValueLerp _buildFloor;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TimedEvent _buildCeilingSound;

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private TimedEvent _buildCeilingEnd;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private TimedEvent _buildFloorSound;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private TimedEvent _buildFloorEnd;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private TimedValueLerp _breakCeiling;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private TimedValueLerp _breakFloor;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private TimedEvent _breakCeilingEnd;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private TimedEvent _breakFloorEnd;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 _ceilingInitPos;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 _ceilingFinalPos;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Quaternion _ceilingBaseRot;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Vector3 _ceilingFinalScale;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private Vector3 _floorInitPos;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 _floorFinalPos;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private Vector3 _floorFinalScale;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _currentPlaySpeed;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool _finishedBuildup;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool _finishedBreakdown;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x186")]
	private bool _bricksAudioSourceInit;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private SpatializedAudio _hexLoopAudio;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private CoroutineHandle _slowMotionCo;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static bool shortBuildup;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Vector3? bicksFrontier;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool _breakingFromTutorial;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int _OpacityID;

	[Token(Token = "0x170003CC")]
	public State state
	{
		[Token(Token = "0x6001667")]
		[Address(RVA = "0xBA8404", Offset = "0xBA8404", VA = "0xBA8404")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x14000034")]
	public static event Action onRoomExplode
	{
		[Token(Token = "0x6001668")]
		[Address(RVA = "0xBA840C", Offset = "0xBA840C", VA = "0xBA840C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001669")]
		[Address(RVA = "0xBA84E8", Offset = "0xBA84E8", VA = "0xBA84E8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0xBA85C4", Offset = "0xBA85C4", VA = "0xBA85C4")]
	public void Select()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0xBA8740", Offset = "0xBA8740", VA = "0xBA8740")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0xBA87A8", Offset = "0xBA87A8", VA = "0xBA87A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0xBA6B98", Offset = "0xBA6B98", VA = "0xBA6B98")]
	public static void StartBuildup(bool shortBuildup)
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0xBA8EE4", Offset = "0xBA8EE4", VA = "0xBA8EE4")]
	public static void StartBreakdown(bool specailTutorialBreakdown)
	{
	}

	[Token(Token = "0x600166F")]
	[Address(RVA = "0xBA7C74", Offset = "0xBA7C74", VA = "0xBA7C74")]
	public static bool isTimerInRange(TimedValueLerp t)
	{
		return default(bool);
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0xBA9384", Offset = "0xBA9384", VA = "0xBA9384")]
	public static bool isTimerDone(TimedValueLerp t)
	{
		return default(bool);
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0xBA5B00", Offset = "0xBA5B00", VA = "0xBA5B00")]
	public static bool IsBuildupComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0xBA93F4", Offset = "0xBA93F4", VA = "0xBA93F4")]
	public static bool IsBreakdownComplete()
	{
		return default(bool);
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0xBA4CC0", Offset = "0xBA4CC0", VA = "0xBA4CC0")]
	public static void abort()
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0xBA8A10", Offset = "0xBA8A10", VA = "0xBA8A10")]
	private void initBuild()
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0xBA9848", Offset = "0xBA9848", VA = "0xBA9848")]
	private void updateBuild()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0xBA94C0", Offset = "0xBA94C0", VA = "0xBA94C0")]
	public void finishBuild()
	{
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0xBA9134", Offset = "0xBA9134", VA = "0xBA9134")]
	private void initBreakdown()
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0xBAA1E8", Offset = "0xBAA1E8", VA = "0xBAA1E8")]
	[IteratorStateMachine(typeof(<slowMotionCo>d__89))]
	private IEnumerator<float> slowMotionCo()
	{
		return null;
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0xBAA284", Offset = "0xBAA284", VA = "0xBAA284")]
	private void updateBreakdown()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0xBA96FC", Offset = "0xBA96FC", VA = "0xBA96FC")]
	private void finishBreakdown()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0xBAA930", Offset = "0xBAA930", VA = "0xBAA930")]
	private void Awake()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0xBAAD44", Offset = "0xBAAD44", VA = "0xBAAD44")]
	private void Update()
	{
	}

	[Token(Token = "0x600167D")]
	[Address(RVA = "0xBAAD64", Offset = "0xBAAD64", VA = "0xBAAD64")]
	public RoomAssembler()
	{
	}
}
[Token(Token = "0x20003EF")]
public class StartScreenToMainMenuSequence : AnimatedSequence
{
	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StartScreenToMainMenuSequence inst;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Timers")]
	public TimedEvent activateMainMenu;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _delayStart;

	[Token(Token = "0x6001685")]
	[Address(RVA = "0xBAB384", Offset = "0xBAB384", VA = "0xBAB384", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0xBAB3E8", Offset = "0xBAB3E8", VA = "0xBAB3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0xBAB404", Offset = "0xBAB404", VA = "0xBAB404", Slot = "8")]
	public override void StartSequence(float delay = 0f)
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0xBAB554", Offset = "0xBAB554", VA = "0xBAB554")]
	private void ActuallyStart()
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0xBAB664", Offset = "0xBAB664", VA = "0xBAB664")]
	private void Update()
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0xBAB90C", Offset = "0xBAB90C", VA = "0xBAB90C")]
	public StartScreenToMainMenuSequence()
	{
	}
}
[Serializable]
[Token(Token = "0x20003F2")]
public class TimedEvent
{
	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float _triggerTime;

	[Token(Token = "0x40017E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool _triggered;

	[Token(Token = "0x6001695")]
	[Address(RVA = "0xBA4AA8", Offset = "0xBA4AA8", VA = "0xBA4AA8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0xBA5BCC", Offset = "0xBA5BCC", VA = "0xBA5BCC")]
	public bool IsTriggered(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0xBABBFC", Offset = "0xBABBFC", VA = "0xBABBFC")]
	public bool HasTriggered()
	{
		return default(bool);
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0xBAB010", Offset = "0xBAB010", VA = "0xBAB010")]
	public TimedEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20003F3")]
public class TimedValueLerp
{
	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool _smoothResult;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float _startTime;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _endTime;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _started;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _ended;

	[Token(Token = "0x6001699")]
	[Address(RVA = "0xBA4AA0", Offset = "0xBA4AA0", VA = "0xBA4AA0")]
	public void Reset()
	{
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0xBA5BF8", Offset = "0xBA5BF8", VA = "0xBA5BF8")]
	public bool IsStarted(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0xBABC04", Offset = "0xBABC04", VA = "0xBABC04")]
	public bool HasStarted()
	{
		return default(bool);
	}

	[Token(Token = "0x600169C")]
	[Address(RVA = "0xBABC0C", Offset = "0xBABC0C", VA = "0xBABC0C")]
	public bool IsEnded(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x600169D")]
	[Address(RVA = "0xBABC38", Offset = "0xBABC38", VA = "0xBABC38")]
	public bool HasEnded()
	{
		return default(bool);
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0xBABC40", Offset = "0xBABC40", VA = "0xBABC40")]
	public static float smootherStep(float x)
	{
		return default(float);
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0xBA7150", Offset = "0xBA7150", VA = "0xBA7150")]
	public TimedValueLerp(bool doSmoothStep = false)
	{
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0xBA4738", Offset = "0xBA4738", VA = "0xBA4738")]
	public float sampleValue(float time)
	{
		return default(float);
	}
}
[Token(Token = "0x20003F4")]
public class AvatarConfigurations : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003F5")]
	public class MaterialPair
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material p1;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material p2;

		[NonSerialized]
		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material current;

		[NonSerialized]
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material lerpTo;

		[NonSerialized]
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material lerpFrom;

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xBAC404", Offset = "0xBAC404", VA = "0xBAC404")]
		public bool HasMaterial(Material m)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xBAD1A0", Offset = "0xBAD1A0", VA = "0xBAD1A0")]
		private static string GetFixedName(string name)
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xBAC710", Offset = "0xBAC710", VA = "0xBAC710")]
		public void Init(AvatarConfigurations config)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xBAD09C", Offset = "0xBAD09C", VA = "0xBAD09C")]
		public MaterialPair()
		{
		}
	}

	[Token(Token = "0x20003F6")]
	[CompilerGenerated]
	private sealed class <UpdateMaterialsCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarConfigurations <>4__this;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x170003D2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0xBAD554", Offset = "0xBAD554", VA = "0xBAD554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016B6")]
			[Address(RVA = "0xBAD59C", Offset = "0xBAD59C", VA = "0xBAD59C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xBAD168", Offset = "0xBAD168", VA = "0xBAD168")]
		[DebuggerHidden]
		public <UpdateMaterialsCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xBAD288", Offset = "0xBAD288", VA = "0xBAD288", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xBAD28C", Offset = "0xBAD28C", VA = "0xBAD28C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xBAD55C", Offset = "0xBAD55C", VA = "0xBAD55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerID _playerID;

	[Token(Token = "0x40017ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float colorChangeDuration;

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<MaterialPair> _materialPairs;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CoroutineHandle _UpdateMaterialsCo;

	[Token(Token = "0x170003D1")]
	public PlayerID PlayerID
	{
		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xBABC6C", Offset = "0xBABC6C", VA = "0xBABC6C")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0xBABC74", Offset = "0xBABC74", VA = "0xBABC74")]
	public void ChangePlayerID(PlayerID id, bool immediately = false)
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0xBAC174", Offset = "0xBAC174", VA = "0xBAC174")]
	public void Init()
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0xBAC4D4", Offset = "0xBAC4D4", VA = "0xBAC4D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0xBAC8D8", Offset = "0xBAC8D8", VA = "0xBAC8D8")]
	public Material GetCurrentMaterial(string name)
	{
		return null;
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0xBACA60", Offset = "0xBACA60", VA = "0xBACA60")]
	public void GetMaterialsByProperty(int propID, List<Material> list)
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0xBACC8C", Offset = "0xBACC8C", VA = "0xBACC8C")]
	public Material GetReferenceMaterial(MaterialPair pair)
	{
		return null;
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0xBACCB8", Offset = "0xBACCB8", VA = "0xBACCB8")]
	public Material AppendIfUnique(Material p1, Material p2)
	{
		return null;
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0xBABEE4", Offset = "0xBABEE4", VA = "0xBABEE4")]
	private void UpdateMaterials()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0xBAD0F4", Offset = "0xBAD0F4", VA = "0xBAD0F4")]
	[IteratorStateMachine(typeof(<UpdateMaterialsCo>d__15))]
	private IEnumerator<float> UpdateMaterialsCo()
	{
		return null;
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0xBABC94", Offset = "0xBABC94", VA = "0xBABC94")]
	public void UpdateMaterialsImmediately()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0xBAD190", Offset = "0xBAD190", VA = "0xBAD190")]
	public AvatarConfigurations()
	{
	}
}
[Token(Token = "0x20003F7")]
public class AvatarController : MonoBehaviour
{
	[Token(Token = "0x20003F8")]
	private class BrainPart
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _transform;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _dir;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _origin;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float _offset;

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xBB03F0", Offset = "0xBB03F0", VA = "0xBB03F0")]
		public BrainPart(Transform t)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xBAF21C", Offset = "0xBAF21C", VA = "0xBAF21C")]
		public void Update(float loudness, float t)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003F9")]
	public class SpineLink
	{
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _percent;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _offsetPos;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion _offsetRot;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SmoothVector3 _up;

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xBB16EC", Offset = "0xBB16EC", VA = "0xBB16EC")]
		private void GetSpinePose(AvatarController avatar, float dt, ref Vector3 pos, ref Quaternion rot)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xBAF56C", Offset = "0xBAF56C", VA = "0xBAF56C")]
		public void Init(AvatarController avatar)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xBAECE8", Offset = "0xBAECE8", VA = "0xBAECE8")]
		public void Update(AvatarController avatar, float dt)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xBB18E4", Offset = "0xBB18E4", VA = "0xBB18E4")]
		public SpineLink()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003FA")]
	public class Connector
	{
		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform inAnchor;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform outAnchor;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LineRenderer[] _lines;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] _points;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Bezier.BezierSegment _segment;

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xBB08B4", Offset = "0xBB08B4", VA = "0xBB08B4")]
		public void Init(AvatarController avatar)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xBB18EC", Offset = "0xBB18EC", VA = "0xBB18EC")]
		private void UpdateSpline()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xBB1AD0", Offset = "0xBB1AD0", VA = "0xBB1AD0")]
		private void UpdateLines(AvatarController avatar)
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xBAEF30", Offset = "0xBAEF30", VA = "0xBAEF30")]
		public void Update(AvatarController avatar)
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xBB1144", Offset = "0xBB1144", VA = "0xBB1144")]
		public void DrawGizmos(AvatarController avatar)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xBB1CD8", Offset = "0xBB1CD8", VA = "0xBB1CD8")]
		public Connector()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20003FB")]
	public class Spring
	{
		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _initLocalPos;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _initLocalUp;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _localOffset;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _offsetRot;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SpringVector3 _spring;

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xBB055C", Offset = "0xBB055C", VA = "0xBB055C")]
		public void Init()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xBAFD74", Offset = "0xBAFD74", VA = "0xBAFD74")]
		public void Update(float dt, float time, float strength, float drag)
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xBB1440", Offset = "0xBB1440", VA = "0xBB1440")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xBB1D64", Offset = "0xBB1D64", VA = "0xBB1D64")]
		public Spring()
		{
		}
	}

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarSettings.AvatarLabel label;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Spine")]
	public float pelvisOffsetFromHead;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pelvisTangents;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pelvisDirDamp;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pelvisTangentOffset;

	[Token(Token = "0x40017FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 1f)]
	public float pelvisStiffness;

	[Token(Token = "0x4001800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pelvisAngleDeadZone;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve pelvisPosDampCurve;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float pelvisPosDampMin;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pelvisPosDampMax;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pelvisPosDampRadius;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Energy Lines")]
	public int numLines;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distBetweenLines;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float energyLineWidth;

	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material lineMaterialP1;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material lineMaterialP2;

	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Voice")]
	public float voiceLightStrength;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float voiceScale;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float voiceFrequency;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float voiceSmoothTime;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Setup")]
	public Transform head;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform brain;

	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform[] brainParts;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform spineEnd;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SpineLink[] spine;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform spineStart;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform pelvis;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Connector[] connectors;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Springs")]
	public float springsStrength;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float springsDrag;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Spring[] springs;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Medals")]
	public Transform medalsUpperPosition;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform medalsLowerPosition;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Debug")]
	public bool connectToHead;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool debugDraw;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Bezier.BezierSegment _spineSpline;

	[NonSerialized]
	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float averageHeight;

	[NonSerialized]
	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform[] anchors;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SmoothVector3 _pelvisSmoothPos;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SmoothVector3 _pelvisSmoothDir;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SmoothVector3 _pelvisSmoothUp;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SmoothFloat _loudness;

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private BrainPart[] _brainParts;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<Material> _speakMaterials;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _SpeakingID;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private AvatarMedals _avatarMedals;

	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _isPlayer;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PlayerModel _model;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Player _player;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float _mirrorTurnAngle;

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private Matrix4x4 _turnMatrix;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private bool _mirrorMatrixValid;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Matrix4x4 _mirrorMatrixPre;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Matrix4x4 _mirrorMatrixPost;

	[Token(Token = "0x170003D4")]
	public float Loudness
	{
		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xBAD5F8", Offset = "0xBAD5F8", VA = "0xBAD5F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003D5")]
	public AvatarMedals Medals
	{
		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xBAD618", Offset = "0xBAD618", VA = "0xBAD618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D6")]
	public Player Player
	{
		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xBAD620", Offset = "0xBAD620", VA = "0xBAD620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003D7")]
	public float MirrorTurnAngle
	{
		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xBAD628", Offset = "0xBAD628", VA = "0xBAD628")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xBAD630", Offset = "0xBAD630", VA = "0xBAD630")]
		set
		{
		}
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0xBAD7A8", Offset = "0xBAD7A8", VA = "0xBAD7A8")]
	private void BakeMirrorMatrix()
	{
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0xBADC34", Offset = "0xBADC34", VA = "0xBADC34")]
	public void MirrorTransform(Transform source, Transform target)
	{
	}

	[Token(Token = "0x60016BE")]
	[Address(RVA = "0xBADDA8", Offset = "0xBADDA8", VA = "0xBADDA8")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0xBADF44", Offset = "0xBADF44", VA = "0xBADF44")]
	public void Relocate(Vector3 offset)
	{
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0xBAE044", Offset = "0xBAE044", VA = "0xBAE044")]
	private float GetCurrentHeight()
	{
		return default(float);
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0xBAE150", Offset = "0xBAE150", VA = "0xBAE150")]
	private void UpdatePelvis(float dt)
	{
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0xBAEA60", Offset = "0xBAEA60", VA = "0xBAEA60")]
	private void UpdateSpline()
	{
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0xBAEC70", Offset = "0xBAEC70", VA = "0xBAEC70")]
	private void UpdateSpine(float dt)
	{
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0xBAEEB8", Offset = "0xBAEEB8", VA = "0xBAEEB8")]
	private void UpdateConnectors()
	{
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0xBAEF58", Offset = "0xBAEF58", VA = "0xBAEF58")]
	private void UpdateVoice(float t, float dt)
	{
	}

	[Token(Token = "0x60016C6")]
	[Address(RVA = "0xBAF284", Offset = "0xBAF284", VA = "0xBAF284")]
	public void Init()
	{
	}

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0xBAF31C", Offset = "0xBAF31C", VA = "0xBAF31C")]
	private void SetMedalsPosition(Transform holder)
	{
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0xBAF294", Offset = "0xBAF294", VA = "0xBAF294")]
	public void HideBrain()
	{
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0xBAF47C", Offset = "0xBAF47C", VA = "0xBAF47C")]
	public void ShowBrain()
	{
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0xBAF504", Offset = "0xBAF504", VA = "0xBAF504")]
	private void InitSpine()
	{
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0xBAF72C", Offset = "0xBAF72C", VA = "0xBAF72C")]
	private void ResetSpeaker()
	{
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0xBAF89C", Offset = "0xBAF89C", VA = "0xBAF89C")]
	private void FindChildrenWithSuffix(Transform parent, string suffix, List<Transform> list)
	{
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0xBAFC20", Offset = "0xBAFC20", VA = "0xBAFC20")]
	private void FindAnchors()
	{
	}

	[Token(Token = "0x60016CE")]
	[Address(RVA = "0xBAFCF8", Offset = "0xBAFCF8", VA = "0xBAFCF8")]
	private void UpdateSprings(float dt, float time)
	{
	}

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0xBB0064", Offset = "0xBB0064", VA = "0xBB0064")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0xBB07A0", Offset = "0xBB07A0", VA = "0xBB07A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0xBB0CAC", Offset = "0xBB0CAC", VA = "0xBB0CAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0xBB0E6C", Offset = "0xBB0E6C", VA = "0xBB0E6C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0xBB152C", Offset = "0xBB152C", VA = "0xBB152C")]
	public AvatarController()
	{
	}
}
[Token(Token = "0x20003FC")]
public class AvatarMedals : MonoBehaviour
{
	[Token(Token = "0x20003FE")]
	[CompilerGenerated]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AvatarMedals <>4__this;

		[Token(Token = "0x170003D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60016F7")]
			[Address(RVA = "0xBB2B8C", Offset = "0xBB2B8C", VA = "0xBB2B8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016F9")]
			[Address(RVA = "0xBB2BD4", Offset = "0xBB2BD4", VA = "0xBB2BD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xBB1E48", Offset = "0xBB1E48", VA = "0xBB1E48")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xBB28B8", Offset = "0xBB28B8", VA = "0xBB28B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xBB28BC", Offset = "0xBB28BC", VA = "0xBB28BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xBB2B94", Offset = "0xBB2B94", VA = "0xBB2B94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003FF")]
	[CompilerGenerated]
	private sealed class <showOpponent>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMedals <>4__this;

		[Token(Token = "0x170003DA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60016FD")]
			[Address(RVA = "0xBB2CEC", Offset = "0xBB2CEC", VA = "0xBB2CEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xBB2D34", Offset = "0xBB2D34", VA = "0xBB2D34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xBB2768", Offset = "0xBB2768", VA = "0xBB2768")]
		[DebuggerHidden]
		public <showOpponent>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xBB2BDC", Offset = "0xBB2BDC", VA = "0xBB2BDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xBB2BE0", Offset = "0xBB2BE0", VA = "0xBB2BE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xBB2CF4", Offset = "0xBB2CF4", VA = "0xBB2CF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerModel _model;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CoroutineHandle? _showOpponent;

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0xBB1D7C", Offset = "0xBB1D7C", VA = "0xBB1D7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60016E6")]
	[Address(RVA = "0xBB1DD4", Offset = "0xBB1DD4", VA = "0xBB1DD4")]
	[IteratorStateMachine(typeof(<Start>d__2))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0xBB1E70", Offset = "0xBB1E70", VA = "0xBB1E70")]
	private void onMedalAwarded()
	{
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0xBB1EE0", Offset = "0xBB1EE0", VA = "0xBB1EE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0xBB2070", Offset = "0xBB2070", VA = "0xBB2070")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0xBB21F4", Offset = "0xBB21F4", VA = "0xBB21F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0xBB2134", Offset = "0xBB2134", VA = "0xBB2134")]
	private void removeAllMedals()
	{
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0xBB22A4", Offset = "0xBB22A4", VA = "0xBB22A4")]
	private void showMedals(List<Medals.Bunch> medalBunches)
	{
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0xBB1E74", Offset = "0xBB1E74", VA = "0xBB1E74")]
	private void updateMeNow()
	{
	}

	[Token(Token = "0x60016EE")]
	[Address(RVA = "0xBB1FFC", Offset = "0xBB1FFC", VA = "0xBB1FFC")]
	[IteratorStateMachine(typeof(<showOpponent>d__11))]
	private IEnumerator<float> showOpponent()
	{
		return null;
	}

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0xBB2790", Offset = "0xBB2790", VA = "0xBB2790")]
	public AvatarMedals()
	{
	}
}
[Token(Token = "0x2000400")]
[RequireComponent(typeof(Renderer))]
public class AvatarRenderer : MonoBehaviour
{
	[Token(Token = "0x2000401")]
	public enum Coat
	{
		[Token(Token = "0x4001856")]
		None,
		[Token(Token = "0x4001857")]
		Primary,
		[Token(Token = "0x4001858")]
		Secondary
	}

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Coat coat;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _renderer;

	[Token(Token = "0x170003DC")]
	public Renderer Renderer
	{
		[Token(Token = "0x6001700")]
		[Address(RVA = "0xBB2D90", Offset = "0xBB2D90", VA = "0xBB2D90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0xBB2E38", Offset = "0xBB2E38", VA = "0xBB2E38")]
	public AvatarRenderer()
	{
	}
}
[Token(Token = "0x2000402")]
public class FireTrail : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000403")]
	public class PlayerParams
	{
		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material boltMaterial_Slow;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material boltMaterial_Fast;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material boltMaterial_Powershot;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _boltMaterial;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material flameMaterial;

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xBB305C", Offset = "0xBB305C", VA = "0xBB305C")]
		public void UpdateMaterial(Material mat, bool powershot, float t)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xBB3FF8", Offset = "0xBB3FF8", VA = "0xBB3FF8")]
		public PlayerParams()
		{
		}
	}

	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numPoints;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float boltMinScale;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float boltMaxScale;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ballSlowSpeed;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ballFastSpeed;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float gravity;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject visuals;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] bones;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer boltRenderer;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystemRenderer flameParticles;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerParams p1;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerParams p2;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool onForMe;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool onForOpponent;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _transform;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _bolt;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Ball _ball;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _lastUp;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 _lastVelocity;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CyclicBuffer<Vector3> _trail;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Quaternion OFFSET_ROT;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _strength;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private PlayerID _lastPlayerID;

	[Token(Token = "0x6001702")]
	[Address(RVA = "0xBB2E40", Offset = "0xBB2E40", VA = "0xBB2E40")]
	private void UpdateMaterialsAndScale(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0xBB3184", Offset = "0xBB3184", VA = "0xBB3184")]
	private void UpdateBones()
	{
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0xBB3A44", Offset = "0xBB3A44", VA = "0xBB3A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0xBB3BEC", Offset = "0xBB3BEC", VA = "0xBB3BEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001706")]
	[Address(RVA = "0xBB3C90", Offset = "0xBB3C90", VA = "0xBB3C90")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001707")]
	[Address(RVA = "0xBB3D34", Offset = "0xBB3D34", VA = "0xBB3D34")]
	private void OnBallHitRacket(ShotInfo shotInfo, Vector3 _)
	{
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0xBB3DBC", Offset = "0xBB3DBC", VA = "0xBB3DBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0xBB3E1C", Offset = "0xBB3E1C", VA = "0xBB3E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0xBB3F90", Offset = "0xBB3F90", VA = "0xBB3F90")]
	public FireTrail()
	{
	}
}
[Token(Token = "0x2000404")]
public class Item_Anchored : Item_Base
{
	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Hit Particles")]
	public int minBurstSize;

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxBurstSize;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem hitFXPrefab;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _i;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _racketHitCount;

	[Token(Token = "0x600170D")]
	[Address(RVA = "0xBB4000", Offset = "0xBB4000", VA = "0xBB4000")]
	private void OnBallHitRacket(ShotInfo shotInfo, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x600170E")]
	[Address(RVA = "0xBB4760", Offset = "0xBB4760", VA = "0xBB4760")]
	private void OnWaveStart(string _, int n)
	{
	}

	[Token(Token = "0x600170F")]
	[Address(RVA = "0xBB4140", Offset = "0xBB4140", VA = "0xBB4140")]
	private bool ShouldPlayOnThisHit()
	{
		return default(bool);
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0xBB4768", Offset = "0xBB4768", VA = "0xBB4768")]
	public void PlayHitFX(Vector3 pos, Vector3 normalizedVelocity)
	{
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0xBB4234", Offset = "0xBB4234", VA = "0xBB4234")]
	private void PlayHitFX(Vector3 pos, Vector3 normalizedVelocity, bool fromRacket)
	{
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0xBB4838", Offset = "0xBB4838", VA = "0xBB4838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0xBB49A4", Offset = "0xBB49A4", VA = "0xBB49A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0xBB4AF0", Offset = "0xBB4AF0", VA = "0xBB4AF0")]
	private Transform GetItemAnchor(PlayerModel model, string itemName)
	{
		return null;
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0xBB4B88", Offset = "0xBB4B88", VA = "0xBB4B88", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001716")]
	[Address(RVA = "0xBB4F00", Offset = "0xBB4F00", VA = "0xBB4F00")]
	public Item_Anchored()
	{
	}
}
[Token(Token = "0x2000405")]
public class Item_Base : MonoBehaviour
{
	[Token(Token = "0x2000406")]
	public class Chain
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform[] _bones;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SpringVector3[] _springs;

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xBB5028", Offset = "0xBB5028", VA = "0xBB5028")]
		public Chain(Transform[] bones)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xBB5274", Offset = "0xBB5274", VA = "0xBB5274")]
		public void Update(float dt, float springStrength, float springDrag, float springAmount, float springGravity)
		{
		}
	}

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ItemId(ItemsDefs.ItemShelf.None)]
	public string itemId;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected PlayerModel _model;

	[Token(Token = "0x6001717")]
	[Address(RVA = "0xBB4E2C", Offset = "0xBB4E2C", VA = "0xBB4E2C")]
	public void SetAvatarLayer()
	{
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0xBB4D74", Offset = "0xBB4D74", VA = "0xBB4D74", Slot = "4")]
	public virtual Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0xBB4F1C", Offset = "0xBB4F1C", VA = "0xBB4F1C", Slot = "5")]
	protected virtual void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0xBB4F20", Offset = "0xBB4F20", VA = "0xBB4F20", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0xBB4FA4", Offset = "0xBB4FA4", VA = "0xBB4FA4", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0xBB4F14", Offset = "0xBB4F14", VA = "0xBB4F14")]
	public Item_Base()
	{
	}
}
[Token(Token = "0x2000407")]
public class Item_ChickenComb : Item_Anchored
{
	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Springs")]
	public float springStrength;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float springDrag;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float springAmount;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float springGravity;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly List<Chain> _chains;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material p1;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material p2;

	[Token(Token = "0x600171F")]
	[Address(RVA = "0xBB5444", Offset = "0xBB5444", VA = "0xBB5444")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0xBB599C", Offset = "0xBB599C", VA = "0xBB599C", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0xBB5AA0", Offset = "0xBB5AA0", VA = "0xBB5AA0", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0xBB5C00", Offset = "0xBB5C00", VA = "0xBB5C00")]
	public Item_ChickenComb()
	{
	}
}
[Token(Token = "0x2000408")]
public class Item_Cigar : Item_Anchored
{
	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Spring")]
	public float springStrength;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float springDrag;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float springMaxLength;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float springAmount;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float springGravity;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float speakingAngle;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _transform;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpringVector3 _spring;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _SpeakingID;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Renderer[] _speakingRenderers;

	[Token(Token = "0x6001723")]
	[Address(RVA = "0xBB5CA0", Offset = "0xBB5CA0", VA = "0xBB5CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0xBB5ED8", Offset = "0xBB5ED8", VA = "0xBB5ED8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001725")]
	[Address(RVA = "0xBB5F88", Offset = "0xBB5F88", VA = "0xBB5F88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001726")]
	[Address(RVA = "0xBB6038", Offset = "0xBB6038", VA = "0xBB6038")]
	private void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x6001727")]
	[Address(RVA = "0xBB606C", Offset = "0xBB606C", VA = "0xBB606C", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0xBB6364", Offset = "0xBB6364", VA = "0xBB6364")]
	public Item_Cigar()
	{
	}
}
[Token(Token = "0x2000409")]
public class Item_Crown : Item_Hat
{
	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Crown")]
	public float rotationSpeed;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _rotationAngle;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _child;

	[Token(Token = "0x6001729")]
	[Address(RVA = "0xBB6390", Offset = "0xBB6390", VA = "0xBB6390", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0xBB6408", Offset = "0xBB6408", VA = "0xBB6408", Slot = "7")]
	protected override void Update()
	{
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0xBB6478", Offset = "0xBB6478", VA = "0xBB6478")]
	public Item_Crown()
	{
	}
}
[Token(Token = "0x200040A")]
public class Item_FireTrail : Item_Trail
{
	[Token(Token = "0x600172C")]
	[Address(RVA = "0xBB64C8", Offset = "0xBB64C8", VA = "0xBB64C8", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0xBB66B8", Offset = "0xBB66B8", VA = "0xBB66B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600172E")]
	[Address(RVA = "0xBB6730", Offset = "0xBB6730", VA = "0xBB6730")]
	public Item_FireTrail()
	{
	}
}
[Token(Token = "0x200040B")]
public class Item_HamsaRacket : Item_Base
{
	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform center;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] wings;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystemRenderer sparks;

	[Token(Token = "0x4001896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material hamsaMaterialP1;

	[Token(Token = "0x4001897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material hamsaMaterialP2;

	[Token(Token = "0x4001898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material sparkMaterialP1;

	[Token(Token = "0x4001899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material sparkMaterialP2;

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _quitting;

	[Token(Token = "0x600172F")]
	[Address(RVA = "0xBB6740", Offset = "0xBB6740", VA = "0xBB6740", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0xBB68A0", Offset = "0xBB68A0", VA = "0xBB68A0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0xBB68AC", Offset = "0xBB68AC", VA = "0xBB68AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0xBB6960", Offset = "0xBB6960", VA = "0xBB6960")]
	public Item_HamsaRacket()
	{
	}
}
[Token(Token = "0x200040C")]
public class Item_Hat : Item_Anchored
{
	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Hat")]
	public float springStrength;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float springDrag;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float springMaxLength;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float springAmount;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float springGravity;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Transform _transform;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SpringVector3 _spring;

	[Token(Token = "0x6001733")]
	[Address(RVA = "0xBB6968", Offset = "0xBB6968", VA = "0xBB6968", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0xBB63E4", Offset = "0xBB63E4", VA = "0xBB63E4", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0xBB64A0", Offset = "0xBB64A0", VA = "0xBB64A0")]
	public Item_Hat()
	{
	}
}
[Token(Token = "0x200040D")]
public class Item_Pendant : Item_Base
{
	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int numCopies;

	[Token(Token = "0x6001736")]
	[Address(RVA = "0xBB6B98", Offset = "0xBB6B98", VA = "0xBB6B98", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001737")]
	[Address(RVA = "0xBB6F38", Offset = "0xBB6F38", VA = "0xBB6F38")]
	public Item_Pendant()
	{
	}
}
[Token(Token = "0x200040E")]
public class Item_PixelTrail : Item_Trail
{
	[Token(Token = "0x6001738")]
	[Address(RVA = "0xBB6F48", Offset = "0xBB6F48", VA = "0xBB6F48", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0xBB6FCC", Offset = "0xBB6FCC", VA = "0xBB6FCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0xBB7044", Offset = "0xBB7044", VA = "0xBB7044")]
	public Item_PixelTrail()
	{
	}
}
[Token(Token = "0x200040F")]
public class Item_Trail : Item_Base
{
	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TrailMaker.TrailDef[] trailDefs;

	[Token(Token = "0x600173B")]
	[Address(RVA = "0xBB654C", Offset = "0xBB654C", VA = "0xBB654C", Slot = "4")]
	public override Item_Base Instantiate(PlayerModel model)
	{
		return null;
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0xBB704C", Offset = "0xBB704C", VA = "0xBB704C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0xBB6738", Offset = "0xBB6738", VA = "0xBB6738")]
	public Item_Trail()
	{
	}
}
[Token(Token = "0x2000410")]
public class Item_WizardHat : Item_Hat
{
	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Wizard")]
	public float chainStrength;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float chainDrag;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float chainAmount;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float chainGravity;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform[] bones;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Chain _chain;

	[Token(Token = "0x600173E")]
	[Address(RVA = "0xBB70AC", Offset = "0xBB70AC", VA = "0xBB70AC", Slot = "8")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600173F")]
	[Address(RVA = "0xBB7138", Offset = "0xBB7138", VA = "0xBB7138", Slot = "5")]
	protected override void UpdateSprings(float dt)
	{
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0xBB7170", Offset = "0xBB7170", VA = "0xBB7170")]
	public Item_WizardHat()
	{
	}
}
[Token(Token = "0x2000411")]
public class MirrorBall : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	[CompilerGenerated]
	private sealed class <ShowBallCo>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MirrorBall <>4__this;

		[Token(Token = "0x170003DE")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0xBB78A8", Offset = "0xBB78A8", VA = "0xBB78A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0xBB78F0", Offset = "0xBB78F0", VA = "0xBB78F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xBB739C", Offset = "0xBB739C", VA = "0xBB739C")]
		[DebuggerHidden]
		public <ShowBallCo>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xBB7718", Offset = "0xBB7718", VA = "0xBB7718", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xBB771C", Offset = "0xBB771C", VA = "0xBB771C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xBB78B0", Offset = "0xBB78B0", VA = "0xBB78B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000413")]
	[CompilerGenerated]
	private sealed class <HideBallCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x170003E0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0xBB7B88", Offset = "0xBB7B88", VA = "0xBB7B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0xBB7BD0", Offset = "0xBB7BD0", VA = "0xBB7BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xBB74BC", Offset = "0xBB74BC", VA = "0xBB74BC")]
		[DebuggerHidden]
		public <HideBallCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xBB794C", Offset = "0xBB794C", VA = "0xBB794C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xBB7950", Offset = "0xBB7950", VA = "0xBB7950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xBB7B90", Offset = "0xBB7B90", VA = "0xBB7B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float swing;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float trailTimeStep;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _transform;

	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timer1;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timer2;

	[Token(Token = "0x40018B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle _ShowBallCo;

	[Token(Token = "0x170003DD")]
	private Vector3 Target
	{
		[Token(Token = "0x6001741")]
		[Address(RVA = "0xBB71A4", Offset = "0xBB71A4", VA = "0xBB71A4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0xBB7210", Offset = "0xBB7210", VA = "0xBB7210")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0xBB728C", Offset = "0xBB728C", VA = "0xBB728C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0xBB7328", Offset = "0xBB7328", VA = "0xBB7328")]
	[IteratorStateMachine(typeof(<ShowBallCo>d__13))]
	private IEnumerator<float> ShowBallCo()
	{
		return null;
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0xBB73C4", Offset = "0xBB73C4", VA = "0xBB73C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001746")]
	[Address(RVA = "0xBB745C", Offset = "0xBB745C", VA = "0xBB745C")]
	[IteratorStateMachine(typeof(<HideBallCo>d__15))]
	private IEnumerator<float> HideBallCo()
	{
		return null;
	}

	[Token(Token = "0x6001747")]
	[Address(RVA = "0xBB74E4", Offset = "0xBB74E4", VA = "0xBB74E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001748")]
	[Address(RVA = "0xBB7614", Offset = "0xBB7614", VA = "0xBB7614")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001749")]
	[Address(RVA = "0xBB7704", Offset = "0xBB7704", VA = "0xBB7704")]
	public MirrorBall()
	{
	}
}
[Token(Token = "0x2000414")]
public class Pendant : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000415")]
	public class Item
	{
		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _active;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SpringJoint _joint;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LineRenderer _line;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _model;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SmoothVector3 _tangent;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bezier.BezierSegment _segment;

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xBB8184", Offset = "0xBB8184", VA = "0xBB8184")]
		public Item Duplicate()
		{
			return null;
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xBB809C", Offset = "0xBB809C", VA = "0xBB809C")]
		public void Disable()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xBB802C", Offset = "0xBB802C", VA = "0xBB802C")]
		public void SetConnectedBody(Rigidbody connectedBody, Vector3 connectedAnchor)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xBB827C", Offset = "0xBB827C", VA = "0xBB827C")]
		public void Init(PlayerModel playerModel, int numPoints, GameObject model, Rigidbody connectedBody)
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xBB8908", Offset = "0xBB8908", VA = "0xBB8908")]
		public void Update(float dt, float smoothTime, int numPoints, PlayerModel playerModel)
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xBB8B74", Offset = "0xBB8B74", VA = "0xBB8B74")]
		public Item()
		{
		}
	}

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int numPoints;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float smoothTime;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Item> items;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerModel _playerModel;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _handleRB;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _followTarget;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _unscaledTimer;

	[Token(Token = "0x6001756")]
	[Address(RVA = "0xBB7C2C", Offset = "0xBB7C2C", VA = "0xBB7C2C")]
	private void ValidateHandle()
	{
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0xBB6C50", Offset = "0xBB6C50", VA = "0xBB6C50")]
	public void UseModel(GameObject model, int numCopies = 1)
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0xBB8580", Offset = "0xBB8580", VA = "0xBB8580")]
	private void Start()
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0xBB872C", Offset = "0xBB872C", VA = "0xBB872C")]
	private void Update()
	{
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0xBB8B5C", Offset = "0xBB8B5C", VA = "0xBB8B5C")]
	public Pendant()
	{
	}
}
[Token(Token = "0x2000416")]
public class PixelTrail : MonoBehaviour
{
	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material particlesMaterialP1;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material particlesMaterialP2;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject visuals;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystemRenderer particlesRenderer;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ball _ball;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerID _lastPlayerID;

	[Token(Token = "0x40018CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool onForMe;

	[Token(Token = "0x40018CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool onForOpponent;

	[Token(Token = "0x6001761")]
	[Address(RVA = "0xBB8C78", Offset = "0xBB8C78", VA = "0xBB8C78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001762")]
	[Address(RVA = "0xBB8CD0", Offset = "0xBB8CD0", VA = "0xBB8CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001763")]
	[Address(RVA = "0xBB8FEC", Offset = "0xBB8FEC", VA = "0xBB8FEC")]
	public PixelTrail()
	{
	}
}
[Token(Token = "0x2000417")]
public class SpringVector3
{
	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _target;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _current;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxLength;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _velocity;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _parent;

	[Token(Token = "0x170003E2")]
	public Vector3 Target
	{
		[Token(Token = "0x6001764")]
		[Address(RVA = "0xBB8FF4", Offset = "0xBB8FF4", VA = "0xBB8FF4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6001765")]
		[Address(RVA = "0xBB9084", Offset = "0xBB9084", VA = "0xBB9084")]
		set
		{
		}
	}

	[Token(Token = "0x170003E3")]
	public Vector3 Current
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0xBB913C", Offset = "0xBB913C", VA = "0xBB913C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0xBB9148", Offset = "0xBB9148", VA = "0xBB9148")]
	public SpringVector3(Vector3 initPos, [Optional] Transform parent)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0xBB91C0", Offset = "0xBB91C0", VA = "0xBB91C0")]
	public void Update(float dt, float strength, float drag, float amount, float gravity)
	{
	}
}
[Token(Token = "0x2000418")]
public enum MedalType
{
	[Token(Token = "0x40018D5")]
	None,
	[Token(Token = "0x40018D6")]
	Gold,
	[Token(Token = "0x40018D7")]
	Silver,
	[Token(Token = "0x40018D8")]
	Bronze,
	[Token(Token = "0x40018D9")]
	ThreeStars,
	[Token(Token = "0x40018DA")]
	TwoStars,
	[Token(Token = "0x40018DB")]
	OneStar,
	[Token(Token = "0x40018DC")]
	TournamentGold,
	[Token(Token = "0x40018DD")]
	TournamentSilver,
	[Token(Token = "0x40018DE")]
	TournamentBronze
}
[Serializable]
[Token(Token = "0x2000419")]
public class SerializableMedalType : SerializableEnum<MedalType>
{
	[Token(Token = "0x6001769")]
	[Address(RVA = "0xBB93B8", Offset = "0xBB93B8", VA = "0xBB93B8")]
	public SerializableMedalType()
	{
	}
}
[Token(Token = "0x200041A")]
[RequireComponent(typeof(Camera))]
public class ShowBrainOnPreRender : MonoBehaviour
{
	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showBrain;

	[Token(Token = "0x600176A")]
	[Address(RVA = "0xBB9400", Offset = "0xBB9400", VA = "0xBB9400")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0xBB94FC", Offset = "0xBB94FC", VA = "0xBB94FC")]
	public ShowBrainOnPreRender()
	{
	}
}
[Token(Token = "0x200041B")]
[RequireComponent(typeof(Player))]
public class BotPlayer : MonoBehaviour
{
	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isActive;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Player _player;

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _head;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _headOffset;

	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SmoothVector3 _headDir;

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _gointTowardsWall;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SmoothVector3 _racketPos;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SmoothQuaternion _racketRot;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _ballIsPassingNearPlayer;

	[Token(Token = "0x600176C")]
	[Address(RVA = "0xBB9504", Offset = "0xBB9504", VA = "0xBB9504")]
	private void SetRacketPose(Vector3 hitPos, Vector3 ballPos, Vector3 headPos)
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0xBB9908", Offset = "0xBB9908", VA = "0xBB9908")]
	private void UpdateRacketPose(float dt)
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0xBB99D8", Offset = "0xBB99D8", VA = "0xBB99D8")]
	private void CopyRacketPose()
	{
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0xBB9BF4", Offset = "0xBB9BF4", VA = "0xBB9BF4")]
	private void MaybeHitTheBall()
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0xBBA3E0", Offset = "0xBBA3E0", VA = "0xBBA3E0")]
	private void UpdateHead(Vector3 headPos, Vector3 ballPos)
	{
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0xBBA548", Offset = "0xBBA548", VA = "0xBBA548")]
	private void HitTheBall(Vector3 headPos, Vector3 ballPos)
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0xBBB484", Offset = "0xBBB484", VA = "0xBBB484")]
	private void UpdateMe()
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0xBBB504", Offset = "0xBBB504", VA = "0xBBB504")]
	private void UpdateOpponent()
	{
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0xBBB5C0", Offset = "0xBBB5C0", VA = "0xBBB5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0xBBB7E4", Offset = "0xBBB7E4", VA = "0xBBB7E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0xBBB90C", Offset = "0xBBB90C", VA = "0xBBB90C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0xBBBA24", Offset = "0xBBBA24", VA = "0xBBBA24")]
	public BotPlayer()
	{
	}
}
[Token(Token = "0x200041C")]
public class FadeToBlackPostProcess : MonoBehaviour
{
	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material _material;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _fadeID;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<FadeToBlackPostProcess> _list;

	[Token(Token = "0x170003E4")]
	public static float fade
	{
		[Token(Token = "0x6001778")]
		[Address(RVA = "0xBBBB60", Offset = "0xBBBB60", VA = "0xBBBB60")]
		set
		{
		}
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0xBBBD28", Offset = "0xBBBD28", VA = "0xBBBD28")]
	public static void addToCamera(Camera cam)
	{
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0xBBBD2C", Offset = "0xBBBD2C", VA = "0xBBBD2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0xBBBF3C", Offset = "0xBBBF3C", VA = "0xBBBF3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0xBBBFBC", Offset = "0xBBBFBC", VA = "0xBBBFBC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0xBBC05C", Offset = "0xBBC05C", VA = "0xBBC05C")]
	public FadeToBlackPostProcess()
	{
	}
}
[Serializable]
[Token(Token = "0x200041D")]
public class GameplayStats
{
	[Serializable]
	[Token(Token = "0x200041E")]
	public struct Best
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int hitStreak;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int pointsPerShot;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float damagePerShot;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float hitAccuracy;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalPoints;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int numBoostsTaken;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalDamage;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numClutchSaves;
	}

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Best best;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int timePlayed;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numGamesPlayed;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int numWavesComplete;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int numRacketShots;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int numShotMisses;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int numPowerShots;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int numGutters;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int numTargetsDestroyed;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numBoostsTaken;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int numPortalsUsed;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int totalDamage;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numClutchSaves;

	[Token(Token = "0x600177F")]
	[Address(RVA = "0xBBC0F4", Offset = "0xBBC0F4", VA = "0xBBC0F4", Slot = "4")]
	public virtual void init()
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0xBBC0F8", Offset = "0xBBC0F8", VA = "0xBBC0F8", Slot = "5")]
	public virtual void updateRacketShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0xBBC0FC", Offset = "0xBBC0FC", VA = "0xBBC0FC")]
	public GameplayStats()
	{
	}
}
[Serializable]
[Token(Token = "0x200041F")]
public class GameplayStatsEx : GameplayStats
{
	[Token(Token = "0x4001901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MovingAverage avgHitAccuracy;

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MovingAverage avgDamagePerShot;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MovingAverage avgPointsPerShot;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MovingAverage avgPowershotUsage;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public MovingAverage avgGravitySlingUsage;

	[Token(Token = "0x6001782")]
	[Address(RVA = "0xBBC104", Offset = "0xBBC104", VA = "0xBBC104", Slot = "4")]
	public override void init()
	{
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0xBBC108", Offset = "0xBBC108", VA = "0xBBC108")]
	public void initWindows()
	{
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0xBBC1E8", Offset = "0xBBC1E8", VA = "0xBBC1E8", Slot = "5")]
	public override void updateRacketShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0xBBC334", Offset = "0xBBC334", VA = "0xBBC334")]
	public GameplayStatsEx()
	{
	}
}
[Token(Token = "0x2000420")]
public class Player : MonoBehaviour
{
	[Token(Token = "0x2000421")]
	private class SlowMotionRequest
	{
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject sender;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool globalTimeScale;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float slowMotionTarget;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float slowMotionRate;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xBBFEE0", Offset = "0xBBFEE0", VA = "0xBBFEE0")]
		public SlowMotionRequest()
		{
		}
	}

	[Token(Token = "0x2000422")]
	[CompilerGenerated]
	private sealed class <ScaleUpCo>d__72 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player <>4__this;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <time>5__2;

		[Token(Token = "0x170003F0")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0xBC2324", Offset = "0xBC2324", VA = "0xBC2324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xBC236C", Offset = "0xBC236C", VA = "0xBC236C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xBBED00", Offset = "0xBBED00", VA = "0xBBED00")]
		[DebuggerHidden]
		public <ScaleUpCo>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xBC223C", Offset = "0xBC223C", VA = "0xBC223C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xBC2240", Offset = "0xBC2240", VA = "0xBC2240", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xBC232C", Offset = "0xBC232C", VA = "0xBC232C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000423")]
	[CompilerGenerated]
	private sealed class <WaitForShotToFinalizeAndLogIt>d__73 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player <>4__this;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotInfo shot;

		[Token(Token = "0x170003F2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xBC2BAC", Offset = "0xBC2BAC", VA = "0xBC2BAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0xBC2BF4", Offset = "0xBC2BF4", VA = "0xBC2BF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xBBEDB8", Offset = "0xBBEDB8", VA = "0xBBEDB8")]
		[DebuggerHidden]
		public <WaitForShotToFinalizeAndLogIt>d__73(int <>1__state)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xBC23C8", Offset = "0xBC23C8", VA = "0xBC23C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xBC23CC", Offset = "0xBC23CC", VA = "0xBC23CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xBC2BB4", Offset = "0xBC2BB4", VA = "0xBC2BB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000424")]
	[CompilerGenerated]
	private sealed class <AttemptToSyncScores>d__76 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int remoteScore;

		[Token(Token = "0x170003F4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0xBC30E4", Offset = "0xBC30E4", VA = "0xBC30E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xBC312C", Offset = "0xBC312C", VA = "0xBC312C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xBBF054", Offset = "0xBBF054", VA = "0xBBF054")]
		[DebuggerHidden]
		public <AttemptToSyncScores>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xBC2C50", Offset = "0xBC2C50", VA = "0xBC2C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xBC2C54", Offset = "0xBC2C54", VA = "0xBC2C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xBC30EC", Offset = "0xBC30EC", VA = "0xBC30EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000425")]
	[CompilerGenerated]
	private sealed class <SmoothRotateCo>d__111 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Player <>4__this;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion initRot;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion destRot;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <timer>5__2;

		[Token(Token = "0x170003F6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xBC33D4", Offset = "0xBC33D4", VA = "0xBC33D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xBC341C", Offset = "0xBC341C", VA = "0xBC341C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xBC1A2C", Offset = "0xBC1A2C", VA = "0xBC1A2C")]
		[DebuggerHidden]
		public <SmoothRotateCo>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xBC3188", Offset = "0xBC3188", VA = "0xBC3188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xBC318C", Offset = "0xBC318C", VA = "0xBC318C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xBC33DC", Offset = "0xBC33DC", VA = "0xBC33DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000426")]
	[CompilerGenerated]
	private sealed class <AnimateScaleCo>d__118 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Player <>4__this;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float targetScale;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <initScale>5__2;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__3;

		[Token(Token = "0x170003F8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xBC366C", Offset = "0xBC366C", VA = "0xBC366C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xBC36B4", Offset = "0xBC36B4", VA = "0xBC36B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xBC1DE0", Offset = "0xBC1DE0", VA = "0xBC1DE0")]
		[DebuggerHidden]
		public <AnimateScaleCo>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xBC3478", Offset = "0xBC3478", VA = "0xBC3478", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xBC347C", Offset = "0xBC347C", VA = "0xBC347C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xBC3674", Offset = "0xBC3674", VA = "0xBC3674", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Player me;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Player opponent;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLocalPlayer;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float becomeVisibleScaleUpDuration;

	[NonSerialized]
	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerModel model;

	[NonSerialized]
	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerHandDetector _handDetector;

	[NonSerialized]
	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ReturnBallToPlayer _returnBallToPlayer;

	[NonSerialized]
	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _wantsRematch;

	[NonSerialized]
	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _timeOfLastBallLost;

	[NonSerialized]
	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BotPlayer bot;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _curTimeScaleVel;

	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _slowMotionActive;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SmoothVector3 _smoothHeadForwardDir;

	[NonSerialized]
	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool _approvedOpponentConnection;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ShotInfo _lastRacketShot;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<ShotInfo> _allGameShots;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static List<ShotInfo> mergedShotsFromBothPlayers;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _originalScale;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int _lanesChargeStreakCounter;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int _streakCounter;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SlowMotionRequest> _slowMotionRequests;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float _lastTimeScaleMultiplier;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static float _speedLevelProgress;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly Vector3 VR_ROOT_OFFSET;

	[NonSerialized]
	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool hasScaling;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _lastSlowMotionAmount;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool _shouldFadeToBlackFarFromDais;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool _didFadeToBlackLastFrame;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _timeSinceLastSnapTurn;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int _snapTurnCounter;

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int _snapTurnAbsCounter;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Quaternion _destRot;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private CoroutineHandle? _SmoothRotateCo;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _racketBaseScale;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static CoroutineHandle? _animateScaleCo;

	[Token(Token = "0x170003E5")]
	public PlayerID playerID
	{
		[Token(Token = "0x600178A")]
		[Address(RVA = "0xBBC7B8", Offset = "0xBBC7B8", VA = "0xBBC7B8")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x170003E6")]
	public static Player ballOwner
	{
		[Token(Token = "0x600178B")]
		[Address(RVA = "0xBB8E64", Offset = "0xBB8E64", VA = "0xBB8E64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003E7")]
	public static PlayerID BallOwnerID
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0xBB8ECC", Offset = "0xBB8ECC", VA = "0xBB8ECC")]
		get
		{
			return default(PlayerID);
		}
	}

	[Token(Token = "0x170003E8")]
	public static Player player1
	{
		[Token(Token = "0x600178D")]
		[Address(RVA = "0xBBC97C", Offset = "0xBBC97C", VA = "0xBBC97C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003E9")]
	public static Player player2
	{
		[Token(Token = "0x600178E")]
		[Address(RVA = "0xBBCA44", Offset = "0xBBCA44", VA = "0xBBCA44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003EA")]
	public ShotInfo lastRacketShot
	{
		[Token(Token = "0x600178F")]
		[Address(RVA = "0xBBCB0C", Offset = "0xBBCB0C", VA = "0xBBCB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170003EB")]
	public static int lanesChargeStreakCount
	{
		[Token(Token = "0x6001790")]
		[Address(RVA = "0xBBCB14", Offset = "0xBBCB14", VA = "0xBBCB14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170003EC")]
	public float currentGlobalTimeScale
	{
		[Token(Token = "0x6001795")]
		[Address(RVA = "0xBBCF10", Offset = "0xBBCF10", VA = "0xBBCF10")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001796")]
		[Address(RVA = "0xBBCF18", Offset = "0xBBCF18", VA = "0xBBCF18")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170003ED")]
	public static float TimeScaleMultiplier
	{
		[Token(Token = "0x6001797")]
		[Address(RVA = "0xBBCF20", Offset = "0xBBCF20", VA = "0xBBCF20")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001798")]
		[Address(RVA = "0xBBCF78", Offset = "0xBBCF78", VA = "0xBBCF78")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170003EE")]
	public static float SpeedLevelProgress
	{
		[Token(Token = "0x6001799")]
		[Address(RVA = "0xBBCFDC", Offset = "0xBBCFDC", VA = "0xBBCFDC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170003EF")]
	public float Scale
	{
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xBC1A54", Offset = "0xBC1A54", VA = "0xBC1A54")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xBC1A84", Offset = "0xBC1A84", VA = "0xBC1A84")]
		set
		{
		}
	}

	[Token(Token = "0x14000035")]
	public static event Action bigTotalShotWillAppearSoon
	{
		[Token(Token = "0x6001786")]
		[Address(RVA = "0xBBC448", Offset = "0xBBC448", VA = "0xBBC448")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001787")]
		[Address(RVA = "0xBBC524", Offset = "0xBBC524", VA = "0xBBC524")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000036")]
	public static event Action OnSnapTurn
	{
		[Token(Token = "0x6001788")]
		[Address(RVA = "0xBBC600", Offset = "0xBBC600", VA = "0xBBC600")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001789")]
		[Address(RVA = "0xBBC6DC", Offset = "0xBBC6DC", VA = "0xBBC6DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000037")]
	public event Action OnResetStreakCounter
	{
		[Token(Token = "0x6001792")]
		[Address(RVA = "0xBBCCFC", Offset = "0xBBCCFC", VA = "0xBBCCFC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001793")]
		[Address(RVA = "0xBBCD98", Offset = "0xBBCD98", VA = "0xBBCD98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000038")]
	public event Action<int> OnStreakIncreased
	{
		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xBBF07C", Offset = "0xBBF07C", VA = "0xBBF07C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xBBF12C", Offset = "0xBBF12C", VA = "0xBBF12C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000039")]
	public event Action<int, ShotInfo> OnStreakIncreasedShotInfo
	{
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xBBF1DC", Offset = "0xBBF1DC", VA = "0xBBF1DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xBBF28C", Offset = "0xBBF28C", VA = "0xBBF28C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0xBBCB6C", Offset = "0xBBCB6C", VA = "0xBBCB6C")]
	public static void SetLaneChargeInMP_Coop(int laneCharge)
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0xBBCE34", Offset = "0xBBCE34", VA = "0xBBCE34")]
	public void ResetStreakCounter()
	{
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0xBBD034", Offset = "0xBBD034", VA = "0xBBD034")]
	private void UpdateTimeScaleMultiplier()
	{
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0xBBD6B8", Offset = "0xBBD6B8", VA = "0xBBD6B8")]
	public void Relocate(Vector3 newPosition)
	{
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0xBBD8D4", Offset = "0xBBD8D4", VA = "0xBBD8D4")]
	public bool IsInPlayZone(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0xBBD940", Offset = "0xBBD940", VA = "0xBBD940")]
	public void UpdateAvatarColors()
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0xBBDA58", Offset = "0xBBDA58", VA = "0xBBDA58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0xBBDF6C", Offset = "0xBBDF6C", VA = "0xBBDF6C")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0xBBE0E0", Offset = "0xBBE0E0", VA = "0xBBE0E0")]
	public void GameReset()
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0xBBE950", Offset = "0xBBE950", VA = "0xBBE950")]
	public void PostSessionStats()
	{
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0xBBEBC0", Offset = "0xBBEBC0", VA = "0xBBEBC0")]
	public void SetLastRacketShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0xBBEBC8", Offset = "0xBBEBC8", VA = "0xBBEBC8")]
	public void ToggleVisiblity(bool visible, bool withScaling = true)
	{
	}

	[Token(Token = "0x60017A4")]
	[Address(RVA = "0xBBEC8C", Offset = "0xBBEC8C", VA = "0xBBEC8C")]
	[IteratorStateMachine(typeof(<ScaleUpCo>d__72))]
	private IEnumerator<float> ScaleUpCo()
	{
		return null;
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0xBBED28", Offset = "0xBBED28", VA = "0xBBED28")]
	[IteratorStateMachine(typeof(<WaitForShotToFinalizeAndLogIt>d__73))]
	private IEnumerator<float> WaitForShotToFinalizeAndLogIt(ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0xBBEDE0", Offset = "0xBBEDE0", VA = "0xBBEDE0")]
	public void ReceivedScoreSync(int remoteScore)
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0xBBEF14", Offset = "0xBBEF14", VA = "0xBBEF14")]
	public static ShotInfo GetLastShotFromOtherPlayer(PlayerID thisPlayerID)
	{
		return null;
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0xBBEEAC", Offset = "0xBBEEAC", VA = "0xBBEEAC")]
	[IteratorStateMachine(typeof(<AttemptToSyncScores>d__76))]
	private IEnumerator<float> AttemptToSyncScores(int remoteScore)
	{
		return null;
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0xBBF33C", Offset = "0xBBF33C", VA = "0xBBF33C")]
	public void IncreaseStreak(int amount = 1, [Optional] ShotInfo shotInfo)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0xBBF950", Offset = "0xBBF950", VA = "0xBBF950")]
	public void LogShot(ShotInfo shot)
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0xBBFA70", Offset = "0xBBFA70", VA = "0xBBFA70")]
	private void Start()
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0xBBA3BC", Offset = "0xBBA3BC", VA = "0xBBA3BC")]
	public Vector3 GetHeadPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0xBBFC58", Offset = "0xBBFC58", VA = "0xBBFC58")]
	public Vector3 GetHeadForwardDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0xBBFC7C", Offset = "0xBBFC7C", VA = "0xBBFC7C")]
	public Vector3 GetHeadRightDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0xBBFCA0", Offset = "0xBBFCA0", VA = "0xBBFCA0")]
	public Vector3 GetHeadForwardDir_Smooth()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0xBBFCC0", Offset = "0xBBFCC0", VA = "0xBBFCC0")]
	public void SetGlobalTimeScale(GameObject sender, float timeScale, float fRate = 0.2f)
	{
	}

	[Token(Token = "0x60017B5")]
	[Address(RVA = "0xBBFEE8", Offset = "0xBBFEE8", VA = "0xBBFEE8")]
	public void StartSlowMotion(GameObject sender, float fRequestedSlowMotion, float fRate = 0.2f)
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0xBC00B0", Offset = "0xBC00B0", VA = "0xBC00B0")]
	public void StopSlowMotion(GameObject sender)
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0xBC01CC", Offset = "0xBC01CC", VA = "0xBC01CC")]
	private void HandleSlowMotion()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0xBC074C", Offset = "0xBC074C", VA = "0xBC074C")]
	public float GetSlowMotionAmount()
	{
		return default(float);
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0xBC0788", Offset = "0xBC0788", VA = "0xBC0788")]
	private void MpFadeToBlackOnOpponentSide()
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0xBBE6FC", Offset = "0xBBE6FC", VA = "0xBBE6FC")]
	private void InitFadeToBlackFarFromDais()
	{
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0xBC0AA4", Offset = "0xBC0AA4", VA = "0xBC0AA4")]
	private void FadeToBlackFarFromDais()
	{
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0xBC0CD4", Offset = "0xBC0CD4", VA = "0xBC0CD4")]
	public static Vector3 RotatePoint(Vector3 point, Quaternion rot, bool ignoreFOV, out Quaternion q)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0xBC0FE0", Offset = "0xBC0FE0", VA = "0xBC0FE0")]
	private void Rotate(int dir)
	{
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0xBC15D0", Offset = "0xBC15D0", VA = "0xBC15D0")]
	private void Rotate(Quaternion wantedRot)
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0xBC1280", Offset = "0xBC1280", VA = "0xBC1280")]
	private void SnapRotate(float angle)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0xBC1350", Offset = "0xBC1350", VA = "0xBC1350")]
	private void SmoothRotate(float angle, float duration)
	{
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0xBC1954", Offset = "0xBC1954", VA = "0xBC1954")]
	[IteratorStateMachine(typeof(<SmoothRotateCo>d__111))]
	private IEnumerator<float> SmoothRotateCo(Transform root, Quaternion initRot, Quaternion destRot, float duration)
	{
		return null;
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0xBC1BF0", Offset = "0xBC1BF0", VA = "0xBC1BF0")]
	public void AnimateScale(float targetScale, float duration)
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0xBC1D58", Offset = "0xBC1D58", VA = "0xBC1D58")]
	[IteratorStateMachine(typeof(<AnimateScaleCo>d__118))]
	private IEnumerator<float> AnimateScaleCo(float targetScale, float duration)
	{
		return null;
	}

	[Token(Token = "0x60017C6")]
	[Address(RVA = "0xBC1E08", Offset = "0xBC1E08", VA = "0xBC1E08")]
	private void Update()
	{
	}

	[Token(Token = "0x60017C7")]
	[Address(RVA = "0xBC209C", Offset = "0xBC209C", VA = "0xBC209C")]
	public Player()
	{
	}
}
[Token(Token = "0x2000427")]
public class PlayerHandDetector : MonoBehaviour
{
	[Token(Token = "0x400194E")]
	private const int skipFrames = 9;

	[Token(Token = "0x400194F")]
	private const int histroyLength = 300;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int curFrame;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CyclicBuffer<float> history;

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0xBC3710", Offset = "0xBC3710", VA = "0xBC3710")]
	private void Start()
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0xBC3718", Offset = "0xBC3718", VA = "0xBC3718")]
	private void Update()
	{
	}

	[Token(Token = "0x60017EA")]
	[Address(RVA = "0xBC3AA0", Offset = "0xBC3AA0", VA = "0xBC3AA0")]
	public float EstimateHandedness()
	{
		return default(float);
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0xBC3BC8", Offset = "0xBC3BC8", VA = "0xBC3BC8")]
	public float EstimateHandedness_Normalized()
	{
		return default(float);
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0xBC3C24", Offset = "0xBC3C24", VA = "0xBC3C24")]
	public PlayerHandDetector()
	{
	}
}
[Token(Token = "0x2000428")]
public class PlayerModel : MonoBehaviour
{
	[Token(Token = "0x2000429")]
	public enum ModelLabel
	{
		[Token(Token = "0x4001975")]
		Me,
		[Token(Token = "0x4001976")]
		Opponent,
		[Token(Token = "0x4001977")]
		Mirror
	}

	[Token(Token = "0x200042A")]
	private struct Triplet
	{
		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject gameObject;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Renderer renderer;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarRenderer.Coat coat;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject p1;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer p1Renderer;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject p2;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Renderer p2Renderer;
	}

	[Token(Token = "0x200042B")]
	public enum Layers
	{
		[Token(Token = "0x4001980")]
		Avatar_Me,
		[Token(Token = "0x4001981")]
		Avatar_My_Head,
		[Token(Token = "0x4001982")]
		Avatar_Opponent,
		[Token(Token = "0x4001983")]
		Racket
	}

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerModel myModel;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PlayerModel opponentModel;

	[Token(Token = "0x4001954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static PlayerModel mirrorModel;

	[NonSerialized]
	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMine;

	[NonSerialized]
	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isOpponent;

	[NonSerialized]
	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isMirror;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ModelLabel modelLabel;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Customizations")]
	public AvatarSettings.AvatarLabel avatarLabel;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AvatarSettings.PrimaryCoats primaryCoat;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AvatarSettings.PrimaryCoats _primaryCoat;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AvatarSettings.SecondaryCoat secondaryCoat;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AvatarSettings.SecondaryCoat _secondaryCoat;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AvatarSettings.AvatarDefinition _definition;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TrailMaker.TrailDef[] overrideTrailDefs;

	[Token(Token = "0x4001960")]
	private const string PREF_KEY = "USE_DEFAULT_RACKET";

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _useDefaultRacket;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("Items")]
	private List<string> _itemIds;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Item_Base> _items;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("References")]
	public AvatarController avatar;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AvatarConfigurations avatarConfig;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RacketAnimator racket;

	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RacketModel racketModel;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RacketRigidBody racketRB;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform dais;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Untanglementer untangle;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RacketSwoosh swoosh;

	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform brain;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Pendant pendant;

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<string, Triplet> _triplets;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Transform> _tempList;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private HashSet<Transform> _tempHashSet;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<Layers, int> _layers;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<string> _keys;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _needToLoadItems;

	[Token(Token = "0x170003FA")]
	public bool useDefaultRacket
	{
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xBC3CB4", Offset = "0xBC3CB4", VA = "0xBC3CB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xBC3D3C", Offset = "0xBC3D3C", VA = "0xBC3D3C")]
		set
		{
		}
	}

	[Token(Token = "0x170003FB")]
	public bool NeedToLoadItems
	{
		[Token(Token = "0x6001800")]
		[Address(RVA = "0xBC6F04", Offset = "0xBC6F04", VA = "0xBC6F04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0xBC3D98", Offset = "0xBC3D98", VA = "0xBC3D98")]
	public static int GetLayer(Layers layer)
	{
		return default(int);
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0xBC3F20", Offset = "0xBC3F20", VA = "0xBC3F20")]
	public static void SetLayerToAllChildren(Transform root, Layers layer)
	{
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0xBC3F8C", Offset = "0xBC3F8C", VA = "0xBC3F8C")]
	private static void SetLayerToAllChildren(Transform obj, int layer)
	{
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0xBC4040", Offset = "0xBC4040", VA = "0xBC4040")]
	private void InitTriplates()
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0xBC45BC", Offset = "0xBC45BC", VA = "0xBC45BC")]
	private void UpdateTriplates(AvatarSettings.AvatarCoat coat)
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0xBC4DC0", Offset = "0xBC4DC0", VA = "0xBC4DC0")]
	private void LoadCoat(AvatarSettings.CoatLabel label, AvatarSettings.AvatarCoat[] coats, AvatarRenderer.Coat coatMask)
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0xBC5F38", Offset = "0xBC5F38", VA = "0xBC5F38")]
	private bool LoadPrimaryCoat(AvatarSettings.AvatarDefinition def)
	{
		return default(bool);
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0xBC5F9C", Offset = "0xBC5F9C", VA = "0xBC5F9C")]
	private bool LoadSecondaryCoat(AvatarSettings.AvatarDefinition def)
	{
		return default(bool);
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0xBC5FFC", Offset = "0xBC5FFC", VA = "0xBC5FFC")]
	private void LoadDefaultCoat(AvatarSettings.AvatarDefinition def)
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0xBC6038", Offset = "0xBC6038", VA = "0xBC6038")]
	private void RemoveAvatar(bool removeRacket = true)
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0xBC61B8", Offset = "0xBC61B8", VA = "0xBC61B8")]
	private void LoadAvatar()
	{
	}

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0xBC6380", Offset = "0xBC6380", VA = "0xBC6380")]
	private void LoadAvatar(AvatarSettings.AvatarLabel avatarLabel, bool withoutRacket = false)
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0xBC66AC", Offset = "0xBC66AC", VA = "0xBC66AC")]
	private void Debug_LoadFakeItems()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0xBC6BB8", Offset = "0xBC6BB8", VA = "0xBC6BB8")]
	private void InitAvatar(AvatarSettings.AvatarDefinition def, bool withoutRacket = false)
	{
	}

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0xBC6CA4", Offset = "0xBC6CA4", VA = "0xBC6CA4")]
	public Item_Base GetItem(string itemId)
	{
		return null;
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0xBC6D90", Offset = "0xBC6D90", VA = "0xBC6D90")]
	public void AddItem(string itemId)
	{
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0xBC6E74", Offset = "0xBC6E74", VA = "0xBC6E74")]
	public void RemoveItem(string itemId)
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0xBC6F0C", Offset = "0xBC6F0C", VA = "0xBC6F0C")]
	private void LoadItems()
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0xBC740C", Offset = "0xBC740C", VA = "0xBC740C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0xBC74F8", Offset = "0xBC74F8", VA = "0xBC74F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0xBC7570", Offset = "0xBC7570", VA = "0xBC7570")]
	private void Update()
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0xBC75D8", Offset = "0xBC75D8", VA = "0xBC75D8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0xBC7638", Offset = "0xBC7638", VA = "0xBC7638")]
	public PlayerModel()
	{
	}
}
[Token(Token = "0x200042F")]
public class ReturnBallToPlayer : MonoBehaviour
{
	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ReturnBallToPlayer inst;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Player _player;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Forehand Zone")]
	public float _forehandLengthMin;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _forehandLengthMax;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _forehandAngleMin;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _forehandAngleMax;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Backhand Zone")]
	public float _backhandLengthMin;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _backhandLengthMax;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _backhandAngleMin;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _backhandAngleMax;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Player Zone")]
	public float startingPlayerZoneRad;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float bouncPlayerZoneRadIncrease;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Floaters")]
	public float returnFromFloaterVelocityCoeff;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _numBouncesWithNoReturn;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool forceReturnOnNextBounce;

	[Token(Token = "0x600180F")]
	[Address(RVA = "0xBC79A4", Offset = "0xBC79A4", VA = "0xBC79A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0xBC7A9C", Offset = "0xBC7A9C", VA = "0xBC7A9C")]
	public static Vector3 GetVelocityToBall(bool forceReturn, out bool ballReturnedToPlayer, bool returnBallDirectlyToHand = false, bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0xBC8128", Offset = "0xBC8128", VA = "0xBC8128")]
	public static Vector3 GetPortalOutVelocity(bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0xBC8344", Offset = "0xBC8344", VA = "0xBC8344")]
	public static void ForceReturnOnNextBounce()
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0xBC839C", Offset = "0xBC839C", VA = "0xBC839C")]
	public Vector3 GetVelocityToRandomSpotInReturnZone(float rightOrLeft, float forehandAmount = 0f, bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0xBC8C48", Offset = "0xBC8C48", VA = "0xBC8C48")]
	private Vector3 GetPlayerHead(bool willTransferOwnership)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001815")]
	[Address(RVA = "0xBC8180", Offset = "0xBC8180", VA = "0xBC8180")]
	public Vector3 GetPortalReturnBallVelocity(bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001816")]
	[Address(RVA = "0xBC7B1C", Offset = "0xBC7B1C", VA = "0xBC7B1C")]
	public Vector3 GetReturnBallVelocity(bool forceReturn, bool returnBallDirectlyToHand, out bool ballReturnedToPlayer, bool willTransferOwnership = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001817")]
	[Address(RVA = "0xBC8F30", Offset = "0xBC8F30", VA = "0xBC8F30")]
	public ReturnBallToPlayer()
	{
	}
}
[Token(Token = "0x2000430")]
public class ShotInfo
{
	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static uint shotIndexCounter;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static uint opponentBit;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint shotUniqueIndex;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint shotUniqueIndexSerial;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player hittingPlayer;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Ball hittingBall;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int numBonusesTaken;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int numBonusesTaken_PreDealDamage;

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numBossesDestroyed;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int numBossesDestroyed_PreDealDamage;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int numDamageDealt;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int numDamageDealt_PreDealDamage;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hitFirstBrickOrFloater;

	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool hitAnyBrick;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool ballReturnedToPlayer;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool firstHitNonEmpty;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool enterGutter;

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int pointsEarnedRaw;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int pointContributions;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numAttachedLivingPellets;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int numBounces;

	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int numSlides;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool shotFromRacket;

	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool foreHand;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool wasPowerShot;

	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mpLastTargetIdBonusTook;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool startedAsPowershot;

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool usedGravitySlingBefore;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	public bool startedAsMidPowerShot;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool waitingToFinalize;

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool iceBreaker;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool waitingForIceToBreak;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _chargeCounter;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _isChargedActive;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<uint, int> targetIDDamage;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 ballLocationWhenShotEnds;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float gameTimeWhenCreated;

	[Token(Token = "0x40019BC")]
	public const int SHOT_INFO_POOL_SIZE = 4096;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<ShotInfo> _shotPool;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CoroutineHandle? _logShotCoroutine;

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool shotFinalized;

	[NonSerialized]
	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Floater hittingFloater;

	[Token(Token = "0x170003FC")]
	public int pointsEarned
	{
		[Token(Token = "0x6001818")]
		[Address(RVA = "0xBBC2D4", Offset = "0xBBC2D4", VA = "0xBBC2D4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170003FD")]
	public int chargeCounter
	{
		[Token(Token = "0x6001819")]
		[Address(RVA = "0xBC8F50", Offset = "0xBC8F50", VA = "0xBC8F50")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170003FE")]
	public bool isCharged
	{
		[Token(Token = "0x600181A")]
		[Address(RVA = "0xBC8F58", Offset = "0xBC8F58", VA = "0xBC8F58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170003FF")]
	public bool isExpectingDamage
	{
		[Token(Token = "0x600181E")]
		[Address(RVA = "0xBC30B4", Offset = "0xBC30B4", VA = "0xBC30B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000400")]
	public bool canFinalize
	{
		[Token(Token = "0x600181F")]
		[Address(RVA = "0xBC27C8", Offset = "0xBC27C8", VA = "0xBC27C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000401")]
	public bool remoteShot
	{
		[Token(Token = "0x600182C")]
		[Address(RVA = "0xBC2AD4", Offset = "0xBC2AD4", VA = "0xBC2AD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003A")]
	public static event Action<ShotInfo> OnShotFinalized
	{
		[Token(Token = "0x6001829")]
		[Address(RVA = "0xBC9A64", Offset = "0xBC9A64", VA = "0xBC9A64")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600182A")]
		[Address(RVA = "0xBC9B58", Offset = "0xBC9B58", VA = "0xBC9B58")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0xBC8F78", Offset = "0xBC8F78", VA = "0xBC8F78")]
	public void initCharge(int count, bool chargeIsFromGutter = false)
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0xBC8FAC", Offset = "0xBC8FAC", VA = "0xBC8FAC")]
	public void decrementCharge()
	{
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0xBC8FE8", Offset = "0xBC8FE8", VA = "0xBC8FE8")]
	public void deactivateCharge()
	{
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0xBBDE0C", Offset = "0xBBDE0C", VA = "0xBBDE0C")]
	public static void CreatePool()
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0xBC90AC", Offset = "0xBC90AC", VA = "0xBC90AC")]
	public void DebugLog(bool debugCreate = false)
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0xBBE530", Offset = "0xBBE530", VA = "0xBBE530")]
	public static ShotInfo CreateShot(Player p, Ball b, bool racketShot = true, bool foreHand = true)
	{
		return null;
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0xBBE3D8", Offset = "0xBBE3D8", VA = "0xBBE3D8")]
	public void ReturnShot()
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0xBC998C", Offset = "0xBC998C", VA = "0xBC998C")]
	private void Clear()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0xBC9010", Offset = "0xBC9010", VA = "0xBC9010")]
	private ShotInfo()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0xBC96DC", Offset = "0xBC96DC", VA = "0xBC96DC")]
	private void Init(Player p, Ball b, bool racketShot, bool foreHandShot = true)
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0xBBE37C", Offset = "0xBBE37C", VA = "0xBBE37C")]
	public static void GameReset()
	{
	}

	[Token(Token = "0x6001828")]
	[Address(RVA = "0xBC9A48", Offset = "0xBC9A48", VA = "0xBC9A48")]
	public void Log()
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0xBC28F4", Offset = "0xBC28F4", VA = "0xBC28F4")]
	public void FinalizeShot()
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0xBCA8D8", Offset = "0xBCA8D8", VA = "0xBCA8D8")]
	public void HitBrick(Brick brick, SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0xBCAA5C", Offset = "0xBCAA5C", VA = "0xBCAA5C")]
	public void HitFloater(Floater floater)
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0xBCAAA4", Offset = "0xBCAAA4", VA = "0xBCAAA4")]
	public void BallBounced()
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0xBCA5CC", Offset = "0xBCA5CC", VA = "0xBCA5CC")]
	public int GetNumDestroyedBosses(bool preDealDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0xBCAAB4", Offset = "0xBCAAB4", VA = "0xBCAAB4")]
	public void DestroyedBoss(bool preDealDamage)
	{
	}

	[Token(Token = "0x6001832")]
	[Address(RVA = "0xBBC2BC", Offset = "0xBBC2BC", VA = "0xBBC2BC")]
	public int GetNumDamageDealt(bool preDealDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0xBCABA0", Offset = "0xBCABA0", VA = "0xBCABA0")]
	public void IncrementDamageDealt(bool preDealDamage)
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0xBCAC44", Offset = "0xBCAC44", VA = "0xBCAC44")]
	public int GetConsecutiveBonuses(bool preDealDamage)
	{
		return default(int);
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0xBCAC5C", Offset = "0xBCAC5C", VA = "0xBCAC5C")]
	public void IncrementConsecutiveBonus(bool preDealDamage)
	{
	}
}
[Token(Token = "0x2000431")]
public class StatsManager : MonoBehaviour
{
	[Token(Token = "0x2000432")]
	public struct MultiplayerStats
	{
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Player leadingPlayer;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float lastLeadSwitchTime;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float timeP1InLead;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float timeP2InLead;

		[Token(Token = "0x17000408")]
		public float percentTimeP1InLead
		{
			[Token(Token = "0x600185A")]
			[Address(RVA = "0xBCDF34", Offset = "0xBCDF34", VA = "0xBCDF34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000409")]
		public float percentTimeP2InLead
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0xBCDF50", Offset = "0xBCDF50", VA = "0xBCDF50")]
			get
			{
				return default(float);
			}
		}
	}

	[Token(Token = "0x2000433")]
	private struct ClutchSave
	{
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool inCriticalMode;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float gameTimeCriticalStarted;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float lastGameTimeOverNominal;
	}

	[Token(Token = "0x2000434")]
	[CompilerGenerated]
	private sealed class <statsToUpdate>d__24 : IEnumerable<GameplayStats>, IEnumerable, IEnumerator<GameplayStats>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameplayStats <>2__current;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool me;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool <>3__me;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool includingCurrentGame;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool <>3__includingCurrentGame;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StatsManager <>4__this;

		[Token(Token = "0x1700040A")]
		private GameplayStats System.Collections.Generic.IEnumerator<GameplayStats>.Current
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0xBCE1E4", Offset = "0xBCE1E4", VA = "0xBCE1E4", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001861")]
			[Address(RVA = "0xBCE22C", Offset = "0xBCE22C", VA = "0xBCE22C", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xBCB024", Offset = "0xBCB024", VA = "0xBCB024")]
		[DebuggerHidden]
		public <statsToUpdate>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xBCDF6C", Offset = "0xBCDF6C", VA = "0xBCDF6C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xBCDF70", Offset = "0xBCDF70", VA = "0xBCDF70", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xBCE1EC", Offset = "0xBCE1EC", VA = "0xBCE1EC", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xBCE234", Offset = "0xBCE234", VA = "0xBCE234", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<GameplayStats> System.Collections.Generic.IEnumerable<GameplayStats>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xBCE2F0", Offset = "0xBCE2F0", VA = "0xBCE2F0", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000435")]
	[CompilerGenerated]
	private sealed class <saveSetStatsCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatsManager <>4__this;

		[Token(Token = "0x1700040C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0xBCE40C", Offset = "0xBCE40C", VA = "0xBCE40C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700040D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0xBCE454", Offset = "0xBCE454", VA = "0xBCE454", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xBCB804", Offset = "0xBCB804", VA = "0xBCB804")]
		[DebuggerHidden]
		public <saveSetStatsCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xBCE2F4", Offset = "0xBCE2F4", VA = "0xBCE2F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xBCE2F8", Offset = "0xBCE2F8", VA = "0xBCE2F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xBCE414", Offset = "0xBCE414", VA = "0xBCE414", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameplayStatsEx _currentGameStats;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameplayStats.Best _bestModeStatsUntilThisGame;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameplayStats.Best _bestSetStatsUntilThisGame;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameplayStatsEx _currentGameOpponentStats;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MultiplayerStats _multiplayerStats;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StatsManager inst;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<float> onClutchSave;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isRoundInProgress;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private ClutchSave _clutchSave;

	[Token(Token = "0x17000402")]
	public static GameplayStatsEx currentGameStats
	{
		[Token(Token = "0x6001837")]
		[Address(RVA = "0xBCAD5C", Offset = "0xBCAD5C", VA = "0xBCAD5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000403")]
	public static GameplayStats.Best bestModeStatsUntilThisGame
	{
		[Token(Token = "0x6001838")]
		[Address(RVA = "0xBCADB0", Offset = "0xBCADB0", VA = "0xBCADB0")]
		get
		{
			return default(GameplayStats.Best);
		}
	}

	[Token(Token = "0x17000404")]
	public static GameplayStats.Best bestSetStatsUntilThisGame
	{
		[Token(Token = "0x6001839")]
		[Address(RVA = "0xBCAE0C", Offset = "0xBCAE0C", VA = "0xBCAE0C")]
		get
		{
			return default(GameplayStats.Best);
		}
	}

	[Token(Token = "0x17000405")]
	public static GameplayStatsEx currentGameOpponentStats
	{
		[Token(Token = "0x600183A")]
		[Address(RVA = "0xBCAE68", Offset = "0xBCAE68", VA = "0xBCAE68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000406")]
	public static MultiplayerStats multiplayerStats
	{
		[Token(Token = "0x600183B")]
		[Address(RVA = "0xBCAEBC", Offset = "0xBCAEBC", VA = "0xBCAEBC")]
		get
		{
			return default(MultiplayerStats);
		}
	}

	[Token(Token = "0x17000407")]
	private PlayerProfileData myProfileData
	{
		[Token(Token = "0x600183D")]
		[Address(RVA = "0xBCAF78", Offset = "0xBCAF78", VA = "0xBCAF78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600183C")]
	[Address(RVA = "0xBCAF20", Offset = "0xBCAF20", VA = "0xBCAF20")]
	private void Awake()
	{
	}

	[Token(Token = "0x600183E")]
	[Address(RVA = "0xBCAF80", Offset = "0xBCAF80", VA = "0xBCAF80")]
	[IteratorStateMachine(typeof(<statsToUpdate>d__24))]
	private IEnumerable<GameplayStats> statsToUpdate(bool me, bool includingCurrentGame = true)
	{
		return null;
	}

	[Token(Token = "0x600183F")]
	[Address(RVA = "0xBCB058", Offset = "0xBCB058", VA = "0xBCB058")]
	public GameplayStats getCurrentModeStats()
	{
		return null;
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0xBCB274", Offset = "0xBCB274", VA = "0xBCB274")]
	public GameplayStats getCurrentSetStats()
	{
		return null;
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0xBCB600", Offset = "0xBCB600", VA = "0xBCB600")]
	public void onMatchStart()
	{
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0xBCB784", Offset = "0xBCB784", VA = "0xBCB784")]
	[IteratorStateMachine(typeof(<saveSetStatsCo>d__28))]
	private IEnumerator<float> saveSetStatsCo()
	{
		return null;
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0xBCB7F8", Offset = "0xBCB7F8", VA = "0xBCB7F8")]
	public void onRoundStart()
	{
	}

	[Token(Token = "0x6001844")]
	[Address(RVA = "0xBCB82C", Offset = "0xBCB82C", VA = "0xBCB82C")]
	public void onRoundOver()
	{
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0xBBEAD0", Offset = "0xBBEAD0", VA = "0xBBEAD0")]
	public void onGameOver(int numRacketShots)
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0xBCC024", Offset = "0xBCC024", VA = "0xBCC024")]
	private void savePerMatchBests(int numRacketShots)
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0xBCC4E4", Offset = "0xBCC4E4", VA = "0xBCC4E4")]
	public void onArenaShutdown()
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0xBCBA48", Offset = "0xBCBA48", VA = "0xBCBA48")]
	public void countTimePlayed(int timePlayed)
	{
	}

	[Token(Token = "0x6001849")]
	[Address(RVA = "0xBCBD38", Offset = "0xBCBD38", VA = "0xBCBD38")]
	public void countGamePlayed()
	{
	}

	[Token(Token = "0x600184A")]
	[Address(RVA = "0xBCC50C", Offset = "0xBCC50C", VA = "0xBCC50C")]
	public void countWaveComplete()
	{
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0xBC9C4C", Offset = "0xBC9C4C", VA = "0xBC9C4C")]
	public void countRacketShotEx(ShotInfo shot)
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0xBC9FEC", Offset = "0xBC9FEC", VA = "0xBC9FEC")]
	public void countRacketShot(bool me)
	{
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0xBCA2DC", Offset = "0xBCA2DC", VA = "0xBCA2DC")]
	public void countRacketShotMiss(bool me)
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0xBCC7F8", Offset = "0xBCC7F8", VA = "0xBCC7F8")]
	public void countPowerShot(bool me)
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0xBCCAE8", Offset = "0xBCCAE8", VA = "0xBCCAE8")]
	public void countGutterUse(bool me)
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0xBCCDD8", Offset = "0xBCCDD8", VA = "0xBCCDD8")]
	public void countTargetDestroyed(bool me)
	{
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0xBCD0C8", Offset = "0xBCD0C8", VA = "0xBCD0C8")]
	public void countBoostTaken(bool me)
	{
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0xBCD3B8", Offset = "0xBCD3B8", VA = "0xBCD3B8")]
	public void countDownerTaken(bool me)
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0xBCD3BC", Offset = "0xBCD3BC", VA = "0xBCD3BC")]
	public void countPortalUse(bool me)
	{
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0xBCA5E4", Offset = "0xBCA5E4", VA = "0xBCA5E4")]
	public void countDamage(bool me, int damage)
	{
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0xBCD6AC", Offset = "0xBCD6AC", VA = "0xBCD6AC")]
	private void countClutchSave(Player player, float timeInRisk)
	{
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0xBBF658", Offset = "0xBBF658", VA = "0xBBF658")]
	public void updateMaxHitStreak(bool me, int hitStreak)
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0xBCDAA4", Offset = "0xBCDAA4", VA = "0xBCDAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0xBCB8CC", Offset = "0xBCB8CC", VA = "0xBCB8CC")]
	private void onLeadingPlayerChanged(Player newLeadingPlayer, Player endedLeadingPlayer)
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0xBCDF2C", Offset = "0xBCDF2C", VA = "0xBCDF2C")]
	public StatsManager()
	{
	}
}
[Token(Token = "0x2000436")]
public abstract class BasePowerup : MonoBehaviour
{
	[Token(Token = "0x2000437")]
	public enum State
	{
		[Token(Token = "0x40019EA")]
		OnFloater,
		[Token(Token = "0x40019EB")]
		Active,
		[Token(Token = "0x40019EC")]
		Removed
	}

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Player _owningPlayer;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private State _state;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<BasePowerup> _internalActivePowerups;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<PowerupType, BasePowerup> _latestActiveByType;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public SyncGameEvents.PowerupRemovedEvent _syncGameEvents_PowerupRemovedEvent;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint _id;

	[Token(Token = "0x40019E6")]
	public const float TIME_BEFORE_END_TO_PLAY_SOUND = 4f;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float _timer;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected bool _playedCloseToEndSound;

	[Token(Token = "0x1700040E")]
	public virtual Player owningPlayer
	{
		[Token(Token = "0x600186A")]
		[Address(RVA = "0xBCE4B0", Offset = "0xBCE4B0", VA = "0xBCE4B0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600186B")]
		[Address(RVA = "0xBCE540", Offset = "0xBCE540", VA = "0xBCE540")]
		private set
		{
		}
	}

	[Token(Token = "0x1700040F")]
	public Floater floater
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xBCE548", Offset = "0xBCE548", VA = "0xBCE548")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600186D")]
		[Address(RVA = "0xBCE550", Offset = "0xBCE550", VA = "0xBCE550")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000410")]
	public abstract PowerupType type
	{
		[Token(Token = "0x600186E")]
		get;
	}

	[Token(Token = "0x17000411")]
	public State state
	{
		[Token(Token = "0x600186F")]
		[Address(RVA = "0xBCE558", Offset = "0xBCE558", VA = "0xBCE558")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000412")]
	public bool IsLatest
	{
		[Token(Token = "0x6001876")]
		[Address(RVA = "0xBCE634", Offset = "0xBCE634", VA = "0xBCE634")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000413")]
	public uint id
	{
		[Token(Token = "0x6001877")]
		[Address(RVA = "0xBCE6DC", Offset = "0xBCE6DC", VA = "0xBCE6DC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1400003B")]
	public static event Action<Player> OnFloaterTaken
	{
		[Token(Token = "0x600187F")]
		[Address(RVA = "0xBCEF08", Offset = "0xBCEF08", VA = "0xBCEF08")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001880")]
		[Address(RVA = "0xBCEFFC", Offset = "0xBCEFFC", VA = "0xBCEFFC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003C")]
	public static event Action<Player, BasePowerup> OnPowerupTaken
	{
		[Token(Token = "0x6001881")]
		[Address(RVA = "0xBCF0F0", Offset = "0xBCF0F0", VA = "0xBCF0F0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001882")]
		[Address(RVA = "0xBCF1E4", Offset = "0xBCF1E4", VA = "0xBCF1E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001870")]
	protected abstract void init();

	[Token(Token = "0x6001871")]
	protected abstract void activate();

	[Token(Token = "0x6001872")]
	protected abstract void cleanup();

	[Token(Token = "0x6001873")]
	[Address(RVA = "0xBC05F0", Offset = "0xBC05F0", VA = "0xBC05F0")]
	public static bool isActiveForAnyPlayer(PowerupType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0xBC8DB4", Offset = "0xBC8DB4", VA = "0xBC8DB4")]
	public static bool isActiveForPlayer(PowerupType type, Player p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0xBCE560", Offset = "0xBCE560", VA = "0xBCE560")]
	public static BasePowerup GetLatestActive(PowerupType type)
	{
		return null;
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0xBCE6E4", Offset = "0xBCE6E4", VA = "0xBCE6E4", Slot = "9")]
	public virtual void onHitFromNetwork(SyncGameEvents.FloaterHitEvent floaterHitEvent)
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0xBCEAC4", Offset = "0xBCEAC4", VA = "0xBCEAC4", Slot = "10")]
	protected virtual void deserializeFromNetwork(uint uParam)
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0xBCEAC8", Offset = "0xBCEAC8", VA = "0xBCEAC8", Slot = "11")]
	public virtual void serializeToNetwork(out uint uParam)
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0xBCEAD0", Offset = "0xBCEAD0", VA = "0xBCEAD0", Slot = "12")]
	public virtual void onRemovedFromNetwork(SyncGameEvents.PowerupRemovedEvent powerupRemovedEvent)
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0xBCEDC0", Offset = "0xBCEDC0", VA = "0xBCEDC0")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x600187D")]
	[Address(RVA = "0xBCEAD8", Offset = "0xBCEAD8", VA = "0xBCEAD8")]
	public void remove(bool dontSendSyncEvents = false)
	{
	}

	[Token(Token = "0x600187E")]
	[Address(RVA = "0xBCEDC8", Offset = "0xBCEDC8", VA = "0xBCEDC8")]
	public void onFloaterCreated(Floater floater, uint id)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0xBCE764", Offset = "0xBCE764", VA = "0xBCE764")]
	public void onFloaterTaken(Player player)
	{
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0xBCF2D8", Offset = "0xBCF2D8", VA = "0xBCF2D8")]
	protected void UpdateTimer(float duration)
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0xBCF340", Offset = "0xBCF340", VA = "0xBCF340")]
	protected void UpdateShouldPlaySound(float duration)
	{
	}

	[Token(Token = "0x6001886")]
	[Address(RVA = "0xBCF494", Offset = "0xBCF494", VA = "0xBCF494")]
	protected BasePowerup()
	{
	}
}
[Token(Token = "0x2000438")]
public class PelletHitLight : MonoBehaviour
{
	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public MeshRenderer _closeGlow;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public MeshRenderer _farGlow;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform _transform;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color _farGlowDefaultColor;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color _closeGlowDefaultColor;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float fadeInTime;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float fadeOutTime;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _effectTime;

	[Token(Token = "0x6001888")]
	[Address(RVA = "0xBCF600", Offset = "0xBCF600", VA = "0xBCF600")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0xBCF810", Offset = "0xBCF810", VA = "0xBCF810")]
	public void Init()
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0xBCF870", Offset = "0xBCF870", VA = "0xBCF870")]
	private void Update()
	{
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0xBCFA20", Offset = "0xBCFA20", VA = "0xBCFA20")]
	public PelletHitLight()
	{
	}
}
[Token(Token = "0x2000439")]
public class PowerupBlasterMaze : BasePowerup
{
	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PowerupBlasterMaze lastInst;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _randSeed;

	[Token(Token = "0x17000414")]
	public override PowerupType type
	{
		[Token(Token = "0x600188C")]
		[Address(RVA = "0xBCFA34", Offset = "0xBCFA34", VA = "0xBCFA34", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0xBCFA3C", Offset = "0xBCFA3C", VA = "0xBCFA3C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0xBCFA60", Offset = "0xBCFA60", VA = "0xBCFA60", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0xBCFB80", Offset = "0xBCFB80", VA = "0xBCFB80", Slot = "10")]
	protected override void deserializeFromNetwork(uint uParam)
	{
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0xBCFB88", Offset = "0xBCFB88", VA = "0xBCFB88", Slot = "11")]
	public override void serializeToNetwork(out uint uParam)
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0xBCFB94", Offset = "0xBCFB94", VA = "0xBCFB94", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001892")]
	[Address(RVA = "0xBCFDB8", Offset = "0xBCFDB8", VA = "0xBCFDB8")]
	private void OnWaveEnded(string _, int i)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0xBCFDC0", Offset = "0xBCFDC0", VA = "0xBCFDC0")]
	public PowerupBlasterMaze()
	{
	}
}
[Token(Token = "0x200043A")]
public class PowerupGodMode : BasePowerup
{
	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Space]
	[Header("Super Booster params")]
	public float immuneDuration;

	[Token(Token = "0x17000415")]
	public static bool isActive
	{
		[Token(Token = "0x6001894")]
		[Address(RVA = "0xBBA4F8", Offset = "0xBBA4F8", VA = "0xBBA4F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000416")]
	public override PowerupType type
	{
		[Token(Token = "0x6001895")]
		[Address(RVA = "0xBCFE14", Offset = "0xBCFE14", VA = "0xBCFE14", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0xBCFE1C", Offset = "0xBCFE1C", VA = "0xBCFE1C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0xBCFE20", Offset = "0xBCFE20", VA = "0xBCFE20", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0xBCFED8", Offset = "0xBCFED8", VA = "0xBCFED8", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001899")]
	[Address(RVA = "0xBCFF5C", Offset = "0xBCFF5C", VA = "0xBCFF5C")]
	private void Update()
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0xBCFF64", Offset = "0xBCFF64", VA = "0xBCFF64")]
	public PowerupGodMode()
	{
	}
}
[Token(Token = "0x200043B")]
public class PowerupHyperspace : BasePowerup
{
	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<PowerupHyperspace> activePowerups;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Time Wrap params")]
	[Space]
	public float duration;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeScale;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material arenaBrickRefraction;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color arenaReflectionsMultiplier;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color arenaLightsMultiplier;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float fadeDuration;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material sppMaterialArcade;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material sppMaterialElse;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _fadeParam;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static PowerupHyperspace _latestActive;

	[Token(Token = "0x17000417")]
	public static bool isActive
	{
		[Token(Token = "0x600189B")]
		[Address(RVA = "0xBCFFC0", Offset = "0xBCFFC0", VA = "0xBCFFC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000418")]
	public static float TimeScaleOffset
	{
		[Token(Token = "0x600189C")]
		[Address(RVA = "0xBC0680", Offset = "0xBC0680", VA = "0xBC0680")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000419")]
	public override PowerupType type
	{
		[Token(Token = "0x600189D")]
		[Address(RVA = "0xBD0010", Offset = "0xBD0010", VA = "0xBD0010", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0xBD0018", Offset = "0xBD0018", VA = "0xBD0018", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0xBD001C", Offset = "0xBD001C", VA = "0xBD001C", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0xBD01E0", Offset = "0xBD01E0", VA = "0xBD01E0", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0xBD02F8", Offset = "0xBD02F8", VA = "0xBD02F8")]
	private void onGameInitialized()
	{
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0xBD0300", Offset = "0xBD0300", VA = "0xBD0300")]
	private static PowerupHyperspace getMostActive()
	{
		return null;
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0xBD04E8", Offset = "0xBD04E8", VA = "0xBD04E8")]
	public static void ManipulateArenaColors(ref Color currentReflectionColor, ref Color currentLightColor)
	{
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0xBD05B4", Offset = "0xBD05B4", VA = "0xBD05B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0xBD0754", Offset = "0xBD0754", VA = "0xBD0754")]
	public PowerupHyperspace()
	{
	}
}
[Token(Token = "0x200043C")]
public class PowerupIceBreaker : BasePowerup
{
	[Token(Token = "0x200043D")]
	public class Ice
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshRenderer renderer;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShotInfo freezeShot;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 explosionPos;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Target target;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FreezeState freezeState;

		[Token(Token = "0x1700041D")]
		public bool IsOrWillBeFrozen
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xBD2190", Offset = "0xBD2190", VA = "0xBD2190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xBD21B4", Offset = "0xBD21B4", VA = "0xBD21B4")]
		public Ice(Brick brick)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xBD223C", Offset = "0xBD223C", VA = "0xBD223C")]
		public void Hide()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xBD2280", Offset = "0xBD2280", VA = "0xBD2280")]
		public void DebugDraw()
		{
		}
	}

	[Token(Token = "0x200043E")]
	public enum FreezeState
	{
		[Token(Token = "0x4001A17")]
		None,
		[Token(Token = "0x4001A18")]
		Scheduled,
		[Token(Token = "0x4001A19")]
		Freezing,
		[Token(Token = "0x4001A1A")]
		Frozen,
		[Token(Token = "0x4001A1B")]
		Melting,
		[Token(Token = "0x4001A1C")]
		Exploding
	}

	[Token(Token = "0x200043F")]
	[CompilerGenerated]
	private sealed class <AnimateIccicles>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Ball ball;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PowerupIceBreaker <>4__this;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool reverse;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform <trans>5__2;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__3;

		[Token(Token = "0x1700041E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xBD24C0", Offset = "0xBD24C0", VA = "0xBD24C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700041F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xBD2508", Offset = "0xBD2508", VA = "0xBD2508", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xBD22D0", Offset = "0xBD22D0", VA = "0xBD22D0")]
		[DebuggerHidden]
		public <AnimateIccicles>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xBD22F8", Offset = "0xBD22F8", VA = "0xBD22F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xBD22FC", Offset = "0xBD22FC", VA = "0xBD22FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xBD24C8", Offset = "0xBD24C8", VA = "0xBD24C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000440")]
	[CompilerGenerated]
	private sealed class <ExplodeCo>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick first;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotInfo shot;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <hittingPlayerCount>5__2;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <totalBricksCount>5__3;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Brick <brick>5__4;

		[Token(Token = "0x17000420")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018D1")]
			[Address(RVA = "0xBD2BF0", Offset = "0xBD2BF0", VA = "0xBD2BF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000421")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xBD2C38", Offset = "0xBD2C38", VA = "0xBD2C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xBD2564", Offset = "0xBD2564", VA = "0xBD2564")]
		[DebuggerHidden]
		public <ExplodeCo>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xBD258C", Offset = "0xBD258C", VA = "0xBD258C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xBD2590", Offset = "0xBD2590", VA = "0xBD2590", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xBD2BF8", Offset = "0xBD2BF8", VA = "0xBD2BF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000441")]
	[CompilerGenerated]
	private sealed class <ExplodeBrickCo>d__33 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick brick;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShotInfo shot;

		[Token(Token = "0x17000422")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018D7")]
			[Address(RVA = "0xBD3068", Offset = "0xBD3068", VA = "0xBD3068", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0xBD30B0", Offset = "0xBD30B0", VA = "0xBD30B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xBD2C94", Offset = "0xBD2C94", VA = "0xBD2C94")]
		[DebuggerHidden]
		public <ExplodeBrickCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xBD2CBC", Offset = "0xBD2CBC", VA = "0xBD2CBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xBD2CC0", Offset = "0xBD2CC0", VA = "0xBD2CC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xBD3070", Offset = "0xBD3070", VA = "0xBD3070", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000442")]
	[CompilerGenerated]
	private sealed class <FreezeCo>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Brick <brick>5__2;

		[Token(Token = "0x17000424")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0xBD3788", Offset = "0xBD3788", VA = "0xBD3788", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0xBD37D0", Offset = "0xBD37D0", VA = "0xBD37D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xBD310C", Offset = "0xBD310C", VA = "0xBD310C")]
		[DebuggerHidden]
		public <FreezeCo>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xBD3134", Offset = "0xBD3134", VA = "0xBD3134", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xBD3138", Offset = "0xBD3138", VA = "0xBD3138", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xBD3790", Offset = "0xBD3790", VA = "0xBD3790", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000443")]
	[CompilerGenerated]
	private sealed class <FreezeBrickCo>d__41 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick brick;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <m>5__2;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x17000426")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018E3")]
			[Address(RVA = "0xBD3B44", Offset = "0xBD3B44", VA = "0xBD3B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xBD3B8C", Offset = "0xBD3B8C", VA = "0xBD3B8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xBD382C", Offset = "0xBD382C", VA = "0xBD382C")]
		[DebuggerHidden]
		public <FreezeBrickCo>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xBD3854", Offset = "0xBD3854", VA = "0xBD3854", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xBD3858", Offset = "0xBD3858", VA = "0xBD3858", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xBD3B4C", Offset = "0xBD3B4C", VA = "0xBD3B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000444")]
	[CompilerGenerated]
	private sealed class <MeltCo>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HexTile[] <tiles>5__2;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__3;

		[Token(Token = "0x17000428")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018E9")]
			[Address(RVA = "0xBD3F24", Offset = "0xBD3F24", VA = "0xBD3F24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0xBD3F6C", Offset = "0xBD3F6C", VA = "0xBD3F6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xBD3BE8", Offset = "0xBD3BE8", VA = "0xBD3BE8")]
		[DebuggerHidden]
		public <MeltCo>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xBD3C10", Offset = "0xBD3C10", VA = "0xBD3C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xBD3C14", Offset = "0xBD3C14", VA = "0xBD3C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xBD3F2C", Offset = "0xBD3F2C", VA = "0xBD3F2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float duration;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material _material;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _RevealID;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static CoroutineHandle? _animateIcciclesCo;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _originalScale;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static GameObject _particlesPrefab;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Queue<Brick> _explodeFrontier;

	[Token(Token = "0x4001A0A")]
	private const float _EXPLODE_DELAY = 0.025f;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool _exploding;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int _explosionCounter;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Queue<Brick> _freezeFrontier;

	[Token(Token = "0x4001A0E")]
	private const float _FREEZE_DELAY = 0.15f;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static CoroutineHandle? _freezeCo;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static bool _melting;

	[Token(Token = "0x1700041A")]
	public static bool IsActive
	{
		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xBD086C", Offset = "0xBD086C", VA = "0xBD086C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700041B")]
	public override PowerupType type
	{
		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xBD08BC", Offset = "0xBD08BC", VA = "0xBD08BC", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x1700041C")]
	public static bool Exploding
	{
		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xBD1B3C", Offset = "0xBD1B3C", VA = "0xBD1B3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0xBD08C4", Offset = "0xBD08C4", VA = "0xBD08C4")]
	private void ShowIccicles()
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0xBD0AC8", Offset = "0xBD0AC8", VA = "0xBD0AC8")]
	private void RemoveIccicles()
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0xBD08CC", Offset = "0xBD08CC", VA = "0xBD08CC")]
	private void AnimateIccicles(bool reverse)
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0xBD0AD0", Offset = "0xBD0AD0", VA = "0xBD0AD0")]
	[IteratorStateMachine(typeof(<AnimateIccicles>d__14))]
	private IEnumerator<float> AnimateIccicles(Ball ball, float duration, bool reverse)
	{
		return null;
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0xBD0B7C", Offset = "0xBD0B7C", VA = "0xBD0B7C", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0xBD0EAC", Offset = "0xBD0EAC", VA = "0xBD0EAC", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0xBD0ED4", Offset = "0xBD0ED4", VA = "0xBD0ED4", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0xBD0ED8", Offset = "0xBD0ED8", VA = "0xBD0ED8")]
	private void OnWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x60018B1")]
	[Address(RVA = "0xBD10B0", Offset = "0xBD10B0", VA = "0xBD10B0")]
	private void OnGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0xBD11B8", Offset = "0xBD11B8", VA = "0xBD11B8")]
	public static void OnRemoteFreeze(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0xBD1318", Offset = "0xBD1318", VA = "0xBD1318")]
	public static void OnRemoteExplode(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0xBD1624", Offset = "0xBD1624", VA = "0xBD1624")]
	public static void OnHit(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0xBD1798", Offset = "0xBD1798", VA = "0xBD1798")]
	private static void Explode(Brick brick, ShotInfo shot)
	{
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0xBD13B8", Offset = "0xBD13B8", VA = "0xBD13B8")]
	private static void StopFreezing()
	{
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0xBD1AAC", Offset = "0xBD1AAC", VA = "0xBD1AAC")]
	[IteratorStateMachine(typeof(<ExplodeCo>d__31))]
	private static IEnumerator<float> ExplodeCo(Brick first, ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0xBD1594", Offset = "0xBD1594", VA = "0xBD1594")]
	[IteratorStateMachine(typeof(<ExplodeBrickCo>d__33))]
	private static IEnumerator<float> ExplodeBrickCo(Brick brick, ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0xBD1B94", Offset = "0xBD1B94", VA = "0xBD1B94")]
	private static void ScheduleFreeze(Brick brick, bool immediately, ShotInfo shot)
	{
	}

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0xBD1944", Offset = "0xBD1944", VA = "0xBD1944")]
	private static void Freeze(Brick brick, ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0xBD1F30", Offset = "0xBD1F30", VA = "0xBD1F30")]
	[IteratorStateMachine(typeof(<FreezeCo>d__39))]
	private static IEnumerator<float> FreezeCo()
	{
		return null;
	}

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0xBD1D00", Offset = "0xBD1D00", VA = "0xBD1D00")]
	private static void FreezeBrick(Brick brick)
	{
	}

	[Token(Token = "0x60018BE")]
	[Address(RVA = "0xBD1294", Offset = "0xBD1294", VA = "0xBD1294")]
	[IteratorStateMachine(typeof(<FreezeBrickCo>d__41))]
	private static IEnumerator<float> FreezeBrickCo(Brick brick, float duration)
	{
		return null;
	}

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0xBD0FFC", Offset = "0xBD0FFC", VA = "0xBD0FFC")]
	private void Melt()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0xBD1F90", Offset = "0xBD1F90", VA = "0xBD1F90")]
	[IteratorStateMachine(typeof(<MeltCo>d__44))]
	private IEnumerator<float> MeltCo(float duration)
	{
		return null;
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0xBD2000", Offset = "0xBD2000", VA = "0xBD2000")]
	private void Update()
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0xBD2008", Offset = "0xBD2008", VA = "0xBD2008")]
	public PowerupIceBreaker()
	{
	}
}
[Token(Token = "0x2000445")]
public class PowerupJackpot : BasePowerup
{
	[Token(Token = "0x2000446")]
	[CompilerGenerated]
	private sealed class <updatePointsTextCo>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupJackpot <>4__this;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <duration>5__2;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__3;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <textTransform>5__4;

		[Token(Token = "0x1700042C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xBD4DF4", Offset = "0xBD4DF4", VA = "0xBD4DF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0xBD4E3C", Offset = "0xBD4E3C", VA = "0xBD4E3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xBD4284", Offset = "0xBD4284", VA = "0xBD4284")]
		[DebuggerHidden]
		public <updatePointsTextCo>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xBD4CC8", Offset = "0xBD4CC8", VA = "0xBD4CC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xBD4CCC", Offset = "0xBD4CCC", VA = "0xBD4CCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xBD4DFC", Offset = "0xBD4DFC", VA = "0xBD4DFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000447")]
	[CompilerGenerated]
	private sealed class <delayedRemoveCo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupJackpot <>4__this;

		[Token(Token = "0x1700042E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0xBD4F44", Offset = "0xBD4F44", VA = "0xBD4F44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xBD4F8C", Offset = "0xBD4F8C", VA = "0xBD4F8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xBD49EC", Offset = "0xBD49EC", VA = "0xBD49EC")]
		[DebuggerHidden]
		public <delayedRemoveCo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xBD4E98", Offset = "0xBD4E98", VA = "0xBD4E98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xBD4E9C", Offset = "0xBD4E9C", VA = "0xBD4E9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xBD4F4C", Offset = "0xBD4F4C", VA = "0xBD4F4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Tooltip("[Start, End, Step]")]
	[Header("Points params")]
	[Space]
	public Vector3Int pointsRangeArcade;

	[Token(Token = "0x4001A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("[Start, End, Step]")]
	public Vector3Int pointsRangeVersus;

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[Tooltip("[Start, End, Step]")]
	public Vector3Int pointsRangeCoOp;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float stepDuration;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool reversed;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve textScaleCurve;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _currentPoints;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TextMeshPro _pointsText;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StringBuilder _builder;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _format;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _pointUpdateTimer;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 _textScale;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _initTime;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private CoroutineHandle _updatePointsTextCo;

	[Token(Token = "0x1700042A")]
	public Vector3Int pointsRange
	{
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xBD3FC8", Offset = "0xBD3FC8", VA = "0xBD3FC8")]
		get
		{
			return default(Vector3Int);
		}
	}

	[Token(Token = "0x1700042B")]
	public override PowerupType type
	{
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xBD40E0", Offset = "0xBD40E0", VA = "0xBD40E0", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0xBD40E8", Offset = "0xBD40E8", VA = "0xBD40E8")]
	private void updatePointsText()
	{
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0xBD4210", Offset = "0xBD4210", VA = "0xBD4210")]
	[IteratorStateMachine(typeof(<updatePointsTextCo>d__19))]
	private IEnumerator<float> updatePointsTextCo()
	{
		return null;
	}

	[Token(Token = "0x60018F0")]
	[Address(RVA = "0xBD42AC", Offset = "0xBD42AC", VA = "0xBD42AC")]
	private void incrementPoints()
	{
	}

	[Token(Token = "0x60018F1")]
	[Address(RVA = "0xBD4338", Offset = "0xBD4338", VA = "0xBD4338")]
	private void claimPoints()
	{
	}

	[Token(Token = "0x60018F2")]
	[Address(RVA = "0xBD462C", Offset = "0xBD462C", VA = "0xBD462C")]
	private void onBallChangeOwnership(PlayerID ownerID)
	{
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0xBD4664", Offset = "0xBD4664", VA = "0xBD4664", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x60018F4")]
	[Address(RVA = "0xBD480C", Offset = "0xBD480C", VA = "0xBD480C", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x60018F5")]
	[Address(RVA = "0xBD4978", Offset = "0xBD4978", VA = "0xBD4978")]
	[IteratorStateMachine(typeof(<delayedRemoveCo>d__25))]
	private IEnumerator<float> delayedRemoveCo()
	{
		return null;
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0xBD4A14", Offset = "0xBD4A14", VA = "0xBD4A14", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0xBD4A94", Offset = "0xBD4A94", VA = "0xBD4A94", Slot = "10")]
	protected override void deserializeFromNetwork(uint uParam)
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0xBD4A9C", Offset = "0xBD4A9C", VA = "0xBD4A9C", Slot = "11")]
	public override void serializeToNetwork(out uint uParam)
	{
	}

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0xBD4AA8", Offset = "0xBD4AA8", VA = "0xBD4AA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0xBD4C20", Offset = "0xBD4C20", VA = "0xBD4C20")]
	public PowerupJackpot()
	{
	}
}
[Token(Token = "0x2000448")]
public class PowerupNuke : BasePowerup
{
	[Token(Token = "0x200044A")]
	[CompilerGenerated]
	private sealed class <NukeCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 forward;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PowerupNuke <>4__this;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShotInfo shot;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x17000431")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xBD62FC", Offset = "0xBD62FC", VA = "0xBD62FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000432")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xBD6344", Offset = "0xBD6344", VA = "0xBD6344", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xBD59F0", Offset = "0xBD59F0", VA = "0xBD59F0")]
		[DebuggerHidden]
		public <NukeCo>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xBD5EC4", Offset = "0xBD5EC4", VA = "0xBD5EC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xBD5EC8", Offset = "0xBD5EC8", VA = "0xBD5EC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xBD6304", Offset = "0xBD6304", VA = "0xBD6304", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[Header("Nuke params")]
	[Space]
	private static PowerupNuke _lastInst;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float coneAngle;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 strengthRange;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SplashDamagePellet pelletPrefab;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Brick> _bricksInRange;

	[Token(Token = "0x17000430")]
	public override PowerupType type
	{
		[Token(Token = "0x6001907")]
		[Address(RVA = "0xBD4FE8", Offset = "0xBD4FE8", VA = "0xBD4FE8", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x6001908")]
	[Address(RVA = "0xBD4FF0", Offset = "0xBD4FF0", VA = "0xBD4FF0")]
	private void getCenterAndForward(out Vector3 center, out Vector3 forward)
	{
	}

	[Token(Token = "0x6001909")]
	[Address(RVA = "0xBD5198", Offset = "0xBD5198", VA = "0xBD5198")]
	private void updateBricksInRangeList(Vector3 center, Vector3 forward)
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0xBD5608", Offset = "0xBD5608", VA = "0xBD5608", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0xBD56F8", Offset = "0xBD56F8", VA = "0xBD56F8", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0xBD56FC", Offset = "0xBD56FC", VA = "0xBD56FC", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0xBD593C", Offset = "0xBD593C", VA = "0xBD593C")]
	[IteratorStateMachine(typeof(<NukeCo>d__12))]
	private IEnumerator<float> NukeCo(Vector3 center, Vector3 forward, ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x600190E")]
	[Address(RVA = "0xBD5A18", Offset = "0xBD5A18", VA = "0xBD5A18")]
	private void Update()
	{
	}

	[Token(Token = "0x600190F")]
	[Address(RVA = "0xBD5B20", Offset = "0xBD5B20", VA = "0xBD5B20")]
	public PowerupNuke()
	{
	}
}
[Token(Token = "0x200044B")]
public class PowerupSplashDamage : BasePowerup
{
	[Token(Token = "0x200044C")]
	[CompilerGenerated]
	private sealed class <removeDelayed>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PowerupSplashDamage <>4__this;

		[Token(Token = "0x17000436")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xBD767C", Offset = "0xBD767C", VA = "0xBD767C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xBD76C4", Offset = "0xBD76C4", VA = "0xBD76C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xBD6CAC", Offset = "0xBD6CAC", VA = "0xBD6CAC")]
		[DebuggerHidden]
		public <removeDelayed>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xBD75FC", Offset = "0xBD75FC", VA = "0xBD75FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xBD7600", Offset = "0xBD7600", VA = "0xBD7600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0xBD7684", Offset = "0xBD7684", VA = "0xBD7684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Space]
	[Header("Splash Damage params")]
	public float _orbitRadius;

	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _orbitRadiusRandom;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SplashDamagePellet _damagePelletPrefab;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int _numDamagePelletsSP;

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int _numDamagePelletsMP;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _numDamagePelletsPerHitSP;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int _numDamagePelletsPerHitMP;

	[NonSerialized]
	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<SplashDamagePellet> currentDamagePellets;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoroutineHandle _removeDelayedCo;

	[Token(Token = "0x17000433")]
	private int _numDamagePellets
	{
		[Token(Token = "0x6001918")]
		[Address(RVA = "0xBD63A0", Offset = "0xBD63A0", VA = "0xBD63A0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000434")]
	private int _numDamagePelletsPerHit
	{
		[Token(Token = "0x6001919")]
		[Address(RVA = "0xBD63CC", Offset = "0xBD63CC", VA = "0xBD63CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000435")]
	public override PowerupType type
	{
		[Token(Token = "0x600191A")]
		[Address(RVA = "0xBD63F8", Offset = "0xBD63F8", VA = "0xBD63F8", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0xBD6400", Offset = "0xBD6400", VA = "0xBD6400")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x600191C")]
	[Address(RVA = "0xBD640C", Offset = "0xBD640C", VA = "0xBD640C")]
	private void RacketHit(ShotInfo shot, Vector3 _)
	{
	}

	[Token(Token = "0x600191D")]
	[Address(RVA = "0xBD6C38", Offset = "0xBD6C38", VA = "0xBD6C38")]
	[IteratorStateMachine(typeof(<removeDelayed>d__17))]
	private IEnumerator<float> removeDelayed()
	{
		return null;
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0xBD6CD4", Offset = "0xBD6CD4", VA = "0xBD6CD4", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600191F")]
	[Address(RVA = "0xBD6DAC", Offset = "0xBD6DAC", VA = "0xBD6DAC", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0xBD70E0", Offset = "0xBD70E0", VA = "0xBD70E0", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0xBD7534", Offset = "0xBD7534", VA = "0xBD7534")]
	public PowerupSplashDamage()
	{
	}
}
[Token(Token = "0x200044D")]
public class PowerupSuperFlow : BasePowerup
{
	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PowerupSuperFlow lastInst;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Flat Earth params")]
	[Space]
	public float _plowSpeedCoefficient;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _maxSpinCoefficient;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _spinAmplification;

	[Token(Token = "0x17000438")]
	public static bool isActive
	{
		[Token(Token = "0x6001928")]
		[Address(RVA = "0xBD7720", Offset = "0xBD7720", VA = "0xBD7720")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000439")]
	public static float plowSpeedCoefficient
	{
		[Token(Token = "0x6001929")]
		[Address(RVA = "0xBD7798", Offset = "0xBD7798", VA = "0xBD7798")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700043A")]
	public static float maxSpinCoefficient
	{
		[Token(Token = "0x600192A")]
		[Address(RVA = "0xBD7838", Offset = "0xBD7838", VA = "0xBD7838")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700043B")]
	public static float spinAmplification
	{
		[Token(Token = "0x600192B")]
		[Address(RVA = "0xBD78D8", Offset = "0xBD78D8", VA = "0xBD78D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700043C")]
	public override PowerupType type
	{
		[Token(Token = "0x600192C")]
		[Address(RVA = "0xBD7978", Offset = "0xBD7978", VA = "0xBD7978", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0xBD7980", Offset = "0xBD7980", VA = "0xBD7980", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0xBD7ADC", Offset = "0xBD7ADC", VA = "0xBD7ADC", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0xBD7AE0", Offset = "0xBD7AE0", VA = "0xBD7AE0", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0xBD7D90", Offset = "0xBD7D90", VA = "0xBD7D90")]
	private void onWaveEnded(string name, int id)
	{
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0xBD7D9C", Offset = "0xBD7D9C", VA = "0xBD7D9C")]
	public PowerupSuperFlow()
	{
	}
}
[Token(Token = "0x200044E")]
public class PowerupSupersize : BasePowerup
{
	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float duration;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float shrinkAfterHitTime;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float scale;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float animationDuration;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float plowMultiplier;

	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _returnedToPlayer;

	[Token(Token = "0x1700043D")]
	public override PowerupType type
	{
		[Token(Token = "0x6001932")]
		[Address(RVA = "0xBD7E08", Offset = "0xBD7E08", VA = "0xBD7E08", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x1700043E")]
	public static float PlowMultiplier
	{
		[Token(Token = "0x6001933")]
		[Address(RVA = "0xBD7E10", Offset = "0xBD7E10", VA = "0xBD7E10")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700043F")]
	public override Player owningPlayer
	{
		[Token(Token = "0x6001934")]
		[Address(RVA = "0xBD7F64", Offset = "0xBD7F64", VA = "0xBD7F64", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001935")]
	[Address(RVA = "0xBD7F6C", Offset = "0xBD7F6C", VA = "0xBD7F6C", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0xBD8118", Offset = "0xBD8118", VA = "0xBD8118", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001937")]
	[Address(RVA = "0xBD829C", Offset = "0xBD829C", VA = "0xBD829C", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x6001938")]
	[Address(RVA = "0xBD82A0", Offset = "0xBD82A0", VA = "0xBD82A0")]
	private void OnBallReturnedToPlayer(Player _)
	{
	}

	[Token(Token = "0x6001939")]
	[Address(RVA = "0xBD82AC", Offset = "0xBD82AC", VA = "0xBD82AC")]
	private void Update()
	{
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0xBD84D4", Offset = "0xBD84D4", VA = "0xBD84D4")]
	public PowerupSupersize()
	{
	}
}
[Token(Token = "0x200044F")]
public enum PowerupType
{
	[Token(Token = "0x4001A78")]
	None,
	[Token(Token = "0x4001A79")]
	SplashDamage,
	[Token(Token = "0x4001A7A")]
	Nuke,
	[Token(Token = "0x4001A7B")]
	GodMode,
	[Token(Token = "0x4001A7C")]
	SuperFlow,
	[Token(Token = "0x4001A7D")]
	BlasterMaze,
	[Token(Token = "0x4001A7E")]
	Jackpot,
	[Token(Token = "0x4001A7F")]
	Hyperspace,
	[Token(Token = "0x4001A80")]
	IceBreaker,
	[Token(Token = "0x4001A81")]
	WreckingBall,
	[Token(Token = "0x4001A82")]
	Supersize
}
[Serializable]
[Token(Token = "0x2000450")]
public class SerializablePowerupType : SerializableEnum<PowerupType>
{
	[Token(Token = "0x600193B")]
	[Address(RVA = "0xBD8540", Offset = "0xBD8540", VA = "0xBD8540")]
	public SerializablePowerupType()
	{
	}
}
[Token(Token = "0x2000451")]
public class PowerupWreckingBall : BasePowerup
{
	[Token(Token = "0x2000452")]
	public class BrickData
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialsManager.MaterialPool surfacePool;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MaterialsManager.MaterialPool reflectionPool;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material reflection;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material surface;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float angle;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float shake;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool isDirectlyHit;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 pos;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CoroutineHandle coroutine;

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xBD914C", Offset = "0xBD914C", VA = "0xBD914C")]
		public BrickData()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xBD9228", Offset = "0xBD9228", VA = "0xBD9228")]
		public void init()
		{
		}
	}

	[Token(Token = "0x2000453")]
	[CompilerGenerated]
	private sealed class <glitterCo>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <glitter>5__2;

		[Token(Token = "0x17000442")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0xBDA5D8", Offset = "0xBDA5D8", VA = "0xBDA5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000443")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0xBDA620", Offset = "0xBDA620", VA = "0xBDA620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xBD92E8", Offset = "0xBD92E8", VA = "0xBD92E8")]
		[DebuggerHidden]
		public <glitterCo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xBDA36C", Offset = "0xBDA36C", VA = "0xBDA36C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xBDA370", Offset = "0xBDA370", VA = "0xBDA370", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xBDA5E0", Offset = "0xBDA5E0", VA = "0xBDA5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000454")]
	[CompilerGenerated]
	private sealed class <breakGlassCo>d__36 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Brick brick;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrickData data;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <p>5__2;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__3;

		[Token(Token = "0x17000444")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001961")]
			[Address(RVA = "0xBDAA00", Offset = "0xBDAA00", VA = "0xBDAA00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000445")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xBDAA48", Offset = "0xBDAA48", VA = "0xBDAA48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xBD9310", Offset = "0xBD9310", VA = "0xBD9310")]
		[DebuggerHidden]
		public <breakGlassCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xBDA67C", Offset = "0xBDA67C", VA = "0xBDA67C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xBDA680", Offset = "0xBDA680", VA = "0xBDA680", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xBDAA08", Offset = "0xBDAA08", VA = "0xBDAA08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[Header("Wrecking ball params")]
	public byte _extraDamage;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public byte _extraDamageVersus;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _duration;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _mp_duration;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _ballScale;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _ballVelocityFactorReduction;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _ballGravityAdd;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _ballMinDampedVelocityCoeff;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _actual_duration;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<PowerupWreckingBall> activePowerups;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _AngleID;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int _RadiusID;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _OffsetXID;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _OffsetYID;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _FadeID;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int _BreakID;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _pauseTimer;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly Dictionary<Brick, BrickData> _brickData;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static ParticleSystem _glitterPrefab;

	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _needToBeRemoved;

	[Token(Token = "0x17000440")]
	public override PowerupType type
	{
		[Token(Token = "0x600193C")]
		[Address(RVA = "0xBD8588", Offset = "0xBD8588", VA = "0xBD8588", Slot = "5")]
		get
		{
			return default(PowerupType);
		}
	}

	[Token(Token = "0x17000441")]
	private static PowerupWreckingBall firstActive
	{
		[Token(Token = "0x600193D")]
		[Address(RVA = "0xBD8590", Offset = "0xBD8590", VA = "0xBD8590")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0xBD860C", Offset = "0xBD860C", VA = "0xBD860C")]
	public static byte extraDamage(Player p)
	{
		return default(byte);
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0xBD8708", Offset = "0xBD8708", VA = "0xBD8708")]
	public static float ballVelocityFactorReduction(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001940")]
	[Address(RVA = "0xBD8788", Offset = "0xBD8788", VA = "0xBD8788")]
	public static float ballGravityAdd(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001941")]
	[Address(RVA = "0xBD8808", Offset = "0xBD8808", VA = "0xBD8808")]
	public static float ballMinDampedVelocityCoeff(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001942")]
	[Address(RVA = "0xBD888C", Offset = "0xBD888C", VA = "0xBD888C")]
	public static float ballScale(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001943")]
	[Address(RVA = "0xBD8910", Offset = "0xBD8910", VA = "0xBD8910")]
	public static float ballAudioPitch(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001944")]
	[Address(RVA = "0xBD8978", Offset = "0xBD8978", VA = "0xBD8978")]
	public static float SFXGain(Player p)
	{
		return default(float);
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0xBD86AC", Offset = "0xBD86AC", VA = "0xBD86AC")]
	public static bool isActiveFor(Player p)
	{
		return default(bool);
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0xBD89E0", Offset = "0xBD89E0", VA = "0xBD89E0")]
	private static void setTextureParams(Material m, float x, float y, float a, float r)
	{
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0xBD8C40", Offset = "0xBD8C40", VA = "0xBD8C40")]
	public static void playBreakSound(Vector3 pos)
	{
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0xBD8CCC", Offset = "0xBD8CCC", VA = "0xBD8CCC")]
	public static void breakGlass(Brick brick, Vector3 pos, [Optional] BrickData parent)
	{
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0xBD9264", Offset = "0xBD9264", VA = "0xBD9264")]
	[IteratorStateMachine(typeof(<glitterCo>d__35))]
	private static IEnumerator<float> glitterCo(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0xBD9198", Offset = "0xBD9198", VA = "0xBD9198")]
	[IteratorStateMachine(typeof(<breakGlassCo>d__36))]
	private static IEnumerator<float> breakGlassCo(Brick brick, BrickData data)
	{
		return null;
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0xBD9338", Offset = "0xBD9338", VA = "0xBD9338")]
	private static void cleanupBrokenBricks()
	{
	}

	[Token(Token = "0x600194C")]
	[Address(RVA = "0xBD963C", Offset = "0xBD963C", VA = "0xBD963C")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0xBD97AC", Offset = "0xBD97AC", VA = "0xBD97AC")]
	private void onGameEnded(GameEndReason reason)
	{
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0xBD97E8", Offset = "0xBD97E8", VA = "0xBD97E8", Slot = "6")]
	protected override void init()
	{
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0xBD9820", Offset = "0xBD9820", VA = "0xBD9820", Slot = "8")]
	protected override void cleanup()
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0xBD997C", Offset = "0xBD997C", VA = "0xBD997C", Slot = "7")]
	protected override void activate()
	{
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0xBD9D54", Offset = "0xBD9D54", VA = "0xBD9D54")]
	private void OnBallReturnedToPlayer(Player p)
	{
	}

	[Token(Token = "0x6001952")]
	[Address(RVA = "0xBD9EC4", Offset = "0xBD9EC4", VA = "0xBD9EC4")]
	private void OnBallChangedOwnership(PlayerID owningPlayerID)
	{
	}

	[Token(Token = "0x6001953")]
	[Address(RVA = "0xBD9F38", Offset = "0xBD9F38", VA = "0xBD9F38")]
	private void Update()
	{
	}

	[Token(Token = "0x6001954")]
	[Address(RVA = "0xBDA1D8", Offset = "0xBDA1D8", VA = "0xBDA1D8")]
	public PowerupWreckingBall()
	{
	}
}
[Token(Token = "0x2000455")]
public class SplashDamagePellet : MonoBehaviour
{
	[Token(Token = "0x2000456")]
	private enum PelletState
	{
		[Token(Token = "0x4001ADA")]
		OnRacket,
		[Token(Token = "0x4001ADB")]
		AttachedToBall,
		[Token(Token = "0x4001ADC")]
		FreeRoam,
		[Token(Token = "0x4001ADD")]
		Terminating
	}

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BasePowerup _powerup;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rigidBody;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider _sphereCollider;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private TrailRenderer _trail;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer _renderer;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Player _owningPlayer;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _orbitForceSum;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _defaultScale;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GradientAlphaKey[] _defaultTrailAlphas;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _defaultDrag;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _defaultTrailTime;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _defaultTrailWidth;

	[NonSerialized]
	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int index;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Pellet hit light prefab")]
	public GameObject _pelletHitLightPrefab;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Explode from Orb")]
	public float _inheritOrbVelocity;

	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _randomOrbVelocity;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Orbit on Racket")]
	public float _orbitSpringK;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float _orbitPushAwayFromOthers;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float _lookAheadAngle;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float _orbitRadius;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _orbitTrailReduction;

	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _orbitTrailReduction_MinSpeed;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _orbitTrailReduction_MaxSpeed;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private PelletState _currentState;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _timeSinceTerminalHit;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _timeSinceLastPelletHitLight;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public ShotInfo _originatedFromShot;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _angleToBall;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _startingAngleToBall;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _ballUpVector;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 _ballOriginalImpactPos;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Ball _attachedToBall;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Tooltip("Degrees per second")]
	[Header("Spiral Movement")]
	public float _spiralSpeed;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Tooltip("Radius per distance (range 0-1)\r\nUse spiralMaxRadius to determine overall range")]
	public AnimationCurve _spiralConeRadius;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float _spiralMaxRadius;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float _spiralDragCoeff;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float _terminateFadeDuration;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float _spiralScale;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Insta Use")]
	public float _fromBrickDragCoeff;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float _fromBrickDragDuration;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _timeFromBrick;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float _lastTimeScale;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float _freeRoamTTL;

	[NonSerialized]
	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool forceDestroyTargets;

	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 _lastPosition;

	[Token(Token = "0x17000446")]
	public Vector3 position
	{
		[Token(Token = "0x6001964")]
		[Address(RVA = "0xBDAAA4", Offset = "0xBDAAA4", VA = "0xBDAAA4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000447")]
	public bool isOnRacket
	{
		[Token(Token = "0x6001965")]
		[Address(RVA = "0xBDAAC0", Offset = "0xBDAAC0", VA = "0xBDAAC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000448")]
	public bool isOnBall
	{
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xBDAAD0", Offset = "0xBDAAD0", VA = "0xBDAAD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000449")]
	public bool isFreeRoam
	{
		[Token(Token = "0x6001967")]
		[Address(RVA = "0xBDAAE0", Offset = "0xBDAAE0", VA = "0xBDAAE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700044A")]
	public bool isTerminating
	{
		[Token(Token = "0x6001968")]
		[Address(RVA = "0xBDAAF0", Offset = "0xBDAAF0", VA = "0xBDAAF0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700044B")]
	public Ball attahcedToBall
	{
		[Token(Token = "0x6001969")]
		[Address(RVA = "0xBDAB00", Offset = "0xBDAB00", VA = "0xBDAB00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600196A")]
	[Address(RVA = "0xBDAB08", Offset = "0xBDAB08", VA = "0xBDAB08")]
	private void Awake()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0xBDACAC", Offset = "0xBDACAC", VA = "0xBDACAC")]
	private void onBallChangeOwnership(PlayerID ownerID)
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0xBDADE4", Offset = "0xBDADE4", VA = "0xBDADE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600196D")]
	[Address(RVA = "0xBDAF40", Offset = "0xBDAF40", VA = "0xBDAF40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0xBDB040", Offset = "0xBDB040", VA = "0xBDB040")]
	private void onWaveEnded(string waveName, int waveIndex)
	{
	}

	[Token(Token = "0x600196F")]
	[Address(RVA = "0xBDB0A8", Offset = "0xBDB0A8", VA = "0xBDB0A8")]
	public void SetTrailAlpha(float alpha)
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0xBDB180", Offset = "0xBDB180", VA = "0xBDB180")]
	private void init()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0xBD7328", Offset = "0xBD7328", VA = "0xBD7328")]
	public void InitFromTransform(PowerupSplashDamage powerup, Transform initTransform, float orbitRad)
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0xBDB1F0", Offset = "0xBDB1F0", VA = "0xBDB1F0")]
	public void InitAndThrowNuke(ShotInfo shot, BasePowerup powerup, Vector3 origin, Vector3 force)
	{
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0xBD6854", Offset = "0xBD6854", VA = "0xBD6854")]
	public void ThrowWithBall(ShotInfo shot, float angle)
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0xBDB38C", Offset = "0xBDB38C", VA = "0xBDB38C")]
	private void BallHitHex(ShotInfo shot, HexTile h)
	{
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0xBDADB0", Offset = "0xBDADB0", VA = "0xBDADB0")]
	private void DetachFromBall()
	{
	}

	[Token(Token = "0x6001976")]
	[Address(RVA = "0xBDB420", Offset = "0xBDB420", VA = "0xBDB420")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0xBD7028", Offset = "0xBD7028", VA = "0xBD7028")]
	public void Kill()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0xBDB054", Offset = "0xBDB054", VA = "0xBDB054")]
	private void StartTerminating()
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0xBDC108", Offset = "0xBDC108", VA = "0xBDC108")]
	private void OnCollisionEnter(Collision col)
	{
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0xBDBA40", Offset = "0xBDBA40", VA = "0xBDBA40")]
	private void FixedUpdate_Throw()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0xBDB474", Offset = "0xBDB474", VA = "0xBDB474")]
	private void FixedUpdate_Orbit()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0xBDC484", Offset = "0xBDC484", VA = "0xBDC484")]
	public SplashDamagePellet()
	{
	}
}
[Token(Token = "0x2000457")]
public class OfflineDepot<T> where T : new()
{
	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _filepath;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string _dataString;

	[Token(Token = "0x1700044C")]
	public T data
	{
		[Token(Token = "0x600197D")]
		[CompilerGenerated]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600197E")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600197F")]
	public OfflineDepot(string filename)
	{
	}

	[Token(Token = "0x6001980")]
	private void readExisting()
	{
	}

	[Token(Token = "0x6001981")]
	public void write()
	{
	}

	[Token(Token = "0x6001982")]
	public void clear()
	{
	}

	[Token(Token = "0x6001983")]
	private static string scramble(string data)
	{
		return null;
	}

	[Token(Token = "0x6001984")]
	private static string unscramble(string data)
	{
		return null;
	}
}
[Token(Token = "0x2000458")]
public class PlayerProfile : MonoBehaviour
{
	[Token(Token = "0x200045A")]
	[CompilerGenerated]
	private sealed class <init>d__30 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NativePlatform.NativeUser <nativeUser>5__2;

		[Token(Token = "0x17000455")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0xBE3654", Offset = "0xBE3654", VA = "0xBE3654", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000456")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0xBE369C", Offset = "0xBE369C", VA = "0xBE369C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xBDC744", Offset = "0xBDC744", VA = "0xBDC744")]
		[DebuggerHidden]
		public <init>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xBE2E0C", Offset = "0xBE2E0C", VA = "0xBE2E0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xBE2E10", Offset = "0xBE2E10", VA = "0xBE2E10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xBE365C", Offset = "0xBE365C", VA = "0xBE365C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045B")]
	[CompilerGenerated]
	private sealed class <TryInitOnlineProfileWhenOnline>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x17000457")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0xBE3B20", Offset = "0xBE3B20", VA = "0xBE3B20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000458")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0xBE3B68", Offset = "0xBE3B68", VA = "0xBE3B68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xBDC7E0", Offset = "0xBDC7E0", VA = "0xBDC7E0")]
		[DebuggerHidden]
		public <TryInitOnlineProfileWhenOnline>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xBE36F8", Offset = "0xBE36F8", VA = "0xBE36F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xBE36FC", Offset = "0xBE36FC", VA = "0xBE36FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xBE3B28", Offset = "0xBE3B28", VA = "0xBE3B28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045C")]
	[CompilerGenerated]
	private sealed class <retrieveCoOpBestScoreFromLeaderboard>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LeaderboardManager.LeaderboardContainer <lb>5__2;

		[Token(Token = "0x17000459")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019D9")]
			[Address(RVA = "0xBE3E24", Offset = "0xBE3E24", VA = "0xBE3E24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DB")]
			[Address(RVA = "0xBE3E6C", Offset = "0xBE3E6C", VA = "0xBE3E6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xBDEF74", Offset = "0xBDEF74", VA = "0xBDEF74")]
		[DebuggerHidden]
		public <retrieveCoOpBestScoreFromLeaderboard>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xBE3BC4", Offset = "0xBE3BC4", VA = "0xBE3BC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xBE3BC8", Offset = "0xBE3BC8", VA = "0xBE3BC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xBE3E2C", Offset = "0xBE3E2C", VA = "0xBE3E2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200045D")]
	[CompilerGenerated]
	private sealed class <GetMyCurrentRankCo>d__67 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderboardManager.LeaderboardContainer leaderboard;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<int> callback;

		[Token(Token = "0x1700045B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019DF")]
			[Address(RVA = "0xBE3FAC", Offset = "0xBE3FAC", VA = "0xBE3FAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E1")]
			[Address(RVA = "0xBE3FF4", Offset = "0xBE3FF4", VA = "0xBE3FF4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xBE1FEC", Offset = "0xBE1FEC", VA = "0xBE1FEC")]
		[DebuggerHidden]
		public <GetMyCurrentRankCo>d__67(int <>1__state)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xBE3EC8", Offset = "0xBE3EC8", VA = "0xBE3EC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xBE3ECC", Offset = "0xBE3ECC", VA = "0xBE3ECC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xBE3FB4", Offset = "0xBE3FB4", VA = "0xBE3FB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000461")]
	[CompilerGenerated]
	private sealed class <IMPORT_AWS_CHINA__ImportChineseAccount>d__76 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfile <>4__this;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RNXDepot.MyDepot<PlayerProfileData> <chineseProfile>5__2;

		[Token(Token = "0x1700045D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019EE")]
			[Address(RVA = "0xBE43A8", Offset = "0xBE43A8", VA = "0xBE43A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700045E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0xBE43F0", Offset = "0xBE43F0", VA = "0xBE43F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xBE2988", Offset = "0xBE2988", VA = "0xBE2988")]
		[DebuggerHidden]
		public <IMPORT_AWS_CHINA__ImportChineseAccount>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xBE4138", Offset = "0xBE4138", VA = "0xBE4138", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xBE413C", Offset = "0xBE413C", VA = "0xBE413C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xBE43B0", Offset = "0xBE43B0", VA = "0xBE43B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000462")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass77_0
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BackendSettings.Region region;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool signInDone;

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xBE444C", Offset = "0xBE444C", VA = "0xBE444C")]
		public <>c__DisplayClass77_0()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xBE4454", Offset = "0xBE4454", VA = "0xBE4454")]
		internal void <IMPORT_AWS_CHINA__ReSignIn>b__0(bool success, RnxPlatform.User rnxUser)
		{
		}
	}

	[Token(Token = "0x2000463")]
	[CompilerGenerated]
	private sealed class <IMPORT_AWS_CHINA__ReSignIn>d__77 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BackendSettings.Region region;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass77_0 <>8__1;

		[Token(Token = "0x1700045F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0xBE484C", Offset = "0xBE484C", VA = "0xBE484C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000460")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0xBE4894", Offset = "0xBE4894", VA = "0xBE4894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xBE2A18", Offset = "0xBE2A18", VA = "0xBE2A18")]
		[DebuggerHidden]
		public <IMPORT_AWS_CHINA__ReSignIn>d__77(int <>1__state)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xBE4588", Offset = "0xBE4588", VA = "0xBE4588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xBE458C", Offset = "0xBE458C", VA = "0xBE458C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xBE4854", Offset = "0xBE4854", VA = "0xBE4854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerProfile inst;

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OfflineDepot<PlayerProfileData> _myOfflineProfile;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RNXDepot.MyDepot<PlayerProfileData> _myOnlineProfile;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _playerXpAtSessionStart;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _xpEarnedInLastSessionAvailable;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _xpEarnedInLastSession;

	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SoloContent.Stage _curStage;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _lastMatchBeatsHighScore;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _numStarsBeforeThisMatch;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _versusSetId;

	[Token(Token = "0x1700044D")]
	public static PlayerProfileData myProfileData
	{
		[Token(Token = "0x6001985")]
		[Address(RVA = "0xBDC4E0", Offset = "0xBDC4E0", VA = "0xBDC4E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700044E")]
	public bool initialized
	{
		[Token(Token = "0x6001986")]
		[Address(RVA = "0xBDC5E0", Offset = "0xBDC5E0", VA = "0xBDC5E0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001987")]
		[Address(RVA = "0xBDC5E8", Offset = "0xBDC5E8", VA = "0xBDC5E8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700044F")]
	public bool onlineInitialized
	{
		[Token(Token = "0x6001988")]
		[Address(RVA = "0xBDC5F4", Offset = "0xBDC5F4", VA = "0xBDC5F4")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001989")]
		[Address(RVA = "0xBDC5FC", Offset = "0xBDC5FC", VA = "0xBDC5FC")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000450")]
	public bool xpEarnedInLastSessionAvailable
	{
		[Token(Token = "0x600198A")]
		[Address(RVA = "0xBDC608", Offset = "0xBDC608", VA = "0xBDC608")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000451")]
	public int xpEarnedInLastSession
	{
		[Token(Token = "0x600198B")]
		[Address(RVA = "0xBDC610", Offset = "0xBDC610", VA = "0xBDC610")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000452")]
	public SoloContent.Stage curStage
	{
		[Token(Token = "0x600198C")]
		[Address(RVA = "0xBDC618", Offset = "0xBDC618", VA = "0xBDC618")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000453")]
	public bool lastMatchBeatsHighScore
	{
		[Token(Token = "0x600198D")]
		[Address(RVA = "0xBDC620", Offset = "0xBDC620", VA = "0xBDC620")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000454")]
	public int numStarsBeforeThisMatch
	{
		[Token(Token = "0x600198E")]
		[Address(RVA = "0xBDC628", Offset = "0xBDC628", VA = "0xBDC628")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0xBDC630", Offset = "0xBDC630", VA = "0xBDC630")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0xBDC6D0", Offset = "0xBDC6D0", VA = "0xBDC6D0")]
	[IteratorStateMachine(typeof(<init>d__30))]
	private IEnumerator<float> init()
	{
		return null;
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0xBDC76C", Offset = "0xBDC76C", VA = "0xBDC76C")]
	[IteratorStateMachine(typeof(<TryInitOnlineProfileWhenOnline>d__31))]
	private IEnumerator<float> TryInitOnlineProfileWhenOnline()
	{
		return null;
	}

	[Token(Token = "0x6001992")]
	[Address(RVA = "0xBDC808", Offset = "0xBDC808", VA = "0xBDC808")]
	private void OnOnlineProfileInitialized()
	{
	}

	[Token(Token = "0x6001993")]
	[Address(RVA = "0xBDD210", Offset = "0xBDD210", VA = "0xBDD210")]
	private void OnOfflineInitialized()
	{
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0xBDD06C", Offset = "0xBDD06C", VA = "0xBDD06C")]
	private void OnOnlineInitialized()
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0xBDCBDC", Offset = "0xBDCBDC", VA = "0xBDCBDC")]
	private void DebugOverrideRating(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001996")]
	[Address(RVA = "0xBDCEB8", Offset = "0xBDCEB8", VA = "0xBDCEB8")]
	private void initProfile(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0xBDD36C", Offset = "0xBDD36C", VA = "0xBDD36C")]
	private static void EnsureNumStages(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0xBDD534", Offset = "0xBDD534", VA = "0xBDD534")]
	private static void SetDemoMode(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0xBDD554", Offset = "0xBDD554", VA = "0xBDD554")]
	private static void UnlockAllStagesIfNeeded(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0xBDD708", Offset = "0xBDD708", VA = "0xBDD708")]
	private void InitSetsAndStats(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0xBDECE4", Offset = "0xBDECE4", VA = "0xBDECE4")]
	private void InitStats(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x600199C")]
	[Address(RVA = "0xBDE9FC", Offset = "0xBDE9FC", VA = "0xBDE9FC")]
	private void fixOldAug2020(PlayerProfileData.Solo profileDataSolo)
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0xBDD878", Offset = "0xBDD878", VA = "0xBDD878")]
	private void calculateCoOpMetricsRetroactively(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0xBDEF00", Offset = "0xBDEF00", VA = "0xBDEF00")]
	[IteratorStateMachine(typeof(<retrieveCoOpBestScoreFromLeaderboard>d__44))]
	private IEnumerator<float> retrieveCoOpBestScoreFromLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x600199F")]
	[Address(RVA = "0xBDE0EC", Offset = "0xBDE0EC", VA = "0xBDE0EC")]
	private void calcaulteXpRetroactively(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0xBDEE30", Offset = "0xBDEE30", VA = "0xBDEE30")]
	private void initStats(ref GameplayStats stats)
	{
	}

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0xBDEDAC", Offset = "0xBDEDAC", VA = "0xBDEDAC")]
	private void initStatsEx(ref GameplayStatsEx stats)
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0xBDCF10", Offset = "0xBDCF10", VA = "0xBDCF10")]
	private void sync(bool initial)
	{
	}

	[Token(Token = "0x60019A3")]
	[Address(RVA = "0xBDFF44", Offset = "0xBDFF44", VA = "0xBDFF44")]
	public void saveMyProfile()
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0xBDFFE8", Offset = "0xBDFFE8", VA = "0xBDFFE8")]
	public RNXDepot.FriendDepot<PlayerProfileData> getFriendProfile(string friendUserID)
	{
		return null;
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0xBE00BC", Offset = "0xBE00BC", VA = "0xBE00BC")]
	private int getCurrentGameDuration()
	{
		return default(int);
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0xBE0170", Offset = "0xBE0170", VA = "0xBE0170")]
	public void reportArcadeGameResults(ArcadeType arcadeType, PlayerProfileData.Arcade.Type.Result result)
	{
	}

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0xBE041C", Offset = "0xBE041C", VA = "0xBE041C")]
	public void reportSoloGameResults(string setId, PlayerProfileData.Solo.Set.Result result)
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0xBE1008", Offset = "0xBE1008", VA = "0xBE1008")]
	private int calcNumSetsLeftToCompleteStage(SoloContent.Stage stage)
	{
		return default(int);
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0xBE0AB8", Offset = "0xBE0AB8", VA = "0xBE0AB8")]
	private void maybeUnlockNextStage()
	{
	}

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0xBE13D8", Offset = "0xBE13D8", VA = "0xBE13D8")]
	private void unlockNextStage()
	{
	}

	[Token(Token = "0x60019AB")]
	[Address(RVA = "0xBE1558", Offset = "0xBE1558", VA = "0xBE1558")]
	public int countCompletedSoloSetsInStage(int stageIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0xBE0C2C", Offset = "0xBE0C2C", VA = "0xBE0C2C")]
	private int countCompletedSoloSets()
	{
		return default(int);
	}

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0xBE17B4", Offset = "0xBE17B4", VA = "0xBE17B4")]
	public void reportVersusGameResults(string setId, GameResolution gameResolution, int myScore)
	{
	}

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0xBE19C8", Offset = "0xBE19C8", VA = "0xBE19C8")]
	public void supplementVersusGameResults()
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0xBE1B9C", Offset = "0xBE1B9C", VA = "0xBE1B9C")]
	public void reportCoOpGameResults(ArcadeType arcadeType, PlayerProfileData.Arcade.Type.Result result)
	{
	}

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0xBE1E2C", Offset = "0xBE1E2C", VA = "0xBE1E2C")]
	public void onGameStart()
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0xBE1E38", Offset = "0xBE1E38", VA = "0xBE1E38")]
	public void onGameEnd()
	{
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0xBDD318", Offset = "0xBDD318", VA = "0xBDD318")]
	private void onMyXpSessionStart()
	{
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0xBE1E88", Offset = "0xBE1E88", VA = "0xBE1E88")]
	public void onMyXpSessionEnd()
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0xBE1F5C", Offset = "0xBE1F5C", VA = "0xBE1F5C")]
	[IteratorStateMachine(typeof(<GetMyCurrentRankCo>d__67))]
	private static IEnumerator<float> GetMyCurrentRankCo(LeaderboardManager.LeaderboardContainer leaderboard, Action<int> callback)
	{
		return null;
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0xBE2014", Offset = "0xBE2014", VA = "0xBE2014")]
	public static void getVersusRank(Action<int> callback)
	{
	}

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0xBE20AC", Offset = "0xBE20AC", VA = "0xBE20AC")]
	public static void getCoOpRank(Action<int> callback)
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0xBE2144", Offset = "0xBE2144", VA = "0xBE2144")]
	public static void getArcadeRank(Action<int> callback, ArcadeType arcadeType = ArcadeType.Regular)
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0xBDD260", Offset = "0xBDD260", VA = "0xBDD260")]
	public static void finalizeProfile(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x60019B9")]
	[Address(RVA = "0xBE21EC", Offset = "0xBE21EC", VA = "0xBE21EC")]
	public void Debug_ResetItem(string itemID)
	{
	}

	[Token(Token = "0x60019BA")]
	[Address(RVA = "0xBE2404", Offset = "0xBE2404", VA = "0xBE2404")]
	public void Debug_EditItem(PlayerProfileData.Summary.ItemStatus itemStat)
	{
	}

	[Token(Token = "0x60019BB")]
	[Address(RVA = "0xBE261C", Offset = "0xBE261C", VA = "0xBE261C")]
	public void Debug_ClearAchievement(string achievementID)
	{
	}

	[Token(Token = "0x60019BC")]
	[Address(RVA = "0xBE26CC", Offset = "0xBE26CC", VA = "0xBE26CC")]
	public void Debug_EditAchievement(PlayerProfileData.Summary.AchievementStatus achStatus)
	{
	}

	[Token(Token = "0x60019BD")]
	[Address(RVA = "0xBE2914", Offset = "0xBE2914", VA = "0xBE2914")]
	[IteratorStateMachine(typeof(<IMPORT_AWS_CHINA__ImportChineseAccount>d__76))]
	private IEnumerator<float> IMPORT_AWS_CHINA__ImportChineseAccount()
	{
		return null;
	}

	[Token(Token = "0x60019BE")]
	[Address(RVA = "0xBE29B0", Offset = "0xBE29B0", VA = "0xBE29B0")]
	[IteratorStateMachine(typeof(<IMPORT_AWS_CHINA__ReSignIn>d__77))]
	private IEnumerator<float> IMPORT_AWS_CHINA__ReSignIn(BackendSettings.Region region)
	{
		return null;
	}

	[Token(Token = "0x60019BF")]
	[Address(RVA = "0xBE2A40", Offset = "0xBE2A40", VA = "0xBE2A40")]
	public PlayerProfile()
	{
	}
}
[Serializable]
[Token(Token = "0x2000464")]
public class PlayerProfileData
{
	[Serializable]
	[Token(Token = "0x2000465")]
	public class Operations
	{
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool sendLog;

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xBE4AB8", Offset = "0xBE4AB8", VA = "0xBE4AB8")]
		public Operations()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000466")]
	public class Summary
	{
		[Serializable]
		[Token(Token = "0x2000467")]
		public class MedalAward
		{
			[Token(Token = "0x4001B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string eventId;

			[Token(Token = "0x4001B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SerializableMedalType medal;

			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xBE5254", Offset = "0xBE5254", VA = "0xBE5254")]
			public MedalAward()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000468")]
		public class AchievementStatus
		{
			[Token(Token = "0x4001B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string progress;

			[Token(Token = "0x4001B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool unlocked;

			[Token(Token = "0x4001B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
			public bool reported;

			[Token(Token = "0x4001B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
			public bool unlockedSeen;

			[Token(Token = "0x4001B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
			public bool seen;

			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xBE26C4", Offset = "0xBE26C4", VA = "0xBE26C4")]
			public AchievementStatus()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000469")]
		public class ItemStatus
		{
			[Token(Token = "0x4001B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool unlocked;

			[Token(Token = "0x4001B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool unlockedSeen;

			[Token(Token = "0x4001B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			public bool seen;

			[Token(Token = "0x4001B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			public bool equipped;

			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0xBE5880", Offset = "0xBE5880", VA = "0xBE5880")]
			public ItemStatus()
			{
			}
		}

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SerializablePlayerLevel rating;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<MedalAward> medals;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AchievementStatus> achievements;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ItemStatus> items;

		[Token(Token = "0x17000464")]
		public SerializablePlayerLevel playerLevel
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xBE4F38", Offset = "0xBE4F38", VA = "0xBE4F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xBE4F40", Offset = "0xBE4F40", VA = "0xBE4F40")]
		public MedalType? getMedal(string eventId)
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xBE5110", Offset = "0xBE5110", VA = "0xBE5110")]
		public void awardMedal(string eventId, MedalType medal)
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xBE52D8", Offset = "0xBE52D8", VA = "0xBE52D8")]
		public AchievementStatus GetAchievement(string achievementId)
		{
			return null;
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xBE545C", Offset = "0xBE545C", VA = "0xBE545C")]
		public AchievementStatus AddAchievement(string achievementId)
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xBE5554", Offset = "0xBE5554", VA = "0xBE5554")]
		public void ResetAchievement(AchievementStatus achievement)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xBE55AC", Offset = "0xBE55AC", VA = "0xBE55AC")]
		public bool RemoveAchievement(AchievementStatus achievement)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xBE5604", Offset = "0xBE5604", VA = "0xBE5604")]
		public ItemStatus GetItem(string itemId)
		{
			return null;
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xBE5788", Offset = "0xBE5788", VA = "0xBE5788")]
		public ItemStatus AddItem(string itemId)
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xBE4AC0", Offset = "0xBE4AC0", VA = "0xBE4AC0")]
		public Summary()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046A")]
	public class Personal
	{
		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SerializablePlayerLevel lastSeenRating;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int soloMaxSeenStage;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool soloPendingCelberationAllSetsComplete;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int soloPendingCelberationStageComplete;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool didTutorial;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool enteredSoloOnce;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool demoMode;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool playedDemo;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonthlyChallenge.Time lastSeenMonthlyChallenge;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool seenNewCoOp;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool seenNewLevelEditor;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool openedLevelEditor;

		[Token(Token = "0x17000465")]
		public SerializablePlayerLevel lastSeenPlayerLevel
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0xBE5888", Offset = "0xBE5888", VA = "0xBE5888")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0xBE5890", Offset = "0xBE5890", VA = "0xBE5890")]
			set
			{
			}
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xBE4C34", Offset = "0xBE4C34", VA = "0xBE4C34")]
		public Personal()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046B")]
	public class Arcade
	{
		[Serializable]
		[Token(Token = "0x200046C")]
		public class Type
		{
			[Serializable]
			[Token(Token = "0x200046D")]
			public class Result
			{
				[Token(Token = "0x4001B45")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int score;

				[Token(Token = "0x6001A15")]
				[Address(RVA = "0xBE03F8", Offset = "0xBE03F8", VA = "0xBE03F8")]
				public bool betterThan(Result other)
				{
					return default(bool);
				}

				[Token(Token = "0x6001A16")]
				[Address(RVA = "0xBE3E1C", Offset = "0xBE3E1C", VA = "0xBE3E1C")]
				public Result()
				{
				}
			}

			[Token(Token = "0x4001B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string type;

			[Token(Token = "0x4001B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameplayStats stats;

			[Token(Token = "0x4001B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int xp;

			[Token(Token = "0x4001B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int totalTimePlayed;

			[Token(Token = "0x4001B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int numGamesPlayed;

			[Token(Token = "0x4001B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Result bestResult;

			[Token(Token = "0x17000469")]
			public int CappedXp
			{
				[Token(Token = "0x6001A13")]
				[Address(RVA = "0xBE49CC", Offset = "0xBE49CC", VA = "0xBE49CC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001A14")]
			[Address(RVA = "0xBE5898", Offset = "0xBE5898", VA = "0xBE5898")]
			public Type()
			{
			}
		}

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xp;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int totalTimePlayed;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numGamesPlayed;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameplayStats stats;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Type> types;

		[Token(Token = "0x17000466")]
		public int CappedXp
		{
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0xBE4AA4", Offset = "0xBE4AA4", VA = "0xBE4AA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000467")]
		public Type Regular
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0xBE49C4", Offset = "0xBE49C4", VA = "0xBE49C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000468")]
		public Type Nightmare
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0xBE49E0", Offset = "0xBE49E0", VA = "0xBE49E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xBDE2D0", Offset = "0xBDE2D0", VA = "0xBDE2D0")]
		public Type getType(ArcadeType arcadeType)
		{
			return null;
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xBE4CC0", Offset = "0xBE4CC0", VA = "0xBE4CC0")]
		public Arcade()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200046E")]
	public class Solo
	{
		[Serializable]
		[Token(Token = "0x200046F")]
		public class Stage
		{
			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool unlocked;

			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xBDE2C8", Offset = "0xBDE2C8", VA = "0xBDE2C8")]
			public Stage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000470")]
		public class Set
		{
			[Serializable]
			[Token(Token = "0x2000471")]
			public class Result
			{
				[Token(Token = "0x4001B55")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int progressPercent;

				[Token(Token = "0x4001B56")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float time;

				[Token(Token = "0x6001A1C")]
				[Address(RVA = "0xBE59FC", Offset = "0xBE59FC", VA = "0xBE59FC")]
				public Result()
				{
				}

				[Token(Token = "0x6001A1D")]
				[Address(RVA = "0xBE5A20", Offset = "0xBE5A20", VA = "0xBE5A20")]
				public void Reset()
				{
				}

				[Token(Token = "0x6001A1E")]
				[Address(RVA = "0xBDEEB4", Offset = "0xBDEEB4", VA = "0xBDEEB4")]
				public bool betterThan(Result other)
				{
					return default(bool);
				}
			}

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int xp;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int totalTimePlayed;

			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numGamesPlayed;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numGamesComplete;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameplayStats stats;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Result bestResult;

			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xBE5910", Offset = "0xBE5910", VA = "0xBE5910")]
			public Set(string id)
			{
			}
		}

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int xp;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int totalTimePlayed;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int numGamesPlayed;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numSetsCompleted;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameplayStats stats;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Stage> stages;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Set> sets;

		[Token(Token = "0x1700046A")]
		public int CappedXp
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0xBE49E8", Offset = "0xBE49E8", VA = "0xBE49E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xBDE530", Offset = "0xBDE530", VA = "0xBDE530")]
		public Set getSet(string setId)
		{
			return null;
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xBE4D48", Offset = "0xBE4D48", VA = "0xBE4D48")]
		public Solo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000472")]
	public class Custom
	{
		[Serializable]
		[Token(Token = "0x2000473")]
		public class Version1
		{
			[Serializable]
			[Token(Token = "0x2000474")]
			public class Set
			{
				[Token(Token = "0x4001B59")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int num;

				[Token(Token = "0x4001B5A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public int version;

				[Token(Token = "0x4001B5B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Solo.Set.Result bestResult;

				[Token(Token = "0x6001A22")]
				[Address(RVA = "0xBE5AB8", Offset = "0xBE5AB8", VA = "0xBE5AB8")]
				public Set(int num)
				{
				}
			}

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Set> sets;

			[Token(Token = "0x6001A20")]
			[Address(RVA = "0xBE11D0", Offset = "0xBE11D0", VA = "0xBE11D0")]
			public Set GetSet(int setNum)
			{
				return null;
			}

			[Token(Token = "0x6001A21")]
			[Address(RVA = "0xBE5A30", Offset = "0xBE5A30", VA = "0xBE5A30")]
			public Version1()
			{
			}
		}

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Version1 v1;

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xBE4E20", Offset = "0xBE4E20", VA = "0xBE4E20")]
		public Custom()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000475")]
	public class Multiplayer
	{
		[Serializable]
		[Token(Token = "0x2000476")]
		public class Versus
		{
			[Serializable]
			[Token(Token = "0x2000477")]
			public class Set
			{
				[Token(Token = "0x4001B6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string id;

				[Token(Token = "0x4001B6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int xp;

				[Token(Token = "0x4001B6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int totalTimePlayed;

				[Token(Token = "0x4001B6F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int numGamesPlayed;

				[Token(Token = "0x4001B70")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public int numGamesWon;

				[Token(Token = "0x4001B71")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int numGamesLost;

				[Token(Token = "0x4001B72")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
				public int numGamesDrawn;

				[Token(Token = "0x4001B73")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public GameplayStats stats;

				[Token(Token = "0x6001A2E")]
				[Address(RVA = "0xBE62F0", Offset = "0xBE62F0", VA = "0xBE62F0")]
				public Set(string id)
				{
				}
			}

			[Token(Token = "0x4001B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int xp;

			[Token(Token = "0x4001B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int totalTimePlayed;

			[Token(Token = "0x4001B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numGamesPlayed;

			[Token(Token = "0x4001B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numGamesWon;

			[Token(Token = "0x4001B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numGamesLost;

			[Token(Token = "0x4001B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int numGamesDrawn;

			[Token(Token = "0x4001B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int skillRating;

			[Token(Token = "0x4001B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int unreportedSkillRating;

			[Token(Token = "0x4001B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float skillRatingDeviation;

			[Token(Token = "0x4001B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float unreportedSkillRatingDeviation;

			[Token(Token = "0x4001B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string seasonLeaderboard;

			[Token(Token = "0x4001B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string seasonType;

			[Token(Token = "0x4001B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameplayStats stats;

			[Token(Token = "0x4001B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Set> sets;

			[Token(Token = "0x1700046C")]
			public int CappedXp
			{
				[Token(Token = "0x6001A25")]
				[Address(RVA = "0xBE49FC", Offset = "0xBE49FC", VA = "0xBE49FC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001A26")]
			[Address(RVA = "0xBE5BEC", Offset = "0xBE5BEC", VA = "0xBE5BEC")]
			public string GetSeasonType()
			{
				return null;
			}

			[Token(Token = "0x6001A27")]
			[Address(RVA = "0xBE5C44", Offset = "0xBE5C44", VA = "0xBE5C44")]
			public float GetSkillRating(bool includeUnreported = false)
			{
				return default(float);
			}

			[Token(Token = "0x6001A28")]
			[Address(RVA = "0xBE5D14", Offset = "0xBE5D14", VA = "0xBE5D14")]
			public void SetUnreportedSkillRating(float rating)
			{
			}

			[Token(Token = "0x6001A29")]
			[Address(RVA = "0xBE5F64", Offset = "0xBE5F64", VA = "0xBE5F64")]
			public float GetSkillRatingDeviation(bool includeUnreported = false)
			{
				return default(float);
			}

			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xBE6018", Offset = "0xBE6018", VA = "0xBE6018")]
			public void SetUnreportedSkillRatingDeviation(float ratingDeviation)
			{
			}

			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xBDE770", Offset = "0xBDE770", VA = "0xBDE770")]
			public Set getSet(string setId)
			{
				return null;
			}

			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xBE6160", Offset = "0xBE6160", VA = "0xBE6160")]
			private Set SetById(string setId)
			{
				return null;
			}

			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0xBE5B54", Offset = "0xBE5B54", VA = "0xBE5B54")]
			public Versus()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000479")]
		public class CoOp : Arcade
		{
			[Token(Token = "0x6001A32")]
			[Address(RVA = "0xBE5BE8", Offset = "0xBE5BE8", VA = "0xBE5BE8")]
			public CoOp()
			{
			}
		}

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Versus ranked;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoOp coOp;

		[Token(Token = "0x1700046B")]
		public Versus versus
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0xBE5B4C", Offset = "0xBE5B4C", VA = "0xBE5B4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xBE4E90", Offset = "0xBE4E90", VA = "0xBE4E90")]
		public Multiplayer()
		{
		}
	}

	[Token(Token = "0x4001B11")]
	private const float initBestTime = 5999.9f;

	[Token(Token = "0x4001B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int version;

	[Token(Token = "0x4001B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Operations operations;

	[Token(Token = "0x4001B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Summary summary;

	[Token(Token = "0x4001B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Personal personal;

	[Token(Token = "0x4001B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameplayStatsEx overallStats;

	[Token(Token = "0x4001B17")]
	private const int XP_CAP_PER_MODE = 50000;

	[Token(Token = "0x4001B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Arcade arcade;

	[Token(Token = "0x4001B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Solo solo;

	[Token(Token = "0x4001B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Custom custom;

	[Token(Token = "0x4001B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Multiplayer multiplayer;

	[Token(Token = "0x17000461")]
	public int TotalXp
	{
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xBDEF9C", Offset = "0xBDEF9C", VA = "0xBDEF9C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000462")]
	public int TotalCappedXp
	{
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xBE48F0", Offset = "0xBE48F0", VA = "0xBE48F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000463")]
	public int OldProfileTotalCappedXp
	{
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xBE4A10", Offset = "0xBE4A10", VA = "0xBE4A10")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60019FC")]
	[Address(RVA = "0xBDCA10", Offset = "0xBDCA10", VA = "0xBDCA10")]
	public PlayerProfileData()
	{
	}
}
[Token(Token = "0x200047A")]
public static class PlayerProfileSync
{
	[Token(Token = "0x6001A33")]
	[Address(RVA = "0xBDEFF0", Offset = "0xBDEFF0", VA = "0xBDEFF0")]
	public static void sync(PlayerProfileData offlineData, PlayerProfileData onlineData, bool initial)
	{
	}

	[Token(Token = "0x6001A34")]
	[Address(RVA = "0xBE75E4", Offset = "0xBE75E4", VA = "0xBE75E4")]
	private static void mergeGameplayStats(GameplayStats offlineStats, GameplayStats onlineStats)
	{
	}

	[Token(Token = "0x6001A35")]
	[Address(RVA = "0xBE71F0", Offset = "0xBE71F0", VA = "0xBE71F0")]
	private static void mergeBoolMax(ref bool b1, ref bool b2)
	{
	}

	[Token(Token = "0x6001A36")]
	[Address(RVA = "0xBE7028", Offset = "0xBE7028", VA = "0xBE7028")]
	private static void mergeIntMax(ref int i1, ref int i2)
	{
	}

	[Token(Token = "0x6001A37")]
	[Address(RVA = "0xBE6424", Offset = "0xBE6424", VA = "0xBE6424")]
	private static void mergeMedals(PlayerProfileData.Summary offlineSummary, PlayerProfileData.Summary onlineSummary)
	{
	}

	[Token(Token = "0x6001A38")]
	[Address(RVA = "0xBE6670", Offset = "0xBE6670", VA = "0xBE6670")]
	private static void mergeAchievements(PlayerProfileData.Summary offlineSummary, PlayerProfileData.Summary onlineSummary)
	{
	}

	[Token(Token = "0x6001A39")]
	[Address(RVA = "0xBE6B68", Offset = "0xBE6B68", VA = "0xBE6B68")]
	private static void mergeItems(PlayerProfileData.Summary offlineSummary, PlayerProfileData.Summary onlineSummary, bool initial)
	{
	}

	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0xBE7CC8", Offset = "0xBE7CC8", VA = "0xBE7CC8")]
	private static void ValidateOnlyOneEqupedItemPreSlot(Dictionary<string, PlayerProfileData.Summary.ItemStatus> offline, Dictionary<string, PlayerProfileData.Summary.ItemStatus> online)
	{
	}

	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0xBE73BC", Offset = "0xBE73BC", VA = "0xBE73BC")]
	private static void mergeMonthlyChallengeTime(ref MonthlyChallenge.Time offlineTime, ref MonthlyChallenge.Time onlineTime)
	{
	}

	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0xBE817C", Offset = "0xBE817C", VA = "0xBE817C")]
	private static void mergeSoloResults(ref int prog1, ref int prog2, ref float time1, ref float time2)
	{
	}

	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0xBE76F8", Offset = "0xBE76F8", VA = "0xBE76F8")]
	private static void mergeSoloSets(PlayerProfileData.Solo.Set set1, PlayerProfileData.Solo.Set set2)
	{
	}

	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0xBE77BC", Offset = "0xBE77BC", VA = "0xBE77BC")]
	private static void mergeCustomSets(PlayerProfileData.Custom.Version1.Set set1, PlayerProfileData.Custom.Version1.Set set2)
	{
	}

	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0xBE81D0", Offset = "0xBE81D0", VA = "0xBE81D0")]
	private static void mergeFloatMin(ref float f1, ref float f2)
	{
	}

	[Token(Token = "0x6001A40")]
	[Address(RVA = "0xBE7874", Offset = "0xBE7874", VA = "0xBE7874")]
	private static void mergeFloatMax(ref float f1, ref float f2)
	{
	}
}
[Token(Token = "0x200047C")]
public class RNXDepot : MonoBehaviour, ISingleton
{
	[Token(Token = "0x200047D")]
	public enum State
	{
		[Token(Token = "0x4001B82")]
		WaitingForData,
		[Token(Token = "0x4001B83")]
		Done,
		[Token(Token = "0x4001B84")]
		Error
	}

	[Token(Token = "0x200047E")]
	public class MyDepot<T> where T : new()
	{
		[Token(Token = "0x200047F")]
		[CompilerGenerated]
		private sealed class <DefferedSend>d__23 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <>2__current;

			[Token(Token = "0x4001B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public MyDepot<T> <>4__this;

			[Token(Token = "0x17000471")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6001A5E")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000472")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001A60")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001A5B")]
			[DebuggerHidden]
			public <DefferedSend>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001A5C")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001A5D")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001A5F")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public State state;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _foundOnline;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StatsName _statsName;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _dataString;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private CoroutineHandle _defferedSendHandle;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _wantToSend;

		[Token(Token = "0x1700046D")]
		public bool isWaitingForData
		{
			[Token(Token = "0x6001A4D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046E")]
		public bool isDone
		{
			[Token(Token = "0x6001A4E")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700046F")]
		public bool isError
		{
			[Token(Token = "0x6001A4F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000470")]
		public bool foundOnline
		{
			[Token(Token = "0x6001A50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A51")]
		public MyDepot(StatsName statsName)
		{
		}

		[Token(Token = "0x6001A52")]
		~MyDepot()
		{
		}

		[Token(Token = "0x6001A53")]
		public void Retry()
		{
		}

		[Token(Token = "0x6001A54")]
		private void onReadRespond(bool success, StatsData statsData)
		{
		}

		[Token(Token = "0x6001A55")]
		private void readExistingFile()
		{
		}

		[Token(Token = "0x6001A56")]
		private void parse()
		{
		}

		[Token(Token = "0x6001A57")]
		private void onWriteRespond(bool success)
		{
		}

		[Token(Token = "0x6001A58")]
		public void write()
		{
		}

		[Token(Token = "0x6001A59")]
		[IteratorStateMachine(typeof(MyDepot<>.<DefferedSend>d__23))]
		private IEnumerator<float> DefferedSend()
		{
			return null;
		}
	}

	[Token(Token = "0x2000480")]
	public class FriendDepot<T> where T : new()
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public State state;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _foundOnline;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string _friendUserID;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private StatsName _statsName;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string errorMessage;

		[Token(Token = "0x17000473")]
		public bool isWaitingForData
		{
			[Token(Token = "0x6001A61")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000474")]
		public bool isComplete
		{
			[Token(Token = "0x6001A62")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000475")]
		public bool isDone
		{
			[Token(Token = "0x6001A63")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000476")]
		public bool isError
		{
			[Token(Token = "0x6001A64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000477")]
		public bool foundOnline
		{
			[Token(Token = "0x6001A65")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A66")]
		public FriendDepot(string friendUserID, StatsName statsName)
		{
		}

		[Token(Token = "0x6001A67")]
		private void onReadRespond(bool success, Dictionary<string, StatsData> statsDataPerUserID)
		{
		}

		[Token(Token = "0x6001A68")]
		private void downloadFile()
		{
		}
	}

	[Token(Token = "0x4001B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RNXDepot inst;

	[NonSerialized]
	[Token(Token = "0x4001B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool initialized;

	[Token(Token = "0x4001B7E")]
	private const int CompressionThreshold = 204800;

	[Token(Token = "0x4001B7F")]
	private const string ZipPrefix = "zip:";

	[Token(Token = "0x4001B80")]
	private const string ZipStreamName = "data.json";

	[Token(Token = "0x6001A49")]
	[Address(RVA = "0xBE9578", Offset = "0xBE9578", VA = "0xBE9578", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0xBE95DC", Offset = "0xBE95DC", VA = "0xBE95DC")]
	protected static string Compress(string dataString)
	{
		return null;
	}

	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0xBE9C30", Offset = "0xBE9C30", VA = "0xBE9C30")]
	protected static string Decompress(string dataString)
	{
		return null;
	}

	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0xBEA074", Offset = "0xBEA074", VA = "0xBEA074")]
	public RNXDepot()
	{
	}
}
[Token(Token = "0x2000481")]
public class TrackingModeOrigin : MonoBehaviour
{
	[Token(Token = "0x4001B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackingOriginModeFlags _desiredTrackingOriginMode;

	[Token(Token = "0x4001B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<XRInputSubsystem> _inputSubsystems;

	[Token(Token = "0x6001A69")]
	[Address(RVA = "0xBEA07C", Offset = "0xBEA07C", VA = "0xBEA07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0xBEA204", Offset = "0xBEA204", VA = "0xBEA204")]
	public TrackingModeOrigin()
	{
	}
}
[Token(Token = "0x2000482")]
[RequireComponent(typeof(LaserPointer))]
public class CoOpPointer : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4001B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool show;

	[Token(Token = "0x4001B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float length;

	[Token(Token = "0x4001B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4001B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LaserPointer _pointer;

	[Token(Token = "0x4001B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LaserPointer _uiPointer;

	[Token(Token = "0x4001B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _enabled;

	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0xBEA2A4", Offset = "0xBEA2A4", VA = "0xBEA2A4")]
	private void UpdateFade()
	{
	}

	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0xBEA5DC", Offset = "0xBEA5DC", VA = "0xBEA5DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0xBEA6F8", Offset = "0xBEA6F8", VA = "0xBEA6F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0xBEAB38", Offset = "0xBEAB38", VA = "0xBEAB38")]
	public CoOpPointer()
	{
	}
}
[Token(Token = "0x2000483")]
public class LaserPointer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000484")]
	public class MaterialPair
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material p1;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material p2;

		[NonSerialized]
		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material current;

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xBEB914", Offset = "0xBEB914", VA = "0xBEB914")]
		public MaterialPair()
		{
		}
	}

	[Token(Token = "0x4001B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float damping;

	[Token(Token = "0x4001B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dampingAngle;

	[Token(Token = "0x4001B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MaterialPair[] materialPairs;

	[Token(Token = "0x4001BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform glow;

	[NonSerialized]
	[Token(Token = "0x4001BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float length;

	[NonSerialized]
	[Token(Token = "0x4001BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeMultiplier;

	[NonSerialized]
	[Token(Token = "0x4001BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool show;

	[Token(Token = "0x4001BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _parent;

	[Token(Token = "0x4001BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _transform;

	[Token(Token = "0x4001BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Player _player;

	[Token(Token = "0x4001BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer[] _lines;

	[Token(Token = "0x4001BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] _originalLength;

	[Token(Token = "0x4001BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _enabled;

	[Token(Token = "0x4001BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _maxOriginalLength;

	[Token(Token = "0x4001BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Quaternion OFFSET_ROT;

	[Token(Token = "0x4001BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SmoothFloat _fade;

	[Token(Token = "0x4001BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private SmoothFloat _length;

	[Token(Token = "0x4001BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 _dir;

	[Token(Token = "0x4001BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SmoothVector3 _endPoint;

	[Token(Token = "0x4001BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int _FadeID;

	[Token(Token = "0x4001BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _RemapID;

	[Token(Token = "0x4001BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _visible;

	[Token(Token = "0x4001BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _lastLength;

	[Token(Token = "0x17000478")]
	public Ray Ray
	{
		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xBEA490", Offset = "0xBEA490", VA = "0xBEA490")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6001A71")]
	[Address(RVA = "0xBEAB48", Offset = "0xBEAB48", VA = "0xBEAB48")]
	private void InitRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6001A72")]
	[Address(RVA = "0xBEACD8", Offset = "0xBEACD8", VA = "0xBEACD8")]
	private void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x6001A73")]
	[Address(RVA = "0xBEA974", Offset = "0xBEA974", VA = "0xBEA974")]
	public void Enable()
	{
	}

	[Token(Token = "0x6001A74")]
	[Address(RVA = "0xBEA7FC", Offset = "0xBEA7FC", VA = "0xBEA7FC")]
	public void Disable()
	{
	}

	[Token(Token = "0x6001A75")]
	[Address(RVA = "0xBEB3D4", Offset = "0xBEB3D4", VA = "0xBEB3D4")]
	private void UpdateLength()
	{
	}

	[Token(Token = "0x6001A76")]
	[Address(RVA = "0xBEB29C", Offset = "0xBEB29C", VA = "0xBEB29C")]
	private void SetLength(float wantedLength)
	{
	}

	[Token(Token = "0x6001A77")]
	[Address(RVA = "0xBEB05C", Offset = "0xBEB05C", VA = "0xBEB05C")]
	private void UpdateFade()
	{
	}

	[Token(Token = "0x6001A78")]
	[Address(RVA = "0xBEAF9C", Offset = "0xBEAF9C", VA = "0xBEAF9C")]
	private void UpdateEndPoint()
	{
	}

	[Token(Token = "0x6001A79")]
	[Address(RVA = "0xBEB460", Offset = "0xBEB460", VA = "0xBEB460")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0xBEB7B8", Offset = "0xBEB7B8", VA = "0xBEB7B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0xBEB7E8", Offset = "0xBEB7E8", VA = "0xBEB7E8")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000485")]
public class RacketAnimator : MonoBehaviour
{
	[Token(Token = "0x2000486")]
	public enum State
	{
		[Token(Token = "0x4001BE9")]
		Empty,
		[Token(Token = "0x4001BEA")]
		Buildup,
		[Token(Token = "0x4001BEB")]
		Idle,
		[Token(Token = "0x4001BEC")]
		Breakdown
	}

	[Token(Token = "0x2000487")]
	private class RacketBlade
	{
		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 defaultPos;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 outwardsDir;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion orientation;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float hit;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float frequency;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 velocity;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Quaternion spin;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RacketAnimator _racket;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _timeOffset;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _pulseTime;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _delayTime;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _totalTime;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _buildupStartTime;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _param;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _targetPos;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 _initPos;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Quaternion _targetRot;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion _initRot;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 _targetScale;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _isCenter;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Transform _parent;

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xBEE154", Offset = "0xBEE154", VA = "0xBEE154")]
		public RacketBlade(RacketAnimator racket, Transform wing, Transform parent, float t, float pulse, float delay, bool center = false)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xBED84C", Offset = "0xBED84C", VA = "0xBED84C")]
		public void init(float linearTime)
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xBEEC98", Offset = "0xBEEC98", VA = "0xBEEC98")]
		public void reset()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xBECF1C", Offset = "0xBECF1C", VA = "0xBECF1C")]
		public void updateExplosion(float dt)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xBEC2A4", Offset = "0xBEC2A4", VA = "0xBEC2A4")]
		public bool updateBuildup(float time, float dt, float linearTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xBEC844", Offset = "0xBEC844", VA = "0xBEC844")]
		public void updateIdle(float time, float dt, float linearTime, float pullStrength, float hitStrength, bool updateRotation = true)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000488")]
	public class RacketBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000489")]
		public class Hit
		{
			[Token(Token = "0x4001C0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float multiplier;

			[Token(Token = "0x4001C0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float cooldownSpeed;

			[Token(Token = "0x4001C0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float wireMultiplier;

			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xBF0208", Offset = "0xBF0208", VA = "0xBF0208")]
			public Hit()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048A")]
		public class Hover
		{
			[Token(Token = "0x4001C0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float amplitudeMin;

			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float amplitudeMax;

			[Token(Token = "0x4001C11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float offset;

			[Token(Token = "0x4001C12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4001C13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float wave;

			[Token(Token = "0x4001C14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float waveFrequency;

			[Token(Token = "0x4001C15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float waveChaos;

			[Token(Token = "0x4001C16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AnimationCurve graph;

			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xBF0224", Offset = "0xBF0224", VA = "0xBF0224")]
			public Hover()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200048B")]
		public class Noise
		{
			[Token(Token = "0x4001C17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float multiplier;

			[Token(Token = "0x4001C18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float falloff;

			[Token(Token = "0x4001C19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve graph;

			[Token(Token = "0x6001AB9")]
			[Address(RVA = "0xBF0254", Offset = "0xBF0254", VA = "0xBF0254")]
			public Noise()
			{
			}
		}

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hit hit;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Hover hover;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Noise noise;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Pull")]
		public float pullMultiplier;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("Buildup")]
		public float buildupTime;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float buildupMinDelay;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Header("Break")]
		public float breakSpeed;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float breakSpin;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Header("Setup")]
		public float triggerSpeed;

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xBF00BC", Offset = "0xBF00BC", VA = "0xBF00BC")]
		public RacketBehaviour()
		{
		}
	}

	[Token(Token = "0x200048C")]
	[CompilerGenerated]
	private sealed class <ActivatePointerCo>d__111 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RacketAnimator <>4__this;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x17000483")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xBF0530", Offset = "0xBF0530", VA = "0xBF0530", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000484")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0xBF0578", Offset = "0xBF0578", VA = "0xBF0578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xBF0004", Offset = "0xBF0004", VA = "0xBF0004")]
		[DebuggerHidden]
		public <ActivatePointerCo>d__111(int <>1__state)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xBF0268", Offset = "0xBF0268", VA = "0xBF0268", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xBF026C", Offset = "0xBF026C", VA = "0xBF026C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xBF0538", Offset = "0xBF0538", VA = "0xBF0538", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform _transform;

	[Token(Token = "0x4001BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RacketBehaviour defaultBehaviour;

	[Token(Token = "0x4001BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform mainCollider;

	[Token(Token = "0x4001BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshCollider _mainCollider;

	[Token(Token = "0x4001BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RacketModel _model;

	[Token(Token = "0x4001BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform _racketPartsContainer;

	[Token(Token = "0x4001BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _parent;

	[Token(Token = "0x4001BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RacketBlade[] _wings;

	[Token(Token = "0x4001BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RacketBlade _center;

	[Token(Token = "0x4001BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SyncTransform _sync;

	[Token(Token = "0x4001BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _lastTriggerPressValue;

	[Token(Token = "0x4001BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SmoothFloat _triggerPress;

	[Token(Token = "0x4001BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 _triggerRestPos;

	[Token(Token = "0x4001BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion _triggerRestRot;

	[Token(Token = "0x4001BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 _triggerPressedPos;

	[Token(Token = "0x4001BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion _triggerPressedRot;

	[Token(Token = "0x4001BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Mobile _mobile;

	[Token(Token = "0x4001BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RacketPointer _uiPointer;

	[Token(Token = "0x4001BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private RacketHaptic _haptic;

	[Token(Token = "0x4001BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RacketSling _sling;

	[Token(Token = "0x4001BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private State _desiredState;

	[Token(Token = "0x4001BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private State _state;

	[Token(Token = "0x4001BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _time;

	[Token(Token = "0x4001BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _linearTime;

	[Token(Token = "0x4001BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _dt;

	[Token(Token = "0x4001BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _lastCharge;

	[Token(Token = "0x4001BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _pulsTime;

	[Token(Token = "0x4001BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _delayTime;

	[Token(Token = "0x4001BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _pulseSpeed;

	[Token(Token = "0x4001BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _wantedPulseSpeed;

	[Token(Token = "0x4001BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _lastHitStrength;

	[Token(Token = "0x4001BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private bool _isPulling;

	[Token(Token = "0x4001BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _pullingStrength;

	[Token(Token = "0x4001BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _lastBreakupTime;

	[Token(Token = "0x4001BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material _wireMaterial;

	[Token(Token = "0x4001BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material _wireGlowMaterial;

	[Token(Token = "0x4001BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _ChargeID;

	[Token(Token = "0x4001BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _TimeID;

	[Token(Token = "0x4001BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _DelayTimeID;

	[Token(Token = "0x4001BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _PulseTimeID;

	[Token(Token = "0x4001BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _MenuGlowMltID;

	[Token(Token = "0x4001BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SkinnedMeshRenderer[] _smrs;

	[Token(Token = "0x4001BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private ParticleSystemRenderer[] _psrs;

	[Token(Token = "0x4001BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private SkinnedMeshRenderer[] _overrideSmrs;

	[Token(Token = "0x4001BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ParticleSystemRenderer[] _overridePsrs;

	[Token(Token = "0x4001BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float _initColliderScale;

	[Token(Token = "0x4001BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private CoOpPointer _coOpPointer;

	[Token(Token = "0x4001BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Coroutine _ActivatePointerCo;

	[Token(Token = "0x17000479")]
	public static RacketAnimator mine
	{
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xBEB91C", Offset = "0xBEB91C", VA = "0xBEB91C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700047A")]
	public static RacketAnimator opponent
	{
		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xBEB988", Offset = "0xBEB988", VA = "0xBEB988")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700047B")]
	public static RacketAnimator ballOwner
	{
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xBEB9F4", Offset = "0xBEB9F4", VA = "0xBEB9F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700047C")]
	public Player myPlayer
	{
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xBEBA5C", Offset = "0xBEBA5C", VA = "0xBEBA5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700047D")]
	public RacketModel Model
	{
		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xBEBC74", Offset = "0xBEBC74", VA = "0xBEBC74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xBEBC7C", Offset = "0xBEBC7C", VA = "0xBEBC7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700047E")]
	public static Transform RacketPartsContainer
	{
		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xBEBEA8", Offset = "0xBEBEA8", VA = "0xBEBEA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700047F")]
	public RacketPointer UIPointer
	{
		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xBEBFA4", Offset = "0xBEBFA4", VA = "0xBEBFA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000480")]
	public RacketHaptic haptic
	{
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xBEBFAC", Offset = "0xBEBFAC", VA = "0xBEBFAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000481")]
	public RacketSling sling
	{
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xBEBFB4", Offset = "0xBEBFB4", VA = "0xBEBFB4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000482")]
	public State state
	{
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xBEBFBC", Offset = "0xBEBFBC", VA = "0xBEBFBC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1400003D")]
	public event Action OnModelChanged
	{
		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xBEBB3C", Offset = "0xBEBB3C", VA = "0xBEBB3C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xBEBBD8", Offset = "0xBEBBD8", VA = "0xBEBBD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0xBEBFC4", Offset = "0xBEBFC4", VA = "0xBEBFC4")]
	public static bool IsTriggerPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0xBEC050", Offset = "0xBEC050", VA = "0xBEC050")]
	private void SetBladesVisibility(bool state)
	{
	}

	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0xBEC20C", Offset = "0xBEC20C", VA = "0xBEC20C")]
	private void UpdateBuildup()
	{
	}

	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0xBEC620", Offset = "0xBEC620", VA = "0xBEC620")]
	private void UpdateIdle()
	{
	}

	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0xBECC5C", Offset = "0xBECC5C", VA = "0xBECC5C")]
	private void UpdateHit()
	{
	}

	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0xBECD38", Offset = "0xBECD38", VA = "0xBECD38")]
	private void UpdateBreakdown()
	{
	}

	[Token(Token = "0x6001A90")]
	[Address(RVA = "0xBED118", Offset = "0xBED118", VA = "0xBED118")]
	private void UpdateDesiredState()
	{
	}

	[Token(Token = "0x6001A91")]
	[Address(RVA = "0xBED63C", Offset = "0xBED63C", VA = "0xBED63C")]
	public bool IsReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A92")]
	[Address(RVA = "0xBED64C", Offset = "0xBED64C", VA = "0xBED64C")]
	public bool IsReadyOrBuilding()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A93")]
	[Address(RVA = "0xBEC57C", Offset = "0xBEC57C", VA = "0xBEC57C")]
	private void UpdateZen()
	{
	}

	[Token(Token = "0x6001A94")]
	[Address(RVA = "0xBED660", Offset = "0xBED660", VA = "0xBED660")]
	public void LoadRacket()
	{
	}

	[Token(Token = "0x6001A95")]
	[Address(RVA = "0xBED6F0", Offset = "0xBED6F0", VA = "0xBED6F0")]
	private bool IsBallTooClose()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A96")]
	[Address(RVA = "0xBED1C8", Offset = "0xBED1C8", VA = "0xBED1C8")]
	private void LoadRacketNow()
	{
	}

	[Token(Token = "0x6001A97")]
	[Address(RVA = "0xBED9D8", Offset = "0xBED9D8", VA = "0xBED9D8")]
	public void RemoveRacket()
	{
	}

	[Token(Token = "0x6001A98")]
	[Address(RVA = "0xBED2EC", Offset = "0xBED2EC", VA = "0xBED2EC")]
	private void RemoveRacketNow()
	{
	}

	[Token(Token = "0x6001A99")]
	[Address(RVA = "0xBEDA68", Offset = "0xBEDA68", VA = "0xBEDA68")]
	public bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0xBEDA7C", Offset = "0xBEDA7C", VA = "0xBEDA7C")]
	public void BeginPull()
	{
	}

	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0xBEDA88", Offset = "0xBEDA88", VA = "0xBEDA88")]
	public void EndPull()
	{
	}

	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0xBEDA90", Offset = "0xBEDA90", VA = "0xBEDA90")]
	public void BallHit(Vector3 pos, Vector3 norm, float strength)
	{
	}

	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0xBEDCF8", Offset = "0xBEDCF8", VA = "0xBEDCF8")]
	private void ReplaceMaterialInChildren(ref Material mat)
	{
	}

	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0xBEDE48", Offset = "0xBEDE48", VA = "0xBEDE48")]
	public void SetMenuButtonGlow(bool glow_active)
	{
	}

	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0xBEBD18", Offset = "0xBEBD18", VA = "0xBEBD18")]
	private void DeinitModel()
	{
	}

	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0xBEDF04", Offset = "0xBEDF04", VA = "0xBEDF04")]
	private void InitBlades()
	{
	}

	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0xBEE910", Offset = "0xBEE910", VA = "0xBEE910")]
	public void OverrideModel(PlayerModel playerModel, Transform overrideCenter, Transform[] overrideWings, Material smrP1, Material smrP2, Material psrP1, Material psrP2)
	{
	}

	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0xBEED50", Offset = "0xBEED50", VA = "0xBEED50")]
	public void UnOverrideModel()
	{
	}

	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0xBEEDB0", Offset = "0xBEEDB0", VA = "0xBEEDB0")]
	public void InitModel()
	{
	}

	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0xBEF348", Offset = "0xBEF348", VA = "0xBEF348")]
	private void OnHandsSwitched()
	{
	}

	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0xBEF3EC", Offset = "0xBEF3EC", VA = "0xBEF3EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0xBEF698", Offset = "0xBEF698", VA = "0xBEF698")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0xBEF6F4", Offset = "0xBEF6F4", VA = "0xBEF6F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0xBEF7A4", Offset = "0xBEF7A4", VA = "0xBEF7A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0xBEF854", Offset = "0xBEF854", VA = "0xBEF854")]
	private void UpdateColliderScale()
	{
	}

	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0xBEE32C", Offset = "0xBEE32C", VA = "0xBEE32C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0xBEFB34", Offset = "0xBEFB34", VA = "0xBEFB34")]
	private void UpdateCoOpPointer(bool show)
	{
	}

	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0xBEFC54", Offset = "0xBEFC54", VA = "0xBEFC54")]
	private void MpBreakRacketIfInFace()
	{
	}

	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0xBEFF20", Offset = "0xBEFF20", VA = "0xBEFF20")]
	public void ActivatePointers(bool active)
	{
	}

	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0xBEFF7C", Offset = "0xBEFF7C", VA = "0xBEFF7C")]
	[IteratorStateMachine(typeof(<ActivatePointerCo>d__111))]
	private IEnumerator ActivatePointerCo(bool active)
	{
		return null;
	}

	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0xBF002C", Offset = "0xBF002C", VA = "0xBF002C")]
	public RacketAnimator()
	{
	}
}
[Token(Token = "0x200048D")]
public class RacketModeController : MonoBehaviour
{
	[Token(Token = "0x200048E")]
	private enum Mode
	{
		[Token(Token = "0x4001C24")]
		None,
		[Token(Token = "0x4001C25")]
		UI,
		[Token(Token = "0x4001C26")]
		Racket
	}

	[Token(Token = "0x4001C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RacketModeController inst;

	[Token(Token = "0x4001C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _inGame;

	[Token(Token = "0x4001C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _broken;

	[Token(Token = "0x4001C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _uiPopUp;

	[Token(Token = "0x4001C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Mode _mode;

	[Token(Token = "0x17000485")]
	public bool inGame
	{
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xBF05C8", Offset = "0xBF05C8", VA = "0xBF05C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xBF0580", Offset = "0xBF0580", VA = "0xBF0580")]
		set
		{
		}
	}

	[Token(Token = "0x17000486")]
	public bool broken
	{
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xBF05D0", Offset = "0xBF05D0", VA = "0xBF05D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000487")]
	public bool uiPopUp
	{
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xBF05EC", Offset = "0xBF05EC", VA = "0xBF05EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000488")]
	private Mode mode
	{
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xBF0608", Offset = "0xBF0608", VA = "0xBF0608")]
		set
		{
		}
	}

	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0xBF06F8", Offset = "0xBF06F8", VA = "0xBF06F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0xBF0750", Offset = "0xBF0750", VA = "0xBF0750")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0xBF0870", Offset = "0xBF0870", VA = "0xBF0870")]
	private void onPopUpPopped(Transform popUpRoot)
	{
	}

	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0xBF088C", Offset = "0xBF088C", VA = "0xBF088C")]
	private void onPopUpUnpopped()
	{
	}

	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0xBF059C", Offset = "0xBF059C", VA = "0xBF059C")]
	private void update()
	{
	}

	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0xBF08A0", Offset = "0xBF08A0", VA = "0xBF08A0")]
	public RacketModeController()
	{
	}
}
[Token(Token = "0x200048F")]
public class RacketModel : MonoBehaviour
{
	[Token(Token = "0x4001C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarSettings.AvatarLabel label;

	[Token(Token = "0x4001C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trigger;

	[Token(Token = "0x4001C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform triggerPressedPose;

	[Token(Token = "0x4001C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform center;

	[Token(Token = "0x4001C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _centerOverride;

	[Token(Token = "0x4001C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform[] wings;

	[Token(Token = "0x4001C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform[] _wingsOverride;

	[Token(Token = "0x4001C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer menuButton;

	[Token(Token = "0x4001C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer backButton;

	[Token(Token = "0x4001C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform handle;

	[Token(Token = "0x4001C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform panel;

	[Token(Token = "0x4001C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject zen;

	[Token(Token = "0x4001C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform pointerAnchorUI;

	[Token(Token = "0x4001C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform pointerAnchorCoOp;

	[Token(Token = "0x4001C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshCollider mainCollider;

	[Token(Token = "0x4001C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Rigidbody handleRB;

	[Token(Token = "0x4001C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform pendantAnchor;

	[Token(Token = "0x4001C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform yurAnchor;

	[Token(Token = "0x4001C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private VRPlugin.Side _currentSide;

	[Token(Token = "0x4001C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int _MenuTexID;

	[Token(Token = "0x4001C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private List<Material> _backMaterials;

	[Token(Token = "0x17000489")]
	public Transform Center
	{
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xBEC194", Offset = "0xBEC194", VA = "0xBEC194")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xBF08A8", Offset = "0xBF08A8", VA = "0xBF08A8")]
		set
		{
		}
	}

	[Token(Token = "0x1700048A")]
	public Transform[] Wings
	{
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xBED0FC", Offset = "0xBED0FC", VA = "0xBED0FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xBF08B0", Offset = "0xBF08B0", VA = "0xBF08B0")]
		set
		{
		}
	}

	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0xBF08B8", Offset = "0xBF08B8", VA = "0xBF08B8")]
	private void OnHandsSwitched()
	{
	}

	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0xBF0954", Offset = "0xBF0954", VA = "0xBF0954")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0xBF0AC0", Offset = "0xBF0AC0", VA = "0xBF0AC0")]
	private void UpdateBackMaterial()
	{
	}

	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0xBF0C54", Offset = "0xBF0C54", VA = "0xBF0C54")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0xBF0C58", Offset = "0xBF0C58", VA = "0xBF0C58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0xBF0914", Offset = "0xBF0914", VA = "0xBF0914")]
	public void SetupHand(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0xBF0D08", Offset = "0xBF0D08", VA = "0xBF0D08")]
	public RacketModel()
	{
	}
}
[Token(Token = "0x2000490")]
[RequireComponent(typeof(LaserPointer))]
public class RacketPointer : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	[CompilerGenerated]
	private sealed class <raycastCo>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RacketPointer <>4__this;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Ray <ray>5__2;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <maxDist>5__3;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <lastDist>5__4;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <n>5__5;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int <k>5__6;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__7;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Image[] <images>5__8;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <m>5__9;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int <j>5__10;

		[Token(Token = "0x1700048C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0xBF1E68", Offset = "0xBF1E68", VA = "0xBF1E68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700048D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0xBF1EB0", Offset = "0xBF1EB0", VA = "0xBF1EB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xBF0FF4", Offset = "0xBF0FF4", VA = "0xBF0FF4")]
		[DebuggerHidden]
		public <raycastCo>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xBF1A28", Offset = "0xBF1A28", VA = "0xBF1A28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xBF1A2C", Offset = "0xBF1A2C", VA = "0xBF1A2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xBF1E70", Offset = "0xBF1E70", VA = "0xBF1E70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxLength;

	[Token(Token = "0x4001C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxLengthLE;

	[Token(Token = "0x4001C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4001C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _length;

	[Token(Token = "0x4001C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LaserPointer _pointer;

	[Token(Token = "0x4001C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3[] _corncers;

	[Token(Token = "0x4001C42")]
	private const string _COROUTINES_TAG = "RacketPointer_Coroutines";

	[Token(Token = "0x4001C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _enabled;

	[Token(Token = "0x4001C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GameObject[] _canvases;

	[Token(Token = "0x4001C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Image[]> _imagesByCanvas;

	[Token(Token = "0x1700048B")]
	public Ray Ray
	{
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xBF0D94", Offset = "0xBF0D94", VA = "0xBF0D94")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0xBF0DD0", Offset = "0xBF0DD0", VA = "0xBF0DD0")]
	private bool finitePlaneRaycast(RectTransform rt, Ray ray, float maxDistance, out float distance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0xBF0F80", Offset = "0xBF0F80", VA = "0xBF0F80")]
	[IteratorStateMachine(typeof(<raycastCo>d__9))]
	private IEnumerator<float> raycastCo()
	{
		return null;
	}

	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0xBF0424", Offset = "0xBF0424", VA = "0xBF0424")]
	public void toggle(bool state)
	{
	}

	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0xBF101C", Offset = "0xBF101C", VA = "0xBF101C")]
	private void initImages()
	{
	}

	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0xBF18B4", Offset = "0xBF18B4", VA = "0xBF18B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0xBF1950", Offset = "0xBF1950", VA = "0xBF1950")]
	private void Update()
	{
	}

	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0xBF1978", Offset = "0xBF1978", VA = "0xBF1978")]
	public RacketPointer()
	{
	}
}
[Token(Token = "0x2000492")]
public class RacketPredictor : MonoBehaviour
{
	[Token(Token = "0x4001C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Params")]
	public float elbowSmoothness;

	[Token(Token = "0x4001C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float snapDuration;

	[Token(Token = "0x4001C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Debug")]
	public bool simulateLostTrackingWithGrip;

	[Token(Token = "0x4001C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool debug;

	[Token(Token = "0x4001C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 _lastTrackedHandPos;

	[Token(Token = "0x4001C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _lastTrackedHandRot;

	[Token(Token = "0x4001C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _elbowLocal;

	[Token(Token = "0x4001C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _smoothElbowLocal;

	[Token(Token = "0x4001C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _lastSmoothElbow;

	[Token(Token = "0x4001C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _lastPos;

	[Token(Token = "0x4001C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _lastRot;

	[Token(Token = "0x4001C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _amount;

	[Token(Token = "0x4001C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _timeSinceTrackingReturned;

	[Token(Token = "0x4001C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _isPositionTracked;

	[Token(Token = "0x4001C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _wasPositionTracked;

	[Token(Token = "0x4001C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool _initialized;

	[Token(Token = "0x4001C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Matrix4x4 _headMatrix;

	[Token(Token = "0x4001C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _hasFocus;

	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0xBF1F0C", Offset = "0xBF1F0C", VA = "0xBF1F0C")]
	private void Predict()
	{
	}

	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0xBF2750", Offset = "0xBF2750", VA = "0xBF2750")]
	private void OnAppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0xBF275C", Offset = "0xBF275C", VA = "0xBF275C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0xBF280C", Offset = "0xBF280C", VA = "0xBF280C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0xBF28BC", Offset = "0xBF28BC", VA = "0xBF28BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0xBF29C0", Offset = "0xBF29C0", VA = "0xBF29C0")]
	public RacketPredictor()
	{
	}
}
[Token(Token = "0x2000493")]
public class RacketRigidBody : MonoBehaviour
{
	[Token(Token = "0x4001C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float collisionMultiplier;

	[Token(Token = "0x4001C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeMultiplier;

	[Token(Token = "0x4001C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxRelativeSpeed;

	[Token(Token = "0x4001C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform anchor;

	[Token(Token = "0x4001C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RacketAnimator _racket;

	[Token(Token = "0x4001C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RacketAnimator _otherRacket;

	[Token(Token = "0x4001C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _timeSinceLastHit;

	[Token(Token = "0x4001C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _lastPlayerScale;

	[Token(Token = "0x4001C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _initScale;

	[Token(Token = "0x4001C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _initPos;

	[Token(Token = "0x4001C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion _initRot;

	[Token(Token = "0x4001C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform _transform;

	[Token(Token = "0x4001C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform _racketParent;

	[Token(Token = "0x4001C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshCollider _collider;

	[Token(Token = "0x4001C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObject _fxPrefab;

	[Token(Token = "0x4001C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isColliding;

	[Token(Token = "0x4001C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _hapticStrength;

	[Token(Token = "0x4001C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int _burstMaxSize;

	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0xBF29DC", Offset = "0xBF29DC", VA = "0xBF29DC")]
	private Vector3 GetCollisionPoint(Collision collision)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0xBF2AD4", Offset = "0xBF2AD4", VA = "0xBF2AD4")]
	private void HandleCollision(Collision collision)
	{
	}

	[Token(Token = "0x6001AED")]
	[Address(RVA = "0xBF2E08", Offset = "0xBF2E08", VA = "0xBF2E08")]
	private void PlayHitSound(Collision collision)
	{
	}

	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0xBF2F1C", Offset = "0xBF2F1C", VA = "0xBF2F1C")]
	private void PlayFX(float strength)
	{
	}

	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0xBF32B0", Offset = "0xBF32B0", VA = "0xBF32B0")]
	private void OnModelChanged()
	{
	}

	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0xBF3614", Offset = "0xBF3614", VA = "0xBF3614")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0xBF3618", Offset = "0xBF3618", VA = "0xBF3618")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0xBF361C", Offset = "0xBF361C", VA = "0xBF361C")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0xBF3624", Offset = "0xBF3624", VA = "0xBF3624")]
	private void Start()
	{
	}

	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0xBF39B4", Offset = "0xBF39B4", VA = "0xBF39B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0xBF3D20", Offset = "0xBF3D20", VA = "0xBF3D20")]
	public RacketRigidBody()
	{
	}
}
[Token(Token = "0x2000494")]
public class RacketScore : MonoBehaviour
{
	[Token(Token = "0x4001C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh[] _titleTexts;

	[Token(Token = "0x4001C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] _scoreTexts;

	[Token(Token = "0x4001C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _lastScore;

	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0xBF3D90", Offset = "0xBF3D90", VA = "0xBF3D90")]
	private void updateTitle(string title)
	{
	}

	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0xBF3DF8", Offset = "0xBF3DF8", VA = "0xBF3DF8")]
	private void updateScore(string score)
	{
	}

	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0xBF3E60", Offset = "0xBF3E60", VA = "0xBF3E60")]
	private void Update()
	{
	}

	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0xBF3FFC", Offset = "0xBF3FFC", VA = "0xBF3FFC")]
	public RacketScore()
	{
	}
}
[Token(Token = "0x2000495")]
public class RacketSling : MonoBehaviour
{
	[Token(Token = "0x4001C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _waitForTriggerRelease;

	[Token(Token = "0x4001C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _pullIsDisabled;

	[Token(Token = "0x4001C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool _pulledFromPlow;

	[Token(Token = "0x4001C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Params")]
	public float resistCentrifugalCoeff;

	[Token(Token = "0x4001C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float resistCentrifugalMaxEffect;

	[Token(Token = "0x4001C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maintainBallElevation;

	[Token(Token = "0x4001C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bringToFrontMinAngle;

	[Token(Token = "0x4001C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float bringToFrontMaxAngle;

	[Token(Token = "0x4001C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Pull from plow")]
	public float pullKBoostFromPlow;

	[Token(Token = "0x4001C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pullFromPlowDampCoeff;

	[Token(Token = "0x4001C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pullKBoostFromPlowDuration;

	[NonSerialized]
	[Token(Token = "0x4001C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ballInFrontOfPlayerAmount;

	[NonSerialized]
	[Token(Token = "0x4001C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ballTowardsPlayerAmount;

	[NonSerialized]
	[Token(Token = "0x4001C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 lastCalculatedPullForce;

	[Token(Token = "0x4001C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SpatializedAudio _racketPullLoopSA;

	[Token(Token = "0x4001C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Ball _pulledBall;

	[Token(Token = "0x4001C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pullDuration;

	[Token(Token = "0x4001C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float maxDirectToPlayerAmount;

	[Token(Token = "0x4001C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _incrementiveDisableTimer;

	[Token(Token = "0x1700048E")]
	public bool pulledFromPlow
	{
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xBF400C", Offset = "0xBF400C", VA = "0xBF400C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700048F")]
	public bool pullIsDisabled
	{
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xBF4014", Offset = "0xBF4014", VA = "0xBF4014")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000490")]
	public bool isPulling
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xBF401C", Offset = "0xBF401C", VA = "0xBF401C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000491")]
	public bool usedSinceLastRacketShot
	{
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xBF407C", Offset = "0xBF407C", VA = "0xBF407C")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xBF4084", Offset = "0xBF4084", VA = "0xBF4084")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x6001B00")]
	[Address(RVA = "0xBF4090", Offset = "0xBF4090", VA = "0xBF4090")]
	public float GetSlingDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6001B01")]
	[Address(RVA = "0xBF40B0", Offset = "0xBF40B0", VA = "0xBF40B0")]
	public bool isPullingBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B02")]
	[Address(RVA = "0xBF4128", Offset = "0xBF4128", VA = "0xBF4128")]
	public bool isActuallyPullingBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B03")]
	[Address(RVA = "0xBF413C", Offset = "0xBF413C", VA = "0xBF413C")]
	public void ApplyBallForces(Ball ball, bool onlyCalcInternals = false)
	{
	}

	[Token(Token = "0x6001B04")]
	[Address(RVA = "0xBF5218", Offset = "0xBF5218", VA = "0xBF5218")]
	public void BallDisabled(Ball ball)
	{
	}

	[Token(Token = "0x6001B05")]
	[Address(RVA = "0xBF5314", Offset = "0xBF5314", VA = "0xBF5314")]
	public void BallHitRacket(Ball ball)
	{
	}

	[Token(Token = "0x6001B06")]
	[Address(RVA = "0xBF52A0", Offset = "0xBF52A0", VA = "0xBF52A0")]
	private void StopPullingBall()
	{
	}

	[Token(Token = "0x6001B07")]
	[Address(RVA = "0xBF5398", Offset = "0xBF5398", VA = "0xBF5398")]
	private bool shouldPullBeDisabled(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B08")]
	[Address(RVA = "0xBF5814", Offset = "0xBF5814", VA = "0xBF5814")]
	private void makeIncrementiveTearDecision()
	{
	}

	[Token(Token = "0x6001B09")]
	[Address(RVA = "0xBF58FC", Offset = "0xBF58FC", VA = "0xBF58FC")]
	private void StartPullingBall(Ball ball)
	{
	}

	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0xBF5AF4", Offset = "0xBF5AF4", VA = "0xBF5AF4")]
	private bool CanStartPullBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0xBF5BE0", Offset = "0xBF5BE0", VA = "0xBF5BE0")]
	private bool PullBallRequested()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0xBF5CD0", Offset = "0xBF5CD0", VA = "0xBF5CD0")]
	private bool NeedToStopPullBall(Ball ball)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0xBF5D30", Offset = "0xBF5D30", VA = "0xBF5D30")]
	private void Update()
	{
	}

	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0xBF5EC4", Offset = "0xBF5EC4", VA = "0xBF5EC4")]
	private void UpdatePullSound()
	{
	}

	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0xBF6118", Offset = "0xBF6118", VA = "0xBF6118")]
	public RacketSling()
	{
	}
}
[Serializable]
[Token(Token = "0x2000496")]
public class MonthlyChallenge
{
	[Serializable]
	[Token(Token = "0x2000497")]
	public struct Time
	{
		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int year;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int month;

		[Token(Token = "0x17000496")]
		public bool isSet
		{
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0xBF6520", Offset = "0xBF6520", VA = "0xBF6520")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000497")]
		public bool isMusicChallenge
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xBF6174", Offset = "0xBF6174", VA = "0xBF6174")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xBF62A0", Offset = "0xBF62A0", VA = "0xBF62A0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xBF6328", Offset = "0xBF6328", VA = "0xBF6328", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xBF6350", Offset = "0xBF6350", VA = "0xBF6350")]
		public static bool operator ==(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xBF63BC", Offset = "0xBF63BC", VA = "0xBF63BC")]
		public static bool operator !=(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xBF642C", Offset = "0xBF642C", VA = "0xBF642C")]
		public static bool operator <(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xBF6490", Offset = "0xBF6490", VA = "0xBF6490")]
		public static bool operator >(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xBF64C0", Offset = "0xBF64C0", VA = "0xBF64C0")]
		public static bool operator <=(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xBF64F0", Offset = "0xBF64F0", VA = "0xBF64F0")]
		public static bool operator >=(Time time1, Time time2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xBF645C", Offset = "0xBF645C", VA = "0xBF645C")]
		public static int compare(Time time1, Time time2)
		{
			return default(int);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xBF6530", Offset = "0xBF6530", VA = "0xBF6530")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xBF6538", Offset = "0xBF6538", VA = "0xBF6538", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x2000498")]
	public class Difficulties
	{
		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int waveRange;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xBF65D8", Offset = "0xBF65D8", VA = "0xBF65D8")]
		public Difficulties()
		{
		}
	}

	[Token(Token = "0x4001C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Time time;

	[Token(Token = "0x4001C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string setId;

	[Token(Token = "0x4001C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Difficulties difficulties;

	[Token(Token = "0x4001C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MonthlyChallenges _parent;

	[Token(Token = "0x17000492")]
	public MonthlyChallenges parent
	{
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xBF6138", Offset = "0xBF6138", VA = "0xBF6138")]
		set
		{
		}
	}

	[Token(Token = "0x17000493")]
	public bool isMusicChallenge
	{
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xBF6140", Offset = "0xBF6140", VA = "0xBF6140")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000494")]
	public bool readyToPlay
	{
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xBF61A8", Offset = "0xBF61A8", VA = "0xBF61A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000495")]
	public WaveSet set
	{
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xBF6220", Offset = "0xBF6220", VA = "0xBF6220")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001B14")]
	[Address(RVA = "0xBF6298", Offset = "0xBF6298", VA = "0xBF6298")]
	public MonthlyChallenge()
	{
	}
}
[Serializable]
[Token(Token = "0x2000499")]
public class MonthlyChallengesData
{
	[Serializable]
	[Token(Token = "0x200049A")]
	public class Last
	{
		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonthlyChallenge.Time time;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xBF65E8", Offset = "0xBF65E8", VA = "0xBF65E8")]
		public Last()
		{
		}
	}

	[Token(Token = "0x4001C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MonthlyChallenge[] challenges;

	[Token(Token = "0x4001C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Last last;

	[Token(Token = "0x6001B23")]
	[Address(RVA = "0xBF65E0", Offset = "0xBF65E0", VA = "0xBF65E0")]
	public MonthlyChallengesData()
	{
	}
}
[Token(Token = "0x200049B")]
public class MonthlyChallenges : RemoteConfig<MonthlyChallengesData>, ISingleton
{
	[Token(Token = "0x200049C")]
	private enum CurrentChallengeState
	{
		[Token(Token = "0x4001CA9")]
		NoChallenge,
		[Token(Token = "0x4001CAA")]
		Loading,
		[Token(Token = "0x4001CAB")]
		ReadyToPlay
	}

	[Token(Token = "0x200049D")]
	private enum AsyncState
	{
		[Token(Token = "0x4001CAD")]
		Pending,
		[Token(Token = "0x4001CAE")]
		Done,
		[Token(Token = "0x4001CAF")]
		Error
	}

	[Token(Token = "0x200049E")]
	private class ConcludedChallenge
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonthlyChallenge challenge;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MedalType medal;

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xBF9FF0", Offset = "0xBF9FF0", VA = "0xBF9FF0")]
		public ConcludedChallenge()
		{
		}
	}

	[Token(Token = "0x200049F")]
	[CompilerGenerated]
	private sealed class <StartCo>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x170004A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0xBFA2B0", Offset = "0xBFA2B0", VA = "0xBFA2B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0xBFA2F8", Offset = "0xBFA2F8", VA = "0xBFA2F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xBF6FC8", Offset = "0xBF6FC8", VA = "0xBF6FC8")]
		[DebuggerHidden]
		public <StartCo>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xBF9FF8", Offset = "0xBF9FF8", VA = "0xBF9FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xBF9FFC", Offset = "0xBF9FFC", VA = "0xBF9FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xBFA2B8", Offset = "0xBFA2B8", VA = "0xBFA2B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A0")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass51_0
	{
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool preparingCrate;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveSet waveSet;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xBFA300", Offset = "0xBFA300", VA = "0xBFA300")]
		public <>c__DisplayClass51_0()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xBFA308", Offset = "0xBFA308", VA = "0xBFA308")]
		internal void <LoadWipSetCo>b__0(WaveSet set)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xBFA3D0", Offset = "0xBFA3D0", VA = "0xBFA3D0")]
		internal void <LoadWipSetCo>b__1(string errMsg)
		{
		}
	}

	[Token(Token = "0x20004A1")]
	[CompilerGenerated]
	private sealed class <LoadWipSetCo>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass51_0 <>8__1;

		[Token(Token = "0x170004A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B65")]
			[Address(RVA = "0xBFAB9C", Offset = "0xBFAB9C", VA = "0xBFAB9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B67")]
			[Address(RVA = "0xBFABE4", Offset = "0xBFABE4", VA = "0xBFABE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xBF7834", Offset = "0xBF7834", VA = "0xBF7834")]
		[DebuggerHidden]
		public <LoadWipSetCo>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xBFA464", Offset = "0xBFA464", VA = "0xBFA464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xBFA468", Offset = "0xBFA468", VA = "0xBFA468", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xBFABA4", Offset = "0xBFABA4", VA = "0xBFABA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A2")]
	[CompilerGenerated]
	private sealed class <updateContent>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x170004A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xBFAF48", Offset = "0xBFAF48", VA = "0xBFAF48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xBFAF90", Offset = "0xBFAF90", VA = "0xBFAF90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xBF7B30", Offset = "0xBF7B30", VA = "0xBF7B30")]
		[DebuggerHidden]
		public <updateContent>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xBFABEC", Offset = "0xBFABEC", VA = "0xBFABEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xBFABF0", Offset = "0xBFABF0", VA = "0xBFABF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xBFAF50", Offset = "0xBFAF50", VA = "0xBFAF50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A3")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveSet waveSet;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenge challenge;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<WaveSet> <>9__2;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<string> <>9__3;

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xBFAF98", Offset = "0xBFAF98", VA = "0xBFAF98")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xBFAFA0", Offset = "0xBFAFA0", VA = "0xBFAFA0")]
		internal void <downloadSet>b__0(DownloadedCrate crate)
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xBFB3C0", Offset = "0xBFB3C0", VA = "0xBFB3C0")]
		internal void <downloadSet>b__2(WaveSet unpackedWaveSet)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xBFB438", Offset = "0xBFB438", VA = "0xBFB438")]
		internal void <downloadSet>b__3(string error)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xBFB4FC", Offset = "0xBFB4FC", VA = "0xBFB4FC")]
		internal void <downloadSet>b__1(string error)
		{
		}
	}

	[Token(Token = "0x20004A4")]
	[CompilerGenerated]
	private sealed class <downloadSet>d__58 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MonthlyChallenge challenge;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass58_0 <>8__1;

		[Token(Token = "0x170004AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xBFB9BC", Offset = "0xBFB9BC", VA = "0xBFB9BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xBFBA04", Offset = "0xBFBA04", VA = "0xBFBA04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xBF7D00", Offset = "0xBF7D00", VA = "0xBF7D00")]
		[DebuggerHidden]
		public <downloadSet>d__58(int <>1__state)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xBFB5C0", Offset = "0xBFB5C0", VA = "0xBFB5C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xBFB5C4", Offset = "0xBFB5C4", VA = "0xBFB5C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xBFB9C4", Offset = "0xBFB9C4", VA = "0xBFB9C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A5")]
	[CompilerGenerated]
	private sealed class <downloadPastChallenges>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<MonthlyChallenge>.Enumerator <>7__wrap1;

		[Token(Token = "0x170004AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xBFBD90", Offset = "0xBFBD90", VA = "0xBFBD90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xBFBDD8", Offset = "0xBFBDD8", VA = "0xBFBDD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xBF7DEC", Offset = "0xBF7DEC", VA = "0xBF7DEC")]
		[DebuggerHidden]
		public <downloadPastChallenges>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xBFBA0C", Offset = "0xBFBA0C", VA = "0xBFBA0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xBFBA28", Offset = "0xBFBA28", VA = "0xBFBA28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xBFBD40", Offset = "0xBFBD40", VA = "0xBFBD40")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xBFBD98", Offset = "0xBFBD98", VA = "0xBFBD98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004A6")]
	[CompilerGenerated]
	private sealed class <concludeFinishedChallenges>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MonthlyChallenges <>4__this;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<MonthlyChallenge>.Enumerator <>7__wrap2;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MonthlyChallenge <challenge>5__4;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <leaderboardName>5__5;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LeaderboardManager.LeaderboardContainer <leaderboard>5__6;

		[Token(Token = "0x170004AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xBFCA28", Offset = "0xBFCA28", VA = "0xBFCA28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xBFCA70", Offset = "0xBFCA70", VA = "0xBFCA70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xBF7E88", Offset = "0xBF7E88", VA = "0xBF7E88")]
		[DebuggerHidden]
		public <concludeFinishedChallenges>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xBFBDE0", Offset = "0xBFBDE0", VA = "0xBFBDE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xBFBE0C", Offset = "0xBFBE0C", VA = "0xBFBE0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xBFC9D8", Offset = "0xBFC9D8", VA = "0xBFC9D8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xBFCA30", Offset = "0xBFCA30", VA = "0xBFCA30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string keyFormat;

	[Token(Token = "0x4001C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MonthlyChallenges inst;

	[Token(Token = "0x4001C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<MonthlyChallenge> _challenges;

	[Token(Token = "0x4001C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MonthlyChallenge _currentChallenge;

	[Token(Token = "0x4001C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Dictionary<string, WaveSet> _downloadedSets;

	[Token(Token = "0x4001C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CurrentChallengeState _currentChallengeState;

	[Token(Token = "0x4001CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _allChallengesReady;

	[Token(Token = "0x4001CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AsyncState _asyncState;

	[Token(Token = "0x4001CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine _updateContentCo;

	[Token(Token = "0x4001CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly List<ConcludedChallenge> _concludedChallenges;

	[Token(Token = "0x4001CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _concludingChallenges;

	[Token(Token = "0x4001CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] MONTHS;

	[Token(Token = "0x17000498")]
	private DebugSettings.MonthlyChallengeDbg debugConfig
	{
		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xBF65F0", Offset = "0xBF65F0", VA = "0xBF65F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000499")]
	public List<MonthlyChallenge> challenges
	{
		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xBF6650", Offset = "0xBF6650", VA = "0xBF6650")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700049A")]
	public bool ready
	{
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xBF6658", Offset = "0xBF6658", VA = "0xBF6658")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700049B")]
	public MonthlyChallenge currentChallenge
	{
		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xBF66C4", Offset = "0xBF66C4", VA = "0xBF66C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xBF6744", Offset = "0xBF6744", VA = "0xBF6744")]
		private set
		{
		}
	}

	[Token(Token = "0x1700049C")]
	private CurrentChallengeState currentChallengeState
	{
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xBF6BB8", Offset = "0xBF6BB8", VA = "0xBF6BB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700049D")]
	public bool noCurrentChallenge
	{
		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xBF6BE4", Offset = "0xBF6BE4", VA = "0xBF6BE4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700049E")]
	public bool currentChallengeIsLoading
	{
		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xBF6BF4", Offset = "0xBF6BF4", VA = "0xBF6BF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700049F")]
	public bool currentChallengeIsReadyToPlay
	{
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xBF6C04", Offset = "0xBF6C04", VA = "0xBF6C04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004A0")]
	public bool allChallengesReady
	{
		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xBF6C14", Offset = "0xBF6C14", VA = "0xBF6C14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004A1")]
	public WaveSet currentSet
	{
		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xBF6C1C", Offset = "0xBF6C1C", VA = "0xBF6C1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004A2")]
	public bool isConcludedChallenges
	{
		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xBF810C", Offset = "0xBF810C", VA = "0xBF810C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004A3")]
	public bool playerDeservesAMedal
	{
		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xBF816C", Offset = "0xBF816C", VA = "0xBF816C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400003E")]
	public event Action currentChallengeStateChanged
	{
		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xBF6A80", Offset = "0xBF6A80", VA = "0xBF6A80")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xBF6B1C", Offset = "0xBF6B1C", VA = "0xBF6B1C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400003F")]
	public event Action<MonthlyChallenge> pastChallengeReadyToPlay
	{
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xBF6C78", Offset = "0xBF6C78", VA = "0xBF6C78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xBF6D28", Offset = "0xBF6D28", VA = "0xBF6D28")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001B31")]
	[Address(RVA = "0xBF61C4", Offset = "0xBF61C4", VA = "0xBF61C4")]
	public bool isChallengeReadyToPlay(MonthlyChallenge challenge)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B32")]
	[Address(RVA = "0xBF623C", Offset = "0xBF623C", VA = "0xBF623C")]
	public WaveSet getSet(MonthlyChallenge challenge)
	{
		return null;
	}

	[Token(Token = "0x6001B36")]
	[Address(RVA = "0xBF6DD8", Offset = "0xBF6DD8", VA = "0xBF6DD8", Slot = "7")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001B37")]
	[Address(RVA = "0xBF6E40", Offset = "0xBF6E40", VA = "0xBF6E40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B38")]
	[Address(RVA = "0xBF6990", Offset = "0xBF6990", VA = "0xBF6990")]
	private void updateCurrentChallengeState(bool forceNotify = false)
	{
	}

	[Token(Token = "0x6001B39")]
	[Address(RVA = "0xBF6F34", Offset = "0xBF6F34", VA = "0xBF6F34", Slot = "4")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0xBF6F54", Offset = "0xBF6F54", VA = "0xBF6F54")]
	[IteratorStateMachine(typeof(<StartCo>d__47))]
	private IEnumerator StartCo()
	{
		return null;
	}

	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0xBF6FF0", Offset = "0xBF6FF0", VA = "0xBF6FF0", Slot = "6")]
	protected override void onDataParsed()
	{
	}

	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0xBF7768", Offset = "0xBF7768", VA = "0xBF7768")]
	private string GetSetID(MonthlyChallenge.Time time)
	{
		return null;
	}

	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0xBF7468", Offset = "0xBF7468", VA = "0xBF7468")]
	[IteratorStateMachine(typeof(<LoadWipSetCo>d__51))]
	private IEnumerator LoadWipSetCo()
	{
		return null;
	}

	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0xBF74DC", Offset = "0xBF74DC", VA = "0xBF74DC")]
	private MonthlyChallenge findChallengeByTime(MonthlyChallenge.Time challengeTime)
	{
		return null;
	}

	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0xBF785C", Offset = "0xBF785C", VA = "0xBF785C")]
	private MonthlyChallenge findChallengeBySetId(string setId)
	{
		return null;
	}

	[Token(Token = "0x6001B40")]
	[Address(RVA = "0xBF79E0", Offset = "0xBF79E0", VA = "0xBF79E0")]
	private string getChallengeAssetKey(MonthlyChallenge.Time challengeTime)
	{
		return null;
	}

	[Token(Token = "0x6001B41")]
	[Address(RVA = "0xBF7A90", Offset = "0xBF7A90", VA = "0xBF7A90")]
	private void InitMusicChallenge(MonthlyChallenge challenge)
	{
	}

	[Token(Token = "0x6001B42")]
	[Address(RVA = "0xBF76F4", Offset = "0xBF76F4", VA = "0xBF76F4")]
	[IteratorStateMachine(typeof(<updateContent>d__56))]
	private IEnumerator updateContent()
	{
		return null;
	}

	[Token(Token = "0x6001B43")]
	[Address(RVA = "0xBF7B58", Offset = "0xBF7B58", VA = "0xBF7B58")]
	private void updateIndex(Action onDone, Action<string> onError)
	{
	}

	[Token(Token = "0x6001B44")]
	[Address(RVA = "0xBF7C70", Offset = "0xBF7C70", VA = "0xBF7C70")]
	[IteratorStateMachine(typeof(<downloadSet>d__58))]
	private IEnumerator downloadSet(MonthlyChallenge challenge)
	{
		return null;
	}

	[Token(Token = "0x6001B45")]
	[Address(RVA = "0xBF7D28", Offset = "0xBF7D28", VA = "0xBF7D28")]
	private WaveSet FindOfflineWaveSetCrate(string assetKey)
	{
		return null;
	}

	[Token(Token = "0x6001B46")]
	[Address(RVA = "0xBF7D78", Offset = "0xBF7D78", VA = "0xBF7D78")]
	[IteratorStateMachine(typeof(<downloadPastChallenges>d__60))]
	private IEnumerator downloadPastChallenges()
	{
		return null;
	}

	[Token(Token = "0x6001B47")]
	[Address(RVA = "0xBF6964", Offset = "0xBF6964", VA = "0xBF6964")]
	private void onCurrentChallengeFinished()
	{
	}

	[Token(Token = "0x6001B48")]
	[Address(RVA = "0xBF7E14", Offset = "0xBF7E14", VA = "0xBF7E14")]
	[IteratorStateMachine(typeof(<concludeFinishedChallenges>d__62))]
	private IEnumerator concludeFinishedChallenges()
	{
		return null;
	}

	[Token(Token = "0x6001B49")]
	[Address(RVA = "0xBF7EB0", Offset = "0xBF7EB0", VA = "0xBF7EB0")]
	private bool setIsBeingPlayed(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0xBF7FE0", Offset = "0xBF7FE0", VA = "0xBF7FE0")]
	private bool currentChallengeIsBeingPlayed()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0xBF7FF8", Offset = "0xBF7FF8", VA = "0xBF7FF8")]
	private static MedalType determineMedal(int rank, int numStarsEarned)
	{
		return default(MedalType);
	}

	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0xBF82DC", Offset = "0xBF82DC", VA = "0xBF82DC")]
	public MedalType rewardConcludedChallenges()
	{
		return default(MedalType);
	}

	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0xBF85CC", Offset = "0xBF85CC", VA = "0xBF85CC")]
	public void onPlayerSawMonthlyChallenge()
	{
	}

	[Token(Token = "0x6001B50")]
	[Address(RVA = "0xBF86F0", Offset = "0xBF86F0", VA = "0xBF86F0")]
	public bool isNew()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B51")]
	[Address(RVA = "0xBF8824", Offset = "0xBF8824", VA = "0xBF8824")]
	public bool isMonthlyChallenge(string setId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001B52")]
	[Address(RVA = "0xBF8A40", Offset = "0xBF8A40", VA = "0xBF8A40")]
	public void DevOnly_RewrapCrate(DownloadedCrate crate)
	{
	}

	[Token(Token = "0x6001B53")]
	[Address(RVA = "0xBF9914", Offset = "0xBF9914", VA = "0xBF9914")]
	public MonthlyChallenges()
	{
	}
}
[Token(Token = "0x20004A7")]
public class WaveSet : MonoBehaviour
{
	[Token(Token = "0x4001CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string id;

	[Token(Token = "0x4001CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new string name;

	[Token(Token = "0x4001CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite image;

	[Token(Token = "0x4001CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[ReorderableList]
	private Wave[] _set;

	[Token(Token = "0x4001CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("Active sets require full setup (solo.json) or else will spout warnings")]
	public bool isActive;

	[Token(Token = "0x4001CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isTutorial;

	[Token(Token = "0x4001CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int _currentWave;

	[Token(Token = "0x4001CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _completedWave;

	[Token(Token = "0x170004B0")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xBFCA78", Offset = "0xBFCA78", VA = "0xBFCA78", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004B1")]
	public Wave[] Waves
	{
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xBFCA80", Offset = "0xBFCA80", VA = "0xBFCA80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xBFCA88", Offset = "0xBFCA88", VA = "0xBFCA88")]
		set
		{
		}
	}

	[Token(Token = "0x170004B2")]
	public int currentWave
	{
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xBFCADC", Offset = "0xBFCADC", VA = "0xBFCADC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004B3")]
	public int completeWave
	{
		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xBFCAE4", Offset = "0xBFCAE4", VA = "0xBFCAE4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0xBFCA90", Offset = "0xBFCA90", VA = "0xBFCA90")]
	public int GetNumWavesInSet()
	{
		return default(int);
	}

	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0xBFCAAC", Offset = "0xBFCAAC", VA = "0xBFCAAC", Slot = "5")]
	public virtual Wave GetWave(int num)
	{
		return null;
	}

	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0xBFCAEC", Offset = "0xBFCAEC", VA = "0xBFCAEC")]
	public int GetWavesLeft()
	{
		return default(int);
	}

	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0xBFCB10", Offset = "0xBFCB10", VA = "0xBFCB10")]
	public int GetProgressPercent()
	{
		return default(int);
	}

	[Token(Token = "0x6001B90")]
	[Address(RVA = "0xBFCC24", Offset = "0xBFCC24", VA = "0xBFCC24", Slot = "6")]
	public virtual void ResetSetStatus()
	{
	}

	[Token(Token = "0x6001B91")]
	[Address(RVA = "0xBFCC2C", Offset = "0xBFCC2C", VA = "0xBFCC2C")]
	public void WaveComplete()
	{
	}

	[Token(Token = "0x6001B92")]
	[Address(RVA = "0xBFCC3C", Offset = "0xBFCC3C", VA = "0xBFCC3C")]
	public void SkipToWaveIndex(int index)
	{
	}

	[Token(Token = "0x6001B93")]
	[Address(RVA = "0xBFCC44", Offset = "0xBFCC44", VA = "0xBFCC44")]
	public void SkipToEnd()
	{
	}

	[Token(Token = "0x6001B94")]
	[Address(RVA = "0xBFCC64", Offset = "0xBFCC64", VA = "0xBFCC64")]
	public Wave GetNextWave()
	{
		return null;
	}

	[Token(Token = "0x6001B95")]
	[Address(RVA = "0xBFCCB0", Offset = "0xBFCCB0", VA = "0xBFCCB0")]
	public bool IsSetOver()
	{
		return default(bool);
	}

	[Token(Token = "0x6001B96")]
	[Address(RVA = "0xBFCCD8", Offset = "0xBFCCD8", VA = "0xBFCCD8")]
	private void Savecsv()
	{
	}

	[Token(Token = "0x6001B97")]
	[Address(RVA = "0xBFD0E4", Offset = "0xBFD0E4", VA = "0xBFD0E4", Slot = "7")]
	[NaughtyAttributes.Button("Calculate stats", EButtonEnableMode.Always)]
	public virtual void calculateStats()
	{
	}

	[Token(Token = "0x6001B98")]
	[Address(RVA = "0xBFD0E8", Offset = "0xBFD0E8", VA = "0xBFD0E8")]
	public WaveSet()
	{
	}
}
[Token(Token = "0x20004A8")]
public class WaveSetFromCrate : WaveSet
{
	[Token(Token = "0x4001CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Tooltip("Rename the .crate file to .bytes to be able to plug it in")]
	public TextAsset crateFile;

	[Token(Token = "0x6001B99")]
	[Address(RVA = "0xBFD0F8", Offset = "0xBFD0F8", VA = "0xBFD0F8")]
	private void LoadSetFromCrate()
	{
	}

	[Token(Token = "0x6001B9A")]
	[Address(RVA = "0xBFD33C", Offset = "0xBFD33C", VA = "0xBFD33C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0xBFD340", Offset = "0xBFD340", VA = "0xBFD340")]
	public WaveSetFromCrate()
	{
	}
}
[Token(Token = "0x20004AA")]
public class WaveSetGenerated : WaveSet
{
	[Token(Token = "0x4001CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Generate Set")]
	public int generateCount;

	[Token(Token = "0x4001CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int generateStartAt;

	[Token(Token = "0x4001CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int generateStep;

	[Token(Token = "0x4001CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int generateSeed;

	[Token(Token = "0x4001CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[ReorderableList]
	private string[] wavePaths;

	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0xBFD484", Offset = "0xBFD484", VA = "0xBFD484")]
	private void GenerateSetFromSeed()
	{
	}

	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0xBFD5DC", Offset = "0xBFD5DC", VA = "0xBFD5DC")]
	private void LoadGeneratedSetFromPaths()
	{
	}

	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0xBFD85C", Offset = "0xBFD85C", VA = "0xBFD85C")]
	private void GenerateSet()
	{
	}

	[Token(Token = "0x6001BA2")]
	[Address(RVA = "0xBFD87C", Offset = "0xBFD87C", VA = "0xBFD87C")]
	[NaughtyAttributes.Button("Clear Wave Paths", EButtonEnableMode.Always)]
	public void ClearWavePaths()
	{
	}

	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0xBFD880", Offset = "0xBFD880", VA = "0xBFD880", Slot = "6")]
	public override void ResetSetStatus()
	{
	}

	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0xBFD888", Offset = "0xBFD888", VA = "0xBFD888", Slot = "7")]
	public override void calculateStats()
	{
	}

	[Token(Token = "0x6001BA5")]
	[Address(RVA = "0xBFD8F0", Offset = "0xBFD8F0", VA = "0xBFD8F0")]
	public WaveSetGenerated()
	{
	}
}
[Token(Token = "0x20004AB")]
public class WaveSetProxy : WaveSet
{
	[Token(Token = "0x4001CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaveSet proxySet;

	[Token(Token = "0x6001BA6")]
	[Address(RVA = "0xBFD914", Offset = "0xBFD914", VA = "0xBFD914")]
	protected void CopyFromProxy()
	{
	}

	[Token(Token = "0x6001BA7")]
	[Address(RVA = "0xBFDA04", Offset = "0xBFDA04", VA = "0xBFDA04", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001BA8")]
	[Address(RVA = "0xBFDA08", Offset = "0xBFDA08", VA = "0xBFDA08")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0xBFDB28", Offset = "0xBFDB28", VA = "0xBFDB28")]
	public WaveSetProxy()
	{
	}
}
[Token(Token = "0x20004AC")]
public class WaveSetRandomized : WaveSet
{
	[Token(Token = "0x4001CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WaveSet[] refereceSets;

	[Token(Token = "0x4001CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] _setIndexPerWave;

	[Token(Token = "0x4001CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Wave _clientLastWave;

	[Token(Token = "0x170004B4")]
	public override string DisplayName
	{
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xBFEC44", Offset = "0xBFEC44", VA = "0xBFEC44", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BAA")]
	[Address(RVA = "0xBFEB38", Offset = "0xBFEB38", VA = "0xBFEB38")]
	private int FindWaveIndex(Wave wave, ref int setIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0xBFEE88", Offset = "0xBFEE88", VA = "0xBFEE88", Slot = "5")]
	public override Wave GetWave(int num)
	{
		return null;
	}

	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0xBFF01C", Offset = "0xBFF01C", VA = "0xBFF01C", Slot = "6")]
	public override void ResetSetStatus()
	{
	}

	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0xBFF038", Offset = "0xBFF038", VA = "0xBFF038")]
	private void SelectWavesFromRefSets()
	{
	}

	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0xBFF368", Offset = "0xBFF368", VA = "0xBFF368", Slot = "7")]
	public override void calculateStats()
	{
	}

	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0xBFF3D0", Offset = "0xBFF3D0", VA = "0xBFF3D0")]
	public WaveSetRandomized()
	{
	}
}
[Token(Token = "0x20004AD")]
public static class Permissions
{
	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0xBFF3D8", Offset = "0xBFF3D8", VA = "0xBFF3D8")]
	public static bool canRecordAudio()
	{
		return default(bool);
	}

	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0xBFF41C", Offset = "0xBFF41C", VA = "0xBFF41C")]
	public static void requestRecordAudio(Action<bool> callback)
	{
	}

	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0xBFF468", Offset = "0xBFF468", VA = "0xBFF468")]
	public static bool canReadExternalStorage()
	{
		return default(bool);
	}
}
[Token(Token = "0x20004AE")]
public class ComboCounter : MonoBehaviour
{
	[Token(Token = "0x4001CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _brickHitSinceLastRacket;

	[Token(Token = "0x4001CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int numSuccessiveNonEmptyHits;

	[Token(Token = "0x4001CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeRacketTouchedLast;

	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0xBFF4AC", Offset = "0xBFF4AC", VA = "0xBFF4AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0xBFF524", Offset = "0xBFF524", VA = "0xBFF524")]
	private void NonEmptyBrickHit()
	{
	}

	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0xBFF4B0", Offset = "0xBFF4B0", VA = "0xBFF4B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0xBFF5D8", Offset = "0xBFF5D8", VA = "0xBFF5D8")]
	public void PlayerMissedHit()
	{
	}

	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0xBFF648", Offset = "0xBFF648", VA = "0xBFF648")]
	public void KeepStreakGoing_WithoutPreviousBrickHit()
	{
	}

	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0xBFF64C", Offset = "0xBFF64C", VA = "0xBFF64C")]
	public void BallHitTarget()
	{
	}

	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0xBFF650", Offset = "0xBFF650", VA = "0xBFF650")]
	public void BallHitRacket()
	{
	}

	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0xBFF67C", Offset = "0xBFF67C", VA = "0xBFF67C")]
	public void ShotOver()
	{
	}

	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0xBFF680", Offset = "0xBFF680", VA = "0xBFF680")]
	public void GravitySlingActivated()
	{
	}

	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0xBFF684", Offset = "0xBFF684", VA = "0xBFF684")]
	public void BallHitBonus()
	{
	}

	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0xBFF688", Offset = "0xBFF688", VA = "0xBFF688")]
	public void BallHitPowerup()
	{
	}

	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0xBFF68C", Offset = "0xBFF68C", VA = "0xBFF68C")]
	public void BallHitBogus()
	{
	}

	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0xBFF6FC", Offset = "0xBFF6FC", VA = "0xBFF6FC")]
	public void BallHitEmpty()
	{
	}

	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0xBFF76C", Offset = "0xBFF76C", VA = "0xBFF76C")]
	public ComboCounter()
	{
	}
}
[Token(Token = "0x20004AF")]
public class Shield
{
	[Token(Token = "0x20004B0")]
	private struct TileData
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform transform;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float dist;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xC00F34", Offset = "0xC00F34", VA = "0xC00F34")]
		public TileData(HexTile tile, Vector3 origin)
		{
		}
	}

	[Token(Token = "0x20004B1")]
	[CompilerGenerated]
	private sealed class <RebuildCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shield <>4__this;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__2;

		[Token(Token = "0x170004B7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BE1")]
			[Address(RVA = "0xC0133C", Offset = "0xC0133C", VA = "0xC0133C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE3")]
			[Address(RVA = "0xC01384", Offset = "0xC01384", VA = "0xC01384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xC00708", Offset = "0xC00708", VA = "0xC00708")]
		[DebuggerHidden]
		public <RebuildCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xC01000", Offset = "0xC01000", VA = "0xC01000", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xC01004", Offset = "0xC01004", VA = "0xC01004", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xC01344", Offset = "0xC01344", VA = "0xC01344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B2")]
	[CompilerGenerated]
	private sealed class <BreakCo>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shield <>4__this;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <maxDist>5__2;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__3;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <particleDuration>5__4;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <duration>5__5;

		[Token(Token = "0x170004B9")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xC019B8", Offset = "0xC019B8", VA = "0xC019B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xC01A00", Offset = "0xC01A00", VA = "0xC01A00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xC008C8", Offset = "0xC008C8", VA = "0xC008C8")]
		[DebuggerHidden]
		public <BreakCo>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xC013E0", Offset = "0xC013E0", VA = "0xC013E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xC013E4", Offset = "0xC013E4", VA = "0xC013E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xC019C0", Offset = "0xC019C0", VA = "0xC019C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004B3")]
	[CompilerGenerated]
	private sealed class <OnBallDisconnectedCo>d__38 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerID playerID;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shield <>4__this;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ShotInfo <lastOpponentShot>5__2;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <timer>5__3;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint <shotIndex>5__4;

		[Token(Token = "0x170004BB")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xC01E90", Offset = "0xC01E90", VA = "0xC01E90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xC01ED8", Offset = "0xC01ED8", VA = "0xC01ED8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xC00AEC", Offset = "0xC00AEC", VA = "0xC00AEC")]
		[DebuggerHidden]
		public <OnBallDisconnectedCo>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xC01A5C", Offset = "0xC01A5C", VA = "0xC01A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xC01A60", Offset = "0xC01A60", VA = "0xC01A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xC01E98", Offset = "0xC01E98", VA = "0xC01E98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001CEE")]
	private const float MIN_TIME_BROKEN = 0.5f;

	[Token(Token = "0x4001CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static uint counter;

	[Token(Token = "0x4001CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isBroken;

	[Token(Token = "0x4001CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _timeWhenBroken;

	[Token(Token = "0x4001CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Target _target;

	[Token(Token = "0x4001CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _material;

	[Token(Token = "0x4001CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint _ignoreShotIndex;

	[Token(Token = "0x4001CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int _RevealID;

	[Token(Token = "0x4001CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int _HitTimeID;

	[Token(Token = "0x4001CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int _HitPosID;

	[Token(Token = "0x4001CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CoroutineHandle? _rebuildHandle;

	[Token(Token = "0x4001CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle? _breakHandle;

	[Token(Token = "0x4001CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static GameObject _particlesPrefab;

	[Token(Token = "0x4001CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<TileData> _tilesData;

	[Token(Token = "0x4001CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CoroutineHandle? _onBallDisCo;

	[Token(Token = "0x4001CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hadDamageThisTurn;

	[Token(Token = "0x4001D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _contactPoint;

	[Token(Token = "0x170004B5")]
	public bool IsBroken
	{
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xBFF774", Offset = "0xBFF774", VA = "0xBFF774")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xBFF77C", Offset = "0xBFF77C", VA = "0xBFF77C")]
		private set
		{
		}
	}

	[Token(Token = "0x170004B6")]
	public bool targetReceivedAllDamageInOneShieldBreak
	{
		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xBFFC30", Offset = "0xBFFC30", VA = "0xBFFC30")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xBFFC38", Offset = "0xBFFC38", VA = "0xBFFC38")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x14000040")]
	public static event Action<Target> OnBroken
	{
		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xBFFA48", Offset = "0xBFFA48", VA = "0xBFFA48")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xBFFB3C", Offset = "0xBFFB3C", VA = "0xBFFB3C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0xBFFC44", Offset = "0xBFFC44", VA = "0xBFFC44")]
	public static void MaybeAddShield(Target target)
	{
	}

	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0xBFFFA4", Offset = "0xBFFFA4", VA = "0xBFFFA4")]
	public Shield(Target target)
	{
	}

	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0xC00290", Offset = "0xC00290", VA = "0xC00290")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0xC004D0", Offset = "0xC004D0", VA = "0xC004D0")]
	public bool IsShotIgnored(ShotInfo shot)
	{
		return default(bool);
	}

	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0xC004F4", Offset = "0xC004F4", VA = "0xC004F4")]
	public void RemoveFromBrick(Brick brick)
	{
	}

	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0xC00534", Offset = "0xC00534", VA = "0xC00534")]
	public void AddToBrick(Brick brick)
	{
	}

	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0xBFF914", Offset = "0xBFF914", VA = "0xBFF914")]
	private void Rebuild()
	{
	}

	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0xC005A8", Offset = "0xC005A8", VA = "0xC005A8")]
	[IteratorStateMachine(typeof(<RebuildCo>d__28))]
	private IEnumerator<float> RebuildCo(float duration)
	{
		return null;
	}

	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0xBFF7A0", Offset = "0xBFF7A0", VA = "0xBFF7A0")]
	private void Break()
	{
	}

	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0xC00730", Offset = "0xC00730", VA = "0xC00730")]
	[IteratorStateMachine(typeof(<BreakCo>d__34))]
	private IEnumerator<float> BreakCo()
	{
		return null;
	}

	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0xC008F0", Offset = "0xC008F0", VA = "0xC008F0")]
	private void OnBallReturnToPlayer(Player player)
	{
	}

	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0xC0091C", Offset = "0xC0091C", VA = "0xC0091C")]
	private void OnBallChangedOwnership(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0xC00A68", Offset = "0xC00A68", VA = "0xC00A68")]
	[IteratorStateMachine(typeof(<OnBallDisconnectedCo>d__38))]
	private IEnumerator<float> OnBallDisconnectedCo(PlayerID playerID)
	{
		return null;
	}

	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0xC00B14", Offset = "0xC00B14", VA = "0xC00B14")]
	public void OnRemoteBreak(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0xC00B5C", Offset = "0xC00B5C", VA = "0xC00B5C")]
	public void OnRemoteRebuild()
	{
	}

	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0xC00B70", Offset = "0xC00B70", VA = "0xC00B70")]
	private void ReportBreak(ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0xC00BE0", Offset = "0xC00BE0", VA = "0xC00BE0")]
	private void ReportRebuild()
	{
	}

	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0xC00C64", Offset = "0xC00C64", VA = "0xC00C64")]
	public void OnShotMadeContact(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, out bool damageAbsorbed)
	{
	}

	[Token(Token = "0x6001BDA")]
	[Address(RVA = "0xC0062C", Offset = "0xC0062C", VA = "0xC0062C")]
	private void PlayRebuildSound()
	{
	}

	[Token(Token = "0x6001BDB")]
	[Address(RVA = "0xC007A4", Offset = "0xC007A4", VA = "0xC007A4")]
	public void PlayBrokenSound(Vector3 pos)
	{
	}
}
[Token(Token = "0x20004B4")]
public class TargetManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004B5")]
	public class SoloStageToArcadeWaves
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject stageRoot;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int startDifficulty;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int endDifficulty;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int setDifficultyRange;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int waveDifficultyRange;

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xC08ED8", Offset = "0xC08ED8", VA = "0xC08ED8")]
		public SoloStageToArcadeWaves()
		{
		}
	}

	[Token(Token = "0x4001D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TargetManager inst;

	[Token(Token = "0x4001D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timeBeforeNewTarget;

	[Token(Token = "0x4001D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float _timeBetweenTargets;

	[Token(Token = "0x4001D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxTimeToInitEntireWave;

	[Token(Token = "0x4001D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _targetAnimationDurationPerHit;

	[Token(Token = "0x4001D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Wave[] _allWaves;

	[Token(Token = "0x4001D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Wave> _arcadeWaves;

	[Token(Token = "0x4001D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Wave> _zenWaves;

	[Token(Token = "0x4001D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Wave _prevWave;

	[Token(Token = "0x4001D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Wave _currentWave;

	[Token(Token = "0x4001D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _timeWithoutTarget;

	[Token(Token = "0x4001D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int _currentWaveNumber;

	[Token(Token = "0x4001D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Wave> _relevantWaves;

	[Token(Token = "0x4001D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<HexTile> _tempHexList;

	[Token(Token = "0x4001D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform arcadeRoot;

	[Token(Token = "0x4001D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform zenRoot;

	[Token(Token = "0x4001D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject soloSetsRoot;

	[Token(Token = "0x4001D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject multiplayerSetsRoot;

	[Token(Token = "0x4001D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject multiplayerSetsRootMR;

	[Token(Token = "0x4001D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Special sets")]
	[SerializeField]
	private WaveSet feb21ChallengeSet;

	[Token(Token = "0x4001D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private WaveSet may21ChallengeSet;

	[Token(Token = "0x4001D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private WaveSet oct21ChallengeSet;

	[Token(Token = "0x4001D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Populate Arcade With Solo")]
	public SoloStageToArcadeWaves[] soloArcadeDefinitions;

	[Token(Token = "0x4001D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Level Editor Stuff")]
	public LevelBrick levelBrickPrefab;

	[Token(Token = "0x4001D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public WaveSet[] _soloSets;

	[Token(Token = "0x4001D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public WaveSet[] _multiplayerSets;

	[Token(Token = "0x4001D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WaveSet _currentSet;

	[Token(Token = "0x4001D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _coOpReady;

	[Token(Token = "0x4001D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform _editorContainer;

	[Token(Token = "0x4001D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<BrickGlow> _glowinBricks;

	[Token(Token = "0x4001D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int _lastFrameSkipped;

	[Token(Token = "0x4001D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool _waveTimeout;

	[Token(Token = "0x4001D36")]
	private const int MONTHLY_CHALLENGE_WAVE_MIN_INDEX = 10000;

	[Token(Token = "0x4001D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<Wave, int> _monthlyChallengeIndexes;

	[Token(Token = "0x170004BD")]
	public Wave currentWave
	{
		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xC01F34", Offset = "0xC01F34", VA = "0xC01F34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004BE")]
	public bool IsLastWave
	{
		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xC01F3C", Offset = "0xC01F3C", VA = "0xC01F3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004BF")]
	public int CurrentWaveNumber
	{
		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xC02020", Offset = "0xC02020", VA = "0xC02020")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004C0")]
	public int CurrentWaveDifficulty
	{
		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xBFFF7C", Offset = "0xBFFF7C", VA = "0xBFFF7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004C1")]
	public static bool isCurrentSetTutorial
	{
		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xC02E1C", Offset = "0xC02E1C", VA = "0xC02E1C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004C2")]
	public WaveSet currentSet
	{
		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xC02F04", Offset = "0xC02F04", VA = "0xC02F04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004C3")]
	public bool coOpReady
	{
		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xC02F0C", Offset = "0xC02F0C", VA = "0xC02F0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004C4")]
	public Transform editorContainer
	{
		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xC02F14", Offset = "0xC02F14", VA = "0xC02F14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0xC02028", Offset = "0xC02028", VA = "0xC02028")]
	public int GetWaveDifficulty(int waveNum)
	{
		return default(int);
	}

	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0xC02050", Offset = "0xC02050", VA = "0xC02050")]
	public WaveSet GetMusicChallengeSet(MonthlyChallenge.Time time)
	{
		return null;
	}

	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0xC02184", Offset = "0xC02184", VA = "0xC02184")]
	public Wave[] GenerateWaveSet(int count, int startAt, int step, int seed)
	{
		return null;
	}

	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0xC02FD0", Offset = "0xC02FD0", VA = "0xC02FD0")]
	private void extendWaveRange(Wave wave)
	{
	}

	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0xC0300C", Offset = "0xC0300C", VA = "0xC0300C")]
	private void testArcadeWaves()
	{
	}

	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0xC033E8", Offset = "0xC033E8", VA = "0xC033E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0xC037D8", Offset = "0xC037D8", VA = "0xC037D8")]
	private void PopulateSoloSetsInArcade()
	{
	}

	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0xC0446C", Offset = "0xC0446C", VA = "0xC0446C")]
	private void verifyWaveIdsUniqueness()
	{
	}

	[Token(Token = "0x6001C00")]
	[Address(RVA = "0xC04F68", Offset = "0xC04F68", VA = "0xC04F68")]
	private void Start()
	{
	}

	[Token(Token = "0x6001C01")]
	[Address(RVA = "0xC04CD4", Offset = "0xC04CD4", VA = "0xC04CD4")]
	public WaveSet findSoloSet(string setId)
	{
		return null;
	}

	[Token(Token = "0x6001C02")]
	[Address(RVA = "0xC05098", Offset = "0xC05098", VA = "0xC05098")]
	public uint getTargetUniqueID(HexTile tile)
	{
		return default(uint);
	}

	[Token(Token = "0x6001C03")]
	[Address(RVA = "0xC050C8", Offset = "0xC050C8", VA = "0xC050C8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001C04")]
	[Address(RVA = "0xC050EC", Offset = "0xC050EC", VA = "0xC050EC")]
	public void AssignSet(WaveSet set)
	{
	}

	[Token(Token = "0x6001C05")]
	[Address(RVA = "0xC0511C", Offset = "0xC0511C", VA = "0xC0511C")]
	private void ChooseSetWave()
	{
	}

	[Token(Token = "0x6001C06")]
	[Address(RVA = "0xC057EC", Offset = "0xC057EC", VA = "0xC057EC")]
	private string GetFullName(Transform t)
	{
		return null;
	}

	[Token(Token = "0x6001C07")]
	[Address(RVA = "0xC058CC", Offset = "0xC058CC", VA = "0xC058CC")]
	public Wave FindArcadeWaveByFullPath(string name)
	{
		return null;
	}

	[Token(Token = "0x6001C08")]
	[Address(RVA = "0xC02344", Offset = "0xC02344", VA = "0xC02344")]
	private Wave ChooseRandomArcadeWave(int curDifficulty)
	{
		return null;
	}

	[Token(Token = "0x6001C09")]
	[Address(RVA = "0xC05A6C", Offset = "0xC05A6C", VA = "0xC05A6C")]
	private void ChooseRandomArcadeWave()
	{
	}

	[Token(Token = "0x6001C0A")]
	[Address(RVA = "0xC05B54", Offset = "0xC05B54", VA = "0xC05B54")]
	public void loadAllRelevantArenaWaves()
	{
	}

	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0xC052AC", Offset = "0xC052AC", VA = "0xC052AC")]
	public void StartNewWave(Wave wave, int waveShift = -1, [Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically, bool noDelay = false)
	{
	}

	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0xC05DBC", Offset = "0xC05DBC", VA = "0xC05DBC")]
	public void StartVersusMPSet(float ballEntryPathSpeed, int setOverride = -1)
	{
	}

	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0xC06200", Offset = "0xC06200", VA = "0xC06200")]
	public void StartCoOp(float ballEntryPathSpeed)
	{
	}

	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0xC0604C", Offset = "0xC0604C", VA = "0xC0604C")]
	public void RestartGame()
	{
	}

	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0xC06754", Offset = "0xC06754", VA = "0xC06754")]
	private int compareBrickGlowsByTime(BrickGlow A, BrickGlow B)
	{
		return default(int);
	}

	[Token(Token = "0x6001C10")]
	[Address(RVA = "0xC06788", Offset = "0xC06788", VA = "0xC06788")]
	private void endAllActiveGlowsImmediately()
	{
	}

	[Token(Token = "0x6001C11")]
	[Address(RVA = "0xC05600", Offset = "0xC05600", VA = "0xC05600")]
	private int getWaveIndex(Wave wave)
	{
		return default(int);
	}

	[Token(Token = "0x6001C12")]
	[Address(RVA = "0xC06C04", Offset = "0xC06C04", VA = "0xC06C04")]
	private void HandleIncomingMultiplayerMessages()
	{
	}

	[Token(Token = "0x6001C13")]
	[Address(RVA = "0xC06598", Offset = "0xC06598", VA = "0xC06598")]
	public void ResetWaveProgress()
	{
	}

	[Token(Token = "0x6001C14")]
	[Address(RVA = "0xC07A04", Offset = "0xC07A04", VA = "0xC07A04")]
	public void JumpToWaveInCurrentSet(int index)
	{
	}

	[Token(Token = "0x6001C15")]
	[Address(RVA = "0xC07B70", Offset = "0xC07B70", VA = "0xC07B70")]
	private void Update()
	{
	}

	[Token(Token = "0x6001C16")]
	[Address(RVA = "0xC0880C", Offset = "0xC0880C", VA = "0xC0880C")]
	private void OnBallReturnedToPlayer(Player _)
	{
	}

	[Token(Token = "0x6001C17")]
	[Address(RVA = "0xC0738C", Offset = "0xC0738C", VA = "0xC0738C")]
	public void CompleteCurrentWave()
	{
	}

	[Token(Token = "0x6001C18")]
	[Address(RVA = "0xC08A04", Offset = "0xC08A04", VA = "0xC08A04")]
	private int GetMonthlyChallengeWaveHash(MonthlyChallenge challenge, WaveSet set, int waveIndexInSet)
	{
		return default(int);
	}

	[Token(Token = "0x6001C19")]
	[Address(RVA = "0xC08A38", Offset = "0xC08A38", VA = "0xC08A38")]
	private void onPastMonthlyChallengeReadyToPlay(MonthlyChallenge challenge)
	{
	}

	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0xC08D84", Offset = "0xC08D84", VA = "0xC08D84")]
	public TargetManager()
	{
	}
}
[Token(Token = "0x20004B6")]
public class Target : IEquatable<Target>, IComparable<Target>
{
	[Token(Token = "0x20004B7")]
	public struct LastDamageInfo
	{
		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SyncHexHits.HexHitInfo hitInfo;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 ballVelocity;
	}

	[Token(Token = "0x20004B8")]
	public struct TileData : IEquatable<TileData>, IComparable<TileData>
	{
		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HexTile tile;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xC0D3AC", Offset = "0xC0D3AC", VA = "0xC0D3AC", Slot = "5")]
		public int CompareTo(TileData other)
		{
			return default(int);
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xC0D3C4", Offset = "0xC0D3C4", VA = "0xC0D3C4", Slot = "4")]
		public bool Equals(TileData other)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Type[] ORDER_OF_TARGETS;

	[Token(Token = "0x4001D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int _sortPriority;

	[Token(Token = "0x4001D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected uint _uniqueID;

	[Token(Token = "0x4001D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxDamage;

	[Token(Token = "0x4001D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int futureDamage;

	[Token(Token = "0x4001D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxUVDepthIndex;

	[Token(Token = "0x4001D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool handCraftedShield;

	[Token(Token = "0x4001D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int _currentDamage;

	[Token(Token = "0x4001D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<Target> _updatingTargets;

	[Token(Token = "0x4001D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool _isUpdating;

	[Token(Token = "0x4001D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _reportedOwnDeath;

	[Token(Token = "0x4001D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<HexTile> tiles;

	[Token(Token = "0x4001D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Target> _allTargets;

	[Token(Token = "0x4001D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Target empty;

	[Token(Token = "0x4001D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool instant;

	[Token(Token = "0x4001D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _isAlive;

	[Token(Token = "0x4001D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public readonly bool isAnyTarget;

	[Token(Token = "0x4001D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public readonly bool isMainTarget;

	[Token(Token = "0x4001D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public readonly bool isStaticTarget;

	[Token(Token = "0x4001D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public readonly bool isHealingTarget;

	[Token(Token = "0x4001D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public readonly bool isGroupable;

	[Token(Token = "0x4001D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public readonly bool isSnake;

	[Token(Token = "0x4001D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public readonly bool isBonus;

	[Token(Token = "0x4001D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public readonly bool isDowner;

	[Token(Token = "0x4001D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public readonly bool isMinorTarget;

	[Token(Token = "0x4001D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public readonly bool isPortal;

	[Token(Token = "0x4001D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public readonly bool isAnyPowerup;

	[Token(Token = "0x4001D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public readonly bool isEmpty;

	[Token(Token = "0x4001D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public readonly bool isUndamagable;

	[Token(Token = "0x4001D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public readonly bool isScorable;

	[Token(Token = "0x4001D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	public readonly bool isRippleable;

	[Token(Token = "0x4001D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public readonly bool isWreckingBallRippleable;

	[Token(Token = "0x4001D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public readonly bool isNegative;

	[Token(Token = "0x4001D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public readonly bool isBoosterSwitch;

	[Token(Token = "0x4001D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	public readonly bool isSlider;

	[Token(Token = "0x4001D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected static readonly int _MaxHitsID;

	[Token(Token = "0x4001D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static readonly int _HitsSustainedID;

	[Token(Token = "0x4001D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected static readonly int _StepSlopeID;

	[Token(Token = "0x4001D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static readonly int _PanicRateID;

	[Token(Token = "0x4001D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected static readonly int _AudioTexID;

	[Token(Token = "0x4001D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static readonly int _AudioTexVID;

	[Token(Token = "0x4001D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected static readonly int _FadeInID;

	[Token(Token = "0x4001D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected static readonly int _PowerupID;

	[Token(Token = "0x4001D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected static readonly int _ActivatedID;

	[Token(Token = "0x4001D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool _isScheduled;

	[Token(Token = "0x4001D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3? _center;

	[Token(Token = "0x4001D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private LastDamageInfo _lastDamageInfo;

	[Token(Token = "0x4001D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shield shield;

	[Token(Token = "0x4001D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<TileData> _tilesData;

	[Token(Token = "0x170004C5")]
	public uint uniqueID
	{
		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xC08EE0", Offset = "0xC08EE0", VA = "0xC08EE0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170004C6")]
	public int currentDamage
	{
		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xC08EE8", Offset = "0xC08EE8", VA = "0xC08EE8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xC08EF0", Offset = "0xC08EF0", VA = "0xC08EF0")]
		set
		{
		}
	}

	[Token(Token = "0x170004C7")]
	public bool isUpdating
	{
		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xC08F88", Offset = "0xC08F88", VA = "0xC08F88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xC08F90", Offset = "0xC08F90", VA = "0xC08F90")]
		set
		{
		}
	}

	[Token(Token = "0x170004C8")]
	public virtual float onLoadDelayTime
	{
		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xC09508", Offset = "0xC09508", VA = "0xC09508", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170004C9")]
	public virtual Material surfaceMaterial
	{
		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xC09510", Offset = "0xC09510", VA = "0xC09510", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004CA")]
	public int expectedDamage
	{
		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xC00598", Offset = "0xC00598", VA = "0xC00598")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170004CB")]
	public bool isGlowing
	{
		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xC0955C", Offset = "0xC0955C", VA = "0xC0955C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004CC")]
	public bool isAlive
	{
		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xC0956C", Offset = "0xC0956C", VA = "0xC0956C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xC08F5C", Offset = "0xC08F5C", VA = "0xC08F5C")]
		set
		{
		}
	}

	[Token(Token = "0x170004CD")]
	public bool isDestroyed
	{
		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xC09574", Offset = "0xC09574", VA = "0xC09574")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004CE")]
	public bool isOrWillBeDestroyed
	{
		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xC00580", Offset = "0xC00580", VA = "0xC00580")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004CF")]
	public bool isGoingToBeDestroyed
	{
		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xC09584", Offset = "0xC09584", VA = "0xC09584")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004D0")]
	public bool IsInView
	{
		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xC09890", Offset = "0xC09890", VA = "0xC09890")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004D1")]
	public bool isScheduled
	{
		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xC098F0", Offset = "0xC098F0", VA = "0xC098F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xC098F8", Offset = "0xC098F8", VA = "0xC098F8")]
		set
		{
		}
	}

	[Token(Token = "0x170004D2")]
	public bool IsFrozen
	{
		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xC01CFC", Offset = "0xC01CFC", VA = "0xC01CFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004D3")]
	public virtual Vector3 center
	{
		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xC09A68", Offset = "0xC09A68", VA = "0xC09A68", Slot = "9")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170004D4")]
	public LastDamageInfo lastDamageInfo
	{
		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xC0A57C", Offset = "0xC0A57C", VA = "0xC0A57C")]
		get
		{
			return default(LastDamageInfo);
		}
	}

	[Token(Token = "0x14000041")]
	public static event Action<Target> targetHit
	{
		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xC09E50", Offset = "0xC09E50", VA = "0xC09E50")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xC09F44", Offset = "0xC09F44", VA = "0xC09F44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000042")]
	public static event Action<Target> targetDamaged
	{
		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xC0A0B4", Offset = "0xC0A0B4", VA = "0xC0A0B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xC0A1A8", Offset = "0xC0A1A8", VA = "0xC0A1A8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000043")]
	public static event Action<Target> targetHealed
	{
		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xC0A318", Offset = "0xC0A318", VA = "0xC0A318")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xC0A40C", Offset = "0xC0A40C", VA = "0xC0A40C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000044")]
	public static event Action<ShotInfo, SyncHexHits.HexHitInfo> onActualDealDamageEvent
	{
		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xC0B7BC", Offset = "0xC0B7BC", VA = "0xC0B7BC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xC0B8B0", Offset = "0xC0B8B0", VA = "0xC0B8B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001C21")]
	[Address(RVA = "0xC090CC", Offset = "0xC090CC", VA = "0xC090CC")]
	public void ReportTargetIsDead()
	{
	}

	[Token(Token = "0x6001C22")]
	[Address(RVA = "0xC09148", Offset = "0xC09148", VA = "0xC09148", Slot = "6")]
	public virtual void OnExpectedDamageReportedFromRemotePlayer(int remoteExpectedDamage, IntVector2 hexCoords)
	{
	}

	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0xC095AC", Offset = "0xC095AC", VA = "0xC095AC")]
	public bool IsInViewForPlayer(Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C34")]
	[Address(RVA = "0xC0A038", Offset = "0xC0A038", VA = "0xC0A038")]
	protected void OnTargetHit()
	{
	}

	[Token(Token = "0x6001C37")]
	[Address(RVA = "0xC0A29C", Offset = "0xC0A29C", VA = "0xC0A29C")]
	protected void OnTargetDamaged()
	{
	}

	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0xC0A500", Offset = "0xC0A500", VA = "0xC0A500")]
	protected void OnTargetHealed()
	{
	}

	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0xC0A58C", Offset = "0xC0A58C", VA = "0xC0A58C", Slot = "10")]
	public virtual bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0xC0A594", Offset = "0xC0A594", VA = "0xC0A594")]
	static Target()
	{
	}

	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0xC0AC20", Offset = "0xC0AC20", VA = "0xC0AC20")]
	public Target()
	{
	}

	[Token(Token = "0x6001C3F")]
	[Address(RVA = "0xC0B114", Offset = "0xC0B114", VA = "0xC0B114")]
	public static Target getTargetByUniqueID(uint uniqueID)
	{
		return null;
	}

	[Token(Token = "0x6001C40")]
	[Address(RVA = "0xC0638C", Offset = "0xC0638C", VA = "0xC0638C")]
	public static void resetTargetsList()
	{
	}

	[Token(Token = "0x6001C41")]
	[Address(RVA = "0xC0B330", Offset = "0xC0B330", VA = "0xC0B330")]
	public void destroy()
	{
	}

	[Token(Token = "0x6001C42")]
	[Address(RVA = "0xC08730", Offset = "0xC08730", VA = "0xC08730")]
	public static void updateAllUpdatableTargets()
	{
	}

	[Token(Token = "0x6001C43")]
	[Address(RVA = "0xC0B39C", Offset = "0xC0B39C", VA = "0xC0B39C", Slot = "11")]
	public virtual void init()
	{
	}

	[Token(Token = "0x6001C44")]
	[Address(RVA = "0xC0B3FC", Offset = "0xC0B3FC", VA = "0xC0B3FC", Slot = "12")]
	public virtual void read(ref SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001C45")]
	[Address(RVA = "0xC0B440", Offset = "0xC0B440", VA = "0xC0B440", Slot = "13")]
	public virtual void write(SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001C46")]
	[Address(RVA = "0xC0B488", Offset = "0xC0B488", VA = "0xC0B488", Slot = "14")]
	public virtual void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C47")]
	[Address(RVA = "0xC0B614", Offset = "0xC0B614", VA = "0xC0B614", Slot = "15")]
	public virtual void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C48")]
	[Address(RVA = "0xC0B6DC", Offset = "0xC0B6DC", VA = "0xC0B6DC", Slot = "16")]
	public virtual void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0xC0B9A4", Offset = "0xC0B9A4", VA = "0xC0B9A4", Slot = "17")]
	public virtual void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0xC0BAA4", Offset = "0xC0BAA4", VA = "0xC0BAA4", Slot = "18")]
	public virtual void onHit(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0xC0BAA8", Offset = "0xC0BAA8", VA = "0xC0BAA8", Slot = "19")]
	protected virtual void onDamaged()
	{
	}

	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0xC0BAAC", Offset = "0xC0BAAC", VA = "0xC0BAAC", Slot = "20")]
	protected virtual void onDestroyed()
	{
	}

	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0xC0BC04", Offset = "0xC0BC04", VA = "0xC0BC04", Slot = "21")]
	protected virtual void update()
	{
	}

	[Token(Token = "0x6001C50")]
	[Address(RVA = "0xC0BC08", Offset = "0xC0BC08", VA = "0xC0BC08", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C51")]
	[Address(RVA = "0xC0BC84", Offset = "0xC0BC84", VA = "0xC0BC84", Slot = "4")]
	public bool Equals(Target other)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C52")]
	[Address(RVA = "0xC0BC90", Offset = "0xC0BC90", VA = "0xC0BC90", Slot = "5")]
	private int System.IComparable<Target>.CompareTo(Target other)
	{
		return default(int);
	}

	[Token(Token = "0x6001C53")]
	[Address(RVA = "0xC0BCB0", Offset = "0xC0BCB0", VA = "0xC0BCB0", Slot = "22")]
	public virtual void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost)
	{
	}

	[Token(Token = "0x6001C54")]
	[Address(RVA = "0xC0BD8C", Offset = "0xC0BD8C", VA = "0xC0BD8C", Slot = "23")]
	public virtual bool canTakeDamage()
	{
		return default(bool);
	}

	[Token(Token = "0x6001C55")]
	[Address(RVA = "0xC0BDBC", Offset = "0xC0BDBC", VA = "0xC0BDBC")]
	private void logScore(ShotInfo shot, SyncHexHits.HexHitInfo hitInfo, int score, int bossScore)
	{
	}

	[Token(Token = "0x6001C56")]
	[Address(RVA = "0xC0C644", Offset = "0xC0C644", VA = "0xC0C644")]
	public void onDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C57")]
	[Address(RVA = "0xC0C7D8", Offset = "0xC0C7D8", VA = "0xC0C7D8")]
	public void calculateUVDepthIndex()
	{
	}

	[Token(Token = "0x6001C58")]
	[Address(RVA = "0xC0CDA0", Offset = "0xC0CDA0", VA = "0xC0CDA0")]
	public void GetRadialSortedTiles(HexTile firstTile, ref List<HexTile> sortedList)
	{
	}
}
[Token(Token = "0x20004B9")]
public class TargetBonus : Target
{
	[Token(Token = "0x170004D5")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xC0D430", Offset = "0xC0D430", VA = "0xC0D430", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0xC0D484", Offset = "0xC0D484", VA = "0xC0D484", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0xC0D500", Offset = "0xC0D500", VA = "0xC0D500", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0xC0D528", Offset = "0xC0D528", VA = "0xC0D528", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0xC0D7A0", Offset = "0xC0D7A0", VA = "0xC0D7A0", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001C60")]
	[Address(RVA = "0xC0D984", Offset = "0xC0D984", VA = "0xC0D984", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}

	[Token(Token = "0x6001C61")]
	[Address(RVA = "0xC0DA40", Offset = "0xC0DA40", VA = "0xC0DA40")]
	public TargetBonus()
	{
	}
}
[Token(Token = "0x20004BA")]
public class TargetBoosterSwitch : Target
{
	[Token(Token = "0x4001D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static bool waitingForBallToDisengage;

	[Token(Token = "0x4001D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Material _surfaceMaterial;

	[Token(Token = "0x170004D6")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xC0DA94", Offset = "0xC0DA94", VA = "0xC0DA94", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C63")]
	[Address(RVA = "0xC0DBB0", Offset = "0xC0DBB0", VA = "0xC0DBB0", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001C64")]
	[Address(RVA = "0xC0DC74", Offset = "0xC0DC74", VA = "0xC0DC74")]
	public TargetBoosterSwitch()
	{
	}

	[Token(Token = "0x6001C65")]
	[Address(RVA = "0xC0DCD4", Offset = "0xC0DCD4", VA = "0xC0DCD4", Slot = "21")]
	protected override void update()
	{
	}

	[Token(Token = "0x6001C66")]
	[Address(RVA = "0xC0DE00", Offset = "0xC0DE00", VA = "0xC0DE00", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C67")]
	[Address(RVA = "0xC0DE7C", Offset = "0xC0DE7C", VA = "0xC0DE7C", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C68")]
	[Address(RVA = "0xC0DEA4", Offset = "0xC0DEA4", VA = "0xC0DEA4", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C69")]
	[Address(RVA = "0xC0E244", Offset = "0xC0E244", VA = "0xC0E244", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0xC0E248", Offset = "0xC0E248", VA = "0xC0E248", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}
}
[Token(Token = "0x20004BB")]
public class TargetDowner : Target
{
	[Token(Token = "0x170004D7")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xC0E304", Offset = "0xC0E304", VA = "0xC0E304", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0xC0E358", Offset = "0xC0E358", VA = "0xC0E358", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0xC0E3D4", Offset = "0xC0E3D4", VA = "0xC0E3D4", Slot = "14")]
	public override void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0xC0E3D8", Offset = "0xC0E3D8", VA = "0xC0E3D8", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0xC0E400", Offset = "0xC0E400", VA = "0xC0E400", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C70")]
	[Address(RVA = "0xC0E62C", Offset = "0xC0E62C", VA = "0xC0E62C", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001C71")]
	[Address(RVA = "0xC0E828", Offset = "0xC0E828", VA = "0xC0E828", Slot = "12")]
	public override void read(ref SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001C72")]
	[Address(RVA = "0xC0E880", Offset = "0xC0E880", VA = "0xC0E880", Slot = "13")]
	public override void write(SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001C73")]
	[Address(RVA = "0xC0E8FC", Offset = "0xC0E8FC", VA = "0xC0E8FC", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}

	[Token(Token = "0x6001C74")]
	[Address(RVA = "0xC0E1F0", Offset = "0xC0E1F0", VA = "0xC0E1F0")]
	public TargetDowner()
	{
	}
}
[Token(Token = "0x20004BC")]
public class TargetMain : Target
{
	[Token(Token = "0x20004BD")]
	[CompilerGenerated]
	private sealed class <animateMaxDamageOnPlacement>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetMain <>4__this;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <duration>5__2;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <t>5__3;

		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <slope1>5__4;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <panicRate>5__5;

		[Token(Token = "0x170004DA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0xC0FF54", Offset = "0xC0FF54", VA = "0xC0FF54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0xC0FF9C", Offset = "0xC0FF9C", VA = "0xC0FF9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xC0F7E0", Offset = "0xC0F7E0", VA = "0xC0F7E0")]
		[DebuggerHidden]
		public <animateMaxDamageOnPlacement>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xC0FC4C", Offset = "0xC0FC4C", VA = "0xC0FC4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xC0FC50", Offset = "0xC0FC50", VA = "0xC0FC50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xC0FF5C", Offset = "0xC0FF5C", VA = "0xC0FF5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int groupID;

	[Token(Token = "0x4001D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaitForSeconds _onLoadDelay;

	[Token(Token = "0x4001D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	protected int _materialIndex;

	[Token(Token = "0x4001D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected Material _surfaceMaterial;

	[Token(Token = "0x4001D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _targetDestroyedSoundPlayed;

	[Token(Token = "0x170004D8")]
	public override float onLoadDelayTime
	{
		[Token(Token = "0x6001C75")]
		[Address(RVA = "0xC0E9D0", Offset = "0xC0E9D0", VA = "0xC0E9D0", Slot = "7")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170004D9")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001C76")]
		[Address(RVA = "0xC0EA24", Offset = "0xC0EA24", VA = "0xC0EA24", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C77")]
	[Address(RVA = "0xC0EBB8", Offset = "0xC0EBB8", VA = "0xC0EBB8")]
	public TargetMain(int groupID, int maxDamage)
	{
	}

	[Token(Token = "0x6001C78")]
	[Address(RVA = "0xC0EC30", Offset = "0xC0EC30", VA = "0xC0EC30", Slot = "10")]
	public override bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C79")]
	[Address(RVA = "0xC0ECFC", Offset = "0xC0ECFC", VA = "0xC0ECFC", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0xC0F1A8", Offset = "0xC0F1A8", VA = "0xC0F1A8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0xC0F3B8", Offset = "0xC0F3B8", VA = "0xC0F3B8", Slot = "14")]
	public override void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0xC0F3E0", Offset = "0xC0F3E0", VA = "0xC0F3E0", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0xC0F3E4", Offset = "0xC0F3E4", VA = "0xC0F3E4", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0xC0F4DC", Offset = "0xC0F4DC", VA = "0xC0F4DC", Slot = "19")]
	protected override void onDamaged()
	{
	}

	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0xC0F578", Offset = "0xC0F578", VA = "0xC0F578", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001C80")]
	[Address(RVA = "0xC0EEE8", Offset = "0xC0EEE8", VA = "0xC0EEE8")]
	public void SetupMusicTexture()
	{
	}

	[Token(Token = "0x6001C81")]
	[Address(RVA = "0xC0EE74", Offset = "0xC0EE74", VA = "0xC0EE74")]
	[IteratorStateMachine(typeof(<animateMaxDamageOnPlacement>d__18))]
	public IEnumerator<float> animateMaxDamageOnPlacement()
	{
		return null;
	}

	[Token(Token = "0x6001C82")]
	[Address(RVA = "0xC0F808", Offset = "0xC0F808", VA = "0xC0F808", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C83")]
	[Address(RVA = "0xC0FA18", Offset = "0xC0FA18", VA = "0xC0FA18", Slot = "22")]
	public override void playHitSound(HexTile tile, float volumeMultiplier, float pitchBoost = 0f)
	{
	}
}
[Token(Token = "0x20004BE")]
public class TargetMainHealing : TargetMain
{
	[Token(Token = "0x4001D84")]
	private const float _healTime = 1.5f;

	[Token(Token = "0x4001D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _healTimer;

	[Token(Token = "0x4001D86")]
	private const int _numTicks = 5;

	[Token(Token = "0x4001D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _curTick;

	[Token(Token = "0x170004DC")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xC10070", Offset = "0xC10070", VA = "0xC10070", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0xC0FFF8", Offset = "0xC0FFF8", VA = "0xC0FFF8")]
	public TargetMainHealing(int groupID, int maxDamage)
	{
	}

	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0xC101A4", Offset = "0xC101A4", VA = "0xC101A4", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0xC10280", Offset = "0xC10280", VA = "0xC10280", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0xC10490", Offset = "0xC10490", VA = "0xC10490", Slot = "17")]
	public override void onActualDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo, int score, float timeBonus)
	{
	}

	[Token(Token = "0x6001C90")]
	[Address(RVA = "0xC104A8", Offset = "0xC104A8", VA = "0xC104A8", Slot = "16")]
	public override void onPreDealDamage(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001C91")]
	[Address(RVA = "0xC104C0", Offset = "0xC104C0", VA = "0xC104C0", Slot = "10")]
	public override bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001C92")]
	[Address(RVA = "0xC1055C", Offset = "0xC1055C", VA = "0xC1055C")]
	public void RemoteHealingDamageReported(int newDamageCount)
	{
	}

	[Token(Token = "0x6001C93")]
	[Address(RVA = "0xC10654", Offset = "0xC10654", VA = "0xC10654", Slot = "21")]
	protected override void update()
	{
	}
}
[Token(Token = "0x20004BF")]
public class TargetPortal : Target
{
	[Token(Token = "0x20004C0")]
	[CompilerGenerated]
	private sealed class <animateFadeInOnPlacement>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetPortal <>4__this;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <duration>5__2;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <t>5__3;

		[Token(Token = "0x170004DF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xC119FC", Offset = "0xC119FC", VA = "0xC119FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004E0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xC11A44", Offset = "0xC11A44", VA = "0xC11A44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xC11154", Offset = "0xC11154", VA = "0xC11154")]
		[DebuggerHidden]
		public <animateFadeInOnPlacement>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xC1189C", Offset = "0xC1189C", VA = "0xC1189C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xC118A0", Offset = "0xC118A0", VA = "0xC118A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xC11A04", Offset = "0xC11A04", VA = "0xC11A04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[CompilerGenerated]
	private sealed class <PlayAnimationCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetPortal <>4__this;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float dir;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170004E1")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xC11C38", Offset = "0xC11C38", VA = "0xC11C38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004E2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xC11C80", Offset = "0xC11C80", VA = "0xC11C80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xC1159C", Offset = "0xC1159C", VA = "0xC1159C")]
		[DebuggerHidden]
		public <PlayAnimationCo>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xC11AA0", Offset = "0xC11AA0", VA = "0xC11AA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xC11AA4", Offset = "0xC11AA4", VA = "0xC11AA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xC11C40", Offset = "0xC11C40", VA = "0xC11C40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material _staticPortalMaterial;

	[Token(Token = "0x4001D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Material _surfaceMaterial;

	[Token(Token = "0x4001D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoroutineHandle _animationCo;

	[Token(Token = "0x4001D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private CoroutineHandle _activatedCo;

	[Token(Token = "0x170004DD")]
	private static Material StaticPortalMaterial
	{
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xC10928", Offset = "0xC10928", VA = "0xC10928")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004DE")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xC10B18", Offset = "0xC10B18", VA = "0xC10B18", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001C96")]
	[Address(RVA = "0xC10B98", Offset = "0xC10B98", VA = "0xC10B98", Slot = "12")]
	public override void read(ref SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001C97")]
	[Address(RVA = "0xC10BDC", Offset = "0xC10BDC", VA = "0xC10BDC", Slot = "13")]
	public override void write(SyncHexHits.HexHitInfo hitInfo, byte[] buffer, ref int index)
	{
	}

	[Token(Token = "0x6001C98")]
	[Address(RVA = "0xC10C20", Offset = "0xC10C20", VA = "0xC10C20")]
	private void PreMaterialAnimation()
	{
	}

	[Token(Token = "0x6001C99")]
	[Address(RVA = "0xC10EB8", Offset = "0xC10EB8", VA = "0xC10EB8")]
	private void PostMaterialAnimation()
	{
	}

	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0xC110E0", Offset = "0xC110E0", VA = "0xC110E0")]
	[IteratorStateMachine(typeof(<animateFadeInOnPlacement>d__10))]
	public IEnumerator<float> animateFadeInOnPlacement()
	{
		return null;
	}

	[Token(Token = "0x6001C9B")]
	[Address(RVA = "0xC1117C", Offset = "0xC1117C", VA = "0xC1117C")]
	public TargetPortal getExitPortal()
	{
		return null;
	}

	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0xC1149C", Offset = "0xC1149C", VA = "0xC1149C", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0xC11514", Offset = "0xC11514", VA = "0xC11514")]
	[IteratorStateMachine(typeof(<PlayAnimationCo>d__15))]
	private IEnumerator<float> PlayAnimationCo(float duration, float dir)
	{
		return null;
	}

	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0xC115C4", Offset = "0xC115C4", VA = "0xC115C4")]
	public void PlayAnimation(float duration, float dir)
	{
	}

	[Token(Token = "0x6001C9F")]
	[Address(RVA = "0xC11664", Offset = "0xC11664", VA = "0xC11664", Slot = "20")]
	protected override void onDestroyed()
	{
	}

	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0xC117A4", Offset = "0xC117A4", VA = "0xC117A4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0xC11820", Offset = "0xC11820", VA = "0xC11820", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0xC11848", Offset = "0xC11848", VA = "0xC11848")]
	public TargetPortal()
	{
	}
}
[Token(Token = "0x20004C2")]
public class TargetSlider : Target
{
	[Token(Token = "0x20004C3")]
	[CompilerGenerated]
	private sealed class <cooldownCo>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TargetSlider <>4__this;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Brick brick;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <brightnessID>5__2;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer <r>5__3;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaterialPropertyBlock <mpb>5__4;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__5;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <duratiom>5__6;

		[Token(Token = "0x170004E4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xC12794", Offset = "0xC12794", VA = "0xC12794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xC127DC", Offset = "0xC127DC", VA = "0xC127DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xC12104", Offset = "0xC12104", VA = "0xC12104")]
		[DebuggerHidden]
		public <cooldownCo>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xC12198", Offset = "0xC12198", VA = "0xC12198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xC1219C", Offset = "0xC1219C", VA = "0xC1219C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xC1279C", Offset = "0xC1279C", VA = "0xC1279C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TargetSlider slider;

	[Token(Token = "0x4001D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _coolingDown;

	[Token(Token = "0x4001D99")]
	private const float COOLDOWN_TIME = 0.3f;

	[Token(Token = "0x4001D9A")]
	private const float FADE_DURATION = 0.3f;

	[Token(Token = "0x4001D9B")]
	private const float GLOW_DURATION = 0.8f;

	[Token(Token = "0x4001D9C")]
	private const float GLOW_BRIGHTNESS = 10f;

	[Token(Token = "0x4001D9D")]
	private const int MAX_SLIDES_PER_SHOT = 5;

	[Token(Token = "0x4001D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _lastShotDamage;

	[Token(Token = "0x4001D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CoroutineHandle _cooldownCo;

	[Token(Token = "0x170004E3")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xC11CDC", Offset = "0xC11CDC", VA = "0xC11CDC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0xC11D30", Offset = "0xC11D30", VA = "0xC11D30")]
	public TargetSlider()
	{
	}

	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0xC11D94", Offset = "0xC11D94", VA = "0xC11D94", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0xC11E10", Offset = "0xC11E10", VA = "0xC11E10", Slot = "18")]
	public override void onHit(ShotInfo shot, ref SyncHexHits.HexHitInfo hitInfo)
	{
	}

	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0xC11EFC", Offset = "0xC11EFC", VA = "0xC11EFC")]
	public void StartCooldown([Optional] Brick brick)
	{
	}

	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0xC12028", Offset = "0xC12028", VA = "0xC12028", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0xC12094", Offset = "0xC12094", VA = "0xC12094")]
	private void reset()
	{
	}

	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0xC11F98", Offset = "0xC11F98", VA = "0xC11F98")]
	[IteratorStateMachine(typeof(<cooldownCo>d__17))]
	private IEnumerator<float> cooldownCo([Optional] Brick brick)
	{
		return null;
	}
}
[Token(Token = "0x20004C4")]
public class TargetSnake : TargetMain
{
	[Token(Token = "0x4001DA9")]
	private const float moveEverySeconds = 0.75f;

	[Token(Token = "0x4001DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public HexTile originalHead;

	[Token(Token = "0x4001DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _reversed;

	[Token(Token = "0x4001DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool _wantToMoveLeft;

	[Token(Token = "0x4001DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _curMoveEverySeconds;

	[Token(Token = "0x4001DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _timeSinceLastMove;

	[Token(Token = "0x4001DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private HexTile _prevTile;

	[Token(Token = "0x4001DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<IntVector2, Target> _devouredTargets;

	[Token(Token = "0x4001DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<SyncWave.SnakeMove> _receivedMoves;

	[Token(Token = "0x4001DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _relocated;

	[Token(Token = "0x4001DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<HexTile> _validTilesForNextMove;

	[Token(Token = "0x4001DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<float> _probabilities;

	[Token(Token = "0x4001DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private HexTile.HexDirection _lastMoveDir;

	[Token(Token = "0x170004E6")]
	private bool debugSnakeIssues
	{
		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xC12838", Offset = "0xC12838", VA = "0xC12838")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170004E7")]
	public HexTile curHead
	{
		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xC128A0", Offset = "0xC128A0", VA = "0xC128A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004E8")]
	public HexTile curTail
	{
		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xC12914", Offset = "0xC12914", VA = "0xC12914")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004E9")]
	public override Vector3 center
	{
		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xC12988", Offset = "0xC12988", VA = "0xC12988", Slot = "9")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170004EA")]
	public override Material surfaceMaterial
	{
		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xC12990", Offset = "0xC12990", VA = "0xC12990", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0xC129E4", Offset = "0xC129E4", VA = "0xC129E4")]
	public TargetSnake(int groupID, int maxDamage)
	{
	}

	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0xC12BC8", Offset = "0xC12BC8", VA = "0xC12BC8")]
	private void onBallChangeOwnership(PlayerID playerID)
	{
	}

	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0xC12BD0", Offset = "0xC12BD0", VA = "0xC12BD0", Slot = "10")]
	public override bool CanHaveShield(int difficulty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0xC12C88", Offset = "0xC12C88", VA = "0xC12C88", Slot = "11")]
	public override void init()
	{
	}

	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0xC1338C", Offset = "0xC1338C", VA = "0xC1338C")]
	public bool isTileActuallyPartOfSnake(HexTile tile)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0xC12D78", Offset = "0xC12D78", VA = "0xC12D78")]
	public void reorderAndShortenSnake()
	{
	}

	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0xC13434", Offset = "0xC13434", VA = "0xC13434", Slot = "19")]
	protected override void onDamaged()
	{
	}

	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0xC13AE0", Offset = "0xC13AE0", VA = "0xC13AE0")]
	private string coordsListToString(IntVector2[] hexCoords)
	{
		return null;
	}

	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0xC13BD4", Offset = "0xC13BD4", VA = "0xC13BD4")]
	private void HandleRemoteMoves()
	{
	}

	[Token(Token = "0x6001CCC")]
	[Address(RVA = "0xC14504", Offset = "0xC14504", VA = "0xC14504", Slot = "21")]
	protected override void update()
	{
	}

	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0xC1331C", Offset = "0xC1331C", VA = "0xC1331C")]
	private void updateUV()
	{
	}

	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0xC14914", Offset = "0xC14914", VA = "0xC14914")]
	private void moveToTile(HexTile nextTile)
	{
	}

	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0xC14BE0", Offset = "0xC14BE0", VA = "0xC14BE0")]
	private void onMoved()
	{
	}

	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0xC1409C", Offset = "0xC1409C", VA = "0xC1409C")]
	private void relocate(int receivedMoveIndex)
	{
	}

	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0xC13E64", Offset = "0xC13E64", VA = "0xC13E64")]
	private bool canRelocate(int receivedMoveIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0xC14748", Offset = "0xC14748", VA = "0xC14748")]
	private void move()
	{
	}

	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0xC14EF0", Offset = "0xC14EF0", VA = "0xC14EF0")]
	private HexTile getNextTile(HexTile.HexDirection dir1, HexTile.HexDirection dir2 = HexTile.HexDirection.Invalid, HexTile.HexDirection dir3 = HexTile.HexDirection.Invalid, float probability1 = 1f, float probability2 = 1f, float probability3 = 1f)
	{
		return null;
	}

	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0xC14CAC", Offset = "0xC14CAC", VA = "0xC14CAC")]
	private HexTile getNextTile()
	{
		return null;
	}

	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0xC15328", Offset = "0xC15328", VA = "0xC15328")]
	private bool canAdvanceToTile(HexTile nextTile)
	{
		return default(bool);
	}

	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0xC13F9C", Offset = "0xC13F9C", VA = "0xC13F9C")]
	private void reverse()
	{
	}

	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0xC149C0", Offset = "0xC149C0", VA = "0xC149C0")]
	private void addHead(HexTile nextTile)
	{
	}

	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0xC13708", Offset = "0xC13708", VA = "0xC13708")]
	private void removeTail(bool printDebug)
	{
	}

	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0xC154B4", Offset = "0xC154B4", VA = "0xC154B4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0xC156C4", Offset = "0xC156C4", VA = "0xC156C4", Slot = "14")]
	public override void preBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0xC15730", Offset = "0xC15730", VA = "0xC15730", Slot = "15")]
	public override void postBrickChanged(Brick brick)
	{
	}

	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0xC157E8", Offset = "0xC157E8", VA = "0xC157E8", Slot = "20")]
	protected override void onDestroyed()
	{
	}
}
[Token(Token = "0x20004C5")]
[DisallowMultipleComponent]
public abstract class Wave : MonoBehaviour
{
	[Token(Token = "0x20004C6")]
	[CompilerGenerated]
	private sealed class <InitTargetsCo>d__43 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Wave <>4__this;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool instant;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <delayScale>5__2;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Target>.Enumerator <>7__wrap2;

		[Token(Token = "0x170004EF")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xC175D4", Offset = "0xC175D4", VA = "0xC175D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xC1761C", Offset = "0xC1761C", VA = "0xC1761C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xC16DF8", Offset = "0xC16DF8", VA = "0xC16DF8")]
		[DebuggerHidden]
		public <InitTargetsCo>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xC170AC", Offset = "0xC170AC", VA = "0xC170AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xC170C8", Offset = "0xC170C8", VA = "0xC170C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xC17584", Offset = "0xC17584", VA = "0xC17584")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xC175DC", Offset = "0xC175DC", VA = "0xC175DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool exclusiveAtThisDifficulty;

	[Token(Token = "0x4001DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int minDifficulty;

	[Token(Token = "0x4001DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxDifficulty;

	[Token(Token = "0x4001DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string setWithEquivalentDifficulty;

	[Token(Token = "0x4001DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Tooltip("0 for default, >1 to allow more time, <1 to allow less")]
	public float timeFactor;

	[Token(Token = "0x4001DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool walledBorders;

	[Token(Token = "0x4001DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public HexTrudeManager.WallType borderWallType;

	[Token(Token = "0x4001DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int defaultTargetsHitPoints;

	[NonSerialized]
	[Token(Token = "0x4001DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _wavePosShift;

	[NonSerialized]
	[Token(Token = "0x4001DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _timeSinceInitialized;

	[NonSerialized]
	[Token(Token = "0x4001DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int _numTimesPlayed;

	[NonSerialized]
	[Token(Token = "0x4001DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool _playedThisSession;

	[Token(Token = "0x4001DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _fullPath;

	[Token(Token = "0x4001DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool allowHorizontalMirror;

	[Token(Token = "0x4001DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool allowVerticalMirror;

	[Token(Token = "0x4001DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private CoroutineHandle _targetInitCoroutine;

	[Token(Token = "0x4001DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Target> targets;

	[Token(Token = "0x4001DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _targetCompletelyInitialized;

	[Token(Token = "0x170004EB")]
	public bool FlippedHorizontally
	{
		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xC16870", Offset = "0xC16870", VA = "0xC16870")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xC16878", Offset = "0xC16878", VA = "0xC16878")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170004EC")]
	public bool FlippedVertically
	{
		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xC16884", Offset = "0xC16884", VA = "0xC16884")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xC1688C", Offset = "0xC1688C", VA = "0xC1688C")]
		[CompilerGenerated]
		protected set
		{
		}
	}

	[Token(Token = "0x170004ED")]
	public string FullPath
	{
		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xC16898", Offset = "0xC16898", VA = "0xC16898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170004EE")]
	public bool targetCompletelyInitialized
	{
		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xC168DC", Offset = "0xC168DC", VA = "0xC168DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x14000045")]
	public event Action completelyInitialized
	{
		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xC1692C", Offset = "0xC1692C", VA = "0xC1692C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xC169C8", Offset = "0xC169C8", VA = "0xC169C8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0xC168E4", Offset = "0xC168E4", VA = "0xC168E4")]
	public void setTargetCompletelyInitialized()
	{
	}

	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0xC16910", Offset = "0xC16910", VA = "0xC16910")]
	private void onCompletelyInitialized()
	{
	}

	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0xC16A64", Offset = "0xC16A64", VA = "0xC16A64", Slot = "4")]
	public virtual bool isWaveAchieved()
	{
		return default(bool);
	}

	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0xC16C2C", Offset = "0xC16C2C", VA = "0xC16C2C", Slot = "5")]
	public virtual void onInitialized()
	{
	}

	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0xC16C30", Offset = "0xC16C30", VA = "0xC16C30", Slot = "6")]
	public virtual void validateIntegrity()
	{
	}

	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0xC16C34", Offset = "0xC16C34", VA = "0xC16C34", Slot = "7")]
	public virtual void setupForMultiplayer()
	{
	}

	[Token(Token = "0x6001CEB")]
	protected abstract void GenerateTargets([Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically);

	[Token(Token = "0x6001CEC")]
	protected abstract void GeneratePowerUps();

	[Token(Token = "0x6001CED")]
	[Address(RVA = "0xC16C38", Offset = "0xC16C38", VA = "0xC16C38", Slot = "10")]
	public virtual void Init(int shift, bool instant = false, [Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically, bool createPowerUps = true)
	{
	}

	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0xC16DF0", Offset = "0xC16DF0", VA = "0xC16DF0")]
	public float GetTimeSinceInit()
	{
		return default(float);
	}

	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0xC16D68", Offset = "0xC16D68", VA = "0xC16D68")]
	[IteratorStateMachine(typeof(<InitTargetsCo>d__43))]
	private IEnumerator<float> InitTargetsCo(bool instant)
	{
		return null;
	}

	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0xC16E20", Offset = "0xC16E20", VA = "0xC16E20", Slot = "11")]
	public virtual void DeInit()
	{
	}

	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0xC16FE8", Offset = "0xC16FE8", VA = "0xC16FE8")]
	protected Wave()
	{
	}
}
[Token(Token = "0x20004C7")]
[ExecuteInEditMode]
public class WaveHandcrafted : Wave
{
	[Token(Token = "0x20004C8")]
	public struct WaveStats
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int numStaticTargets;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int totalStaticTargetsHP;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int totalStaticTargetsArea;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int numSnakes;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int totalSnakesHP;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int numBoosters;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numDowners;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int numPortals;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float difficultyEstimation;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float riskFactor;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float numNeededShots;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float timeNeeded;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float timeGiven;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] HEADERS;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly float[] COEFFICIENTS;

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xC19D68", Offset = "0xC19D68", VA = "0xC19D68")]
		public void estimateDifficulty()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xC19ED8", Offset = "0xC19ED8", VA = "0xC19ED8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xC1A298", Offset = "0xC1A298", VA = "0xC1A298")]
		public string[] getRow()
		{
			return null;
		}
	}

	[Token(Token = "0x20004C9")]
	public enum Positioning
	{
		[Token(Token = "0x4001DEE")]
		Fixed,
		[Token(Token = "0x4001DEF")]
		CenteredInFrontOfPlayer,
		[Token(Token = "0x4001DF0")]
		Random,
		[Token(Token = "0x4001DF1")]
		Custom,
		[Token(Token = "0x4001DF2")]
		FromPreviousWave
	}

	[Token(Token = "0x4001DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Level levelPrefab;

	[Token(Token = "0x4001DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Positioning positioning;

	[Token(Token = "0x4001DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int customShift;

	[Token(Token = "0x4001DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool alignWithGutter;

	[Token(Token = "0x4001DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _lastWavePosShift;

	[Token(Token = "0x4001DD6")]
	private const int MAX_STATIC_TARGETS = 128;

	[Token(Token = "0x4001DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int[] staticTargetHitPointses;

	[Token(Token = "0x4001DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public SerializablePowerupType[] powerups;

	[Token(Token = "0x4001DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public SerializablePowerupType[] excludedPowerupTypes;

	[Token(Token = "0x4001DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int _shift;

	[Token(Token = "0x4001DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IBrick[] levelBricks;

	[Token(Token = "0x4001DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<int> _usedIDs;

	[Token(Token = "0x170004F1")]
	public IBrick[] LevelBricks
	{
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xC17678", Offset = "0xC17678", VA = "0xC17678")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0xC1789C", Offset = "0xC1789C", VA = "0xC1789C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0xC176AC", Offset = "0xC176AC", VA = "0xC176AC")]
	private void findBricks()
	{
	}

	[Token(Token = "0x6001CFC")]
	[Address(RVA = "0xC178A0", Offset = "0xC178A0", VA = "0xC178A0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6001CFD")]
	[Address(RVA = "0xC17968", Offset = "0xC17968", VA = "0xC17968", Slot = "5")]
	public override void onInitialized()
	{
	}

	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0xC17A8C", Offset = "0xC17A8C", VA = "0xC17A8C")]
	private void determineShift()
	{
	}

	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0xC17C58", Offset = "0xC17C58", VA = "0xC17C58")]
	public static int calcPlayerShift(bool alignWithGutter)
	{
		return default(int);
	}

	[Token(Token = "0x6001D00")]
	[Address(RVA = "0xC17D08", Offset = "0xC17D08", VA = "0xC17D08")]
	public static int calcShiftForForwardVector(Vector3 forward, bool alignWithGutter = false)
	{
		return default(int);
	}

	[Token(Token = "0x6001D01")]
	[Address(RVA = "0xC17FB4", Offset = "0xC17FB4", VA = "0xC17FB4")]
	private HexTile shiftedHexTile(IBrick levelBrick)
	{
		return null;
	}

	[Token(Token = "0x6001D02")]
	[Address(RVA = "0xC18128", Offset = "0xC18128", VA = "0xC18128")]
	private Target getStaticTargetByGroupID(int groupID)
	{
		return null;
	}

	[Token(Token = "0x6001D03")]
	[Address(RVA = "0xC182F0", Offset = "0xC182F0", VA = "0xC182F0")]
	private Target getSnakeTargetByGroupID(int groupID)
	{
		return null;
	}

	[Token(Token = "0x6001D04")]
	[Address(RVA = "0xC184B8", Offset = "0xC184B8", VA = "0xC184B8")]
	private void calcDistFromTargetForAllHexTiles()
	{
	}

	[Token(Token = "0x6001D05")]
	[Address(RVA = "0xC18670", Offset = "0xC18670", VA = "0xC18670", Slot = "8")]
	protected override void GenerateTargets([Optional] bool? flippedHorizontally, [Optional] bool? flippedVertically)
	{
	}

	[Token(Token = "0x6001D06")]
	[Address(RVA = "0xC1955C", Offset = "0xC1955C", VA = "0xC1955C")]
	private int getStaticTargetHitPoints(int staticTargetId)
	{
		return default(int);
	}

	[Token(Token = "0x6001D07")]
	[Address(RVA = "0xC1959C", Offset = "0xC1959C", VA = "0xC1959C")]
	private int getSnakeLength(int snakeId)
	{
		return default(int);
	}

	[Token(Token = "0x6001D08")]
	[Address(RVA = "0xC19770", Offset = "0xC19770", VA = "0xC19770", Slot = "9")]
	protected override void GeneratePowerUps()
	{
	}

	[Token(Token = "0x6001D09")]
	[Address(RVA = "0xC19834", Offset = "0xC19834", VA = "0xC19834")]
	public List<int> FindUsedLevelIds()
	{
		return null;
	}

	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0xC17754", Offset = "0xC17754", VA = "0xC17754")]
	public RuntimeBrick[] CreateRuntimeBricks()
	{
		return null;
	}

	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0xC19C74", Offset = "0xC19C74", VA = "0xC19C74")]
	public WaveHandcrafted()
	{
	}
}
[Token(Token = "0x20004CA")]
public static class TimingEx
{
	[Token(Token = "0x20004CB")]
	public delegate bool ConditionAction();

	[Token(Token = "0x20004CC")]
	public delegate IEnumerable<bool> ConditionActionAll();

	[Token(Token = "0x20004CD")]
	[CompilerGenerated]
	private sealed class <_WaitForSecondsRealtime>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x170004F2")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xC1B4F8", Offset = "0xC1B4F8", VA = "0xC1B4F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xC1B540", Offset = "0xC1B540", VA = "0xC1B540", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xC1AA90", Offset = "0xC1AA90", VA = "0xC1AA90")]
		[DebuggerHidden]
		public <_WaitForSecondsRealtime>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xC1B498", Offset = "0xC1B498", VA = "0xC1B498", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xC1B49C", Offset = "0xC1B49C", VA = "0xC1B49C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xC1B500", Offset = "0xC1B500", VA = "0xC1B500", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001D11")]
	[Address(RVA = "0xC1AA20", Offset = "0xC1AA20", VA = "0xC1AA20")]
	[IteratorStateMachine(typeof(<_WaitForSecondsRealtime>d__0))]
	private static IEnumerator<float> _WaitForSecondsRealtime(float delay)
	{
		return null;
	}

	[Token(Token = "0x6001D12")]
	[Address(RVA = "0xC1AAB8", Offset = "0xC1AAB8", VA = "0xC1AAB8")]
	public static float WaitForSecondsRealtime(float delay)
	{
		return default(float);
	}

	[Token(Token = "0x6001D13")]
	[Address(RVA = "0xC1AB38", Offset = "0xC1AB38", VA = "0xC1AB38")]
	public static float WaitUntilDone(IEnumerator<float> coroutine)
	{
		return default(float);
	}

	[Token(Token = "0x6001D14")]
	[Address(RVA = "0xC1ABA0", Offset = "0xC1ABA0", VA = "0xC1ABA0")]
	public static float WaitUntilDone(IEnumerator<float> coroutine, string tag)
	{
		return default(float);
	}

	[Token(Token = "0x6001D15")]
	[Address(RVA = "0xC1AC18", Offset = "0xC1AC18", VA = "0xC1AC18")]
	public static float WaitUntilDone(IEnumerator<float> coroutine, out CoroutineHandle handle)
	{
		return default(float);
	}

	[Token(Token = "0x6001D16")]
	[Address(RVA = "0xC1AC94", Offset = "0xC1AC94", VA = "0xC1AC94")]
	public static float WaitUntil(ConditionAction action)
	{
		return default(float);
	}

	[Token(Token = "0x6001D17")]
	[Address(RVA = "0xC1AD84", Offset = "0xC1AD84", VA = "0xC1AD84")]
	public static float WaitUntilTimeout(ConditionAction action, float timeout)
	{
		return default(float);
	}

	[Token(Token = "0x6001D18")]
	[Address(RVA = "0xC1AE84", Offset = "0xC1AE84", VA = "0xC1AE84")]
	public static float WaitUntilTimeoutUnscaled(ConditionAction action, float timeout)
	{
		return default(float);
	}

	[Token(Token = "0x6001D19")]
	public static float AwaitTask<T>(System.Threading.Tasks.Task<T> task)
	{
		return default(float);
	}

	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0xC1AF84", Offset = "0xC1AF84", VA = "0xC1AF84")]
	public static float AwaitTask(System.Threading.Tasks.Task task)
	{
		return default(float);
	}

	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0xC1B074", Offset = "0xC1B074", VA = "0xC1B074")]
	public static float WaitUntilAll(ConditionActionAll action)
	{
		return default(float);
	}

	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0xC1B164", Offset = "0xC1B164", VA = "0xC1B164")]
	public static float WaitUntil(ConditionAction action, float secondDelay)
	{
		return default(float);
	}
}
[Token(Token = "0x20004DD")]
public class AchievementCardUI : MonoBehaviour
{
	[Token(Token = "0x20004DE")]
	[CompilerGenerated]
	private sealed class <SeenAfterCo>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AchievementCardUI <>4__this;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Achievement ach;

		[Token(Token = "0x17000502")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xC1C604", Offset = "0xC1C604", VA = "0xC1C604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000503")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xC1C64C", Offset = "0xC1C64C", VA = "0xC1C64C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xC1C4D0", Offset = "0xC1C4D0", VA = "0xC1C4D0")]
		[DebuggerHidden]
		public <SeenAfterCo>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xC1C508", Offset = "0xC1C508", VA = "0xC1C508", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xC1C50C", Offset = "0xC1C50C", VA = "0xC1C50C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xC1C60C", Offset = "0xC1C60C", VA = "0xC1C60C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Localize titleText;

	[Token(Token = "0x4001E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize descriptionText;

	[Token(Token = "0x4001E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LocalizeFormatted progressText;

	[Token(Token = "0x4001E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image icon;

	[Token(Token = "0x4001E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UIItemTransitions newBadge;

	[Token(Token = "0x4001E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject complete;

	[Token(Token = "0x4001E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject incomplete;

	[Token(Token = "0x4001E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject completionBar;

	[Token(Token = "0x4001E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material _completionMaterial;

	[Token(Token = "0x4001E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _shaderTimeLeftProp;

	[Token(Token = "0x4001E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private CoroutineHandle _seenAfterCo;

	[Token(Token = "0x4001E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _awaked;

	[Token(Token = "0x6001D67")]
	[Address(RVA = "0xC1BF28", Offset = "0xC1BF28", VA = "0xC1BF28")]
	public void Initialize(Achievement achievement)
	{
	}

	[Token(Token = "0x6001D68")]
	[Address(RVA = "0xC1C2CC", Offset = "0xC1C2CC", VA = "0xC1C2CC")]
	private void ShowNewUnlockBadge(Achievement ach)
	{
	}

	[Token(Token = "0x6001D69")]
	[Address(RVA = "0xC1C440", Offset = "0xC1C440", VA = "0xC1C440")]
	[IteratorStateMachine(typeof(<SeenAfterCo>d__13))]
	private IEnumerator<float> SeenAfterCo(Achievement ach)
	{
		return null;
	}

	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0xC1C124", Offset = "0xC1C124", VA = "0xC1C124")]
	private void SetProgressText(Achievement achievement, Achievement.Card card)
	{
	}

	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0xC1C080", Offset = "0xC1C080", VA = "0xC1C080")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0xC1C3F8", Offset = "0xC1C3F8", VA = "0xC1C3F8")]
	private void ToggleComplete(bool cmplt)
	{
	}

	[Token(Token = "0x6001D6D")]
	[Address(RVA = "0xC1C4F8", Offset = "0xC1C4F8", VA = "0xC1C4F8")]
	public AchievementCardUI()
	{
	}
}
[Token(Token = "0x20004DF")]
public class AchievementListUI : MonoBehaviour
{
	[Token(Token = "0x20004E0")]
	[CompilerGenerated]
	private sealed class <Start>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AchievementListUI <>4__this;

		[Token(Token = "0x17000504")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xC1CEA8", Offset = "0xC1CEA8", VA = "0xC1CEA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000505")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xC1CEF0", Offset = "0xC1CEF0", VA = "0xC1CEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xC1C71C", Offset = "0xC1C71C", VA = "0xC1C71C")]
		[DebuggerHidden]
		public <Start>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xC1CDC0", Offset = "0xC1CDC0", VA = "0xC1CDC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xC1CDC4", Offset = "0xC1CDC4", VA = "0xC1CDC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xC1CEB0", Offset = "0xC1CEB0", VA = "0xC1CEB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIItemTransitions backButton;

	[Token(Token = "0x4001E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image counter;

	[Token(Token = "0x4001E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions nextButton;

	[Token(Token = "0x4001E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int cardsPerPage;

	[Token(Token = "0x4001E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentPageIndex;

	[Token(Token = "0x4001E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The cards place holders in the list")]
	public AchievementCardUI[] cards;

	[Token(Token = "0x4001E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _totalWaves;

	[Token(Token = "0x4001E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int _wavesComplete;

	[Token(Token = "0x6001D74")]
	[Address(RVA = "0xC1C6A8", Offset = "0xC1C6A8", VA = "0xC1C6A8")]
	[IteratorStateMachine(typeof(<Start>d__6))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6001D75")]
	[Address(RVA = "0xC1C744", Offset = "0xC1C744", VA = "0xC1C744")]
	private void TurnOffCards()
	{
	}

	[Token(Token = "0x6001D76")]
	[Address(RVA = "0xC1C7B4", Offset = "0xC1C7B4", VA = "0xC1C7B4")]
	private void AutoSelectPageIndex(List<Achievement> achievList)
	{
	}

	[Token(Token = "0x6001D77")]
	[Address(RVA = "0xC1C8F4", Offset = "0xC1C8F4", VA = "0xC1C8F4")]
	public void PopulateList(bool autoSelectPage = false)
	{
	}

	[Token(Token = "0x6001D78")]
	[Address(RVA = "0xC1CA78", Offset = "0xC1CA78", VA = "0xC1CA78")]
	private void PopulateList(List<Achievement> achievList, int pageIndex)
	{
	}

	[Token(Token = "0x6001D79")]
	[Address(RVA = "0xC1CBF8", Offset = "0xC1CBF8", VA = "0xC1CBF8")]
	private void UpdatePageUI(int pagesCount)
	{
	}

	[Token(Token = "0x6001D7A")]
	[Address(RVA = "0xC1CD08", Offset = "0xC1CD08", VA = "0xC1CD08")]
	public void PageButtonClick(int page)
	{
	}

	[Token(Token = "0x6001D7B")]
	[Address(RVA = "0xC1CD1C", Offset = "0xC1CD1C", VA = "0xC1CD1C")]
	public AchievementListUI()
	{
	}
}
[Token(Token = "0x20004E2")]
public class AchievementWallText : WallText
{
	[Token(Token = "0x4001E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Image icon;

	[Token(Token = "0x6001D87")]
	[Address(RVA = "0xC1CFD4", Offset = "0xC1CFD4", VA = "0xC1CFD4")]
	public void Init(Achievement ach)
	{
	}

	[Token(Token = "0x6001D88")]
	[Address(RVA = "0xC1D000", Offset = "0xC1D000", VA = "0xC1D000")]
	public AchievementWallText()
	{
	}
}
[Token(Token = "0x20004E3")]
public class AnnouncerToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6001D89")]
	[Address(RVA = "0xC1D008", Offset = "0xC1D008", VA = "0xC1D008", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001D8A")]
	[Address(RVA = "0xC1D010", Offset = "0xC1D010", VA = "0xC1D010", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001D8B")]
	[Address(RVA = "0xC1D064", Offset = "0xC1D064", VA = "0xC1D064", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001D8C")]
	[Address(RVA = "0xC1D0F4", Offset = "0xC1D0F4", VA = "0xC1D0F4", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0xC1D15C", Offset = "0xC1D15C", VA = "0xC1D15C")]
	public AnnouncerToggleSwitch()
	{
	}
}
[Token(Token = "0x20004E4")]
public class AntiAliasingKnob : KnobBase
{
	[Serializable]
	[Token(Token = "0x20004E5")]
	public struct Texts
	{
		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizedString off;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString x2;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString x4;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString x8;
	}

	[Token(Token = "0x4001E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texts texts;

	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0xC1D164", Offset = "0xC1D164", VA = "0xC1D164", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0xC1D16C", Offset = "0xC1D16C", VA = "0xC1D16C", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6001D90")]
	[Address(RVA = "0xC1D19C", Offset = "0xC1D19C", VA = "0xC1D19C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6001D91")]
	[Address(RVA = "0xC1D18C", Offset = "0xC1D18C", VA = "0xC1D18C")]
	private static float AAModeToAmplitude(AntiAliasing.Mode aaMode)
	{
		return default(float);
	}

	[Token(Token = "0x6001D92")]
	[Address(RVA = "0xC1D1CC", Offset = "0xC1D1CC", VA = "0xC1D1CC")]
	private static AntiAliasing.Mode amplitudeToAAMode(float snappedAmplitude)
	{
		return default(AntiAliasing.Mode);
	}

	[Token(Token = "0x6001D93")]
	[Address(RVA = "0xC1D2B0", Offset = "0xC1D2B0", VA = "0xC1D2B0", Slot = "9")]
	protected override bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6001D94")]
	[Address(RVA = "0xC1D2C8", Offset = "0xC1D2C8", VA = "0xC1D2C8", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6001D95")]
	[Address(RVA = "0xC1D3F0", Offset = "0xC1D3F0", VA = "0xC1D3F0")]
	public AntiAliasingKnob()
	{
	}
}
[Token(Token = "0x20004E6")]
public class ArcadeDifficultyMenuItem : MonoBehaviour
{
	[Token(Token = "0x4001E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArcadeType arcadeType;

	[Token(Token = "0x4001E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro bestScoreText;

	[Token(Token = "0x6001D96")]
	[Address(RVA = "0xC1D3F8", Offset = "0xC1D3F8", VA = "0xC1D3F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001D97")]
	[Address(RVA = "0xC1D5F0", Offset = "0xC1D5F0", VA = "0xC1D5F0")]
	public ArcadeDifficultyMenuItem()
	{
	}
}
[Token(Token = "0x20004E7")]
public class ArcadeUI : Area
{
	[Token(Token = "0x4001E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitionsGroup modesTransitionsGroup;

	[Token(Token = "0x4001E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArcadeUI inst;

	[Token(Token = "0x4001E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HorizontalOrbitalLayout modesLayout;

	[Token(Token = "0x4001E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Orbital nightmareOrbital;

	[Token(Token = "0x17000506")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xC1D600", Offset = "0xC1D600", VA = "0xC1D600", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000507")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xC1D608", Offset = "0xC1D608", VA = "0xC1D608", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000508")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xC1D610", Offset = "0xC1D610", VA = "0xC1D610", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000509")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xC1D618", Offset = "0xC1D618", VA = "0xC1D618", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700050A")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xC1D620", Offset = "0xC1D620", VA = "0xC1D620", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001D9D")]
	[Address(RVA = "0xC1D628", Offset = "0xC1D628", VA = "0xC1D628", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001D9E")]
	[Address(RVA = "0xC1D82C", Offset = "0xC1D82C", VA = "0xC1D82C", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001D9F")]
	[Address(RVA = "0xC1DC18", Offset = "0xC1DC18", VA = "0xC1DC18", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001DA0")]
	[Address(RVA = "0xC1DE6C", Offset = "0xC1DE6C", VA = "0xC1DE6C", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6001DA1")]
	[Address(RVA = "0xC1DEC4", Offset = "0xC1DEC4", VA = "0xC1DEC4")]
	public void onZenSelected(Transform easyTransform)
	{
	}

	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0xC1DF34", Offset = "0xC1DF34", VA = "0xC1DF34")]
	public void onOldSchoolSelected(Transform mediumTransform)
	{
	}

	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0xC1DFA4", Offset = "0xC1DFA4", VA = "0xC1DFA4")]
	public void onNightmareSelected(Transform hardTransform)
	{
	}

	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0xC1E014", Offset = "0xC1E014", VA = "0xC1E014")]
	private void onShowLeaderboardClicked(ArcadeType arcadeType)
	{
	}

	[Token(Token = "0x6001DA5")]
	[Address(RVA = "0xC1E23C", Offset = "0xC1E23C", VA = "0xC1E23C")]
	public void onShowRegularLeaderboard()
	{
	}

	[Token(Token = "0x6001DA6")]
	[Address(RVA = "0xC1E244", Offset = "0xC1E244", VA = "0xC1E244")]
	public void onShowNightmareLeaderboard()
	{
	}

	[Token(Token = "0x6001DA7")]
	[Address(RVA = "0xC1E24C", Offset = "0xC1E24C", VA = "0xC1E24C")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x6001DA8")]
	[Address(RVA = "0xC1E26C", Offset = "0xC1E26C", VA = "0xC1E26C")]
	public ArcadeUI()
	{
	}
}
[Token(Token = "0x20004E8")]
[RequireComponent(typeof(UIItemTransitionsGroup))]
public abstract class Area : MonoBehaviour
{
	[Token(Token = "0x20004E9")]
	private enum Visibility
	{
		[Token(Token = "0x4001E4D")]
		Hidden,
		[Token(Token = "0x4001E4E")]
		Showing,
		[Token(Token = "0x4001E4F")]
		Shown,
		[Token(Token = "0x4001E50")]
		Hiding
	}

	[Token(Token = "0x20004EA")]
	[CompilerGenerated]
	private sealed class <showCo>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Area <>4__this;

		[Token(Token = "0x17000513")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0xC1EBE4", Offset = "0xC1EBE4", VA = "0xC1EBE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000514")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0xC1EC2C", Offset = "0xC1EC2C", VA = "0xC1EC2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xC1E494", Offset = "0xC1E494", VA = "0xC1E494")]
		[DebuggerHidden]
		public <showCo>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xC1EA8C", Offset = "0xC1EA8C", VA = "0xC1EA8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xC1EA90", Offset = "0xC1EA90", VA = "0xC1EA90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xC1EBEC", Offset = "0xC1EBEC", VA = "0xC1EBEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EB")]
	[CompilerGenerated]
	private sealed class <hideCo>d__33 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Area <>4__this;

		[Token(Token = "0x17000515")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0xC1ED0C", Offset = "0xC1ED0C", VA = "0xC1ED0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000516")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0xC1ED54", Offset = "0xC1ED54", VA = "0xC1ED54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xC1E868", Offset = "0xC1E868", VA = "0xC1E868")]
		[DebuggerHidden]
		public <hideCo>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xC1EC88", Offset = "0xC1EC88", VA = "0xC1EC88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xC1EC8C", Offset = "0xC1EC8C", VA = "0xC1EC8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xC1ED14", Offset = "0xC1ED14", VA = "0xC1ED14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004EC")]
	[CompilerGenerated]
	private sealed class <waitForAllTransitions>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Area <>4__this;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool completely;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool <allNearlyDone>5__2;

		[Token(Token = "0x17000517")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0xC1EEBC", Offset = "0xC1EEBC", VA = "0xC1EEBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000518")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0xC1EF04", Offset = "0xC1EF04", VA = "0xC1EF04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xC1E918", Offset = "0xC1E918", VA = "0xC1E918")]
		[DebuggerHidden]
		public <waitForAllTransitions>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xC1EDB0", Offset = "0xC1EDB0", VA = "0xC1EDB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xC1EDB4", Offset = "0xC1EDB4", VA = "0xC1EDB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xC1EEC4", Offset = "0xC1EEC4", VA = "0xC1EEC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UIItemTransitionsGroup _transitionsGroup;

	[Token(Token = "0x4001E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x4001E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected UIItemTransitions[] _transitions;

	[Token(Token = "0x4001E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Visibility _visibility;

	[Token(Token = "0x4001E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private CoroutineHandle _showCo;

	[Token(Token = "0x4001E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CoroutineHandle _hideCo;

	[Token(Token = "0x4001E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool _hiddenByPopUp;

	[Token(Token = "0x4001E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ExpandableOrbital[] _expandables;

	[Token(Token = "0x1700050B")]
	public bool isShowingOrShown
	{
		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xC1E27C", Offset = "0xC1E27C", VA = "0xC1E27C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700050C")]
	public bool isShowing
	{
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xC1E290", Offset = "0xC1E290", VA = "0xC1E290")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700050D")]
	public bool isShown
	{
		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xC1E2A0", Offset = "0xC1E2A0", VA = "0xC1E2A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700050E")]
	protected abstract bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001DAC")]
		get;
	}

	[Token(Token = "0x1700050F")]
	protected abstract bool shouldHandleBack
	{
		[Token(Token = "0x6001DAD")]
		get;
	}

	[Token(Token = "0x17000510")]
	protected abstract bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001DAE")]
		get;
	}

	[Token(Token = "0x17000511")]
	protected abstract bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001DAF")]
		get;
	}

	[Token(Token = "0x17000512")]
	protected abstract bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001DB0")]
		get;
	}

	[Token(Token = "0x6001DB1")]
	[Address(RVA = "0xC1D688", Offset = "0xC1D688", VA = "0xC1D688", Slot = "9")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001DB2")]
	[Address(RVA = "0xC1E2B0", Offset = "0xC1E2B0", VA = "0xC1E2B0", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001DB3")]
	[Address(RVA = "0xC1E2F4", Offset = "0xC1E2F4", VA = "0xC1E2F4", Slot = "11")]
	public virtual void show()
	{
	}

	[Token(Token = "0x6001DB4")]
	[Address(RVA = "0xC1E420", Offset = "0xC1E420", VA = "0xC1E420")]
	[IteratorStateMachine(typeof(<showCo>d__27))]
	private IEnumerator<float> showCo()
	{
		return null;
	}

	[Token(Token = "0x6001DB5")]
	[Address(RVA = "0xC1D854", Offset = "0xC1D854", VA = "0xC1D854", Slot = "12")]
	protected virtual void onShowing()
	{
	}

	[Token(Token = "0x6001DB6")]
	[Address(RVA = "0xC1E568", Offset = "0xC1E568", VA = "0xC1E568")]
	private void onPopUpPopped(Transform t)
	{
	}

	[Token(Token = "0x6001DB7")]
	[Address(RVA = "0xC1E630", Offset = "0xC1E630", VA = "0xC1E630")]
	private void onPopUpUnpopped()
	{
	}

	[Token(Token = "0x6001DB8")]
	[Address(RVA = "0xC1E6F0", Offset = "0xC1E6F0", VA = "0xC1E6F0", Slot = "13")]
	protected virtual void onShown()
	{
	}

	[Token(Token = "0x6001DB9")]
	[Address(RVA = "0xC1E6F4", Offset = "0xC1E6F4", VA = "0xC1E6F4", Slot = "14")]
	public virtual void hide(bool byPopUp = false)
	{
	}

	[Token(Token = "0x6001DBA")]
	[Address(RVA = "0xC1E7F4", Offset = "0xC1E7F4", VA = "0xC1E7F4")]
	[IteratorStateMachine(typeof(<hideCo>d__33))]
	private IEnumerator<float> hideCo()
	{
		return null;
	}

	[Token(Token = "0x6001DBB")]
	[Address(RVA = "0xC1E890", Offset = "0xC1E890", VA = "0xC1E890")]
	[IteratorStateMachine(typeof(<waitForAllTransitions>d__34))]
	public IEnumerator<float> waitForAllTransitions(bool completely)
	{
		return null;
	}

	[Token(Token = "0x6001DBC")]
	[Address(RVA = "0xC1DC9C", Offset = "0xC1DC9C", VA = "0xC1DC9C", Slot = "15")]
	protected virtual void onHiding()
	{
	}

	[Token(Token = "0x6001DBD")]
	[Address(RVA = "0xC1E940", Offset = "0xC1E940", VA = "0xC1E940", Slot = "16")]
	protected virtual void onHidden()
	{
	}

	[Token(Token = "0x6001DBE")]
	[Address(RVA = "0xC1E954", Offset = "0xC1E954", VA = "0xC1E954", Slot = "17")]
	protected virtual void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6001DBF")]
	[Address(RVA = "0xC1E9BC", Offset = "0xC1E9BC", VA = "0xC1E9BC", Slot = "18")]
	protected virtual void onMenuButton()
	{
	}

	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0xC1E9C0", Offset = "0xC1E9C0", VA = "0xC1E9C0")]
	public void TriggerBack()
	{
	}

	[Token(Token = "0x6001DC1")]
	[Address(RVA = "0xC1E9D0", Offset = "0xC1E9D0", VA = "0xC1E9D0", Slot = "19")]
	protected virtual void onBack()
	{
	}

	[Token(Token = "0x6001DC2")]
	[Address(RVA = "0xC1E4BC", Offset = "0xC1E4BC", VA = "0xC1E4BC")]
	private ExpandableOrbital findExpanded()
	{
		return null;
	}

	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0xC1EA88", Offset = "0xC1EA88", VA = "0xC1EA88", Slot = "20")]
	protected virtual void onBackHiding()
	{
	}

	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0xC1E274", Offset = "0xC1E274", VA = "0xC1E274")]
	protected Area()
	{
	}
}
[Token(Token = "0x20004ED")]
public class CancelMPButton : MonoBehaviour
{
	[Token(Token = "0x20004EE")]
	private class CancelButtonTimeExceededException : Exception
	{
		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xC1F2E0", Offset = "0xC1F2E0", VA = "0xC1F2E0")]
		public CancelButtonTimeExceededException(string message)
		{
		}
	}

	[Token(Token = "0x4001E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TouchItem _touchItem;

	[Token(Token = "0x4001E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4001E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeForExceptionReport;

	[Token(Token = "0x4001E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _reported;

	[Token(Token = "0x4001E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool _isDisabled;

	[Token(Token = "0x4001E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeDisabled;

	[Token(Token = "0x6001DD7")]
	[Address(RVA = "0xC1EF60", Offset = "0xC1EF60", VA = "0xC1EF60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0xC1EFF4", Offset = "0xC1EFF4", VA = "0xC1EFF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001DD9")]
	[Address(RVA = "0xC1F15C", Offset = "0xC1F15C", VA = "0xC1F15C")]
	private void Enable(bool shouldEnable)
	{
	}

	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0xC1F348", Offset = "0xC1F348", VA = "0xC1F348")]
	public CancelMPButton()
	{
	}
}
[Token(Token = "0x20004EF")]
public class CheatCodeToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x20004F0")]
	public enum CheatType
	{
		[Token(Token = "0x4001E67")]
		godMode,
		[Token(Token = "0x4001E68")]
		unlockAll
	}

	[Token(Token = "0x4001E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CheatCodeToggleSwitch _godMode;

	[Token(Token = "0x4001E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CheatCodeToggleSwitch _unlockAll;

	[Token(Token = "0x4001E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CheatType type;

	[Token(Token = "0x4001E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool active;

	[Token(Token = "0x17000519")]
	public static bool godMode
	{
		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xC1F358", Offset = "0xC1F358", VA = "0xC1F358")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700051A")]
	public static bool unlockAll
	{
		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xC1F400", Offset = "0xC1F400", VA = "0xC1F400")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0xC1F4A8", Offset = "0xC1F4A8", VA = "0xC1F4A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0xC1F514", Offset = "0xC1F514", VA = "0xC1F514", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0xC1F51C", Offset = "0xC1F51C", VA = "0xC1F51C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0xC1F5C8", Offset = "0xC1F5C8", VA = "0xC1F5C8", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0xC1F664", Offset = "0xC1F664", VA = "0xC1F664")]
	public CheatCodeToggleSwitch()
	{
	}
}
[Token(Token = "0x20004F1")]
public class CoModeToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x4001E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UIItemTransitions versusLabel;

	[Token(Token = "0x4001E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions coOpLabel;

	[Token(Token = "0x4001E6B")]
	private const string CO_MODE_KEY = "Co-Mode_Toggle_State";

	[Token(Token = "0x4001E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CoMode coMode;

	[Token(Token = "0x6001DE3")]
	[Address(RVA = "0xC1F66C", Offset = "0xC1F66C", VA = "0xC1F66C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001DE4")]
	[Address(RVA = "0xC1F674", Offset = "0xC1F674", VA = "0xC1F674")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DE5")]
	[Address(RVA = "0xC1F7A0", Offset = "0xC1F7A0", VA = "0xC1F7A0", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001DE6")]
	[Address(RVA = "0xC1F800", Offset = "0xC1F800", VA = "0xC1F800", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001DE7")]
	[Address(RVA = "0xC1F704", Offset = "0xC1F704", VA = "0xC1F704")]
	private void updateLabels()
	{
	}

	[Token(Token = "0x6001DE8")]
	[Address(RVA = "0xC1F8F0", Offset = "0xC1F8F0", VA = "0xC1F8F0", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001DE9")]
	[Address(RVA = "0xC1F958", Offset = "0xC1F958", VA = "0xC1F958", Slot = "9")]
	protected override bool isOff(bool snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6001DEA")]
	[Address(RVA = "0xC1F960", Offset = "0xC1F960", VA = "0xC1F960")]
	public CoModeToggleSwitch()
	{
	}
}
[Token(Token = "0x20004F2")]
public class CustomizationsUI : Area
{
	[Token(Token = "0x4001E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerProfileUI playerProfileUI;

	[Token(Token = "0x4001E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MirrorArea mirrorArea;

	[Token(Token = "0x1700051B")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xC1F9B4", Offset = "0xC1F9B4", VA = "0xC1F9B4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700051C")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xC1F9BC", Offset = "0xC1F9BC", VA = "0xC1F9BC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700051D")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xC1F9C4", Offset = "0xC1F9C4", VA = "0xC1F9C4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700051E")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xC1F9CC", Offset = "0xC1F9CC", VA = "0xC1F9CC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700051F")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xC1F9D4", Offset = "0xC1F9D4", VA = "0xC1F9D4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0xC1F9DC", Offset = "0xC1F9DC", VA = "0xC1F9DC", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0xC1FB18", Offset = "0xC1FB18", VA = "0xC1FB18", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001DF3")]
	[Address(RVA = "0xC1FB40", Offset = "0xC1FB40", VA = "0xC1FB40")]
	public CustomizationsUI()
	{
	}
}
[Token(Token = "0x20004F3")]
public class DefaultRacketSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6001DF4")]
	[Address(RVA = "0xC1FB48", Offset = "0xC1FB48", VA = "0xC1FB48", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001DF5")]
	[Address(RVA = "0xC1FBAC", Offset = "0xC1FBAC", VA = "0xC1FBAC", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001DF6")]
	[Address(RVA = "0xC1FC44", Offset = "0xC1FC44", VA = "0xC1FC44", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0xC1FC84", Offset = "0xC1FC84", VA = "0xC1FC84")]
	public DefaultRacketSwitch()
	{
	}
}
[Token(Token = "0x20004F4")]
public class DemoLock : MonoBehaviour
{
	[Token(Token = "0x4001E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoxCollider blockedCollider;

	[Token(Token = "0x4001E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI highglightText;

	[Token(Token = "0x4001E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _locked;

	[Token(Token = "0x17000520")]
	public bool locked
	{
		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xC1FC8C", Offset = "0xC1FC8C", VA = "0xC1FC8C")]
		set
		{
		}
	}

	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0xC1FC9C", Offset = "0xC1FC9C", VA = "0xC1FC9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001DFA")]
	[Address(RVA = "0xC1FCC4", Offset = "0xC1FCC4", VA = "0xC1FCC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001DFB")]
	[Address(RVA = "0xC1FC98", Offset = "0xC1FC98", VA = "0xC1FC98")]
	private void onLockedChanged()
	{
	}

	[Token(Token = "0x6001DFC")]
	[Address(RVA = "0xC1FCA0", Offset = "0xC1FCA0", VA = "0xC1FCA0")]
	private void updateLock()
	{
	}

	[Token(Token = "0x6001DFD")]
	[Address(RVA = "0xC1FCC8", Offset = "0xC1FCC8", VA = "0xC1FCC8")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x6001DFE")]
	[Address(RVA = "0xC1FD68", Offset = "0xC1FD68", VA = "0xC1FD68")]
	public void CopyBlockedCollider()
	{
	}

	[Token(Token = "0x6001DFF")]
	[Address(RVA = "0xC1FE84", Offset = "0xC1FE84", VA = "0xC1FE84")]
	public DemoLock()
	{
	}
}
[Token(Token = "0x20004F5")]
public static class DisplayTextFormat
{
	[Token(Token = "0x4001E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder _builder;

	[Token(Token = "0x6001E00")]
	[Address(RVA = "0xC1FE94", Offset = "0xC1FE94", VA = "0xC1FE94")]
	public static string formatScore(int score)
	{
		return null;
	}

	[Token(Token = "0x6001E01")]
	[Address(RVA = "0xC1D4E8", Offset = "0xC1D4E8", VA = "0xC1D4E8")]
	public static void formatScore(int score, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E02")]
	[Address(RVA = "0xC1FEB0", Offset = "0xC1FEB0", VA = "0xC1FEB0")]
	public static void formatVersusRating(PlayerProfileData.Multiplayer.Versus versusData, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E03")]
	[Address(RVA = "0xC20098", Offset = "0xC20098", VA = "0xC20098")]
	public static void formatIntCustom(int num, string format, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E04")]
	[Address(RVA = "0xC20190", Offset = "0xC20190", VA = "0xC20190")]
	public static void formatDuration(float seconds, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E05")]
	[Address(RVA = "0xC2020C", Offset = "0xC2020C", VA = "0xC2020C")]
	public static void formatDurationCustom(float seconds, string format, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E06")]
	[Address(RVA = "0xC203F4", Offset = "0xC203F4", VA = "0xC203F4")]
	public static void formatLongDurationCustom(float seconds, string format, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E07")]
	[Address(RVA = "0xC20584", Offset = "0xC20584", VA = "0xC20584")]
	public static void formatDurationAsHours(float seconds, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E08")]
	[Address(RVA = "0xC2083C", Offset = "0xC2083C", VA = "0xC2083C")]
	public static void formatPercent(int percent, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E09")]
	[Address(RVA = "0xC20960", Offset = "0xC20960", VA = "0xC20960")]
	public static void formatRank(int rank, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0xC20A68", Offset = "0xC20A68", VA = "0xC20A68")]
	public static void formatDate(DateTime date, TMP_Text textMesh)
	{
	}

	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0xC20BD4", Offset = "0xC20BD4", VA = "0xC20BD4")]
	public static void formatDate(DateTime date, TextMeshProUGUI textMesh)
	{
	}
}
[Token(Token = "0x20004F6")]
public class DynamicListMenu : MonoBehaviour
{
	[Token(Token = "0x20004F7")]
	private class Button
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityAction action;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localize localize;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIItemTransitions transitions;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SelectableTouchItem selectable;

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xC21630", Offset = "0xC21630", VA = "0xC21630")]
		public Button()
		{
		}
	}

	[Token(Token = "0x4001E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform window;

	[Token(Token = "0x4001E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform button0;

	[Token(Token = "0x4001E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _windowOrigHeight;

	[Token(Token = "0x4001E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _buttonHeight;

	[Token(Token = "0x4001E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Button> _buttons;

	[Token(Token = "0x4001E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, Button> _cachedButtons;

	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0xC20DC4", Offset = "0xC20DC4", VA = "0xC20DC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0xC20ED8", Offset = "0xC20ED8", VA = "0xC20ED8")]
	public void reset()
	{
	}

	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0xC21070", Offset = "0xC21070", VA = "0xC21070")]
	public int addButton(LocalizedString name, UnityAction action, bool enabled)
	{
		return default(int);
	}

	[Token(Token = "0x6001E10")]
	[Address(RVA = "0xC21638", Offset = "0xC21638", VA = "0xC21638")]
	private void enableButton(Button button, bool enable)
	{
	}

	[Token(Token = "0x6001E11")]
	[Address(RVA = "0xC21704", Offset = "0xC21704", VA = "0xC21704")]
	private void onButtonSelected(int index)
	{
	}

	[Token(Token = "0x6001E12")]
	[Address(RVA = "0xC217C0", Offset = "0xC217C0", VA = "0xC217C0")]
	public void selectButton(int index, bool selected)
	{
	}

	[Token(Token = "0x6001E13")]
	[Address(RVA = "0xC218F8", Offset = "0xC218F8", VA = "0xC218F8")]
	public DynamicListMenu()
	{
	}
}
[Token(Token = "0x20004F9")]
public class EmptyToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6001E17")]
	[Address(RVA = "0xC21920", Offset = "0xC21920", VA = "0xC21920", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001E18")]
	[Address(RVA = "0xC219C0", Offset = "0xC219C0", VA = "0xC219C0", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E19")]
	[Address(RVA = "0xC219C8", Offset = "0xC219C8", VA = "0xC219C8", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6001E1A")]
	[Address(RVA = "0xC219D4", Offset = "0xC219D4", VA = "0xC219D4", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6001E1B")]
	[Address(RVA = "0xC21A3C", Offset = "0xC21A3C", VA = "0xC21A3C")]
	public void OnUnGrab()
	{
	}

	[Token(Token = "0x6001E1C")]
	[Address(RVA = "0xC21A58", Offset = "0xC21A58", VA = "0xC21A58")]
	public EmptyToggleSwitch()
	{
	}
}
[Token(Token = "0x20004FA")]
public class EnergyLeaderBoardUI : LeaderBoardUI
{
	[Token(Token = "0x20004FB")]
	[CompilerGenerated]
	private sealed class <onDataAvailable>d__0 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnergyLeaderBoardUI <>4__this;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <showMeAtBottom>5__2;

		[Token(Token = "0x17000521")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xC21D14", Offset = "0xC21D14", VA = "0xC21D14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000522")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xC21D5C", Offset = "0xC21D5C", VA = "0xC21D5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xC21AD4", Offset = "0xC21AD4", VA = "0xC21AD4")]
		[DebuggerHidden]
		public <onDataAvailable>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xC21B04", Offset = "0xC21B04", VA = "0xC21B04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xC21B08", Offset = "0xC21B08", VA = "0xC21B08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xC21D1C", Offset = "0xC21D1C", VA = "0xC21D1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6001E1D")]
	[Address(RVA = "0xC21A60", Offset = "0xC21A60", VA = "0xC21A60", Slot = "4")]
	[IteratorStateMachine(typeof(<onDataAvailable>d__0))]
	protected override IEnumerator<float> onDataAvailable()
	{
		return null;
	}

	[Token(Token = "0x6001E1E")]
	[Address(RVA = "0xC21AFC", Offset = "0xC21AFC", VA = "0xC21AFC")]
	public EnergyLeaderBoardUI()
	{
	}
}
[Token(Token = "0x20004FC")]
public class ArcadeLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ArcadeLeaderboard inst;

	[Token(Token = "0x4001E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private ArcadeType _arcadeType;

	[Token(Token = "0x6001E25")]
	[Address(RVA = "0xC21DB8", Offset = "0xC21DB8", VA = "0xC21DB8", Slot = "10")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001E26")]
	[Address(RVA = "0xC1E230", Offset = "0xC1E230", VA = "0xC1E230")]
	public void show(ArcadeType arcadeType, OnBack onBack)
	{
	}

	[Token(Token = "0x6001E27")]
	[Address(RVA = "0xC21F54", Offset = "0xC21F54", VA = "0xC21F54", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001E28")]
	[Address(RVA = "0xC21FB0", Offset = "0xC21FB0", VA = "0xC21FB0", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E29")]
	[Address(RVA = "0xC22014", Offset = "0xC22014", VA = "0xC22014")]
	public ArcadeLeaderboard()
	{
	}
}
[Token(Token = "0x20004FD")]
[RequireComponent(typeof(UIItemTransitionsGroup))]
public abstract class ExternalLeaderboard : MonoBehaviour
{
	[Token(Token = "0x20004FE")]
	public delegate void OnBack();

	[Token(Token = "0x20004FF")]
	[CompilerGenerated]
	private sealed class <showCo>d__30 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExternalLeaderboard <>4__this;

		[Token(Token = "0x17000528")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xC22E94", Offset = "0xC22E94", VA = "0xC22E94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000529")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xC22EDC", Offset = "0xC22EDC", VA = "0xC22EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xC2225C", Offset = "0xC2225C", VA = "0xC2225C")]
		[DebuggerHidden]
		public <showCo>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xC22950", Offset = "0xC22950", VA = "0xC22950", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xC22954", Offset = "0xC22954", VA = "0xC22954", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0xC22E9C", Offset = "0xC22E9C", VA = "0xC22E9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000500")]
	[CompilerGenerated]
	private sealed class <downloadCo>d__31 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExternalLeaderboard <>4__this;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string rnxId2;

		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int startRank;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int count;

		[Token(Token = "0x1700052A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xC23120", Offset = "0xC23120", VA = "0xC23120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700052B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xC23168", Offset = "0xC23168", VA = "0xC23168", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xC22328", Offset = "0xC22328", VA = "0xC22328")]
		[DebuggerHidden]
		public <downloadCo>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xC22F38", Offset = "0xC22F38", VA = "0xC22F38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xC22F3C", Offset = "0xC22F3C", VA = "0xC22F3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xC23128", Offset = "0xC23128", VA = "0xC23128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExternalLeaderboardRow[] rows;

	[Token(Token = "0x4001E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform playerMarker;

	[Token(Token = "0x4001E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions list;

	[Token(Token = "0x4001E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIItemTransitions loading;

	[Token(Token = "0x4001E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _rnxId2;

	[Token(Token = "0x4001E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected OnBack _onBack;

	[Token(Token = "0x4001E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool _visible;

	[Token(Token = "0x4001E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UIItemTransitionsGroup _transitionsGroup;

	[Token(Token = "0x4001E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LeaderboardManager.LeaderboardContainer _leaderboard;

	[Token(Token = "0x4001E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _myRank;

	[Token(Token = "0x4001E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<int, LeaderboardManager.Entry> _entriesByRank;

	[Token(Token = "0x4001E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CoroutineHandle _showCo;

	[Token(Token = "0x17000523")]
	public bool visible
	{
		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xC22024", Offset = "0xC22024", VA = "0xC22024")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000524")]
	private LeaderboardManager.Entry[] entries
	{
		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xC2202C", Offset = "0xC2202C", VA = "0xC2202C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000525")]
	private int numRows
	{
		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xC22048", Offset = "0xC22048", VA = "0xC22048")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000526")]
	protected virtual int numTopRows
	{
		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xC22064", Offset = "0xC22064", VA = "0xC22064", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000527")]
	private int numBottomRows
	{
		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xC2206C", Offset = "0xC2206C", VA = "0xC2206C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001E2F")]
	protected abstract LeaderboardManager.LeaderboardContainer GetLeaderboard();

	[Token(Token = "0x6001E30")]
	protected abstract void formatScore(int scoreValue, TextMeshPro textMesh);

	[Token(Token = "0x6001E31")]
	[Address(RVA = "0xC22098", Offset = "0xC22098", VA = "0xC22098", Slot = "7")]
	protected virtual void formatReset(TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E32")]
	[Address(RVA = "0xC2209C", Offset = "0xC2209C", VA = "0xC2209C", Slot = "8")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001E33")]
	[Address(RVA = "0xC21E10", Offset = "0xC21E10", VA = "0xC21E10")]
	protected void _show(string rnxId2, OnBack onBackHandler)
	{
	}

	[Token(Token = "0x6001E34")]
	[Address(RVA = "0xC22168", Offset = "0xC22168", VA = "0xC22168", Slot = "9")]
	protected virtual void _hide()
	{
	}

	[Token(Token = "0x6001E35")]
	[Address(RVA = "0xC1DC84", Offset = "0xC1DC84", VA = "0xC1DC84")]
	public void hide()
	{
	}

	[Token(Token = "0x6001E36")]
	[Address(RVA = "0xC220F4", Offset = "0xC220F4", VA = "0xC220F4")]
	[IteratorStateMachine(typeof(<showCo>d__30))]
	private IEnumerator<float> showCo()
	{
		return null;
	}

	[Token(Token = "0x6001E37")]
	[Address(RVA = "0xC22284", Offset = "0xC22284", VA = "0xC22284")]
	[IteratorStateMachine(typeof(<downloadCo>d__31))]
	private IEnumerator<float> downloadCo(string rnxId2, int startRank, int count)
	{
		return null;
	}

	[Token(Token = "0x6001E38")]
	[Address(RVA = "0xC22350", Offset = "0xC22350", VA = "0xC22350")]
	private void onBack()
	{
	}

	[Token(Token = "0x6001E39")]
	[Address(RVA = "0xC22388", Offset = "0xC22388", VA = "0xC22388")]
	private void setEntries(int firstRowIndex, int firstRank, int count)
	{
	}

	[Token(Token = "0x6001E3A")]
	[Address(RVA = "0xC2201C", Offset = "0xC2201C", VA = "0xC2201C")]
	protected ExternalLeaderboard()
	{
	}
}
[Token(Token = "0x2000501")]
public class ExternalLeaderboardRow : MonoBehaviour
{
	[Token(Token = "0x2000502")]
	public delegate void FormatScore(int scoreValue, TextMeshPro textMesh);

	[Token(Token = "0x2000503")]
	public delegate void FormatReset(TextMeshPro textMesh);

	[Token(Token = "0x4001E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro rank;

	[Token(Token = "0x4001E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro name_;

	[Token(Token = "0x4001E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro name2;

	[Token(Token = "0x4001E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro score;

	[Token(Token = "0x6001E4B")]
	[Address(RVA = "0xC231C4", Offset = "0xC231C4", VA = "0xC231C4")]
	private void setName2(string name2Txt)
	{
	}

	[Token(Token = "0x6001E4C")]
	[Address(RVA = "0xC23330", Offset = "0xC23330", VA = "0xC23330")]
	public void set(string rankTxt, string nameTxt, string name2Txt, string scoreTxt)
	{
	}

	[Token(Token = "0x6001E4D")]
	[Address(RVA = "0xC2266C", Offset = "0xC2266C", VA = "0xC2266C")]
	public void set(int rankNum, string nameTxt, string name2Txt, int scoreValue, FormatScore scoreFormatter)
	{
	}

	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0xC22858", Offset = "0xC22858", VA = "0xC22858")]
	public void reset(FormatReset resetFormatter)
	{
	}

	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0xC233B8", Offset = "0xC233B8", VA = "0xC233B8")]
	public ExternalLeaderboardRow()
	{
	}
}
[Token(Token = "0x2000504")]
public class LevelEditorLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LocalizeFormatted setName;

	[Token(Token = "0x4001EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorLeaderboard inst;

	[Token(Token = "0x4001EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CustomSet _customSet;

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0xC234B0", Offset = "0xC234B0", VA = "0xC234B0", Slot = "10")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0xC23508", Offset = "0xC23508", VA = "0xC23508", Slot = "11")]
	public virtual void show(CustomSet customSet, OnBack onBack)
	{
	}

	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0xC235AC", Offset = "0xC235AC", VA = "0xC235AC", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0xC23608", Offset = "0xC23608", VA = "0xC23608", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0xC23678", Offset = "0xC23678", VA = "0xC23678", Slot = "7")]
	protected override void formatReset(TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0xC236EC", Offset = "0xC236EC", VA = "0xC236EC")]
	public LevelEditorLeaderboard()
	{
	}
}
[Token(Token = "0x2000505")]
public class MPCoOpLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPCoOpLeaderboard inst;

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0xC236F4", Offset = "0xC236F4", VA = "0xC236F4", Slot = "10")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0xC2374C", Offset = "0xC2374C", VA = "0xC2374C")]
	public void show(OnBack onBack)
	{
	}

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0xC23758", Offset = "0xC23758", VA = "0xC23758", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0xC237AC", Offset = "0xC237AC", VA = "0xC237AC", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0xC23810", Offset = "0xC23810", VA = "0xC23810")]
	public MPCoOpLeaderboard()
	{
	}
}
[Token(Token = "0x2000506")]
public class MPVersusLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MPVersusLeaderboard inst;

	[Token(Token = "0x4001EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MPVersusLeaderboardTab[] _tabs;

	[Token(Token = "0x4001EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _selectedSeasonIndex;

	[Token(Token = "0x1700052C")]
	private int _lastSeasonIndex
	{
		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xC238A8", Offset = "0xC238A8", VA = "0xC238A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0xC23818", Offset = "0xC23818", VA = "0xC23818", Slot = "10")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0xC23904", Offset = "0xC23904", VA = "0xC23904")]
	public void show(OnBack onBack, int selectedSeasonIndex = -1)
	{
	}

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0xC239E0", Offset = "0xC239E0", VA = "0xC239E0")]
	private void updateTabs()
	{
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0xC23CC0", Offset = "0xC23CC0", VA = "0xC23CC0")]
	private void OnLocalize()
	{
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0xC23CC4", Offset = "0xC23CC4", VA = "0xC23CC4", Slot = "9")]
	protected override void _hide()
	{
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0xC23D70", Offset = "0xC23D70", VA = "0xC23D70", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0xC23DCC", Offset = "0xC23DCC", VA = "0xC23DCC", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0xC23ED8", Offset = "0xC23ED8", VA = "0xC23ED8")]
	public void onSeasonClicked(MPVersusLeaderboardTab tab)
	{
	}

	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0xC24024", Offset = "0xC24024", VA = "0xC24024")]
	public MPVersusLeaderboard()
	{
	}
}
[Token(Token = "0x2000507")]
public class MPVersusLeaderboardTab : MonoBehaviour
{
	[Token(Token = "0x4001EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeInt localizedName;

	[Token(Token = "0x4001EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LocalizeFormatted localizedEnded;

	[Token(Token = "0x4001EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject current;

	[Token(Token = "0x4001EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4001EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _seasonIndex;

	[Token(Token = "0x1700052D")]
	public int seasonIndex
	{
		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xC2402C", Offset = "0xC2402C", VA = "0xC2402C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0xC24034", Offset = "0xC24034", VA = "0xC24034")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0xC23A78", Offset = "0xC23A78", VA = "0xC23A78")]
	public void show(int seasonIndex, bool selected)
	{
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0xC2408C", Offset = "0xC2408C", VA = "0xC2408C")]
	private string shortYear(int year)
	{
		return null;
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0xC241AC", Offset = "0xC241AC", VA = "0xC241AC")]
	private string shortMonth(int month)
	{
		return null;
	}

	[Token(Token = "0x6001E72")]
	[Address(RVA = "0xC23C9C", Offset = "0xC23C9C", VA = "0xC23C9C")]
	public void hide()
	{
	}

	[Token(Token = "0x6001E73")]
	[Address(RVA = "0xC24248", Offset = "0xC24248", VA = "0xC24248")]
	public MPVersusLeaderboardTab()
	{
	}
}
[Token(Token = "0x2000508")]
public class SoloCampaignLeaderboard : SoloLeaderboard
{
	[Token(Token = "0x4001EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image setImage;

	[Token(Token = "0x4001EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LocalizeFormatted setName;

	[Token(Token = "0x4001EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] stars;

	[Token(Token = "0x4001EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro star2RequiredTime;

	[Token(Token = "0x4001EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro star3RequiredTime;

	[Token(Token = "0x4001EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloCampaignLeaderboard inst;

	[Token(Token = "0x4001EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _star2RequiredTimeFormat;

	[Token(Token = "0x4001EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _star3RequiredTimeFormat;

	[Token(Token = "0x6001E74")]
	[Address(RVA = "0xC24250", Offset = "0xC24250", VA = "0xC24250", Slot = "11")]
	public override void InitSingleton()
	{
	}

	[Token(Token = "0x6001E75")]
	[Address(RVA = "0xC242AC", Offset = "0xC242AC", VA = "0xC242AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001E76")]
	[Address(RVA = "0xC24398", Offset = "0xC24398", VA = "0xC24398", Slot = "12")]
	public override void show(string setId, OnBack onBack)
	{
	}

	[Token(Token = "0x6001E77")]
	[Address(RVA = "0xC24874", Offset = "0xC24874", VA = "0xC24874")]
	public SoloCampaignLeaderboard()
	{
	}
}
[Token(Token = "0x2000509")]
public class SoloLeaderboard : ExternalLeaderboard, ISingleton
{
	[Token(Token = "0x4001EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected string _setId;

	[Token(Token = "0x6001E78")]
	[Address(RVA = "0xC242A8", Offset = "0xC242A8", VA = "0xC242A8", Slot = "11")]
	public virtual void InitSingleton()
	{
	}

	[Token(Token = "0x6001E79")]
	[Address(RVA = "0xC24844", Offset = "0xC24844", VA = "0xC24844", Slot = "12")]
	public virtual void show(string setId, OnBack onBack)
	{
	}

	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0xC24884", Offset = "0xC24884", VA = "0xC24884", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0xC248E0", Offset = "0xC248E0", VA = "0xC248E0", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0xC24950", Offset = "0xC24950", VA = "0xC24950", Slot = "7")]
	protected override void formatReset(TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0xC2487C", Offset = "0xC2487C", VA = "0xC2487C")]
	public SoloLeaderboard()
	{
	}
}
[Token(Token = "0x200050A")]
public class SoloMonthlyChallengeLeaderboard : SoloLeaderboard
{
	[Token(Token = "0x4001EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] headerTimeObjects;

	[Token(Token = "0x4001EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] headerScoreObjects;

	[Token(Token = "0x4001EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloMonthlyChallengeLeaderboard inst;

	[Token(Token = "0x4001EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SoloMonthlyChallengeLeaderboardTab[] _tabs;

	[Token(Token = "0x4001EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MonthlyChallenge.Time _selectedTime;

	[Token(Token = "0x1700052E")]
	protected override int numTopRows
	{
		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xC249C4", Offset = "0xC249C4", VA = "0xC249C4", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0xC249CC", Offset = "0xC249CC", VA = "0xC249CC", Slot = "11")]
	public override void InitSingleton()
	{
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0xC24A5C", Offset = "0xC24A5C", VA = "0xC24A5C")]
	public void show(OnBack onBack, [Optional] MonthlyChallenge.Time time)
	{
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0xC250AC", Offset = "0xC250AC", VA = "0xC250AC")]
	public void onChallengeClicked(SoloMonthlyChallengeLeaderboardTab tab)
	{
	}

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0xC25118", Offset = "0xC25118", VA = "0xC25118", Slot = "5")]
	protected override LeaderboardManager.LeaderboardContainer GetLeaderboard()
	{
		return null;
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0xC25194", Offset = "0xC25194", VA = "0xC25194", Slot = "6")]
	protected override void formatScore(int scoreValue, TextMeshPro textMesh)
	{
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0xC25224", Offset = "0xC25224", VA = "0xC25224")]
	public SoloMonthlyChallengeLeaderboard()
	{
	}
}
[Token(Token = "0x200050B")]
public class SoloMonthlyChallengeLeaderboardTab : MonoBehaviour
{
	[Token(Token = "0x4001EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro title;

	[Token(Token = "0x4001EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize localizedTitle;

	[Token(Token = "0x4001EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro description;

	[Token(Token = "0x4001EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject localizedDescription;

	[Token(Token = "0x4001EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x4001EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MonthlyChallenge.Time _time;

	[Token(Token = "0x1700052F")]
	public MonthlyChallenge.Time time
	{
		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xC2522C", Offset = "0xC2522C", VA = "0xC2522C")]
		get
		{
			return default(MonthlyChallenge.Time);
		}
	}

	[Token(Token = "0x6001E86")]
	[Address(RVA = "0xC25234", Offset = "0xC25234", VA = "0xC25234")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001E87")]
	[Address(RVA = "0xC24D8C", Offset = "0xC24D8C", VA = "0xC24D8C")]
	public void show(MonthlyChallenge challenge, bool selected)
	{
	}

	[Token(Token = "0x6001E88")]
	[Address(RVA = "0xC25088", Offset = "0xC25088", VA = "0xC25088")]
	public void hide()
	{
	}

	[Token(Token = "0x6001E89")]
	[Address(RVA = "0xC2528C", Offset = "0xC2528C", VA = "0xC2528C")]
	public SoloMonthlyChallengeLeaderboardTab()
	{
	}
}
[Token(Token = "0x200050C")]
public class FuseBricks : MonoBehaviour
{
	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0xC25294", Offset = "0xC25294", VA = "0xC25294")]
	public void fuse()
	{
	}

	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0xC2548C", Offset = "0xC2548C", VA = "0xC2548C")]
	public FuseBricks()
	{
	}
}
[Token(Token = "0x200050D")]
public class GameObjectColorerEx : GameObjectColorer
{
	[Token(Token = "0x4001EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x4001EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TextMeshProUGUI _textMeshProUgui;

	[Token(Token = "0x4001EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasTMP;

	[Token(Token = "0x4001EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _hasTMPU;

	[Token(Token = "0x4001EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector2Int _coords;

	[Token(Token = "0x4001EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool _usingPPO;

	[Token(Token = "0x4001EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector4 _lastColor;

	[Token(Token = "0x4001EC6")]
	private const float THRESH = 0.002f;

	[Token(Token = "0x4001EC7")]
	private const float THRESH_SQ = 4.0000004E-06f;

	[Token(Token = "0x17000530")]
	public override bool usingPPO
	{
		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xC25494", Offset = "0xC25494", VA = "0xC25494", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0xC254B4", Offset = "0xC254B4", VA = "0xC254B4")]
	public GameObjectColorerEx(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0xC257F4", Offset = "0xC257F4", VA = "0xC257F4")]
	private void onLocalized()
	{
	}

	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0xC25918", Offset = "0xC25918", VA = "0xC25918", Slot = "5")]
	public override void enable(bool enabled)
	{
	}

	[Token(Token = "0x6001E90")]
	[Address(RVA = "0xC25984", Offset = "0xC25984", VA = "0xC25984", Slot = "6")]
	public override Color getColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6001E91")]
	[Address(RVA = "0xC25A38", Offset = "0xC25A38", VA = "0xC25A38", Slot = "7")]
	public override void setColor(Color color)
	{
	}
}
[Token(Token = "0x200050E")]
public class GameOverAchievementsUnlockedButton : MonoBehaviour
{
	[Token(Token = "0x200050F")]
	[CompilerGenerated]
	private sealed class <GoToPlayerProfileCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameOverAchievementsUnlockedButton <>4__this;

		[Token(Token = "0x17000531")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xC26448", Offset = "0xC26448", VA = "0xC26448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000532")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0xC26490", Offset = "0xC26490", VA = "0xC26490", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xC26038", Offset = "0xC26038", VA = "0xC26038")]
		[DebuggerHidden]
		public <GoToPlayerProfileCo>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xC26320", Offset = "0xC26320", VA = "0xC26320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xC26324", Offset = "0xC26324", VA = "0xC26324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xC26450", Offset = "0xC26450", VA = "0xC26450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Witch player buttons plate this button belongs to")]
	public PlayerID playerId;

	[Token(Token = "0x4001EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _soloUIShouldHide;

	[Token(Token = "0x6001E92")]
	[Address(RVA = "0xC25C4C", Offset = "0xC25C4C", VA = "0xC25C4C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001E93")]
	[Address(RVA = "0xC25D38", Offset = "0xC25D38", VA = "0xC25D38")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6001E94")]
	[Address(RVA = "0xC25FC4", Offset = "0xC25FC4", VA = "0xC25FC4")]
	[IteratorStateMachine(typeof(<GoToPlayerProfileCo>d__4))]
	private IEnumerator<float> GoToPlayerProfileCo()
	{
		return null;
	}

	[Token(Token = "0x6001E95")]
	[Address(RVA = "0xC25DA8", Offset = "0xC25DA8", VA = "0xC25DA8")]
	private void ExitGameOverUI()
	{
	}

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0xC26204", Offset = "0xC26204", VA = "0xC26204")]
	private void ExitGameOverUIAfterCo()
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0xC26318", Offset = "0xC26318", VA = "0xC26318")]
	public GameOverAchievementsUnlockedButton()
	{
	}
}
[Token(Token = "0x2000510")]
public class GameOverArcadeUI : GameOverSinglePlayerUI
{
	[Serializable]
	[Token(Token = "0x2000511")]
	public class General
	{
		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] sidePanels;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidePanelsDelay;

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xC27D6C", Offset = "0xC27D6C", VA = "0xC27D6C")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000512")]
	public class Score
	{
		[Serializable]
		[Token(Token = "0x2000513")]
		public struct Stars
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject star1;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIItemTransitions star1Transitions;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro star1RequiredScore;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject star2;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UIItemTransitions star2Transitions;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshPro star2RequiredScore;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject star3;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public UIItemTransitions star3Transitions;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public TextMeshPro star3RequiredScore;
		}

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizeInt score;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro[] numWavesPlayedTexts;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeDuration[] timePlayedTexts;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject thisIsNotBest;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject thisIsBest;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Stars stars;

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xC27D7C", Offset = "0xC27D7C", VA = "0xC27D7C")]
		public Score()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000514")]
	public class Stats
	{
		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro hitAccuracy;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hitAccuracyNotApplicable;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeInt maxPointsPerShot;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro maxHitStreak;

		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro numClutchSaves;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro numBoostsTaken;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizeInt totalDamage;

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xC27D84", Offset = "0xC27D84", VA = "0xC27D84")]
		public Stats()
		{
		}
	}

	[Token(Token = "0x4001ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public General general;

	[Token(Token = "0x4001ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Score score;

	[Token(Token = "0x4001ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Stats stats;

	[Token(Token = "0x4001ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject mainMenuButton;

	[Token(Token = "0x4001ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject restartButton;

	[Token(Token = "0x4001ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonsBGRing;

	[Token(Token = "0x4001ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverArcadeUI inst;

	[Token(Token = "0x4001ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _numWavesFormat;

	[Token(Token = "0x4001ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _star1RequiredScoreFormat;

	[Token(Token = "0x4001ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _star2RequiredScoreFormat;

	[Token(Token = "0x4001ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _star3RequiredScoreFormat;

	[Token(Token = "0x4001ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _hitAccuracyFormat;

	[Token(Token = "0x4001EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _maxHitStreakFormat;

	[Token(Token = "0x4001EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _numClutchSavesFormat;

	[Token(Token = "0x4001EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _numBoostsTakenFormat;

	[Token(Token = "0x4001EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StringBuilder _builder;

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0xC264EC", Offset = "0xC264EC", VA = "0xC264EC")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0xC268D0", Offset = "0xC268D0", VA = "0xC268D0", Slot = "5")]
	public override void show()
	{
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0xC27C74", Offset = "0xC27C74", VA = "0xC27C74")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0xC27CE0", Offset = "0xC27CE0", VA = "0xC27CE0")]
	public GameOverArcadeUI()
	{
	}
}
[Token(Token = "0x2000515")]
public class GameOverMultiplayerCoOpUI : Area
{
	[Serializable]
	[Token(Token = "0x2000516")]
	public class General
	{
		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] sidePanels;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidePanelsDelay;

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xC290DC", Offset = "0xC290DC", VA = "0xC290DC")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000517")]
	public class Score
	{
		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizeInt score;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro[] numWavesPlayedTexts;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeDuration[] timePlayedTexts;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject loading;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject thisIsNotBest;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject thisIsBest;

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xC290EC", Offset = "0xC290EC", VA = "0xC290EC")]
		public Score()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000518")]
	public class PlayerObjects
	{
		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject menu;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchItem rematchButton;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchItem addFriendButton;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TouchItem doneButton;

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xC290F4", Offset = "0xC290F4", VA = "0xC290F4")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x2000519")]
	[CompilerGenerated]
	private sealed class <showLeaderboardDependentInfo>d__25 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameOverMultiplayerCoOpUI <>4__this;

		[Token(Token = "0x17000538")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xC2934C", Offset = "0xC2934C", VA = "0xC2934C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000539")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0xC29394", Offset = "0xC29394", VA = "0xC29394", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xC284A8", Offset = "0xC284A8", VA = "0xC284A8")]
		[DebuggerHidden]
		public <showLeaderboardDependentInfo>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xC290FC", Offset = "0xC290FC", VA = "0xC290FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xC29100", Offset = "0xC29100", VA = "0xC29100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xC29354", Offset = "0xC29354", VA = "0xC29354", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051A")]
	[CompilerGenerated]
	private sealed class <SayTeamBestDelayed>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x1700053A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xC294AC", Offset = "0xC294AC", VA = "0xC294AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xC294F4", Offset = "0xC294F4", VA = "0xC294F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xC28530", Offset = "0xC28530", VA = "0xC28530")]
		[DebuggerHidden]
		public <SayTeamBestDelayed>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xC293F0", Offset = "0xC293F0", VA = "0xC293F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xC293F4", Offset = "0xC293F4", VA = "0xC293F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xC294B4", Offset = "0xC294B4", VA = "0xC294B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LeaderBoardUI leaderBoard;

	[Token(Token = "0x4001EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public General general;

	[Token(Token = "0x4001EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Score score;

	[Token(Token = "0x4001EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerObjects player1;

	[Token(Token = "0x4001EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public PlayerObjects player2;

	[Token(Token = "0x4001EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverMultiplayerCoOpUI inst;

	[Token(Token = "0x4001EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _numWavesFormat;

	[Token(Token = "0x4001EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _selectedByCode;

	[Token(Token = "0x4001EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerObjects _opponentObjects;

	[Token(Token = "0x4001F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CoroutineHandle _showLeaderboardDependentInfoCo;

	[Token(Token = "0x17000533")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xC27D8C", Offset = "0xC27D8C", VA = "0xC27D8C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000534")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xC27D94", Offset = "0xC27D94", VA = "0xC27D94", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000535")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xC27D9C", Offset = "0xC27D9C", VA = "0xC27D9C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000536")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xC27DA4", Offset = "0xC27DA4", VA = "0xC27DA4", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000537")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xC27DAC", Offset = "0xC27DAC", VA = "0xC27DAC", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001EAB")]
	[Address(RVA = "0xC27DB4", Offset = "0xC27DB4", VA = "0xC27DB4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001EAC")]
	[Address(RVA = "0xC27EDC", Offset = "0xC27EDC", VA = "0xC27EDC", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001EAD")]
	[Address(RVA = "0xC28434", Offset = "0xC28434", VA = "0xC28434")]
	[IteratorStateMachine(typeof(<showLeaderboardDependentInfo>d__25))]
	private IEnumerator<float> showLeaderboardDependentInfo()
	{
		return null;
	}

	[Token(Token = "0x6001EAE")]
	[Address(RVA = "0xC284D0", Offset = "0xC284D0", VA = "0xC284D0")]
	[IteratorStateMachine(typeof(<SayTeamBestDelayed>d__26))]
	private IEnumerator<float> SayTeamBestDelayed()
	{
		return null;
	}

	[Token(Token = "0x6001EAF")]
	[Address(RVA = "0xC28558", Offset = "0xC28558", VA = "0xC28558")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001EB0")]
	[Address(RVA = "0xC28374", Offset = "0xC28374", VA = "0xC28374")]
	private void initPlayerObjs(PlayerObjects player, bool me)
	{
	}

	[Token(Token = "0x6001EB1")]
	[Address(RVA = "0xC285C4", Offset = "0xC285C4", VA = "0xC285C4")]
	private void enableButton(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001EB2")]
	[Address(RVA = "0xC2862C", Offset = "0xC2862C", VA = "0xC2862C")]
	private void makeButtonInteractive(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001EB3")]
	[Address(RVA = "0xC28648", Offset = "0xC28648", VA = "0xC28648")]
	private bool DetermineWhetherCanAddFriend()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0xC28798", Offset = "0xC28798", VA = "0xC28798", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0xC28848", Offset = "0xC28848", VA = "0xC28848")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0xC289F8", Offset = "0xC289F8", VA = "0xC289F8")]
	private void checkRematch()
	{
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0xC28BEC", Offset = "0xC28BEC", VA = "0xC28BEC")]
	private void doRematch()
	{
	}

	[Token(Token = "0x6001EB8")]
	[Address(RVA = "0xC28D0C", Offset = "0xC28D0C", VA = "0xC28D0C")]
	public void onRematchSelected(int playerIdNum)
	{
	}

	[Token(Token = "0x6001EB9")]
	[Address(RVA = "0xC28EA4", Offset = "0xC28EA4", VA = "0xC28EA4")]
	private void iWantRematch()
	{
	}

	[Token(Token = "0x6001EBA")]
	[Address(RVA = "0xC26108", Offset = "0xC26108", VA = "0xC26108")]
	public void onBackToMainMenuClicked()
	{
	}

	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0xC28F0C", Offset = "0xC28F0C", VA = "0xC28F0C")]
	public void onAddFriendClicked(int playerIdNum)
	{
	}

	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0xC2905C", Offset = "0xC2905C", VA = "0xC2905C")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0xC290D4", Offset = "0xC290D4", VA = "0xC290D4")]
	public GameOverMultiplayerCoOpUI()
	{
	}
}
[Token(Token = "0x200051B")]
public class GameOverMultiplayerVersusUI : Area
{
	[Serializable]
	[Token(Token = "0x200051C")]
	public class General
	{
		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] sidePanels;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidePanelsDelay;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject normalTitle;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject victoryByDefaultTitle;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject lostByDefaultTitle;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject phase1;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject phase2;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LeaderBoardUI leaderBoard;

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xC2B364", Offset = "0xC2B364", VA = "0xC2B364")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200051D")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x200051E")]
		public class Stats
		{
			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro hitAccuracy;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject hitAccuracyNotApplicable;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeInt maxPointsPerShot;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro maxHitStreak;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LocalizeInt totalPoints;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextMeshPro timeInLead;

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xC2B37C", Offset = "0xC2B37C", VA = "0xC2B37C")]
			public Stats()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200051F")]
		public class Phase1
		{
			[Serializable]
			[Token(Token = "0x2000520")]
			public class Ranked
			{
				[Token(Token = "0x4001F31")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GameObject menu;

				[Token(Token = "0x4001F32")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TouchItem addFriendButton;

				[Token(Token = "0x4001F33")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TouchItem doneButton;

				[Token(Token = "0x6001EEC")]
				[Address(RVA = "0xC2B38C", Offset = "0xC2B38C", VA = "0xC2B38C")]
				public Ranked()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x2000521")]
			public class Friendly
			{
				[Token(Token = "0x4001F34")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GameObject menu;

				[Token(Token = "0x4001F35")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TouchItem rematchButton;

				[Token(Token = "0x4001F36")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TouchItem doneButton;

				[Token(Token = "0x6001EED")]
				[Address(RVA = "0xC2B394", Offset = "0xC2B394", VA = "0xC2B394")]
				public Friendly()
				{
				}
			}

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ranked ranked;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Friendly friendly;

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xC2B384", Offset = "0xC2B384", VA = "0xC2B384")]
			public Phase1()
			{
			}
		}

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject win;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Stats stats;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Phase1 phase1;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject phase2Menu;

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xC2B374", Offset = "0xC2B374", VA = "0xC2B374")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x2000522")]
	private struct PlayerFormats
	{
		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string hitAccuracy;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string maxHitStreak;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string timeInLead;
	}

	[Token(Token = "0x4001F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public General general;

	[Token(Token = "0x4001F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerObjects player1;

	[Token(Token = "0x4001F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerObjects player2;

	[Token(Token = "0x4001F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverMultiplayerVersusUI inst;

	[Token(Token = "0x4001F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MultiplayerScoreboardUI _scoreboard;

	[Token(Token = "0x4001F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PlayerFormats _player1Formats;

	[Token(Token = "0x4001F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerFormats _player2Formats;

	[Token(Token = "0x4001F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _imPlayer1;

	[Token(Token = "0x4001F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool _imPlayer2;

	[Token(Token = "0x4001F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlayerObjects _opponentObjects;

	[Token(Token = "0x4001F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _selectedByCode;

	[Token(Token = "0x1700053C")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xC29550", Offset = "0xC29550", VA = "0xC29550", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700053D")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xC29558", Offset = "0xC29558", VA = "0xC29558", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700053E")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xC29560", Offset = "0xC29560", VA = "0xC29560", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700053F")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xC29568", Offset = "0xC29568", VA = "0xC29568", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000540")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xC29570", Offset = "0xC29570", VA = "0xC29570", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000541")]
	private bool isFriendly
	{
		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xC29578", Offset = "0xC29578", VA = "0xC29578")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000542")]
	private bool isRanked
	{
		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xC295CC", Offset = "0xC295CC", VA = "0xC295CC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0xC29620", Offset = "0xC29620", VA = "0xC29620", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001ED5")]
	[Address(RVA = "0xC29760", Offset = "0xC29760", VA = "0xC29760")]
	private void getPlayerTextFormats(PlayerObjects.Stats objects, out PlayerFormats formats)
	{
	}

	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0xC29800", Offset = "0xC29800", VA = "0xC29800", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0xC29A84", Offset = "0xC29A84", VA = "0xC29A84")]
	private void initPlayerObjs(PlayerID playerId)
	{
	}

	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0xC2A27C", Offset = "0xC2A27C", VA = "0xC2A27C")]
	private bool DetermineWhetherCanAddFriend()
	{
		return default(bool);
	}

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0xC2A3CC", Offset = "0xC2A3CC", VA = "0xC2A3CC")]
	private void enableButton(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0xC2A434", Offset = "0xC2A434", VA = "0xC2A434")]
	private void makeButtonInteractive(TouchItem button, bool enable)
	{
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0xC2A450", Offset = "0xC2A450", VA = "0xC2A450")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0xC2A4BC", Offset = "0xC2A4BC", VA = "0xC2A4BC", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0xC2A5A0", Offset = "0xC2A5A0", VA = "0xC2A5A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0xC2A7F0", Offset = "0xC2A7F0", VA = "0xC2A7F0")]
	private void checkRematch()
	{
	}

	[Token(Token = "0x6001EDF")]
	[Address(RVA = "0xC2AD6C", Offset = "0xC2AD6C", VA = "0xC2AD6C")]
	private void doRematch()
	{
	}

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0xC2AEC0", Offset = "0xC2AEC0", VA = "0xC2AEC0")]
	public void onRematchSelected(int playerIdNum)
	{
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0xC2B058", Offset = "0xC2B058", VA = "0xC2B058")]
	private void iWantRematch()
	{
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0xC2AA18", Offset = "0xC2AA18", VA = "0xC2AA18")]
	public void onPhase1DoneClicked(int playerIdNum)
	{
	}

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0xC26060", Offset = "0xC26060", VA = "0xC26060")]
	public void onBackToMainMenuClicked()
	{
	}

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0xC2B0C0", Offset = "0xC2B0C0", VA = "0xC2B0C0")]
	public void onAddFriendClicked(int playerIdNum)
	{
	}

	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0xC2B210", Offset = "0xC2B210", VA = "0xC2B210")]
	public void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0xC2B2E4", Offset = "0xC2B2E4", VA = "0xC2B2E4")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0xC2B35C", Offset = "0xC2B35C", VA = "0xC2B35C")]
	public GameOverMultiplayerVersusUI()
	{
	}
}
[Token(Token = "0x2000523")]
public class GameOverSinglePlayerUI : MonoBehaviour
{
	[Token(Token = "0x4001F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderBoardUI leaderBoard;

	[Token(Token = "0x4001F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool _shown;

	[Token(Token = "0x4001F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x17000543")]
	public bool Shown
	{
		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xC2B39C", Offset = "0xC2B39C", VA = "0xC2B39C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001EEF")]
	[Address(RVA = "0xC26710", Offset = "0xC26710", VA = "0xC26710", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001EF0")]
	[Address(RVA = "0xC2B3A4", Offset = "0xC2B3A4", VA = "0xC2B3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001EF1")]
	[Address(RVA = "0xC27A4C", Offset = "0xC27A4C", VA = "0xC27A4C", Slot = "5")]
	public virtual void show()
	{
	}

	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0xC2B414", Offset = "0xC2B414", VA = "0xC2B414", Slot = "6")]
	public virtual void hide()
	{
	}

	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0xC2B3AC", Offset = "0xC2B3AC", VA = "0xC2B3AC")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0xC2B564", Offset = "0xC2B564", VA = "0xC2B564", Slot = "7")]
	public virtual void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0xC2B640", Offset = "0xC2B640", VA = "0xC2B640", Slot = "8")]
	public virtual void onBackToMainMenuClicked()
	{
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0xC2B650", Offset = "0xC2B650", VA = "0xC2B650", Slot = "9")]
	protected virtual void goBackToMainMenu(bool reportFollowUp = true)
	{
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0xC2B720", Offset = "0xC2B720", VA = "0xC2B720")]
	private void onBack()
	{
	}

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0xC2B724", Offset = "0xC2B724", VA = "0xC2B724")]
	private void onQuit()
	{
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0xC2B794", Offset = "0xC2B794", VA = "0xC2B794")]
	private void Update()
	{
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0xC27CE8", Offset = "0xC27CE8", VA = "0xC27CE8")]
	public GameOverSinglePlayerUI()
	{
	}
}
[Token(Token = "0x2000524")]
public class GameOverSoloMonthlyChallengeUI : GameOverSoloUI
{
	[Token(Token = "0x4001F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverSoloMonthlyChallengeUI inst;

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0xC2B868", Offset = "0xC2B868", VA = "0xC2B868", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0xC2B9AC", Offset = "0xC2B9AC", VA = "0xC2B9AC", Slot = "5")]
	public override void show()
	{
	}

	[Token(Token = "0x6001EFD")]
	[Address(RVA = "0xC2CF18", Offset = "0xC2CF18", VA = "0xC2CF18", Slot = "6")]
	public override void hide()
	{
	}

	[Token(Token = "0x6001EFE")]
	[Address(RVA = "0xC2CFD8", Offset = "0xC2CFD8", VA = "0xC2CFD8", Slot = "10")]
	protected override bool canPlayAgain()
	{
		return default(bool);
	}

	[Token(Token = "0x6001EFF")]
	[Address(RVA = "0xC2D088", Offset = "0xC2D088", VA = "0xC2D088")]
	private void onCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x6001F00")]
	[Address(RVA = "0xC2D118", Offset = "0xC2D118", VA = "0xC2D118")]
	public GameOverSoloMonthlyChallengeUI()
	{
	}
}
[Token(Token = "0x2000525")]
public class GameOverSoloNormalUI : GameOverSoloUI
{
	[Token(Token = "0x4001F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverSoloNormalUI inst;

	[Token(Token = "0x6001F01")]
	[Address(RVA = "0xC2D128", Offset = "0xC2D128", VA = "0xC2D128", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0xC2D188", Offset = "0xC2D188", VA = "0xC2D188")]
	public void OnBackToEditorClicked()
	{
	}

	[Token(Token = "0x6001F03")]
	[Address(RVA = "0xC2D224", Offset = "0xC2D224", VA = "0xC2D224")]
	public void OnEditorNextClicked()
	{
	}

	[Token(Token = "0x6001F04")]
	[Address(RVA = "0xC2D2F4", Offset = "0xC2D2F4", VA = "0xC2D2F4")]
	public void OnEditorVoteSelected()
	{
	}

	[Token(Token = "0x6001F05")]
	[Address(RVA = "0xC2D45C", Offset = "0xC2D45C", VA = "0xC2D45C")]
	public void OnEditorVoteUnselected()
	{
	}

	[Token(Token = "0x6001F06")]
	[Address(RVA = "0xC2D5C4", Offset = "0xC2D5C4", VA = "0xC2D5C4")]
	private void OnVoteForMCResponse(bool success, bool changed)
	{
	}

	[Token(Token = "0x6001F07")]
	[Address(RVA = "0xC2D6A0", Offset = "0xC2D6A0", VA = "0xC2D6A0")]
	public GameOverSoloNormalUI()
	{
	}
}
[Token(Token = "0x2000526")]
public abstract class GameOverSoloUI : GameOverSinglePlayerUI
{
	[Serializable]
	[Token(Token = "0x2000527")]
	public class General
	{
		[Serializable]
		[Token(Token = "0x2000528")]
		public class NormalPanelWithNext
		{
			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image setImageOutline;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image setImage;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro setName;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshPro setNumber;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject newIndicator;

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TextMeshPro noNextSetAvailable;

			[Token(Token = "0x6001F18")]
			[Address(RVA = "0xC2F2D0", Offset = "0xC2F2D0", VA = "0xC2F2D0")]
			public NormalPanelWithNext()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000529")]
		public class NormalPanelWithoutNext
		{
			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TouchItem againButton;

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0xC2F2D8", Offset = "0xC2F2D8", VA = "0xC2F2D8")]
			public NormalPanelWithoutNext()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052A")]
		public class EditorPanelPublic
		{
			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UIItemTransitions voteButton;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIItemTransitions nextButton;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizeFormatted setNumText;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public LocalizeFormatted authorNameText;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextMeshPro nextSetNumber;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizeFormatted nextAuthorName;

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0xC2F2E0", Offset = "0xC2F2E0", VA = "0xC2F2E0")]
			public EditorPanelPublic()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200052B")]
		public class EditorPanelPrivate
		{
			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0xC2F2E8", Offset = "0xC2F2E8", VA = "0xC2F2E8")]
			public EditorPanelPrivate()
			{
			}
		}

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitions[] statsPanels;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIItemTransitions[] leaderboardPanels;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sidePanelsDelay;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NormalPanelWithNext normalPanelWithNext;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NormalPanelWithoutNext normalPanelWithoutNext;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject celebrationsPanel;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EditorPanelPublic editorPanelPublic;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EditorPanelPrivate editorPanelPrivate;

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xC2F2C0", Offset = "0xC2F2C0", VA = "0xC2F2C0")]
		public General()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200052C")]
	public struct Score
	{
		[Serializable]
		[Token(Token = "0x200052D")]
		public struct Incomplete
		{
			[Serializable]
			[Token(Token = "0x200052E")]
			public struct OldBest
			{
				[Token(Token = "0x4001F6C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;

				[Token(Token = "0x4001F6D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public TextMeshPro progress;

				[Token(Token = "0x4001F6E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public LocalizeDuration time;
			}

			[Serializable]
			[Token(Token = "0x200052F")]
			public struct NewBest
			{
				[Token(Token = "0x4001F6F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;
			}

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizeDuration time;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro progress;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GraphBar progresBar;

			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OldBest oldBest;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NewBest newBest;
		}

		[Serializable]
		[Token(Token = "0x2000530")]
		public struct Complete
		{
			[Serializable]
			[Token(Token = "0x2000531")]
			public struct OldBest
			{
				[Token(Token = "0x4001F74")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;

				[Token(Token = "0x4001F75")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public LocalizeDuration time;
			}

			[Serializable]
			[Token(Token = "0x2000532")]
			public struct NewBest
			{
				[Token(Token = "0x4001F76")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public GameObject root;
			}

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public LocalizeDuration time;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OldBest oldBest;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NewBest newBest;
		}

		[Serializable]
		[Token(Token = "0x2000533")]
		public struct Stars
		{
			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject star1;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UIItemTransitions star1Transitions;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject star2;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UIItemTransitions star2Transitions;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LocalizeDuration star2RequiredTime;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject star3;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public UIItemTransitions star3Transitions;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public LocalizeDuration star3RequiredTime;
		}

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Incomplete incomplete;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Complete complete;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Stars stars;
	}

	[Serializable]
	[Token(Token = "0x2000534")]
	public class Stats
	{
		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshPro hitAccuracy;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject hitAccuracyNotApplicable;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizeInt maxPointsPerShot;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshPro maxHitStreak;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshPro numClutchSaves;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public LocalizeInt totalPoints;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshPro numBoostsTaken;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizeInt totalDamage;

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xC2F2F0", Offset = "0xC2F2F0", VA = "0xC2F2F0")]
		public Stats()
		{
		}
	}

	[Token(Token = "0x2000535")]
	private enum NextAction
	{
		[Token(Token = "0x4001F89")]
		None,
		[Token(Token = "0x4001F8A")]
		PlayNextSet,
		[Token(Token = "0x4001F8B")]
		StageCompleteCelebration,
		[Token(Token = "0x4001F8C")]
		AllSetsCompleteCelebration
	}

	[Token(Token = "0x4001F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public General general;

	[Token(Token = "0x4001F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Score score;

	[Token(Token = "0x4001F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Stats stats;

	[Token(Token = "0x4001F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string _hitAccuracyFormat;

	[Token(Token = "0x4001F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string _maxHitStreakFormat;

	[Token(Token = "0x4001F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string _numClutchSavesFormat;

	[Token(Token = "0x4001F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string _numBoostsTakenFormat;

	[Token(Token = "0x4001F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private NextAction _nextAction;

	[Token(Token = "0x4001F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string _nextSetId;

	[Token(Token = "0x4001F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected CustomSet _curCustomSetMeta;

	[Token(Token = "0x4001F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected CustomSet _nextCustomSetMeta;

	[Token(Token = "0x17000544")]
	private SinglePlayerArena arena
	{
		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xC2D6A8", Offset = "0xC2D6A8", VA = "0xC2D6A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001F09")]
	[Address(RVA = "0xC2B8C8", Offset = "0xC2B8C8", VA = "0xC2B8C8", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F0A")]
	[Address(RVA = "0xC2BA6C", Offset = "0xC2BA6C", VA = "0xC2BA6C", Slot = "5")]
	public override void show()
	{
	}

	[Token(Token = "0x6001F0B")]
	[Address(RVA = "0xC2DE08", Offset = "0xC2DE08", VA = "0xC2DE08", Slot = "10")]
	protected virtual bool canPlayAgain()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F0C")]
	[Address(RVA = "0xC2D08C", Offset = "0xC2D08C", VA = "0xC2D08C")]
	protected void updateAgainButton()
	{
	}

	[Token(Token = "0x6001F0D")]
	[Address(RVA = "0xC2DA2C", Offset = "0xC2DA2C", VA = "0xC2DA2C")]
	private void showNoNextSetAvailable()
	{
	}

	[Token(Token = "0x6001F0E")]
	[Address(RVA = "0xC2DB5C", Offset = "0xC2DB5C", VA = "0xC2DB5C")]
	private void showNextSet()
	{
	}

	[Token(Token = "0x6001F0F")]
	[Address(RVA = "0xC2DE10", Offset = "0xC2DE10", VA = "0xC2DE10")]
	private void showSidePanels()
	{
	}

	[Token(Token = "0x6001F10")]
	[Address(RVA = "0xC2DEDC", Offset = "0xC2DEDC", VA = "0xC2DEDC")]
	public void onNextClicked()
	{
	}

	[Token(Token = "0x6001F11")]
	[Address(RVA = "0xC2DF90", Offset = "0xC2DF90", VA = "0xC2DF90")]
	public void onCelebrationDoneClicked()
	{
	}

	[Token(Token = "0x6001F12")]
	[Address(RVA = "0xC2D744", Offset = "0xC2D744", VA = "0xC2D744")]
	private NextAction determineNextAction(out string nextSetId)
	{
		return default(NextAction);
	}

	[Token(Token = "0x6001F13")]
	[Address(RVA = "0xC2E03C", Offset = "0xC2E03C", VA = "0xC2E03C", Slot = "7")]
	public override void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001F14")]
	[Address(RVA = "0xC2D120", Offset = "0xC2D120", VA = "0xC2D120")]
	protected GameOverSoloUI()
	{
	}
}
[Token(Token = "0x2000536")]
public class GameOverZenUI : GameOverSinglePlayerUI
{
	[Token(Token = "0x4001F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject mainMenuButton;

	[Token(Token = "0x4001F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameOverZenUI inst;

	[Token(Token = "0x6001F1D")]
	[Address(RVA = "0xC2F2F8", Offset = "0xC2F2F8", VA = "0xC2F2F8")]
	private new void Awake()
	{
	}

	[Token(Token = "0x6001F1E")]
	[Address(RVA = "0xC2F35C", Offset = "0xC2F35C", VA = "0xC2F35C", Slot = "7")]
	public override void onPlayAgainClicked()
	{
	}

	[Token(Token = "0x6001F1F")]
	[Address(RVA = "0xC2F3D0", Offset = "0xC2F3D0", VA = "0xC2F3D0", Slot = "9")]
	protected override void goBackToMainMenu(bool reportFollowUp = true)
	{
	}

	[Token(Token = "0x6001F20")]
	[Address(RVA = "0xC2F448", Offset = "0xC2F448", VA = "0xC2F448")]
	public GameOverZenUI()
	{
	}
}
[Token(Token = "0x2000537")]
public static class GameUIHideHelper
{
	[Token(Token = "0x6001F21")]
	[Address(RVA = "0xC2F450", Offset = "0xC2F450", VA = "0xC2F450")]
	public static void HideGameOverUIs()
	{
	}
}
[Token(Token = "0x2000538")]
[RequireComponent(typeof(Image))]
public class GraphBar : MonoBehaviour
{
	[Token(Token = "0x4001F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material _material;

	[Token(Token = "0x4001F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _nameID;

	[Token(Token = "0x4001F91")]
	private const string propertyName = "_Progress";

	[Token(Token = "0x17000545")]
	public float percentage
	{
		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xC2F6F8", Offset = "0xC2F6F8", VA = "0xC2F6F8")]
		set
		{
		}
	}

	[Token(Token = "0x6001F22")]
	[Address(RVA = "0xC2F5F0", Offset = "0xC2F5F0", VA = "0xC2F5F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F24")]
	[Address(RVA = "0xC2F794", Offset = "0xC2F794", VA = "0xC2F794")]
	public GraphBar()
	{
	}
}
[Token(Token = "0x2000539")]
public class HighScoreTable : MonoBehaviour
{
	[Token(Token = "0x200053A")]
	public class ScoreEntry
	{
		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _name;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int _score;

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xC2F930", Offset = "0xC2F930", VA = "0xC2F930")]
		public ScoreEntry()
		{
		}
	}

	[Token(Token = "0x4001F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HighScoreTable inst;

	[Token(Token = "0x4001F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScoreEntry[] _scoreTable;

	[Token(Token = "0x4001F94")]
	private const int _numScoreEntries = 5;

	[Token(Token = "0x4001F95")]
	private const string _userPrefTableNamePrefix = "user_name_";

	[Token(Token = "0x4001F96")]
	private const string _userPrefTableScorePrefix = "user_score_";

	[Token(Token = "0x4001F97")]
	private const int _version = 113;

	[Token(Token = "0x4001F98")]
	private const string _versionKey = "version";

	[Token(Token = "0x6001F25")]
	[Address(RVA = "0xC2F79C", Offset = "0xC2F79C", VA = "0xC2F79C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F26")]
	[Address(RVA = "0xC2F938", Offset = "0xC2F938", VA = "0xC2F938")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F27")]
	[Address(RVA = "0xC2FB58", Offset = "0xC2FB58", VA = "0xC2FB58")]
	private void CheckVersion()
	{
	}

	[Token(Token = "0x6001F28")]
	[Address(RVA = "0xC2FBB8", Offset = "0xC2FBB8", VA = "0xC2FBB8")]
	public void ClearScores()
	{
	}

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0xC2F93C", Offset = "0xC2F93C", VA = "0xC2F93C")]
	public void Load()
	{
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0xC2FC70", Offset = "0xC2FC70", VA = "0xC2FC70")]
	public void Save()
	{
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0xC2FDB0", Offset = "0xC2FDB0", VA = "0xC2FDB0")]
	public bool IsHighScore(int score)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0xC2FDF4", Offset = "0xC2FDF4", VA = "0xC2FDF4")]
	public int AddNewHighScoreAndGetRank(int score, string name = "- - -")
	{
		return default(int);
	}

	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0xC2FFDC", Offset = "0xC2FFDC", VA = "0xC2FFDC")]
	public void UpdateScoreName(int rank, string newName)
	{
	}

	[Token(Token = "0x6001F2E")]
	[Address(RVA = "0xC300A0", Offset = "0xC300A0", VA = "0xC300A0")]
	public ScoreEntry[] GetScoreTable()
	{
		return null;
	}

	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0xC300A8", Offset = "0xC300A8", VA = "0xC300A8")]
	public HighScoreTable()
	{
	}
}
[Token(Token = "0x200053B")]
public class HowToPlayUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200053C")]
	public class Page
	{
		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString title;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite image;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color imageColor;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LocalizedString[] texts;

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0xC31D10", Offset = "0xC31D10", VA = "0xC31D10")]
		public Page()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200053D")]
	public class Topic
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedString name;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Page[] pages;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0xC31D18", Offset = "0xC31D18", VA = "0xC31D18")]
		public Topic()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200053E")]
	public class Elements
	{
		[Serializable]
		[Token(Token = "0x200053F")]
		public class PageElements
		{
			[Serializable]
			[Token(Token = "0x2000540")]
			public class Paragraphs
			{
				[Token(Token = "0x4001FBB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public int maxNumParagraphs;

				[Token(Token = "0x4001FBC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float indent;

				[Token(Token = "0x4001FBD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[Tooltip("Row height when measuring extent of text box")]
				public float measuredRowHeight;

				[Token(Token = "0x4001FBE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				[Tooltip("Row height when positioning rect transform")]
				public float rowHeight;

				[Token(Token = "0x4001FBF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float padRowsBetweenParagraphs;

				[Token(Token = "0x6001F4F")]
				[Address(RVA = "0xC31D38", Offset = "0xC31D38", VA = "0xC31D38")]
				public Paragraphs()
				{
				}
			}

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Localize title;

			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image icon;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshPro text;

			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Paragraphs paragraphs;

			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0xC31D30", Offset = "0xC31D30", VA = "0xC31D30")]
			public PageElements()
			{
			}
		}

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PageElements page;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PageButton page1Button;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int maxNumPages;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TouchItem startOrNextButton;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString startButtonText;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString nextButtonText;

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xC31D20", Offset = "0xC31D20", VA = "0xC31D20")]
		public Elements()
		{
		}
	}

	[Token(Token = "0x2000541")]
	public delegate void OnDone();

	[Token(Token = "0x2000542")]
	private enum Mode
	{
		[Token(Token = "0x4001FC1")]
		Undefine,
		[Token(Token = "0x4001FC2")]
		Welcome,
		[Token(Token = "0x4001FC3")]
		Topic
	}

	[Token(Token = "0x4001F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x4001F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HowToPlayUI inst;

	[Token(Token = "0x4001F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Page welcomePage;

	[Token(Token = "0x4001F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Topic[] topics;

	[Token(Token = "0x4001F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Elements elements;

	[Token(Token = "0x4001FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LocalizeEx _startOrNextButtonLoc;

	[Token(Token = "0x4001FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIItemTransitions _startOrNextButtonTransitions;

	[Token(Token = "0x4001FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DynamicListMenu topicsList;

	[Token(Token = "0x4001FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _shown;

	[Token(Token = "0x4001FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool _openedViaOptions;

	[Token(Token = "0x4001FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OnDone _onDone;

	[Token(Token = "0x4001FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<TextMeshPro> _textBoxes;

	[Token(Token = "0x4001FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PageButton> _pageButtons;

	[Token(Token = "0x4001FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Mode _mode;

	[Token(Token = "0x4001FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _curTopic;

	[Token(Token = "0x4001FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _curPage;

	[Token(Token = "0x17000546")]
	public bool shown
	{
		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xC300B0", Offset = "0xC300B0", VA = "0xC300B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001F32")]
	[Address(RVA = "0xC300B8", Offset = "0xC300B8", VA = "0xC300B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F33")]
	[Address(RVA = "0xC308D4", Offset = "0xC308D4", VA = "0xC308D4")]
	private void initTopicsList()
	{
	}

	[Token(Token = "0x6001F34")]
	[Address(RVA = "0xC302AC", Offset = "0xC302AC", VA = "0xC302AC")]
	private void createTextBoxes()
	{
	}

	[Token(Token = "0x6001F35")]
	[Address(RVA = "0xC3055C", Offset = "0xC3055C", VA = "0xC3055C")]
	private void createPageButtons()
	{
	}

	[Token(Token = "0x6001F36")]
	[Address(RVA = "0xC30A50", Offset = "0xC30A50", VA = "0xC30A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F37")]
	[Address(RVA = "0xC30AD4", Offset = "0xC30AD4", VA = "0xC30AD4")]
	public void show(bool openedViaOptions, OnDone onDone)
	{
	}

	[Token(Token = "0x6001F38")]
	[Address(RVA = "0xC30F6C", Offset = "0xC30F6C", VA = "0xC30F6C")]
	private void resetTopicsList()
	{
	}

	[Token(Token = "0x6001F39")]
	[Address(RVA = "0xC30FC4", Offset = "0xC30FC4", VA = "0xC30FC4")]
	private void showWelcome()
	{
	}

	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0xC31220", Offset = "0xC31220", VA = "0xC31220")]
	private void chooseTopic(int topic)
	{
	}

	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0xC31240", Offset = "0xC31240", VA = "0xC31240")]
	private void showTopic(int topic)
	{
	}

	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0xC31250", Offset = "0xC31250", VA = "0xC31250")]
	private void showTopicPage(int page)
	{
	}

	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0xC31334", Offset = "0xC31334", VA = "0xC31334")]
	private void selectCurrentPageButton()
	{
	}

	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0xC31438", Offset = "0xC31438", VA = "0xC31438")]
	private bool isLastPageOfTopic()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F3F")]
	[Address(RVA = "0xC31400", Offset = "0xC31400", VA = "0xC31400")]
	private bool isLastPage()
	{
		return default(bool);
	}

	[Token(Token = "0x6001F40")]
	[Address(RVA = "0xC31090", Offset = "0xC31090", VA = "0xC31090")]
	private void showPage(Page page)
	{
	}

	[Token(Token = "0x6001F41")]
	[Address(RVA = "0xC3148C", Offset = "0xC3148C", VA = "0xC3148C")]
	private void showTexts(LocalizedString[] texts)
	{
	}

	[Token(Token = "0x6001F42")]
	[Address(RVA = "0xC31134", Offset = "0xC31134", VA = "0xC31134")]
	private void showPageButtons(int numPages)
	{
	}

	[Token(Token = "0x6001F43")]
	[Address(RVA = "0xC31970", Offset = "0xC31970", VA = "0xC31970")]
	public void hide(bool byForce = false)
	{
	}

	[Token(Token = "0x6001F44")]
	[Address(RVA = "0xC30A6C", Offset = "0xC30A6C", VA = "0xC30A6C")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6001F45")]
	[Address(RVA = "0xC31B6C", Offset = "0xC31B6C", VA = "0xC31B6C")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6001F46")]
	[Address(RVA = "0xC31B74", Offset = "0xC31B74", VA = "0xC31B74")]
	private void onBack()
	{
	}

	[Token(Token = "0x6001F47")]
	[Address(RVA = "0xC31B7C", Offset = "0xC31B7C", VA = "0xC31B7C")]
	private void onTopicsSelected(int topic)
	{
	}

	[Token(Token = "0x6001F48")]
	[Address(RVA = "0xC31B8C", Offset = "0xC31B8C", VA = "0xC31B8C")]
	public void onClickNext()
	{
	}

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0xC31CB4", Offset = "0xC31CB4", VA = "0xC31CB4")]
	public void onPageSelected(TextMeshPro text)
	{
	}

	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0xC31D08", Offset = "0xC31D08", VA = "0xC31D08")]
	public HowToPlayUI()
	{
	}
}
[Token(Token = "0x2000544")]
public abstract class KnobBase : MonoBehaviour, Knob.IControlee
{
	[Token(Token = "0x2000545")]
	protected struct FormattedText
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool localized;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string textOrTerm;

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xC32590", Offset = "0xC32590", VA = "0xC32590")]
		public static FormattedText NewFixed(string text)
		{
			return default(FormattedText);
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xC325BC", Offset = "0xC325BC", VA = "0xC325BC")]
		public static FormattedText NewLocalized(LocalizedString locString)
		{
			return default(FormattedText);
		}
	}

	[Token(Token = "0x4001FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Knob knob;

	[Token(Token = "0x4001FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro valueText;

	[Token(Token = "0x4001FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Localize valueLocalizedText;

	[Token(Token = "0x4001FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer amplitudeRenderer;

	[Token(Token = "0x4001FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rotationTarget;

	[Token(Token = "0x4001FCB")]
	private const string amplitudeProperty = "_Amplitude";

	[Token(Token = "0x4001FCC")]
	private const string litBrightnessProperty = "_LitBrightness";

	[Token(Token = "0x4001FCD")]
	private const string colorOffProperty = "_ColorOff";

	[Token(Token = "0x4001FCE")]
	private const string colorOnProperty = "_ColorOn";

	[Token(Token = "0x4001FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int _amplitudePropId;

	[Token(Token = "0x4001FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _litBrightnessPropId;

	[Token(Token = "0x4001FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _amplitude;

	[Token(Token = "0x4001FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float _snappedAmplitude;

	[Token(Token = "0x4001FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _colorOff;

	[Token(Token = "0x4001FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _colorOn;

	[Token(Token = "0x17000547")]
	protected Material amplitudeMaterial
	{
		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xC31E8C", Offset = "0xC31E8C", VA = "0xC31E8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001F57")]
	[Address(RVA = "0xC31EA8", Offset = "0xC31EA8", VA = "0xC31EA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F58")]
	[Address(RVA = "0xC31FA4", Offset = "0xC31FA4", VA = "0xC31FA4", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001F59")]
	public abstract float getAmplitude();

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0xC3206C", Offset = "0xC3206C", VA = "0xC3206C", Slot = "8")]
	public virtual void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0xC32218", Offset = "0xC32218", VA = "0xC32218")]
	public void UpdateAmplitudeText()
	{
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0xC323A0", Offset = "0xC323A0", VA = "0xC323A0", Slot = "9")]
	protected virtual bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F5D")]
	protected abstract FormattedText formatText(float snappedAmplitude);

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0xC323A8", Offset = "0xC323A8", VA = "0xC323A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0xC32588", Offset = "0xC32588", VA = "0xC32588")]
	protected KnobBase()
	{
	}
}
[Token(Token = "0x2000546")]
public class LeaderBoardEntry : MonoBehaviour
{
	[Token(Token = "0x4001FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro rankText;

	[Token(Token = "0x4001FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro nameText;

	[Token(Token = "0x4001FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro name2Text;

	[Token(Token = "0x4001FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro scoreText;

	[Token(Token = "0x4001FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image backgroundImage;

	[Token(Token = "0x6001F62")]
	[Address(RVA = "0xC325E8", Offset = "0xC325E8", VA = "0xC325E8")]
	public void reset(Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0xC32758", Offset = "0xC32758", VA = "0xC32758")]
	public void set(int rank, string name, string name2, int score, StringBuilder scoreAltText, Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0xC32B34", Offset = "0xC32B34", VA = "0xC32B34", Slot = "4")]
	protected virtual void setColors(Color textColor, Color backgroundColor)
	{
	}

	[Token(Token = "0x6001F65")]
	[Address(RVA = "0xC32CA4", Offset = "0xC32CA4", VA = "0xC32CA4")]
	public LeaderBoardEntry()
	{
	}
}
[Token(Token = "0x2000547")]
public class LeaderBoardList : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000548")]
	public struct Colors
	{
		[Serializable]
		[Token(Token = "0x2000549")]
		public struct EntryColors
		{
			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Color text;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color background;
		}

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EntryColors even;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EntryColors odd;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EntryColors me;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EntryColors meNewHighscore;

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xC32E24", Offset = "0xC32E24", VA = "0xC32E24")]
		public EntryColors getColors(int index, bool me, bool meNewHighscore)
		{
			return default(EntryColors);
		}
	}

	[Token(Token = "0x4001FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderBoardEntry[] entries;

	[Token(Token = "0x4001FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Colors colors;

	[Token(Token = "0x17000548")]
	public LeaderBoardEntry[] SortedEntries
	{
		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xC32CAC", Offset = "0xC32CAC", VA = "0xC32CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000549")]
	public int numEntries
	{
		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xC32CF4", Offset = "0xC32CF4", VA = "0xC32CF4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001F68")]
	[Address(RVA = "0xC32D10", Offset = "0xC32D10", VA = "0xC32D10")]
	public void reset()
	{
	}

	[Token(Token = "0x6001F69")]
	[Address(RVA = "0xC32E68", Offset = "0xC32E68", VA = "0xC32E68")]
	public void setEntry(int index, int rank, string name, int score, StringBuilder scoreAltText, bool me)
	{
	}

	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0xC32E94", Offset = "0xC32E94", VA = "0xC32E94")]
	public void setEntry(int index, int rank, string name, string name2, int score, StringBuilder scoreAltText, bool me)
	{
	}

	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0xC32FF0", Offset = "0xC32FF0", VA = "0xC32FF0")]
	public LeaderBoardList()
	{
	}
}
[Token(Token = "0x200054A")]
public abstract class LeaderBoardUI : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	[CompilerGenerated]
	private sealed class <monitorCo>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LeaderBoardUI <>4__this;

		[Token(Token = "0x1700054A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0xC333C0", Offset = "0xC333C0", VA = "0xC333C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700054B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0xC33408", Offset = "0xC33408", VA = "0xC33408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xC33260", Offset = "0xC33260", VA = "0xC33260")]
		[DebuggerHidden]
		public <monitorCo>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xC33290", Offset = "0xC33290", VA = "0xC33290", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xC33294", Offset = "0xC33294", VA = "0xC33294", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xC333C8", Offset = "0xC333C8", VA = "0xC333C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeaderBoardList list;

	[Token(Token = "0x4001FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected LeaderboardManager.LeaderboardContainer _leaderboard;

	[Token(Token = "0x4001FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _coroutineTag;

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0xC32FF8", Offset = "0xC32FF8", VA = "0xC32FF8")]
	public void show()
	{
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0xC331F0", Offset = "0xC331F0", VA = "0xC331F0")]
	public void hide()
	{
	}

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0xC33164", Offset = "0xC33164", VA = "0xC33164")]
	private void reset()
	{
	}

	[Token(Token = "0x6001F70")]
	[Address(RVA = "0xC3317C", Offset = "0xC3317C", VA = "0xC3317C")]
	[IteratorStateMachine(typeof(<monitorCo>d__6))]
	private IEnumerator<float> monitorCo()
	{
		return null;
	}

	[Token(Token = "0x6001F71")]
	protected abstract IEnumerator<float> onDataAvailable();

	[Token(Token = "0x6001F72")]
	[Address(RVA = "0xC33288", Offset = "0xC33288", VA = "0xC33288")]
	protected LeaderBoardUI()
	{
	}
}
[Token(Token = "0x200054C")]
public class LevelEditorMenuItem : MonoBehaviour, ISingleton
{
	[Token(Token = "0x4001FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIItemTransitions newIndicator;

	[Token(Token = "0x4001FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize title;

	[Token(Token = "0x4001FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorMenuItem inst;

	[Token(Token = "0x4001FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _origTitleTerm;

	[Token(Token = "0x6001F79")]
	[Address(RVA = "0xC33464", Offset = "0xC33464", VA = "0xC33464", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6001F7A")]
	[Address(RVA = "0xC3352C", Offset = "0xC3352C", VA = "0xC3352C")]
	private void OnOfflineStateChanged(bool isOffline)
	{
	}

	[Token(Token = "0x6001F7B")]
	[Address(RVA = "0xC33530", Offset = "0xC33530", VA = "0xC33530")]
	public void onShown()
	{
	}

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0xC33768", Offset = "0xC33768", VA = "0xC33768")]
	public LevelEditorMenuItem()
	{
	}
}
[Token(Token = "0x200054D")]
public class LostConnectionUI : Area
{
	[Token(Token = "0x200054E")]
	[CompilerGenerated]
	private sealed class <OfflineChangeCo>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool offline;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LostConnectionUI <>4__this;

		[Token(Token = "0x17000551")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0xC33CFC", Offset = "0xC33CFC", VA = "0xC33CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000552")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0xC33D44", Offset = "0xC33D44", VA = "0xC33D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xC33A84", Offset = "0xC33A84", VA = "0xC33A84")]
		[DebuggerHidden]
		public <OfflineChangeCo>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xC33B90", Offset = "0xC33B90", VA = "0xC33B90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xC33B94", Offset = "0xC33B94", VA = "0xC33B94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xC33D04", Offset = "0xC33D04", VA = "0xC33D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LostConnectionUI inst;

	[Token(Token = "0x4001FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _dontShow;

	[Token(Token = "0x4001FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CoroutineHandle _offlineChangeCo;

	[Token(Token = "0x1700054C")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xC33770", Offset = "0xC33770", VA = "0xC33770", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700054D")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xC33778", Offset = "0xC33778", VA = "0xC33778", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700054E")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xC33780", Offset = "0xC33780", VA = "0xC33780", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700054F")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xC33788", Offset = "0xC33788", VA = "0xC33788", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000550")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xC33790", Offset = "0xC33790", VA = "0xC33790", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001F82")]
	[Address(RVA = "0xC33798", Offset = "0xC33798", VA = "0xC33798", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6001F83")]
	[Address(RVA = "0xC3379C", Offset = "0xC3379C", VA = "0xC3379C", Slot = "18")]
	protected override void onMenuButton()
	{
	}

	[Token(Token = "0x6001F84")]
	[Address(RVA = "0xC337A0", Offset = "0xC337A0", VA = "0xC337A0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001F85")]
	[Address(RVA = "0xC33804", Offset = "0xC33804", VA = "0xC33804", Slot = "10")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001F86")]
	[Address(RVA = "0xC33964", Offset = "0xC33964", VA = "0xC33964")]
	private void OnGameStart()
	{
	}

	[Token(Token = "0x6001F87")]
	[Address(RVA = "0xC33970", Offset = "0xC33970", VA = "0xC33970")]
	private void OnGameEnd(GameEndReason reason)
	{
	}

	[Token(Token = "0x6001F88")]
	[Address(RVA = "0xC33978", Offset = "0xC33978", VA = "0xC33978")]
	private void OnOfflineStateChanged(bool offline)
	{
	}

	[Token(Token = "0x6001F89")]
	[Address(RVA = "0xC339FC", Offset = "0xC339FC", VA = "0xC339FC")]
	[IteratorStateMachine(typeof(<OfflineChangeCo>d__20))]
	private IEnumerator<float> OfflineChangeCo(bool offline)
	{
		return null;
	}

	[Token(Token = "0x6001F8A")]
	[Address(RVA = "0xC33AAC", Offset = "0xC33AAC", VA = "0xC33AAC", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0xC33B24", Offset = "0xC33B24", VA = "0xC33B24", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0xC33B88", Offset = "0xC33B88", VA = "0xC33B88")]
	public LostConnectionUI()
	{
	}
}
[Token(Token = "0x200054F")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x2000550")]
	public enum ItemType
	{
		[Token(Token = "0x4002015")]
		None,
		[Token(Token = "0x4002016")]
		SoloMenu,
		[Token(Token = "0x4002017")]
		SoloCampaign,
		[Token(Token = "0x4002018")]
		MultiplayerVersus,
		[Token(Token = "0x4002019")]
		Quit
	}

	[Token(Token = "0x2000552")]
	[CompilerGenerated]
	private sealed class <JoinFriendInviteMultiplayerCo>d__59 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x17000559")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0xC38EA0", Offset = "0xC38EA0", VA = "0xC38EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0xC38EE8", Offset = "0xC38EE8", VA = "0xC38EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0xC36B48", Offset = "0xC36B48", VA = "0xC36B48")]
		[DebuggerHidden]
		public <JoinFriendInviteMultiplayerCo>d__59(int <>1__state)
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0xC38E40", Offset = "0xC38E40", VA = "0xC38E40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0xC38E44", Offset = "0xC38E44", VA = "0xC38E44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0xC38EA8", Offset = "0xC38EA8", VA = "0xC38EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000553")]
	[CompilerGenerated]
	private sealed class <InviteFriendMultiplayerCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x1700055B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0xC39104", Offset = "0xC39104", VA = "0xC39104", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0xC3914C", Offset = "0xC3914C", VA = "0xC3914C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0xC36BE4", Offset = "0xC36BE4", VA = "0xC36BE4")]
		[DebuggerHidden]
		public <InviteFriendMultiplayerCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0xC38F44", Offset = "0xC38F44", VA = "0xC38F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xC38F48", Offset = "0xC38F48", VA = "0xC38F48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xC3910C", Offset = "0xC3910C", VA = "0xC3910C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000554")]
	[CompilerGenerated]
	private sealed class <FindRankedMultiplayerCo>d__62 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CoModes coModes;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MainMenu <>4__this;

		[Token(Token = "0x1700055D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0xC393D8", Offset = "0xC393D8", VA = "0xC393D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0xC39420", Offset = "0xC39420", VA = "0xC39420", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xC36D84", Offset = "0xC36D84", VA = "0xC36D84")]
		[DebuggerHidden]
		public <FindRankedMultiplayerCo>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xC391A8", Offset = "0xC391A8", VA = "0xC391A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xC391AC", Offset = "0xC391AC", VA = "0xC391AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xC393E0", Offset = "0xC393E0", VA = "0xC393E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000555")]
	[CompilerGenerated]
	private sealed class <onAboutToTransitionToArena>d__78 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x1700055F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0xC394E4", Offset = "0xC394E4", VA = "0xC394E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000560")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0xC3952C", Offset = "0xC3952C", VA = "0xC3952C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xC37664", Offset = "0xC37664", VA = "0xC37664")]
		[DebuggerHidden]
		public <onAboutToTransitionToArena>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0xC3947C", Offset = "0xC3947C", VA = "0xC3947C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0xC39480", Offset = "0xC39480", VA = "0xC39480", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xC394EC", Offset = "0xC394EC", VA = "0xC394EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000556")]
	[CompilerGenerated]
	private sealed class <QuitGameCo>d__92 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenu <>4__this;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <timer>5__2;

		[Token(Token = "0x17000561")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xC396EC", Offset = "0xC396EC", VA = "0xC396EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000562")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0xC39734", Offset = "0xC39734", VA = "0xC39734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xC37C28", Offset = "0xC37C28", VA = "0xC37C28")]
		[DebuggerHidden]
		public <QuitGameCo>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0xC39588", Offset = "0xC39588", VA = "0xC39588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xC3958C", Offset = "0xC3958C", VA = "0xC3958C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xC396F4", Offset = "0xC396F4", VA = "0xC396F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MainMenu inst;

	[Token(Token = "0x4001FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _menuActive;

	[Token(Token = "0x4001FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool _activatedAtLeastOnce;

	[Token(Token = "0x4001FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objectsToActivate;

	[Token(Token = "0x4001FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _playerPosition;

	[Token(Token = "0x4001FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _multiplayerStatusUI;

	[Token(Token = "0x4001FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject _menuElementsRoot;

	[Token(Token = "0x4001FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] _menuElements;

	[Token(Token = "0x4001FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitions[] _newElements;

	[Token(Token = "0x4001FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject _warningSign;

	[Token(Token = "0x4001FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MainMenuItem arcadeMenuItem;

	[Token(Token = "0x4002000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MainMenuItem soloMenuItem;

	[Token(Token = "0x4002001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MainMenuItem multiplayerMenuItem;

	[Token(Token = "0x4002002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MainMenuItem quitMenuItem;

	[Token(Token = "0x4002003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UIItemTransitions startHere;

	[Token(Token = "0x4002004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UIItemTransitions soloNewIndicator;

	[Token(Token = "0x4002005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public UIItemTransitions multiplayerNewIndicator;

	[Token(Token = "0x4002006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GraphicRaycaster[] _allMenuRaycasters;

	[Token(Token = "0x4002007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MainMenuItem[] _allMainMenuItems;

	[Token(Token = "0x4002008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TouchItem[] _touchItems;

	[Token(Token = "0x4002009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _activateTime;

	[Token(Token = "0x400200A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _lastMenuActionTime;

	[Token(Token = "0x400200B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _spaceSoundsAreFadingOut;

	[Token(Token = "0x400200C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _mainMenuVisible;

	[NonSerialized]
	[Token(Token = "0x400200D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool _aboutToTransitionToArena;

	[Token(Token = "0x400200E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MainMenuItem _selectedMainMenuItem;

	[Token(Token = "0x400200F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MainMenuItem _multiplayerMenuItem;

	[Token(Token = "0x4002010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TouchItem _multiplayerMenuTouchItem;

	[Token(Token = "0x4002011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ItemType _startAt;

	[Token(Token = "0x4002012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private CoroutineHandle _multiplayerCoroutine;

	[Token(Token = "0x4002013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool _debugStartedOnce;

	[Token(Token = "0x17000553")]
	public bool isActive
	{
		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xC33DA0", Offset = "0xC33DA0", VA = "0xC33DA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000554")]
	public float activateTime
	{
		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xC33DA8", Offset = "0xC33DA8", VA = "0xC33DA8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000555")]
	private bool transitioningToArena
	{
		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xC33DB0", Offset = "0xC33DB0", VA = "0xC33DB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000556")]
	private bool mainMenuVisible
	{
		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xC33DB8", Offset = "0xC33DB8", VA = "0xC33DB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000557")]
	private MainMenuItem selectedMainMenuItem
	{
		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xC33DD8", Offset = "0xC33DD8", VA = "0xC33DD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000558")]
	public ItemType startAt
	{
		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xC33F5C", Offset = "0xC33F5C", VA = "0xC33F5C")]
		get
		{
			return default(ItemType);
		}
		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xC33F54", Offset = "0xC33F54", VA = "0xC33F54")]
		set
		{
		}
	}

	[Token(Token = "0x6001F9A")]
	[Address(RVA = "0xC33F64", Offset = "0xC33F64", VA = "0xC33F64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001F9B")]
	[Address(RVA = "0xC3415C", Offset = "0xC3415C", VA = "0xC3415C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001F9C")]
	[Address(RVA = "0xC341C0", Offset = "0xC341C0", VA = "0xC341C0")]
	private void debugStart()
	{
	}

	[Token(Token = "0x6001F9D")]
	[Address(RVA = "0xC34E3C", Offset = "0xC34E3C", VA = "0xC34E3C")]
	public void SetInteractable(bool bInteractable)
	{
	}

	[Token(Token = "0x6001F9E")]
	[Address(RVA = "0xC34EF0", Offset = "0xC34EF0", VA = "0xC34EF0")]
	public void Activate(bool bActive, bool showInstantly, bool postTutorialActivation = false)
	{
	}

	[Token(Token = "0x6001F9F")]
	[Address(RVA = "0xC340AC", Offset = "0xC340AC", VA = "0xC340AC")]
	private void onFirstActivation()
	{
	}

	[Token(Token = "0x6001FA0")]
	[Address(RVA = "0xC35B60", Offset = "0xC35B60", VA = "0xC35B60")]
	private bool canClickNow([Optional] MainMenuItem mainMenuItem)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FA1")]
	[Address(RVA = "0xC35CD0", Offset = "0xC35CD0", VA = "0xC35CD0")]
	public void QuickSoloButtonClick()
	{
	}

	[Token(Token = "0x6001FA2")]
	[Address(RVA = "0xC360F8", Offset = "0xC360F8", VA = "0xC360F8")]
	public void QuickCoopButtonClick()
	{
	}

	[Token(Token = "0x6001FA3")]
	[Address(RVA = "0xC35F0C", Offset = "0xC35F0C", VA = "0xC35F0C")]
	private SoloContent.Set LastUncompletedSet([Optional] SoloContent.Stage stage)
	{
		return null;
	}

	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0xC361E8", Offset = "0xC361E8", VA = "0xC361E8")]
	private SoloContent.Set FirstNoStarsSet(IEnumerable<SoloContent.Set> sets, int numStars = 0)
	{
		return null;
	}

	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0xC36568", Offset = "0xC36568", VA = "0xC36568")]
	public void CancelFindOpponentRequest()
	{
	}

	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0xC3672C", Offset = "0xC3672C", VA = "0xC3672C")]
	public void OnClickedCancelMultiplayer(Button button)
	{
	}

	[Token(Token = "0x6001FA7")]
	[Address(RVA = "0xC369B4", Offset = "0xC369B4", VA = "0xC369B4")]
	public void OnClickedCancelInviteFriend()
	{
	}

	[Token(Token = "0x6001FA8")]
	[Address(RVA = "0xC36AD4", Offset = "0xC36AD4", VA = "0xC36AD4")]
	[IteratorStateMachine(typeof(<JoinFriendInviteMultiplayerCo>d__59))]
	private IEnumerator<float> JoinFriendInviteMultiplayerCo()
	{
		return null;
	}

	[Token(Token = "0x6001FA9")]
	[Address(RVA = "0xC36B70", Offset = "0xC36B70", VA = "0xC36B70")]
	[IteratorStateMachine(typeof(<InviteFriendMultiplayerCo>d__60))]
	private IEnumerator<float> InviteFriendMultiplayerCo()
	{
		return null;
	}

	[Token(Token = "0x6001FAA")]
	[Address(RVA = "0xC36C0C", Offset = "0xC36C0C", VA = "0xC36C0C")]
	public void onStartingFriendlyMPMatch()
	{
	}

	[Token(Token = "0x6001FAB")]
	[Address(RVA = "0xC36D00", Offset = "0xC36D00", VA = "0xC36D00")]
	[IteratorStateMachine(typeof(<FindRankedMultiplayerCo>d__62))]
	private IEnumerator<float> FindRankedMultiplayerCo(CoModes coModes)
	{
		return null;
	}

	[Token(Token = "0x6001FAC")]
	[Address(RVA = "0xC365CC", Offset = "0xC365CC", VA = "0xC365CC")]
	private void exitFindOpponent()
	{
	}

	[Token(Token = "0x6001FAD")]
	[Address(RVA = "0xC36DAC", Offset = "0xC36DAC", VA = "0xC36DAC")]
	public void OnClickMultiplayer(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6001FAE")]
	[Address(RVA = "0xC36F10", Offset = "0xC36F10", VA = "0xC36F10")]
	public void transitionToRankedMultiplayer(CoModes coModes)
	{
	}

	[Token(Token = "0x6001FAF")]
	[Address(RVA = "0xC34AC8", Offset = "0xC34AC8", VA = "0xC34AC8")]
	private void debugStartPIN(CoMode coMode)
	{
	}

	[Token(Token = "0x6001FB0")]
	[Address(RVA = "0xC36FE0", Offset = "0xC36FE0", VA = "0xC36FE0")]
	public void transitionToJoinFriendInviteMultiplayer()
	{
	}

	[Token(Token = "0x6001FB1")]
	[Address(RVA = "0xC37104", Offset = "0xC37104", VA = "0xC37104")]
	public void transitionToInviteFriendMultiplayer()
	{
	}

	[Token(Token = "0x6001FB2")]
	[Address(RVA = "0xC371B8", Offset = "0xC371B8", VA = "0xC371B8")]
	public void OnClickArcade(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6001FB3")]
	[Address(RVA = "0xC37248", Offset = "0xC37248", VA = "0xC37248")]
	public void onClickPlayZenArcade()
	{
	}

	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0xC3438C", Offset = "0xC3438C", VA = "0xC3438C")]
	public void onClickPlayRegularArcade()
	{
	}

	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0xC343F8", Offset = "0xC343F8", VA = "0xC343F8")]
	public void onClickPlayNightmareArcade()
	{
	}

	[Token(Token = "0x6001FB6")]
	[Address(RVA = "0xC346F0", Offset = "0xC346F0", VA = "0xC346F0")]
	private void debugStartMonthlyChallenge()
	{
	}

	[Token(Token = "0x6001FB7")]
	[Address(RVA = "0xC34AC4", Offset = "0xC34AC4", VA = "0xC34AC4")]
	private void debugStartRankedMultiplayer(CoModes coModes)
	{
	}

	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0xC3615C", Offset = "0xC3615C", VA = "0xC3615C")]
	private void StartRankedMultiplayer(CoModes coModes)
	{
	}

	[Token(Token = "0x6001FB9")]
	[Address(RVA = "0xC34814", Offset = "0xC34814", VA = "0xC34814")]
	public void showMainMenu(bool instantly = false)
	{
	}

	[Token(Token = "0x6001FBA")]
	[Address(RVA = "0xC37428", Offset = "0xC37428", VA = "0xC37428")]
	public void onOpponentFoundWhileInMainMenu()
	{
	}

	[Token(Token = "0x6001FBB")]
	[Address(RVA = "0xC375F0", Offset = "0xC375F0", VA = "0xC375F0")]
	[IteratorStateMachine(typeof(<onAboutToTransitionToArena>d__78))]
	private IEnumerator<float> onAboutToTransitionToArena()
	{
		return null;
	}

	[Token(Token = "0x6001FBC")]
	[Address(RVA = "0xC357B0", Offset = "0xC357B0", VA = "0xC357B0")]
	public void hideMainMenu(bool excludePlayerProfile = false)
	{
	}

	[Token(Token = "0x6001FBD")]
	[Address(RVA = "0xC372B0", Offset = "0xC372B0", VA = "0xC372B0")]
	private void transitionToArcadeArena(float delay = 1f)
	{
	}

	[Token(Token = "0x6001FBE")]
	[Address(RVA = "0xC37388", Offset = "0xC37388", VA = "0xC37388")]
	public void transitionToMonthlyChallengeArena()
	{
	}

	[Token(Token = "0x6001FBF")]
	[Address(RVA = "0xC37848", Offset = "0xC37848", VA = "0xC37848")]
	private void transitionToMusicChallengeArena(float delay = 1f)
	{
	}

	[Token(Token = "0x6001FC0")]
	[Address(RVA = "0xC3731C", Offset = "0xC3731C", VA = "0xC3731C")]
	private void transitionToNightmareArena(float delay = 1f)
	{
	}

	[Token(Token = "0x6001FC1")]
	[Address(RVA = "0xC34464", Offset = "0xC34464", VA = "0xC34464")]
	public void transitionToSoloArenaWithArbitrarySet(float delay = 1f)
	{
	}

	[Token(Token = "0x6001FC2")]
	[Address(RVA = "0xC35FC8", Offset = "0xC35FC8", VA = "0xC35FC8")]
	public void transitionToSoloArena(string setId, float delay = 1f)
	{
	}

	[Token(Token = "0x6001FC3")]
	[Address(RVA = "0xC3768C", Offset = "0xC3768C", VA = "0xC3768C")]
	private void transitionToSinglePlayerArena(Arena arena, float delay)
	{
	}

	[Token(Token = "0x6001FC4")]
	[Address(RVA = "0xC34C74", Offset = "0xC34C74", VA = "0xC34C74")]
	public void TransitionToEditorArena()
	{
	}

	[Token(Token = "0x6001FC5")]
	[Address(RVA = "0xC378B4", Offset = "0xC378B4", VA = "0xC378B4")]
	public void transitionToTutorial(float delay)
	{
	}

	[Token(Token = "0x6001FC6")]
	[Address(RVA = "0xC35AC8", Offset = "0xC35AC8", VA = "0xC35AC8")]
	public void OnClickSolo(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6001FC7")]
	[Address(RVA = "0xC379D4", Offset = "0xC379D4", VA = "0xC379D4")]
	public void OnClickMiniProfile()
	{
	}

	[Token(Token = "0x6001FC8")]
	[Address(RVA = "0xC37AC4", Offset = "0xC37AC4", VA = "0xC37AC4")]
	public void OnClickQuitGame(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6001FC9")]
	[Address(RVA = "0xC37BB4", Offset = "0xC37BB4", VA = "0xC37BB4")]
	[IteratorStateMachine(typeof(<QuitGameCo>d__92))]
	private IEnumerator<float> QuitGameCo()
	{
		return null;
	}

	[Token(Token = "0x6001FCA")]
	[Address(RVA = "0xC37C50", Offset = "0xC37C50", VA = "0xC37C50")]
	private void onPoseRecentered()
	{
	}

	[Token(Token = "0x6001FCB")]
	[Address(RVA = "0xC37D48", Offset = "0xC37D48", VA = "0xC37D48")]
	private void Update()
	{
	}

	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0xC386D4", Offset = "0xC386D4", VA = "0xC386D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0xC387FC", Offset = "0xC387FC", VA = "0xC387FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0xC38924", Offset = "0xC38924", VA = "0xC38924")]
	private void onCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x6001FCF")]
	[Address(RVA = "0xC389B8", Offset = "0xC389B8", VA = "0xC389B8")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x6001FD0")]
	[Address(RVA = "0xC38A6C", Offset = "0xC38A6C", VA = "0xC38A6C")]
	public void OnClickOptions()
	{
	}

	[Token(Token = "0x6001FD1")]
	[Address(RVA = "0xC38A90", Offset = "0xC38A90", VA = "0xC38A90")]
	public void OnClickSettings()
	{
	}

	[Token(Token = "0x6001FD2")]
	[Address(RVA = "0xC38B08", Offset = "0xC38B08", VA = "0xC38B08")]
	public void OnClickHowToPlay()
	{
	}

	[Token(Token = "0x6001FD3")]
	[Address(RVA = "0xC389BC", Offset = "0xC389BC", VA = "0xC389BC")]
	public void showOptions()
	{
	}

	[Token(Token = "0x6001FD4")]
	[Address(RVA = "0xC38B7C", Offset = "0xC38B7C", VA = "0xC38B7C")]
	private void onOptionsHidden()
	{
	}

	[Token(Token = "0x6001FD5")]
	[Address(RVA = "0xC33DD4", Offset = "0xC33DD4", VA = "0xC33DD4")]
	private void onMainMenuVisibilityChanged()
	{
	}

	[Token(Token = "0x6001FD6")]
	[Address(RVA = "0xC38B80", Offset = "0xC38B80", VA = "0xC38B80")]
	public void updateUIControllerLength()
	{
	}

	[Token(Token = "0x6001FD7")]
	[Address(RVA = "0xC38CF0", Offset = "0xC38CF0", VA = "0xC38CF0")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x2000557")]
public class MainMenuItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000558")]
	public abstract class ParamBase
	{
		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SmoothTransition _transition;

		[Token(Token = "0x17000569")]
		public SmoothTransition transition
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0xC3C26C", Offset = "0xC3C26C", VA = "0xC3C26C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0xC3C274", Offset = "0xC3C274", VA = "0xC3C274", Slot = "4")]
		public virtual void init()
		{
		}

		[Token(Token = "0x6002022")]
		protected abstract MainMenuTransitionModifier findModifier();

		[Token(Token = "0x6002023")]
		[Address(RVA = "0xC3C2F8", Offset = "0xC3C2F8", VA = "0xC3C2F8")]
		protected ParamBase()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000559")]
	public class ScaleParam : ParamBase
	{
		[Serializable]
		[Token(Token = "0x200055A")]
		public class Scales
		{
			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float hidden;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float idle;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float highlit;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float selected;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float locked;

			[Token(Token = "0x6002027")]
			[Address(RVA = "0xC3C3AC", Offset = "0xC3C3AC", VA = "0xC3C3AC")]
			public Scales()
			{
			}
		}

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform transform;

		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Scales scales;

		[NonSerialized]
		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float currentScale;

		[Token(Token = "0x6002024")]
		[Address(RVA = "0xC3A7CC", Offset = "0xC3A7CC", VA = "0xC3A7CC")]
		public float getScale(State state)
		{
			return default(float);
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0xC3C300", Offset = "0xC3C300", VA = "0xC3C300", Slot = "5")]
		protected override MainMenuTransitionModifier findModifier()
		{
			return null;
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0xC3C3A4", Offset = "0xC3C3A4", VA = "0xC3C3A4")]
		public ScaleParam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200055B")]
	public class LightParam : ParamBase
	{
		[Serializable]
		[Token(Token = "0x200055C")]
		public class Intensities
		{
			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float hidden;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float idle;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float highlit;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float selected;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float locked;

			[Token(Token = "0x600202B")]
			[Address(RVA = "0xC3C470", Offset = "0xC3C470", VA = "0xC3C470")]
			public Intensities()
			{
			}
		}

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Light light;

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Intensities intensities;

		[Token(Token = "0x6002028")]
		[Address(RVA = "0xC3AA38", Offset = "0xC3AA38", VA = "0xC3AA38")]
		public float getIntensity(State state)
		{
			return default(float);
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0xC3C3C4", Offset = "0xC3C3C4", VA = "0xC3C3C4", Slot = "5")]
		protected override MainMenuTransitionModifier findModifier()
		{
			return null;
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0xC3C468", Offset = "0xC3C468", VA = "0xC3C468")]
		public LightParam()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200055D")]
	public class MaterialParam : ParamBase
	{
		[Serializable]
		[Token(Token = "0x200055E")]
		public class Materials
		{
			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material hidden;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material idle;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Material highlit;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Material selected;

			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Material locked;

			[Token(Token = "0x6002034")]
			[Address(RVA = "0xC3C660", Offset = "0xC3C660", VA = "0xC3C660")]
			public Materials()
			{
			}
		}

		[Token(Token = "0x200055F")]
		public enum Type
		{
			[Token(Token = "0x4002062")]
			Normal,
			[Token(Token = "0x4002063")]
			TextMeshPro,
			[Token(Token = "0x4002064")]
			ParticleSystem
		}

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer renderer;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Materials materials;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Type _type;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystemRenderer _particleSystemRenderer;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x1700056A")]
		public Type type
		{
			[Token(Token = "0x600202D")]
			[Address(RVA = "0xC3C488", Offset = "0xC3C488", VA = "0xC3C488")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x1700056B")]
		public ParticleSystemRenderer particleSystemRenderer
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0xC3C490", Offset = "0xC3C490", VA = "0xC3C490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700056C")]
		public TextMeshPro textMeshPro
		{
			[Token(Token = "0x600202F")]
			[Address(RVA = "0xC3C498", Offset = "0xC3C498", VA = "0xC3C498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0xC3AD60", Offset = "0xC3AD60", VA = "0xC3AD60")]
		public Material getMaterial(State state)
		{
			return null;
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0xC3C4A0", Offset = "0xC3C4A0", VA = "0xC3C4A0")]
		private void initType()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0xC3C59C", Offset = "0xC3C59C", VA = "0xC3C59C", Slot = "4")]
		public override void init()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0xC3C5B4", Offset = "0xC3C5B4", VA = "0xC3C5B4", Slot = "5")]
		protected override MainMenuTransitionModifier findModifier()
		{
			return null;
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0xC3C658", Offset = "0xC3C658", VA = "0xC3C658")]
		public MaterialParam()
		{
		}
	}

	[Token(Token = "0x2000560")]
	public enum State
	{
		[Token(Token = "0x4002066")]
		Hidden,
		[Token(Token = "0x4002067")]
		Idle,
		[Token(Token = "0x4002068")]
		Highlit,
		[Token(Token = "0x4002069")]
		Selected,
		[Token(Token = "0x400206A")]
		Locked
	}

	[Token(Token = "0x2000561")]
	[CompilerGenerated]
	private sealed class <BindVisibilityForQuickButtonCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenuItem <>4__this;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int frames;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool <visible>5__2;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__3;

		[Token(Token = "0x1700056D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0xC3C774", Offset = "0xC3C774", VA = "0xC3C774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0xC3C7BC", Offset = "0xC3C7BC", VA = "0xC3C7BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0xC3BF90", Offset = "0xC3BF90", VA = "0xC3BF90")]
		[DebuggerHidden]
		public <BindVisibilityForQuickButtonCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0xC3C668", Offset = "0xC3C668", VA = "0xC3C668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0xC3C66C", Offset = "0xC3C66C", VA = "0xC3C66C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0xC3C77C", Offset = "0xC3C77C", VA = "0xC3C77C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000562")]
	[CompilerGenerated]
	private sealed class <showTextAtTheSameTimeWithSiblingsCo>d__68 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MainMenuItem <>4__this;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TouchItem <touchItem>5__2;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MainMenuItem <sibling>5__3;

		[Token(Token = "0x1700056F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0xC3C9B4", Offset = "0xC3C9B4", VA = "0xC3C9B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000570")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xC3C9FC", Offset = "0xC3C9FC", VA = "0xC3C9FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0xC3C1B4", Offset = "0xC3C1B4", VA = "0xC3C1B4")]
		[DebuggerHidden]
		public <showTextAtTheSameTimeWithSiblingsCo>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0xC3C818", Offset = "0xC3C818", VA = "0xC3C818", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xC3C81C", Offset = "0xC3C81C", VA = "0xC3C81C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xC3C9BC", Offset = "0xC3C9BC", VA = "0xC3C9BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400202F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool interactable;

	[Token(Token = "0x4002030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIItemTransitionsGroup textsTransitionsGroup;

	[Token(Token = "0x4002031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<ScaleParam> scaleParams;

	[Token(Token = "0x4002032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LightParam> lightParams;

	[Token(Token = "0x4002033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MaterialParam> materialParams;

	[Token(Token = "0x4002034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MainMenuItemValidator _validator;

	[Token(Token = "0x4002035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> _originalScales;

	[Token(Token = "0x4002036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool lockedInDemo;

	[Token(Token = "0x4002037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject normalDescription;

	[Token(Token = "0x4002038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject demoDescription;

	[Token(Token = "0x4002039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UIItemTransitions quickButton;

	[Token(Token = "0x400203A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool hideQuickButtonWhenOffline;

	[Token(Token = "0x400203B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool _shown;

	[Token(Token = "0x400203C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool _pointerOver;

	[Token(Token = "0x400203D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	private bool _selected;

	[Token(Token = "0x400203E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private State _desiredState;

	[Token(Token = "0x400203F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _desiredT;

	[Token(Token = "0x4002041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private UIItemTransitions _newTransitions;

	[Token(Token = "0x4002042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _allDone;

	[Token(Token = "0x4002043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool _allNearlyDone;

	[Token(Token = "0x4002044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float _maxDiffToDesired;

	[Token(Token = "0x4002045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int _faceColorShaderProp;

	[Token(Token = "0x4002046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private UIItemState _quickButtonState;

	[Token(Token = "0x17000563")]
	private MainMenuItemValidator validator
	{
		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xC39790", Offset = "0xC39790", VA = "0xC39790")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000564")]
	private bool shown
	{
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0xC3984C", Offset = "0xC3984C", VA = "0xC3984C")]
		set
		{
		}
	}

	[Token(Token = "0x17000565")]
	private bool pointerOver
	{
		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xC39A0C", Offset = "0xC39A0C", VA = "0xC39A0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000566")]
	private bool selected
	{
		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0xC39AB0", Offset = "0xC39AB0", VA = "0xC39AB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000567")]
	public bool transitioning
	{
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xC39B54", Offset = "0xC39B54", VA = "0xC39B54")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002000")]
		[Address(RVA = "0xC39B5C", Offset = "0xC39B5C", VA = "0xC39B5C")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x17000568")]
	public bool transitioningNotNearlyDone
	{
		[Token(Token = "0x6002001")]
		[Address(RVA = "0xC39B68", Offset = "0xC39B68", VA = "0xC39B68")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002002")]
	[Address(RVA = "0xC39B88", Offset = "0xC39B88", VA = "0xC39B88")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002003")]
	[Address(RVA = "0xC39BF0", Offset = "0xC39BF0", VA = "0xC39BF0")]
	private void initScales()
	{
	}

	[Token(Token = "0x6002004")]
	[Address(RVA = "0xC39E34", Offset = "0xC39E34", VA = "0xC39E34")]
	private void initTransitions()
	{
	}

	[Token(Token = "0x6002005")]
	[Address(RVA = "0xC3A1AC", Offset = "0xC3A1AC", VA = "0xC3A1AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002006")]
	[Address(RVA = "0xC3A23C", Offset = "0xC3A23C", VA = "0xC3A23C")]
	private void updateStateInstantly()
	{
	}

	[Token(Token = "0x6002007")]
	[Address(RVA = "0xC3A264", Offset = "0xC3A264", VA = "0xC3A264")]
	private void updateScalesInstantly()
	{
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0xC3A89C", Offset = "0xC3A89C", VA = "0xC3A89C")]
	private void updateScales()
	{
	}

	[Token(Token = "0x6002009")]
	[Address(RVA = "0xC3A36C", Offset = "0xC3A36C", VA = "0xC3A36C")]
	private void updateLightsInstantly()
	{
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0xC3AB08", Offset = "0xC3AB08", VA = "0xC3AB08")]
	private void updateLights()
	{
	}

	[Token(Token = "0x600200B")]
	[Address(RVA = "0xC3A4FC", Offset = "0xC3A4FC", VA = "0xC3A4FC")]
	private void updateMaterialsInstantly()
	{
	}

	[Token(Token = "0x600200C")]
	[Address(RVA = "0xC3AE30", Offset = "0xC3AE30", VA = "0xC3AE30")]
	private void updateMaterials()
	{
	}

	[Token(Token = "0x600200D")]
	[Address(RVA = "0xC35A10", Offset = "0xC35A10", VA = "0xC35A10")]
	public void show(bool instantly)
	{
	}

	[Token(Token = "0x600200E")]
	[Address(RVA = "0xC33F44", Offset = "0xC33F44", VA = "0xC33F44")]
	public void hide()
	{
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0xC3B21C", Offset = "0xC3B21C", VA = "0xC3B21C")]
	public void onPointerEnter()
	{
	}

	[Token(Token = "0x6002010")]
	[Address(RVA = "0xC3B230", Offset = "0xC3B230", VA = "0xC3B230")]
	public void onPointerExit()
	{
	}

	[Token(Token = "0x6002011")]
	[Address(RVA = "0xC33F4C", Offset = "0xC33F4C", VA = "0xC33F4C")]
	public void onSelected()
	{
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0xC33F3C", Offset = "0xC33F3C", VA = "0xC33F3C")]
	public void onUnselected()
	{
	}

	[Token(Token = "0x6002013")]
	[Address(RVA = "0xC399B0", Offset = "0xC399B0", VA = "0xC399B0")]
	private void updateDesiredState()
	{
	}

	[Token(Token = "0x6002014")]
	[Address(RVA = "0xC3B244", Offset = "0xC3B244", VA = "0xC3B244")]
	private void setDesiredState(State desiredState)
	{
	}

	[Token(Token = "0x6002015")]
	[Address(RVA = "0xC3BE98", Offset = "0xC3BE98", VA = "0xC3BE98")]
	[IteratorStateMachine(typeof(<BindVisibilityForQuickButtonCo>d__60))]
	private IEnumerator<float> BindVisibilityForQuickButtonCo(int frames = 1)
	{
		return null;
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0xC3B404", Offset = "0xC3B404", VA = "0xC3B404")]
	private float getStateT(State state)
	{
		return default(float);
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0xC3B550", Offset = "0xC3B550", VA = "0xC3B550")]
	private void startTransitions()
	{
	}

	[Token(Token = "0x6002018")]
	[Address(RVA = "0xC3BFB8", Offset = "0xC3BFB8", VA = "0xC3BFB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6002019")]
	[Address(RVA = "0xC3C10C", Offset = "0xC3C10C", VA = "0xC3C10C")]
	private void updateObjects()
	{
	}

	[Token(Token = "0x600201A")]
	[Address(RVA = "0xC3C12C", Offset = "0xC3C12C", VA = "0xC3C12C")]
	private void showTexts()
	{
	}

	[Token(Token = "0x600201B")]
	[Address(RVA = "0xC3B37C", Offset = "0xC3B37C", VA = "0xC3B37C")]
	private void hideTexts()
	{
	}

	[Token(Token = "0x600201C")]
	[Address(RVA = "0xC3BF1C", Offset = "0xC3BF1C", VA = "0xC3BF1C")]
	[IteratorStateMachine(typeof(<showTextAtTheSameTimeWithSiblingsCo>d__68))]
	private IEnumerator<float> showTextAtTheSameTimeWithSiblingsCo()
	{
		return null;
	}

	[Token(Token = "0x600201D")]
	[Address(RVA = "0xC3C1DC", Offset = "0xC3C1DC", VA = "0xC3C1DC")]
	public MainMenuItem()
	{
	}
}
[Token(Token = "0x2000563")]
public class MainMenuItems : MonoBehaviour
{
	[Token(Token = "0x6002041")]
	[Address(RVA = "0xC3CA58", Offset = "0xC3CA58", VA = "0xC3CA58")]
	public void onArcadeClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002042")]
	[Address(RVA = "0xC3CAB0", Offset = "0xC3CAB0", VA = "0xC3CAB0")]
	public void onSoloClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002043")]
	[Address(RVA = "0xC3CB08", Offset = "0xC3CB08", VA = "0xC3CB08")]
	public void onMultiplayerClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002044")]
	[Address(RVA = "0xC3CB60", Offset = "0xC3CB60", VA = "0xC3CB60")]
	public void onQuitClicked(MainMenuItem mainMenuItem)
	{
	}

	[Token(Token = "0x6002045")]
	[Address(RVA = "0xC3CBB0", Offset = "0xC3CBB0", VA = "0xC3CBB0")]
	public void onMiniProfileClicked()
	{
	}

	[Token(Token = "0x6002046")]
	[Address(RVA = "0xC3CC00", Offset = "0xC3CC00", VA = "0xC3CC00")]
	public void onNewMessageClicked()
	{
	}

	[Token(Token = "0x6002047")]
	[Address(RVA = "0xC3CC50", Offset = "0xC3CC50", VA = "0xC3CC50")]
	public void onSettingsClicked()
	{
	}

	[Token(Token = "0x6002048")]
	[Address(RVA = "0xC3CCA0", Offset = "0xC3CCA0", VA = "0xC3CCA0")]
	public void onHowToPlayClicked()
	{
	}

	[Token(Token = "0x6002049")]
	[Address(RVA = "0xC3CCF0", Offset = "0xC3CCF0", VA = "0xC3CCF0")]
	public MainMenuItems()
	{
	}
}
[Token(Token = "0x2000564")]
public class MainMenuItemValidator
{
	[Token(Token = "0x4002076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MainMenuItem _target;

	[Token(Token = "0x4002077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<Light> _lights;

	[Token(Token = "0x4002078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<Renderer> _renderers;

	[Token(Token = "0x600204A")]
	[Address(RVA = "0xC3981C", Offset = "0xC3981C", VA = "0xC3981C")]
	public MainMenuItemValidator(MainMenuItem target)
	{
	}

	[Token(Token = "0x600204B")]
	[Address(RVA = "0xC3CCF8", Offset = "0xC3CCF8", VA = "0xC3CCF8")]
	public void validate()
	{
	}

	[Token(Token = "0x600204C")]
	[Address(RVA = "0xC3CD10", Offset = "0xC3CD10", VA = "0xC3CD10")]
	private void validateLights()
	{
	}

	[Token(Token = "0x600204D")]
	[Address(RVA = "0xC3D1C8", Offset = "0xC3D1C8", VA = "0xC3D1C8")]
	private void onNewLight(MainMenuItem.LightParam lightParam)
	{
	}

	[Token(Token = "0x600204E")]
	[Address(RVA = "0xC3CF6C", Offset = "0xC3CF6C", VA = "0xC3CF6C")]
	private void validateMaterials()
	{
	}

	[Token(Token = "0x600204F")]
	[Address(RVA = "0xC3D268", Offset = "0xC3D268", VA = "0xC3D268")]
	private void onNewRenderer(MainMenuItem.MaterialParam materialParam)
	{
	}
}
[Token(Token = "0x2000565")]
public class MainMenuTransitionModifier : MonoBehaviour
{
	[Token(Token = "0x4002079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedFactor;

	[Token(Token = "0x400207A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool affectsScales;

	[Token(Token = "0x400207B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool affectsLights;

	[Token(Token = "0x400207C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool affectsMaterials;

	[Token(Token = "0x6002050")]
	[Address(RVA = "0xC3D34C", Offset = "0xC3D34C", VA = "0xC3D34C")]
	public MainMenuTransitionModifier()
	{
	}
}
[Token(Token = "0x2000566")]
public class MikeToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x6002051")]
	[Address(RVA = "0xC3D36C", Offset = "0xC3D36C", VA = "0xC3D36C", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6002052")]
	[Address(RVA = "0xC3D374", Offset = "0xC3D374", VA = "0xC3D374", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6002053")]
	[Address(RVA = "0xC3D3C8", Offset = "0xC3D3C8", VA = "0xC3D3C8", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6002054")]
	[Address(RVA = "0xC3D49C", Offset = "0xC3D49C", VA = "0xC3D49C")]
	private void resetSwitchIfCantUseMike()
	{
	}

	[Token(Token = "0x6002055")]
	[Address(RVA = "0xC3D528", Offset = "0xC3D528", VA = "0xC3D528", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6002056")]
	[Address(RVA = "0xC3D590", Offset = "0xC3D590", VA = "0xC3D590")]
	public MikeToggleSwitch()
	{
	}
}
[Token(Token = "0x2000567")]
public class MiniProfile : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000568")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x2000569")]
		public class Flakh
		{
			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro playerName;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshPro xp;

			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro skillRating;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Localize level;

			[Token(Token = "0x600206A")]
			[Address(RVA = "0xC3EC14", Offset = "0xC3EC14", VA = "0xC3EC14")]
			public Flakh()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056A")]
		public class Medals
		{
			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool show;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject root;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject unrated;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject noob;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject underdog;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject risingStar;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject baller;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject master;

			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public GameObject racketLord;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public GameObject ballBuster;

			[Token(Token = "0x600206B")]
			[Address(RVA = "0xC3EC1C", Offset = "0xC3EC1C", VA = "0xC3EC1C")]
			public Medals()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056B")]
		public class LastSession
		{
			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LocalizeFormatted earned;

			[Token(Token = "0x600206C")]
			[Address(RVA = "0xC3EC24", Offset = "0xC3EC24", VA = "0xC3EC24")]
			public LastSession()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056C")]
		public class NewLevel
		{
			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x600206D")]
			[Address(RVA = "0xC3EC2C", Offset = "0xC3EC2C", VA = "0xC3EC2C")]
			public NewLevel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200056D")]
		public class NewItem
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x600206E")]
			[Address(RVA = "0xC3EC34", Offset = "0xC3EC34", VA = "0xC3EC34")]
			public NewItem()
			{
			}
		}

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Flakh flakh;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Medals medals;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LastSession lastSession;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NewLevel newLevel;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NewItem newItem;

		[Token(Token = "0x6002069")]
		[Address(RVA = "0xC3EC0C", Offset = "0xC3EC0C", VA = "0xC3EC0C")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x200056E")]
	[CompilerGenerated]
	private sealed class <populateCo>d__14 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniProfile <>4__this;

		[Token(Token = "0x17000574")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002072")]
			[Address(RVA = "0xC3EEC8", Offset = "0xC3EEC8", VA = "0xC3EEC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000575")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002074")]
			[Address(RVA = "0xC3EF10", Offset = "0xC3EF10", VA = "0xC3EF10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0xC3D8A4", Offset = "0xC3D8A4", VA = "0xC3D8A4")]
		[DebuggerHidden]
		public <populateCo>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0xC3EC3C", Offset = "0xC3EC3C", VA = "0xC3EC3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0xC3EC40", Offset = "0xC3EC40", VA = "0xC3EC40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0xC3EED0", Offset = "0xC3EED0", VA = "0xC3EED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000570")]
	[CompilerGenerated]
	private sealed class <PlayNewLevelAudioWhenVisibleCo>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniProfile <>4__this;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerLevel level;

		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator<float> <>7__wrap1;

		[Token(Token = "0x17000576")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0xC3F3E8", Offset = "0xC3F3E8", VA = "0xC3F3E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000577")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0xC3F430", Offset = "0xC3F430", VA = "0xC3F430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0xC3E3DC", Offset = "0xC3E3DC", VA = "0xC3E3DC")]
		[DebuggerHidden]
		public <PlayNewLevelAudioWhenVisibleCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0xC3F028", Offset = "0xC3F028", VA = "0xC3F028", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0xC3F044", Offset = "0xC3F044", VA = "0xC3F044", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0xC3F338", Offset = "0xC3F338", VA = "0xC3F338")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0xC3F3F0", Offset = "0xC3F3F0", VA = "0xC3F3F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000571")]
	[CompilerGenerated]
	private sealed class <WaitSecondAfterVisible>d__19 : IEnumerable<float>, IEnumerable, IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <>l__initialThreadId;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MiniProfile <>4__this;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float sec;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float <>3__sec;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIItemTransitions <miniProfileItemTransitions>5__2;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timeVisible>5__3;

		[Token(Token = "0x17000578")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002081")]
			[Address(RVA = "0xC3F5FC", Offset = "0xC3F5FC", VA = "0xC3F5FC", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000579")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0xC3F644", Offset = "0xC3F644", VA = "0xC3F644", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0xC3E498", Offset = "0xC3E498", VA = "0xC3E498")]
		[DebuggerHidden]
		public <WaitSecondAfterVisible>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0xC3F48C", Offset = "0xC3F48C", VA = "0xC3F48C", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0xC3F490", Offset = "0xC3F490", VA = "0xC3F490", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0xC3F604", Offset = "0xC3F604", VA = "0xC3F604", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0xC3F6A0", Offset = "0xC3F6A0", VA = "0xC3F6A0", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<float> System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0xC3F754", Offset = "0xC3F754", VA = "0xC3F754", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x2000573")]
	[CompilerGenerated]
	private sealed class <PlayItemUnlockedAudioWhenVisible>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MiniProfile <>4__this;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IEnumerator<float> <>7__wrap1;

		[Token(Token = "0x1700057A")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0xC3FB88", Offset = "0xC3FB88", VA = "0xC3FB88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700057B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0xC3FBD0", Offset = "0xC3FBD0", VA = "0xC3FBD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002089")]
		[Address(RVA = "0xC3EB00", Offset = "0xC3EB00", VA = "0xC3EB00")]
		[DebuggerHidden]
		public <PlayItemUnlockedAudioWhenVisible>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xC3F7E8", Offset = "0xC3F7E8", VA = "0xC3F7E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xC3F804", Offset = "0xC3F804", VA = "0xC3F804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xC3FAD8", Offset = "0xC3FAD8", VA = "0xC3FAD8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xC3FB90", Offset = "0xC3FB90", VA = "0xC3FB90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400207D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObjects playerObjects;

	[Token(Token = "0x400207E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Choose Unknown to show local player")]
	public PlayerID playerID;

	[Token(Token = "0x400207F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MiniProfile inst;

	[Token(Token = "0x4002080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _xpFormat;

	[Token(Token = "0x4002081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerLevel _lastSeenPlayerLevelThisSession;

	[Token(Token = "0x4002082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _coroutineTag;

	[Token(Token = "0x4002084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly HashSet<string> _announcedUnseenItemsThisSession;

	[Token(Token = "0x4002085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private CoroutineHandle _playItemUnlockedAudioWhenVisibleCo;

	[Token(Token = "0x17000571")]
	private bool isShowingLocalPlayer
	{
		[Token(Token = "0x6002057")]
		[Address(RVA = "0xC3D598", Offset = "0xC3D598", VA = "0xC3D598")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000572")]
	private bool showLastSessionXp
	{
		[Token(Token = "0x6002058")]
		[Address(RVA = "0xC3D608", Offset = "0xC3D608", VA = "0xC3D608")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000573")]
	public bool MiniProfileHasNewRating
	{
		[Token(Token = "0x6002062")]
		[Address(RVA = "0xC3E4CC", Offset = "0xC3E4CC", VA = "0xC3E4CC")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002063")]
		[Address(RVA = "0xC3E4D4", Offset = "0xC3E4D4", VA = "0xC3E4D4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6002059")]
	[Address(RVA = "0xC3D618", Offset = "0xC3D618", VA = "0xC3D618")]
	private void Awake()
	{
	}

	[Token(Token = "0x600205A")]
	[Address(RVA = "0xC3D764", Offset = "0xC3D764", VA = "0xC3D764")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600205B")]
	[Address(RVA = "0xC3D848", Offset = "0xC3D848", VA = "0xC3D848")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600205C")]
	[Address(RVA = "0xC3D7D4", Offset = "0xC3D7D4", VA = "0xC3D7D4")]
	[IteratorStateMachine(typeof(<populateCo>d__14))]
	private IEnumerator<float> populateCo()
	{
		return null;
	}

	[Token(Token = "0x600205D")]
	[Address(RVA = "0xC3D8CC", Offset = "0xC3D8CC", VA = "0xC3D8CC")]
	private void reset()
	{
	}

	[Token(Token = "0x600205E")]
	[Address(RVA = "0xC3E1F0", Offset = "0xC3E1F0", VA = "0xC3E1F0")]
	private void populateWithId(string rnxId)
	{
	}

	[Token(Token = "0x600205F")]
	[Address(RVA = "0xC3E324", Offset = "0xC3E324", VA = "0xC3E324")]
	private void populatePlayerName(string name)
	{
	}

	[Token(Token = "0x6002060")]
	[Address(RVA = "0xC3E358", Offset = "0xC3E358", VA = "0xC3E358")]
	[IteratorStateMachine(typeof(<PlayNewLevelAudioWhenVisibleCo>d__18))]
	private IEnumerator<float> PlayNewLevelAudioWhenVisibleCo(PlayerLevel level)
	{
		return null;
	}

	[Token(Token = "0x6002061")]
	[Address(RVA = "0xC3E404", Offset = "0xC3E404", VA = "0xC3E404")]
	[IteratorStateMachine(typeof(<WaitSecondAfterVisible>d__19))]
	private IEnumerable<float> WaitSecondAfterVisible(float sec = 1f)
	{
		return null;
	}

	[Token(Token = "0x6002064")]
	[Address(RVA = "0xC3D97C", Offset = "0xC3D97C", VA = "0xC3D97C")]
	private void populateWithProfileData(PlayerProfileData profileData)
	{
	}

	[Token(Token = "0x6002065")]
	[Address(RVA = "0xC3E4E0", Offset = "0xC3E4E0", VA = "0xC3E4E0")]
	private void AnnounceIfUnseenItems(IReadOnlyCollection<ItemsDefs.ItemDefinition> unseenItems)
	{
	}

	[Token(Token = "0x6002066")]
	[Address(RVA = "0xC3EA8C", Offset = "0xC3EA8C", VA = "0xC3EA8C")]
	[IteratorStateMachine(typeof(<PlayItemUnlockedAudioWhenVisible>d__28))]
	private IEnumerator<float> PlayItemUnlockedAudioWhenVisible()
	{
		return null;
	}

	[Token(Token = "0x6002067")]
	[Address(RVA = "0xC3EB28", Offset = "0xC3EB28", VA = "0xC3EB28")]
	public MiniProfile()
	{
	}
}
[Token(Token = "0x2000574")]
public class MirrorArea : Area
{
	[Token(Token = "0x40020B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerProfileUI profileUI;

	[Token(Token = "0x40020B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CustomizationsUI customizationsUI;

	[Token(Token = "0x40020B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UIItemTransitions topPanel;

	[Token(Token = "0x40020B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion _lastProfileRotation;

	[Token(Token = "0x40020B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 _lastProfilePosition;

	[Token(Token = "0x1700057C")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002090")]
		[Address(RVA = "0xC3FC2C", Offset = "0xC3FC2C", VA = "0xC3FC2C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700057D")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002091")]
		[Address(RVA = "0xC3FC34", Offset = "0xC3FC34", VA = "0xC3FC34", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700057E")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002092")]
		[Address(RVA = "0xC3FC3C", Offset = "0xC3FC3C", VA = "0xC3FC3C", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700057F")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002093")]
		[Address(RVA = "0xC3FC44", Offset = "0xC3FC44", VA = "0xC3FC44", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000580")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002094")]
		[Address(RVA = "0xC3FC4C", Offset = "0xC3FC4C", VA = "0xC3FC4C", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002095")]
	[Address(RVA = "0xC3FC54", Offset = "0xC3FC54", VA = "0xC3FC54")]
	public void CustomizationsUIState(bool visable)
	{
	}

	[Token(Token = "0x6002096")]
	[Address(RVA = "0xC3FD6C", Offset = "0xC3FD6C", VA = "0xC3FD6C")]
	public MirrorArea()
	{
	}
}
[Token(Token = "0x2000575")]
public class MonthlyChallengeMenuItem : MonoBehaviour, ISingleton
{
	[Token(Token = "0x40020BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro setName;

	[Token(Token = "0x40020BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Localize setLocalizedName;

	[Token(Token = "0x40020BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UIItemTransitions newIndicator;

	[Token(Token = "0x40020BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform SpecialRoot;

	[Token(Token = "0x40020BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MonthlyChallengeMenuItem inst;

	[Token(Token = "0x40020BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x40020C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _usingSpecial;

	[Token(Token = "0x6002097")]
	[Address(RVA = "0xC3FD74", Offset = "0xC3FD74", VA = "0xC3FD74", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6002098")]
	[Address(RVA = "0xC3FE04", Offset = "0xC3FE04", VA = "0xC3FE04")]
	public void onShown()
	{
	}

	[Token(Token = "0x6002099")]
	[Address(RVA = "0xC40394", Offset = "0xC40394", VA = "0xC40394")]
	public void SetSpecialSetName(string specialName, bool state)
	{
	}

	[Token(Token = "0x600209A")]
	[Address(RVA = "0xC404B4", Offset = "0xC404B4", VA = "0xC404B4")]
	public void onHidden()
	{
	}

	[Token(Token = "0x600209B")]
	[Address(RVA = "0xC40570", Offset = "0xC40570", VA = "0xC40570")]
	public void onLeaderboardClicked()
	{
	}

	[Token(Token = "0x600209C")]
	[Address(RVA = "0xC4063C", Offset = "0xC4063C", VA = "0xC4063C")]
	public MonthlyChallengeMenuItem()
	{
	}
}
[Token(Token = "0x2000576")]
public class MusicPlayerUI : MonoBehaviour
{
	[Token(Token = "0x40020C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro trackName;

	[Token(Token = "0x40020C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noTrackPlaying;

	[Token(Token = "0x40020C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MusicPlayerUI inst;

	[Token(Token = "0x40020C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _shown;

	[Token(Token = "0x40020C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x17000581")]
	public bool shown
	{
		[Token(Token = "0x600209D")]
		[Address(RVA = "0xC40644", Offset = "0xC40644", VA = "0xC40644")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600209E")]
	[Address(RVA = "0xC4064C", Offset = "0xC4064C", VA = "0xC4064C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600209F")]
	[Address(RVA = "0xC40844", Offset = "0xC40844", VA = "0xC40844")]
	private void Start()
	{
	}

	[Token(Token = "0x60020A0")]
	[Address(RVA = "0xC40848", Offset = "0xC40848", VA = "0xC40848")]
	public void show()
	{
	}

	[Token(Token = "0x60020A1")]
	[Address(RVA = "0xC4091C", Offset = "0xC4091C", VA = "0xC4091C")]
	public void hide()
	{
	}

	[Token(Token = "0x60020A2")]
	[Address(RVA = "0xC408B4", Offset = "0xC408B4", VA = "0xC408B4")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x60020A3")]
	[Address(RVA = "0xC407C0", Offset = "0xC407C0", VA = "0xC407C0")]
	public void setTrackName(string name)
	{
	}

	[Token(Token = "0x60020A4")]
	[Address(RVA = "0xC40984", Offset = "0xC40984", VA = "0xC40984")]
	public void onNextTrackClicked()
	{
	}

	[Token(Token = "0x60020A5")]
	[Address(RVA = "0xC40A2C", Offset = "0xC40A2C", VA = "0xC40A2C")]
	public MusicPlayerUI()
	{
	}
}
[Token(Token = "0x2000577")]
public class AvatarPlayerIDSwitch : ToggleSwitchBase
{
	[Token(Token = "0x40020C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerModel playerModel;

	[Token(Token = "0x60020A6")]
	[Address(RVA = "0xC40A34", Offset = "0xC40A34", VA = "0xC40A34", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x60020A7")]
	[Address(RVA = "0xC40A60", Offset = "0xC40A60", VA = "0xC40A60", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x60020A8")]
	[Address(RVA = "0xC40B90", Offset = "0xC40B90", VA = "0xC40B90", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x60020A9")]
	[Address(RVA = "0xC40BD0", Offset = "0xC40BD0", VA = "0xC40BD0")]
	public AvatarPlayerIDSwitch()
	{
	}
}
[Token(Token = "0x2000578")]
[RequireComponent(typeof(Animator))]
public class BoughtAnimationController : MonoBehaviour
{
	[Token(Token = "0x40020C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x14000046")]
	public event Action onBoughtAnimationHalfwayPoint
	{
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xC40C30", Offset = "0xC40C30", VA = "0xC40C30")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xC40CCC", Offset = "0xC40CCC", VA = "0xC40CCC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60020AA")]
	[Address(RVA = "0xC40BD8", Offset = "0xC40BD8", VA = "0xC40BD8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020AD")]
	[Address(RVA = "0xC40D68", Offset = "0xC40D68", VA = "0xC40D68")]
	public void BoughtAnimationHalfwayPoint()
	{
	}

	[Token(Token = "0x60020AE")]
	[Address(RVA = "0xC40D84", Offset = "0xC40D84", VA = "0xC40D84")]
	public void PlayBoughtAnimation([Optional] Action halfway)
	{
	}

	[Token(Token = "0x60020AF")]
	[Address(RVA = "0xC40EEC", Offset = "0xC40EEC", VA = "0xC40EEC")]
	public BoughtAnimationController()
	{
	}
}
[Token(Token = "0x200057A")]
public class CustomizationItemsShelf : SelectableTouchItemGroupDynamic<CustomizationItemUI, ItemsDefs.ItemDefinition>
{
	[Token(Token = "0x40020CB")]
	public const int MAX_ITEMS_IN_SHELF = 5;

	[Token(Token = "0x40020CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public ItemsDefs.ItemShelf itemsType;

	[Token(Token = "0x60020B2")]
	[Address(RVA = "0xC40F34", Offset = "0xC40F34", VA = "0xC40F34", Slot = "8")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60020B3")]
	[Address(RVA = "0xC41680", Offset = "0xC41680", VA = "0xC41680")]
	private static void ItemHighlight(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x60020B4")]
	[Address(RVA = "0xC417D8", Offset = "0xC417D8", VA = "0xC417D8")]
	private static void ItemUnHighlight(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x60020B5")]
	[Address(RVA = "0xC41A50", Offset = "0xC41A50", VA = "0xC41A50")]
	public CustomizationItemsShelf()
	{
	}
}
[Token(Token = "0x200057C")]
public class CustomizationItemsShelves : MonoBehaviour, ISingleton
{
	[Token(Token = "0x40020D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemsInfoPanel infoPanel;

	[Token(Token = "0x40020D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomizationItemsShelf[] shelves;

	[Token(Token = "0x40020D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomizationItemsShelves inst;

	[Token(Token = "0x40020D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CustomizationItemUI[] _allItemsUIs;

	[Token(Token = "0x60020BD")]
	[Address(RVA = "0xC41BB8", Offset = "0xC41BB8", VA = "0xC41BB8", Slot = "4")]
	public void InitSingleton()
	{
	}

	[Token(Token = "0x60020BE")]
	[Address(RVA = "0xC41C10", Offset = "0xC41C10", VA = "0xC41C10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020BF")]
	[Address(RVA = "0xC41C3C", Offset = "0xC41C3C", VA = "0xC41C3C")]
	public void InitializeShelves()
	{
	}

	[Token(Token = "0x60020C0")]
	[Address(RVA = "0xC4200C", Offset = "0xC4200C", VA = "0xC4200C")]
	public void AutoSelectEquipedItems()
	{
	}

	[Token(Token = "0x60020C1")]
	[Address(RVA = "0xC420D8", Offset = "0xC420D8", VA = "0xC420D8")]
	private void OnHighlight(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x60020C2")]
	[Address(RVA = "0xC4231C", Offset = "0xC4231C", VA = "0xC4231C")]
	private void OnUnHighlight(CustomizationItemUI _)
	{
	}

	[Token(Token = "0x60020C3")]
	[Address(RVA = "0xC423A0", Offset = "0xC423A0", VA = "0xC423A0")]
	public CustomizationItemsShelves()
	{
	}
}
[Token(Token = "0x200057E")]
public class CustomizationItemUI : SelectableDynamicTouchItem<ItemsDefs.ItemDefinition>
{
	[Token(Token = "0x200057F")]
	[CompilerGenerated]
	private sealed class <PlayFxOnMirrorIfAnchoredWhenItemLoad>d__23 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizationItemUI item;

		[Token(Token = "0x17000584")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0xC43B1C", Offset = "0xC43B1C", VA = "0xC43B1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000585")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0xC43B64", Offset = "0xC43B64", VA = "0xC43B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xC43250", Offset = "0xC43250", VA = "0xC43250")]
		[DebuggerHidden]
		public <PlayFxOnMirrorIfAnchoredWhenItemLoad>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xC4388C", Offset = "0xC4388C", VA = "0xC4388C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xC43890", Offset = "0xC43890", VA = "0xC43890", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xC43B24", Offset = "0xC43B24", VA = "0xC43B24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40020D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Customization item game objects")]
	public Image icon;

	[Token(Token = "0x40020DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject newGO;

	[Token(Token = "0x40020DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject unlocked;

	[Token(Token = "0x40020DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject disabledUnequip;

	[Token(Token = "0x40020DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject unequip;

	[Token(Token = "0x40020DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject plate;

	[Token(Token = "0x40020DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject PricePlate;

	[Token(Token = "0x40020E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoughtAnimationController newlyBought;

	[Token(Token = "0x40020E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject boughtSparks;

	[Token(Token = "0x40020E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private ItemsDefs.ItemDefinition _item;

	[Token(Token = "0x40020E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool _fxCoolDown;

	[Token(Token = "0x40020E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static CoroutineHandle _playFxOnMirrorIfAnchoredWhenItemLoadCo;

	[Token(Token = "0x17000582")]
	public override ItemsDefs.ItemDefinition Data
	{
		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xC42548", Offset = "0xC42548", VA = "0xC42548", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000583")]
	public UIItemTransitions transitions
	{
		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xC42550", Offset = "0xC42550", VA = "0xC42550")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60020CA")]
	[Address(RVA = "0xC42624", Offset = "0xC42624", VA = "0xC42624", Slot = "9")]
	public override void InitializeItem(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60020CB")]
	[Address(RVA = "0xC427E4", Offset = "0xC427E4", VA = "0xC427E4")]
	private void ToggleSupportItem(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60020CC")]
	[Address(RVA = "0xC42A90", Offset = "0xC42A90", VA = "0xC42A90")]
	private void ToggleMustBeEquippedItem(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60020CD")]
	[Address(RVA = "0xC42C68", Offset = "0xC42C68", VA = "0xC42C68")]
	private void ItemSelected()
	{
	}

	[Token(Token = "0x60020CE")]
	[Address(RVA = "0xC42D10", Offset = "0xC42D10", VA = "0xC42D10")]
	private void EquippeItem()
	{
	}

	[Token(Token = "0x60020CF")]
	[Address(RVA = "0xC42EF4", Offset = "0xC42EF4", VA = "0xC42EF4")]
	private void PlaySound(bool equip)
	{
	}

	[Token(Token = "0x60020D0")]
	[Address(RVA = "0xC4313C", Offset = "0xC4313C", VA = "0xC4313C")]
	private static void PlayFxOnMirrorIfAnchored(CustomizationItemUI item)
	{
	}

	[Token(Token = "0x60020D1")]
	[Address(RVA = "0xC431DC", Offset = "0xC431DC", VA = "0xC431DC")]
	[IteratorStateMachine(typeof(<PlayFxOnMirrorIfAnchoredWhenItemLoad>d__23))]
	private static IEnumerator<float> PlayFxOnMirrorIfAnchoredWhenItemLoad(CustomizationItemUI item)
	{
		return null;
	}

	[Token(Token = "0x60020D2")]
	[Address(RVA = "0xC43278", Offset = "0xC43278", VA = "0xC43278")]
	private void ReSelectItem()
	{
	}

	[Token(Token = "0x60020D3")]
	[Address(RVA = "0xC43284", Offset = "0xC43284", VA = "0xC43284")]
	private void DequippeAndSelectDefault()
	{
	}

	[Token(Token = "0x60020D4")]
	[Address(RVA = "0xC433FC", Offset = "0xC433FC", VA = "0xC433FC")]
	private void DequippeItem()
	{
	}

	[Token(Token = "0x60020D5")]
	[Address(RVA = "0xC43480", Offset = "0xC43480", VA = "0xC43480")]
	private void OnPurchaseTap()
	{
	}

	[Token(Token = "0x60020D6")]
	[Address(RVA = "0xC437F0", Offset = "0xC437F0", VA = "0xC437F0")]
	public CustomizationItemUI()
	{
	}
}
[Token(Token = "0x2000581")]
public class DefaultItemCardUI : MonoBehaviour
{
	[Token(Token = "0x40020EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeEx title;

	[Token(Token = "0x60020E3")]
	[Address(RVA = "0xC44090", Offset = "0xC44090", VA = "0xC44090")]
	public void Show(ItemsDefs.ItemDefinition itemDef)
	{
	}

	[Token(Token = "0x60020E4")]
	[Address(RVA = "0xC4411C", Offset = "0xC4411C", VA = "0xC4411C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60020E5")]
	[Address(RVA = "0xC44140", Offset = "0xC44140", VA = "0xC44140")]
	public DefaultItemCardUI()
	{
	}
}
[Token(Token = "0x2000582")]
public class ItemsInfoPanel : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000583")]
	public class CardBgPair
	{
		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AchievementCardUI card;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject BG;

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xC44F98", Offset = "0xC44F98", VA = "0xC44F98")]
		public CardBgPair()
		{
		}
	}

	[Token(Token = "0x2000584")]
	[CompilerGenerated]
	private sealed class <FreezeFor>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ItemsInfoPanel <>4__this;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float secs;

		[Token(Token = "0x17000586")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0xC45064", Offset = "0xC45064", VA = "0xC45064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000587")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002100")]
			[Address(RVA = "0xC450AC", Offset = "0xC450AC", VA = "0xC450AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xC44B50", Offset = "0xC44B50", VA = "0xC44B50")]
		[DebuggerHidden]
		public <FreezeFor>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xC44FA0", Offset = "0xC44FA0", VA = "0xC44FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xC44FA4", Offset = "0xC44FA4", VA = "0xC44FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xC4506C", Offset = "0xC4506C", VA = "0xC4506C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000586")]
	[CompilerGenerated]
	private sealed class <UseInstantRotationAfterCo>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float secs;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemsInfoPanel <>4__this;

		[Token(Token = "0x17000588")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002107")]
			[Address(RVA = "0xC45254", Offset = "0xC45254", VA = "0xC45254", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000589")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002109")]
			[Address(RVA = "0xC4529C", Offset = "0xC4529C", VA = "0xC4529C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xC44DD8", Offset = "0xC44DD8", VA = "0xC44DD8")]
		[DebuggerHidden]
		public <UseInstantRotationAfterCo>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xC45198", Offset = "0xC45198", VA = "0xC45198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xC4519C", Offset = "0xC4519C", VA = "0xC4519C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xC4525C", Offset = "0xC4525C", VA = "0xC4525C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40020EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ItemsInfoPanel inst;

	[Token(Token = "0x40020EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro title;

	[Token(Token = "0x40020ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject requiredText;

	[Token(Token = "0x40020EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DefaultItemCardUI defaultItem;

	[Token(Token = "0x40020EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PriceItemCardUI priceItem;

	[Token(Token = "0x40020F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject root;

	[Token(Token = "0x40020F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float smoothTime;

	[Token(Token = "0x40020F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float instantRotationTime;

	[Token(Token = "0x40020F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float hideCooldown;

	[Token(Token = "0x40020F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Placement")]
	[Tooltip("one achievement element width")]
	public float width;

	[Token(Token = "0x40020F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Tooltip("one achievement element hight")]
	public float hight;

	[Token(Token = "0x40020F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float minHight;

	[Token(Token = "0x40020F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maxHight;

	[Token(Token = "0x40020F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float minXOffsetAngle;

	[Token(Token = "0x40020F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float maxXOffsetAngle;

	[Token(Token = "0x40020FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float YOffsetCompensationAngle;

	[Token(Token = "0x40020FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool _lockInPlace;

	[Token(Token = "0x40020FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Tooltip("Pair of achievement card and the background")]
	public CardBgPair[] pairs;

	[Token(Token = "0x40020FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _wantToHide;

	[Token(Token = "0x40020FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _instantRotation;

	[Token(Token = "0x40020FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CustomizationItemUI _lastItem;

	[Token(Token = "0x4002100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CoroutineHandle _UseInstantRotationAfterCo;

	[Token(Token = "0x4002101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _initialized;

	[Token(Token = "0x4002102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion _targetRotation;

	[Token(Token = "0x4002103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SmoothQuaternion _smoothRot;

	[Token(Token = "0x60020E6")]
	[Address(RVA = "0xC44148", Offset = "0xC44148", VA = "0xC44148")]
	private void Awake()
	{
	}

	[Token(Token = "0x60020E7")]
	[Address(RVA = "0xC4426C", Offset = "0xC4426C", VA = "0xC4426C")]
	private void Start()
	{
	}

	[Token(Token = "0x60020E8")]
	[Address(RVA = "0xC42134", Offset = "0xC42134", VA = "0xC42134")]
	public void Show(CustomizationItemUI itemUI, int index)
	{
	}

	[Token(Token = "0x60020E9")]
	[Address(RVA = "0xC43BC0", Offset = "0xC43BC0", VA = "0xC43BC0")]
	public void ShowTransactionError()
	{
	}

	[Token(Token = "0x60020EA")]
	[Address(RVA = "0xC43774", Offset = "0xC43774", VA = "0xC43774")]
	public void ShowTransactionProcessing()
	{
	}

	[Token(Token = "0x60020EB")]
	[Address(RVA = "0xC44A60", Offset = "0xC44A60", VA = "0xC44A60")]
	[IteratorStateMachine(typeof(<FreezeFor>d__27))]
	private IEnumerator<float> FreezeFor(float secs)
	{
		return null;
	}

	[Token(Token = "0x60020EC")]
	[Address(RVA = "0xC43E28", Offset = "0xC43E28", VA = "0xC43E28")]
	public void ShowPrice(ItemsDefs.ItemDefinition item)
	{
	}

	[Token(Token = "0x60020ED")]
	[Address(RVA = "0xC44554", Offset = "0xC44554", VA = "0xC44554")]
	private void ShowRequiredAchievements(ItemsDefs.ItemDefinition def)
	{
	}

	[Token(Token = "0x60020EE")]
	[Address(RVA = "0xC44290", Offset = "0xC44290", VA = "0xC44290")]
	private void ShowDefaultItem(ItemsDefs.ItemDefinition def)
	{
	}

	[Token(Token = "0x60020EF")]
	[Address(RVA = "0xC442E4", Offset = "0xC442E4", VA = "0xC442E4")]
	private void SetAchievemetnsCards([Optional] Achievement[] achs)
	{
	}

	[Token(Token = "0x60020F0")]
	[Address(RVA = "0xC42334", Offset = "0xC42334", VA = "0xC42334")]
	public void Hide()
	{
	}

	[Token(Token = "0x60020F1")]
	[Address(RVA = "0xC44CB8", Offset = "0xC44CB8", VA = "0xC44CB8")]
	private void HideImeddiate()
	{
	}

	[Token(Token = "0x60020F2")]
	[Address(RVA = "0xC44D54", Offset = "0xC44D54", VA = "0xC44D54")]
	[IteratorStateMachine(typeof(<UseInstantRotationAfterCo>d__35))]
	private IEnumerator<float> UseInstantRotationAfterCo(float secs)
	{
		return null;
	}

	[Token(Token = "0x60020F3")]
	[Address(RVA = "0xC4472C", Offset = "0xC4472C", VA = "0xC4472C")]
	private void _SetTargetRotation(CustomizationItemUI itemUI, int numOfRequiredAchievemens, int index)
	{
	}

	[Token(Token = "0x60020F4")]
	[Address(RVA = "0xC441A8", Offset = "0xC441A8", VA = "0xC441A8")]
	private void Init()
	{
	}

	[Token(Token = "0x60020F5")]
	[Address(RVA = "0xC44E00", Offset = "0xC44E00", VA = "0xC44E00")]
	private void Update()
	{
	}

	[Token(Token = "0x60020F6")]
	[Address(RVA = "0xC4492C", Offset = "0xC4492C", VA = "0xC4492C")]
	private void UpdateRotation()
	{
	}

	[Token(Token = "0x60020F7")]
	[Address(RVA = "0xC44B9C", Offset = "0xC44B9C", VA = "0xC44B9C")]
	private void SetCard(Achievement ach, AchievementCardUI card, GameObject bg)
	{
	}

	[Token(Token = "0x60020F8")]
	[Address(RVA = "0xC44E10", Offset = "0xC44E10", VA = "0xC44E10")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60020F9")]
	[Address(RVA = "0xC44F70", Offset = "0xC44F70", VA = "0xC44F70")]
	public ItemsInfoPanel()
	{
	}
}
[Token(Token = "0x2000587")]
public class PriceItemCardUI : MonoBehaviour
{
	[Token(Token = "0x4002110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizeFormatted priceFormatted;

	[Token(Token = "0x4002111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject processing;

	[Token(Token = "0x4002112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject error;

	[Token(Token = "0x4002113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject purchased;

	[Token(Token = "0x600210A")]
	[Address(RVA = "0xC443B4", Offset = "0xC443B4", VA = "0xC443B4")]
	public void Show(ItemsDefs.ItemDefinition itemDef)
	{
	}

	[Token(Token = "0x600210B")]
	[Address(RVA = "0xC44AE4", Offset = "0xC44AE4", VA = "0xC44AE4")]
	public void ShowProcessing()
	{
	}

	[Token(Token = "0x600210C")]
	[Address(RVA = "0xC449F4", Offset = "0xC449F4", VA = "0xC449F4")]
	public void ShowError()
	{
	}

	[Token(Token = "0x600210D")]
	[Address(RVA = "0xC44B78", Offset = "0xC44B78", VA = "0xC44B78")]
	public void Hide()
	{
	}

	[Token(Token = "0x600210E")]
	[Address(RVA = "0xC452F8", Offset = "0xC452F8", VA = "0xC452F8")]
	public PriceItemCardUI()
	{
	}
}
[Token(Token = "0x2000588")]
public class SupportItemsShelf : CustomizationItemsShelf
{
	[NonSerialized]
	[Token(Token = "0x4002114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public new ItemsDefs.ItemShelf itemsType;

	[Token(Token = "0x4002115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject supportText;

	[Token(Token = "0x600210F")]
	[Address(RVA = "0xC62364", Offset = "0xC62364", VA = "0xC62364")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6002110")]
	[Address(RVA = "0xC62370", Offset = "0xC62370", VA = "0xC62370", Slot = "8")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6002111")]
	[Address(RVA = "0xC624E0", Offset = "0xC624E0", VA = "0xC624E0")]
	public SupportItemsShelf()
	{
	}
}
[Token(Token = "0x2000589")]
public class RotateAvatarKnob : KnobBase
{
	[Token(Token = "0x6002112")]
	[Address(RVA = "0xC624F0", Offset = "0xC624F0", VA = "0xC624F0", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6002113")]
	[Address(RVA = "0xC62588", Offset = "0xC62588", VA = "0xC62588", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6002114")]
	[Address(RVA = "0xC625CC", Offset = "0xC625CC", VA = "0xC625CC", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6002115")]
	[Address(RVA = "0xC6269C", Offset = "0xC6269C", VA = "0xC6269C")]
	public RotateAvatarKnob()
	{
	}
}
[Token(Token = "0x200058A")]
public static class NewCoOp
{
	[Token(Token = "0x1700058A")]
	public static bool PlayerSeen
	{
		[Token(Token = "0x6002116")]
		[Address(RVA = "0xC626A4", Offset = "0xC626A4", VA = "0xC626A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002117")]
		[Address(RVA = "0xC62780", Offset = "0xC62780", VA = "0xC62780")]
		set
		{
		}
	}
}
[Token(Token = "0x200058B")]
public static class NewLevelEditor
{
	[Token(Token = "0x1700058B")]
	public static bool PlayerSeenFlakh
	{
		[Token(Token = "0x6002118")]
		[Address(RVA = "0xC6287C", Offset = "0xC6287C", VA = "0xC6287C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002119")]
		[Address(RVA = "0xC6293C", Offset = "0xC6293C", VA = "0xC6293C")]
		set
		{
		}
	}

	[Token(Token = "0x1700058C")]
	public static bool PlayerOpenedLE
	{
		[Token(Token = "0x600211A")]
		[Address(RVA = "0xC62A44", Offset = "0xC62A44", VA = "0xC62A44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600211B")]
		[Address(RVA = "0xC62B04", Offset = "0xC62B04", VA = "0xC62B04")]
		set
		{
		}
	}
}
[Token(Token = "0x200058C")]
public class OptionsUI : MonoBehaviour
{
	[Token(Token = "0x200058D")]
	public enum Context
	{
		[Token(Token = "0x4002127")]
		MainMenu,
		[Token(Token = "0x4002128")]
		Arena,
		[Token(Token = "0x4002129")]
		Tutorial,
		[Token(Token = "0x400212A")]
		Editor,
		[Token(Token = "0x400212B")]
		EditorPlay,
		[Token(Token = "0x400212C")]
		EditorPublicPlay
	}

	[Token(Token = "0x200058E")]
	public enum ButtonId
	{
		[Token(Token = "0x400212E")]
		Settings,
		[Token(Token = "0x400212F")]
		HowToPlay,
		[Token(Token = "0x4002130")]
		Restart,
		[Token(Token = "0x4002131")]
		Leave,
		[Token(Token = "0x4002132")]
		SkipTutorial,
		[Token(Token = "0x4002133")]
		Edit,
		[Token(Token = "0x4002134")]
		Browse
	}

	[Serializable]
	[Token(Token = "0x200058F")]
	public class SerializableButtonId : SerializableEnum<ButtonId>
	{
		[Token(Token = "0x6002135")]
		[Address(RVA = "0xC648A0", Offset = "0xC648A0", VA = "0xC648A0")]
		public SerializableButtonId()
		{
		}
	}

	[Token(Token = "0x2000590")]
	public delegate void OnDone();

	[Token(Token = "0x4002116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SerializableButtonId[] mainMenuButtons;

	[Token(Token = "0x4002117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SerializableButtonId[] arenaButtons;

	[Token(Token = "0x4002118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SerializableButtonId[] tutorialButtons;

	[Token(Token = "0x4002119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SerializableButtonId[] editorButtons;

	[Token(Token = "0x400211A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SerializableButtonId[] editorLocalPlayButtons;

	[Token(Token = "0x400211B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SerializableButtonId[] editorPubliclPlayButtons;

	[Token(Token = "0x400211C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public DynamicListMenu dynamicListMenu;

	[Token(Token = "0x400211D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OptionsUI inst;

	[Token(Token = "0x400211E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x400211F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _shown;

	[Token(Token = "0x4002120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Context _context;

	[Token(Token = "0x4002121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _canLeaveMatch;

	[Token(Token = "0x4002122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _canRestartGame;

	[Token(Token = "0x4002123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool _canEdit;

	[Token(Token = "0x4002124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<ButtonId, RectTransform> _buttons;

	[Token(Token = "0x4002125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private OnDone _onDone;

	[Token(Token = "0x1700058D")]
	public bool shown
	{
		[Token(Token = "0x600211C")]
		[Address(RVA = "0xC62C0C", Offset = "0xC62C0C", VA = "0xC62C0C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600211D")]
	[Address(RVA = "0xC62C14", Offset = "0xC62C14", VA = "0xC62C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600211E")]
	[Address(RVA = "0xC62D80", Offset = "0xC62D80", VA = "0xC62D80")]
	private void Start()
	{
	}

	[Token(Token = "0x600211F")]
	[Address(RVA = "0xC62E04", Offset = "0xC62E04", VA = "0xC62E04")]
	public void showMainMenu(OnDone onDone)
	{
	}

	[Token(Token = "0x6002120")]
	[Address(RVA = "0xC63194", Offset = "0xC63194", VA = "0xC63194")]
	public void showArena(OnDone onDone, bool canLeaveMatch, bool canRestartGame)
	{
	}

	[Token(Token = "0x6002121")]
	[Address(RVA = "0xC632D4", Offset = "0xC632D4", VA = "0xC632D4")]
	public void showTutorial(OnDone onDone)
	{
	}

	[Token(Token = "0x6002122")]
	[Address(RVA = "0xC62E1C", Offset = "0xC62E1C", VA = "0xC62E1C")]
	private void show(Context context, OnDone onDone, bool canLeaveMatch, bool canRestartGame, bool canEdit)
	{
	}

	[Token(Token = "0x6002123")]
	[Address(RVA = "0xC63770", Offset = "0xC63770", VA = "0xC63770")]
	public void hide()
	{
	}

	[Token(Token = "0x6002124")]
	[Address(RVA = "0xC632EC", Offset = "0xC632EC", VA = "0xC632EC")]
	private void createButtons()
	{
	}

	[Token(Token = "0x6002125")]
	[Address(RVA = "0xC639E0", Offset = "0xC639E0", VA = "0xC639E0")]
	private void destroyButtons()
	{
	}

	[Token(Token = "0x6002126")]
	[Address(RVA = "0xC63C28", Offset = "0xC63C28", VA = "0xC63C28")]
	public void hideTemporarily()
	{
	}

	[Token(Token = "0x6002127")]
	[Address(RVA = "0xC63C30", Offset = "0xC63C30", VA = "0xC63C30")]
	public void showAgain()
	{
	}

	[Token(Token = "0x6002128")]
	[Address(RVA = "0xC62D9C", Offset = "0xC62D9C", VA = "0xC62D9C")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x6002129")]
	[Address(RVA = "0xC63C38", Offset = "0xC63C38", VA = "0xC63C38")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x600212A")]
	[Address(RVA = "0xC63C3C", Offset = "0xC63C3C", VA = "0xC63C3C")]
	private void onBack()
	{
	}

	[Token(Token = "0x600212B")]
	[Address(RVA = "0xC63C40", Offset = "0xC63C40", VA = "0xC63C40")]
	public void onClickSettings()
	{
	}

	[Token(Token = "0x600212C")]
	[Address(RVA = "0xC64338", Offset = "0xC64338", VA = "0xC64338")]
	private void onSettingsDone()
	{
	}

	[Token(Token = "0x600212D")]
	[Address(RVA = "0xC64340", Offset = "0xC64340", VA = "0xC64340")]
	public void onClickHowToPlay()
	{
	}

	[Token(Token = "0x600212E")]
	[Address(RVA = "0xC64400", Offset = "0xC64400", VA = "0xC64400")]
	private void onHowToPlayDone()
	{
	}

	[Token(Token = "0x600212F")]
	[Address(RVA = "0xC64408", Offset = "0xC64408", VA = "0xC64408")]
	public void onClickLeaveGame()
	{
	}

	[Token(Token = "0x6002130")]
	[Address(RVA = "0xC644D4", Offset = "0xC644D4", VA = "0xC644D4")]
	public void onClickRestartGame()
	{
	}

	[Token(Token = "0x6002131")]
	[Address(RVA = "0xC6452C", Offset = "0xC6452C", VA = "0xC6452C")]
	public void onClickBackToMainMenu()
	{
	}

	[Token(Token = "0x6002132")]
	[Address(RVA = "0xC646FC", Offset = "0xC646FC", VA = "0xC646FC")]
	private void onClickSkipTutorial()
	{
	}

	[Token(Token = "0x6002133")]
	[Address(RVA = "0xC6475C", Offset = "0xC6475C", VA = "0xC6475C")]
	public void onClickEditOrBrows()
	{
	}

	[Token(Token = "0x6002134")]
	[Address(RVA = "0xC64898", Offset = "0xC64898", VA = "0xC64898")]
	public OptionsUI()
	{
	}
}
[Token(Token = "0x2000591")]
public class PageButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000592")]
	public class Backgrounds
	{
		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject left;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject middle;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject right;

		[Token(Token = "0x600213C")]
		[Address(RVA = "0xC64A78", Offset = "0xC64A78", VA = "0xC64A78")]
		public Backgrounds()
		{
		}
	}

	[Token(Token = "0x2000593")]
	public enum Side
	{
		[Token(Token = "0x400213A")]
		Left,
		[Token(Token = "0x400213B")]
		Middle,
		[Token(Token = "0x400213C")]
		Right
	}

	[Token(Token = "0x4002135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Backgrounds backgrounds;

	[Token(Token = "0x600213A")]
	[Address(RVA = "0xC649F4", Offset = "0xC649F4", VA = "0xC649F4")]
	public void setSide(Side side)
	{
	}

	[Token(Token = "0x600213B")]
	[Address(RVA = "0xC64A70", Offset = "0xC64A70", VA = "0xC64A70")]
	public PageButton()
	{
	}
}
[Token(Token = "0x2000594")]
public class PersonalMusicToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x600213D")]
	[Address(RVA = "0xC64A80", Offset = "0xC64A80", VA = "0xC64A80", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600213E")]
	[Address(RVA = "0xC64B24", Offset = "0xC64B24", VA = "0xC64B24", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x600213F")]
	[Address(RVA = "0xC64BE0", Offset = "0xC64BE0", VA = "0xC64BE0", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x6002140")]
	[Address(RVA = "0xC64F28", Offset = "0xC64F28", VA = "0xC64F28")]
	private void resetSwitchIfCantUsePersonalTracks()
	{
	}

	[Token(Token = "0x6002141")]
	[Address(RVA = "0xC64FB8", Offset = "0xC64FB8", VA = "0xC64FB8", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x6002142")]
	[Address(RVA = "0xC65020", Offset = "0xC65020", VA = "0xC65020")]
	public PersonalMusicToggleSwitch()
	{
	}
}
[Token(Token = "0x2000595")]
public class PINKnob : KnobBase
{
	[Token(Token = "0x400213D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int _digit;

	[Token(Token = "0x1700058E")]
	public int digit
	{
		[Token(Token = "0x6002143")]
		[Address(RVA = "0xC65048", Offset = "0xC65048", VA = "0xC65048")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002144")]
		[Address(RVA = "0xC65050", Offset = "0xC65050", VA = "0xC65050")]
		set
		{
		}
	}

	[Token(Token = "0x6002145")]
	[Address(RVA = "0xC65068", Offset = "0xC65068", VA = "0xC65068", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x6002146")]
	[Address(RVA = "0xC6507C", Offset = "0xC6507C", VA = "0xC6507C", Slot = "8")]
	public override void onAmplitudeChanged(float _, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x6002147")]
	[Address(RVA = "0xC65184", Offset = "0xC65184", VA = "0xC65184", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x6002148")]
	[Address(RVA = "0xC651AC", Offset = "0xC651AC", VA = "0xC651AC", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6002149")]
	[Address(RVA = "0xC651FC", Offset = "0xC651FC", VA = "0xC651FC")]
	public PINKnob()
	{
	}
}
[Token(Token = "0x2000596")]
public class PlayerNamesFlakh : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000597")]
	public class PlayerObjects
	{
		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject root;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI name;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image icon;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject paused;

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xC656C0", Offset = "0xC656C0", VA = "0xC656C0")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x2000598")]
	[CompilerGenerated]
	private sealed class <showAndHide>d__5 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerNamesFlakh <>4__this;

		[Token(Token = "0x1700058F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xC658B8", Offset = "0xC658B8", VA = "0xC658B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000590")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002157")]
			[Address(RVA = "0xC65900", Offset = "0xC65900", VA = "0xC65900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xC652E8", Offset = "0xC652E8", VA = "0xC652E8")]
		[DebuggerHidden]
		public <showAndHide>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xC656C8", Offset = "0xC656C8", VA = "0xC656C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xC656CC", Offset = "0xC656CC", VA = "0xC656CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0xC658C0", Offset = "0xC658C0", VA = "0xC658C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400213E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float showDelay;

	[Token(Token = "0x400213F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerObjects player1;

	[Token(Token = "0x4002140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerObjects player2;

	[Token(Token = "0x600214A")]
	[Address(RVA = "0xC6520C", Offset = "0xC6520C", VA = "0xC6520C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600214B")]
	[Address(RVA = "0xC65274", Offset = "0xC65274", VA = "0xC65274")]
	[IteratorStateMachine(typeof(<showAndHide>d__5))]
	private IEnumerator<float> showAndHide()
	{
		return null;
	}

	[Token(Token = "0x600214C")]
	[Address(RVA = "0xC65310", Offset = "0xC65310", VA = "0xC65310")]
	private void show()
	{
	}

	[Token(Token = "0x600214D")]
	[Address(RVA = "0xC654B0", Offset = "0xC654B0", VA = "0xC654B0")]
	private void hide()
	{
	}

	[Token(Token = "0x600214E")]
	[Address(RVA = "0xC65540", Offset = "0xC65540", VA = "0xC65540")]
	private void Update()
	{
	}

	[Token(Token = "0x600214F")]
	[Address(RVA = "0xC65668", Offset = "0xC65668", VA = "0xC65668")]
	public PlayerNamesFlakh()
	{
	}
}
[Token(Token = "0x2000599")]
public class PlayerProfileUI : Area
{
	[Serializable]
	[Token(Token = "0x200059A")]
	public class PlayerObjects
	{
		[Serializable]
		[Token(Token = "0x200059B")]
		public class Arcade
		{
			[Serializable]
			[Token(Token = "0x200059C")]
			public class Main
			{
				[Token(Token = "0x4002163")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] bestScoreTexts;

				[Token(Token = "0x6002176")]
				[Address(RVA = "0xC68854", Offset = "0xC68854", VA = "0xC68854")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x200059D")]
			public class Stats
			{
				[Token(Token = "0x4002164")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro rank;

				[Token(Token = "0x4002165")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numGamesPlayed;

				[Token(Token = "0x4002166")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x6002177")]
				[Address(RVA = "0xC6885C", Offset = "0xC6885C", VA = "0xC6885C")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x6002175")]
			[Address(RVA = "0xC6884C", Offset = "0xC6884C", VA = "0xC6884C")]
			public Arcade()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200059E")]
		public class Solo
		{
			[Serializable]
			[Token(Token = "0x200059F")]
			public class Main
			{
				[Token(Token = "0x400216A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] starsEarnedTexts;

				[Token(Token = "0x400216B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numPotentialStars;

				[Token(Token = "0x6002179")]
				[Address(RVA = "0xC6886C", Offset = "0xC6886C", VA = "0xC6886C")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005A0")]
			public class Stats
			{
				[Token(Token = "0x400216C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro num1Stars;

				[Token(Token = "0x400216D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro num2Stars;

				[Token(Token = "0x400216E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro num3Stars;

				[Token(Token = "0x400216F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x600217A")]
				[Address(RVA = "0xC68874", Offset = "0xC68874", VA = "0xC68874")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x6002178")]
			[Address(RVA = "0xC68864", Offset = "0xC68864", VA = "0xC68864")]
			public Solo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A1")]
		public class Versus
		{
			[Serializable]
			[Token(Token = "0x20005A2")]
			public class Main
			{
				[Token(Token = "0x4002173")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] skillRatingTexts;

				[Token(Token = "0x600217C")]
				[Address(RVA = "0xC68884", Offset = "0xC68884", VA = "0xC68884")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005A3")]
			public class Stats
			{
				[Token(Token = "0x4002174")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro rank;

				[Token(Token = "0x4002175")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numGamesWon;

				[Token(Token = "0x4002176")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x600217D")]
				[Address(RVA = "0xC6888C", Offset = "0xC6888C", VA = "0xC6888C")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x600217B")]
			[Address(RVA = "0xC6887C", Offset = "0xC6887C", VA = "0xC6887C")]
			public Versus()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A4")]
		public class CoOp
		{
			[Serializable]
			[Token(Token = "0x20005A5")]
			public class Main
			{
				[Token(Token = "0x400217A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro[] bestScoreTexts;

				[Token(Token = "0x600217F")]
				[Address(RVA = "0xC6889C", Offset = "0xC6889C", VA = "0xC6889C")]
				public Main()
				{
				}
			}

			[Serializable]
			[Token(Token = "0x20005A6")]
			public class Stats
			{
				[Token(Token = "0x400217B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public TextMeshPro rank;

				[Token(Token = "0x400217C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public TextMeshPro numGamesPlayed;

				[Token(Token = "0x400217D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public TextMeshPro hoursPlayed;

				[Token(Token = "0x6002180")]
				[Address(RVA = "0xC688A4", Offset = "0xC688A4", VA = "0xC688A4")]
				public Stats()
				{
				}
			}

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Main main;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Stats stats;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LocalizeFormatted xp;

			[Token(Token = "0x600217E")]
			[Address(RVA = "0xC68894", Offset = "0xC68894", VA = "0xC68894")]
			public CoOp()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A7")]
		public class Level
		{
			[Serializable]
			[Token(Token = "0x20005A8")]
			public class Medals
			{
				[Token(Token = "0x4002181")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public GameObject unrated;

				[Token(Token = "0x4002182")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GameObject noob;

				[Token(Token = "0x4002183")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public GameObject underdog;

				[Token(Token = "0x4002184")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public GameObject risingStar;

				[Token(Token = "0x4002185")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public GameObject baller;

				[Token(Token = "0x4002186")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public GameObject master;

				[Token(Token = "0x4002187")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public GameObject racketLord;

				[Token(Token = "0x4002188")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
				public GameObject ballBuster;

				[Token(Token = "0x6002182")]
				[Address(RVA = "0xC688B4", Offset = "0xC688B4", VA = "0xC688B4")]
				public Medals()
				{
				}
			}

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro[] xpTexts;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Localize levelName;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Medals medals;

			[Token(Token = "0x6002181")]
			[Address(RVA = "0xC688AC", Offset = "0xC688AC", VA = "0xC688AC")]
			public Level()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005A9")]
		public class ProgressBar
		{
			[Serializable]
			[Token(Token = "0x20005AA")]
			public class Levels
			{
				[Serializable]
				[Token(Token = "0x20005AB")]
				public class LevelObjs
				{
					[Token(Token = "0x4002194")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
					public UIItemTransitions transitions;

					[Token(Token = "0x4002195")]
					[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
					public TextMeshPro requiredXp;

					[Token(Token = "0x6002185")]
					[Address(RVA = "0xC688D4", Offset = "0xC688D4", VA = "0xC688D4")]
					public LevelObjs()
					{
					}
				}

				[Token(Token = "0x400218D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public LevelObjs noob;

				[Token(Token = "0x400218E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public LevelObjs underdog;

				[Token(Token = "0x400218F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public LevelObjs risingStar;

				[Token(Token = "0x4002190")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public LevelObjs baller;

				[Token(Token = "0x4002191")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public LevelObjs master;

				[Token(Token = "0x4002192")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
				public LevelObjs racketLord;

				[Token(Token = "0x4002193")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
				public LevelObjs ballBuster;

				[Token(Token = "0x6002184")]
				[Address(RVA = "0xC688CC", Offset = "0xC688CC", VA = "0xC688CC")]
				public Levels()
				{
				}
			}

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform arrow;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float arrowAnimationLength;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RectTransform verticalAxis;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Levels levels;

			[Token(Token = "0x6002183")]
			[Address(RVA = "0xC688BC", Offset = "0xC688BC", VA = "0xC688BC")]
			public ProgressBar()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005AC")]
		public class Stats
		{
			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TextMeshPro totalTimePlayed;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro totalDamage;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshPro numTargetsDestroyed;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextMeshPro maxHitStreak;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public TextMeshPro maxPointsPerShot;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public TextMeshPro hitAccuracy;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TextMeshPro avgPointsPerShot;

			[Token(Token = "0x6002186")]
			[Address(RVA = "0xC688DC", Offset = "0xC688DC", VA = "0xC688DC")]
			public Stats()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005AD")]
		public class Achievements
		{
			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AchievementListUI achievementListUI;

			[Token(Token = "0x6002187")]
			[Address(RVA = "0xC688E4", Offset = "0xC688E4", VA = "0xC688E4")]
			public Achievements()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005AE")]
		public class NameAndImage
		{
			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image playerImage;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TextMeshPro playerName;

			[Token(Token = "0x6002188")]
			[Address(RVA = "0xC688EC", Offset = "0xC688EC", VA = "0xC688EC")]
			public NameAndImage()
			{
			}
		}

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Arcade arcade;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arcade arcadeNightmare;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Solo solo;

		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Versus versus;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CoOp coOp;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Level level;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ProgressBar progressBar;

		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Stats stats;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Achievements achievements;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UIItemTransitions customizationsNewBadge;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public NameAndImage nameAndImage;

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xC68844", Offset = "0xC68844", VA = "0xC68844")]
		public PlayerObjects()
		{
		}
	}

	[Token(Token = "0x20005B0")]
	[CompilerGenerated]
	private sealed class <WaitForOnlineProfile>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfileUI <>4__this;

		[Token(Token = "0x17000597")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600218F")]
			[Address(RVA = "0xC68B18", Offset = "0xC68B18", VA = "0xC68B18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000598")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002191")]
			[Address(RVA = "0xC68B60", Offset = "0xC68B60", VA = "0xC68B60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0xC65DAC", Offset = "0xC65DAC", VA = "0xC65DAC")]
		[DebuggerHidden]
		public <WaitForOnlineProfile>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0xC689C0", Offset = "0xC689C0", VA = "0xC689C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0xC689C4", Offset = "0xC689C4", VA = "0xC689C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0xC68B20", Offset = "0xC68B20", VA = "0xC68B20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B1")]
	[CompilerGenerated]
	private sealed class <PopulatePlayerNameAndSpriteCo>d__36 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40021A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerProfileUI <>4__this;

		[Token(Token = "0x17000599")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002195")]
			[Address(RVA = "0xC68D64", Offset = "0xC68D64", VA = "0xC68D64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700059A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002197")]
			[Address(RVA = "0xC68DAC", Offset = "0xC68DAC", VA = "0xC68DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0xC681AC", Offset = "0xC681AC", VA = "0xC681AC")]
		[DebuggerHidden]
		public <PopulatePlayerNameAndSpriteCo>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0xC68BBC", Offset = "0xC68BBC", VA = "0xC68BBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0xC68BC0", Offset = "0xC68BC0", VA = "0xC68BC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0xC68D6C", Offset = "0xC68D6C", VA = "0xC68D6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005B2")]
	[CompilerGenerated]
	private sealed class <ArrowAnimation>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerProfileUI <>4__this;

		[Token(Token = "0x40021AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float relXp;

		[Token(Token = "0x40021AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <time>5__2;

		[Token(Token = "0x40021AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <t>5__3;

		[Token(Token = "0x40021AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <tVel>5__4;

		[Token(Token = "0x1700059B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0xC68FA4", Offset = "0xC68FA4", VA = "0xC68FA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700059C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600219D")]
			[Address(RVA = "0xC68FEC", Offset = "0xC68FEC", VA = "0xC68FEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0xC681D4", Offset = "0xC681D4", VA = "0xC681D4")]
		[DebuggerHidden]
		public <ArrowAnimation>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xC68E08", Offset = "0xC68E08", VA = "0xC68E08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xC68E0C", Offset = "0xC68E0C", VA = "0xC68E0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0xC68FAC", Offset = "0xC68FAC", VA = "0xC68FAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayerObjects playerObjects;

	[Token(Token = "0x4002149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CustomizationsUI customizations;

	[Token(Token = "0x400214A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MirrorArea mirrorArea;

	[Token(Token = "0x400214B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerProfileUI inst;

	[Token(Token = "0x400214C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _totalTimePlayedFormat;

	[Token(Token = "0x400214D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _hitAccuracyFormat;

	[Token(Token = "0x400214E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _maxPointsPerShotFormat;

	[Token(Token = "0x400214F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _maxHitStreakFormat;

	[Token(Token = "0x4002150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _totalDamageFormat;

	[Token(Token = "0x4002151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _numTargetsDestroyedFormat;

	[Token(Token = "0x4002152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _avgPointsPerShotFormat;

	[Token(Token = "0x4002153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	internal bool customizationsClick;

	[Token(Token = "0x4002154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private CoroutineHandle _waitForOnlineProfileCo;

	[Token(Token = "0x17000591")]
	public bool IsAllShowingOrShown
	{
		[Token(Token = "0x6002158")]
		[Address(RVA = "0xC6595C", Offset = "0xC6595C", VA = "0xC6595C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000592")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002159")]
		[Address(RVA = "0xC659A8", Offset = "0xC659A8", VA = "0xC659A8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000593")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600215A")]
		[Address(RVA = "0xC659B0", Offset = "0xC659B0", VA = "0xC659B0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000594")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600215B")]
		[Address(RVA = "0xC659B8", Offset = "0xC659B8", VA = "0xC659B8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000595")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600215C")]
		[Address(RVA = "0xC659C0", Offset = "0xC659C0", VA = "0xC659C0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000596")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600215D")]
		[Address(RVA = "0xC659C8", Offset = "0xC659C8", VA = "0xC659C8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600215E")]
	[Address(RVA = "0xC659D0", Offset = "0xC659D0", VA = "0xC659D0", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600215F")]
	[Address(RVA = "0xC65BD8", Offset = "0xC65BD8", VA = "0xC65BD8", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x6002160")]
	[Address(RVA = "0xC65C5C", Offset = "0xC65C5C", VA = "0xC65C5C")]
	private void PopulateWhenOnlineIsProfileReady()
	{
	}

	[Token(Token = "0x6002161")]
	[Address(RVA = "0xC65D38", Offset = "0xC65D38", VA = "0xC65D38")]
	[IteratorStateMachine(typeof(<WaitForOnlineProfile>d__29))]
	private IEnumerator<float> WaitForOnlineProfile()
	{
		return null;
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0xC65DD4", Offset = "0xC65DD4", VA = "0xC65DD4", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x6002163")]
	[Address(RVA = "0xC65E98", Offset = "0xC65E98", VA = "0xC65E98", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002164")]
	[Address(RVA = "0xC65F9C", Offset = "0xC65F9C", VA = "0xC65F9C")]
	private void populate()
	{
	}

	[Token(Token = "0x6002165")]
	[Address(RVA = "0xC6793C", Offset = "0xC6793C", VA = "0xC6793C")]
	private void PopulateArcade()
	{
	}

	[Token(Token = "0x6002166")]
	[Address(RVA = "0xC67FB8", Offset = "0xC67FB8", VA = "0xC67FB8")]
	private void SetGameModeScoreText(LocalizeFormatted loc, int? score)
	{
	}

	[Token(Token = "0x6002167")]
	[Address(RVA = "0xC65BF4", Offset = "0xC65BF4", VA = "0xC65BF4")]
	public void PopulatePlayerNameAndSprite()
	{
	}

	[Token(Token = "0x6002168")]
	[Address(RVA = "0xC68138", Offset = "0xC68138", VA = "0xC68138")]
	[IteratorStateMachine(typeof(<PopulatePlayerNameAndSpriteCo>d__36))]
	private IEnumerator<float> PopulatePlayerNameAndSpriteCo()
	{
		return null;
	}

	[Token(Token = "0x6002169")]
	[Address(RVA = "0xC680B4", Offset = "0xC680B4", VA = "0xC680B4")]
	[IteratorStateMachine(typeof(<ArrowAnimation>d__37))]
	private IEnumerator ArrowAnimation(float relXp)
	{
		return null;
	}

	[Token(Token = "0x600216A")]
	[Address(RVA = "0xC681FC", Offset = "0xC681FC", VA = "0xC681FC")]
	private void SetArrowPos(float relPos)
	{
	}

	[Token(Token = "0x600216B")]
	[Address(RVA = "0xC682C0", Offset = "0xC682C0", VA = "0xC682C0", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600216C")]
	[Address(RVA = "0xC68418", Offset = "0xC68418", VA = "0xC68418", Slot = "18")]
	protected override void onMenuButton()
	{
	}

	[Token(Token = "0x600216D")]
	[Address(RVA = "0xC6842C", Offset = "0xC6842C", VA = "0xC6842C")]
	public void OnCustomizeClick()
	{
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0xC68530", Offset = "0xC68530", VA = "0xC68530")]
	public void OnAchievementsReloadedAfterProfileOnline()
	{
	}

	[Token(Token = "0x600216F")]
	[Address(RVA = "0xC685AC", Offset = "0xC685AC", VA = "0xC685AC")]
	public PlayerProfileUI()
	{
	}
}
[Token(Token = "0x20005B3")]
public class AvatarCustomizationsPopup : BaseMessagePopup, ISingleton
{
	[Token(Token = "0x40021AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform crown;

	[Token(Token = "0x40021B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float crownRotationSpeed;

	[Token(Token = "0x40021B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool forceShow;

	[Token(Token = "0x40021B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AvatarCustomizationsPopup inst;

	[Token(Token = "0x40021B3")]
	private const string popUpSeenByUserKey = "avatar_custom_beta_seen";

	[Token(Token = "0x1700059D")]
	public bool popUpSeenByUser
	{
		[Token(Token = "0x600219F")]
		[Address(RVA = "0xC690B4", Offset = "0xC690B4", VA = "0xC690B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xC69068", Offset = "0xC69068", VA = "0xC69068")]
		set
		{
		}
	}

	[Token(Token = "0x1700059E")]
	public bool needToShow
	{
		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xC69104", Offset = "0xC69104", VA = "0xC69104")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600219E")]
	[Address(RVA = "0xC68FF4", Offset = "0xC68FF4", VA = "0xC68FF4", Slot = "22")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x60021A2")]
	[Address(RVA = "0xC6911C", Offset = "0xC6911C", VA = "0xC6911C")]
	private void Update()
	{
	}

	[Token(Token = "0x60021A3")]
	[Address(RVA = "0xC6915C", Offset = "0xC6915C", VA = "0xC6915C", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021A4")]
	[Address(RVA = "0xC691E8", Offset = "0xC691E8", VA = "0xC691E8")]
	public AvatarCustomizationsPopup()
	{
	}
}
[Token(Token = "0x20005B4")]
public abstract class BaseMessagePopup : Area
{
	[Token(Token = "0x1700059F")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60021A5")]
		[Address(RVA = "0xC69200", Offset = "0xC69200", VA = "0xC69200", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005A0")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xC69208", Offset = "0xC69208", VA = "0xC69208", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005A1")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xC69210", Offset = "0xC69210", VA = "0xC69210", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005A2")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xC69218", Offset = "0xC69218", VA = "0xC69218", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005A3")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xC69220", Offset = "0xC69220", VA = "0xC69220", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60021AA")]
	[Address(RVA = "0xC69228", Offset = "0xC69228", VA = "0xC69228", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60021AB")]
	[Address(RVA = "0xC69178", Offset = "0xC69178", VA = "0xC69178", Slot = "21")]
	public virtual void onDoneClicked()
	{
	}

	[Token(Token = "0x60021AC")]
	[Address(RVA = "0xC692E0", Offset = "0xC692E0", VA = "0xC692E0", Slot = "18")]
	protected override void onMenuButton()
	{
	}

	[Token(Token = "0x60021AD")]
	[Address(RVA = "0xC692E4", Offset = "0xC692E4", VA = "0xC692E4", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x60021AE")]
	[Address(RVA = "0xC691F8", Offset = "0xC691F8", VA = "0xC691F8")]
	protected BaseMessagePopup()
	{
	}
}
[Token(Token = "0x20005B5")]
public class LevelEditorPopup : BaseMessagePopup
{
	[Token(Token = "0x40021B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LevelEditorPopup inst;

	[Token(Token = "0x170005A4")]
	public bool needToShow
	{
		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xC6934C", Offset = "0xC6934C", VA = "0xC6934C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60021AF")]
	[Address(RVA = "0xC692E8", Offset = "0xC692E8", VA = "0xC692E8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021B1")]
	[Address(RVA = "0xC69364", Offset = "0xC69364", VA = "0xC69364", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021B2")]
	[Address(RVA = "0xC69380", Offset = "0xC69380", VA = "0xC69380")]
	public LevelEditorPopup()
	{
	}
}
[Token(Token = "0x20005B6")]
public class MonthlyChallengePopup : BaseMessagePopup
{
	[Serializable]
	[Token(Token = "0x20005B7")]
	public class MedalObj
	{
		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MedalType medal;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xC6971C", Offset = "0xC6971C", VA = "0xC6971C")]
		public MedalObj()
		{
		}
	}

	[Token(Token = "0x40021B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<MedalObj> medalObjs;

	[Token(Token = "0x40021B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MonthlyChallengePopup inst;

	[Token(Token = "0x170005A5")]
	private static bool playerIsQualified
	{
		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xC693EC", Offset = "0xC693EC", VA = "0xC693EC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005A6")]
	public bool needToShow
	{
		[Token(Token = "0x60021B5")]
		[Address(RVA = "0xC69480", Offset = "0xC69480", VA = "0xC69480")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60021B3")]
	[Address(RVA = "0xC69388", Offset = "0xC69388", VA = "0xC69388", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021B6")]
	[Address(RVA = "0xC69560", Offset = "0xC69560", VA = "0xC69560", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60021B7")]
	[Address(RVA = "0xC69714", Offset = "0xC69714", VA = "0xC69714")]
	public MonthlyChallengePopup()
	{
	}
}
[Token(Token = "0x20005B8")]
public class MultiplayerSeasonPopup : BaseMessagePopup
{
	[Token(Token = "0x40021B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocalizeFormatted message;

	[Token(Token = "0x40021BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerSeasonPopup inst;

	[Token(Token = "0x60021B9")]
	[Address(RVA = "0xC69724", Offset = "0xC69724", VA = "0xC69724", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021BA")]
	[Address(RVA = "0xC69788", Offset = "0xC69788", VA = "0xC69788", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60021BB")]
	[Address(RVA = "0xC69818", Offset = "0xC69818", VA = "0xC69818", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021BC")]
	[Address(RVA = "0xC6987C", Offset = "0xC6987C", VA = "0xC6987C")]
	public MultiplayerSeasonPopup()
	{
	}
}
[Token(Token = "0x20005B9")]
public class MultiplayerUpdateMsgPopup : BaseMessagePopup
{
	[Token(Token = "0x40021BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static MultiplayerUpdateMsgPopup inst;

	[Token(Token = "0x60021BD")]
	[Address(RVA = "0xC69884", Offset = "0xC69884", VA = "0xC69884", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021BE")]
	[Address(RVA = "0xC698E8", Offset = "0xC698E8", VA = "0xC698E8", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021BF")]
	[Address(RVA = "0xC6994C", Offset = "0xC6994C", VA = "0xC6994C")]
	public MultiplayerUpdateMsgPopup()
	{
	}
}
[Token(Token = "0x20005BA")]
public class NxMessagePopup : BaseMessagePopup
{
	[Token(Token = "0x40021BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NxMessagePopup inst;

	[Token(Token = "0x60021C0")]
	[Address(RVA = "0xC69954", Offset = "0xC69954", VA = "0xC69954", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021C1")]
	[Address(RVA = "0xC699B8", Offset = "0xC699B8", VA = "0xC699B8", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021C2")]
	[Address(RVA = "0xC69A1C", Offset = "0xC69A1C", VA = "0xC69A1C")]
	public NxMessagePopup()
	{
	}
}
[Token(Token = "0x20005BB")]
public class OSTReleasePopup : BaseMessagePopup
{
	[Token(Token = "0x40021BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static OSTReleasePopup inst;

	[Token(Token = "0x60021C3")]
	[Address(RVA = "0xC69A24", Offset = "0xC69A24", VA = "0xC69A24", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021C4")]
	[Address(RVA = "0xC69A88", Offset = "0xC69A88", VA = "0xC69A88", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021C5")]
	[Address(RVA = "0xC69AEC", Offset = "0xC69AEC", VA = "0xC69AEC")]
	public OSTReleasePopup()
	{
	}
}
[Token(Token = "0x20005BC")]
public class YURMessagePopup : BaseMessagePopup
{
	[Token(Token = "0x40021BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static YURMessagePopup inst;

	[Token(Token = "0x60021C6")]
	[Address(RVA = "0xC69AF4", Offset = "0xC69AF4", VA = "0xC69AF4", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60021C7")]
	[Address(RVA = "0xC69B58", Offset = "0xC69B58", VA = "0xC69B58", Slot = "21")]
	public override void onDoneClicked()
	{
	}

	[Token(Token = "0x60021C8")]
	[Address(RVA = "0xC69BBC", Offset = "0xC69BBC", VA = "0xC69BBC")]
	public YURMessagePopup()
	{
	}
}
[Token(Token = "0x20005BD")]
public class RandomizedChild : MonoBehaviour
{
	[Token(Token = "0x60021C9")]
	[Address(RVA = "0xC69BC4", Offset = "0xC69BC4", VA = "0xC69BC4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60021CA")]
	[Address(RVA = "0xC69C68", Offset = "0xC69C68", VA = "0xC69C68")]
	public RandomizedChild()
	{
	}
}
[Token(Token = "0x20005BE")]
[RequireComponent(typeof(TextMeshPro))]
public class RealWorldTime : MonoBehaviour
{
	[Token(Token = "0x40021BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected StringBuilder _builder;

	[Token(Token = "0x40021C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro _tmp;

	[Token(Token = "0x60021CB")]
	[Address(RVA = "0xC69C70", Offset = "0xC69C70", VA = "0xC69C70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021CC")]
	[Address(RVA = "0xC69CC8", Offset = "0xC69CC8", VA = "0xC69CC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60021CD")]
	[Address(RVA = "0xC69F14", Offset = "0xC69F14", VA = "0xC69F14")]
	public RealWorldTime()
	{
	}
}
[Token(Token = "0x20005BF")]
public class RTT : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005C0")]
	public class Item
	{
		[Token(Token = "0x40021C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40021C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int width;

		[Token(Token = "0x40021CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int height;

		[Token(Token = "0x40021CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int depth;

		[Token(Token = "0x40021CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int antiAliasing;

		[Token(Token = "0x40021CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float boxSize;

		[Token(Token = "0x40021CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x40021CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RenderTexture texture;

		[Token(Token = "0x40021D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool drawRect;

		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _numItems;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _index;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _size;

		[Token(Token = "0x40021D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> _objs;

		[Token(Token = "0x40021D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _aspect;

		[Token(Token = "0x40021D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _root;

		[Token(Token = "0x40021D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _needsRefresh;

		[Token(Token = "0x40021D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isEmpty;

		[Token(Token = "0x170005A7")]
		public Vector2 size
		{
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0xC6AEE8", Offset = "0xC6AEE8", VA = "0xC6AEE8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xC6A79C", Offset = "0xC6A79C", VA = "0xC6A79C")]
		public void init()
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xC6A240", Offset = "0xC6A240", VA = "0xC6A240")]
		public void add(GameObject obj)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xC6A3F0", Offset = "0xC6A3F0", VA = "0xC6A3F0")]
		public void remove(GameObject obj)
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xC6ADCC", Offset = "0xC6ADCC", VA = "0xC6ADCC")]
		public void drawGizmos()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0xC6A50C", Offset = "0xC6A50C", VA = "0xC6A50C")]
		public void needsRefresh()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xC6AB8C", Offset = "0xC6AB8C", VA = "0xC6AB8C")]
		public void refresh()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0xC6AEF0", Offset = "0xC6AEF0", VA = "0xC6AEF0")]
		public void validate()
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xC6AF14", Offset = "0xC6AF14", VA = "0xC6AF14")]
		public Item()
		{
		}
	}

	[Token(Token = "0x40021C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RTT inst;

	[Token(Token = "0x40021C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool refreshEveryFrame;

	[Token(Token = "0x40021C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Item[] items;

	[Token(Token = "0x40021C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera _camera;

	[Token(Token = "0x40021C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _layerID;

	[Token(Token = "0x40021C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, Item> _items;

	[Token(Token = "0x40021C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _maxItemWidth;

	[Token(Token = "0x60021CE")]
	[Address(RVA = "0xC69F8C", Offset = "0xC69F8C", VA = "0xC69F8C")]
	public static int getItemCodeByName(string name)
	{
		return default(int);
	}

	[Token(Token = "0x60021CF")]
	[Address(RVA = "0xC69FB4", Offset = "0xC69FB4", VA = "0xC69FB4")]
	private Item getItemByName(string itemName)
	{
		return null;
	}

	[Token(Token = "0x60021D0")]
	[Address(RVA = "0xC6A018", Offset = "0xC6A018", VA = "0xC6A018")]
	private void initCamera()
	{
	}

	[Token(Token = "0x60021D1")]
	[Address(RVA = "0xC6A220", Offset = "0xC6A220", VA = "0xC6A220")]
	public void addObject(string itemName, GameObject obj)
	{
	}

	[Token(Token = "0x60021D2")]
	[Address(RVA = "0xC6A3D0", Offset = "0xC6A3D0", VA = "0xC6A3D0")]
	public void removeObject(string itemName, GameObject obj)
	{
	}

	[Token(Token = "0x60021D3")]
	[Address(RVA = "0xC6A4A4", Offset = "0xC6A4A4", VA = "0xC6A4A4")]
	public void refreshItem(int itemCode)
	{
	}

	[Token(Token = "0x60021D4")]
	[Address(RVA = "0xC6A518", Offset = "0xC6A518", VA = "0xC6A518")]
	public void refreshItem(string itemName)
	{
	}

	[Token(Token = "0x60021D5")]
	[Address(RVA = "0xC6A538", Offset = "0xC6A538", VA = "0xC6A538")]
	public RenderTexture getItemTexture(string itemName)
	{
		return null;
	}

	[Token(Token = "0x60021D6")]
	[Address(RVA = "0xC6A554", Offset = "0xC6A554", VA = "0xC6A554")]
	public Vector2 getItemSize(string itemName)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60021D7")]
	[Address(RVA = "0xC6A570", Offset = "0xC6A570", VA = "0xC6A570")]
	public static void removeRTTLayerFromCameraCullingMask(Camera cam)
	{
	}

	[Token(Token = "0x60021D8")]
	[Address(RVA = "0xC6A5EC", Offset = "0xC6A5EC", VA = "0xC6A5EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021D9")]
	[Address(RVA = "0xC6AA28", Offset = "0xC6AA28", VA = "0xC6AA28")]
	private void Start()
	{
	}

	[Token(Token = "0x60021DA")]
	[Address(RVA = "0xC6AB18", Offset = "0xC6AB18", VA = "0xC6AB18")]
	private void Update()
	{
	}

	[Token(Token = "0x60021DB")]
	[Address(RVA = "0xC6AD70", Offset = "0xC6AD70", VA = "0xC6AD70")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60021DC")]
	[Address(RVA = "0xC6AEE0", Offset = "0xC6AEE0", VA = "0xC6AEE0")]
	public RTT()
	{
	}
}
[Token(Token = "0x20005C1")]
public class SendingLogUI : MonoBehaviour
{
	[Token(Token = "0x40021D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sending;

	[Token(Token = "0x40021DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sent;

	[Token(Token = "0x40021DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LocalizeFormatted sentText;

	[Token(Token = "0x40021DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject failed;

	[Token(Token = "0x40021DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject[] _rootObjects;

	[Token(Token = "0x40021DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SendingLogUI inst;

	[Token(Token = "0x40021DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _shown;

	[Token(Token = "0x40021E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _logToken;

	[Token(Token = "0x170005A8")]
	public bool shown
	{
		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xC6AF3C", Offset = "0xC6AF3C", VA = "0xC6AF3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60021E7")]
	[Address(RVA = "0xC6AF44", Offset = "0xC6AF44", VA = "0xC6AF44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021E8")]
	[Address(RVA = "0xC6B0B0", Offset = "0xC6B0B0", VA = "0xC6B0B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60021E9")]
	[Address(RVA = "0xC6B120", Offset = "0xC6B120", VA = "0xC6B120")]
	public void show(string logToken)
	{
	}

	[Token(Token = "0x60021EA")]
	[Address(RVA = "0xC6B590", Offset = "0xC6B590", VA = "0xC6B590")]
	public void hide()
	{
	}

	[Token(Token = "0x60021EB")]
	[Address(RVA = "0xC6B0B8", Offset = "0xC6B0B8", VA = "0xC6B0B8")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x60021EC")]
	[Address(RVA = "0xC6B6C8", Offset = "0xC6B6C8", VA = "0xC6B6C8")]
	private void onBack()
	{
	}

	[Token(Token = "0x60021ED")]
	[Address(RVA = "0xC6B6CC", Offset = "0xC6B6CC", VA = "0xC6B6CC")]
	public void onCancelClicked()
	{
	}

	[Token(Token = "0x60021EE")]
	[Address(RVA = "0xC6B6D0", Offset = "0xC6B6D0", VA = "0xC6B6D0")]
	public void onSendSucceeded(string logToken)
	{
	}

	[Token(Token = "0x60021EF")]
	[Address(RVA = "0xC6B7A4", Offset = "0xC6B7A4", VA = "0xC6B7A4")]
	public void onSendFailed(string logToken, string error)
	{
	}

	[Token(Token = "0x60021F0")]
	[Address(RVA = "0xC6B7FC", Offset = "0xC6B7FC", VA = "0xC6B7FC")]
	public SendingLogUI()
	{
	}
}
[Token(Token = "0x20005C2")]
public class SettingsChooser : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005C3")]
	public class Dbg
	{
		[Token(Token = "0x20005C4")]
		public enum ShowMode
		{
			[Token(Token = "0x40021E8")]
			Normal,
			[Token(Token = "0x40021E9")]
			ForceShow,
			[Token(Token = "0x40021EA")]
			ForceHide
		}

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ShowMode showQuest;

		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ShowMode showPC;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0xC6B918", Offset = "0xC6B918", VA = "0xC6B918")]
		public Dbg()
		{
		}
	}

	[Token(Token = "0x40021E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SettingsUI quest;

	[Token(Token = "0x40021E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SettingsUI pc;

	[Token(Token = "0x40021E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SendingLogUI sendingLog;

	[Token(Token = "0x40021E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dbg debug;

	[Token(Token = "0x60021F1")]
	[Address(RVA = "0xC6B804", Offset = "0xC6B804", VA = "0xC6B804")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021F2")]
	[Address(RVA = "0xC6B910", Offset = "0xC6B910", VA = "0xC6B910")]
	public SettingsChooser()
	{
	}
}
[Token(Token = "0x20005C5")]
public class SettingsUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005C6")]
	public struct MicrophoneSwitches
	{
		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject regular;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject disabled;
	}

	[Serializable]
	[Token(Token = "0x20005C7")]
	public struct Tooltips
	{
		[Serializable]
		[Token(Token = "0x20005C8")]
		public struct MyMusic
		{
			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject defaultTip;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject noPermission;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject unavailableInDemo;
		}

		[Serializable]
		[Token(Token = "0x20005C9")]
		public struct Microphone
		{
			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject noPermission;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject unavailableInDemo;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject disabled;
		}

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MyMusic myMusic;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Microphone microphone;
	}

	[Serializable]
	[Token(Token = "0x20005CA")]
	public struct StreamingCamUI
	{
		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject toggle;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject tooltip;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject disabledToggle;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject disabledTooltip;
	}

	[Token(Token = "0x20005CB")]
	public delegate void OnDone();

	[Token(Token = "0x40021EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MicrophoneSwitches micSwitches;

	[Token(Token = "0x40021EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Tooltips tooltips;

	[Token(Token = "0x40021ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public StreamingCamUI streamingCamUI;

	[Token(Token = "0x40021EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Tooltip("The other (included) interactive components will be disabled while send-log pop-up is open")]
	public Transform[] excludedInteractiveComponents;

	[Token(Token = "0x40021EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SettingsUI inst;

	[Token(Token = "0x40021F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> _rootObjects;

	[Token(Token = "0x40021F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly List<MonoBehaviour> _interactiveComponents;

	[Token(Token = "0x40021F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _shown;

	[Token(Token = "0x40021F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _openedViaOptions;

	[Token(Token = "0x40021F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OnDone _onDone;

	[Token(Token = "0x40021F5")]
	private const string microphonePermissionDeniedKey = "microphone_permission_denied";

	[Token(Token = "0x40021F6")]
	private const string storagePermissionDeniedKey = "storage_permission_denied";

	[Token(Token = "0x40021F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool _viewDisabledMicrophoneSwitch;

	[Token(Token = "0x170005A9")]
	public bool shown
	{
		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xC6B920", Offset = "0xC6B920", VA = "0xC6B920")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AA")]
	private bool microphonePermissionEverDenied
	{
		[Token(Token = "0x60021FE")]
		[Address(RVA = "0xC6BF70", Offset = "0xC6BF70", VA = "0xC6BF70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60021FF")]
		[Address(RVA = "0xC6BFC0", Offset = "0xC6BFC0", VA = "0xC6BFC0")]
		set
		{
		}
	}

	[Token(Token = "0x170005AB")]
	private bool storagePermissionEverDenied
	{
		[Token(Token = "0x6002204")]
		[Address(RVA = "0xC6C130", Offset = "0xC6C130", VA = "0xC6C130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002205")]
		[Address(RVA = "0xC6C180", Offset = "0xC6C180", VA = "0xC6C180")]
		set
		{
		}
	}

	[Token(Token = "0x60021F5")]
	[Address(RVA = "0xC6B928", Offset = "0xC6B928", VA = "0xC6B928")]
	private void Awake()
	{
	}

	[Token(Token = "0x60021F6")]
	[Address(RVA = "0xC6BC48", Offset = "0xC6BC48", VA = "0xC6BC48")]
	private void Start()
	{
	}

	[Token(Token = "0x60021F7")]
	[Address(RVA = "0xC6BABC", Offset = "0xC6BABC", VA = "0xC6BABC")]
	private void findInteractiveComponents()
	{
	}

	[Token(Token = "0x60021F8")]
	[Address(RVA = "0xC6BDA8", Offset = "0xC6BDA8", VA = "0xC6BDA8")]
	private bool isExcludedFromInteractiveComponents(MonoBehaviour component)
	{
		return default(bool);
	}

	[Token(Token = "0x60021F9")]
	[Address(RVA = "0xC63DC4", Offset = "0xC63DC4", VA = "0xC63DC4")]
	public void show(bool openedViaOptions, OnDone onDone)
	{
	}

	[Token(Token = "0x60021FA")]
	[Address(RVA = "0xC639FC", Offset = "0xC639FC", VA = "0xC639FC")]
	public void hide(bool byForce = false)
	{
	}

	[Token(Token = "0x60021FB")]
	[Address(RVA = "0xC6BC50", Offset = "0xC6BC50", VA = "0xC6BC50")]
	private void enableItems(bool enable)
	{
	}

	[Token(Token = "0x60021FC")]
	[Address(RVA = "0xC6BF60", Offset = "0xC6BF60", VA = "0xC6BF60")]
	private void onMenuButtonClicked()
	{
	}

	[Token(Token = "0x60021FD")]
	[Address(RVA = "0xC6BF68", Offset = "0xC6BF68", VA = "0xC6BF68")]
	private void onBack()
	{
	}

	[Token(Token = "0x6002200")]
	[Address(RVA = "0xC6C008", Offset = "0xC6C008", VA = "0xC6C008")]
	public void onMicrophonePermissionGranted()
	{
	}

	[Token(Token = "0x6002201")]
	[Address(RVA = "0xC6C00C", Offset = "0xC6C00C", VA = "0xC6C00C")]
	public void onMicrophonePermissionDenied()
	{
	}

	[Token(Token = "0x6002202")]
	[Address(RVA = "0xC6BE3C", Offset = "0xC6BE3C", VA = "0xC6BE3C")]
	private void UpdateMicTooltipAndSwitch()
	{
	}

	[Token(Token = "0x6002203")]
	[Address(RVA = "0xC6C0BC", Offset = "0xC6C0BC", VA = "0xC6C0BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6002206")]
	[Address(RVA = "0xC6C1C8", Offset = "0xC6C1C8", VA = "0xC6C1C8")]
	public void onStoragePermissionGranted()
	{
	}

	[Token(Token = "0x6002207")]
	[Address(RVA = "0xC6C1CC", Offset = "0xC6C1CC", VA = "0xC6C1CC")]
	public void onStoragePermissionDenied()
	{
	}

	[Token(Token = "0x6002208")]
	[Address(RVA = "0xC6BEF0", Offset = "0xC6BEF0", VA = "0xC6BEF0")]
	private void updateMyMusicTooltip()
	{
	}

	[Token(Token = "0x6002209")]
	[Address(RVA = "0xC6C1E8", Offset = "0xC6C1E8", VA = "0xC6C1E8")]
	public void onSendLogClicked()
	{
	}

	[Token(Token = "0x600220A")]
	[Address(RVA = "0xC6B2AC", Offset = "0xC6B2AC", VA = "0xC6B2AC")]
	public void makeInteractive(bool interactive)
	{
	}

	[Token(Token = "0x600220B")]
	[Address(RVA = "0xC6C2B8", Offset = "0xC6C2B8", VA = "0xC6C2B8")]
	public void ViewDisabledMicrophoneSwitch(bool show)
	{
	}

	[Token(Token = "0x600220C")]
	[Address(RVA = "0xC6C2C4", Offset = "0xC6C2C4", VA = "0xC6C2C4")]
	public SettingsUI()
	{
	}
}
[Token(Token = "0x20005CD")]
public class ShowAtPlayerHeight : MonoBehaviour
{
	[Token(Token = "0x4002208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIPlayerPosition.Level level;

	[Token(Token = "0x6002215")]
	[Address(RVA = "0xC6C460", Offset = "0xC6C460", VA = "0xC6C460")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002216")]
	[Address(RVA = "0xC6C51C", Offset = "0xC6C51C", VA = "0xC6C51C")]
	public ShowAtPlayerHeight()
	{
	}
}
[Token(Token = "0x20005CE")]
public class ShowAtPosition : MonoBehaviour
{
	[Token(Token = "0x4002209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform otherTransform;

	[Token(Token = "0x6002217")]
	[Address(RVA = "0xC6C524", Offset = "0xC6C524", VA = "0xC6C524")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002218")]
	[Address(RVA = "0xC6C5A0", Offset = "0xC6C5A0", VA = "0xC6C5A0")]
	public ShowAtPosition()
	{
	}
}
[Token(Token = "0x20005CF")]
public class SmoothTransition
{
	[Token(Token = "0x20005D0")]
	public enum State
	{
		[Token(Token = "0x4002212")]
		NotNearlyDone,
		[Token(Token = "0x4002213")]
		NearlyDone,
		[Token(Token = "0x4002214")]
		Done
	}

	[Token(Token = "0x400220A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MainMenuTransitionModifier _modifier;

	[Token(Token = "0x400220B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private State _state;

	[Token(Token = "0x400220C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _desiredT;

	[Token(Token = "0x400220D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _currentT;

	[Token(Token = "0x400220E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _smoothTime;

	[Token(Token = "0x400220F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _currentVelocity;

	[Token(Token = "0x4002210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _diffToDesired;

	[Token(Token = "0x170005AC")]
	public bool notNearlyDone
	{
		[Token(Token = "0x6002219")]
		[Address(RVA = "0xC6C5A8", Offset = "0xC6C5A8", VA = "0xC6C5A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AD")]
	public bool nearlyDone
	{
		[Token(Token = "0x600221A")]
		[Address(RVA = "0xC6C5B8", Offset = "0xC6C5B8", VA = "0xC6C5B8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AE")]
	public bool done
	{
		[Token(Token = "0x600221B")]
		[Address(RVA = "0xC6C5C8", Offset = "0xC6C5C8", VA = "0xC6C5C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005AF")]
	public float diffToDesired
	{
		[Token(Token = "0x600221C")]
		[Address(RVA = "0xC6C5D8", Offset = "0xC6C5D8", VA = "0xC6C5D8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600221D")]
	[Address(RVA = "0xC6C5E0", Offset = "0xC6C5E0", VA = "0xC6C5E0")]
	public SmoothTransition(MainMenuTransitionModifier modifier)
	{
	}

	[Token(Token = "0x600221E")]
	[Address(RVA = "0xC6C61C", Offset = "0xC6C61C", VA = "0xC6C61C")]
	public void start(float desiredT)
	{
	}

	[Token(Token = "0x600221F")]
	[Address(RVA = "0xC6C6BC", Offset = "0xC6C6BC", VA = "0xC6C6BC")]
	public void updateInstantly()
	{
	}

	[Token(Token = "0x6002220")]
	[Address(RVA = "0xC6C6D4", Offset = "0xC6C6D4", VA = "0xC6C6D4")]
	public float update()
	{
		return default(float);
	}
}
[Token(Token = "0x20005D1")]
public class SoloCampaignUI : Area
{
	[Serializable]
	[Token(Token = "0x20005D2")]
	public class Stages
	{
		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitionsGroup transitionsGroup;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float stagesBackgroundAnimationDuration;

		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloStageMenuItem[] stages;

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xC6D4D4", Offset = "0xC6D4D4", VA = "0xC6D4D4")]
		public Stages()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005D3")]
	public class Celebrations
	{
		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UIItemTransitionsGroup transitionsGroup;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] stagesComplete;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject allStagesComplete;

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xC6D4E8", Offset = "0xC6D4E8", VA = "0xC6D4E8")]
		public Celebrations()
		{
		}
	}

	[Token(Token = "0x20005D4")]
	[CompilerGenerated]
	private sealed class <showAllSetsCompleteCelebrationCo>d__26 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloCampaignUI <>4__this;

		[Token(Token = "0x170005B5")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0xC6D638", Offset = "0xC6D638", VA = "0xC6D638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600223F")]
			[Address(RVA = "0xC6D680", Offset = "0xC6D680", VA = "0xC6D680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xC6D0D0", Offset = "0xC6D0D0", VA = "0xC6D0D0")]
		[DebuggerHidden]
		public <showAllSetsCompleteCelebrationCo>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xC6D4F0", Offset = "0xC6D4F0", VA = "0xC6D4F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xC6D4F4", Offset = "0xC6D4F4", VA = "0xC6D4F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xC6D640", Offset = "0xC6D640", VA = "0xC6D640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D5")]
	[CompilerGenerated]
	private sealed class <showStageCompleteCelebrationCo>d__28 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoloCampaignUI <>4__this;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int completedStageIndex;

		[Token(Token = "0x170005B7")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0xC6D82C", Offset = "0xC6D82C", VA = "0xC6D82C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002245")]
			[Address(RVA = "0xC6D874", Offset = "0xC6D874", VA = "0xC6D874", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xC6D18C", Offset = "0xC6D18C", VA = "0xC6D18C")]
		[DebuggerHidden]
		public <showStageCompleteCelebrationCo>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xC6D6DC", Offset = "0xC6D6DC", VA = "0xC6D6DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xC6D6E0", Offset = "0xC6D6E0", VA = "0xC6D6E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xC6D834", Offset = "0xC6D834", VA = "0xC6D834", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D6")]
	[CompilerGenerated]
	private sealed class <updateStagesBackgroundCo>d__34 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoloCampaignUI <>4__this;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <startOffset>5__2;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <endOffset>5__3;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__4;

		[Token(Token = "0x170005B9")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xC6DAB4", Offset = "0xC6DAB4", VA = "0xC6DAB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xC6DAFC", Offset = "0xC6DAFC", VA = "0xC6DAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xC6D39C", Offset = "0xC6D39C", VA = "0xC6D39C")]
		[DebuggerHidden]
		public <updateStagesBackgroundCo>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xC6D8D0", Offset = "0xC6D8D0", VA = "0xC6D8D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xC6D8D4", Offset = "0xC6D8D4", VA = "0xC6D8D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xC6DABC", Offset = "0xC6DABC", VA = "0xC6DABC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Stages stages;

	[Token(Token = "0x4002216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Celebrations celebrations;

	[Token(Token = "0x4002217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloCampaignUI inst;

	[Token(Token = "0x4002218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _selectedStageIndex;

	[Token(Token = "0x4002219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _hexOffsetId;

	[Token(Token = "0x400221A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _desiredBgMaterialHexOffset;

	[Token(Token = "0x400221B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _firstStageSelectionSinceShown;

	[Token(Token = "0x400221C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _updateStagesBackgroundIsRunning;

	[Token(Token = "0x170005B0")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002221")]
		[Address(RVA = "0xC6C8E4", Offset = "0xC6C8E4", VA = "0xC6C8E4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005B1")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002222")]
		[Address(RVA = "0xC6C8EC", Offset = "0xC6C8EC", VA = "0xC6C8EC", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005B2")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002223")]
		[Address(RVA = "0xC6C8F4", Offset = "0xC6C8F4", VA = "0xC6C8F4", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005B3")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002224")]
		[Address(RVA = "0xC6C8FC", Offset = "0xC6C8FC", VA = "0xC6C8FC", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005B4")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002225")]
		[Address(RVA = "0xC6C904", Offset = "0xC6C904", VA = "0xC6C904", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002226")]
	[Address(RVA = "0xC6C90C", Offset = "0xC6C90C", VA = "0xC6C90C", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002227")]
	[Address(RVA = "0xC6C9A0", Offset = "0xC6C9A0", VA = "0xC6C9A0", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002228")]
	[Address(RVA = "0xC6CED4", Offset = "0xC6CED4", VA = "0xC6CED4", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002229")]
	[Address(RVA = "0xC6CF54", Offset = "0xC6CF54", VA = "0xC6CF54", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x600222A")]
	[Address(RVA = "0xC6CB20", Offset = "0xC6CB20", VA = "0xC6CB20")]
	private void showNormal()
	{
	}

	[Token(Token = "0x600222B")]
	[Address(RVA = "0xC6CC1C", Offset = "0xC6CC1C", VA = "0xC6CC1C")]
	private void selectStage()
	{
	}

	[Token(Token = "0x600222C")]
	[Address(RVA = "0xC6D04C", Offset = "0xC6D04C", VA = "0xC6D04C")]
	[IteratorStateMachine(typeof(<showAllSetsCompleteCelebrationCo>d__26))]
	private IEnumerator<float> showAllSetsCompleteCelebrationCo(float delay)
	{
		return null;
	}

	[Token(Token = "0x600222D")]
	[Address(RVA = "0xC6CCEC", Offset = "0xC6CCEC", VA = "0xC6CCEC")]
	private void showAllSetsCompleteCelebration()
	{
	}

	[Token(Token = "0x600222E")]
	[Address(RVA = "0xC6D0F8", Offset = "0xC6D0F8", VA = "0xC6D0F8")]
	[IteratorStateMachine(typeof(<showStageCompleteCelebrationCo>d__28))]
	private IEnumerator<float> showStageCompleteCelebrationCo(int completedStageIndex, float delay)
	{
		return null;
	}

	[Token(Token = "0x600222F")]
	[Address(RVA = "0xC6CDD8", Offset = "0xC6CDD8", VA = "0xC6CDD8")]
	private void showStageCompleteCelebration(int completedStageIndex)
	{
	}

	[Token(Token = "0x6002230")]
	[Address(RVA = "0xC6D1B4", Offset = "0xC6D1B4", VA = "0xC6D1B4")]
	public void onCelebrationDoneClicked()
	{
	}

	[Token(Token = "0x6002231")]
	[Address(RVA = "0xC6D1B8", Offset = "0xC6D1B8", VA = "0xC6D1B8")]
	public void onStageSelected(SoloStageMenuItem soloStage)
	{
	}

	[Token(Token = "0x6002232")]
	[Address(RVA = "0xC6D1D4", Offset = "0xC6D1D4", VA = "0xC6D1D4")]
	public void onSetSelected(SoloSetMenuItem soloSet)
	{
	}

	[Token(Token = "0x6002233")]
	[Address(RVA = "0xC6D270", Offset = "0xC6D270", VA = "0xC6D270")]
	public void setStageBgHexOffset(float bgMaterialHexOffset)
	{
	}

	[Token(Token = "0x6002234")]
	[Address(RVA = "0xC6D328", Offset = "0xC6D328", VA = "0xC6D328")]
	[IteratorStateMachine(typeof(<updateStagesBackgroundCo>d__34))]
	private IEnumerator<float> updateStagesBackgroundCo()
	{
		return null;
	}

	[Token(Token = "0x6002235")]
	[Address(RVA = "0xC6D3C4", Offset = "0xC6D3C4", VA = "0xC6D3C4")]
	public void showLeaderboard(string setId)
	{
	}

	[Token(Token = "0x6002236")]
	[Address(RVA = "0xC6D49C", Offset = "0xC6D49C", VA = "0xC6D49C")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x6002237")]
	[Address(RVA = "0xC6D4C4", Offset = "0xC6D4C4", VA = "0xC6D4C4")]
	public SoloCampaignUI()
	{
	}
}
[Token(Token = "0x20005D7")]
public class SoloMenuUI : Area
{
	[Token(Token = "0x4002232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UIItemTransitionsGroup transitionsGroup;

	[Token(Token = "0x4002233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloMenuUI inst;

	[Token(Token = "0x170005BB")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x600224C")]
		[Address(RVA = "0xC6DB58", Offset = "0xC6DB58", VA = "0xC6DB58", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BC")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x600224D")]
		[Address(RVA = "0xC6DB60", Offset = "0xC6DB60", VA = "0xC6DB60", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BD")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600224E")]
		[Address(RVA = "0xC6DB68", Offset = "0xC6DB68", VA = "0xC6DB68", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BE")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600224F")]
		[Address(RVA = "0xC6DB70", Offset = "0xC6DB70", VA = "0xC6DB70", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005BF")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002250")]
		[Address(RVA = "0xC6DB78", Offset = "0xC6DB78", VA = "0xC6DB78", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002251")]
	[Address(RVA = "0xC6DB80", Offset = "0xC6DB80", VA = "0xC6DB80", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002252")]
	[Address(RVA = "0xC6DBE4", Offset = "0xC6DBE4", VA = "0xC6DBE4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002253")]
	[Address(RVA = "0xC6DDD4", Offset = "0xC6DDD4", VA = "0xC6DDD4", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002254")]
	[Address(RVA = "0xC6DED8", Offset = "0xC6DED8", VA = "0xC6DED8", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x6002255")]
	[Address(RVA = "0xC6DF68", Offset = "0xC6DF68", VA = "0xC6DF68")]
	public void onLevelEditorSelected()
	{
	}

	[Token(Token = "0x6002256")]
	[Address(RVA = "0xC6E148", Offset = "0xC6E148", VA = "0xC6E148")]
	public void onCampaignSelected()
	{
	}

	[Token(Token = "0x6002257")]
	[Address(RVA = "0xC6E1BC", Offset = "0xC6E1BC", VA = "0xC6E1BC")]
	public void onMonthlyChallengeSetSelected()
	{
	}

	[Token(Token = "0x6002258")]
	[Address(RVA = "0xC6E300", Offset = "0xC6E300", VA = "0xC6E300")]
	public void showMonthlyChallengeLeaderboard()
	{
	}

	[Token(Token = "0x6002259")]
	[Address(RVA = "0xC6E44C", Offset = "0xC6E44C", VA = "0xC6E44C")]
	private void onLeaderboardDone()
	{
	}

	[Token(Token = "0x600225A")]
	[Address(RVA = "0xC6E46C", Offset = "0xC6E46C", VA = "0xC6E46C")]
	private void onCurrentChallengeStateChanged()
	{
	}

	[Token(Token = "0x600225B")]
	[Address(RVA = "0xC6E4C0", Offset = "0xC6E4C0", VA = "0xC6E4C0")]
	public SoloMenuUI()
	{
	}
}
[Token(Token = "0x20005D8")]
public class SoloSetMenuItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D9")]
	public struct Complete
	{
		[Serializable]
		[Token(Token = "0x20005DA")]
		public struct Stars
		{
			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject root;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] stars;
		}

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject root;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LocalizeDuration bestTimeText;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Stars stars;
	}

	[Serializable]
	[Token(Token = "0x20005DB")]
	public struct Incomplete
	{
		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject root;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshPro progressText;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GraphBar progresBar;
	}

	[Token(Token = "0x20005DC")]
	private enum State
	{
		[Token(Token = "0x4002244")]
		Unstarted,
		[Token(Token = "0x4002245")]
		Incomplete,
		[Token(Token = "0x4002246")]
		Complete
	}

	[Token(Token = "0x4002234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string setId;

	[Token(Token = "0x4002235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro numWavesText;

	[Token(Token = "0x4002236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image image;

	[Token(Token = "0x4002237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public new TextMeshPro name;

	[Token(Token = "0x4002238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro number;

	[Token(Token = "0x4002239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Complete complete;

	[Token(Token = "0x400223A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Incomplete incomplete;

	[Token(Token = "0x600225C")]
	[Address(RVA = "0xC6E4C8", Offset = "0xC6E4C8", VA = "0xC6E4C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600225D")]
	[Address(RVA = "0xC6E8B0", Offset = "0xC6E8B0", VA = "0xC6E8B0")]
	private State determineState(PlayerProfileData.Solo.Set setStats)
	{
		return default(State);
	}

	[Token(Token = "0x600225E")]
	[Address(RVA = "0xC6E984", Offset = "0xC6E984", VA = "0xC6E984")]
	private void showStars(PlayerProfileData.Solo.Set setStats)
	{
	}

	[Token(Token = "0x600225F")]
	[Address(RVA = "0xC6E8E8", Offset = "0xC6E8E8", VA = "0xC6E8E8")]
	private void hideStars()
	{
	}

	[Token(Token = "0x6002260")]
	[Address(RVA = "0xC6EABC", Offset = "0xC6EABC", VA = "0xC6EABC")]
	public void onLeaderboardClicked()
	{
	}

	[Token(Token = "0x6002261")]
	[Address(RVA = "0xC6EB98", Offset = "0xC6EB98", VA = "0xC6EB98")]
	public SoloSetMenuItem()
	{
	}
}
[Token(Token = "0x20005DD")]
public class SoloStageMenuItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005DE")]
	public class Progress
	{
		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] setsOff;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] setsOn;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshPro starsText;

		[Token(Token = "0x6002267")]
		[Address(RVA = "0xC6F17C", Offset = "0xC6F17C", VA = "0xC6F17C")]
		public Progress()
		{
		}
	}

	[Token(Token = "0x4002247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stageIndex;

	[Token(Token = "0x4002248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIItemTransitions newIndicator;

	[Token(Token = "0x4002249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bgMaterialHexOffset;

	[Token(Token = "0x400224A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Progress progress;

	[Token(Token = "0x400224B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _starsTextFormat;

	[Token(Token = "0x6002262")]
	[Address(RVA = "0xC6EBA0", Offset = "0xC6EBA0", VA = "0xC6EBA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002263")]
	[Address(RVA = "0xC6EC80", Offset = "0xC6EC80", VA = "0xC6EC80")]
	private void onSelected()
	{
	}

	[Token(Token = "0x6002264")]
	[Address(RVA = "0xC6ED7C", Offset = "0xC6ED7C", VA = "0xC6ED7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002265")]
	[Address(RVA = "0xC6F108", Offset = "0xC6F108", VA = "0xC6F108")]
	public void enable(bool enabled)
	{
	}

	[Token(Token = "0x6002266")]
	[Address(RVA = "0xC6F174", Offset = "0xC6F174", VA = "0xC6F174")]
	public SoloStageMenuItem()
	{
	}
}
[Token(Token = "0x20005DF")]
public class SoloUI : Area
{
	[Token(Token = "0x400224F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SoloMenuUI menu;

	[Token(Token = "0x4002250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SoloCampaignUI campaign;

	[Token(Token = "0x4002251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SoloUI inst;

	[Token(Token = "0x4002252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _startAtCampaign;

	[Token(Token = "0x170005C0")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002268")]
		[Address(RVA = "0xC6F184", Offset = "0xC6F184", VA = "0xC6F184", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C1")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002269")]
		[Address(RVA = "0xC6F18C", Offset = "0xC6F18C", VA = "0xC6F18C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C2")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x600226A")]
		[Address(RVA = "0xC6F194", Offset = "0xC6F194", VA = "0xC6F194", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C3")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x600226B")]
		[Address(RVA = "0xC6F19C", Offset = "0xC6F19C", VA = "0xC6F19C", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C4")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x600226C")]
		[Address(RVA = "0xC6F1A4", Offset = "0xC6F1A4", VA = "0xC6F1A4", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600226D")]
	[Address(RVA = "0xC6F1AC", Offset = "0xC6F1AC", VA = "0xC6F1AC", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600226E")]
	[Address(RVA = "0xC6F210", Offset = "0xC6F210", VA = "0xC6F210")]
	public void show(bool startAtCampaign)
	{
	}

	[Token(Token = "0x600226F")]
	[Address(RVA = "0xC6F254", Offset = "0xC6F254", VA = "0xC6F254", Slot = "11")]
	public override void show()
	{
	}

	[Token(Token = "0x6002270")]
	[Address(RVA = "0xC6F2A4", Offset = "0xC6F2A4", VA = "0xC6F2A4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x6002271")]
	[Address(RVA = "0xC6F37C", Offset = "0xC6F37C", VA = "0xC6F37C", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x6002272")]
	[Address(RVA = "0xC6F3D0", Offset = "0xC6F3D0", VA = "0xC6F3D0")]
	public SoloUI()
	{
	}
}
[Token(Token = "0x20005E0")]
public class StartRoom : Area
{
	[Serializable]
	[Token(Token = "0x20005E1")]
	public class GotchaButton
	{
		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TouchItem button;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject enabledText;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject disableText;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject goOfflineText;

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xC6FD50", Offset = "0xC6FD50", VA = "0xC6FD50")]
		public GotchaButton()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005E2")]
	public class LegalObjects
	{
		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TouchItem agreeButton;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TouchItem declineButton;

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xC6FD58", Offset = "0xC6FD58", VA = "0xC6FD58")]
		public LegalObjects()
		{
		}
	}

	[Token(Token = "0x20005E3")]
	private enum View
	{
		[Token(Token = "0x4002268")]
		LoadingLanguage,
		[Token(Token = "0x4002269")]
		Legal,
		[Token(Token = "0x400226A")]
		Normal
	}

	[Token(Token = "0x20005E4")]
	[CompilerGenerated]
	private sealed class <monitorLanguageDownload>d__29 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartRoom <>4__this;

		[Token(Token = "0x170005CB")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600228D")]
			[Address(RVA = "0xC6FE30", Offset = "0xC6FE30", VA = "0xC6FE30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600228F")]
			[Address(RVA = "0xC6FE78", Offset = "0xC6FE78", VA = "0xC6FE78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xC6F80C", Offset = "0xC6F80C", VA = "0xC6F80C")]
		[DebuggerHidden]
		public <monitorLanguageDownload>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0xC6FD60", Offset = "0xC6FD60", VA = "0xC6FD60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xC6FD64", Offset = "0xC6FD64", VA = "0xC6FD64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xC6FE38", Offset = "0xC6FE38", VA = "0xC6FE38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E5")]
	[CompilerGenerated]
	private sealed class <startWhenReadyCo>d__39 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartRoom <>4__this;

		[Token(Token = "0x170005CD")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002293")]
			[Address(RVA = "0xC7000C", Offset = "0xC7000C", VA = "0xC7000C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002295")]
			[Address(RVA = "0xC70054", Offset = "0xC70054", VA = "0xC70054", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xC6FB00", Offset = "0xC6FB00", VA = "0xC6FB00")]
		[DebuggerHidden]
		public <startWhenReadyCo>d__39(int <>1__state)
		{
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0xC6FED4", Offset = "0xC6FED4", VA = "0xC6FED4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xC6FED8", Offset = "0xC6FED8", VA = "0xC6FED8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xC70014", Offset = "0xC70014", VA = "0xC70014", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro versionText;

	[Token(Token = "0x4002254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject legalFlakh;

	[Token(Token = "0x4002255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject legalButtonsArm;

	[Token(Token = "0x4002256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject normalFlakh;

	[Token(Token = "0x4002257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject gotchaArm;

	[Token(Token = "0x4002258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject legalArm;

	[Token(Token = "0x4002259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject loadingLanguageArm;

	[Token(Token = "0x400225A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI loadingLanguageProgressText;

	[Token(Token = "0x400225B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GotchaButton gotchaButton;

	[Token(Token = "0x400225C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LegalObjects legalObjects;

	[Token(Token = "0x400225D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float legalScrollThreshold;

	[Token(Token = "0x400225E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public KeyCode continueKeyCode;

	[Token(Token = "0x400225F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static StartRoom inst;

	[Token(Token = "0x4002260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private View _view;

	[Token(Token = "0x170005C5")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x6002273")]
		[Address(RVA = "0xC6F3D8", Offset = "0xC6F3D8", VA = "0xC6F3D8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C6")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x6002274")]
		[Address(RVA = "0xC6F3E0", Offset = "0xC6F3E0", VA = "0xC6F3E0", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C7")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x6002275")]
		[Address(RVA = "0xC6F3E8", Offset = "0xC6F3E8", VA = "0xC6F3E8", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C8")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x6002276")]
		[Address(RVA = "0xC6F3F0", Offset = "0xC6F3F0", VA = "0xC6F3F0", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005C9")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x6002277")]
		[Address(RVA = "0xC6F3F8", Offset = "0xC6F3F8", VA = "0xC6F3F8", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005CA")]
	public bool ReadyToExitStartRoom
	{
		[Token(Token = "0x6002282")]
		[Address(RVA = "0xC6FAAC", Offset = "0xC6FAAC", VA = "0xC6FAAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002278")]
	[Address(RVA = "0xC6F400", Offset = "0xC6F400", VA = "0xC6F400", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002279")]
	[Address(RVA = "0xC6F508", Offset = "0xC6F508", VA = "0xC6F508", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x600227A")]
	[Address(RVA = "0xC6F798", Offset = "0xC6F798", VA = "0xC6F798")]
	[IteratorStateMachine(typeof(<monitorLanguageDownload>d__29))]
	private IEnumerator<float> monitorLanguageDownload()
	{
		return null;
	}

	[Token(Token = "0x600227B")]
	[Address(RVA = "0xC6F834", Offset = "0xC6F834", VA = "0xC6F834")]
	private void updateView()
	{
	}

	[Token(Token = "0x600227C")]
	[Address(RVA = "0xC6F490", Offset = "0xC6F490", VA = "0xC6F490")]
	private void enableButton(TouchItem touchItem, bool enable)
	{
	}

	[Token(Token = "0x600227D")]
	[Address(RVA = "0xC6F918", Offset = "0xC6F918", VA = "0xC6F918", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x600227E")]
	[Address(RVA = "0xC6F93C", Offset = "0xC6F93C", VA = "0xC6F93C", Slot = "20")]
	protected override void onBackHiding()
	{
	}

	[Token(Token = "0x600227F")]
	[Address(RVA = "0xC6F98C", Offset = "0xC6F98C", VA = "0xC6F98C")]
	public void onLegelAgreed()
	{
	}

	[Token(Token = "0x6002280")]
	[Address(RVA = "0xC6F9B0", Offset = "0xC6F9B0", VA = "0xC6F9B0")]
	public void onLegelDeclined()
	{
	}

	[Token(Token = "0x6002281")]
	[Address(RVA = "0xC6F9B8", Offset = "0xC6F9B8", VA = "0xC6F9B8")]
	public void onGotchaClicked()
	{
	}

	[Token(Token = "0x6002283")]
	[Address(RVA = "0xC6FA38", Offset = "0xC6FA38", VA = "0xC6FA38")]
	[IteratorStateMachine(typeof(<startWhenReadyCo>d__39))]
	private IEnumerator<float> startWhenReadyCo()
	{
		return null;
	}

	[Token(Token = "0x6002284")]
	[Address(RVA = "0xC6FB28", Offset = "0xC6FB28", VA = "0xC6FB28")]
	public void onShowHideLegalClicked()
	{
	}

	[Token(Token = "0x6002285")]
	[Address(RVA = "0xC6FB50", Offset = "0xC6FB50", VA = "0xC6FB50")]
	private void Update()
	{
	}

	[Token(Token = "0x6002286")]
	[Address(RVA = "0xC6FD34", Offset = "0xC6FD34", VA = "0xC6FD34")]
	public StartRoom()
	{
	}
}
[Token(Token = "0x20005E6")]
public class StreamCameraToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x4002271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool on;

	[Token(Token = "0x14000047")]
	public static event Action<bool> ValueChange
	{
		[Token(Token = "0x6002296")]
		[Address(RVA = "0xC700B0", Offset = "0xC700B0", VA = "0xC700B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002297")]
		[Address(RVA = "0xC70180", Offset = "0xC70180", VA = "0xC70180")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6002298")]
	[Address(RVA = "0xC70250", Offset = "0xC70250", VA = "0xC70250", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x6002299")]
	[Address(RVA = "0xC70298", Offset = "0xC70298", VA = "0xC70298", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x600229A")]
	[Address(RVA = "0xC703C0", Offset = "0xC703C0", VA = "0xC703C0", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x600229B")]
	[Address(RVA = "0xC70334", Offset = "0xC70334", VA = "0xC70334")]
	public static void setStreamCameraOn(bool on, bool saveChanges = true)
	{
	}

	[Token(Token = "0x600229C")]
	[Address(RVA = "0xC704B4", Offset = "0xC704B4", VA = "0xC704B4")]
	public static void load()
	{
	}

	[Token(Token = "0x600229D")]
	[Address(RVA = "0xC70428", Offset = "0xC70428", VA = "0xC70428")]
	public static void save()
	{
	}

	[Token(Token = "0x600229E")]
	[Address(RVA = "0xC704C0", Offset = "0xC704C0", VA = "0xC704C0")]
	public StreamCameraToggleSwitch()
	{
	}
}
[Token(Token = "0x20005E7")]
public class SuperSamplingKnob : KnobBase
{
	[Serializable]
	[Token(Token = "0x20005E8")]
	public struct Texts
	{
		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LocalizedString x0_7;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString x1_0;

		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LocalizedString x1_2;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LocalizedString x1_6;
	}

	[Token(Token = "0x4002273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texts texts;

	[Token(Token = "0x600229F")]
	[Address(RVA = "0xC704D4", Offset = "0xC704D4", VA = "0xC704D4", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60022A0")]
	[Address(RVA = "0xC704DC", Offset = "0xC704DC", VA = "0xC704DC", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x60022A1")]
	[Address(RVA = "0xC7054C", Offset = "0xC7054C", VA = "0xC7054C", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x60022A2")]
	[Address(RVA = "0xC7053C", Offset = "0xC7053C", VA = "0xC7053C")]
	private static float SSModeToAmplitude(SuperSampling.Mode ssMode)
	{
		return default(float);
	}

	[Token(Token = "0x60022A3")]
	[Address(RVA = "0xC705EC", Offset = "0xC705EC", VA = "0xC705EC")]
	private static SuperSampling.Mode amplitudeToSSMode(float snappedAmplitude)
	{
		return default(SuperSampling.Mode);
	}

	[Token(Token = "0x60022A4")]
	[Address(RVA = "0xC706D0", Offset = "0xC706D0", VA = "0xC706D0", Slot = "9")]
	protected override bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x60022A5")]
	[Address(RVA = "0xC706E8", Offset = "0xC706E8", VA = "0xC706E8", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x60022A6")]
	[Address(RVA = "0xC70810", Offset = "0xC70810", VA = "0xC70810")]
	public SuperSamplingKnob()
	{
	}
}
[Token(Token = "0x20005E9")]
public class TextRandomizer : MonoBehaviour
{
	[Token(Token = "0x4002278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LocalizedString[] localizedTexts;

	[Token(Token = "0x4002279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected TextMeshPro _tmpText;

	[Token(Token = "0x400227A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TextMeshProUGUI _tmpUguiText;

	[Token(Token = "0x60022A7")]
	[Address(RVA = "0xC70818", Offset = "0xC70818", VA = "0xC70818", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60022A8")]
	[Address(RVA = "0xC7096C", Offset = "0xC7096C", VA = "0xC7096C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60022A9")]
	[Address(RVA = "0xC709C0", Offset = "0xC709C0", VA = "0xC709C0")]
	protected void selectText()
	{
	}

	[Token(Token = "0x60022AA")]
	[Address(RVA = "0xC70AA4", Offset = "0xC70AA4", VA = "0xC70AA4")]
	public TextRandomizer()
	{
	}
}
[Token(Token = "0x20005EA")]
public class TextRandomizerBackfacing : TextRandomizer
{
	[Token(Token = "0x400227B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isFacing;

	[Token(Token = "0x400227C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _transform;

	[Token(Token = "0x60022AB")]
	[Address(RVA = "0xC70AAC", Offset = "0xC70AAC", VA = "0xC70AAC", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60022AC")]
	[Address(RVA = "0xC70AE0", Offset = "0xC70AE0", VA = "0xC70AE0")]
	private void Update()
	{
	}

	[Token(Token = "0x60022AD")]
	[Address(RVA = "0xC70BE0", Offset = "0xC70BE0", VA = "0xC70BE0")]
	public TextRandomizerBackfacing()
	{
	}
}
[Token(Token = "0x20005EB")]
public abstract class ToggleSwitchBase : MonoBehaviour, ToggleSwitch.IControlee
{
	[Token(Token = "0x400227D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ToggleSwitch toggleSwitch;

	[Token(Token = "0x400227E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationTarget;

	[Token(Token = "0x400227F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float offRotation;

	[Token(Token = "0x4002280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float onRotation;

	[Token(Token = "0x4002281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro valueText;

	[Token(Token = "0x4002282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] amplitudeRenderers;

	[Token(Token = "0x4002283")]
	private const string amplitudeProperty = "_Amplitude";

	[Token(Token = "0x4002284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _amplitudePropId;

	[Token(Token = "0x4002285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UIItemTransitions _transitions;

	[Token(Token = "0x60022AE")]
	[Address(RVA = "0xC70BF0", Offset = "0xC70BF0", VA = "0xC70BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022AF")]
	[Address(RVA = "0xC64A84", Offset = "0xC64A84", VA = "0xC64A84", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60022B0")]
	public abstract bool getAmplitude();

	[Token(Token = "0x60022B1")]
	[Address(RVA = "0xC64CF0", Offset = "0xC64CF0", VA = "0xC64CF0", Slot = "8")]
	public virtual void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x60022B2")]
	[Address(RVA = "0xC70C74", Offset = "0xC70C74", VA = "0xC70C74", Slot = "9")]
	protected virtual bool isOff(bool snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x60022B3")]
	protected abstract string formatText(bool snappedAmplitude);

	[Token(Token = "0x60022B4")]
	[Address(RVA = "0xC65034", Offset = "0xC65034", VA = "0xC65034")]
	protected ToggleSwitchBase()
	{
	}
}
[Token(Token = "0x20005EC")]
public class TutorialPromptUI : Area
{
	[Serializable]
	[Token(Token = "0x20005ED")]
	public class TextList
	{
		[Serializable]
		[Token(Token = "0x20005EE")]
		public class MessageContent
		{
			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject _stageTitle;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject _title;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject _content;

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0xC7168C", Offset = "0xC7168C", VA = "0xC7168C")]
			public MessageContent()
			{
			}
		}

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Stage I")]
		public MessageContent _welcome;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MessageContent _racketAndBall;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MessageContent _gravitySling;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MessageContent _powerShot_first;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public MessageContent _powerShot_didBefore;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Stage II")]
		public MessageContent _gameRules;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MessageContent _targets;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MessageContent _waves;

		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public MessageContent _energyBar;

		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MessageContent _boosters;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Stage III")]
		public MessageContent _finishThis;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MessageContent _failed;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public List<MessageContent> _allTexts;

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0xC70D34", Offset = "0xC70D34", VA = "0xC70D34")]
		public void FillList()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0xC71684", Offset = "0xC71684", VA = "0xC71684")]
		public TextList()
		{
		}
	}

	[Token(Token = "0x4002286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TutorialPromptUI inst;

	[Token(Token = "0x4002287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextList texts;

	[Token(Token = "0x4002288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _annoucerAudioLocation;

	[Token(Token = "0x4002289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public TextList.MessageContent selectedText;

	[Token(Token = "0x400228A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private TextList.MessageContent nextSelectedText;

	[Token(Token = "0x400228B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioManager.SoundEffect nextSelectedTextAudio;

	[Token(Token = "0x400228C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public AudioManager.SoundEffect selectedTextAudio;

	[Token(Token = "0x170005CF")]
	protected override bool shouldHandleMenuButton
	{
		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xC70C80", Offset = "0xC70C80", VA = "0xC70C80", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D0")]
	protected override bool shouldHandleBack
	{
		[Token(Token = "0x60022B6")]
		[Address(RVA = "0xC70C88", Offset = "0xC70C88", VA = "0xC70C88", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D1")]
	protected override bool shouldBeHiddenByPopUp
	{
		[Token(Token = "0x60022B7")]
		[Address(RVA = "0xC70C90", Offset = "0xC70C90", VA = "0xC70C90", Slot = "6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D2")]
	protected override bool shouldRelocateToPlayer
	{
		[Token(Token = "0x60022B8")]
		[Address(RVA = "0xC70C98", Offset = "0xC70C98", VA = "0xC70C98", Slot = "7")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005D3")]
	protected override bool shouldRotateAsPlayer
	{
		[Token(Token = "0x60022B9")]
		[Address(RVA = "0xC70CA0", Offset = "0xC70CA0", VA = "0xC70CA0", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60022BA")]
	[Address(RVA = "0xC70CA8", Offset = "0xC70CA8", VA = "0xC70CA8", Slot = "9")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60022BB")]
	[Address(RVA = "0xC71280", Offset = "0xC71280", VA = "0xC71280", Slot = "19")]
	protected override void onBack()
	{
	}

	[Token(Token = "0x60022BC")]
	[Address(RVA = "0xC71284", Offset = "0xC71284", VA = "0xC71284")]
	public void SetNextSelectedText(TextList.MessageContent nextText, [Optional] AudioManager.SoundEffect sfx)
	{
	}

	[Token(Token = "0x60022BD")]
	[Address(RVA = "0xC712B4", Offset = "0xC712B4", VA = "0xC712B4", Slot = "12")]
	protected override void onShowing()
	{
	}

	[Token(Token = "0x60022BE")]
	[Address(RVA = "0xC712D0", Offset = "0xC712D0", VA = "0xC712D0")]
	protected void SwitchTexts()
	{
	}

	[Token(Token = "0x60022BF")]
	[Address(RVA = "0xC7151C", Offset = "0xC7151C", VA = "0xC7151C", Slot = "15")]
	protected override void onHiding()
	{
	}

	[Token(Token = "0x60022C0")]
	[Address(RVA = "0xC71524", Offset = "0xC71524", VA = "0xC71524")]
	public void onClickedOK()
	{
	}

	[Token(Token = "0x60022C1")]
	[Address(RVA = "0xC715A8", Offset = "0xC715A8", VA = "0xC715A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60022C2")]
	[Address(RVA = "0xC7167C", Offset = "0xC7167C", VA = "0xC7167C")]
	public TutorialPromptUI()
	{
	}
}
[Token(Token = "0x20005EF")]
public class UnavailableWhenOffline : MonoBehaviour
{
	[Token(Token = "0x20005F0")]
	public enum Type
	{
		[Token(Token = "0x40022A5")]
		Undefined,
		[Token(Token = "0x40022A6")]
		Leaderboard,
		[Token(Token = "0x40022A7")]
		Multiplayer,
		[Token(Token = "0x40022A8")]
		MonthlyChallenge
	}

	[Token(Token = "0x20005F1")]
	public enum Reason
	{
		[Token(Token = "0x40022AA")]
		OK,
		[Token(Token = "0x40022AB")]
		Offline,
		[Token(Token = "0x40022AC")]
		TempOffline,
		[Token(Token = "0x40022AD")]
		UnsupportedMultiplayerVersion
	}

	[Token(Token = "0x20005F3")]
	[CompilerGenerated]
	private sealed class <UpdateStateWhenRemoteRNXVersionReadyCo>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnavailableWhenOffline <>4__this;

		[Token(Token = "0x170005D4")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xC72194", Offset = "0xC72194", VA = "0xC72194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0xC721DC", Offset = "0xC721DC", VA = "0xC721DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xC71AD4", Offset = "0xC71AD4", VA = "0xC71AD4")]
		[DebuggerHidden]
		public <UpdateStateWhenRemoteRNXVersionReadyCo>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xC72064", Offset = "0xC72064", VA = "0xC72064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0xC72068", Offset = "0xC72068", VA = "0xC72068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0xC7219C", Offset = "0xC7219C", VA = "0xC7219C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F4")]
	[CompilerGenerated]
	private sealed class <HighlightCo>d__18 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnavailableWhenOffline <>4__this;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <maxScale>5__2;

		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <duration>5__3;

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <t>5__4;

		[Token(Token = "0x170005D6")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xC72364", Offset = "0xC72364", VA = "0xC72364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xC723AC", Offset = "0xC723AC", VA = "0xC723AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xC71F14", Offset = "0xC71F14", VA = "0xC71F14")]
		[DebuggerHidden]
		public <HighlightCo>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xC72238", Offset = "0xC72238", VA = "0xC72238", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0xC7223C", Offset = "0xC7223C", VA = "0xC7223C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0xC7236C", Offset = "0xC7236C", VA = "0xC7236C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400229D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Type type;

	[Token(Token = "0x400229E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Localize _descriptionLocalize;

	[Token(Token = "0x400229F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _originalDescriptionTerm;

	[Token(Token = "0x40022A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x40022A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _textMeshPro_defaultFontSize;

	[Token(Token = "0x40022A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _forcedState;

	[Token(Token = "0x40022A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _coroutinesTag;

	[Token(Token = "0x60022C6")]
	[Address(RVA = "0xC71694", Offset = "0xC71694", VA = "0xC71694")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022C7")]
	[Address(RVA = "0xC71820", Offset = "0xC71820", VA = "0xC71820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60022C8")]
	[Address(RVA = "0xC71920", Offset = "0xC71920", VA = "0xC71920")]
	private void Start()
	{
	}

	[Token(Token = "0x60022C9")]
	[Address(RVA = "0xC71A60", Offset = "0xC71A60", VA = "0xC71A60")]
	[IteratorStateMachine(typeof(<UpdateStateWhenRemoteRNXVersionReadyCo>d__10))]
	private IEnumerator<float> UpdateStateWhenRemoteRNXVersionReadyCo()
	{
		return null;
	}

	[Token(Token = "0x60022CA")]
	[Address(RVA = "0xC71824", Offset = "0xC71824", VA = "0xC71824")]
	private void UpdateState()
	{
	}

	[Token(Token = "0x60022CB")]
	[Address(RVA = "0xC71DC0", Offset = "0xC71DC0", VA = "0xC71DC0")]
	public void ForceToggleAvailability(bool available, Reason reason)
	{
	}

	[Token(Token = "0x60022CC")]
	[Address(RVA = "0xC71DD0", Offset = "0xC71DD0", VA = "0xC71DD0")]
	public void ReleaseForcedState()
	{
	}

	[Token(Token = "0x60022CD")]
	[Address(RVA = "0xC71AFC", Offset = "0xC71AFC", VA = "0xC71AFC")]
	private void toggleAvailability(bool available, Reason reason)
	{
	}

	[Token(Token = "0x60022CE")]
	[Address(RVA = "0xC71DD8", Offset = "0xC71DD8", VA = "0xC71DD8")]
	public void HighlightUI()
	{
	}

	[Token(Token = "0x60022CF")]
	[Address(RVA = "0xC71EA0", Offset = "0xC71EA0", VA = "0xC71EA0")]
	[IteratorStateMachine(typeof(<HighlightCo>d__18))]
	private IEnumerator<float> HighlightCo()
	{
		return null;
	}

	[Token(Token = "0x60022D0")]
	[Address(RVA = "0xC6E0A0", Offset = "0xC6E0A0", VA = "0xC6E0A0")]
	public static void HighlightUI(GameObject go)
	{
	}

	[Token(Token = "0x60022D1")]
	[Address(RVA = "0xC71F3C", Offset = "0xC71F3C", VA = "0xC71F3C")]
	public UnavailableWhenOffline()
	{
	}
}
[Token(Token = "0x20005F5")]
public class Untanglementer : MonoBehaviour
{
	[Token(Token = "0x40022B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float outerRadius;

	[Token(Token = "0x40022BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float innerRadius;

	[Token(Token = "0x40022BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothness;

	[Token(Token = "0x40022BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer spiral;

	[Token(Token = "0x40022BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform innerCircle;

	[Token(Token = "0x40022BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject resetButtonP1;

	[Token(Token = "0x40022BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject resetButtonP2;

	[Token(Token = "0x40022C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _transform;

	[Token(Token = "0x40022C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _camera;

	[Token(Token = "0x40022C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _spiralTransform;

	[Token(Token = "0x40022C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _lastRefDir;

	[Token(Token = "0x40022C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _angleToLastRefDir;

	[Token(Token = "0x40022C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _currentTurnTarget;

	[Token(Token = "0x40022C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _currentTurn;

	[Token(Token = "0x40022C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _currentTurnVelocity;

	[Token(Token = "0x40022C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] _spiralPoints;

	[Token(Token = "0x40022C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color _lastColor;

	[Token(Token = "0x40022CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Image[] _images;

	[Token(Token = "0x40022CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private TextMeshPro _text;

	[Token(Token = "0x40022CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PlayerID _lastPlayerID;

	[Token(Token = "0x40022CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Quaternion ROTATE_90_X;

	[Token(Token = "0x40022CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Quaternion ROTATE_90_X_INVERSE;

	[Token(Token = "0x60022E2")]
	[Address(RVA = "0xC72408", Offset = "0xC72408", VA = "0xC72408")]
	private void updateColors()
	{
	}

	[Token(Token = "0x60022E3")]
	[Address(RVA = "0xC725DC", Offset = "0xC725DC", VA = "0xC725DC")]
	public void onResetButtonClicked()
	{
	}

	[Token(Token = "0x60022E4")]
	[Address(RVA = "0xC7263C", Offset = "0xC7263C", VA = "0xC7263C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022E5")]
	[Address(RVA = "0xC72660", Offset = "0xC72660", VA = "0xC72660")]
	private void Update()
	{
	}

	[Token(Token = "0x60022E6")]
	[Address(RVA = "0xC72EE8", Offset = "0xC72EE8", VA = "0xC72EE8")]
	public Untanglementer()
	{
	}
}
[Token(Token = "0x20005F6")]
public class VersusLeaderBoardUI : LeaderBoardUI
{
	[Serializable]
	[Token(Token = "0x20005F7")]
	public struct RankDiff
	{
		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject arrowUp;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public TextMeshPro arrowUpText;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject arrowDown;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshPro arrowDownText;
	}

	[Token(Token = "0x20005F8")]
	[CompilerGenerated]
	private sealed class <onDataAvailable>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersusLeaderBoardUI <>4__this;

		[Token(Token = "0x170005D8")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0xC73A3C", Offset = "0xC73A3C", VA = "0xC73A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xC73A84", Offset = "0xC73A84", VA = "0xC73A84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xC730E8", Offset = "0xC730E8", VA = "0xC730E8")]
		[DebuggerHidden]
		public <onDataAvailable>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xC739A0", Offset = "0xC739A0", VA = "0xC739A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0xC739A4", Offset = "0xC739A4", VA = "0xC739A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0xC73A44", Offset = "0xC73A44", VA = "0xC73A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40022CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RankDiff rankDiff;

	[Token(Token = "0x40022D0")]
	private const int idlePlayerRowIndex = 5;

	[Token(Token = "0x40022D1")]
	private const int initialPlayerRowIndex = 0;

	[Token(Token = "0x40022D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _scoreAltTextFormat;

	[Token(Token = "0x40022D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static StringBuilder _builder;

	[Token(Token = "0x40022D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LeaderBoardEntry playerRow;

	[Token(Token = "0x60022E8")]
	[Address(RVA = "0xC72FF8", Offset = "0xC72FF8", VA = "0xC72FF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022E9")]
	[Address(RVA = "0xC73074", Offset = "0xC73074", VA = "0xC73074", Slot = "4")]
	[IteratorStateMachine(typeof(<onDataAvailable>d__8))]
	protected override IEnumerator<float> onDataAvailable()
	{
		return null;
	}

	[Token(Token = "0x60022EA")]
	[Address(RVA = "0xC73110", Offset = "0xC73110", VA = "0xC73110")]
	private void updateListItems(bool first)
	{
	}

	[Token(Token = "0x60022EB")]
	[Address(RVA = "0xC737C8", Offset = "0xC737C8", VA = "0xC737C8")]
	private void showRankDiff()
	{
	}

	[Token(Token = "0x60022EC")]
	[Address(RVA = "0xC73914", Offset = "0xC73914", VA = "0xC73914")]
	public VersusLeaderBoardUI()
	{
	}
}
[Token(Token = "0x20005F9")]
public class VolumeKnob : KnobBase
{
	[Token(Token = "0x40022DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public LocalizedString offText;

	[Token(Token = "0x40022DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public VolumeControl.Group audioGroup;

	[Token(Token = "0x60022F4")]
	[Address(RVA = "0xC73AE0", Offset = "0xC73AE0", VA = "0xC73AE0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60022F5")]
	[Address(RVA = "0xC73AE8", Offset = "0xC73AE8", VA = "0xC73AE8", Slot = "7")]
	public override float getAmplitude()
	{
		return default(float);
	}

	[Token(Token = "0x60022F6")]
	[Address(RVA = "0xC73B44", Offset = "0xC73B44", VA = "0xC73B44", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation)
	{
	}

	[Token(Token = "0x60022F7")]
	[Address(RVA = "0xC73BD0", Offset = "0xC73BD0", VA = "0xC73BD0", Slot = "9")]
	protected override bool isOff(float snappedAmplitude)
	{
		return default(bool);
	}

	[Token(Token = "0x60022F8")]
	[Address(RVA = "0xC73CC0", Offset = "0xC73CC0", VA = "0xC73CC0", Slot = "10")]
	protected override FormattedText formatText(float snappedAmplitude)
	{
		return default(FormattedText);
	}

	[Token(Token = "0x60022F9")]
	[Address(RVA = "0xC73DF4", Offset = "0xC73DF4", VA = "0xC73DF4")]
	public VolumeKnob()
	{
	}
}
[Token(Token = "0x20005FA")]
public class WallText : MonoBehaviour
{
	[Token(Token = "0x20005FB")]
	[CompilerGenerated]
	private sealed class <Animate>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WallText <>4__this;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <t>5__2;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <scaleTime>5__3;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <opacityTime>5__4;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <animTime>5__5;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 <startScale>5__6;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 <placedPos>5__7;

		[Token(Token = "0x170005DA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0xC74A04", Offset = "0xC74A04", VA = "0xC74A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002304")]
			[Address(RVA = "0xC74A4C", Offset = "0xC74A4C", VA = "0xC74A4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xC74194", Offset = "0xC74194", VA = "0xC74194")]
		[DebuggerHidden]
		public <Animate>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xC741C4", Offset = "0xC741C4", VA = "0xC741C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xC741C8", Offset = "0xC741C8", VA = "0xC741C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xC74A0C", Offset = "0xC74A0C", VA = "0xC74A0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x40022DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform _transform;

	[NonSerialized]
	[Token(Token = "0x40022DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro _textMesh;

	[Token(Token = "0x40022E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HexTile _placedOnHexTile;

	[Token(Token = "0x40022E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro[] _scoreTexts;

	[Token(Token = "0x40022E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer[] _nonTextRenderers;

	[Token(Token = "0x40022E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro _streakText;

	[Token(Token = "0x40022E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshPro _streakPoints;

	[Token(Token = "0x40022E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve _appearScaleCurve;

	[Token(Token = "0x40022E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve _opacityCurve;

	[Token(Token = "0x40022E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve _moveCurve;

	[Token(Token = "0x40022E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _localPosChange;

	[Token(Token = "0x40022E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float _rollUpAmount;

	[Token(Token = "0x40022EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _curRollUpAmount;

	[Token(Token = "0x40022EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _curRollUpAmountVel;

	[Token(Token = "0x40022EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3[] _movementVectors;

	[Token(Token = "0x40022ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _myMovementVectorIndex;

	[NonSerialized]
	[Token(Token = "0x40022EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _replacedByAnotherWallText;

	[Token(Token = "0x60022FA")]
	[Address(RVA = "0xC73DFC", Offset = "0xC73DFC", VA = "0xC73DFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60022FB")]
	[Address(RVA = "0xC73FA0", Offset = "0xC73FA0", VA = "0xC73FA0")]
	public void AttachToHextile(HexTile attachedHex)
	{
	}

	[Token(Token = "0x60022FC")]
	[Address(RVA = "0xC74118", Offset = "0xC74118", VA = "0xC74118")]
	public void RollUpwards(float amount)
	{
	}

	[Token(Token = "0x60022FD")]
	[Address(RVA = "0xC74120", Offset = "0xC74120", VA = "0xC74120")]
	[IteratorStateMachine(typeof(<Animate>d__20))]
	public IEnumerator<float> Animate()
	{
		return null;
	}

	[Token(Token = "0x60022FE")]
	[Address(RVA = "0xC741BC", Offset = "0xC741BC", VA = "0xC741BC")]
	public WallText()
	{
	}
}
[Token(Token = "0x20005FC")]
public class WallTextFactory : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005FD")]
	public class WallTextTriplet
	{
		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject p1;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject p2;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject coOp;

		[Token(Token = "0x6002316")]
		[Address(RVA = "0xC779E8", Offset = "0xC779E8", VA = "0xC779E8")]
		public void Init(int poolSize)
		{
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xC77AEC", Offset = "0xC77AEC", VA = "0xC77AEC")]
		public GameObject GetPrefabByPlayerID(PlayerID id)
		{
			return null;
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xC77B38", Offset = "0xC77B38", VA = "0xC77B38")]
		public WallTextTriplet()
		{
		}
	}

	[Token(Token = "0x40022F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WallTextFactory inst;

	[Token(Token = "0x40022F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Triplets")]
	public WallTextTriplet _scorePrefab;

	[Token(Token = "0x40022FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WallTextTriplet _scoreBigPrefab;

	[Token(Token = "0x40022FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WallTextTriplet _negativeScorePrefab;

	[Token(Token = "0x40022FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WallTextTriplet _shotTotal;

	[Token(Token = "0x40022FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WallTextTriplet _shotTotalBig;

	[Token(Token = "0x40022FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WallTextTriplet _streakPrefab;

	[Token(Token = "0x40022FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WallTextTriplet _gutterChargePrefab;

	[Token(Token = "0x4002300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WallTextTriplet _gutterSuperChargePrefab;

	[Token(Token = "0x4002301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WallTextTriplet _speedUpPrefab;

	[Token(Token = "0x4002302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WallTextTriplet _achievementUnlocked;

	[Token(Token = "0x4002303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[Header("Single Player")]
	private GameObject _bonusPrefab;

	[Token(Token = "0x4002304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _downerPrefab;

	[Token(Token = "0x4002305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Total shot params")]
	public int minScoreContributionsForTotalShot;

	[Token(Token = "0x4002306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int minScoreForTotalShotBig;

	[Token(Token = "0x4002307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Streak positioning")]
	public float streakCloseToBall;

	[Token(Token = "0x4002308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float streakSideDirectionLength;

	[Token(Token = "0x4002309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float streakDirectionToSide;

	[Token(Token = "0x400230A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Header("Total shot positioning")]
	public float totalDistFromBall;

	[Token(Token = "0x400230B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private StringBuilder _builder;

	[Token(Token = "0x170005DC")]
	public GameObject bonusPrefab
	{
		[Token(Token = "0x6002305")]
		[Address(RVA = "0xC74AA8", Offset = "0xC74AA8", VA = "0xC74AA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005DD")]
	public GameObject downerPrefab
	{
		[Token(Token = "0x6002306")]
		[Address(RVA = "0xC74BEC", Offset = "0xC74BEC", VA = "0xC74BEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002307")]
	[Address(RVA = "0xC74D30", Offset = "0xC74D30", VA = "0xC74D30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002308")]
	[Address(RVA = "0xC74E74", Offset = "0xC74E74", VA = "0xC74E74")]
	public static WallText CreateAchievementUnlocked(Achievement ach)
	{
		return null;
	}

	[Token(Token = "0x6002309")]
	[Address(RVA = "0xC7535C", Offset = "0xC7535C", VA = "0xC7535C")]
	public static WallText CreateSpeedUp(float speed, bool tooFast)
	{
		return null;
	}

	[Token(Token = "0x600230A")]
	[Address(RVA = "0xC75970", Offset = "0xC75970", VA = "0xC75970")]
	public static WallText CreateGutterCharge(Player player, bool superCharge)
	{
		return null;
	}

	[Token(Token = "0x600230B")]
	[Address(RVA = "0xC75F5C", Offset = "0xC75F5C", VA = "0xC75F5C")]
	private static WallText createAnimatedIcon(HexTile hex, GameObject prefab, float rollUpAmount)
	{
		return null;
	}

	[Token(Token = "0x600230C")]
	[Address(RVA = "0xC76140", Offset = "0xC76140", VA = "0xC76140")]
	public static WallText CreateDowner(HexTile hex)
	{
		return null;
	}

	[Token(Token = "0x600230D")]
	[Address(RVA = "0xC762A0", Offset = "0xC762A0", VA = "0xC762A0")]
	public static WallText CreateBonus(HexTile hex)
	{
		return null;
	}

	[Token(Token = "0x600230E")]
	[Address(RVA = "0xC76348", Offset = "0xC76348", VA = "0xC76348")]
	public static WallText CreateScore(Vector3 pos, Vector3 forward, int score, bool player2)
	{
		return null;
	}

	[Token(Token = "0x600230F")]
	[Address(RVA = "0xC7672C", Offset = "0xC7672C", VA = "0xC7672C")]
	public static WallText CreateScore(HexTile hex, int score, bool player2)
	{
		return null;
	}

	[Token(Token = "0x6002310")]
	[Address(RVA = "0xC76840", Offset = "0xC76840", VA = "0xC76840")]
	public static WallText CreateScoreBig(Target target, int score, bool player2, bool oneShot = false, bool doubleBoss = false, bool shielded = false)
	{
		return null;
	}

	[Token(Token = "0x6002311")]
	[Address(RVA = "0xC77290", Offset = "0xC77290", VA = "0xC77290")]
	public static bool WillTotalShotAppear(ShotInfo shot, out bool isBig)
	{
		return default(bool);
	}

	[Token(Token = "0x6002312")]
	[Address(RVA = "0xC77358", Offset = "0xC77358", VA = "0xC77358")]
	public static WallText CreateShotTotal(ShotInfo shot)
	{
		return null;
	}

	[Token(Token = "0x6002313")]
	[Address(RVA = "0xC75304", Offset = "0xC75304", VA = "0xC75304")]
	private static WallText allocate(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6002314")]
	[Address(RVA = "0xC771C4", Offset = "0xC771C4", VA = "0xC771C4")]
	private static void setLocalizedText(TextMeshPro tmp, StringBuilder builder)
	{
	}

	[Token(Token = "0x6002315")]
	[Address(RVA = "0xC7795C", Offset = "0xC7795C", VA = "0xC7795C")]
	public WallTextFactory()
	{
	}
}
[Token(Token = "0x20005FE")]
public abstract class VRPlugin : MonoBehaviour
{
	[Token(Token = "0x20005FF")]
	public enum Side
	{
		[Token(Token = "0x4002317")]
		Left,
		[Token(Token = "0x4002318")]
		Right
	}

	[Token(Token = "0x2000600")]
	public enum PluginLabel
	{
		[Token(Token = "0x400231A")]
		Unknown,
		[Token(Token = "0x400231B")]
		Mouse,
		[Token(Token = "0x400231C")]
		Steam,
		[Token(Token = "0x400231D")]
		Oculus,
		[Token(Token = "0x400231E")]
		PSVR,
		[Token(Token = "0x400231F")]
		Pico,
		[Token(Token = "0x4002320")]
		iQIYI,
		[Token(Token = "0x4002321")]
		GSXR
	}

	[Token(Token = "0x400230F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VrPluginHierarchy hierarchy;

	[Token(Token = "0x4002310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PluginLabel Label;

	[Token(Token = "0x4002311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	internal float _frequency;

	[Token(Token = "0x4002312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _model;

	[Token(Token = "0x4002313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _fadeSphere;

	[Token(Token = "0x4002314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _ColorID;

	[Token(Token = "0x4002315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _fadeToBlackInitialized;

	[Token(Token = "0x170005DE")]
	public float Frequency
	{
		[Token(Token = "0x6002319")]
		[Address(RVA = "0xC77B40", Offset = "0xC77B40", VA = "0xC77B40")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170005DF")]
	public virtual bool HeadphonesConnected
	{
		[Token(Token = "0x600231A")]
		[Address(RVA = "0xC77B48", Offset = "0xC77B48", VA = "0xC77B48", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E0")]
	public string Model
	{
		[Token(Token = "0x600231B")]
		[Address(RVA = "0xC77B50", Offset = "0xC77B50", VA = "0xC77B50")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600231C")]
	[Address(RVA = "0xC77B98", Offset = "0xC77B98", VA = "0xC77B98", Slot = "5")]
	protected virtual string GetModel()
	{
		return null;
	}

	[Token(Token = "0x600231D")]
	[Address(RVA = "0xC77BC8", Offset = "0xC77BC8", VA = "0xC77BC8")]
	private void InitFadeToBlack()
	{
	}

	[Token(Token = "0x600231E")]
	[Address(RVA = "0xC77F28", Offset = "0xC77F28", VA = "0xC77F28", Slot = "6")]
	public virtual void FadeToBlack(float fadeAmount)
	{
	}

	[Token(Token = "0x600231F")]
	[Address(RVA = "0xC77FD8", Offset = "0xC77FD8", VA = "0xC77FD8", Slot = "7")]
	public virtual void ForceOptimizationForOneFrame(bool cpu, bool gpu)
	{
	}

	[Token(Token = "0x6002320")]
	public abstract void Init(out VrPluginHierarchy pluginHierarchy, out VRTrackedController left, out VRTrackedController right);

	[Token(Token = "0x6002321")]
	[Address(RVA = "0xC77FDC", Offset = "0xC77FDC", VA = "0xC77FDC")]
	protected VRPlugin()
	{
	}
}
[Serializable]
[Token(Token = "0x2000601")]
public class VrPluginHierarchy : MonoBehaviour
{
	[Token(Token = "0x4002322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform root;

	[Token(Token = "0x4002323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x4002324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera cam;

	[Token(Token = "0x4002325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform brainHolder;

	[Token(Token = "0x4002326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform handLeft;

	[Token(Token = "0x4002327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform handRight;

	[Token(Token = "0x6002322")]
	[Address(RVA = "0xC77FEC", Offset = "0xC77FEC", VA = "0xC77FEC")]
	public Transform GetHand(VRPlugin.Side side)
	{
		return null;
	}

	[Token(Token = "0x6002323")]
	[Address(RVA = "0xC78004", Offset = "0xC78004", VA = "0xC78004")]
	public VrPluginHierarchy()
	{
	}
}
[Token(Token = "0x2000602")]
public class VRPluginManager : MonoBehaviour, ISingleton
{
	[Token(Token = "0x2000603")]
	[CompilerGenerated]
	private sealed class <FadeInCo>d__60 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400233B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400233C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x400233D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRPluginManager <>4__this;

		[Token(Token = "0x400233E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float duration;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170005EA")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600234E")]
			[Address(RVA = "0xC79B60", Offset = "0xC79B60", VA = "0xC79B60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0xC79BA8", Offset = "0xC79BA8", VA = "0xC79BA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xC78FF4", Offset = "0xC78FF4", VA = "0xC78FF4")]
		[DebuggerHidden]
		public <FadeInCo>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0xC799F8", Offset = "0xC799F8", VA = "0xC799F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xC799FC", Offset = "0xC799FC", VA = "0xC799FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xC79B68", Offset = "0xC79B68", VA = "0xC79B68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4002328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VRPluginManager inst;

	[Token(Token = "0x4002329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal VRPlugin _plugin;

	[Token(Token = "0x400232A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRPlugin mousePlugin;

	[Token(Token = "0x400232B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VrPluginHierarchy mouseHierarchy;

	[Token(Token = "0x400232C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Tooltip("Game Object that contains VrPluginHierarchy")]
	public GameObject hierarchyContainer;

	[Token(Token = "0x400232D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal VrPluginHierarchy hierarchy;

	[Token(Token = "0x4002334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VRTrackedController controllerL;

	[Token(Token = "0x4002335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VRTrackedController controllerR;

	[Token(Token = "0x4002336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _hasFocus;

	[Token(Token = "0x4002337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 _overrideHandPosition;

	[Token(Token = "0x4002338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _overrideHandAmount;

	[Token(Token = "0x4002339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly List<Transform> _handAttachments;

	[Token(Token = "0x400233A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool _canSwitchHands;

	[Token(Token = "0x170005E1")]
	public VRPlugin.PluginLabel Plugin
	{
		[Token(Token = "0x6002324")]
		[Address(RVA = "0xC7800C", Offset = "0xC7800C", VA = "0xC7800C")]
		get
		{
			return default(VRPlugin.PluginLabel);
		}
	}

	[Token(Token = "0x170005E2")]
	public float HmdFrequency
	{
		[Token(Token = "0x6002325")]
		[Address(RVA = "0xC7808C", Offset = "0xC7808C", VA = "0xC7808C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170005E3")]
	public string DeviceModel
	{
		[Token(Token = "0x6002326")]
		[Address(RVA = "0xC78110", Offset = "0xC78110", VA = "0xC78110")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005E4")]
	public bool HeadPhonesConnected
	{
		[Token(Token = "0x6002330")]
		[Address(RVA = "0xC786D4", Offset = "0xC786D4", VA = "0xC786D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170005E5")]
	public VRPlugin.Side ActiveHandSide
	{
		[Token(Token = "0x6002334")]
		[Address(RVA = "0xC78900", Offset = "0xC78900", VA = "0xC78900")]
		[CompilerGenerated]
		get
		{
			return default(VRPlugin.Side);
		}
		[Token(Token = "0x6002335")]
		[Address(RVA = "0xC78908", Offset = "0xC78908", VA = "0xC78908")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x170005E6")]
	public Transform ActiveHand
	{
		[Token(Token = "0x6002336")]
		[Address(RVA = "0xC78910", Offset = "0xC78910", VA = "0xC78910")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005E7")]
	public Transform OtherHand
	{
		[Token(Token = "0x6002337")]
		[Address(RVA = "0xC78940", Offset = "0xC78940", VA = "0xC78940")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005E8")]
	public VRTrackedController activeController
	{
		[Token(Token = "0x6002338")]
		[Address(RVA = "0xC7897C", Offset = "0xC7897C", VA = "0xC7897C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170005E9")]
	public VRTrackedController otherController
	{
		[Token(Token = "0x6002339")]
		[Address(RVA = "0xC78998", Offset = "0xC78998", VA = "0xC78998")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000048")]
	public event Action OnNewPoseApplied
	{
		[Token(Token = "0x6002327")]
		[Address(RVA = "0xC781B0", Offset = "0xC781B0", VA = "0xC781B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002328")]
		[Address(RVA = "0xC7824C", Offset = "0xC7824C", VA = "0xC7824C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000049")]
	public event Action<bool> OnAppFocusChanged
	{
		[Token(Token = "0x6002329")]
		[Address(RVA = "0xC782E8", Offset = "0xC782E8", VA = "0xC782E8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600232A")]
		[Address(RVA = "0xC78398", Offset = "0xC78398", VA = "0xC78398")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004A")]
	public event Action OnHandsSwitched
	{
		[Token(Token = "0x600232B")]
		[Address(RVA = "0xC78448", Offset = "0xC78448", VA = "0xC78448")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600232C")]
		[Address(RVA = "0xC784E4", Offset = "0xC784E4", VA = "0xC784E4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004B")]
	public event Action OnPoseRecentered
	{
		[Token(Token = "0x600232D")]
		[Address(RVA = "0xC78580", Offset = "0xC78580", VA = "0xC78580")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600232E")]
		[Address(RVA = "0xC7861C", Offset = "0xC7861C", VA = "0xC7861C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400004C")]
	public static event Action<bool> OnHeadphonesConnectionChange
	{
		[Token(Token = "0x6002331")]
		[Address(RVA = "0xC786F4", Offset = "0xC786F4", VA = "0xC786F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6002332")]
		[Address(RVA = "0xC787C4", Offset = "0xC787C4", VA = "0xC787C4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600232F")]
	[Address(RVA = "0xC786B8", Offset = "0xC786B8", VA = "0xC786B8")]
	public void PoseRecentered()
	{
	}

	[Token(Token = "0x6002333")]
	[Address(RVA = "0xC78894", Offset = "0xC78894", VA = "0xC78894")]
	public void HeadphonesConnectionChanged(bool connected)
	{
	}

	[Token(Token = "0x600233A")]
	[Address(RVA = "0xC78970", Offset = "0xC78970", VA = "0xC78970")]
	public static VRPlugin.Side OtherSide(VRPlugin.Side side)
	{
		return default(VRPlugin.Side);
	}

	[Token(Token = "0x600233B")]
	[Address(RVA = "0xC789B4", Offset = "0xC789B4", VA = "0xC789B4")]
	public void OverrideHandPosition(Vector3 pos, float amount)
	{
	}

	[Token(Token = "0x600233C")]
	[Address(RVA = "0xC789D4", Offset = "0xC789D4", VA = "0xC789D4")]
	public void NewPoseApplied()
	{
	}

	[Token(Token = "0x600233D")]
	[Address(RVA = "0xC78C98", Offset = "0xC78C98", VA = "0xC78C98")]
	public void AppFocusChanged(bool hasFocus)
	{
	}

	[Token(Token = "0x600233E")]
	[Address(RVA = "0xC78D48", Offset = "0xC78D48", VA = "0xC78D48")]
	public void AddHandAttachment(Transform t)
	{
	}

	[Token(Token = "0x600233F")]
	[Address(RVA = "0xC78DF8", Offset = "0xC78DF8", VA = "0xC78DF8")]
	private void SwitchHand()
	{
	}

	[Token(Token = "0x6002340")]
	[Address(RVA = "0xC78E0C", Offset = "0xC78E0C", VA = "0xC78E0C")]
	public void ForceSwitchHand()
	{
	}

	[Token(Token = "0x6002341")]
	[Address(RVA = "0xC78EC8", Offset = "0xC78EC8", VA = "0xC78EC8")]
	private void ReEnableSwitchHands()
	{
	}

	[Token(Token = "0x6002342")]
	[Address(RVA = "0xC78ED4", Offset = "0xC78ED4", VA = "0xC78ED4")]
	public void ForceOptimizationForOneFrame(bool cpu, bool gpu)
	{
	}

	[Token(Token = "0x6002343")]
	[Address(RVA = "0xC78EFC", Offset = "0xC78EFC", VA = "0xC78EFC")]
	public static void FadeToBlack(float fadeAmount)
	{
	}

	[Token(Token = "0x6002344")]
	[Address(RVA = "0xC78F6C", Offset = "0xC78F6C", VA = "0xC78F6C")]
	[IteratorStateMachine(typeof(<FadeInCo>d__60))]
	private IEnumerator<float> FadeInCo(float delay, float duration)
	{
		return null;
	}

	[Token(Token = "0x6002345")]
	[Address(RVA = "0xC7901C", Offset = "0xC7901C", VA = "0xC7901C", Slot = "4")]
	private void OneHumus.ISingleton.InitSingleton()
	{
	}

	[Token(Token = "0x6002346")]
	[Address(RVA = "0xC79178", Offset = "0xC79178", VA = "0xC79178")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002347")]
	[Address(RVA = "0xC79714", Offset = "0xC79714", VA = "0xC79714")]
	private void SetCloudDiagnosticsMetaData()
	{
	}

	[Token(Token = "0x6002348")]
	[Address(RVA = "0xC798E8", Offset = "0xC798E8", VA = "0xC798E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6002349")]
	[Address(RVA = "0xC79954", Offset = "0xC79954", VA = "0xC79954")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600234A")]
	[Address(RVA = "0xC79960", Offset = "0xC79960", VA = "0xC79960")]
	public VRPluginManager()
	{
	}
}
[Token(Token = "0x2000604")]
public class VRPlugin_Mouse : VRPlugin
{
	[Token(Token = "0x6002351")]
	[Address(RVA = "0xC79C04", Offset = "0xC79C04", VA = "0xC79C04", Slot = "8")]
	public override void Init(out VrPluginHierarchy pluginHierarchy, out VRTrackedController left, out VRTrackedController right)
	{
	}

	[Token(Token = "0x6002352")]
	[Address(RVA = "0xC79D68", Offset = "0xC79D68", VA = "0xC79D68")]
	public void Start()
	{
	}

	[Token(Token = "0x6002353")]
	[Address(RVA = "0xC79DF4", Offset = "0xC79DF4", VA = "0xC79DF4")]
	public void Update()
	{
	}

	[Token(Token = "0x6002354")]
	[Address(RVA = "0xC79E44", Offset = "0xC79E44", VA = "0xC79E44")]
	public VRPlugin_Mouse()
	{
	}
}
[Token(Token = "0x2000605")]
public class VRPlugin_Pico : VRPlugin
{
	[Token(Token = "0x6002355")]
	[Address(RVA = "0xC79E54", Offset = "0xC79E54", VA = "0xC79E54", Slot = "5")]
	protected override string GetModel()
	{
		return null;
	}

	[Token(Token = "0x6002356")]
	[Address(RVA = "0xC79EA4", Offset = "0xC79EA4", VA = "0xC79EA4", Slot = "8")]
	public override void Init(out VrPluginHierarchy pluginHierarchy, out VRTrackedController left, out VRTrackedController right)
	{
	}

	[Token(Token = "0x6002357")]
	[Address(RVA = "0xC79F70", Offset = "0xC79F70", VA = "0xC79F70")]
	public void Start()
	{
	}

	[Token(Token = "0x6002358")]
	[Address(RVA = "0xC7A008", Offset = "0xC7A008", VA = "0xC7A008")]
	public void Update()
	{
	}

	[Token(Token = "0x6002359")]
	[Address(RVA = "0xC7A058", Offset = "0xC7A058", VA = "0xC7A058", Slot = "6")]
	public override void FadeToBlack(float fadeAmount)
	{
	}

	[Token(Token = "0x600235A")]
	[Address(RVA = "0xC7A154", Offset = "0xC7A154", VA = "0xC7A154")]
	public VRPlugin_Pico()
	{
	}
}
[Token(Token = "0x2000606")]
public abstract class VRTrackedController
{
	[Token(Token = "0x2000607")]
	public class Buttons
	{
		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private VRTrackedController _parent;

		[Token(Token = "0x4002349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _triggerPressed;

		[Token(Token = "0x400234C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _menuPressed;

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _backPressed;

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _gripPressed;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _joypadPressed;

		[Token(Token = "0x4002358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _joypadTouched;

		[Token(Token = "0x400235A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int _snapTurn;

		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int _musicSkip;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _musicSkipTimer;

		[Token(Token = "0x170005F3")]
		public bool TriggerPressed
		{
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xC7A4E0", Offset = "0xC7A4E0", VA = "0xC7A4E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xC7A4E8", Offset = "0xC7A4E8", VA = "0xC7A4E8")]
			set
			{
			}
		}

		[Token(Token = "0x170005F4")]
		public bool MenuPressed
		{
			[Token(Token = "0x6002375")]
			[Address(RVA = "0xC7A798", Offset = "0xC7A798", VA = "0xC7A798")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002376")]
			[Address(RVA = "0xC7A7A0", Offset = "0xC7A7A0", VA = "0xC7A7A0")]
			set
			{
			}
		}

		[Token(Token = "0x170005F5")]
		public bool BackPressed
		{
			[Token(Token = "0x600237B")]
			[Address(RVA = "0xC7AB34", Offset = "0xC7AB34", VA = "0xC7AB34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600237C")]
			[Address(RVA = "0xC7AB3C", Offset = "0xC7AB3C", VA = "0xC7AB3C")]
			set
			{
			}
		}

		[Token(Token = "0x170005F6")]
		public bool GripPressed
		{
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xC7ADEC", Offset = "0xC7ADEC", VA = "0xC7ADEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xC7ADF4", Offset = "0xC7ADF4", VA = "0xC7ADF4")]
			set
			{
			}
		}

		[Token(Token = "0x170005F7")]
		public bool JoypadPressed
		{
			[Token(Token = "0x6002387")]
			[Address(RVA = "0xC7B0A4", Offset = "0xC7B0A4", VA = "0xC7B0A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002388")]
			[Address(RVA = "0xC7B0AC", Offset = "0xC7B0AC", VA = "0xC7B0AC")]
			set
			{
			}
		}

		[Token(Token = "0x170005F8")]
		public bool JoypadTouched
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0xC7B35C", Offset = "0xC7B35C", VA = "0xC7B35C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600238E")]
			[Address(RVA = "0xC7B364", Offset = "0xC7B364", VA = "0xC7B364")]
			set
			{
			}
		}

		[Token(Token = "0x170005F9")]
		public int SnapTurn
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xC7B504", Offset = "0xC7B504", VA = "0xC7B504")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xC7B50C", Offset = "0xC7B50C", VA = "0xC7B50C")]
			set
			{
			}
		}

		[Token(Token = "0x170005FA")]
		public int MusicSkip
		{
			[Token(Token = "0x6002397")]
			[Address(RVA = "0xC7B7FC", Offset = "0xC7B7FC", VA = "0xC7B7FC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002398")]
			[Address(RVA = "0xC7B804", Offset = "0xC7B804", VA = "0xC7B804")]
			set
			{
			}
		}

		[Token(Token = "0x1400004D")]
		public event Action OnTriggerClicked
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xC797B0", Offset = "0xC797B0", VA = "0xC797B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600236C")]
			[Address(RVA = "0xC7A3A8", Offset = "0xC7A3A8", VA = "0xC7A3A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event Action OnTriggerReleased
		{
			[Token(Token = "0x600236D")]
			[Address(RVA = "0xC7984C", Offset = "0xC7984C", VA = "0xC7984C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600236E")]
			[Address(RVA = "0xC7A444", Offset = "0xC7A444", VA = "0xC7A444")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action OnMenuClicked
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xC7A528", Offset = "0xC7A528", VA = "0xC7A528")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002372")]
			[Address(RVA = "0xC7A5C4", Offset = "0xC7A5C4", VA = "0xC7A5C4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event Action OnMenuReleased
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xC7A660", Offset = "0xC7A660", VA = "0xC7A660")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xC7A6FC", Offset = "0xC7A6FC", VA = "0xC7A6FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event Action OnBackClicked
		{
			[Token(Token = "0x6002377")]
			[Address(RVA = "0xC7A8C4", Offset = "0xC7A8C4", VA = "0xC7A8C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002378")]
			[Address(RVA = "0xC7A960", Offset = "0xC7A960", VA = "0xC7A960")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event Action OnBackReleased
		{
			[Token(Token = "0x6002379")]
			[Address(RVA = "0xC7A9FC", Offset = "0xC7A9FC", VA = "0xC7A9FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600237A")]
			[Address(RVA = "0xC7AA98", Offset = "0xC7AA98", VA = "0xC7AA98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000053")]
		public event Action OnGripClicked
		{
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xC7AB7C", Offset = "0xC7AB7C", VA = "0xC7AB7C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600237E")]
			[Address(RVA = "0xC7AC18", Offset = "0xC7AC18", VA = "0xC7AC18")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Action OnGripReleased
		{
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xC7ACB4", Offset = "0xC7ACB4", VA = "0xC7ACB4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xC7AD50", Offset = "0xC7AD50", VA = "0xC7AD50")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action OnJoypadClicked
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xC7AE34", Offset = "0xC7AE34", VA = "0xC7AE34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002384")]
			[Address(RVA = "0xC7AED0", Offset = "0xC7AED0", VA = "0xC7AED0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event Action OnJoypadReleased
		{
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xC7AF6C", Offset = "0xC7AF6C", VA = "0xC7AF6C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002386")]
			[Address(RVA = "0xC7B008", Offset = "0xC7B008", VA = "0xC7B008")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event Action OnJoypadTouchedDown
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0xC7B0EC", Offset = "0xC7B0EC", VA = "0xC7B0EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600238A")]
			[Address(RVA = "0xC7B188", Offset = "0xC7B188", VA = "0xC7B188")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event Action OnJoypadTouchedUp
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0xC7B224", Offset = "0xC7B224", VA = "0xC7B224")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600238C")]
			[Address(RVA = "0xC7B2C0", Offset = "0xC7B2C0", VA = "0xC7B2C0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event Action<int> OnSnapTurnRequested
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0xC7B3A4", Offset = "0xC7B3A4", VA = "0xC7B3A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002390")]
			[Address(RVA = "0xC7B454", Offset = "0xC7B454", VA = "0xC7B454")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event Action<int> OnMusicSkipRequested
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xC7B53C", Offset = "0xC7B53C", VA = "0xC7B53C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xC7B5EC", Offset = "0xC7B5EC", VA = "0xC7B5EC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event Action<int> OnMusicSkipRequestedNoDelay
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0xC7B69C", Offset = "0xC7B69C", VA = "0xC7B69C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002396")]
			[Address(RVA = "0xC7B74C", Offset = "0xC7B74C", VA = "0xC7B74C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600236A")]
		[Address(RVA = "0xC7A200", Offset = "0xC7A200", VA = "0xC7A200")]
		public Buttons(VRTrackedController parent)
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0xC7A370", Offset = "0xC7A370", VA = "0xC7A370")]
		public void Reset(VRTrackedController panret)
		{
		}
	}

	[Token(Token = "0x2000608")]
	public enum Model
	{
		[Token(Token = "0x4002360")]
		ViveWand,
		[Token(Token = "0x4002361")]
		OculusTouch,
		[Token(Token = "0x4002362")]
		Index,
		[Token(Token = "0x4002363")]
		PS4_Move,
		[Token(Token = "0x4002364")]
		WMR,
		[Token(Token = "0x4002365")]
		Generic
	}

	[Token(Token = "0x4002341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Model model;

	[Token(Token = "0x4002342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VRPlugin.Side side;

	[Token(Token = "0x4002343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Buttons buttons;

	[Token(Token = "0x4002344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _velocity;

	[Token(Token = "0x4002345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _lastPosition;

	[Token(Token = "0x170005EC")]
	public abstract Vector3 Position
	{
		[Token(Token = "0x600235C")]
		get;
	}

	[Token(Token = "0x170005ED")]
	public abstract Quaternion Rotation
	{
		[Token(Token = "0x600235D")]
		get;
	}

	[Token(Token = "0x170005EE")]
	public abstract Vector3 Forward
	{
		[Token(Token = "0x600235E")]
		get;
	}

	[Token(Token = "0x170005EF")]
	public virtual Vector3 Velocity
	{
		[Token(Token = "0x600235F")]
		[Address(RVA = "0xC7A230", Offset = "0xC7A230", VA = "0xC7A230", Slot = "7")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170005F0")]
	public virtual float TriggerAxis
	{
		[Token(Token = "0x6002360")]
		[Address(RVA = "0xC7A23C", Offset = "0xC7A23C", VA = "0xC7A23C", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170005F1")]
	public virtual Vector2 JoypadAxis
	{
		[Token(Token = "0x6002361")]
		[Address(RVA = "0xC7A268", Offset = "0xC7A268", VA = "0xC7A268", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170005F2")]
	public virtual bool IsPositionTracked
	{
		[Token(Token = "0x6002362")]
		[Address(RVA = "0xC7A274", Offset = "0xC7A274", VA = "0xC7A274", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600235B")]
	[Address(RVA = "0xC7A164", Offset = "0xC7A164", VA = "0xC7A164")]
	public VRTrackedController(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x6002363")]
	[Address(RVA = "0xC7A27C", Offset = "0xC7A27C", VA = "0xC7A27C", Slot = "11")]
	public virtual void HapticPulse(float strength)
	{
	}

	[Token(Token = "0x6002364")]
	[Address(RVA = "0xC7A280", Offset = "0xC7A280", VA = "0xC7A280", Slot = "12")]
	protected virtual void DetectSnapTurn()
	{
	}

	[Token(Token = "0x6002365")]
	[Address(RVA = "0xC7A284", Offset = "0xC7A284", VA = "0xC7A284", Slot = "13")]
	protected virtual void DetectMusicSkip()
	{
	}

	[Token(Token = "0x6002366")]
	[Address(RVA = "0xC7A288", Offset = "0xC7A288", VA = "0xC7A288", Slot = "14")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6002367")]
	[Address(RVA = "0xC7A328", Offset = "0xC7A328", VA = "0xC7A328", Slot = "15")]
	public virtual void OnNewPoseApplied()
	{
	}

	[Token(Token = "0x6002368")]
	[Address(RVA = "0xC7A32C", Offset = "0xC7A32C", VA = "0xC7A32C", Slot = "16")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6002369")]
	[Address(RVA = "0xC78E50", Offset = "0xC78E50", VA = "0xC78E50")]
	public static void SwapButtons(VRTrackedController a, VRTrackedController b)
	{
	}
}
[Token(Token = "0x2000609")]
public class VRTrackedController_Mouse : VRTrackedController
{
	[Token(Token = "0x4002366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 _joypadAxis;

	[Token(Token = "0x4002367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Transform _transform;

	[Token(Token = "0x170005FB")]
	public override Vector3 Position
	{
		[Token(Token = "0x600239A")]
		[Address(RVA = "0xC7B8B0", Offset = "0xC7B8B0", VA = "0xC7B8B0", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170005FC")]
	public override Quaternion Rotation
	{
		[Token(Token = "0x600239B")]
		[Address(RVA = "0xC7B8CC", Offset = "0xC7B8CC", VA = "0xC7B8CC", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170005FD")]
	public override Vector3 Forward
	{
		[Token(Token = "0x600239C")]
		[Address(RVA = "0xC7B8E8", Offset = "0xC7B8E8", VA = "0xC7B8E8", Slot = "6")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170005FE")]
	public override Vector2 JoypadAxis
	{
		[Token(Token = "0x600239D")]
		[Address(RVA = "0xC7B904", Offset = "0xC7B904", VA = "0xC7B904", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x600239E")]
	[Address(RVA = "0xC79CD8", Offset = "0xC79CD8", VA = "0xC79CD8")]
	public VRTrackedController_Mouse(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x600239F")]
	[Address(RVA = "0xC7B90C", Offset = "0xC7B90C", VA = "0xC7B90C", Slot = "12")]
	protected override void DetectSnapTurn()
	{
	}

	[Token(Token = "0x60023A0")]
	[Address(RVA = "0xC7BA2C", Offset = "0xC7BA2C", VA = "0xC7BA2C", Slot = "13")]
	protected override void DetectMusicSkip()
	{
	}

	[Token(Token = "0x60023A1")]
	[Address(RVA = "0xC7BB00", Offset = "0xC7BB00", VA = "0xC7BB00", Slot = "14")]
	public override void Update()
	{
	}
}
[Token(Token = "0x200060A")]
public class VRTrackedController_Pico : VRTrackedController_XR
{
	[Token(Token = "0x60023A2")]
	[Address(RVA = "0xC79F6C", Offset = "0xC79F6C", VA = "0xC79F6C")]
	public VRTrackedController_Pico(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x60023A3")]
	[Address(RVA = "0xC7C2A0", Offset = "0xC7C2A0", VA = "0xC7C2A0", Slot = "11")]
	public override void HapticPulse(float strength)
	{
	}
}
[Token(Token = "0x200060B")]
public abstract class VRTrackedController_XR : VRTrackedController
{
	[Token(Token = "0x4002368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected XRNode _hand;

	[Token(Token = "0x4002369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _transform;

	[Token(Token = "0x400236A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _snapTurnDisabled;

	[Token(Token = "0x170005FF")]
	public override Vector3 Position
	{
		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xC7C3B0", Offset = "0xC7C3B0", VA = "0xC7C3B0", Slot = "4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000600")]
	public override Quaternion Rotation
	{
		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xC7C48C", Offset = "0xC7C48C", VA = "0xC7C48C", Slot = "5")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000601")]
	public override Vector3 Forward
	{
		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xC7C570", Offset = "0xC7C570", VA = "0xC7C570", Slot = "6")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000602")]
	public override float TriggerAxis
	{
		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xC7C614", Offset = "0xC7C614", VA = "0xC7C614", Slot = "8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000603")]
	public override Vector2 JoypadAxis
	{
		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xC7C6B8", Offset = "0xC7C6B8", VA = "0xC7C6B8", Slot = "9")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000604")]
	public override bool IsPositionTracked
	{
		[Token(Token = "0x60023A9")]
		[Address(RVA = "0xC7C790", Offset = "0xC7C790", VA = "0xC7C790", Slot = "10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60023AA")]
	[Address(RVA = "0xC7C0BC", Offset = "0xC7C0BC", VA = "0xC7C0BC")]
	public VRTrackedController_XR(VRPlugin.Side side)
	{
	}

	[Token(Token = "0x60023AB")]
	[Address(RVA = "0xC7C824", Offset = "0xC7C824", VA = "0xC7C824")]
	public static void DetectSnapTurn(VRTrackedController controller, ref bool snapTurnDisabled)
	{
	}

	[Token(Token = "0x60023AC")]
	[Address(RVA = "0xC7C90C", Offset = "0xC7C90C", VA = "0xC7C90C", Slot = "12")]
	protected override void DetectSnapTurn()
	{
	}

	[Token(Token = "0x60023AD")]
	[Address(RVA = "0xC7C914", Offset = "0xC7C914", VA = "0xC7C914")]
	public static void DetectMusicSkip(VRTrackedController controller)
	{
	}

	[Token(Token = "0x60023AE")]
	[Address(RVA = "0xC7C99C", Offset = "0xC7C99C", VA = "0xC7C99C", Slot = "13")]
	protected override void DetectMusicSkip()
	{
	}

	[Token(Token = "0x60023AF")]
	[Address(RVA = "0xC7C9A0", Offset = "0xC7C9A0", VA = "0xC7C9A0", Slot = "14")]
	public override void Update()
	{
	}
}
[Token(Token = "0x200060C")]
public class YURManager : MonoBehaviour
{
	[Token(Token = "0x200060E")]
	[CompilerGenerated]
	private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YURManager <>4__this;

		[Token(Token = "0x17000605")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xC7DF90", Offset = "0xC7DF90", VA = "0xC7DF90", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000606")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xC7DFD8", Offset = "0xC7DFD8", VA = "0xC7DFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0xC7CEBC", Offset = "0xC7CEBC", VA = "0xC7CEBC")]
		[DebuggerHidden]
		public <Start>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0xC7D7C0", Offset = "0xC7D7C0", VA = "0xC7D7C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0xC7D7C4", Offset = "0xC7D7C4", VA = "0xC7D7C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0xC7DF98", Offset = "0xC7DF98", VA = "0xC7DF98", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400236B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject watchPrefab;

	[Token(Token = "0x400236C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject yurWatchHolder;

	[Token(Token = "0x400236D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject circle;

	[Token(Token = "0x400236E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _watch;

	[Token(Token = "0x400236F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YURLeftHand _leftHand;

	[Token(Token = "0x4002370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YURRightHand _rightHand;

	[Token(Token = "0x4002371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YURHMD _hmd;

	[Token(Token = "0x4002372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _beginOnce;

	[Token(Token = "0x60023B0")]
	[Address(RVA = "0xC7CC14", Offset = "0xC7CC14", VA = "0xC7CC14")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023B1")]
	[Address(RVA = "0xC7CE48", Offset = "0xC7CE48", VA = "0xC7CE48")]
	[IteratorStateMachine(typeof(<Start>d__8))]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60023B2")]
	[Address(RVA = "0xC7CEE4", Offset = "0xC7CEE4", VA = "0xC7CEE4")]
	private void BeginOnceWhenYurEnabled()
	{
	}

	[Token(Token = "0x60023B3")]
	[Address(RVA = "0xC7D110", Offset = "0xC7D110", VA = "0xC7D110")]
	private void YURToggleOnSwitched(bool activate)
	{
	}

	[Token(Token = "0x60023B4")]
	[Address(RVA = "0xC7D384", Offset = "0xC7D384", VA = "0xC7D384")]
	private void OnModelChange()
	{
	}

	[Token(Token = "0x60023B5")]
	[Address(RVA = "0xC7D438", Offset = "0xC7D438", VA = "0xC7D438")]
	private void Update()
	{
	}

	[Token(Token = "0x60023B6")]
	[Address(RVA = "0xC7D538", Offset = "0xC7D538", VA = "0xC7D538")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60023B7")]
	[Address(RVA = "0xC7D668", Offset = "0xC7D668", VA = "0xC7D668")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60023B8")]
	[Address(RVA = "0xC7D53C", Offset = "0xC7D53C", VA = "0xC7D53C")]
	private void Close()
	{
	}

	[Token(Token = "0x60023B9")]
	[Address(RVA = "0xC7D66C", Offset = "0xC7D66C", VA = "0xC7D66C")]
	public YURManager()
	{
	}
}
[Token(Token = "0x200060F")]
public class YURToggleSwitch : ToggleSwitchBase
{
	[Token(Token = "0x4002379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static YURToggleSwitch inst;

	[Token(Token = "0x400237B")]
	private const string PLAYER_PREFS_KEY = "YURToggleSwitch_Active";

	[Token(Token = "0x17000607")]
	[HideInInspector]
	public bool Active
	{
		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xC7DFE0", Offset = "0xC7DFE0", VA = "0xC7DFE0")]
		[CompilerGenerated]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xC7DFE8", Offset = "0xC7DFE8", VA = "0xC7DFE8")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1400005C")]
	public event Action<bool> OnSwitched
	{
		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xC7DEE0", Offset = "0xC7DEE0", VA = "0xC7DEE0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xC7DFF4", Offset = "0xC7DFF4", VA = "0xC7DFF4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60023C8")]
	[Address(RVA = "0xC7E0A4", Offset = "0xC7E0A4", VA = "0xC7E0A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60023C9")]
	[Address(RVA = "0xC7E150", Offset = "0xC7E150", VA = "0xC7E150", Slot = "7")]
	public override bool getAmplitude()
	{
		return default(bool);
	}

	[Token(Token = "0x60023CA")]
	[Address(RVA = "0xC7E158", Offset = "0xC7E158", VA = "0xC7E158", Slot = "8")]
	public override void onAmplitudeChanged(float amplitude, bool snappedAmplitude)
	{
	}

	[Token(Token = "0x60023CB")]
	[Address(RVA = "0xC7E2A8", Offset = "0xC7E2A8", VA = "0xC7E2A8", Slot = "10")]
	protected override string formatText(bool snappedAmplitude)
	{
		return null;
	}

	[Token(Token = "0x60023CC")]
	[Address(RVA = "0xC7E310", Offset = "0xC7E310", VA = "0xC7E310")]
	public YURToggleSwitch()
	{
	}
}
[Token(Token = "0x2000610")]
public class YURWatchPlacer : MonoBehaviour
{
	[Token(Token = "0x2000611")]
	public enum Place
	{
		[Token(Token = "0x400237F")]
		Anchor,
		[Token(Token = "0x4002380")]
		Wrist
	}

	[Token(Token = "0x400237D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Place place;

	[Token(Token = "0x60023CD")]
	[Address(RVA = "0xC7E318", Offset = "0xC7E318", VA = "0xC7E318")]
	private void Start()
	{
	}

	[Token(Token = "0x60023CE")]
	[Address(RVA = "0xC7E3E0", Offset = "0xC7E3E0", VA = "0xC7E3E0")]
	private void OnModelChange()
	{
	}

	[Token(Token = "0x60023CF")]
	[Address(RVA = "0xC7E534", Offset = "0xC7E534", VA = "0xC7E534")]
	public YURWatchPlacer()
	{
	}
}
namespace UIgak
{
	[Token(Token = "0x2000612")]
	public class Arm : MonoBehaviour, IOrbitalParent, IExpandableOrbitalParent
	{
		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xC7E53C", Offset = "0xC7E53C", VA = "0xC7E53C")]
		public float getDirection()
		{
			return default(float);
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xC7E564", Offset = "0xC7E564", VA = "0xC7E564")]
		public void setDirection(float angle)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xC7E614", Offset = "0xC7E614", VA = "0xC7E614")]
		public void setVerticalPosition(float angle)
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xC7E6C4", Offset = "0xC7E6C4", VA = "0xC7E6C4", Slot = "4")]
		private void UIgak.IOrbitalParent.onOrbitalSizeChanged()
		{
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0xC7E7B4", Offset = "0xC7E7B4", VA = "0xC7E7B4", Slot = "5")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalExpanded(HorizontalOrbital orbital, HorizontalOrbital expandedOrbital)
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xC7E8C0", Offset = "0xC7E8C0", VA = "0xC7E8C0", Slot = "6")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalUnexpanded(HorizontalOrbital orbital)
		{
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0xC7E9BC", Offset = "0xC7E9BC", VA = "0xC7E9BC")]
		public Arm()
		{
		}
	}
	[Token(Token = "0x2000613")]
	[RequireComponent(typeof(HorizontalOrbital))]
	public class ExpandableOrbital : MonoBehaviour, IClickable
	{
		[Token(Token = "0x2000614")]
		[CompilerGenerated]
		private sealed class <hideExpandableCo>d__15 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x17000609")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60023EE")]
				[Address(RVA = "0xC7F598", Offset = "0xC7F598", VA = "0xC7F598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700060A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023F0")]
				[Address(RVA = "0xC7F5E0", Offset = "0xC7F5E0", VA = "0xC7F5E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0xC7EEB8", Offset = "0xC7EEB8", VA = "0xC7EEB8")]
			[DebuggerHidden]
			public <hideExpandableCo>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xC7F4F8", Offset = "0xC7F4F8", VA = "0xC7F4F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023ED")]
			[Address(RVA = "0xC7F4FC", Offset = "0xC7F4FC", VA = "0xC7F4FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xC7F5A0", Offset = "0xC7F5A0", VA = "0xC7F5A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000615")]
		[CompilerGenerated]
		private sealed class <showExpandedCo>d__17 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x1700060B")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60023F4")]
				[Address(RVA = "0xC7F6CC", Offset = "0xC7F6CC", VA = "0xC7F6CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700060C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023F6")]
				[Address(RVA = "0xC7F714", Offset = "0xC7F714", VA = "0xC7F714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xC7EF58", Offset = "0xC7EF58", VA = "0xC7EF58")]
			[DebuggerHidden]
			public <showExpandedCo>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xC7F63C", Offset = "0xC7F63C", VA = "0xC7F63C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F3")]
			[Address(RVA = "0xC7F640", Offset = "0xC7F640", VA = "0xC7F640", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xC7F6D4", Offset = "0xC7F6D4", VA = "0xC7F6D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000616")]
		[CompilerGenerated]
		private sealed class <hideExpandedCo>d__21 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x1700060D")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60023FA")]
				[Address(RVA = "0xC7F810", Offset = "0xC7F810", VA = "0xC7F810", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700060E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023FC")]
				[Address(RVA = "0xC7F858", Offset = "0xC7F858", VA = "0xC7F858", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0xC7F22C", Offset = "0xC7F22C", VA = "0xC7F22C")]
			[DebuggerHidden]
			public <hideExpandedCo>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xC7F770", Offset = "0xC7F770", VA = "0xC7F770", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023F9")]
			[Address(RVA = "0xC7F774", Offset = "0xC7F774", VA = "0xC7F774", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023FB")]
			[Address(RVA = "0xC7F818", Offset = "0xC7F818", VA = "0xC7F818", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000617")]
		[CompilerGenerated]
		private sealed class <showExpandableCo>d__23 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ExpandableOrbital <>4__this;

			[Token(Token = "0x1700060F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002400")]
				[Address(RVA = "0xC7F944", Offset = "0xC7F944", VA = "0xC7F944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000610")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002402")]
				[Address(RVA = "0xC7F98C", Offset = "0xC7F98C", VA = "0xC7F98C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023FD")]
			[Address(RVA = "0xC7F2CC", Offset = "0xC7F2CC", VA = "0xC7F2CC")]
			[DebuggerHidden]
			public <showExpandableCo>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xC7F8B4", Offset = "0xC7F8B4", VA = "0xC7F8B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0xC7F8B8", Offset = "0xC7F8B8", VA = "0xC7F8B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002401")]
			[Address(RVA = "0xC7F94C", Offset = "0xC7F94C", VA = "0xC7F94C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HorizontalOrbital expandedOrbital;

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISoundPlayer.SoundId expandSound;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UISoundPlayer.SoundId unexpandSound;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent expand;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent unexpand;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _expanded;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HorizontalOrbital _expandableOrbital;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IExpandableOrbitalParent _parent;

		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Area _expandableArea;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Area _expandedArea;

		[Token(Token = "0x17000608")]
		public bool expanded
		{
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xC7E9C4", Offset = "0xC7E9C4", VA = "0xC7E9C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xC7E9CC", Offset = "0xC7E9CC", VA = "0xC7E9CC")]
			set
			{
			}
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xC7E9F0", Offset = "0xC7E9F0", VA = "0xC7E9F0")]
		private void onExpanded()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0xC7EC08", Offset = "0xC7EC08", VA = "0xC7EC08")]
		private void hideExpandable()
		{
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xC7ECE0", Offset = "0xC7ECE0", VA = "0xC7ECE0")]
		[IteratorStateMachine(typeof(<hideExpandableCo>d__15))]
		private IEnumerator<float> hideExpandableCo()
		{
			return null;
		}

		[Token(Token = "0x60023DC")]
		[Address(RVA = "0xC7ED54", Offset = "0xC7ED54", VA = "0xC7ED54")]
		private void showExpanded()
		{
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xC7EEE0", Offset = "0xC7EEE0", VA = "0xC7EEE0")]
		[IteratorStateMachine(typeof(<showExpandedCo>d__17))]
		private IEnumerator<float> showExpandedCo()
		{
			return null;
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xC7EF54", Offset = "0xC7EF54", VA = "0xC7EF54")]
		private void onExpandDone()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xC7EAFC", Offset = "0xC7EAFC", VA = "0xC7EAFC")]
		private void onUnexpanded()
		{
		}

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0xC7EF80", Offset = "0xC7EF80", VA = "0xC7EF80")]
		private void hideExpanded()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xC7F058", Offset = "0xC7F058", VA = "0xC7F058")]
		[IteratorStateMachine(typeof(<hideExpandedCo>d__21))]
		private IEnumerator<float> hideExpandedCo()
		{
			return null;
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0xC7F0CC", Offset = "0xC7F0CC", VA = "0xC7F0CC")]
		private void showExpandable()
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xC7F254", Offset = "0xC7F254", VA = "0xC7F254")]
		[IteratorStateMachine(typeof(<showExpandableCo>d__23))]
		private IEnumerator<float> showExpandableCo()
		{
			return null;
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xC7F2C8", Offset = "0xC7F2C8", VA = "0xC7F2C8")]
		private void onUnexpandDone()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xC7F2F4", Offset = "0xC7F2F4", VA = "0xC7F2F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0xC7F420", Offset = "0xC7F420", VA = "0xC7F420")]
		private void hideExpandedInstantly()
		{
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xC7F4B4", Offset = "0xC7F4B4", VA = "0xC7F4B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0xC7F4C8", Offset = "0xC7F4C8", VA = "0xC7F4C8", Slot = "4")]
		private void UIgak.IClickable.onPointerClick()
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xC7F4E4", Offset = "0xC7F4E4", VA = "0xC7F4E4", Slot = "5")]
		private void UIgak.IClickable.onPointerDown()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xC7F4E8", Offset = "0xC7F4E8", VA = "0xC7F4E8")]
		public ExpandableOrbital()
		{
		}
	}
	[Token(Token = "0x2000618")]
	[RequireComponent(typeof(OrbitalLayout))]
	public class ExpandableOrbitalLayout : MonoBehaviour, IExpandableOrbitalParent
	{
		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OrbitalLayout _layout;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<HorizontalOrbital> _origOrbitals;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _origDirection;

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xC7F9E8", Offset = "0xC7F9E8", VA = "0xC7F9E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0xC7FAC8", Offset = "0xC7FAC8", VA = "0xC7FAC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xC7FC0C", Offset = "0xC7FC0C", VA = "0xC7FC0C", Slot = "4")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalExpanded(HorizontalOrbital orbital, HorizontalOrbital expandedOrbital)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0xC7FF38", Offset = "0xC7FF38", VA = "0xC7FF38", Slot = "5")]
		private void UIgak.IExpandableOrbitalParent.onOrbitalUnexpanded(HorizontalOrbital orbital)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xC800BC", Offset = "0xC800BC", VA = "0xC800BC")]
		private HorizontalOrbital findExpanded()
		{
			return null;
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xC801EC", Offset = "0xC801EC", VA = "0xC801EC")]
		public ExpandableOrbitalLayout()
		{
		}
	}
	[Token(Token = "0x2000619")]
	public abstract class HorizontalOrbital : MonoBehaviour, IOrbital
	{
		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 179.99f)]
		public float horizontalArcDegrees;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float oldHorizontalArcDegrees;

		[Token(Token = "0x17000611")]
		private GameObject UIgak.IOrbital.gameObject
		{
			[Token(Token = "0x600240C")]
			[Address(RVA = "0xC801FC", Offset = "0xC801FC", VA = "0xC801FC", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xC801F4", Offset = "0xC801F4", VA = "0xC801F4", Slot = "8")]
		public virtual float getHorizontalArcDegrees()
		{
			return default(float);
		}

		[Token(Token = "0x600240A")]
		public abstract float getDirection();

		[Token(Token = "0x600240B")]
		public abstract void setDirection(float angle);

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xC80204", Offset = "0xC80204", VA = "0xC80204", Slot = "11")]
		protected virtual void checkForConfigChanges()
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xC80224", Offset = "0xC80224", VA = "0xC80224", Slot = "12")]
		protected virtual void onHorizontalArcDegreesChanged()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xC803E0", Offset = "0xC803E0", VA = "0xC803E0")]
		protected HorizontalOrbital()
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class HorizontalOrbitalLayout : OrbitalLayout
	{
		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Range(0f, 120f)]
		public float paddingDegrees;

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float oldPaddingDegrees;

		[Token(Token = "0x6002410")]
		[Address(RVA = "0xC803F0", Offset = "0xC803F0", VA = "0xC803F0", Slot = "11")]
		protected override void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xC804A0", Offset = "0xC804A0", VA = "0xC804A0")]
		private void onPaddingChanged()
		{
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0xC804B0", Offset = "0xC804B0", VA = "0xC804B0", Slot = "16")]
		protected override void update()
		{
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xC80AB8", Offset = "0xC80AB8", VA = "0xC80AB8")]
		public void forceUpdate()
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xC80824", Offset = "0xC80824", VA = "0xC80824")]
		public float calcTotalArc()
		{
			return default(float);
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xC80AC8", Offset = "0xC80AC8", VA = "0xC80AC8")]
		public HorizontalOrbitalLayout()
		{
		}
	}
	[Token(Token = "0x200061B")]
	public interface IClickable
	{
		[Token(Token = "0x6002416")]
		void onPointerClick();

		[Token(Token = "0x6002417")]
		void onPointerDown();
	}
	[Token(Token = "0x200061C")]
	public interface IDraggable
	{
		[Token(Token = "0x6002418")]
		void updateRotation(Vector3 totalDiff, Vector3 deltaDiff);
	}
	[Token(Token = "0x200061D")]
	public interface IExpandableOrbitalParent
	{
		[Token(Token = "0x6002419")]
		void onOrbitalExpanded(HorizontalOrbital orbital, HorizontalOrbital expandedOrbital);

		[Token(Token = "0x600241A")]
		void onOrbitalUnexpanded(HorizontalOrbital orbital);
	}
	[Token(Token = "0x200061E")]
	public interface IInitializableItem<TData>
	{
		[Token(Token = "0x600241B")]
		void InitializeItem(TData data);
	}
	[Token(Token = "0x200061F")]
	public interface IOrbital
	{
		[Token(Token = "0x17000612")]
		GameObject gameObject
		{
			[Token(Token = "0x600241F")]
			get;
		}

		[Token(Token = "0x600241C")]
		float getHorizontalArcDegrees();

		[Token(Token = "0x600241D")]
		float getDirection();

		[Token(Token = "0x600241E")]
		void setDirection(float angle);
	}
	[Token(Token = "0x2000620")]
	public interface IOrbitalControl
	{
		[Token(Token = "0x6002420")]
		void onHorizontalArcDegreesChanged();

		[Token(Token = "0x6002421")]
		void onHeightDegreesChanged();

		[Token(Token = "0x6002422")]
		void onDistanceChanged();
	}
	[Token(Token = "0x2000621")]
	public interface IOrbitalParent
	{
		[Token(Token = "0x6002423")]
		void onOrbitalSizeChanged();
	}
	[Token(Token = "0x2000622")]
	public interface ITouchable
	{
		[Token(Token = "0x17000613")]
		bool interactable
		{
			[Token(Token = "0x6002424")]
			get;
		}

		[Token(Token = "0x6002425")]
		void onPointerEnter(TouchEventData eventData);

		[Token(Token = "0x6002426")]
		void onPointerExit(TouchEventData eventData);

		[Token(Token = "0x6002427")]
		void onPointerDown(TouchEventData eventData);

		[Token(Token = "0x6002428")]
		void onPointerUp(TouchEventData eventData);
	}
	[Token(Token = "0x2000623")]
	[RequireComponent(typeof(Collider))]
	public class Knob : MonoBehaviour, ITouchable
	{
		[Serializable]
		[Token(Token = "0x2000624")]
		public class Rotation
		{
			[Token(Token = "0x40023AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float speedFactor;

			[Token(Token = "0x40023B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(-180f, 180f)]
			public float minCCWRotation;

			[Token(Token = "0x40023B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(-180f, 180f)]
			public float maxCCWRotation;

			[Token(Token = "0x40023B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[Range(2f, 101f)]
			public int numTicks;

			[Token(Token = "0x17000619")]
			public float tickAngle
			{
				[Token(Token = "0x6002445")]
				[Address(RVA = "0xC8168C", Offset = "0xC8168C", VA = "0xC8168C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0xC82024", Offset = "0xC82024", VA = "0xC82024")]
			public Rotation()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000625")]
		public class Feedback
		{
			[Token(Token = "0x2000626")]
			public enum TickSound
			{
				[Token(Token = "0x40023B7")]
				None,
				[Token(Token = "0x40023B8")]
				Smooth,
				[Token(Token = "0x40023B9")]
				Click
			}

			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(100f, 3999f)]
			public ushort hapticIntensity;

			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TickSound tickSound;

			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(0f, 1f)]
			public float tickSoundVolume;

			[Token(Token = "0x6002447")]
			[Address(RVA = "0xC82044", Offset = "0xC82044", VA = "0xC82044")]
			public Feedback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000627")]
		public class Snap
		{
			[Serializable]
			[Token(Token = "0x2000628")]
			public class Off
			{
				[Token(Token = "0x40023BF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public bool snapToOff;

				[Token(Token = "0x40023C0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float extraAngle;

				[Token(Token = "0x40023C1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				[Range(0f, 1f)]
				public float tickSoundVolume;

				[Token(Token = "0x40023C2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				[Range(100f, 3999f)]
				public ushort hapticIntensity;

				[Token(Token = "0x6002449")]
				[Address(RVA = "0xC8207C", Offset = "0xC8207C", VA = "0xC8207C")]
				public Off()
				{
				}
			}

			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool snapToTick;

			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float flipThreshold;

			[Token(Token = "0x40023BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float stretchFactor;

			[Token(Token = "0x40023BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float smoothTime;

			[Token(Token = "0x40023BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Off off;

			[Token(Token = "0x6002448")]
			[Address(RVA = "0xC8205C", Offset = "0xC8205C", VA = "0xC8205C")]
			public Snap()
			{
			}
		}

		[Token(Token = "0x2000629")]
		public interface IControlee
		{
			[Token(Token = "0x600244A")]
			float getAmplitude();

			[Token(Token = "0x600244B")]
			void onAmplitudeChanged(float amplitude, float snappedAmplitude, float ccwRotation);
		}

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent highlight;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent unhighlight;

		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent grab;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent ungrab;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Rotation rotation;

		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Feedback feedback;

		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Snap snap;

		[Token(Token = "0x40023A5")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IControlee _controlee;

		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _highlighted;

		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool anyGrabbed;

		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _grabbed;

		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 _lastUpDirection;

		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _currentCcwRotation;

		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _visualCcwRotation;

		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _snappedCcwRotation;

		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _snapSmoothVelocity;

		[Token(Token = "0x17000614")]
		public IControlee controlee
		{
			[Token(Token = "0x6002429")]
			[Address(RVA = "0xC80AF0", Offset = "0xC80AF0", VA = "0xC80AF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000615")]
		private bool highlighted
		{
			[Token(Token = "0x600242A")]
			[Address(RVA = "0xC80B34", Offset = "0xC80B34", VA = "0xC80B34")]
			set
			{
			}
		}

		[Token(Token = "0x17000616")]
		private bool grabbed
		{
			[Token(Token = "0x600242B")]
			[Address(RVA = "0xC80CC4", Offset = "0xC80CC4", VA = "0xC80CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000617")]
		private float clampedCcw
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xC80FDC", Offset = "0xC80FDC", VA = "0xC80FDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000618")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x600243C")]
			[Address(RVA = "0xC81880", Offset = "0xC81880", VA = "0xC81880", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xC8100C", Offset = "0xC8100C", VA = "0xC8100C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xC81178", Offset = "0xC81178", VA = "0xC81178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xC80B30", Offset = "0xC80B30", VA = "0xC80B30")]
		private void onControleeSet()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xC8118C", Offset = "0xC8118C", VA = "0xC8118C")]
		public void readAmplitude()
		{
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0xC8144C", Offset = "0xC8144C", VA = "0xC8144C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xC80B58", Offset = "0xC80B58", VA = "0xC80B58")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0xC80C10", Offset = "0xC80C10", VA = "0xC80C10")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002434")]
		[Address(RVA = "0xC80D58", Offset = "0xC80D58", VA = "0xC80D58")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0xC80ED0", Offset = "0xC80ED0", VA = "0xC80ED0")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0xC81524", Offset = "0xC81524", VA = "0xC81524")]
		private bool isOff(float ccwRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0xC815B8", Offset = "0xC815B8", VA = "0xC815B8")]
		private int leftTickNum()
		{
			return default(int);
		}

		[Token(Token = "0x6002438")]
		[Address(RVA = "0xC816A8", Offset = "0xC816A8", VA = "0xC816A8")]
		private float leftTickPos(bool byUserChange)
		{
			return default(float);
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0xC81754", Offset = "0xC81754", VA = "0xC81754")]
		private int rightTickNum()
		{
			return default(int);
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0xC81828", Offset = "0xC81828", VA = "0xC81828")]
		private float rightTickPos()
		{
			return default(float);
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0xC81274", Offset = "0xC81274", VA = "0xC81274")]
		private float snappedCcw(bool byUserChange = true)
		{
			return default(float);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0xC818C0", Offset = "0xC818C0", VA = "0xC818C0", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0xC818DC", Offset = "0xC818DC", VA = "0xC818DC", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600243F")]
		[Address(RVA = "0xC818F0", Offset = "0xC818F0", VA = "0xC818F0", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0xC818F8", Offset = "0xC818F8", VA = "0xC818F8", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002441")]
		[Address(RVA = "0xC81900", Offset = "0xC81900", VA = "0xC81900")]
		private void Update()
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0xC8130C", Offset = "0xC8130C", VA = "0xC8130C")]
		private void notifyAmplitudeChange()
		{
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0xC81E30", Offset = "0xC81E30", VA = "0xC81E30")]
		public void onTick(bool snappedToOrFromOff)
		{
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0xC8201C", Offset = "0xC8201C", VA = "0xC8201C")]
		public Knob()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class Orbital : HorizontalOrbital
	{
		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(-89.99f, 89.99f)]
		public float heightDegrees;

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float oldHeightDegrees;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float distance;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float oldDistance;

		[Token(Token = "0x1700061A")]
		private Arm arm
		{
			[Token(Token = "0x600244C")]
			[Address(RVA = "0xC82098", Offset = "0xC82098", VA = "0xC82098")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xC820FC", Offset = "0xC820FC", VA = "0xC820FC", Slot = "11")]
		protected override void checkForConfigChanges()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xC824B0", Offset = "0xC824B0", VA = "0xC824B0", Slot = "9")]
		public override float getDirection()
		{
			return default(float);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xC8258C", Offset = "0xC8258C", VA = "0xC8258C", Slot = "10")]
		public override void setDirection(float angle)
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xC8216C", Offset = "0xC8216C", VA = "0xC8216C")]
		private void onHeightDegreesChanged()
		{
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0xC82324", Offset = "0xC82324", VA = "0xC82324")]
		private void onDistanceChanged()
		{
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0xC82674", Offset = "0xC82674", VA = "0xC82674")]
		public Orbital()
		{
		}
	}
	[Token(Token = "0x200062B")]
	[RequireComponent(typeof(Orbital))]
	[RequireComponent(typeof(BoxCollider))]
	public class OrbitalBoxControl : MonoBehaviour, IOrbitalControl
	{
		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 89.99f)]
		public float topArcDegrees;

		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float oldTopArcDegrees;

		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 89.99f)]
		public float bottomArcDegrees;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public float oldBottomArcDegrees;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 10f)]
		public float depth;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float oldDepth;

		[Token(Token = "0x40023CD")]
		private const float colliderCenterEpsilon = 0.0001f;

		[Token(Token = "0x40023CE")]
		private const float colliderSizeEpsilon = 0.0001f;

		[Token(Token = "0x6002453")]
		[Address(RVA = "0xC8268C", Offset = "0xC8268C", VA = "0xC8268C", Slot = "4")]
		private void UIgak.IOrbitalControl.onHorizontalArcDegreesChanged()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0xC827E4", Offset = "0xC827E4", VA = "0xC827E4", Slot = "5")]
		private void UIgak.IOrbitalControl.onHeightDegreesChanged()
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0xC827E8", Offset = "0xC827E8", VA = "0xC827E8", Slot = "6")]
		private void UIgak.IOrbitalControl.onDistanceChanged()
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0xC827EC", Offset = "0xC827EC", VA = "0xC827EC")]
		private void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0xC82848", Offset = "0xC82848", VA = "0xC82848")]
		private void onTopArcDegreesChanged()
		{
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0xC8284C", Offset = "0xC8284C", VA = "0xC8284C")]
		private void onBottomArcDegreesChanged()
		{
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0xC82850", Offset = "0xC82850", VA = "0xC82850")]
		private void onDepthChanged()
		{
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0xC82690", Offset = "0xC82690", VA = "0xC82690")]
		private void updateCollider()
		{
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0xC82854", Offset = "0xC82854", VA = "0xC82854")]
		private void setColliderCenter(Vector3 center)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0xC82988", Offset = "0xC82988", VA = "0xC82988")]
		private void setColliderSize(Vector3 size)
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0xC82ABC", Offset = "0xC82ABC", VA = "0xC82ABC")]
		public OrbitalBoxControl()
		{
		}
	}
	[Token(Token = "0x200062C")]
	public abstract class OrbitalLayout : HorizontalOrbital, IOrbitalParent
	{
		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HorizontalOrbital> orbitals;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<HorizontalOrbital> oldOrbitals;

		[Token(Token = "0x600245E")]
		[Address(RVA = "0xC82AD8", Offset = "0xC82AD8", VA = "0xC82AD8", Slot = "9")]
		public override float getDirection()
		{
			return default(float);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0xC82B00", Offset = "0xC82B00", VA = "0xC82B00", Slot = "10")]
		public override void setDirection(float angle)
		{
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0xC8042C", Offset = "0xC8042C", VA = "0xC8042C", Slot = "11")]
		protected override void checkForConfigChanges()
		{
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0xC82BC0", Offset = "0xC82BC0", VA = "0xC82BC0", Slot = "14")]
		protected virtual bool orbitalsChanged()
		{
			return default(bool);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0xC82C24", Offset = "0xC82C24", VA = "0xC82C24", Slot = "15")]
		protected virtual void copyOrbitals()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0xC82BB0", Offset = "0xC82BB0", VA = "0xC82BB0")]
		private void onOrbitalsChanged()
		{
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0xC82CA8", Offset = "0xC82CA8", VA = "0xC82CA8", Slot = "13")]
		private void UIgak.IOrbitalParent.onOrbitalSizeChanged()
		{
		}

		[Token(Token = "0x6002465")]
		protected abstract void update();

		[Token(Token = "0x6002466")]
		[Address(RVA = "0xC80AE0", Offset = "0xC80AE0", VA = "0xC80AE0")]
		protected OrbitalLayout()
		{
		}
	}
	[Token(Token = "0x200062D")]
	[RequireComponent(typeof(Orbital))]
	[RequireComponent(typeof(SphereCollider))]
	public class OrbitalSphereControl : MonoBehaviour, IOrbitalControl
	{
		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 89.99f)]
		public float radiusDegrees;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[HideInInspector]
		public float oldRadiusDegrees;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SphereCollider _collider;

		[Token(Token = "0x40023D4")]
		private const float colliderCenterEpsilon = 0.0001f;

		[Token(Token = "0x40023D5")]
		private const float colliderRadiusEpsilon = 0.0001f;

		[Token(Token = "0x1700061B")]
		private SphereCollider collider
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xC82CB8", Offset = "0xC82CB8", VA = "0xC82CB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0xC82D60", Offset = "0xC82D60", VA = "0xC82D60", Slot = "4")]
		private void UIgak.IOrbitalControl.onHorizontalArcDegreesChanged()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0xC82D64", Offset = "0xC82D64", VA = "0xC82D64", Slot = "5")]
		private void UIgak.IOrbitalControl.onHeightDegreesChanged()
		{
		}

		[Token(Token = "0x600246A")]
		[Address(RVA = "0xC82D68", Offset = "0xC82D68", VA = "0xC82D68", Slot = "6")]
		private void UIgak.IOrbitalControl.onDistanceChanged()
		{
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0xC82E74", Offset = "0xC82E74", VA = "0xC82E74")]
		private void checkForConfigChanges()
		{
		}

		[Token(Token = "0x600246C")]
		[Address(RVA = "0xC82E8C", Offset = "0xC82E8C", VA = "0xC82E8C")]
		private void onRadiusDegreesChanged()
		{
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0xC82D6C", Offset = "0xC82D6C", VA = "0xC82D6C")]
		private void updateCollider()
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0xC82E90", Offset = "0xC82E90", VA = "0xC82E90")]
		private void setColliderCenter(Vector3 center)
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0xC82F98", Offset = "0xC82F98", VA = "0xC82F98")]
		private void setColliderRadius(float radius)
		{
		}

		[Token(Token = "0x6002470")]
		[Address(RVA = "0xC82FFC", Offset = "0xC82FFC", VA = "0xC82FFC")]
		public OrbitalSphereControl()
		{
		}
	}
	[Token(Token = "0x200062E")]
	public class PopUpManager : MonoBehaviour
	{
		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _popUpIsPopped;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _popUpRoot;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PopUpManager inst;

		[Token(Token = "0x1700061C")]
		public bool popUpIsPopped
		{
			[Token(Token = "0x6002471")]
			[Address(RVA = "0xC8300C", Offset = "0xC8300C", VA = "0xC8300C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061D")]
		public Transform popUpRoot
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0xC83014", Offset = "0xC83014", VA = "0xC83014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005D")]
		public event Action<Transform> popUpPopped
		{
			[Token(Token = "0x6002473")]
			[Address(RVA = "0xC8301C", Offset = "0xC8301C", VA = "0xC8301C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002474")]
			[Address(RVA = "0xC830CC", Offset = "0xC830CC", VA = "0xC830CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005E")]
		public event Action popUpUnpopped
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0xC838A0", Offset = "0xC838A0", VA = "0xC838A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002479")]
			[Address(RVA = "0xC8393C", Offset = "0xC8393C", VA = "0xC8393C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0xC8317C", Offset = "0xC8317C", VA = "0xC8317C")]
		public void CloseAllPopups()
		{
		}

		[Token(Token = "0x6002476")]
		[Address(RVA = "0xC83190", Offset = "0xC83190", VA = "0xC83190")]
		private void ClosePopup(Transform root)
		{
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0xC835DC", Offset = "0xC835DC", VA = "0xC835DC")]
		public void onPopUpPopped(Transform root)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0xC839D8", Offset = "0xC839D8", VA = "0xC839D8")]
		public void onPopUpUnpopped()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0xC83A5C", Offset = "0xC83A5C", VA = "0xC83A5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600247C")]
		[Address(RVA = "0xC83AB4", Offset = "0xC83AB4", VA = "0xC83AB4")]
		public PopUpManager()
		{
		}
	}
	[Token(Token = "0x200062F")]
	[RequireComponent(typeof(TouchItem))]
	public class ProgressTouchItem : MonoBehaviour
	{
		[Token(Token = "0x2000630")]
		[CompilerGenerated]
		private sealed class <ProgressCo>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressTouchItem <>4__this;

			[Token(Token = "0x1700061E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002488")]
				[Address(RVA = "0xC840FC", Offset = "0xC840FC", VA = "0xC840FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700061F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600248A")]
				[Address(RVA = "0xC84144", Offset = "0xC84144", VA = "0xC84144", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0xC83E10", Offset = "0xC83E10", VA = "0xC83E10")]
			[DebuggerHidden]
			public <ProgressCo>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002486")]
			[Address(RVA = "0xC83EB4", Offset = "0xC83EB4", VA = "0xC83EB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002487")]
			[Address(RVA = "0xC83EB8", Offset = "0xC83EB8", VA = "0xC83EB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002489")]
			[Address(RVA = "0xC84104", Offset = "0xC84104", VA = "0xC84104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float progressTime;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchItem touchItem;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISoundPlayer.SoundId progressEndSound;

		[NonSerialized]
		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float progress;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent progressEnd;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<float> progressChange;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine progressCo;

		[Token(Token = "0x600247D")]
		[Address(RVA = "0xC83ABC", Offset = "0xC83ABC", VA = "0xC83ABC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600247E")]
		[Address(RVA = "0xC83BF0", Offset = "0xC83BF0", VA = "0xC83BF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0xC83AC0", Offset = "0xC83AC0", VA = "0xC83AC0")]
		private void RegisterEvents()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0xC83BF4", Offset = "0xC83BF4", VA = "0xC83BF4")]
		private void UnRegisterEvents()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0xC83D24", Offset = "0xC83D24", VA = "0xC83D24")]
		private void OnGrab()
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0xC83DC8", Offset = "0xC83DC8", VA = "0xC83DC8")]
		private void OnUnGrab()
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0xC83D54", Offset = "0xC83D54", VA = "0xC83D54")]
		[IteratorStateMachine(typeof(<ProgressCo>d__13))]
		private IEnumerator ProgressCo()
		{
			return null;
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0xC83E38", Offset = "0xC83E38", VA = "0xC83E38")]
		public ProgressTouchItem()
		{
		}
	}
	[Token(Token = "0x2000631")]
	[RequireComponent(typeof(ScrollRect))]
	[RequireComponent(typeof(Collider))]
	public class Scrollable : MonoBehaviour, ITouchable, IDraggable
	{
		[Serializable]
		[Token(Token = "0x2000632")]
		public class Movement
		{
			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float pixelsPerDegree;

			[Token(Token = "0x600249B")]
			[Address(RVA = "0xC84860", Offset = "0xC84860", VA = "0xC84860")]
			public Movement()
			{
			}
		}

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent highlight;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent unhighlight;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent grab;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent ungrab;

		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Movement movement;

		[Token(Token = "0x40023EA")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _highlighted;

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _grabbed;

		[Token(Token = "0x40023ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScrollRect _scrollRect;

		[Token(Token = "0x17000620")]
		private bool highlighted
		{
			[Token(Token = "0x600248B")]
			[Address(RVA = "0xC8414C", Offset = "0xC8414C", VA = "0xC8414C")]
			set
			{
			}
		}

		[Token(Token = "0x17000621")]
		private bool grabbed
		{
			[Token(Token = "0x600248C")]
			[Address(RVA = "0xC842DC", Offset = "0xC842DC", VA = "0xC842DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000622")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x6002493")]
			[Address(RVA = "0xC8459C", Offset = "0xC8459C", VA = "0xC8459C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0xC844CC", Offset = "0xC844CC", VA = "0xC844CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xC844D4", Offset = "0xC844D4", VA = "0xC844D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xC84170", Offset = "0xC84170", VA = "0xC84170")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0xC84228", Offset = "0xC84228", VA = "0xC84228")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0xC84300", Offset = "0xC84300", VA = "0xC84300")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0xC843E8", Offset = "0xC843E8", VA = "0xC843E8")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xC845DC", Offset = "0xC845DC", VA = "0xC845DC", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xC845F8", Offset = "0xC845F8", VA = "0xC845F8", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002496")]
		[Address(RVA = "0xC8460C", Offset = "0xC8460C", VA = "0xC8460C", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0xC84628", Offset = "0xC84628", VA = "0xC84628", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0xC8463C", Offset = "0xC8463C", VA = "0xC8463C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0xC847B4", Offset = "0xC847B4", VA = "0xC847B4", Slot = "9")]
		private void UIgak.IDraggable.updateRotation(Vector3 totalDiff, Vector3 deltaDiff)
		{
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0xC84858", Offset = "0xC84858", VA = "0xC84858")]
		public Scrollable()
		{
		}
	}
	[Token(Token = "0x2000633")]
	public class SelectableDynamicTouchItem : SelectableDynamicTouchItem<object>
	{
		[Token(Token = "0x17000623")]
		public override object Data
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0xC84874", Offset = "0xC84874", VA = "0xC84874", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0xC8487C", Offset = "0xC8487C", VA = "0xC8487C", Slot = "9")]
		public override void InitializeItem(object _)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0xC84880", Offset = "0xC84880", VA = "0xC84880")]
		public SelectableDynamicTouchItem()
		{
		}
	}
	[Token(Token = "0x2000634")]
	[RequireComponent(typeof(TouchItem))]
	public abstract class SelectableDynamicTouchItem<Tdata> : SelectableTouchItem, IInitializableItem<Tdata>, IClickable
	{
		[Serializable]
		[Token(Token = "0x2000635")]
		public class ScrollEvent : UnityEvent<Vector2>
		{
			[Token(Token = "0x60024B1")]
			public ScrollEvent()
			{
			}
		}

		[Token(Token = "0x2000636")]
		[CompilerGenerated]
		private sealed class <IsScrollAfterCo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectableDynamicTouchItem<Tdata> <>4__this;

			[Token(Token = "0x17000629")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024B5")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024B7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B2")]
			[DebuggerHidden]
			public <IsScrollAfterCo>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60024B3")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024B4")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024B6")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000637")]
		[CompilerGenerated]
		private sealed class <ScrollCo>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SelectableDynamicTouchItem<Tdata> <>4__this;

			[Token(Token = "0x1700062B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60024BB")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700062C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60024BD")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60024B8")]
			[DebuggerHidden]
			public <ScrollCo>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60024B9")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60024BA")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60024BC")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Thresholds")]
		public float clickTimeout;

		[Token(Token = "0x40023F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float scrollThreshold;

		[Token(Token = "0x40023F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Events")]
		public ScrollEvent scrollEvent;

		[Token(Token = "0x40023F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isScroll;

		[Token(Token = "0x40023F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Canvas _parentCanvas;

		[Token(Token = "0x40023F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RaycastHit _onDownRaycastHit;

		[Token(Token = "0x40023F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TouchItem _touchItem;

		[Token(Token = "0x40023F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine _isScrollAfterCo;

		[Token(Token = "0x40023F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Coroutine _scrollCo;

		[Token(Token = "0x40023F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _lastScrollPoint;

		[Token(Token = "0x40023F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _deltaScroll;

		[Token(Token = "0x17000624")]
		public abstract Tdata Data
		{
			[Token(Token = "0x600249F")]
			get;
		}

		[Token(Token = "0x17000625")]
		public TouchItem touchItem
		{
			[Token(Token = "0x60024A1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000626")]
		private Canvas _ParentCanvas
		{
			[Token(Token = "0x60024A3")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000627")]
		private Vector2 _CurrentCanvasPoint
		{
			[Token(Token = "0x60024A4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000628")]
		private RaycastHit _CurrentRaycast
		{
			[Token(Token = "0x60024A5")]
			get
			{
				return default(RaycastHit);
			}
		}

		[Token(Token = "0x60024A0")]
		public abstract void InitializeItem(Tdata _);

		[Token(Token = "0x60024A2")]
		public static Vector2 WorldToCanvas(Canvas canvas, Vector3 world_position)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024A6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60024A7")]
		private void StopPointerCoroutines()
		{
		}

		[Token(Token = "0x60024A8")]
		[IteratorStateMachine(typeof(SelectableDynamicTouchItem<>.<IsScrollAfterCo>d__23))]
		private IEnumerator IsScrollAfterCo()
		{
			return null;
		}

		[Token(Token = "0x60024A9")]
		[IteratorStateMachine(typeof(SelectableDynamicTouchItem<>.<ScrollCo>d__25))]
		private IEnumerator ScrollCo()
		{
			return null;
		}

		[Token(Token = "0x60024AA")]
		private void Scroll()
		{
		}

		[Token(Token = "0x60024AB")]
		private void onPointerExit()
		{
		}

		[Token(Token = "0x60024AC")]
		private void onPointerDown()
		{
		}

		[Token(Token = "0x60024AD")]
		private void onPointerUp()
		{
		}

		[Token(Token = "0x60024AE")]
		private void UIgak.IClickable.onPointerClick()
		{
		}

		[Token(Token = "0x60024AF")]
		private void UIgak.IClickable.onPointerDown()
		{
		}

		[Token(Token = "0x60024B0")]
		protected SelectableDynamicTouchItem()
		{
		}
	}
	[Token(Token = "0x2000638")]
	public class SelectableTouchItem : MonoBehaviour, IClickable
	{
		[Token(Token = "0x4002400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isToggle;

		[Token(Token = "0x4002401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool startSelected;

		[Token(Token = "0x4002402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool unselectOnEnable;

		[Token(Token = "0x4002403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool unselectOnDisable;

		[Token(Token = "0x4002404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool selectOnPointerDown;

		[Token(Token = "0x4002405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISoundPlayer.SoundId selectSound;

		[Token(Token = "0x4002406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public UISoundPlayer.SoundId unselectSound;

		[Token(Token = "0x4002407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UISoundPlayer.SoundId disabledSound;

		[Token(Token = "0x4002408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent select;

		[Token(Token = "0x4002409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent unselect;

		[Token(Token = "0x400240A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _selected;

		[Token(Token = "0x400240B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected UIItemTransitions _transitions;

		[Token(Token = "0x400240C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UISoundPlayer _soundPlayer;

		[Token(Token = "0x400240D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _selectedByUser;

		[Token(Token = "0x1700062D")]
		public bool selected
		{
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xC84958", Offset = "0xC84958", VA = "0xC84958")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xC84960", Offset = "0xC84960", VA = "0xC84960")]
			set
			{
			}
		}

		[Token(Token = "0x60024BE")]
		[Address(RVA = "0xC848C8", Offset = "0xC848C8", VA = "0xC848C8")]
		public void SetSelectNoNotify(bool value)
		{
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0xC848D4", Offset = "0xC848D4", VA = "0xC848D4")]
		private void SetSelected(bool value, bool notify)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0xC84CBC", Offset = "0xC84CBC", VA = "0xC84CBC", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0xC84E84", Offset = "0xC84E84", VA = "0xC84E84")]
		private void Start()
		{
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0xC84E9C", Offset = "0xC84E9C", VA = "0xC84E9C")]
		private void onTransitionsStateChanged()
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0xC8496C", Offset = "0xC8496C", VA = "0xC8496C")]
		private void onSelected(bool notify = true)
		{
		}

		[Token(Token = "0x60024C6")]
		[Address(RVA = "0xC84B84", Offset = "0xC84B84", VA = "0xC84B84")]
		private void onUnselected(bool notify = true)
		{
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0xC84AA8", Offset = "0xC84AA8", VA = "0xC84AA8")]
		private void onSelectDisabled()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0xC84ED4", Offset = "0xC84ED4", VA = "0xC84ED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0xC84EF4", Offset = "0xC84EF4", VA = "0xC84EF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0xC84FB4", Offset = "0xC84FB4", VA = "0xC84FB4")]
		protected void Select()
		{
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0xC84FF0", Offset = "0xC84FF0", VA = "0xC84FF0", Slot = "4")]
		private void UIgak.IClickable.onPointerClick()
		{
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xC85000", Offset = "0xC85000", VA = "0xC85000", Slot = "5")]
		private void UIgak.IClickable.onPointerDown()
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xC85010", Offset = "0xC85010", VA = "0xC85010")]
		public SelectableTouchItem()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public class SelectableTouchItemGroup : MonoBehaviour
	{
		[Token(Token = "0x400240E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SelectableTouchItem[] _items;

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0xC85028", Offset = "0xC85028", VA = "0xC85028")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0xC851AC", Offset = "0xC851AC", VA = "0xC851AC")]
		private void onItemSelected(SelectableTouchItem selectedItem)
		{
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0xC85284", Offset = "0xC85284", VA = "0xC85284")]
		public SelectableTouchItemGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063B")]
	public class ScrollSettings
	{
		[Token(Token = "0x4002411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool scrollable;

		[Token(Token = "0x4002412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool scrollX;

		[Token(Token = "0x4002413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool scrollY;

		[Token(Token = "0x60024D3")]
		[Address(RVA = "0xC852AC", Offset = "0xC852AC", VA = "0xC852AC")]
		public ScrollSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063C")]
	public class ItemsPoolSettings
	{
		[Token(Token = "0x4002414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("Dont use dynamic instantiation of the prefab, instead using existing items of the type in the scene")]
		public bool useExistingItems;

		[Token(Token = "0x4002415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Item prefab to instantiate")]
		public GameObject itemPrefab;

		[Token(Token = "0x4002416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The transform of the object to append prefabs children to")]
		public Transform transform;

		[Token(Token = "0x4002417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int initialInstances;

		[Token(Token = "0x4002418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxInstances;

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0xC852B4", Offset = "0xC852B4", VA = "0xC852B4")]
		public ItemsPoolSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063D")]
	public class SelectableTouchItemGroupDynamic : SelectableTouchItemGroupDynamic<SelectableDynamicTouchItem, object>
	{
		[Token(Token = "0x60024D5")]
		[Address(RVA = "0xC852C8", Offset = "0xC852C8", VA = "0xC852C8")]
		public SelectableTouchItemGroupDynamic()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200063E")]
	public class SelectableTouchItemGroupDynamic<Titem, Tdata> : MonoBehaviour where Titem : SelectableDynamicTouchItem<Tdata>
	{
		[Token(Token = "0x200063F")]
		public enum GroupSelectBehaviour
		{
			[Token(Token = "0x400242D")]
			None,
			[Token(Token = "0x400242E")]
			OneOrNone,
			[Token(Token = "0x400242F")]
			StrictlyOne
		}

		[Serializable]
		[Token(Token = "0x2000640")]
		public class ItemEvent : UnityEvent<Titem>
		{
			[Token(Token = "0x60024F9")]
			public ItemEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000641")]
		public class ItemsPool
		{
			[Token(Token = "0x4002430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ItemsPoolSettings _settings;

			[Token(Token = "0x4002431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _usedInstancesCount;

			[Token(Token = "0x4002432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Stack<Titem> _unusedItems;

			[Token(Token = "0x4002433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool _initialized;

			[Token(Token = "0x60024FA")]
			public ItemsPool(ItemsPoolSettings settings)
			{
			}

			[Token(Token = "0x60024FB")]
			public void InitializePool()
			{
			}

			[Token(Token = "0x60024FC")]
			private Titem CreateInstance()
			{
				return null;
			}

			[Token(Token = "0x60024FD")]
			private void ResetGameObject(GameObject itemGo)
			{
			}

			[Token(Token = "0x60024FE")]
			public Titem GetInstance()
			{
				return null;
			}

			[Token(Token = "0x60024FF")]
			public void ReturnInstance(Titem item)
			{
			}
		}

		[Token(Token = "0x4002419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GroupSelectBehaviour groupSelectBehaviour;

		[Token(Token = "0x400241A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Tooltip("Order the items Actual GameObject transform index by their names")]
		public bool orderItems;

		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ScrollSettings scrollSettings;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Header("Events")]
		public ItemEvent itemHighlight;

		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemEvent itemUnHighlight;

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemEvent itemSelected;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemEvent itemDeselected;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SelectableDynamicTouchItem<object>.ScrollEvent scrollEvent;

		[Token(Token = "0x4002421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemsPoolSettings settings;

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ItemsPool itemsPool;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Titem> _items;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> highlightEvents;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> unHighlightEvents;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> selectEvents;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<Titem, UnityAction> deselectEvents;

		[Token(Token = "0x1700062E")]
		public List<Titem> Items
		{
			[Token(Token = "0x60024D6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700062F")]
		public Titem highlightedItem
		{
			[Token(Token = "0x60024D7")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024D8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000630")]
		public Titem unHighlightedItem
		{
			[Token(Token = "0x60024D9")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024DA")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000631")]
		public Titem selectedItem
		{
			[Token(Token = "0x60024DB")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024DC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000632")]
		public Titem deselectedItem
		{
			[Token(Token = "0x60024DD")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x60024DE")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x60024DF")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024E0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60024E1")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60024E2")]
		public void ReSubscribe()
		{
		}

		[Token(Token = "0x60024E3")]
		public Titem AddItem(Tdata data)
		{
			return null;
		}

		[Token(Token = "0x60024E4")]
		public void ClearAndAddItems(IEnumerable<Tdata> data, bool notifyUnselect = true)
		{
		}

		[Token(Token = "0x60024E5")]
		public void Clear(bool notifyUnselect = true)
		{
		}

		[Token(Token = "0x60024E6")]
		public void AddItems(IEnumerable<Tdata> data)
		{
		}

		[Token(Token = "0x60024E7")]
		public void OrderItems(bool force = false)
		{
		}

		[Token(Token = "0x60024E8")]
		private void AddItemListeners(Titem item)
		{
		}

		[Token(Token = "0x60024E9")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60024EA")]
		public void RemoveAll(Tdata tdata)
		{
		}

		[Token(Token = "0x60024EB")]
		public void RemoveAll(IEnumerable<Titem> items)
		{
		}

		[Token(Token = "0x60024EC")]
		public void RemoveItem(Titem item)
		{
		}

		[Token(Token = "0x60024ED")]
		private void ReturnItems(bool notifyUnselect = true)
		{
		}

		[Token(Token = "0x60024EE")]
		public void UnsubscribeItem(Titem item)
		{
		}

		[Token(Token = "0x60024EF")]
		public void UnsubscribeAll()
		{
		}

		[Token(Token = "0x60024F0")]
		public void UnsubscribeAll(IEnumerable<Titem> items)
		{
		}

		[Token(Token = "0x60024F1")]
		public int IndexOf(Titem item)
		{
			return default(int);
		}

		[Token(Token = "0x60024F2")]
		protected virtual void onItemHighligh(Titem highlightedItem)
		{
		}

		[Token(Token = "0x60024F3")]
		protected virtual void onItemUnHighligh(Titem unHighlightedItem)
		{
		}

		[Token(Token = "0x60024F4")]
		protected virtual void onItemSelected(Titem selectedItem)
		{
		}

		[Token(Token = "0x60024F5")]
		private void UnselectAllBut(Titem selectedItem)
		{
		}

		[Token(Token = "0x60024F6")]
		protected virtual void onItemDeselected(Titem deselectedIt)
		{
		}

		[Token(Token = "0x60024F7")]
		private void onItemScroll(Vector2 delta)
		{
		}

		[Token(Token = "0x60024F8")]
		public SelectableTouchItemGroupDynamic()
		{
		}
	}
	[Token(Token = "0x2000645")]
	[RequireComponent(typeof(Collider))]
	public class ToggleSwitch : MonoBehaviour, ITouchable, IDraggable
	{
		[Serializable]
		[Token(Token = "0x2000646")]
		public class Movement
		{
			[Token(Token = "0x2000647")]
			public enum Axis
			{
				[Token(Token = "0x400244E")]
				Vertical,
				[Token(Token = "0x400244F")]
				Horizontal
			}

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Axis axis;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float spanDegrees;

			[Token(Token = "0x6002525")]
			[Address(RVA = "0xC85F38", Offset = "0xC85F38", VA = "0xC85F38")]
			public Movement()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000648")]
		public class Feedback
		{
			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(100f, 3999f)]
			public ushort hapticIntensity;

			[Token(Token = "0x4002451")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Range(0f, 1f)]
			public float tickSoundVolume;

			[Token(Token = "0x6002526")]
			[Address(RVA = "0xC85F48", Offset = "0xC85F48", VA = "0xC85F48")]
			public Feedback()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000649")]
		public class Snap
		{
			[Token(Token = "0x4002452")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float flipThreshold;

			[Token(Token = "0x4002453")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float stretchFactor;

			[Token(Token = "0x4002454")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float smoothTime;

			[Token(Token = "0x6002527")]
			[Address(RVA = "0xC85F60", Offset = "0xC85F60", VA = "0xC85F60")]
			public Snap()
			{
			}
		}

		[Token(Token = "0x200064A")]
		public interface IControlee
		{
			[Token(Token = "0x6002528")]
			bool getAmplitude();

			[Token(Token = "0x6002529")]
			void onAmplitudeChanged(float amplitude, bool snappedAmplitude);
		}

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent highlight;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent unhighlight;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent grab;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent ungrab;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Movement movement;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Feedback feedback;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Snap snap;

		[Token(Token = "0x4002442")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IControlee _controlee;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _highlighted;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _grabbed;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _currentPosition;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _visualPosition;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _snappedPosition;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _snapSmoothVelocity;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider _collider;

		[Token(Token = "0x17000633")]
		public IControlee controlee
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0xC85310", Offset = "0xC85310", VA = "0xC85310")]
			set
			{
			}
		}

		[Token(Token = "0x17000634")]
		private bool highlighted
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xC85354", Offset = "0xC85354", VA = "0xC85354")]
			set
			{
			}
		}

		[Token(Token = "0x17000635")]
		private bool grabbed
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0xC854E4", Offset = "0xC854E4", VA = "0xC854E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000636")]
		private float clampedPosition
		{
			[Token(Token = "0x600250F")]
			[Address(RVA = "0xC85708", Offset = "0xC85708", VA = "0xC85708")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000637")]
		private Collider collider
		{
			[Token(Token = "0x6002510")]
			[Address(RVA = "0xC8573C", Offset = "0xC8573C", VA = "0xC8573C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000638")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x600251B")]
			[Address(RVA = "0xC85C08", Offset = "0xC85C08", VA = "0xC85C08", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xC857E4", Offset = "0xC857E4", VA = "0xC857E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xC8591C", Offset = "0xC8591C", VA = "0xC8591C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xC85350", Offset = "0xC85350", VA = "0xC85350")]
		private void onControleeSet()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xC85930", Offset = "0xC85930", VA = "0xC85930")]
		public void readAmplitude()
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xC85B40", Offset = "0xC85B40", VA = "0xC85B40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xC85378", Offset = "0xC85378", VA = "0xC85378")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xC85430", Offset = "0xC85430", VA = "0xC85430")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xC85508", Offset = "0xC85508", VA = "0xC85508")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xC855F4", Offset = "0xC855F4", VA = "0xC855F4")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xC85A14", Offset = "0xC85A14", VA = "0xC85A14")]
		private float snappedPosition()
		{
			return default(float);
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xC85C48", Offset = "0xC85C48", VA = "0xC85C48", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xC85C64", Offset = "0xC85C64", VA = "0xC85C64", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xC85C78", Offset = "0xC85C78", VA = "0xC85C78", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0xC85C94", Offset = "0xC85C94", VA = "0xC85C94", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0xC85CA8", Offset = "0xC85CA8", VA = "0xC85CA8", Slot = "9")]
		private void UIgak.IDraggable.updateRotation(Vector3 totalDiff, Vector3 deltaDiff)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0xC85A48", Offset = "0xC85A48", VA = "0xC85A48")]
		private void notifyAmplitudeChange()
		{
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xC85F20", Offset = "0xC85F20", VA = "0xC85F20")]
		public void onChangedExternally()
		{
		}

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xC85E54", Offset = "0xC85E54", VA = "0xC85E54")]
		private void onTick()
		{
		}

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xC85F30", Offset = "0xC85F30", VA = "0xC85F30")]
		public ToggleSwitch()
		{
		}
	}
	[Token(Token = "0x200064B")]
	public struct TouchEventData
	{
		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RaycastHit currentRaycast;

		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ITouchable pointerEnter;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 pressPosition;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public RaycastHit pressRaycast;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ITouchable pointerPress;
	}
	[Token(Token = "0x200064C")]
	[RequireComponent(typeof(Collider))]
	public class TouchItem : MonoBehaviour, ITouchable, ITransitionsGroupMember
	{
		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UISoundPlayer.SoundId hoverSound;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public UISoundPlayer.SoundId unhoverSound;

		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UISoundPlayer.SoundId tapSound;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent highlight;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent unhighlight;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent grab;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEvent ungrab;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent tap;

		[Token(Token = "0x4002464")]
		private const int uiLayerIndex = 5;

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _highlighted;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _grabbed;

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _disabledByPopUp;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _disabledByGroup;

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UIItemTransitions _transitions;

		[NonSerialized]
		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool dontDisableByPopups;

		[Token(Token = "0x17000639")]
		private bool highlighted
		{
			[Token(Token = "0x600252C")]
			[Address(RVA = "0xC860B8", Offset = "0xC860B8", VA = "0xC860B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700063A")]
		private bool grabbed
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0xC8636C", Offset = "0xC8636C", VA = "0xC8636C")]
			set
			{
			}
		}

		[Token(Token = "0x1700063B")]
		private bool disabledByPopUp
		{
			[Token(Token = "0x600252E")]
			[Address(RVA = "0xC86480", Offset = "0xC86480", VA = "0xC86480")]
			set
			{
			}
		}

		[Token(Token = "0x1700063C")]
		private bool UIgak.ITouchable.interactable
		{
			[Token(Token = "0x6002538")]
			[Address(RVA = "0xC86998", Offset = "0xC86998", VA = "0xC86998", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400005F")]
		public event Action ITouchableOnPointerDown
		{
			[Token(Token = "0x600252A")]
			[Address(RVA = "0xC85F80", Offset = "0xC85F80", VA = "0xC85F80")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600252B")]
			[Address(RVA = "0xC8601C", Offset = "0xC8601C", VA = "0xC8601C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xC864A0", Offset = "0xC864A0", VA = "0xC864A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0xC86618", Offset = "0xC86618", VA = "0xC86618")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0xC867E4", Offset = "0xC867E4", VA = "0xC867E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0xC860DC", Offset = "0xC860DC", VA = "0xC860DC")]
		private void onHighlighted()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0xC86224", Offset = "0xC86224", VA = "0xC86224")]
		private void onUnhighlighted()
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xC86390", Offset = "0xC86390", VA = "0xC86390")]
		private void onGrabbed()
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xC86408", Offset = "0xC86408", VA = "0xC86408")]
		private void onUngrabbed()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xC86498", Offset = "0xC86498", VA = "0xC86498")]
		private void onDisabledByPopUp()
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0xC8649C", Offset = "0xC8649C", VA = "0xC8649C")]
		private void onUndisabledByPopUp()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0xC86A64", Offset = "0xC86A64", VA = "0xC86A64", Slot = "5")]
		private void UIgak.ITouchable.onPointerEnter(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xC86A80", Offset = "0xC86A80", VA = "0xC86A80", Slot = "6")]
		private void UIgak.ITouchable.onPointerExit(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xC86A94", Offset = "0xC86A94", VA = "0xC86A94", Slot = "7")]
		private void UIgak.ITouchable.onPointerDown(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0xC86C28", Offset = "0xC86C28", VA = "0xC86C28", Slot = "8")]
		private void UIgak.ITouchable.onPointerUp(TouchEventData eventData)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0xC86CD0", Offset = "0xC86CD0", VA = "0xC86CD0")]
		private void onTapped()
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0xC86734", Offset = "0xC86734", VA = "0xC86734")]
		private void updatePopUpState()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0xC86EBC", Offset = "0xC86EBC", VA = "0xC86EBC")]
		private void onPopUpPopped(Transform popUpRoot)
		{
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xC86F20", Offset = "0xC86F20", VA = "0xC86F20")]
		private void onPopUpUnpopped()
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xC86F30", Offset = "0xC86F30", VA = "0xC86F30", Slot = "9")]
		private void UIgak.ITransitionsGroupMember.onGroupVisiblityChanged(bool groupVisible)
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xC86F40", Offset = "0xC86F40", VA = "0xC86F40")]
		public TouchItem()
		{
		}
	}
	[Token(Token = "0x200064D")]
	[RequireComponent(typeof(UIItemTransitions))]
	public class BindUITransitions : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200064E")]
		public class States : UIItemTransitionStates<bool>
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xC87424", Offset = "0xC87424", VA = "0xC87424")]
			public States()
			{
			}
		}

		[Token(Token = "0x200064F")]
		public enum TargetAttribute
		{
			[Token(Token = "0x4002471")]
			Visible,
			[Token(Token = "0x4002472")]
			Enabled,
			[Token(Token = "0x4002473")]
			Selected,
			[Token(Token = "0x4002474")]
			Highlit
		}

		[Token(Token = "0x2000650")]
		[CompilerGenerated]
		private sealed class <updateTargetsWithOneFrameDelayCo>d__12 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BindUITransitions <>4__this;

			[Token(Token = "0x1700063D")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600254F")]
				[Address(RVA = "0xC874BC", Offset = "0xC874BC", VA = "0xC874BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700063E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002551")]
				[Address(RVA = "0xC87504", Offset = "0xC87504", VA = "0xC87504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600254C")]
			[Address(RVA = "0xC873DC", Offset = "0xC873DC", VA = "0xC873DC")]
			[DebuggerHidden]
			public <updateTargetsWithOneFrameDelayCo>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x600254D")]
			[Address(RVA = "0xC8746C", Offset = "0xC8746C", VA = "0xC8746C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600254E")]
			[Address(RVA = "0xC87470", Offset = "0xC87470", VA = "0xC87470", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002550")]
			[Address(RVA = "0xC874C4", Offset = "0xC874C4", VA = "0xC874C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public States states;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIItemTransitions[] targets;

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TargetAttribute targetAttribute;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool oneFrameDelay;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UIItemTransitions _transitions;

		[Token(Token = "0x6002543")]
		[Address(RVA = "0xC86F50", Offset = "0xC86F50", VA = "0xC86F50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xC86FA8", Offset = "0xC86FA8", VA = "0xC86FA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0xC87130", Offset = "0xC87130", VA = "0xC87130")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xC87254", Offset = "0xC87254", VA = "0xC87254")]
		private void onSourceStateChanged()
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xC87038", Offset = "0xC87038", VA = "0xC87038")]
		private void updateTargets()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xC87258", Offset = "0xC87258", VA = "0xC87258")]
		[IteratorStateMachine(typeof(<updateTargetsWithOneFrameDelayCo>d__12))]
		private IEnumerator<float> updateTargetsWithOneFrameDelayCo()
		{
			return null;
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0xC872CC", Offset = "0xC872CC", VA = "0xC872CC")]
		private void updateTargetsNow()
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xC8741C", Offset = "0xC8741C", VA = "0xC8741C")]
		public BindUITransitions()
		{
		}
	}
	[Token(Token = "0x2000651")]
	[RequireComponent(typeof(UIItemTransitions))]
	public class BindUITransitionsAfter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000652")]
		public enum DelayTendency
		{
			[Token(Token = "0x4002483")]
			In,
			[Token(Token = "0x4002484")]
			Out,
			[Token(Token = "0x4002485")]
			Both
		}

		[Token(Token = "0x2000653")]
		[CompilerGenerated]
		private sealed class <UpdateTargetsAfterDelayCo>d__21 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BindUITransitionsAfter <>4__this;

			[Token(Token = "0x1700063F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002562")]
				[Address(RVA = "0xC87EB0", Offset = "0xC87EB0", VA = "0xC87EB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000640")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002564")]
				[Address(RVA = "0xC87EF8", Offset = "0xC87EF8", VA = "0xC87EF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600255F")]
			[Address(RVA = "0xC87DB8", Offset = "0xC87DB8", VA = "0xC87DB8")]
			[DebuggerHidden]
			public <UpdateTargetsAfterDelayCo>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002560")]
			[Address(RVA = "0xC87DF8", Offset = "0xC87DF8", VA = "0xC87DF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002561")]
			[Address(RVA = "0xC87DFC", Offset = "0xC87DFC", VA = "0xC87DFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002563")]
			[Address(RVA = "0xC87EB8", Offset = "0xC87EB8", VA = "0xC87EB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool invertWhileGrabbing;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public DelayTendency delayTendency;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("Delay in seconds to bind state after")]
		public float delay;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BindUITransitions.States states;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UIItemTransitions[] targets;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BindUITransitions.TargetAttribute targetAttribute;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UIItemTransitions _transitions;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchItem _touchItem;

		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isActive;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private CoroutineHandle updateTargetsAfterDelayCo;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xC87560", Offset = "0xC87560", VA = "0xC87560")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0xC875F0", Offset = "0xC875F0", VA = "0xC875F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0xC878C0", Offset = "0xC878C0", VA = "0xC878C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0xC878C4", Offset = "0xC878C4", VA = "0xC878C4")]
		private void UnReggister()
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0xC87720", Offset = "0xC87720", VA = "0xC87720")]
		private void Reggister()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0xC87A64", Offset = "0xC87A64", VA = "0xC87A64")]
		private void OnGrab()
		{
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xC87B28", Offset = "0xC87B28", VA = "0xC87B28")]
		private void OnUnGrab()
		{
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0xC87B3C", Offset = "0xC87B3C", VA = "0xC87B3C")]
		private void onSourceStateChanged()
		{
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0xC87A78", Offset = "0xC87A78", VA = "0xC87A78")]
		private void updateTargetByTendency(bool flipActivation = false)
		{
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0xC87608", Offset = "0xC87608", VA = "0xC87608")]
		private void UpdateTargets()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xC87D44", Offset = "0xC87D44", VA = "0xC87D44")]
		[IteratorStateMachine(typeof(<UpdateTargetsAfterDelayCo>d__21))]
		private IEnumerator<float> UpdateTargetsAfterDelayCo()
		{
			return null;
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xC87B44", Offset = "0xC87B44", VA = "0xC87B44")]
		private void UpdateTargetsNow()
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xC87DE0", Offset = "0xC87DE0", VA = "0xC87DE0")]
		public BindUITransitionsAfter()
		{
		}
	}
	[Token(Token = "0x2000654")]
	public interface ITransitionsGroupMember
	{
		[Token(Token = "0x6002565")]
		void onGroupVisiblityChanged(bool groupVisible);
	}
	[Token(Token = "0x2000655")]
	public class SmoothTransition2D
	{
		[Token(Token = "0x2000656")]
		public enum State
		{
			[Token(Token = "0x4002494")]
			NotNearlyDone,
			[Token(Token = "0x4002495")]
			NearlyDone,
			[Token(Token = "0x4002496")]
			Done
		}

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UIItemTransitionsConfig _config;

		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UIItemTransition _parent;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UIItemState _desiredItemState;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 _desiredT;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _currentT;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _smoothTime;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 _currentVelocity;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _startTime;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _timeout;

		[Token(Token = "0x17000641")]
		public bool notNearlyDone
		{
			[Token(Token = "0x6002566")]
			[Address(RVA = "0xC87F54", Offset = "0xC87F54", VA = "0xC87F54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000642")]
		public bool nearlyDone
		{
			[Token(Token = "0x6002567")]
			[Address(RVA = "0xC87F64", Offset = "0xC87F64", VA = "0xC87F64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000643")]
		public bool done
		{
			[Token(Token = "0x6002568")]
			[Address(RVA = "0xC87F74", Offset = "0xC87F74", VA = "0xC87F74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0xC87F84", Offset = "0xC87F84", VA = "0xC87F84")]
		public SmoothTransition2D(UIItemTransitionsConfig config, UIItemTransition parent)
		{
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0xC87FD4", Offset = "0xC87FD4", VA = "0xC87FD4")]
		public void start(UIItemState desiredState, float timeout = 0f)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0xC8811C", Offset = "0xC8811C", VA = "0xC8811C")]
		public void updateInstantly()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0xC8817C", Offset = "0xC8817C", VA = "0xC8817C")]
		public float update()
		{
			return default(float);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0xC8843C", Offset = "0xC8843C", VA = "0xC8843C")]
		private void finishNow()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class UIItemActivateTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000658")]
		public class ActiveStates : UIItemTransitionStates<bool>
		{
			[Token(Token = "0x6002574")]
			[Address(RVA = "0xC886C0", Offset = "0xC886C0", VA = "0xC886C0")]
			public ActiveStates()
			{
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0xC884B8", Offset = "0xC884B8", VA = "0xC884B8")]
			public ActiveStates(bool activeState)
			{
			}
		}

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ActiveStates activeStates;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _gameObject;

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xC88450", Offset = "0xC88450", VA = "0xC88450")]
		private void Reset()
		{
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xC88510", Offset = "0xC88510", VA = "0xC88510", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002570")]
		[Address(RVA = "0xC885E0", Offset = "0xC885E0", VA = "0xC885E0", Slot = "5")]
		public override void start(UIItemState desiredState)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0xC88624", Offset = "0xC88624", VA = "0xC88624", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0xC8869C", Offset = "0xC8869C", VA = "0xC8869C", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002573")]
		[Address(RVA = "0xC886A0", Offset = "0xC886A0", VA = "0xC886A0")]
		public UIItemActivateTransition()
		{
		}
	}
	[Token(Token = "0x2000659")]
	public class UIItemColorTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200065A")]
		public class Colors : UIItemTransitionStates<Color>
		{
			[Token(Token = "0x600257B")]
			[Address(RVA = "0xC88EE4", Offset = "0xC88EE4", VA = "0xC88EE4")]
			public Colors()
			{
			}

			[Token(Token = "0x600257C")]
			[Address(RVA = "0xC887F8", Offset = "0xC887F8", VA = "0xC887F8")]
			public Colors(Color color)
			{
			}
		}

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Colors colors;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObjectColorerEx _colorer;

		[Token(Token = "0x6002576")]
		[Address(RVA = "0xC88708", Offset = "0xC88708", VA = "0xC88708")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0xC88870", Offset = "0xC88870", VA = "0xC88870", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0xC88CD8", Offset = "0xC88CD8", VA = "0xC88CD8", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0xC88DDC", Offset = "0xC88DDC", VA = "0xC88DDC", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0xC88ED4", Offset = "0xC88ED4", VA = "0xC88ED4")]
		public UIItemColorTransition()
		{
		}
	}
	[Token(Token = "0x200065B")]
	public class UIItemLightTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200065C")]
		public class Intensities : UIItemTransitionStates<float>
		{
			[Token(Token = "0x6002582")]
			[Address(RVA = "0xC89228", Offset = "0xC89228", VA = "0xC89228")]
			public Intensities()
			{
			}

			[Token(Token = "0x6002583")]
			[Address(RVA = "0xC89028", Offset = "0xC89028", VA = "0xC89028")]
			public Intensities(float intensity)
			{
			}
		}

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Intensities intensities;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Light _light;

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xC88F2C", Offset = "0xC88F2C", VA = "0xC88F2C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0xC89080", Offset = "0xC89080", VA = "0xC89080", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xC890F8", Offset = "0xC890F8", VA = "0xC890F8", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0xC89168", Offset = "0xC89168", VA = "0xC89168", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xC89218", Offset = "0xC89218", VA = "0xC89218")]
		public UIItemLightTransition()
		{
		}
	}
	[Token(Token = "0x200065D")]
	public class UIItemMaterialTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x200065E")]
		public class Materials : UIItemTransitionStates<Material>
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0xC89A84", Offset = "0xC89A84", VA = "0xC89A84")]
			public Materials()
			{
			}

			[Token(Token = "0x600258C")]
			[Address(RVA = "0xC893C8", Offset = "0xC893C8", VA = "0xC893C8")]
			public Materials(Material material)
			{
			}
		}

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Materials materials;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Renderer _renderer;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ParticleSystemRenderer _particleSystemRenderer;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MaskableGraphic _maskable;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _maskableAnimatingMaterial;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LocalizeEx _localizeEx;

		[Token(Token = "0x6002584")]
		[Address(RVA = "0xC89270", Offset = "0xC89270", VA = "0xC89270")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xC88A00", Offset = "0xC88A00", VA = "0xC88A00")]
		public void replaceMaterialsWithPPO()
		{
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0xC89544", Offset = "0xC89544", VA = "0xC89544", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xC8965C", Offset = "0xC8965C", VA = "0xC8965C", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xC89724", Offset = "0xC89724", VA = "0xC89724", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xC89420", Offset = "0xC89420", VA = "0xC89420")]
		private void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0xC89A74", Offset = "0xC89A74", VA = "0xC89A74")]
		public UIItemMaterialTransition()
		{
		}
	}
	[Token(Token = "0x200065F")]
	public class UIItemPositionTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000660")]
		public class Positions : UIItemTransitionStates<Vector3>
		{
			[Token(Token = "0x6002593")]
			[Address(RVA = "0xC89DB4", Offset = "0xC89DB4", VA = "0xC89DB4")]
			public Positions()
			{
			}

			[Token(Token = "0x6002594")]
			[Address(RVA = "0xC89B3C", Offset = "0xC89B3C", VA = "0xC89B3C")]
			public Positions(Vector3 offset)
			{
			}
		}

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Positions positions;

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _origPosition;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _currentOffset;

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xC89ACC", Offset = "0xC89ACC", VA = "0xC89ACC")]
		private void Reset()
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xC89BAC", Offset = "0xC89BAC", VA = "0xC89BAC", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xC89C10", Offset = "0xC89C10", VA = "0xC89C10", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0xC89C9C", Offset = "0xC89C9C", VA = "0xC89C9C", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xC89D70", Offset = "0xC89D70", VA = "0xC89D70", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0xC89DA4", Offset = "0xC89DA4", VA = "0xC89DA4")]
		public UIItemPositionTransition()
		{
		}
	}
	[Token(Token = "0x2000661")]
	public class UIItemRotationTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000662")]
		public class Rotations : UIItemTransitionStates<Vector3>
		{
			[Token(Token = "0x600259B")]
			[Address(RVA = "0xC8A1D4", Offset = "0xC8A1D4", VA = "0xC8A1D4")]
			public Rotations()
			{
			}

			[Token(Token = "0x600259C")]
			[Address(RVA = "0xC89E6C", Offset = "0xC89E6C", VA = "0xC89E6C")]
			public Rotations(Vector3 euler)
			{
			}
		}

		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rotations rotations;

		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion _origRotation;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _currentRotation;

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xC89DFC", Offset = "0xC89DFC", VA = "0xC89DFC")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0xC89EDC", Offset = "0xC89EDC", VA = "0xC89EDC", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xC89F40", Offset = "0xC89F40", VA = "0xC89F40", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0xC8A04C", Offset = "0xC8A04C", VA = "0xC8A04C", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xC8A198", Offset = "0xC8A198", VA = "0xC8A198", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xC8A1C4", Offset = "0xC8A1C4", VA = "0xC8A1C4")]
		public UIItemRotationTransition()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public class UIItemScaleTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000664")]
		public class Scales : UIItemTransitionStates<float>
		{
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0xC8A4C0", Offset = "0xC8A4C0", VA = "0xC8A4C0")]
			public Scales()
			{
			}

			[Token(Token = "0x60025A4")]
			[Address(RVA = "0xC8A284", Offset = "0xC8A284", VA = "0xC8A284")]
			public Scales(float scale)
			{
			}
		}

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Scales scales;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _origScale;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _currentScale;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xC8A21C", Offset = "0xC8A21C", VA = "0xC8A21C")]
		private void Reset()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0xC8A2DC", Offset = "0xC8A2DC", VA = "0xC8A2DC", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xC8A340", Offset = "0xC8A340", VA = "0xC8A340", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xC8A3CC", Offset = "0xC8A3CC", VA = "0xC8A3CC", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xC8A484", Offset = "0xC8A484", VA = "0xC8A484", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0xC8A4B0", Offset = "0xC8A4B0", VA = "0xC8A4B0")]
		public UIItemScaleTransition()
		{
		}
	}
	[Token(Token = "0x2000665")]
	public class UIItemShaderFloatTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000666")]
		public class Values : UIItemTransitionStates<float>
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xC8AFCC", Offset = "0xC8AFCC", VA = "0xC8AFCC")]
			public Values()
			{
			}

			[Token(Token = "0x60025B2")]
			[Address(RVA = "0xC8B014", Offset = "0xC8B014", VA = "0xC8B014")]
			public Values(float value)
			{
			}
		}

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string propertyName;

		[NonSerialized]
		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _oldPropertyName;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Values values;

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _propertyId;

		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Renderer _renderer;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Image _image;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material _origSharedMaterial;

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material _material;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _shouldDestroyMaterial;

		[Token(Token = "0x17000644")]
		public Material material
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0xC8A508", Offset = "0xC8A508", VA = "0xC8A508")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xC88C70", Offset = "0xC88C70", VA = "0xC88C70")]
		public void replaceMaterialsWithPPO()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xC8A510", Offset = "0xC8A510", VA = "0xC8A510", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0xC8A5E0", Offset = "0xC8A5E0", VA = "0xC8A5E0")]
		private void initRenderer(bool debug)
		{
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xC8A864", Offset = "0xC8A864", VA = "0xC8A864")]
		private void initImage(bool debug)
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0xC8AB00", Offset = "0xC8AB00", VA = "0xC8AB00")]
		private Material getMaterialFromSibling()
		{
			return null;
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xC8AC10", Offset = "0xC8AC10", VA = "0xC8AC10", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xC8AD50", Offset = "0xC8AD50", VA = "0xC8AD50", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xC8AE54", Offset = "0xC8AE54", VA = "0xC8AE54", Slot = "10")]
		public override void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0xC8AFB8", Offset = "0xC8AFB8", VA = "0xC8AFB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xC8AE5C", Offset = "0xC8AE5C", VA = "0xC8AE5C")]
		private void restoreMaterial()
		{
		}

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0xC8AFBC", Offset = "0xC8AFBC", VA = "0xC8AFBC")]
		public UIItemShaderFloatTransition()
		{
		}
	}
	[Token(Token = "0x2000667")]
	public enum UIItemState
	{
		[Token(Token = "0x40024B9")]
		Hidden,
		[Token(Token = "0x40024BA")]
		Idle,
		[Token(Token = "0x40024BB")]
		Highlit,
		[Token(Token = "0x40024BC")]
		Selected,
		[Token(Token = "0x40024BD")]
		DisabledIdle,
		[Token(Token = "0x40024BE")]
		DisabledHighlit,
		[Token(Token = "0x40024BF")]
		SelectedAndHighlit
	}
	[Token(Token = "0x2000668")]
	public class UIItemTransformAbsoluteTransition : UIItemTransition
	{
		[Serializable]
		[Token(Token = "0x2000669")]
		public class Matrix
		{
			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotation;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 scale;

			[Token(Token = "0x60025B8")]
			[Address(RVA = "0xC8B320", Offset = "0xC8B320", VA = "0xC8B320")]
			public Matrix()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200066A")]
		public class Matrixes : UIItemTransitionStates<Matrix>
		{
			[Token(Token = "0x60025B9")]
			[Address(RVA = "0xC8B3C8", Offset = "0xC8B3C8", VA = "0xC8B3C8")]
			public Matrixes()
			{
			}

			[Token(Token = "0x60025BA")]
			[Address(RVA = "0xC8B410", Offset = "0xC8B410", VA = "0xC8B410")]
			public Matrixes(Matrix matrix)
			{
			}
		}

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Matrixes matrixes;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _transform;

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xC8B06C", Offset = "0xC8B06C", VA = "0xC8B06C")]
		private void Reset()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0xC8B070", Offset = "0xC8B070", VA = "0xC8B070", Slot = "4")]
		public override void init(UIItemTransitionsConfig config, bool debug)
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xC8B0A0", Offset = "0xC8B0A0", VA = "0xC8B0A0", Slot = "6")]
		public override void updateInstantly()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0xC8B150", Offset = "0xC8B150", VA = "0xC8B150", Slot = "7")]
		public override void update()
		{
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xC8B310", Offset = "0xC8B310", VA = "0xC8B310")]
		public UIItemTransformAbsoluteTransition()
		{
		}
	}
	[Token(Token = "0x200066B")]
	public abstract class UIItemTransition : MonoBehaviour
	{
		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speedFactor;

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected SmoothTransition2D _transition;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected UIItemState _desiredItemState;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _initialized;

		[Token(Token = "0x17000645")]
		public bool initialized
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0xC8B468", Offset = "0xC8B468", VA = "0xC8B468")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000646")]
		public bool notNearlyDone
		{
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0xC8B470", Offset = "0xC8B470", VA = "0xC8B470")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000647")]
		public bool nearlyDone
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0xC8B494", Offset = "0xC8B494", VA = "0xC8B494")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000648")]
		public bool done
		{
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0xC8B4B8", Offset = "0xC8B4B8", VA = "0xC8B4B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xC88540", Offset = "0xC88540", VA = "0xC88540", Slot = "4")]
		public virtual void init(UIItemTransitionsConfig config, bool debug = false)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0xC88600", Offset = "0xC88600", VA = "0xC88600", Slot = "5")]
		public virtual void start(UIItemState desiredState)
		{
		}

		[Token(Token = "0x60025C1")]
		public abstract void updateInstantly();

		[Token(Token = "0x60025C2")]
		public abstract void update();

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xC8B4DC", Offset = "0xC8B4DC", VA = "0xC8B4DC", Slot = "8")]
		public virtual void startDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xC8B4EC", Offset = "0xC8B4EC", VA = "0xC8B4EC", Slot = "9")]
		public virtual void updateDebug(UIItemTransitionsConfig config, UIItemState desiredState)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xC89D9C", Offset = "0xC89D9C", VA = "0xC89D9C", Slot = "10")]
		public virtual void endDebug(UIItemTransitionsConfig config)
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xC886B0", Offset = "0xC886B0", VA = "0xC886B0")]
		protected UIItemTransition()
		{
		}
	}
	[Token(Token = "0x200066C")]
	public class UIItemTransitions : MonoBehaviour, ITransitionsGroupMember
	{
		[Token(Token = "0x200066D")]
		public enum AutoSet
		{
			[Token(Token = "0x40024DD")]
			LeaveAlone,
			[Token(Token = "0x40024DE")]
			Yes,
			[Token(Token = "0x40024DF")]
			No
		}

		[Serializable]
		[Token(Token = "0x200066E")]
		public struct Debugg
		{
			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[Tooltip("Test states in edit mode (destructive)")]
			public bool enable;

			[NonSerialized]
			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool wasEnabled;

			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[Tooltip("State to test in edit mode (destructive)")]
			public UIItemState state;

			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[Tooltip("Debug flow in runtime (safe)")]
			public bool printFlow;
		}

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIItemTransitionsConfig config;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AutoSet startVisible;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AutoSet startDisabled;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject[] additionalTransitionTrees;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Debugg debug;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disabledByPopups;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _initialized;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		private bool _visible;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		private bool _disabled;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _pointerOver;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _selected;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		private bool _groupVisible;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UIItemState _desiredState;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _transitioning;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private UIItemTransition[] _transitions;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _allDone;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _allNearlyDone;

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		private bool _disabledByPopUp;

		[Token(Token = "0x17000649")]
		public bool visible
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0xC8B528", Offset = "0xC8B528", VA = "0xC8B528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xC87404", Offset = "0xC87404", VA = "0xC87404")]
			set
			{
			}
		}

		[Token(Token = "0x1700064A")]
		public bool disabled
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0xC8B5BC", Offset = "0xC8B5BC", VA = "0xC8B5BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0xC87410", Offset = "0xC87410", VA = "0xC87410")]
			set
			{
			}
		}

		[Token(Token = "0x1700064B")]
		public bool pointerOver
		{
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xC8B5C4", Offset = "0xC8B5C4", VA = "0xC8B5C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0xC8150C", Offset = "0xC8150C", VA = "0xC8150C")]
			set
			{
			}
		}

		[Token(Token = "0x1700064C")]
		public bool selected
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xC81518", Offset = "0xC81518", VA = "0xC81518")]
			set
			{
			}
		}

		[Token(Token = "0x1700064D")]
		public UIItemState desiredState
		{
			[Token(Token = "0x60025CE")]
			[Address(RVA = "0xC8B5CC", Offset = "0xC8B5CC", VA = "0xC8B5CC")]
			get
			{
				return default(UIItemState);
			}
		}

		[Token(Token = "0x1700064E")]
		public bool transitioning
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0xC8B5D4", Offset = "0xC8B5D4", VA = "0xC8B5D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700064F")]
		public bool nearlyDone
		{
			[Token(Token = "0x60025D2")]
			[Address(RVA = "0xC8B5E0", Offset = "0xC8B5E0", VA = "0xC8B5E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000650")]
		public bool done
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xC8B600", Offset = "0xC8B600", VA = "0xC8B600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000651")]
		private bool disabledByPopUp
		{
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xC8B610", Offset = "0xC8B610", VA = "0xC8B610")]
			set
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event Action desiredStateChanged
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xC84DE8", Offset = "0xC84DE8", VA = "0xC84DE8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0xC871B8", Offset = "0xC871B8", VA = "0xC871B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xC8B634", Offset = "0xC8B634", VA = "0xC8B634")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0xC8B638", Offset = "0xC8B638", VA = "0xC8B638")]
		private void initialize()
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0xC8B740", Offset = "0xC8B740", VA = "0xC8B740")]
		private UIItemTransition[] findAllTransitions()
		{
			return null;
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0xC8B9D4", Offset = "0xC8B9D4", VA = "0xC8B9D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0xC8BD18", Offset = "0xC8BD18", VA = "0xC8BD18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0xC8BB1C", Offset = "0xC8BB1C", VA = "0xC8BB1C")]
		private void autoSetBool(ref bool b, AutoSet autoSetMode)
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0xC8BBF4", Offset = "0xC8BBF4", VA = "0xC8BBF4")]
		private void updateStateInstantly()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0xC8BE28", Offset = "0xC8BE28", VA = "0xC8BE28")]
		public void showInstantly()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0xC8BE48", Offset = "0xC8BE48", VA = "0xC8BE48")]
		public void hideInstantly()
		{
		}

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0xC8B530", Offset = "0xC8B530", VA = "0xC8B530")]
		private void updateDesiredState()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0xC8BE64", Offset = "0xC8BE64", VA = "0xC8BE64")]
		private void setDesiredState(UIItemState desiredState)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0xC8BF7C", Offset = "0xC8BF7C", VA = "0xC8BF7C")]
		private void startTransitions()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0xC8BFEC", Offset = "0xC8BFEC", VA = "0xC8BFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0xC8C080", Offset = "0xC8C080", VA = "0xC8C080")]
		private void updateObjects()
		{
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0xC8BC64", Offset = "0xC8BC64", VA = "0xC8BC64")]
		private void updatePopUpState()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0xC8C12C", Offset = "0xC8C12C", VA = "0xC8C12C")]
		private void onPopUpPopped(Transform popUpRoot)
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0xC8C194", Offset = "0xC8C194", VA = "0xC8C194")]
		private void onPopUpUnpopped()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0xC8B62C", Offset = "0xC8B62C", VA = "0xC8B62C")]
		private void onDisabledByPopUp()
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0xC8B630", Offset = "0xC8B630", VA = "0xC8B630")]
		private void onUndisabledByPopUp()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0xC8C1A8", Offset = "0xC8C1A8", VA = "0xC8C1A8", Slot = "4")]
		private void UIgak.ITransitionsGroupMember.onGroupVisiblityChanged(bool groupVisible)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0xC8C1B4", Offset = "0xC8C1B4", VA = "0xC8C1B4")]
		public UIItemTransitions()
		{
		}
	}
	[Token(Token = "0x200066F")]
	[CreateAssetMenu(menuName = "Data/UI Item Transitions Configuration", fileName = "UI Item Transitions Configuration")]
	public class UIItemTransitionsConfig : UpdatableData
	{
		[Serializable]
		[Token(Token = "0x2000670")]
		public struct SmoothTimes
		{
			[Token(Token = "0x40024EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 hidden;

			[Token(Token = "0x40024EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 idle;

			[Token(Token = "0x40024ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 highlit;

			[Token(Token = "0x40024EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2 selected;

			[Token(Token = "0x40024EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2 disabledIdle;

			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector2 disabledHighlit;

			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 selectedAndHighlit;

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0xC8C21C", Offset = "0xC8C21C", VA = "0xC8C21C")]
			public Vector2 getStateT(UIItemState state)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmoothTimes smoothTimes;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float minSmoothTime;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float hideSpeedFactor;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float maxSpeed;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float nearlyDoneEpsilon;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float doneEpsilon;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float timeout;

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0xC8C1D4", Offset = "0xC8C1D4", VA = "0xC8C1D4")]
		public UIItemTransitionsConfig()
		{
		}
	}
	[Token(Token = "0x2000671")]
	public class UIItemTransitionsGroup : MonoBehaviour, ITransitionsGroupMember
	{
		[Token(Token = "0x2000672")]
		public enum AutoSet
		{
			[Token(Token = "0x40024F8")]
			LeaveAlone,
			[Token(Token = "0x40024F9")]
			Yes,
			[Token(Token = "0x40024FA")]
			No
		}

		[Serializable]
		[Token(Token = "0x2000673")]
		public struct Debugg
		{
			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool printTargets;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool printFlow;
		}

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AutoSet startVisible;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Debugg debug;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool _visible;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		private bool _groupVisible;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ITransitionsGroupMember> _children;

		[Token(Token = "0x17000652")]
		public bool visible
		{
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xC8C2F0", Offset = "0xC8C2F0", VA = "0xC8C2F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60025ED")]
			[Address(RVA = "0xC8C2F8", Offset = "0xC8C2F8", VA = "0xC8C2F8")]
			set
			{
			}
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0xC8C598", Offset = "0xC8C598", VA = "0xC8C598")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0xC8C614", Offset = "0xC8C614", VA = "0xC8C614")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0xC8C638", Offset = "0xC8C638", VA = "0xC8C638")]
		private void detectChildren()
		{
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0xC8C928", Offset = "0xC8C928", VA = "0xC8C928")]
		private void autoSetBool(ref bool b, AutoSet autoSetMode)
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0xC8C314", Offset = "0xC8C314", VA = "0xC8C314")]
		private void onVisibleChanged()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0xC8CA00", Offset = "0xC8CA00", VA = "0xC8CA00", Slot = "4")]
		private void UIgak.ITransitionsGroupMember.onGroupVisiblityChanged(bool groupVisible)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0xC8CA18", Offset = "0xC8CA18", VA = "0xC8CA18")]
		public UIItemTransitionsGroup()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000674")]
	public class UIItemTransitionStates<T>
	{
		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T hidden;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T idle;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T highlit;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T selected;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T disabledIdle;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T disabledHighlit;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T selectedAndHighlit;

		[Token(Token = "0x60025F5")]
		public T getByState(UIItemState state)
		{
			return (T)null;
		}

		[Token(Token = "0x60025F6")]
		public UIItemTransitionStates()
		{
		}

		[Token(Token = "0x60025F7")]
		public UIItemTransitionStates(T value)
		{
		}
	}
	[Token(Token = "0x2000675")]
	public class UiController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000676")]
		public struct BackButton
		{
			[Token(Token = "0x400251B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material p1AvailableMaterial;

			[Token(Token = "0x400251C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Material p1UnavailableMaterial;

			[Token(Token = "0x400251D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Material p2AvailableMaterial;

			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material p2UnavailableMaterial;
		}

		[Token(Token = "0x2000677")]
		public enum LengthMode
		{
			[Token(Token = "0x4002520")]
			StartRoom,
			[Token(Token = "0x4002521")]
			MainMenu,
			[Token(Token = "0x4002522")]
			Area,
			[Token(Token = "0x4002523")]
			PlayerProfile,
			[Token(Token = "0x4002524")]
			Tutorial,
			[Token(Token = "0x4002525")]
			LevelEditor
		}

		[Token(Token = "0x2000678")]
		public delegate void OnBack();

		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layerMask;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BackButton backButton;

		[Token(Token = "0x4002506")]
		private const int maxHits = 20;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _length;

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private LengthMode _lengthMode;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ListStack<OnBack> _onBackHandlers;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerID _myPlayerId;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UiController inst;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit[] _hits;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _position;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private RaycastHit _currentRaycast;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ITouchable _enteredTouchable;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _pressPosition;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private RaycastHit _pressRaycast;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _pressTime;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float _lastPressDuration;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ITouchable _pressedTouchable;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IDraggable _pressedDraggable;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Quaternion _firstPressedRotation;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Quaternion _lastPressedRotation;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ITouchable _capturingTouchable;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private RacketPointer _pointer;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _inTouchablePointerUp;

		[Token(Token = "0x17000653")]
		public LengthMode lengthMode
		{
			[Token(Token = "0x60025F8")]
			[Address(RVA = "0xC8CA28", Offset = "0xC8CA28", VA = "0xC8CA28")]
			set
			{
			}
		}

		[Token(Token = "0x17000654")]
		public PlayerID myPlayerId
		{
			[Token(Token = "0x60025FA")]
			[Address(RVA = "0xC8CBB4", Offset = "0xC8CBB4", VA = "0xC8CBB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000655")]
		public RaycastHit CurrentRaycast
		{
			[Token(Token = "0x60025FB")]
			[Address(RVA = "0xC8CCB8", Offset = "0xC8CCB8", VA = "0xC8CCB8")]
			get
			{
				return default(RaycastHit);
			}
		}

		[Token(Token = "0x17000656")]
		private ITouchable enteredTouchable
		{
			[Token(Token = "0x60025FC")]
			[Address(RVA = "0xC8CCD0", Offset = "0xC8CCD0", VA = "0xC8CCD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000657")]
		public float lastPressDuration
		{
			[Token(Token = "0x60025FD")]
			[Address(RVA = "0xC8D24C", Offset = "0xC8D24C", VA = "0xC8D24C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000658")]
		private ITouchable pressedTouchable
		{
			[Token(Token = "0x60025FE")]
			[Address(RVA = "0xC8D254", Offset = "0xC8D254", VA = "0xC8D254")]
			set
			{
			}
		}

		[Token(Token = "0x17000659")]
		private IDraggable pressedDraggable
		{
			[Token(Token = "0x60025FF")]
			[Address(RVA = "0xC8D7C8", Offset = "0xC8D7C8", VA = "0xC8D7C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700065A")]
		private ITouchable capturingTouchable
		{
			[Token(Token = "0x6002600")]
			[Address(RVA = "0xC8D870", Offset = "0xC8D870", VA = "0xC8D870")]
			set
			{
			}
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0xC8CA40", Offset = "0xC8CA40", VA = "0xC8CA40")]
		private void onLengthModeChanged()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0xC8D894", Offset = "0xC8D894", VA = "0xC8D894")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0xC8D984", Offset = "0xC8D984", VA = "0xC8D984")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0xC8DB4C", Offset = "0xC8DB4C", VA = "0xC8DB4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0xC8DD58", Offset = "0xC8DD58", VA = "0xC8DD58")]
		private void Update()
		{
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0xC8E0A0", Offset = "0xC8E0A0", VA = "0xC8E0A0")]
		private bool raycast(Ray ray, out RaycastHit hitInfo, float maxDistance = float.PositiveInfinity)
		{
			return default(bool);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0xC8E2D4", Offset = "0xC8E2D4", VA = "0xC8E2D4")]
		private void updateDrag(Ray ray)
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0xC8E65C", Offset = "0xC8E65C", VA = "0xC8E65C")]
		private void onTriggerClicked()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0xC8E664", Offset = "0xC8E664", VA = "0xC8E664")]
		private void onTriggerUnclicked()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0xC8E66C", Offset = "0xC8E66C", VA = "0xC8E66C")]
		public void handleBack(OnBack onBackHandler)
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0xC8E6C4", Offset = "0xC8E6C4", VA = "0xC8E6C4")]
		public void unhandleBack(OnBack onBackHandler)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0xC8CBC8", Offset = "0xC8CBC8", VA = "0xC8CBC8")]
		private void onMyPlayerIdChanged()
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0xC8DB48", Offset = "0xC8DB48", VA = "0xC8DB48")]
		private void updateBackMaterial()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0xC8CBCC", Offset = "0xC8CBCC", VA = "0xC8CBCC")]
		private void updateOpponentBackMaterial()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0xC8E80C", Offset = "0xC8E80C", VA = "0xC8E80C")]
		private void onBackClicked()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0xC8CFE4", Offset = "0xC8CFE4", VA = "0xC8CFE4")]
		private void onTouchableEnter()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0xC8CD30", Offset = "0xC8CD30", VA = "0xC8CD30")]
		private void onTouchableExit()
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0xC8D4B4", Offset = "0xC8D4B4", VA = "0xC8D4B4")]
		private void onTouchablePointerDown()
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0xC8D2B4", Offset = "0xC8D2B4", VA = "0xC8D2B4")]
		private void onTouchablePointerUp()
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0xC8D818", Offset = "0xC8D818", VA = "0xC8D818")]
		private void onDraggablePointerDown()
		{
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0xC8D814", Offset = "0xC8D814", VA = "0xC8D814")]
		private void onDraggablePointerUp()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0xC8D890", Offset = "0xC8D890", VA = "0xC8D890")]
		private void onTouchableCapture()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0xC8D88C", Offset = "0xC8D88C", VA = "0xC8D88C")]
		private void onTouchableUncapture()
		{
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0xC8E898", Offset = "0xC8E898", VA = "0xC8E898")]
		private TouchEventData createEventData()
		{
			return default(TouchEventData);
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0xC8E94C", Offset = "0xC8E94C", VA = "0xC8E94C")]
		public void onGameOverShown()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0xC8E950", Offset = "0xC8E950", VA = "0xC8E950")]
		public void onGameOverHidden()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0xC8E954", Offset = "0xC8E954", VA = "0xC8E954")]
		public bool capture(ITouchable touchable)
		{
			return default(bool);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0xC8EA20", Offset = "0xC8EA20", VA = "0xC8EA20")]
		public void releaseCapture(ITouchable touchable)
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0xC8EAC4", Offset = "0xC8EAC4", VA = "0xC8EAC4")]
		public UiController()
		{
		}
	}
	[Token(Token = "0x2000679")]
	public class UISoundPlayer : MonoBehaviour
	{
		[Token(Token = "0x200067A")]
		public enum SoundId
		{
			[Token(Token = "0x4002528")]
			None,
			[Token(Token = "0x4002529")]
			Hover,
			[Token(Token = "0x400252A")]
			Select,
			[Token(Token = "0x400252B")]
			SelectOk,
			[Token(Token = "0x400252C")]
			SelectDisabled,
			[Token(Token = "0x400252D")]
			PlayAgain,
			[Token(Token = "0x400252E")]
			Back,
			[Token(Token = "0x400252F")]
			LeSelect
		}

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Play sound at far distance (configurable by 'Far Sound Distance')")]
		public bool distant;

		[Token(Token = "0x6002621")]
		[Address(RVA = "0xC8EC04", Offset = "0xC8EC04", VA = "0xC8EC04")]
		public void playHover()
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0xC8EFB8", Offset = "0xC8EFB8", VA = "0xC8EFB8")]
		public void playSelect()
		{
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0xC8EFC0", Offset = "0xC8EFC0", VA = "0xC8EFC0")]
		public void playSelectOk()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0xC8EFC8", Offset = "0xC8EFC8", VA = "0xC8EFC8")]
		public void playSelectDisabled()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0xC8EFD0", Offset = "0xC8EFD0", VA = "0xC8EFD0")]
		public void playPlayAgain()
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0xC8EFD8", Offset = "0xC8EFD8", VA = "0xC8EFD8")]
		public void playBack()
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0xC8EC0C", Offset = "0xC8EC0C", VA = "0xC8EC0C")]
		public void play(SoundId soundId)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0xC8EFE0", Offset = "0xC8EFE0", VA = "0xC8EFE0")]
		private AudioManager.SoundEffect idToSfx(SoundId soundId)
		{
			return null;
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0xC8F1EC", Offset = "0xC8F1EC", VA = "0xC8F1EC")]
		public UISoundPlayer()
		{
		}
	}
}
namespace UI
{
	[Token(Token = "0x200067B")]
	[RequireComponent(typeof(UnavailableWhenOffline))]
	public class UnavailableWhenLobbyistDisconnected : MonoBehaviour
	{
		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnavailableWhenOffline _unavailableWhenOffline;

		[Token(Token = "0x600262A")]
		[Address(RVA = "0xC8F1F4", Offset = "0xC8F1F4", VA = "0xC8F1F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0xC8F2C0", Offset = "0xC8F2C0", VA = "0xC8F2C0")]
		private void OnServerConnectionStateChanged(bool connected)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0xC8F2F4", Offset = "0xC8F2F4", VA = "0xC8F2F4")]
		public UnavailableWhenLobbyistDisconnected()
		{
		}
	}
}
namespace Lobbyist
{
	[Token(Token = "0x200067C")]
	public enum PlatformType : uint
	{
		[Token(Token = "0x4002532")]
		None,
		[Token(Token = "0x4002533")]
		Steam,
		[Token(Token = "0x4002534")]
		OculusHome,
		[Token(Token = "0x4002535")]
		Viveport,
		[Token(Token = "0x4002536")]
		Pico,
		[Token(Token = "0x4002537")]
		NetVios,
		[Token(Token = "0x4002538")]
		PlayStation,
		[Token(Token = "0x4002539")]
		Qiyu,
		[Token(Token = "0x400253A")]
		Gsxr
	}
	[Token(Token = "0x200067D")]
	public static class PlatformTypeHelper
	{
		[Token(Token = "0x600262D")]
		[Address(RVA = "0xC8F2FC", Offset = "0xC8F2FC", VA = "0xC8F2FC")]
		public static NativePlatformType PlatformType2NativePlatformType(PlatformType platform)
		{
			return default(NativePlatformType);
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0xC8F380", Offset = "0xC8F380", VA = "0xC8F380")]
		public static PlatformType NativePlatformType2PlatformType(NativePlatformType platform)
		{
			return default(PlatformType);
		}
	}
	[Token(Token = "0x200067E")]
	public enum QueueType
	{
		[Token(Token = "0x400253C")]
		None,
		[Token(Token = "0x400253D")]
		Ranked,
		[Token(Token = "0x400253E")]
		Invite,
		[Token(Token = "0x400253F")]
		PIN
	}
	[Token(Token = "0x200067F")]
	public class BytesQueue
	{
		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly byte[] _buffer;

		[Token(Token = "0x1700065B")]
		public byte[] buffer
		{
			[Token(Token = "0x6002630")]
			[Address(RVA = "0xC8F47C", Offset = "0xC8F47C", VA = "0xC8F47C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700065C")]
		public int numBytes
		{
			[Token(Token = "0x6002631")]
			[Address(RVA = "0xC8F484", Offset = "0xC8F484", VA = "0xC8F484")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002632")]
			[Address(RVA = "0xC8F48C", Offset = "0xC8F48C", VA = "0xC8F48C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700065D")]
		public int size
		{
			[Token(Token = "0x6002633")]
			[Address(RVA = "0xC8F494", Offset = "0xC8F494", VA = "0xC8F494")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0xC8F404", Offset = "0xC8F404", VA = "0xC8F404")]
		public BytesQueue(int size)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0xC8F4B0", Offset = "0xC8F4B0", VA = "0xC8F4B0")]
		public void Consume(int numBytesConsumed)
		{
		}
	}
	[Token(Token = "0x2000680")]
	public enum FailConnectionReason
	{
		[Token(Token = "0x4002543")]
		None,
		[Token(Token = "0x4002544")]
		HostDisconnected,
		[Token(Token = "0x4002545")]
		ClientDisconnected,
		[Token(Token = "0x4002546")]
		NoConnectivity,
		[Token(Token = "0x4002547")]
		Timeout
	}
	[Token(Token = "0x2000681")]
	public class LobbyistClient : MonoBehaviour
	{
		[Token(Token = "0x2000682")]
		public enum ServerConnectionState
		{
			[Token(Token = "0x4002569")]
			Disconnected,
			[Token(Token = "0x400256A")]
			Connecting,
			[Token(Token = "0x400256B")]
			Connected
		}

		[Token(Token = "0x2000683")]
		public class PlayerIntentParams
		{
			[Token(Token = "0x2000684")]
			public struct Ranked
			{
				[Token(Token = "0x400256F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public CoModes coModes;
			}

			[Token(Token = "0x2000685")]
			public struct Invite
			{
				[Token(Token = "0x4002570")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string friendID;

				[Token(Token = "0x4002571")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public CoMode coMode;
			}

			[Token(Token = "0x2000686")]
			public struct PIN_
			{
				[Token(Token = "0x4002572")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public string pin;

				[Token(Token = "0x4002573")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public CoMode coMode;
			}

			[Token(Token = "0x400256C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Ranked ranked;

			[Token(Token = "0x400256D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Invite invite;

			[Token(Token = "0x400256E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PIN_ PIN;

			[Token(Token = "0x600269C")]
			[Address(RVA = "0xC969FC", Offset = "0xC969FC", VA = "0xC969FC")]
			public PlayerIntentParams()
			{
			}
		}

		[Token(Token = "0x2000687")]
		public enum State
		{
			[Token(Token = "0x4002575")]
			None,
			[Token(Token = "0x4002576")]
			Idle,
			[Token(Token = "0x4002577")]
			Queued,
			[Token(Token = "0x4002578")]
			Connecting,
			[Token(Token = "0x4002579")]
			Connected
		}

		[Token(Token = "0x2000688")]
		public struct Connecting
		{
			[Token(Token = "0x2000689")]
			public enum Source
			{
				[Token(Token = "0x4002582")]
				Queue,
				[Token(Token = "0x4002583")]
				Invited
			}

			[Token(Token = "0x200068A")]
			public enum Phase
			{
				[Token(Token = "0x4002585")]
				ICE,
				[Token(Token = "0x4002586")]
				Acceptance
			}

			[Token(Token = "0x400257A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string matchId;

			[Token(Token = "0x400257B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Source source;

			[Token(Token = "0x400257C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string otherPlayerID;

			[Token(Token = "0x400257D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CoMode coMode;

			[Token(Token = "0x400257E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool isHost;

			[Token(Token = "0x400257F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlatformType platform;

			[Token(Token = "0x4002580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Phase phase;

			[Token(Token = "0x17000670")]
			public bool sourceIsQueue
			{
				[Token(Token = "0x600269E")]
				[Address(RVA = "0xC96A04", Offset = "0xC96A04", VA = "0xC96A04")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000671")]
			public bool sourceIsInvited
			{
				[Token(Token = "0x600269F")]
				[Address(RVA = "0xC96568", Offset = "0xC96568", VA = "0xC96568")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xC949FC", Offset = "0xC949FC", VA = "0xC949FC")]
			public static Source DeserializeSource(string sourceStr)
			{
				return default(Source);
			}
		}

		[Token(Token = "0x200068B")]
		public delegate void OnEstablishedDelegate(LobbyistClient client, AgentType type, object data);

		[StructLayout(3)]
		[Token(Token = "0x200068C")]
		[CompilerGenerated]
		private struct <Ping>d__109 : IAsyncStateMachine
		{
			[Token(Token = "0x4002587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool, long)> <>t__builder;

			[Token(Token = "0x4002589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClient <>4__this;

			[Token(Token = "0x400258A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<(bool, long)> <>u__1;

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xC96C0C", Offset = "0xC96C0C", VA = "0xC96C0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xC96F24", Offset = "0xC96F24", VA = "0xC96F24", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x200068D")]
		[CompilerGenerated]
		private sealed class <PingCoroutine>d__112 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400258B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400258C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400258D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LobbyistClient <>4__this;

			[Token(Token = "0x400258E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private System.Threading.Tasks.Task<(bool, long)> <pingTask>5__2;

			[Token(Token = "0x17000672")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60026A9")]
				[Address(RVA = "0xC97160", Offset = "0xC97160", VA = "0xC97160", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000673")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026AB")]
				[Address(RVA = "0xC971A8", Offset = "0xC971A8", VA = "0xC971A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xC938AC", Offset = "0xC938AC", VA = "0xC938AC")]
			[DebuggerHidden]
			public <PingCoroutine>d__112(int <>1__state)
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xC96F7C", Offset = "0xC96F7C", VA = "0xC96F7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xC96F80", Offset = "0xC96F80", VA = "0xC96F80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xC97168", Offset = "0xC97168", VA = "0xC97168", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068E")]
		[CompilerGenerated]
		private sealed class <WaitForWelcome>d__116 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400258F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002590")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002591")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClient <>4__this;

			[Token(Token = "0x4002592")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <waitTime>5__2;

			[Token(Token = "0x17000674")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026AF")]
				[Address(RVA = "0xC972C4", Offset = "0xC972C4", VA = "0xC972C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000675")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026B1")]
				[Address(RVA = "0xC9730C", Offset = "0xC9730C", VA = "0xC9730C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xC93CD8", Offset = "0xC93CD8", VA = "0xC93CD8")]
			[DebuggerHidden]
			public <WaitForWelcome>d__116(int <>1__state)
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xC97204", Offset = "0xC97204", VA = "0xC97204", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xC97208", Offset = "0xC97208", VA = "0xC97208", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xC972CC", Offset = "0xC972CC", VA = "0xC972CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool usePing;

		[Token(Token = "0x4002549")]
		private const float HELLO_TIMEOUT = 10f;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private ServerConnectionState _serverConnectionState;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly PlayerIntentParams _playerIntentParams;

		[Token(Token = "0x4002551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private State _state;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Connecting _connecting;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _timeInQueue;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private LobbyistClientAPI _clientAPI;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private string _playerID;

		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private PlatformType _platform;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string _multiplayer_version;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float PING_INTERVAL;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private CoroutineHandle _pingCoroutine;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _waitingForWelcome;

		[Token(Token = "0x1700065E")]
		public ServerConnectionState serverConnectionState
		{
			[Token(Token = "0x6002635")]
			[Address(RVA = "0xC8F5A0", Offset = "0xC8F5A0", VA = "0xC8F5A0")]
			get
			{
				return default(ServerConnectionState);
			}
		}

		[Token(Token = "0x1700065F")]
		public bool isDisconnectedFromServer
		{
			[Token(Token = "0x6002636")]
			[Address(RVA = "0xC8F5A8", Offset = "0xC8F5A8", VA = "0xC8F5A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000660")]
		public bool isConnectingToServer
		{
			[Token(Token = "0x6002637")]
			[Address(RVA = "0xC8F5B8", Offset = "0xC8F5B8", VA = "0xC8F5B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000661")]
		public bool isConnectedToServer
		{
			[Token(Token = "0x6002638")]
			[Address(RVA = "0xC8F5C8", Offset = "0xC8F5C8", VA = "0xC8F5C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000662")]
		public QueueType playerIntent
		{
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xC8FB78", Offset = "0xC8FB78", VA = "0xC8FB78")]
			[CompilerGenerated]
			get
			{
				return default(QueueType);
			}
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xC8FB80", Offset = "0xC8FB80", VA = "0xC8FB80")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000663")]
		public PlayerIntentParams PlayerIntent
		{
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xC8FB88", Offset = "0xC8FB88", VA = "0xC8FB88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000664")]
		public State state
		{
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xC8FB90", Offset = "0xC8FB90", VA = "0xC8FB90")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6002646")]
			[Address(RVA = "0xC8FB98", Offset = "0xC8FB98", VA = "0xC8FB98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000665")]
		public bool isIdle
		{
			[Token(Token = "0x6002647")]
			[Address(RVA = "0xC8FCE4", Offset = "0xC8FCE4", VA = "0xC8FCE4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000666")]
		public bool isQueued
		{
			[Token(Token = "0x6002648")]
			[Address(RVA = "0xC8FCF4", Offset = "0xC8FCF4", VA = "0xC8FCF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000667")]
		public bool isConnecting
		{
			[Token(Token = "0x6002649")]
			[Address(RVA = "0xC8FD04", Offset = "0xC8FD04", VA = "0xC8FD04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000668")]
		public bool isConnected
		{
			[Token(Token = "0x600264A")]
			[Address(RVA = "0xC8FD14", Offset = "0xC8FD14", VA = "0xC8FD14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000669")]
		public Connecting connecting
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0xC8FE84", Offset = "0xC8FE84", VA = "0xC8FE84")]
			get
			{
				return default(Connecting);
			}
		}

		[Token(Token = "0x1700066A")]
		public bool isHost
		{
			[Token(Token = "0x600264E")]
			[Address(RVA = "0xC8FE98", Offset = "0xC8FE98", VA = "0xC8FE98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066B")]
		public bool isICEPhase
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0xC8FF6C", Offset = "0xC8FF6C", VA = "0xC8FF6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066C")]
		public bool isAcceptancePhase
		{
			[Token(Token = "0x6002650")]
			[Address(RVA = "0xC8FF7C", Offset = "0xC8FF7C", VA = "0xC8FF7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066D")]
		public float timeInQueue
		{
			[Token(Token = "0x6002669")]
			[Address(RVA = "0xC90F6C", Offset = "0xC90F6C", VA = "0xC90F6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066E")]
		public LobbyistClientAPI API
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0xC90F74", Offset = "0xC90F74", VA = "0xC90F74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700066F")]
		public string playerID
		{
			[Token(Token = "0x600266B")]
			[Address(RVA = "0xC90F7C", Offset = "0xC90F7C", VA = "0xC90F7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000061")]
		public event Action<LobbyistClient> onConnectedToServer
		{
			[Token(Token = "0x6002639")]
			[Address(RVA = "0xC8F5D8", Offset = "0xC8F5D8", VA = "0xC8F5D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600263A")]
			[Address(RVA = "0xC8F688", Offset = "0xC8F688", VA = "0xC8F688")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event Action<LobbyistClient, string> onConnectionToServerFailed
		{
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xC8F738", Offset = "0xC8F738", VA = "0xC8F738")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xC8F7E8", Offset = "0xC8F7E8", VA = "0xC8F7E8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event Action<LobbyistClient, string> onDisconnectedFromServer
		{
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xC8F898", Offset = "0xC8F898", VA = "0xC8F898")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600263E")]
			[Address(RVA = "0xC8F948", Offset = "0xC8F948", VA = "0xC8F948")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event Action<LobbyistClient> onQueue
		{
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xC8F9F8", Offset = "0xC8F9F8", VA = "0xC8F9F8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002640")]
			[Address(RVA = "0xC8FAA8", Offset = "0xC8FAA8", VA = "0xC8FAA8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event Action<LobbyistClient> onQueueFailed
		{
			[Token(Token = "0x600264B")]
			[Address(RVA = "0xC8FD24", Offset = "0xC8FD24", VA = "0xC8FD24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600264C")]
			[Address(RVA = "0xC8FDD4", Offset = "0xC8FDD4", VA = "0xC8FDD4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event Action<LobbyistClient> onConnecting
		{
			[Token(Token = "0x6002651")]
			[Address(RVA = "0xC8FF8C", Offset = "0xC8FF8C", VA = "0xC8FF8C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002652")]
			[Address(RVA = "0xC9003C", Offset = "0xC9003C", VA = "0xC9003C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event Action<LobbyistClient, string[]> onRxHostAddresses
		{
			[Token(Token = "0x6002653")]
			[Address(RVA = "0xC900EC", Offset = "0xC900EC", VA = "0xC900EC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002654")]
			[Address(RVA = "0xC9019C", Offset = "0xC9019C", VA = "0xC9019C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event Action<LobbyistClient, ReflexiveAddress[]> onRxReflexiveAddress
		{
			[Token(Token = "0x6002655")]
			[Address(RVA = "0xC9024C", Offset = "0xC9024C", VA = "0xC9024C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002656")]
			[Address(RVA = "0xC902FC", Offset = "0xC902FC", VA = "0xC902FC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event Action<LobbyistClient, string[]> onRxRelayedAddresses
		{
			[Token(Token = "0x6002657")]
			[Address(RVA = "0xC903AC", Offset = "0xC903AC", VA = "0xC903AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002658")]
			[Address(RVA = "0xC9045C", Offset = "0xC9045C", VA = "0xC9045C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event OnEstablishedDelegate onRxSuccessfulTest
		{
			[Token(Token = "0x6002659")]
			[Address(RVA = "0xC9050C", Offset = "0xC9050C", VA = "0xC9050C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600265A")]
			[Address(RVA = "0xC905A8", Offset = "0xC905A8", VA = "0xC905A8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event Action<LobbyistClient, AgentType> onRxTestsDone
		{
			[Token(Token = "0x600265B")]
			[Address(RVA = "0xC90644", Offset = "0xC90644", VA = "0xC90644")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600265C")]
			[Address(RVA = "0xC906F4", Offset = "0xC906F4", VA = "0xC906F4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event OnEstablishedDelegate onUdpUtpChosenAddress
		{
			[Token(Token = "0x600265D")]
			[Address(RVA = "0xC907A4", Offset = "0xC907A4", VA = "0xC907A4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600265E")]
			[Address(RVA = "0xC90840", Offset = "0xC90840", VA = "0xC90840")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event OnEstablishedDelegate onEndIce
		{
			[Token(Token = "0x600265F")]
			[Address(RVA = "0xC908DC", Offset = "0xC908DC", VA = "0xC908DC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002660")]
			[Address(RVA = "0xC90978", Offset = "0xC90978", VA = "0xC90978")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event OnEstablishedDelegate onEstablished
		{
			[Token(Token = "0x6002661")]
			[Address(RVA = "0xC90A14", Offset = "0xC90A14", VA = "0xC90A14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002662")]
			[Address(RVA = "0xC90AB0", Offset = "0xC90AB0", VA = "0xC90AB0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event Action<LobbyistClient> onMatchAccepted
		{
			[Token(Token = "0x6002663")]
			[Address(RVA = "0xC90B4C", Offset = "0xC90B4C", VA = "0xC90B4C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002664")]
			[Address(RVA = "0xC90BFC", Offset = "0xC90BFC", VA = "0xC90BFC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event Action<LobbyistClient> onMatchConnected
		{
			[Token(Token = "0x6002665")]
			[Address(RVA = "0xC90CAC", Offset = "0xC90CAC", VA = "0xC90CAC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002666")]
			[Address(RVA = "0xC90D5C", Offset = "0xC90D5C", VA = "0xC90D5C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event Action<LobbyistClient, FailConnectionReason> onMatchDisconnected
		{
			[Token(Token = "0x6002667")]
			[Address(RVA = "0xC90E0C", Offset = "0xC90E0C", VA = "0xC90E0C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002668")]
			[Address(RVA = "0xC90EBC", Offset = "0xC90EBC", VA = "0xC90EBC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0xC8FB58", Offset = "0xC8FB58", VA = "0xC8FB58")]
		private void OnQueue()
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0xC90F84", Offset = "0xC90F84", VA = "0xC90F84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0xC92434", Offset = "0xC92434", VA = "0xC92434")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0xC93724", Offset = "0xC93724", VA = "0xC93724")]
		[AsyncStateMachine(typeof(<Ping>d__109))]
		public System.Threading.Tasks.Task<(bool, long)> Ping()
		{
			return null;
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0xC93838", Offset = "0xC93838", VA = "0xC93838")]
		[IteratorStateMachine(typeof(<PingCoroutine>d__112))]
		private IEnumerator<float> PingCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6002670")]
		[Address(RVA = "0xC938D4", Offset = "0xC938D4", VA = "0xC938D4")]
		public void Connect(string host, int port, string multiplayer_version, string playerID, PlatformType platform = PlatformType.None)
		{
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0xC93B2C", Offset = "0xC93B2C", VA = "0xC93B2C")]
		private void OnConnectedToServer()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0xC93C64", Offset = "0xC93C64", VA = "0xC93C64")]
		[IteratorStateMachine(typeof(<WaitForWelcome>d__116))]
		private IEnumerator WaitForWelcome()
		{
			return null;
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0xC93D00", Offset = "0xC93D00", VA = "0xC93D00")]
		private void OnConnectionToServerFailed(string reason)
		{
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0xC93E44", Offset = "0xC93E44", VA = "0xC93E44")]
		private void OnDisconnectedFromServer(string reason)
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0xC93E48", Offset = "0xC93E48", VA = "0xC93E48")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0xC93D04", Offset = "0xC93D04", VA = "0xC93D04")]
		private void OnDisconnected(string reason)
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0xC93ED0", Offset = "0xC93ED0", VA = "0xC93ED0")]
		private void OnWelcomeTimeout()
		{
		}

		[Token(Token = "0x6002678")]
		[Address(RVA = "0xC93F74", Offset = "0xC93F74", VA = "0xC93F74")]
		private void OnWelcomed()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0xC94010", Offset = "0xC94010", VA = "0xC94010")]
		private void OnUnwelcomed(string reason)
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0xC9410C", Offset = "0xC9410C", VA = "0xC9410C")]
		private void OnBye(string reason)
		{
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0xC94204", Offset = "0xC94204", VA = "0xC94204")]
		public void QueueForRanked(float rating, float ratingDev, CoModes coModes)
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0xC94364", Offset = "0xC94364", VA = "0xC94364")]
		public void InviteFriend(string friendId, CoMode coMode)
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0xC944CC", Offset = "0xC944CC", VA = "0xC944CC")]
		public void QueueForPIN(string pin, CoMode coMode)
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0xC94634", Offset = "0xC94634", VA = "0xC94634")]
		private void Update()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0xC9466C", Offset = "0xC9466C", VA = "0xC9466C")]
		public void CancelQueue()
		{
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0xC946FC", Offset = "0xC946FC", VA = "0xC946FC")]
		private void OnQueueFailed()
		{
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0xC94738", Offset = "0xC94738", VA = "0xC94738")]
		private void OnConnecting(OnConnecting msg)
		{
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0xC94AE8", Offset = "0xC94AE8", VA = "0xC94AE8")]
		public void SendHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0xC94C58", Offset = "0xC94C58", VA = "0xC94C58")]
		private void OnRxHostAddresses(HostAddresses msg)
		{
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0xC94C80", Offset = "0xC94C80", VA = "0xC94C80")]
		public void SendReflexiveAddresses(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002685")]
		[Address(RVA = "0xC94E40", Offset = "0xC94E40", VA = "0xC94E40")]
		private void OnRxReflexiveAddress(ReflexiveAddresses msg)
		{
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0xC94E68", Offset = "0xC94E68", VA = "0xC94E68")]
		public void SendRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0xC94FD8", Offset = "0xC94FD8", VA = "0xC94FD8")]
		private void OnRxRelayedAddresses(RelayedAddresses msg)
		{
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0xC95000", Offset = "0xC95000", VA = "0xC95000")]
		public void SendSuccessfulTest(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0xC9518C", Offset = "0xC9518C", VA = "0xC9518C")]
		public void SendTestsDone(AgentType type)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0xC9529C", Offset = "0xC9529C", VA = "0xC9529C")]
		private void OnRxSuccessfulTest(SuccessfulTest msg)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0xC953F0", Offset = "0xC953F0", VA = "0xC953F0")]
		private void OnRxTestsDone(TestsDone msg)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0xC95534", Offset = "0xC95534", VA = "0xC95534")]
		public void SendNoConnectivity()
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0xC956EC", Offset = "0xC956EC", VA = "0xC956EC")]
		public void SendIceTimeout()
		{
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0xC958A0", Offset = "0xC958A0", VA = "0xC958A0")]
		public void SendUdpUtpChosenAddress(AgentType type, object data)
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0xC95AF8", Offset = "0xC95AF8", VA = "0xC95AF8")]
		public void SendEstablished(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0xC95D58", Offset = "0xC95D58", VA = "0xC95D58")]
		public void SendEndIce(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0xC95F6C", Offset = "0xC95F6C", VA = "0xC95F6C")]
		private void OnUdpUtpChosenAddress(string type, object data)
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0xC960B8", Offset = "0xC960B8", VA = "0xC960B8")]
		private void OnEndIce(string type, object data)
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0xC9620C", Offset = "0xC9620C", VA = "0xC9620C")]
		private void OnEstablished(string type, object data)
		{
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0xC96360", Offset = "0xC96360", VA = "0xC96360")]
		public void AcceptMatch()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0xC963E0", Offset = "0xC963E0", VA = "0xC963E0")]
		private void OnMatchAccepted()
		{
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0xC96400", Offset = "0xC96400", VA = "0xC96400")]
		public void DeclineMatch()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0xC965E8", Offset = "0xC965E8", VA = "0xC965E8")]
		private void OnMatchConnected()
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0xC96620", Offset = "0xC96620", VA = "0xC96620")]
		public void DisconnectMatch()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0xC967B8", Offset = "0xC967B8", VA = "0xC967B8")]
		private void OnMatchDisconnected(bool is_queued, string reason)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0xC968E0", Offset = "0xC968E0", VA = "0xC968E0")]
		public void SendDebugClearBlacklist(string playerId)
		{
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0xC96980", Offset = "0xC96980", VA = "0xC96980")]
		public LobbyistClient()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public class LobbyistClientAPI : MonoBehaviour
	{
		[Token(Token = "0x2000690")]
		private enum TCPConnectionState
		{
			[Token(Token = "0x40025B8")]
			Disconnected,
			[Token(Token = "0x40025B9")]
			Connecting,
			[Token(Token = "0x40025BA")]
			Connected
		}

		[Token(Token = "0x2000691")]
		public delegate void OnEstablishedDelegate(string type, object data);

		[Token(Token = "0x2000692")]
		public delegate void OnMatchDisconnectedDelegate(bool isQueued, string reason);

		[Token(Token = "0x2000693")]
		public delegate string ToJson(object obj);

		[Token(Token = "0x2000694")]
		[CompilerGenerated]
		private sealed class <ConnectCo>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClientAPI <>4__this;

			[Token(Token = "0x40025BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string host;

			[Token(Token = "0x40025BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int port;

			[Token(Token = "0x40025C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IAsyncResult <tcpConnectResult>5__2;

			[Token(Token = "0x40025C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <waitTime>5__3;

			[Token(Token = "0x17000677")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271F")]
				[Address(RVA = "0xC992EC", Offset = "0xC992EC", VA = "0xC992EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000678")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002721")]
				[Address(RVA = "0xC99334", Offset = "0xC99334", VA = "0xC99334", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0xC973C4", Offset = "0xC973C4", VA = "0xC973C4")]
			[DebuggerHidden]
			public <ConnectCo>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x600271D")]
			[Address(RVA = "0xC98EC8", Offset = "0xC98EC8", VA = "0xC98EC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600271E")]
			[Address(RVA = "0xC98ECC", Offset = "0xC98ECC", VA = "0xC98ECC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0xC992F4", Offset = "0xC992F4", VA = "0xC992F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000695")]
		[CompilerGenerated]
		private struct <Ping>d__91 : IAsyncStateMachine
		{
			[Token(Token = "0x40025C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40025C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<(bool, long)> <>t__builder;

			[Token(Token = "0x40025C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClientAPI <>4__this;

			[Token(Token = "0x40025C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002722")]
			[Address(RVA = "0xC9933C", Offset = "0xC9933C", VA = "0xC9933C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0xC99690", Offset = "0xC99690", VA = "0xC99690", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x2000696")]
		[CompilerGenerated]
		private sealed class <WaitForPongTimeOut>d__92 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40025C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40025C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40025C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LobbyistClientAPI <>4__this;

			[Token(Token = "0x17000679")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002727")]
				[Address(RVA = "0xC997B8", Offset = "0xC997B8", VA = "0xC997B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700067A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002729")]
				[Address(RVA = "0xC99800", Offset = "0xC99800", VA = "0xC99800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002724")]
			[Address(RVA = "0xC98904", Offset = "0xC98904", VA = "0xC98904")]
			[DebuggerHidden]
			public <WaitForPongTimeOut>d__92(int <>1__state)
			{
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0xC996E8", Offset = "0xC996E8", VA = "0xC996E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002726")]
			[Address(RVA = "0xC996EC", Offset = "0xC996EC", VA = "0xC996EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0xC997C0", Offset = "0xC997C0", VA = "0xC997C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TcpClient _tcpClient;

		[Token(Token = "0x4002594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private NetworkStream _tcpStream;

		[Token(Token = "0x4002595")]
		private const int RX_BUFFER_SIZE = 8192;

		[Token(Token = "0x4002596")]
		private const int TX_BUFFER_SIZE = 8192;

		[Token(Token = "0x4002597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BytesQueue _rx_buffer;

		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BytesQueue _tx_buffer;

		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _playerID;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _playerIDShort;

		[Token(Token = "0x400259B")]
		private const int PROTOCOL_VERSION = 3;

		[Token(Token = "0x400259C")]
		private const int HEADER_SIZE = 2;

		[Token(Token = "0x400259D")]
		private const float TCP_CONNECTION_TIMEOUT = 10f;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TCPConnectionState _tcpConnectionState;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private ToJson _toEmptyJson;

		[Token(Token = "0x40025B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly char[] SPACE_SEPARATOR;

		[Token(Token = "0x40025B4")]
		private const float PongTimeout = 1f;

		[Token(Token = "0x40025B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private TaskCompletionSource<bool> _pongTask;

		[Token(Token = "0x40025B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly Stopwatch _pongTimer;

		[Token(Token = "0x17000676")]
		private bool isConnectedToServer
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xC97314", Offset = "0xC97314", VA = "0xC97314")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000072")]
		public event Action onConnectedToServer
		{
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xC9161C", Offset = "0xC9161C", VA = "0xC9161C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xC92AC8", Offset = "0xC92AC8", VA = "0xC92AC8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event Action<string> onConnectionToServerFailed
		{
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0xC916B8", Offset = "0xC916B8", VA = "0xC916B8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0xC92B64", Offset = "0xC92B64", VA = "0xC92B64")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event Action<string> onDisconnectedFromServer
		{
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0xC91768", Offset = "0xC91768", VA = "0xC91768")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0xC92C14", Offset = "0xC92C14", VA = "0xC92C14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event Action onWelcomed
		{
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0xC91818", Offset = "0xC91818", VA = "0xC91818")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0xC92CC4", Offset = "0xC92CC4", VA = "0xC92CC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000076")]
		public event Action<string> onUnwelcomed
		{
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xC918B4", Offset = "0xC918B4", VA = "0xC918B4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xC92D60", Offset = "0xC92D60", VA = "0xC92D60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000077")]
		public event Action<string> onBye
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xC91964", Offset = "0xC91964", VA = "0xC91964")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xC92E10", Offset = "0xC92E10", VA = "0xC92E10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000078")]
		public event Action onQueueFailed
		{
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xC91A14", Offset = "0xC91A14", VA = "0xC91A14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xC92EC0", Offset = "0xC92EC0", VA = "0xC92EC0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000079")]
		public event Action<OnConnecting> onConnecting
		{
			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xC91AB0", Offset = "0xC91AB0", VA = "0xC91AB0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xC92F5C", Offset = "0xC92F5C", VA = "0xC92F5C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007A")]
		public event Action<HostAddresses> onRxHostAddresses
		{
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xC91B60", Offset = "0xC91B60", VA = "0xC91B60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xC9300C", Offset = "0xC9300C", VA = "0xC9300C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007B")]
		public event Action<ReflexiveAddresses> onRxReflexiveAddress
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0xC91C10", Offset = "0xC91C10", VA = "0xC91C10")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xC930BC", Offset = "0xC930BC", VA = "0xC930BC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007C")]
		public event Action<RelayedAddresses> onRxRelayedAddresses
		{
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0xC91CC0", Offset = "0xC91CC0", VA = "0xC91CC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0xC9316C", Offset = "0xC9316C", VA = "0xC9316C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007D")]
		public event Action<SuccessfulTest> onRxSuccessfulTest
		{
			[Token(Token = "0x60026C9")]
			[Address(RVA = "0xC91D70", Offset = "0xC91D70", VA = "0xC91D70")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026CA")]
			[Address(RVA = "0xC9321C", Offset = "0xC9321C", VA = "0xC9321C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007E")]
		public event Action<TestsDone> onRxTestsDone
		{
			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xC91E20", Offset = "0xC91E20", VA = "0xC91E20")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xC932CC", Offset = "0xC932CC", VA = "0xC932CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400007F")]
		public event OnEstablishedDelegate onUdpUtpChosenAddress
		{
			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xC92054", Offset = "0xC92054", VA = "0xC92054")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xC93418", Offset = "0xC93418", VA = "0xC93418")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000080")]
		public event OnEstablishedDelegate onEndIce
		{
			[Token(Token = "0x60026CF")]
			[Address(RVA = "0xC920F0", Offset = "0xC920F0", VA = "0xC920F0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xC934B4", Offset = "0xC934B4", VA = "0xC934B4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000081")]
		public event OnEstablishedDelegate onEstablished
		{
			[Token(Token = "0x60026D1")]
			[Address(RVA = "0xC91FB8", Offset = "0xC91FB8", VA = "0xC91FB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xC9337C", Offset = "0xC9337C", VA = "0xC9337C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000082")]
		public event Action onMatchAccepted
		{
			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xC9218C", Offset = "0xC9218C", VA = "0xC9218C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xC93550", Offset = "0xC93550", VA = "0xC93550")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000083")]
		public event Action onMatchConnected
		{
			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xC92228", Offset = "0xC92228", VA = "0xC92228")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xC935EC", Offset = "0xC935EC", VA = "0xC935EC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000084")]
		public event OnMatchDisconnectedDelegate onMatchDisconnected
		{
			[Token(Token = "0x60026D7")]
			[Address(RVA = "0xC92398", Offset = "0xC92398", VA = "0xC92398")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xC93688", Offset = "0xC93688", VA = "0xC93688")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026D9")]
		[Address(RVA = "0xC97324", Offset = "0xC97324", VA = "0xC97324")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026DA")]
		[Address(RVA = "0xC93A20", Offset = "0xC93A20", VA = "0xC93A20")]
		public void Connect(string host, int port)
		{
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0xC9732C", Offset = "0xC9732C", VA = "0xC9732C")]
		[IteratorStateMachine(typeof(<ConnectCo>d__76))]
		private IEnumerator ConnectCo(string host, int port)
		{
			return null;
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0xC973EC", Offset = "0xC973EC", VA = "0xC973EC")]
		private void Send(Lobbyist.Messages.Message msg, [Optional] ToJson toJson)
		{
		}

		[Token(Token = "0x60026DD")]
		[Address(RVA = "0xC978A0", Offset = "0xC978A0", VA = "0xC978A0")]
		private void Update()
		{
		}

		[Token(Token = "0x60026DE")]
		[Address(RVA = "0xC978A4", Offset = "0xC978A4", VA = "0xC978A4")]
		private void ReadMessages()
		{
		}

		[Token(Token = "0x60026DF")]
		[Address(RVA = "0xC9872C", Offset = "0xC9872C", VA = "0xC9872C")]
		private void _Disconnect()
		{
		}

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0xC93EA8", Offset = "0xC93EA8", VA = "0xC93EA8")]
		public void Disconnect(string reason)
		{
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0xC97850", Offset = "0xC97850", VA = "0xC97850")]
		private void OnFailedToSend()
		{
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0xC98798", Offset = "0xC98798", VA = "0xC98798")]
		private void OnDisconnected(string reason)
		{
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0xC9888C", Offset = "0xC9888C", VA = "0xC9888C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0xC96E10", Offset = "0xC96E10", VA = "0xC96E10")]
		[AsyncStateMachine(typeof(<Ping>d__91))]
		public System.Threading.Tasks.Task<(bool, long)> Ping()
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0xC98890", Offset = "0xC98890", VA = "0xC98890")]
		[IteratorStateMachine(typeof(<WaitForPongTimeOut>d__92))]
		private IEnumerator WaitForPongTimeOut()
		{
			return null;
		}

		[Token(Token = "0x60026E6")]
		[Address(RVA = "0xC9892C", Offset = "0xC9892C", VA = "0xC9892C")]
		private void Pong()
		{
		}

		[Token(Token = "0x60026E7")]
		[Address(RVA = "0xC98494", Offset = "0xC98494", VA = "0xC98494")]
		private void OnPing()
		{
		}

		[Token(Token = "0x60026E8")]
		[Address(RVA = "0xC98498", Offset = "0xC98498", VA = "0xC98498")]
		private void OnPong()
		{
		}

		[Token(Token = "0x60026E9")]
		[Address(RVA = "0xC93B70", Offset = "0xC93B70", VA = "0xC93B70")]
		public void SendHello(string playerID, string multiplayer_version, PlatformType platform = PlatformType.None, int protocolVersion = 3)
		{
		}

		[Token(Token = "0x60026EA")]
		[Address(RVA = "0xC9853C", Offset = "0xC9853C", VA = "0xC9853C")]
		private void OnRxWelcome(Welcome msg)
		{
		}

		[Token(Token = "0x60026EB")]
		[Address(RVA = "0xC98558", Offset = "0xC98558", VA = "0xC98558")]
		private void OnRxUnwelcome(Unwelcome msg)
		{
		}

		[Token(Token = "0x60026EC")]
		[Address(RVA = "0xC98574", Offset = "0xC98574", VA = "0xC98574")]
		private void OnRxBye(Bye msg)
		{
		}

		[Token(Token = "0x60026ED")]
		[Address(RVA = "0xC94294", Offset = "0xC94294", VA = "0xC94294")]
		public void SendQueueRanked(float rating, float ratingDev, CoModes coModes)
		{
		}

		[Token(Token = "0x60026EE")]
		[Address(RVA = "0xC943F4", Offset = "0xC943F4", VA = "0xC943F4")]
		public void SendQueueInvite(string friendId, CoMode coMode)
		{
		}

		[Token(Token = "0x60026EF")]
		[Address(RVA = "0xC9455C", Offset = "0xC9455C", VA = "0xC9455C")]
		public void SendQueuePIN(string pin, CoMode coMode)
		{
		}

		[Token(Token = "0x60026F0")]
		[Address(RVA = "0xC94694", Offset = "0xC94694", VA = "0xC94694")]
		public void SendCancelQueue()
		{
		}

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0xC98590", Offset = "0xC98590", VA = "0xC98590")]
		private void OnRxOnQueueFailed(OnQueueFailed msg)
		{
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0xC985AC", Offset = "0xC985AC", VA = "0xC985AC")]
		public void OnRxOnConnecting(OnConnecting msg)
		{
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0xC94BD0", Offset = "0xC94BD0", VA = "0xC94BD0")]
		public void SendHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0xC985F4", Offset = "0xC985F4", VA = "0xC985F4")]
		private void OnRxHostAddresses(HostAddresses msg)
		{
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0xC94D68", Offset = "0xC94D68", VA = "0xC94D68")]
		public void SendReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0xC98610", Offset = "0xC98610", VA = "0xC98610")]
		private void OnRxReflexiveAddress(ReflexiveAddresses msg)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0xC94F50", Offset = "0xC94F50", VA = "0xC94F50")]
		public void SendRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0xC9862C", Offset = "0xC9862C", VA = "0xC9862C")]
		private void OnRxRelayedAddresses(RelayedAddresses msg)
		{
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0xC95090", Offset = "0xC95090", VA = "0xC95090")]
		public void SendSuccessfulTest(string type, object data)
		{
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0xC95214", Offset = "0xC95214", VA = "0xC95214")]
		public void SendTestsDone(string type)
		{
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0xC98648", Offset = "0xC98648", VA = "0xC98648")]
		private void OnRxSuccessfulTest(SuccessfulTest msg)
		{
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0xC98664", Offset = "0xC98664", VA = "0xC98664")]
		private void OnRxTestsDone(TestsDone msg)
		{
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0xC9567C", Offset = "0xC9567C", VA = "0xC9567C")]
		public void SendNoConnectivity(bool isQueued)
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0xC95834", Offset = "0xC95834", VA = "0xC95834")]
		public void SendIceTimeout(bool isQueued)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0xC959FC", Offset = "0xC959FC", VA = "0xC959FC")]
		public void SendUdpUtpChosenAddress(string type, object data)
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0xC95C5C", Offset = "0xC95C5C", VA = "0xC95C5C")]
		public void SendEstablished(string connectionType, object data)
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0xC95E70", Offset = "0xC95E70", VA = "0xC95E70")]
		public void SendIceEnd(string connectionType, object data)
		{
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0xC95E08", Offset = "0xC95E08", VA = "0xC95E08")]
		public void SendIceEnd()
		{
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0xC98680", Offset = "0xC98680", VA = "0xC98680")]
		private void OnRxUdpUtpChosenAddress(UdpUtpChosenAddress msg)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0xC9869C", Offset = "0xC9869C", VA = "0xC9869C")]
		private void OnRxUdpUtpEndIce(EndIce msg)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0xC986B8", Offset = "0xC986B8", VA = "0xC986B8")]
		private void OnRxEstablished(Established msg)
		{
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0xC96378", Offset = "0xC96378", VA = "0xC96378")]
		public void SendAcceptMatch()
		{
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0xC986D4", Offset = "0xC986D4", VA = "0xC986D4")]
		private void OnRxOnMatchAccepted(OnMatchAccepted msg)
		{
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0xC96578", Offset = "0xC96578", VA = "0xC96578")]
		public void SendDeclineMatch(bool isQueued)
		{
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0xC96750", Offset = "0xC96750", VA = "0xC96750")]
		public void SendDisconnect()
		{
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0xC98AE8", Offset = "0xC98AE8", VA = "0xC98AE8")]
		public void SendUdpUtpAnalytic(string matchId, UdpUtpResultStatus result)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0xC986F0", Offset = "0xC986F0", VA = "0xC986F0")]
		private void OnRxOnConnected(OnConnected msg)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0xC9870C", Offset = "0xC9870C", VA = "0xC9870C")]
		private void OnRxOnDisconnected(OnDisconnected msg)
		{
		}

		[Token(Token = "0x600270D")]
		[Address(RVA = "0xC968F8", Offset = "0xC968F8", VA = "0xC968F8")]
		public void SendDebugClearBlacklist(string playerID)
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0xC98BC4", Offset = "0xC98BC4", VA = "0xC98BC4")]
		public LobbyistClientAPI()
		{
		}
	}
	[Token(Token = "0x2000698")]
	[CreateAssetMenu(menuName = "Data/Lobbyist/Lobbyist Client Config")]
	public class LobbyistClientConfig : ScriptableObject
	{
		[Token(Token = "0x40025CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string host;

		[Token(Token = "0x40025CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int port;

		[Token(Token = "0x600272D")]
		[Address(RVA = "0xC998C0", Offset = "0xC998C0", VA = "0xC998C0")]
		public LobbyistClientConfig()
		{
		}
	}
	[Token(Token = "0x2000699")]
	[CreateAssetMenu(menuName = "Data/Lobbyist/STUN Server Config")]
	public class StunServerConfig : ScriptableObject
	{
		[Token(Token = "0x40025CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string host;

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int port;

		[Token(Token = "0x600272E")]
		[Address(RVA = "0xC998C8", Offset = "0xC998C8", VA = "0xC998C8")]
		public StunServerConfig()
		{
		}
	}
	[Token(Token = "0x200069A")]
	public enum UdpUtpResultStatus
	{
		[Token(Token = "0x40025D0")]
		Failed,
		[Token(Token = "0x40025D1")]
		Connected
	}
}
namespace Lobbyist.Messages
{
	[Token(Token = "0x200069B")]
	public interface Message
	{
	}
	[Token(Token = "0x200069C")]
	public struct Ping : Message
	{
	}
	[Token(Token = "0x200069D")]
	public struct Pong : Message
	{
	}
	[Token(Token = "0x200069E")]
	public struct Hello : Message
	{
		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int version;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string playerID;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nativePlatform;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string multiplayer_version;

		[Token(Token = "0x600272F")]
		[Address(RVA = "0xC98994", Offset = "0xC98994", VA = "0xC98994")]
		public Hello(int version, string playerID, PlatformType platform, string multiplayer_version)
		{
		}
	}
	[Token(Token = "0x200069F")]
	public struct Welcome : Message
	{
	}
	[Token(Token = "0x20006A0")]
	public struct Unwelcome : Message
	{
		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string reason;
	}
	[Token(Token = "0x20006A1")]
	public struct Bye : Message
	{
		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string reason;
	}
	[Token(Token = "0x20006A2")]
	public struct QueueRanked : Message
	{
		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rating;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ratingDev;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string coModes;

		[Token(Token = "0x6002730")]
		[Address(RVA = "0xC98A4C", Offset = "0xC98A4C", VA = "0xC98A4C")]
		public QueueRanked(float rating, float ratingDev, string coModes)
		{
		}
	}
	[Token(Token = "0x20006A3")]
	public struct QueueInvite : Message
	{
		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerID;

		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string coMode;

		[Token(Token = "0x6002731")]
		[Address(RVA = "0xC98A58", Offset = "0xC98A58", VA = "0xC98A58")]
		public QueueInvite(string playerID, string coMode)
		{
		}
	}
	[Token(Token = "0x20006A4")]
	public struct QueuePIN : Message
	{
		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string pin;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string coMode;

		[Token(Token = "0x6002732")]
		[Address(RVA = "0xC98A88", Offset = "0xC98A88", VA = "0xC98A88")]
		public QueuePIN(string pin, string coMode)
		{
		}
	}
	[Token(Token = "0x20006A5")]
	public struct CancelQueue : Message
	{
	}
	[Token(Token = "0x20006A6")]
	public struct OnQueueFailed : Message
	{
	}
	[Token(Token = "0x20006A7")]
	public struct OnConnecting : Message
	{
		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string match_id;

		[Token(Token = "0x40025E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string source;

		[Token(Token = "0x40025E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string playerID;

		[Token(Token = "0x40025E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string coMode;

		[Token(Token = "0x40025E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isHost;

		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nativePlatform;
	}
	[Token(Token = "0x20006A8")]
	public struct HostAddresses : Message
	{
		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] addresses;

		[Token(Token = "0x6002733")]
		[Address(RVA = "0xC998D0", Offset = "0xC998D0", VA = "0xC998D0")]
		public HostAddresses(string[] addresses)
		{
		}
	}
	[Token(Token = "0x20006A9")]
	public struct ReflexiveAddress
	{
		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string reflexive;

		[Token(Token = "0x6002734")]
		[Address(RVA = "0xC998D8", Offset = "0xC998D8", VA = "0xC998D8")]
		public ReflexiveAddress(string host, string reflexive)
		{
		}
	}
	[Token(Token = "0x20006AA")]
	public struct ReflexiveAddresses : Message
	{
		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ReflexiveAddress[] addresses;
	}
	[Token(Token = "0x20006AB")]
	public struct RelayedAddresses : Message
	{
		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string[] addresses;

		[Token(Token = "0x6002735")]
		[Address(RVA = "0xC99908", Offset = "0xC99908", VA = "0xC99908")]
		public RelayedAddresses(string[] addresses)
		{
		}
	}
	[Token(Token = "0x20006AC")]
	public struct SuccessfulTest : Message
	{
		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;
	}
	[Token(Token = "0x20006AD")]
	public struct TestsDone : Message
	{
		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;
	}
	[Token(Token = "0x20006AE")]
	public struct NoConnectivity : Message
	{
		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;

		[Token(Token = "0x6002736")]
		[Address(RVA = "0xC99910", Offset = "0xC99910", VA = "0xC99910")]
		public NoConnectivity(bool isQueued)
		{
		}
	}
	[Token(Token = "0x20006AF")]
	public struct IceTimeout : Message
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;
	}
	[Token(Token = "0x20006B0")]
	public struct UdpUtpChosenAddress : Message
	{
		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;
	}
	[Token(Token = "0x20006B1")]
	public struct EndIce : Message
	{
		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;
	}
	[Token(Token = "0x20006B2")]
	public struct Established : Message
	{
		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object data;

		[Token(Token = "0x6002737")]
		[Address(RVA = "0xC98AB8", Offset = "0xC98AB8", VA = "0xC98AB8")]
		public Established(string type, object data)
		{
		}
	}
	[Token(Token = "0x20006B3")]
	public struct AcceptMatch : Message
	{
	}
	[Token(Token = "0x20006B4")]
	public struct DeclineMatch : Message
	{
		[Token(Token = "0x40025F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;

		[Token(Token = "0x6002738")]
		[Address(RVA = "0xC9991C", Offset = "0xC9991C", VA = "0xC9991C")]
		public DeclineMatch(bool isQueued)
		{
		}
	}
	[Token(Token = "0x20006B5")]
	public struct OnMatchAccepted : Message
	{
	}
	[Token(Token = "0x20006B6")]
	public struct OnConnected : Message
	{
	}
	[Token(Token = "0x20006B7")]
	public struct Disconnect : Message
	{
	}
	[Token(Token = "0x20006B8")]
	public struct OnDisconnected : Message
	{
		[Token(Token = "0x40025F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool isQueued;

		[Token(Token = "0x40025F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string reason;

		[Token(Token = "0x6002739")]
		[Address(RVA = "0xC99928", Offset = "0xC99928", VA = "0xC99928")]
		public OnDisconnected(bool isQueued, string reason)
		{
		}
	}
	[Token(Token = "0x20006B9")]
	public struct UdpUtpAnalytic : Message
	{
		[Token(Token = "0x40025F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string match_id;

		[Token(Token = "0x40025F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string result;
	}
	[Token(Token = "0x20006BA")]
	public struct DebugClearBlacklist : Message
	{
		[Token(Token = "0x40025FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string playerID;

		[Token(Token = "0x600273A")]
		[Address(RVA = "0xC9993C", Offset = "0xC9993C", VA = "0xC9993C")]
		public DebugClearBlacklist(string playerID)
		{
		}
	}
}
namespace Multiplayer
{
	[Token(Token = "0x20006BB")]
	internal class LobbyistAsSignalingServer : ISignalingServer
	{
		[Token(Token = "0x40025FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly LobbyistClient _client;

		[Token(Token = "0x600273B")]
		[Address(RVA = "0xC99944", Offset = "0xC99944", VA = "0xC99944")]
		public LobbyistAsSignalingServer(LobbyistClient client)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0xC99974", Offset = "0xC99974", VA = "0xC99974", Slot = "4")]
		private void Multiplayer.ICE.ISignalingServer.SendHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0xC9998C", Offset = "0xC9998C", VA = "0xC9998C", Slot = "5")]
		private void Multiplayer.ICE.ISignalingServer.SendReflexiveAddresses(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0xC999A4", Offset = "0xC999A4", VA = "0xC999A4", Slot = "6")]
		private void Multiplayer.ICE.ISignalingServer.SendRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0xC999BC", Offset = "0xC999BC", VA = "0xC999BC", Slot = "13")]
		private void Multiplayer.ICE.ISignalingServer.SendSuccessfulTest(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0xC999D4", Offset = "0xC999D4", VA = "0xC999D4", Slot = "14")]
		private void Multiplayer.ICE.ISignalingServer.SendTestsDone(AgentType type)
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0xC999EC", Offset = "0xC999EC", VA = "0xC999EC", Slot = "7")]
		private void Multiplayer.ICE.ISignalingServer.SendNoConnectivity()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0xC99A04", Offset = "0xC99A04", VA = "0xC99A04", Slot = "8")]
		public void SendIceTimeout()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0xC99A1C", Offset = "0xC99A1C", VA = "0xC99A1C", Slot = "9")]
		private void Multiplayer.ICE.ISignalingServer.SendUdpUtpChosenAddress(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0xC99A34", Offset = "0xC99A34", VA = "0xC99A34", Slot = "10")]
		private void Multiplayer.ICE.ISignalingServer.SendEstablished(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0xC99A4C", Offset = "0xC99A4C", VA = "0xC99A4C", Slot = "11")]
		private void Multiplayer.ICE.ISignalingServer.SendEndIce(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0xC99A64", Offset = "0xC99A64", VA = "0xC99A64", Slot = "15")]
		public void SendUdpUtpStatus(UdpUtpResultStatus result)
		{
		}
	}
	[Token(Token = "0x20006BC")]
	[Flags]
	public enum ConnectionsType
	{
		[Token(Token = "0x40025FD")]
		None = 0,
		[Token(Token = "0x40025FE")]
		UtpUdp = 1,
		[Token(Token = "0x40025FF")]
		Relay = 2,
		[Token(Token = "0x4002600")]
		NativeP2P = 4,
		[Token(Token = "0x4002601")]
		RelayQos = 8
	}
	[Token(Token = "0x20006BD")]
	public static class ConnectionsTypeHelper
	{
		[Token(Token = "0x6002747")]
		[Address(RVA = "0xC99B18", Offset = "0xC99B18", VA = "0xC99B18")]
		public static ConnectionsType[] AllFlags()
		{
			return null;
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0xC99C44", Offset = "0xC99C44", VA = "0xC99C44")]
		public static IEnumerable<ConnectionsType> EnumerateFlags(ConnectionsType value)
		{
			return null;
		}
	}
}
namespace Multiplayer.ICE
{
	[Token(Token = "0x20006BF")]
	public class ICEProcess : MonoBehaviour
	{
		[Token(Token = "0x20006C0")]
		public enum ICEConnectionState
		{
			[Token(Token = "0x4002615")]
			None,
			[Token(Token = "0x4002616")]
			Connecting,
			[Token(Token = "0x4002617")]
			FirstConnected,
			[Token(Token = "0x4002618")]
			BetterConnected,
			[Token(Token = "0x4002619")]
			Timeout,
			[Token(Token = "0x400261A")]
			Failed
		}

		[Token(Token = "0x20006C1")]
		public delegate void OnConnectedDelegate(ICEProcess ice, NodeStatus status);

		[Token(Token = "0x20006C2")]
		public delegate void OnBetterConnectedDelegate(ICEProcess ice, NodeStatus status);

		[Token(Token = "0x4002603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ICESettings iceSettings;

		[Token(Token = "0x400260A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISignalingServer _signalingServer;

		[Token(Token = "0x400260B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly HashSet<IceAgent> _iceAgents;

		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly IceAgent[] _iceAgentsBuffer;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NodeStatus _firstNode;

		[Token(Token = "0x400260F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private NodeStatus _betterNode;

		[Token(Token = "0x4002610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly List<NodeStatus> _nodesStatuses;

		[Token(Token = "0x4002611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Stopwatch _stopwatch;

		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _agentsTypeCount;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Type, IceAgentAttribute> _agentTypeToAgentTypeEnum;

		[Token(Token = "0x1700067B")]
		public bool IsHost
		{
			[Token(Token = "0x600274C")]
			[Address(RVA = "0xC99D44", Offset = "0xC99D44", VA = "0xC99D44")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600274B")]
			[Address(RVA = "0xC99D38", Offset = "0xC99D38", VA = "0xC99D38")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067C")]
		public ICEConnectionState ConnectionState
		{
			[Token(Token = "0x600274E")]
			[Address(RVA = "0xC99D54", Offset = "0xC99D54", VA = "0xC99D54")]
			[CompilerGenerated]
			get
			{
				return default(ICEConnectionState);
			}
			[Token(Token = "0x600274D")]
			[Address(RVA = "0xC99D4C", Offset = "0xC99D4C", VA = "0xC99D4C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067D")]
		public bool DidTimedOut
		{
			[Token(Token = "0x6002750")]
			[Address(RVA = "0xC99D68", Offset = "0xC99D68", VA = "0xC99D68")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600274F")]
			[Address(RVA = "0xC99D5C", Offset = "0xC99D5C", VA = "0xC99D5C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700067E")]
		public bool FirstConnected
		{
			[Token(Token = "0x6002751")]
			[Address(RVA = "0xC99D70", Offset = "0xC99D70", VA = "0xC99D70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700067F")]
		public bool Initialized
		{
			[Token(Token = "0x6002758")]
			[Address(RVA = "0xC9A150", Offset = "0xC9A150", VA = "0xC9A150")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002759")]
			[Address(RVA = "0xC9A158", Offset = "0xC9A158", VA = "0xC9A158")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000680")]
		private Span<IceAgent> IceAgentsBuffer
		{
			[Token(Token = "0x600275A")]
			[Address(RVA = "0xC9A164", Offset = "0xC9A164", VA = "0xC9A164")]
			get
			{
				return default(Span<IceAgent>);
			}
		}

		[Token(Token = "0x17000681")]
		public IEnumerable<NodeStatus> NodeStatuses
		{
			[Token(Token = "0x600276A")]
			[Address(RVA = "0xC9CC44", Offset = "0xC9CC44", VA = "0xC9CC44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000682")]
		private bool HaveAtLeastOneNodeFromEachAgent
		{
			[Token(Token = "0x6002774")]
			[Address(RVA = "0xC9E124", Offset = "0xC9E124", VA = "0xC9E124")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000683")]
		private bool AllStatusesDone
		{
			[Token(Token = "0x6002775")]
			[Address(RVA = "0xC9E1C8", Offset = "0xC9E1C8", VA = "0xC9E1C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000085")]
		public event OnConnectedDelegate OnFirstConnected
		{
			[Token(Token = "0x6002752")]
			[Address(RVA = "0xC99D80", Offset = "0xC99D80", VA = "0xC99D80")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002753")]
			[Address(RVA = "0xC99E1C", Offset = "0xC99E1C", VA = "0xC99E1C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000086")]
		public event OnBetterConnectedDelegate OnBetterConnected
		{
			[Token(Token = "0x6002754")]
			[Address(RVA = "0xC99EB8", Offset = "0xC99EB8", VA = "0xC99EB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002755")]
			[Address(RVA = "0xC99F54", Offset = "0xC99F54", VA = "0xC99F54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000087")]
		public event Action<ICEProcess> OnConnectionFailed
		{
			[Token(Token = "0x6002756")]
			[Address(RVA = "0xC99FF0", Offset = "0xC99FF0", VA = "0xC99FF0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002757")]
			[Address(RVA = "0xC9A0A0", Offset = "0xC9A0A0", VA = "0xC9A0A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0xC9A39C", Offset = "0xC9A39C", VA = "0xC9A39C")]
		private bool ChooseFirstNode()
		{
			return default(bool);
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0xC9A5A0", Offset = "0xC9A5A0", VA = "0xC9A5A0")]
		public void CloseFirstNode()
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0xC9A5E4", Offset = "0xC9A5E4", VA = "0xC9A5E4")]
		private void ChooseBetterNode(NodeStatus status)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0xC9A718", Offset = "0xC9A718", VA = "0xC9A718")]
		private void CloseBetterNode()
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0xC9A748", Offset = "0xC9A748", VA = "0xC9A748")]
		private void CloseNonConnectedStatuses()
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0xC9A5D0", Offset = "0xC9A5D0", VA = "0xC9A5D0")]
		private void CloseStatus(NodeStatus stat)
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0xC9AAC4", Offset = "0xC9AAC4", VA = "0xC9AAC4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0xC9ACE8", Offset = "0xC9ACE8", VA = "0xC9ACE8")]
		private void DisposeAgents()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0xC9AFD0", Offset = "0xC9AFD0", VA = "0xC9AFD0")]
		private void DisposeAgent(IceAgent agent)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0xC9A8B8", Offset = "0xC9A8B8", VA = "0xC9A8B8")]
		private void CloseNode(P2PNode node)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0xC9B9DC", Offset = "0xC9B9DC", VA = "0xC9B9DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0xC9BA60", Offset = "0xC9BA60", VA = "0xC9BA60")]
		public void Initialize(ISignalingServer signalingServer, bool supportNativeP2P = false)
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0xC9C2AC", Offset = "0xC9C2AC", VA = "0xC9C2AC")]
		private void CleanStaleAgents()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0xC9C3F8", Offset = "0xC9C3F8", VA = "0xC9C3F8")]
		private void CleanStaleP2PNodes()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0xC9C740", Offset = "0xC9C740", VA = "0xC9C740")]
		public void Establish(bool isHost)
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0xC9CC4C", Offset = "0xC9CC4C", VA = "0xC9CC4C")]
		private void OnNodeInitStatus(NodeStatus status)
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0xC9CD40", Offset = "0xC9CD40", VA = "0xC9CD40")]
		private void OnTimeOut(ICEConnectionState prevState)
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0xC9D168", Offset = "0xC9D168", VA = "0xC9D168")]
		private void OnNodeConnectionFailed(IceAgent agent, NodeStatus status)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0xC9D470", Offset = "0xC9D470", VA = "0xC9D470")]
		private void OnNodeConnected(NodeStatus status)
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0xC9D4F4", Offset = "0xC9D4F4", VA = "0xC9D4F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0xC9A58C", Offset = "0xC9A58C", VA = "0xC9A58C")]
		[CanBeNull]
		private NodeStatus BestAgentStatus(bool first = false)
		{
			return null;
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0xC9D7DC", Offset = "0xC9D7DC", VA = "0xC9D7DC")]
		private NodeStatus StatusOfBestConnectedClient()
		{
			return null;
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0xC9D918", Offset = "0xC9D918", VA = "0xC9D918")]
		private NodeStatus ConcludeStatusOfBestConnectedHost(bool first)
		{
			return null;
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0xC9D3A8", Offset = "0xC9D3A8", VA = "0xC9D3A8")]
		private void ConcludeFailOrSuccess()
		{
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0xC9DBB4", Offset = "0xC9DBB4", VA = "0xC9DBB4")]
		private void ConcludeFailOrSuccessHost()
		{
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0xC9E0D4", Offset = "0xC9E0D4", VA = "0xC9E0D4")]
		private void ConcludeFailOrSuccessClient()
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0xC9E2CC", Offset = "0xC9E2CC", VA = "0xC9E2CC")]
		private void FailIceIfNoConnection()
		{
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0xC9CEDC", Offset = "0xC9CEDC", VA = "0xC9CEDC")]
		private void FailIce()
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0xC9E3D0", Offset = "0xC9E3D0", VA = "0xC9E3D0")]
		private void SuccessIce([NotNull] NodeStatus statusOfBestConnected)
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0xC9E470", Offset = "0xC9E470", VA = "0xC9E470")]
		public void OnEndIce(AgentType agentType, object data)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0xC9E82C", Offset = "0xC9E82C", VA = "0xC9E82C")]
		public void OnUdpUtpChosenAddress(AgentType agentType, object data)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0xC9EAE4", Offset = "0xC9EAE4", VA = "0xC9EAE4")]
		public void OnEstablished(AgentType type, object data)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0xC9EB70", Offset = "0xC9EB70", VA = "0xC9EB70")]
		private void OnEstablishedBroadcast(AgentType agentType, object data)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0xC9EE68", Offset = "0xC9EE68", VA = "0xC9EE68")]
		public void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0xC9EFA4", Offset = "0xC9EFA4", VA = "0xC9EFA4")]
		public void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0xC9F0E0", Offset = "0xC9F0E0", VA = "0xC9F0E0")]
		public void OnRxSuccessfulTest(AgentType type, object data)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0xC9F398", Offset = "0xC9F398", VA = "0xC9F398")]
		public void OnRxTestsDone(AgentType type)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0xC9F584", Offset = "0xC9F584", VA = "0xC9F584")]
		public void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0xC9F6C0", Offset = "0xC9F6C0", VA = "0xC9F6C0")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0xC9F6C4", Offset = "0xC9F6C4", VA = "0xC9F6C4")]
		private Type[] GetIceAgentTypes()
		{
			return null;
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0xC9F7FC", Offset = "0xC9F7FC", VA = "0xC9F7FC")]
		public static IceAgentAttribute GetIceCustomAttribute([NotNull] Type iceAgentType)
		{
			return null;
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0xC9C03C", Offset = "0xC9C03C", VA = "0xC9C03C")]
		private HashSet<Type> GetUsedAgentsTypes(ConnectionsType connectionsType)
		{
			return null;
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0xC9ABBC", Offset = "0xC9ABBC", VA = "0xC9ABBC")]
		private void DebugLog(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0xC9AEA4", Offset = "0xC9AEA4", VA = "0xC9AEA4")]
		private void DebugLogWarning(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0xC9B8B0", Offset = "0xC9B8B0", VA = "0xC9B8B0")]
		private void DebugLogError(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0xC9FA2C", Offset = "0xC9FA2C", VA = "0xC9FA2C")]
		public ICEProcess()
		{
		}
	}
	[Token(Token = "0x20006C6")]
	public class NodeStatus
	{
		[Token(Token = "0x20006C7")]
		public enum NodeStatusState
		{
			[Token(Token = "0x400262A")]
			None,
			[Token(Token = "0x400262B")]
			Testing,
			[Token(Token = "0x400262C")]
			Connected,
			[Token(Token = "0x400262D")]
			Fail
		}

		[Token(Token = "0x20006C8")]
		public class EstablishMessage
		{
			[Token(Token = "0x400262E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AgentType type;

			[Token(Token = "0x400262F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public object data;

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xCA051C", Offset = "0xCA051C", VA = "0xCA051C")]
			public EstablishMessage()
			{
			}
		}

		[Token(Token = "0x4002624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NodeStatusState state;

		[Token(Token = "0x4002625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IceAgent agent;

		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public P2PNode p2PNode;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NodeAnalyzeReport report;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EstablishMessage establishMessage;

		[Token(Token = "0x60027A2")]
		[Address(RVA = "0xCA0378", Offset = "0xCA0378", VA = "0xCA0378", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60027A3")]
		[Address(RVA = "0xCA0514", Offset = "0xCA0514", VA = "0xCA0514")]
		public NodeStatus()
		{
		}
	}
	[Token(Token = "0x20006C9")]
	public interface ISignalingServer
	{
		[Token(Token = "0x60027A5")]
		void SendHostAddresses(string[] addresses);

		[Token(Token = "0x60027A6")]
		void SendReflexiveAddresses(ReflexiveAddress[] addresses);

		[Token(Token = "0x60027A7")]
		void SendRelayedAddresses(string[] addresses);

		[Token(Token = "0x60027A8")]
		void SendNoConnectivity();

		[Token(Token = "0x60027A9")]
		void SendIceTimeout();

		[Token(Token = "0x60027AA")]
		void SendUdpUtpChosenAddress(AgentType type, object data);

		[Token(Token = "0x60027AB")]
		void SendEstablished(AgentType type, object data);

		[Token(Token = "0x60027AC")]
		void SendEndIce(AgentType type, object data);

		[Token(Token = "0x60027AD")]
		[Address(RVA = "0xCA0524", Offset = "0xCA0524", VA = "0xCA0524", Slot = "8")]
		void SendEndIce()
		{
		}

		[Token(Token = "0x60027AE")]
		void SendSuccessfulTest(AgentType type, object data);

		[Token(Token = "0x60027AF")]
		void SendTestsDone(AgentType type);

		[Token(Token = "0x60027B0")]
		void SendUdpUtpStatus(UdpUtpResultStatus result);
	}
}
namespace Multiplayer.ICE.Agents
{
	[Token(Token = "0x20006CA")]
	public enum AgentType
	{
		[Token(Token = "0x4002631")]
		None = 0,
		[Token(Token = "0x4002632")]
		UtpUdp = 1,
		[Token(Token = "0x4002633")]
		UnityRelay = 101,
		[Token(Token = "0x4002634")]
		UnityQosRelay = 102,
		[Token(Token = "0x4002635")]
		NativeP2P = 201
	}
	[Token(Token = "0x20006CB")]
	public abstract class IceAgent : MonoBehaviour, IDisposable
	{
		[Token(Token = "0x20006CC")]
		public delegate void OnNodeConnectedDelegate(NodeStatus arguments);

		[Token(Token = "0x20006CD")]
		public abstract class EstablishData
		{
			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xCA1870", Offset = "0xCA1870", VA = "0xCA1870")]
			protected EstablishData()
			{
			}
		}

		[Token(Token = "0x20006CF")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass67_0
		{
			[Token(Token = "0x400264A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IceAgent <>4__this;

			[Token(Token = "0x400264B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public P2PNode node;

			[Token(Token = "0x400264C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public long[] rxTimes;

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0xCA1930", Offset = "0xCA1930", VA = "0xCA1930")]
			public <>c__DisplayClass67_0()
			{
			}
		}

		[Token(Token = "0x20006D1")]
		[CompilerGenerated]
		private sealed class <AnalyzeNodeCo>d__67 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400264F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002650")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002651")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IceAgent <>4__this;

			[Token(Token = "0x4002652")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public P2PNode node;

			[Token(Token = "0x4002653")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass67_0 <>8__1;

			[Token(Token = "0x4002654")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<NodeAnalyzeReport> onDisqualified;

			[Token(Token = "0x4002655")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<NodeAnalyzeReport> onDone;

			[Token(Token = "0x4002656")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private long[] <txTimes>5__2;

			[Token(Token = "0x4002657")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <p>5__3;

			[Token(Token = "0x1700068A")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60027F2")]
				[Address(RVA = "0xCA245C", Offset = "0xCA245C", VA = "0xCA245C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700068B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F4")]
				[Address(RVA = "0xCA24A4", Offset = "0xCA24A4", VA = "0xCA24A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xCA1614", Offset = "0xCA1614", VA = "0xCA1614")]
			[DebuggerHidden]
			public <AnalyzeNodeCo>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xCA1A94", Offset = "0xCA1A94", VA = "0xCA1A94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F1")]
			[Address(RVA = "0xCA1A98", Offset = "0xCA1A98", VA = "0xCA1A98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F3")]
			[Address(RVA = "0xCA2464", Offset = "0xCA2464", VA = "0xCA2464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<P2PNode, NodeStatus> _p2pToStaus;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CoroutineHandle _analyzeAndConcludeCo;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected ICEProcess _iceProcess;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected ISignalingServer _signalingServer;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected ICESettings _iceSettings;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly Stopwatch _stopwatch;

		[Token(Token = "0x4002641")]
		private const string COLON_SEPARATOR = ":";

		[Token(Token = "0x4002642")]
		private const string STUN_REQUEST_HEADER = "stun-req";

		[Token(Token = "0x4002643")]
		private const string STUN_RESPONSE_HEADER = "stun-res";

		[Token(Token = "0x4002644")]
		protected const string STUN_UBIK_ID = "Ubik";

		[Token(Token = "0x17000684")]
		public bool ImplementsHost
		{
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0xC9CB48", Offset = "0xC9CB48", VA = "0xC9CB48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000685")]
		public bool ImplementsClient
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xC9CA4C", Offset = "0xC9CA4C", VA = "0xC9CA4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000686")]
		public abstract Type EstablishType
		{
			[Token(Token = "0x60027C2")]
			get;
		}

		[Token(Token = "0x17000687")]
		public virtual Type TestData
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xCA0D7C", Offset = "0xCA0D7C", VA = "0xCA0D7C", Slot = "11")]
			[CompilerGenerated]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000688")]
		public IceAgentAttribute AgentAttribute
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xC9E7C4", Offset = "0xC9E7C4", VA = "0xC9E7C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000689")]
		public bool Disposed
		{
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0xCA0DA4", Offset = "0xCA0DA4", VA = "0xCA0DA4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xCA0DAC", Offset = "0xCA0DAC", VA = "0xCA0DAC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000088")]
		public event Action<IceAgent, NodeStatus> onNodeConnectionFailed
		{
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xC9C64C", Offset = "0xC9C64C", VA = "0xC9C64C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xC9B800", Offset = "0xC9B800", VA = "0xC9B800")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000089")]
		public event OnNodeConnectedDelegate onNodeConnected
		{
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xC9C5B0", Offset = "0xC9C5B0", VA = "0xC9C5B0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xC9B764", Offset = "0xC9B764", VA = "0xC9B764")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400008A")]
		public event Action<NodeStatus> onNodeInitStatus
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xC9C500", Offset = "0xC9C500", VA = "0xC9C500")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xC9B578", Offset = "0xC9B578", VA = "0xC9B578")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0xCA05C4", Offset = "0xCA05C4", VA = "0xCA05C4")]
		protected NodeStatus InitNodeStatus([NotNull] P2PNode node, [Optional][CanBeNull] EstablishData establishData)
		{
			return null;
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0xCA0770", Offset = "0xCA0770", VA = "0xCA0770")]
		protected void SetEstablishedDataOnNode([NotNull] P2PNode node, EstablishData establishData)
		{
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0xCA07B4", Offset = "0xCA07B4", VA = "0xCA07B4")]
		public NodeStatus StatusOfNode(P2PNode node)
		{
			return null;
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0xCA080C", Offset = "0xCA080C", VA = "0xCA080C", Slot = "5")]
		protected virtual void OnNodeConnected(P2PNode node)
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0xCA0850", Offset = "0xCA0850", VA = "0xCA0850", Slot = "6")]
		protected virtual void OnNodeConnectionFailed(P2PNode node)
		{
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0xCA0898", Offset = "0xCA0898", VA = "0xCA0898", Slot = "7")]
		protected virtual void OnAgentConnectionFailed()
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0xCA0960", Offset = "0xCA0960", VA = "0xCA0960")]
		protected void StartAnalyzeNode(P2PNode node, [Optional] Action<P2PNode> onDone, [Optional] Action<P2PNode> onDisqualified)
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0xCA0BD0", Offset = "0xCA0BD0", VA = "0xCA0BD0", Slot = "8")]
		protected virtual void OnAnalyzeNodeDisqualified(P2PNode node)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0xCA0D70", Offset = "0xCA0D70", VA = "0xCA0D70", Slot = "9")]
		protected virtual void OnAnalyzeNodeDone(P2PNode node)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0xCA06E0", Offset = "0xCA06E0", VA = "0xCA06E0")]
		protected NodeStatus.EstablishMessage EstablishMessageOfData(EstablishData establishData)
		{
			return null;
		}

		[Token(Token = "0x60027C6")]
		[Address(RVA = "0xC9C6FC", Offset = "0xC9C6FC", VA = "0xC9C6FC")]
		public void InjectDependencies(ICEProcess iceProcess, ISignalingServer signalingServer, ICESettings iceSettings)
		{
		}

		[Token(Token = "0x60027C7")]
		[Address(RVA = "0xCA0D84", Offset = "0xCA0D84", VA = "0xCA0D84", Slot = "12")]
		public virtual void WarmUp()
		{
		}

		[Token(Token = "0x60027C8")]
		[Address(RVA = "0xCA0D88", Offset = "0xCA0D88", VA = "0xCA0D88", Slot = "13")]
		public virtual void EstablishConnection()
		{
		}

		[Token(Token = "0x60027CB")]
		[Address(RVA = "0xCA0DB8", Offset = "0xCA0DB8", VA = "0xCA0DB8", Slot = "14")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60027CC")]
		[Address(RVA = "0xCA0E74", Offset = "0xCA0E74", VA = "0xCA0E74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60027CD")]
		[Address(RVA = "0xCA0EC4", Offset = "0xCA0EC4", VA = "0xCA0EC4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60027CE")]
		[Address(RVA = "0xCA0ED4", Offset = "0xCA0ED4", VA = "0xCA0ED4")]
		private static string stun_req_msg(string id)
		{
			return null;
		}

		[Token(Token = "0x60027CF")]
		[Address(RVA = "0xCA0F20", Offset = "0xCA0F20", VA = "0xCA0F20")]
		private static string stun_res_msg(string id)
		{
			return null;
		}

		[Token(Token = "0x60027D0")]
		[Address(RVA = "0xCA0F6C", Offset = "0xCA0F6C", VA = "0xCA0F6C")]
		protected static void SendStunRequest(P2PNode node, string id)
		{
		}

		[Token(Token = "0x60027D1")]
		[Address(RVA = "0xCA106C", Offset = "0xCA106C", VA = "0xCA106C")]
		protected void SendStunResponse(P2PNode node, string id)
		{
		}

		[Token(Token = "0x60027D2")]
		[Address(RVA = "0xCA116C", Offset = "0xCA116C", VA = "0xCA116C", Slot = "15")]
		public virtual void OnUdpUtpChosenAddress(object data)
		{
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0xCA1170", Offset = "0xCA1170", VA = "0xCA1170", Slot = "16")]
		public virtual void OnEstablished(object data)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0xCA1174", Offset = "0xCA1174", VA = "0xCA1174", Slot = "17")]
		public virtual void OnEndIce([CanBeNull] object data)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0xCA1178", Offset = "0xCA1178", VA = "0xCA1178", Slot = "18")]
		public virtual void OnRxSuccessfulTest(object data)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0xCA117C", Offset = "0xCA117C", VA = "0xCA117C", Slot = "19")]
		public virtual void OnRxTestsDone()
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0xCA1180", Offset = "0xCA1180", VA = "0xCA1180", Slot = "20")]
		public virtual void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0xCA1184", Offset = "0xCA1184", VA = "0xCA1184", Slot = "21")]
		public virtual void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60027D9")]
		[Address(RVA = "0xCA1188", Offset = "0xCA1188", VA = "0xCA1188", Slot = "22")]
		public virtual void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60027DA")]
		[Address(RVA = "0xCA118C", Offset = "0xCA118C", VA = "0xCA118C")]
		public static ConnectionsType AgentTypeToConnectionsType(AgentType agentType)
		{
			return default(ConnectionsType);
		}

		[Token(Token = "0x60027DB")]
		[Address(RVA = "0xCA124C", Offset = "0xCA124C", VA = "0xCA124C")]
		public static AgentType ConnectionsTypeToAgentType(ConnectionsType connectionsType)
		{
			return default(AgentType);
		}

		[Token(Token = "0x60027DC")]
		[Address(RVA = "0xCA12F0", Offset = "0xCA12F0", VA = "0xCA12F0")]
		protected void OnRxDataFromNode(P2PNode node, byte[] data, long[] rxTimes)
		{
		}

		[Token(Token = "0x60027DD")]
		[Address(RVA = "0xCA0B10", Offset = "0xCA0B10", VA = "0xCA0B10")]
		[IteratorStateMachine(typeof(<AnalyzeNodeCo>d__67))]
		private IEnumerator<float> AnalyzeNodeCo(P2PNode node, Action<NodeAnalyzeReport> onDone, [Optional] Action<NodeAnalyzeReport> onDisqualified)
		{
			return null;
		}

		[Token(Token = "0x60027DE")]
		[Address(RVA = "0xCA0C40", Offset = "0xCA0C40", VA = "0xCA0C40")]
		protected void DebugLog(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x60027DF")]
		[Address(RVA = "0xCA163C", Offset = "0xCA163C", VA = "0xCA163C")]
		protected void DebugLogWarning(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0xCA14E4", Offset = "0xCA14E4", VA = "0xCA14E4")]
		protected void DebugLogError(object message, [Optional] UnityEngine.Object context, bool debugOnly = false)
		{
		}

		[Token(Token = "0x60027E1")]
		[Address(RVA = "0xCA176C", Offset = "0xCA176C", VA = "0xCA176C")]
		protected IceAgent()
		{
		}
	}
	[Token(Token = "0x20006D2")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public class IceAgentAttribute : Attribute
	{
		[Token(Token = "0x4002658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AgentType agentType;

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0xCA2500", Offset = "0xCA2500", VA = "0xCA2500")]
		public IceAgentAttribute(AgentType agentType)
		{
		}
	}
	[Token(Token = "0x20006D3")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public class IceAgentHostAttribute : IceAgentAttribute
	{
		[Token(Token = "0x60027F6")]
		[Address(RVA = "0xCA2528", Offset = "0xCA2528", VA = "0xCA2528")]
		public IceAgentHostAttribute(AgentType agentType)
		{
		}
	}
	[Token(Token = "0x20006D4")]
	[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct)]
	public class IceAgentClientAttribute : IceAgentAttribute
	{
		[Token(Token = "0x60027F7")]
		[Address(RVA = "0xCA2550", Offset = "0xCA2550", VA = "0xCA2550")]
		public IceAgentClientAttribute(AgentType agentType)
		{
		}
	}
	[Token(Token = "0x20006D5")]
	public class ICEAgentsList : MonoBehaviour
	{
		[Token(Token = "0x4002659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IceAgent[] iceAgents;

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0xCA2578", Offset = "0xCA2578", VA = "0xCA2578")]
		private void Awake()
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0xCA2758", Offset = "0xCA2758", VA = "0xCA2758")]
		public ICEAgentsList()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	public abstract class NativePeerToPeerAgent : IceAgent
	{
		[Token(Token = "0x20006D8")]
		public class NativePeerToPeerEstablishData : EstablishData
		{
			[Token(Token = "0x6002805")]
			[Address(RVA = "0xCA2B34", Offset = "0xCA2B34", VA = "0xCA2B34")]
			public NativePeerToPeerEstablishData()
			{
			}
		}

		[Token(Token = "0x20006DA")]
		[CompilerGenerated]
		private sealed class <EstablishCo>d__9 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002661")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002662")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002663")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NativePeerToPeerAgent <>4__this;

			[Token(Token = "0x1700068D")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600280C")]
				[Address(RVA = "0xCA3020", Offset = "0xCA3020", VA = "0xCA3020", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700068E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600280E")]
				[Address(RVA = "0xCA3068", Offset = "0xCA3068", VA = "0xCA3068", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002809")]
			[Address(RVA = "0xCA2CE0", Offset = "0xCA2CE0", VA = "0xCA2CE0")]
			[DebuggerHidden]
			public <EstablishCo>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600280A")]
			[Address(RVA = "0xCA2DDC", Offset = "0xCA2DDC", VA = "0xCA2DDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600280B")]
			[Address(RVA = "0xCA2DE0", Offset = "0xCA2DE0", VA = "0xCA2DE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600280D")]
			[Address(RVA = "0xCA3028", Offset = "0xCA3028", VA = "0xCA3028", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400265C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected NativePeerToPeer _nativePeerToPeer;

		[Token(Token = "0x400265D")]
		protected const string CLIENT_CONNECTED_MESSAGE = "client-connected";

		[Token(Token = "0x400265E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CoroutineHandle _establishCo;

		[Token(Token = "0x1700068C")]
		public override Type EstablishType
		{
			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xCA2854", Offset = "0xCA2854", VA = "0xCA2854", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0xCA28C0", Offset = "0xCA28C0", VA = "0xCA28C0", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0xCA29D8", Offset = "0xCA29D8", VA = "0xCA29D8")]
		private bool CanUseNativePlatformP2P()
		{
			return default(bool);
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0xCA2BB0", Offset = "0xCA2BB0", VA = "0xCA2BB0", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0xCA2B3C", Offset = "0xCA2B3C", VA = "0xCA2B3C")]
		[IteratorStateMachine(typeof(<EstablishCo>d__9))]
		private IEnumerator<float> EstablishCo()
		{
			return null;
		}

		[Token(Token = "0x6002802")]
		protected abstract void NativePeerToPeerOnConnected();

		[Token(Token = "0x6002803")]
		[Address(RVA = "0xCA2D08", Offset = "0xCA2D08", VA = "0xCA2D08")]
		private void NativePeerToPeerOnFailedToConnect()
		{
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0xCA2D18", Offset = "0xCA2D18", VA = "0xCA2D18")]
		protected NativePeerToPeerAgent()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	[IceAgentClient(AgentType.NativeP2P)]
	public class NativePeerToPeerAgentClient : NativePeerToPeerAgent
	{
		[Token(Token = "0x4002664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _connected;

		[Token(Token = "0x4002665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Action<byte[]> _stunResponderAction;

		[Token(Token = "0x600280F")]
		[Address(RVA = "0xCA30C4", Offset = "0xCA30C4", VA = "0xCA30C4", Slot = "23")]
		protected override void NativePeerToPeerOnConnected()
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0xCA31E4", Offset = "0xCA31E4", VA = "0xCA31E4", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0xCA321C", Offset = "0xCA321C", VA = "0xCA321C", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0xCA32C4", Offset = "0xCA32C4", VA = "0xCA32C4")]
		public NativePeerToPeerAgentClient()
		{
		}
	}
	[Token(Token = "0x20006DC")]
	[IceAgentHost(AgentType.NativeP2P)]
	public class NativePeerToPeerAgentHost : NativePeerToPeerAgent
	{
		[Token(Token = "0x20006DD")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002668")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool gotClientConnectedMessage;

			[Token(Token = "0x6002818")]
			[Address(RVA = "0xCA3468", Offset = "0xCA3468", VA = "0xCA3468")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0xCA34F0", Offset = "0xCA34F0", VA = "0xCA34F0")]
			internal bool <AnalyzeAfter>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006DE")]
		[CompilerGenerated]
		private sealed class <AnalyzeAfter>d__3 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002669")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400266A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400266B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NativePeerToPeerAgentHost <>4__this;

			[Token(Token = "0x400266C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float seconds;

			[Token(Token = "0x400266D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass3_0 <>8__1;

			[Token(Token = "0x1700068F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600281E")]
				[Address(RVA = "0xCA370C", Offset = "0xCA370C", VA = "0xCA370C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000690")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002820")]
				[Address(RVA = "0xCA3754", Offset = "0xCA3754", VA = "0xCA3754", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281B")]
			[Address(RVA = "0xCA33D8", Offset = "0xCA33D8", VA = "0xCA33D8")]
			[DebuggerHidden]
			public <AnalyzeAfter>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0xCA34F8", Offset = "0xCA34F8", VA = "0xCA34F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281D")]
			[Address(RVA = "0xCA34FC", Offset = "0xCA34FC", VA = "0xCA34FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281F")]
			[Address(RVA = "0xCA3714", Offset = "0xCA3714", VA = "0xCA3714", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002666")]
		private const float WAIT_BEFORE_ANALYZE = 0.3f;

		[Token(Token = "0x4002667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private CoroutineHandle _analyzeAfterCo;

		[Token(Token = "0x6002814")]
		[Address(RVA = "0xCA32DC", Offset = "0xCA32DC", VA = "0xCA32DC", Slot = "23")]
		protected override void NativePeerToPeerOnConnected()
		{
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0xCA3354", Offset = "0xCA3354", VA = "0xCA3354")]
		[IteratorStateMachine(typeof(<AnalyzeAfter>d__3))]
		private IEnumerator<float> AnalyzeAfter(float seconds)
		{
			return null;
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0xCA3400", Offset = "0xCA3400", VA = "0xCA3400", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0xCA3464", Offset = "0xCA3464", VA = "0xCA3464")]
		public NativePeerToPeerAgentHost()
		{
		}
	}
	[Token(Token = "0x20006DF")]
	public class NodeAnalyzeReport
	{
		[Token(Token = "0x400266E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint avgPingMs;

		[Token(Token = "0x400266F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float dropRate;

		[Token(Token = "0x6002821")]
		[Address(RVA = "0xCA47B0", Offset = "0xCA47B0", VA = "0xCA47B0")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002822")]
		[Address(RVA = "0xCA47B4", Offset = "0xCA47B4", VA = "0xCA47B4")]
		public bool IsBetterThan(NodeAnalyzeReport report)
		{
			return default(bool);
		}

		[Token(Token = "0x6002823")]
		[Address(RVA = "0xCA47D4", Offset = "0xCA47D4", VA = "0xCA47D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0xCA4890", Offset = "0xCA4890", VA = "0xCA4890")]
		public NodeAnalyzeReport()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public abstract class UnityRelayIceAgent : IceAgent
	{
		[Token(Token = "0x20006E1")]
		public class UnityRelayEstablishData : EstablishData
		{
			[Token(Token = "0x4002670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string joinCode;

			[Token(Token = "0x6002827")]
			[Address(RVA = "0xCA490C", Offset = "0xCA490C", VA = "0xCA490C")]
			public UnityRelayEstablishData()
			{
			}
		}

		[Token(Token = "0x17000691")]
		public override Type EstablishType
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0xCA4898", Offset = "0xCA4898", VA = "0xCA4898", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002826")]
		[Address(RVA = "0xCA4904", Offset = "0xCA4904", VA = "0xCA4904")]
		protected UnityRelayIceAgent()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	[IceAgentClient(AgentType.UnityRelay)]
	public sealed class UnityRelayIceAgentClient : UnityRelayIceAgent
	{
		[Token(Token = "0x20006E3")]
		private class SuppressedException : Exception
		{
			[Token(Token = "0x6002832")]
			[Address(RVA = "0xCA5490", Offset = "0xCA5490", VA = "0xCA5490")]
			public SuppressedException()
			{
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0xCA54E8", Offset = "0xCA54E8", VA = "0xCA54E8")]
			public SuppressedException(string message)
			{
			}
		}

		[Token(Token = "0x20006E4")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityRelayIceAgentClient <>4__this;

			[Token(Token = "0x4002674")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x6002834")]
			[Address(RVA = "0xCA5550", Offset = "0xCA5550", VA = "0xCA5550")]
			public <>c__DisplayClass5_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006E5")]
		[CompilerGenerated]
		private struct <JoinClient>d__5 : IAsyncStateMachine
		{
			[Token(Token = "0x4002675")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002676")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x4002677")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayIceAgentClient <>4__this;

			[Token(Token = "0x4002678")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x4002679")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string relayJoinCode;

			[Token(Token = "0x400267A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x400267B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <errored>5__2;

			[Token(Token = "0x400267C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002836")]
			[Address(RVA = "0xCA5584", Offset = "0xCA5584", VA = "0xCA5584", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0xCA5C98", Offset = "0xCA5C98", VA = "0xCA5C98", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<RelayUtpClient> _testingClients;

		[Token(Token = "0x4002672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly HashSet<Action<byte[]>> _relayReceiveDataListeners;

		[Token(Token = "0x6002828")]
		[Address(RVA = "0xCA4914", Offset = "0xCA4914", VA = "0xCA4914", Slot = "22")]
		public override void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002829")]
		[Address(RVA = "0xCA4918", Offset = "0xCA4918", VA = "0xCA4918")]
		private void JoinRelays(string[] relayedAddresses)
		{
		}

		[Token(Token = "0x600282A")]
		[Address(RVA = "0xCA4A80", Offset = "0xCA4A80", VA = "0xCA4A80")]
		[AsyncStateMachine(typeof(<JoinClient>d__5))]
		private void JoinClient(RelayUtpClient relayClient, string relayJoinCode)
		{
		}

		[Token(Token = "0x600282B")]
		[Address(RVA = "0xCA4B70", Offset = "0xCA4B70", VA = "0xCA4B70", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x600282C")]
		[Address(RVA = "0xCA4D98", Offset = "0xCA4D98", VA = "0xCA4D98", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x600282D")]
		[Address(RVA = "0xCA502C", Offset = "0xCA502C", VA = "0xCA502C")]
		private void FailAllConnections()
		{
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0xCA51AC", Offset = "0xCA51AC", VA = "0xCA51AC", Slot = "6")]
		protected override void OnNodeConnectionFailed(P2PNode node)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0xCA538C", Offset = "0xCA538C", VA = "0xCA538C", Slot = "5")]
		protected override void OnNodeConnected(P2PNode node)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0xCA51D8", Offset = "0xCA51D8", VA = "0xCA51D8")]
		private void RemoveListenersFromNode(P2PNode p2PNode)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0xCA53B8", Offset = "0xCA53B8", VA = "0xCA53B8")]
		public UnityRelayIceAgentClient()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	[IceAgentHost(AgentType.UnityRelay)]
	public sealed class UnityRelayIceAgentHost : UnityRelayIceAgent
	{
		[StructLayout(3)]
		[Token(Token = "0x20006EC")]
		[CompilerGenerated]
		private struct <CreateRelays>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x400268F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x4002690")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x4002691")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayIceAgentHost <>4__this;

			[Token(Token = "0x4002692")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TaskAwaiter<List<string>> <>u__1;

			[Token(Token = "0x6002848")]
			[Address(RVA = "0xCA6D2C", Offset = "0xCA6D2C", VA = "0xCA6D2C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002849")]
			[Address(RVA = "0xCA7400", Offset = "0xCA7400", VA = "0xCA7400", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x400267F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly List<string> _regions;

		[Token(Token = "0x600283C")]
		[Address(RVA = "0xCA5D0C", Offset = "0xCA5D0C", VA = "0xCA5D0C", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0xCA5D28", Offset = "0xCA5D28", VA = "0xCA5D28")]
		private void CreateRelaysAsync()
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0xCA5D48", Offset = "0xCA5D48", VA = "0xCA5D48")]
		[AsyncStateMachine(typeof(<CreateRelays>d__3))]
		private System.Threading.Tasks.Task CreateRelays()
		{
			return null;
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0xCA5E34", Offset = "0xCA5E34", VA = "0xCA5E34")]
		private void SendRelayAddress(RelayUtpHost relayUtpHost)
		{
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0xCA5F68", Offset = "0xCA5F68", VA = "0xCA5F68", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0xCA5FE4", Offset = "0xCA5FE4", VA = "0xCA5FE4")]
		public UnityRelayIceAgentHost()
		{
		}
	}
	[Token(Token = "0x20006ED")]
	[IceAgent(AgentType.UnityQosRelay)]
	public class UnityRelayQosIceAgent : IceAgent
	{
		[Token(Token = "0x20006EE")]
		public class UnityRelayEstablishData : EstablishData
		{
			[Token(Token = "0x4002699")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string joinCode;

			[Token(Token = "0x600285F")]
			[Address(RVA = "0xCA7BC0", Offset = "0xCA7BC0", VA = "0xCA7BC0")]
			public UnityRelayEstablishData()
			{
			}
		}

		[Token(Token = "0x20006EF")]
		private class SuppressedException : Exception
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0xCA89A4", Offset = "0xCA89A4", VA = "0xCA89A4")]
			public SuppressedException(string message)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F0")]
		[CompilerGenerated]
		private struct <AllocateQosRelay>d__11 : IAsyncStateMachine
		{
			[Token(Token = "0x400269A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x400269B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<string> <>t__builder;

			[Token(Token = "0x400269C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x400269D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private long <ms>5__2;

			[Token(Token = "0x400269E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <chosenRegion>5__3;

			[Token(Token = "0x400269F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x40026A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<string> <>u__2;

			[Token(Token = "0x6002861")]
			[Address(RVA = "0xCA8A0C", Offset = "0xCA8A0C", VA = "0xCA8A0C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002862")]
			[Address(RVA = "0xCA8F3C", Offset = "0xCA8F3C", VA = "0xCA8F3C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F1")]
		[CompilerGenerated]
		private struct <JoinClient>d__13 : IAsyncStateMachine
		{
			[Token(Token = "0x40026A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder<bool> <>t__builder;

			[Token(Token = "0x40026A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string joinCode;

			[Token(Token = "0x40026A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x40026A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <errored>5__2;

			[Token(Token = "0x40026A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002863")]
			[Address(RVA = "0xCA8F94", Offset = "0xCA8F94", VA = "0xCA8F94", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002864")]
			[Address(RVA = "0xCA9634", Offset = "0xCA9634", VA = "0xCA9634", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F2")]
		[CompilerGenerated]
		private struct <EstablishClient>d__16 : IAsyncStateMachine
		{
			[Token(Token = "0x40026A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x6002865")]
			[Address(RVA = "0xCA968C", Offset = "0xCA968C", VA = "0xCA968C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002866")]
			[Address(RVA = "0xCA9A28", Offset = "0xCA9A28", VA = "0xCA9A28", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F3")]
		[CompilerGenerated]
		private struct <JoinClientAndServeAsStunResponder>d__17 : IAsyncStateMachine
		{
			[Token(Token = "0x40026AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x40026B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string relayJoinCode;

			[Token(Token = "0x40026B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002867")]
			[Address(RVA = "0xCA9A34", Offset = "0xCA9A34", VA = "0xCA9A34", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002868")]
			[Address(RVA = "0xCA9C44", Offset = "0xCA9C44", VA = "0xCA9C44", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F5")]
		[CompilerGenerated]
		private struct <EstablishHost>d__26 : IAsyncStateMachine
		{
			[Token(Token = "0x40026B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter<string> <>u__1;

			[Token(Token = "0x40026B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x600286B")]
			[Address(RVA = "0xCA9C7C", Offset = "0xCA9C7C", VA = "0xCA9C7C", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x600286C")]
			[Address(RVA = "0xCAA0C8", Offset = "0xCAA0C8", VA = "0xCAA0C8", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x20006F6")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x40026B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RelayUtpHost relayHost;

			[Token(Token = "0x40026BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool analyzeStarted;

			[Token(Token = "0x600286D")]
			[Address(RVA = "0xCAA0D4", Offset = "0xCAA0D4", VA = "0xCAA0D4")]
			public <>c__DisplayClass27_0()
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F7")]
		[CompilerGenerated]
		private struct <TestRelayHostWhenClientConnected>d__27 : IAsyncStateMachine
		{
			[Token(Token = "0x40026BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40026BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public RelayUtpHost relayHost;

			[Token(Token = "0x40026C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass27_0 <>8__1;

			[Token(Token = "0x40026C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x600286F")]
			[Address(RVA = "0xCAA1A8", Offset = "0xCAA1A8", VA = "0xCAA1A8", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002870")]
			[Address(RVA = "0xCAA614", Offset = "0xCAA614", VA = "0xCAA614", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x20006F8")]
		[CompilerGenerated]
		private struct <JoinClientAndAnalyze>d__28 : IAsyncStateMachine
		{
			[Token(Token = "0x40026C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40026C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncVoidMethodBuilder <>t__builder;

			[Token(Token = "0x40026C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityRelayQosIceAgent <>4__this;

			[Token(Token = "0x40026C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RelayUtpClient relayClient;

			[Token(Token = "0x40026C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string joinCode;

			[Token(Token = "0x40026C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter<bool> <>u__1;

			[Token(Token = "0x6002871")]
			[Address(RVA = "0xCAA620", Offset = "0xCAA620", VA = "0xCAA620", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002872")]
			[Address(RVA = "0xCAA83C", Offset = "0xCAA83C", VA = "0xCAA83C", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x4002693")]
		private const int MAX_CONNECTIONS = 2;

		[Token(Token = "0x4002694")]
		private const float ALLOCATION_TIMEOUT = 10f;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RelayUtpHost _relayUtpHost;

		[Token(Token = "0x4002696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RelayUtpClient _relayUtpClient;

		[Token(Token = "0x4002697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private System.Threading.Tasks.Task<string> _allocateQosRelayTask;

		[Token(Token = "0x4002698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<Action<byte[]>> _relayReceiveDataListeners;

		[Token(Token = "0x17000692")]
		public override Type EstablishType
		{
			[Token(Token = "0x600284B")]
			[Address(RVA = "0xCA74A4", Offset = "0xCA74A4", VA = "0xCA74A4", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0xCA740C", Offset = "0xCA740C", VA = "0xCA740C")]
		private RelayUtpBase RelayOfJoinCode(string relayJoinCode)
		{
			return null;
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0xCA7510", Offset = "0xCA7510", VA = "0xCA7510", Slot = "12")]
		public override void WarmUp()
		{
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0xCA76DC", Offset = "0xCA76DC", VA = "0xCA76DC", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x600284E")]
		[Address(RVA = "0xCA75CC", Offset = "0xCA75CC", VA = "0xCA75CC")]
		[AsyncStateMachine(typeof(<AllocateQosRelay>d__11))]
		private System.Threading.Tasks.Task<string> AllocateQosRelay()
		{
			return null;
		}

		[Token(Token = "0x600284F")]
		[Address(RVA = "0xCA7988", Offset = "0xCA7988", VA = "0xCA7988")]
		[AsyncStateMachine(typeof(<JoinClient>d__13))]
		private System.Threading.Tasks.Task<bool> JoinClient(RelayUtpClient relayClient, string joinCode)
		{
			return null;
		}

		[Token(Token = "0x6002850")]
		[Address(RVA = "0xCA7AD0", Offset = "0xCA7AD0", VA = "0xCA7AD0", Slot = "22")]
		public override void OnRxRelayedAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002851")]
		[Address(RVA = "0xCA7DA0", Offset = "0xCA7DA0", VA = "0xCA7DA0", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002852")]
		[Address(RVA = "0xCA78D0", Offset = "0xCA78D0", VA = "0xCA78D0")]
		[AsyncStateMachine(typeof(<EstablishClient>d__16))]
		private void EstablishClient()
		{
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0xCA7CB4", Offset = "0xCA7CB4", VA = "0xCA7CB4")]
		[AsyncStateMachine(typeof(<JoinClientAndServeAsStunResponder>d__17))]
		private void JoinClientAndServeAsStunResponder(RelayUtpClient relayClient, string relayJoinCode)
		{
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0xCA7E2C", Offset = "0xCA7E2C", VA = "0xCA7E2C")]
		private void ServeAsStunResponder(P2PNode node)
		{
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0xCA8030", Offset = "0xCA8030", VA = "0xCA8030", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0xCA8198", Offset = "0xCA8198", VA = "0xCA8198", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0xCA85DC", Offset = "0xCA85DC", VA = "0xCA85DC")]
		private void FailAllConnections()
		{
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0xCA860C", Offset = "0xCA860C", VA = "0xCA860C", Slot = "6")]
		protected override void OnNodeConnectionFailed(P2PNode node)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0xCA87EC", Offset = "0xCA87EC", VA = "0xCA87EC", Slot = "5")]
		protected override void OnNodeConnected(P2PNode node)
		{
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0xCA8638", Offset = "0xCA8638", VA = "0xCA8638")]
		private void RemoveListenersFromNode(P2PNode p2PNode)
		{
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0xCA781C", Offset = "0xCA781C", VA = "0xCA781C")]
		[AsyncStateMachine(typeof(<EstablishHost>d__26))]
		private void EstablishHost()
		{
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0xCA8818", Offset = "0xCA8818", VA = "0xCA8818")]
		[AsyncStateMachine(typeof(<TestRelayHostWhenClientConnected>d__27))]
		private System.Threading.Tasks.Task TestRelayHostWhenClientConnected(RelayUtpHost relayHost)
		{
			return null;
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0xCA7BC8", Offset = "0xCA7BC8", VA = "0xCA7BC8")]
		[AsyncStateMachine(typeof(<JoinClientAndAnalyze>d__28))]
		private void JoinClientAndAnalyze(RelayUtpClient relayClient, string joinCode)
		{
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0xCA8918", Offset = "0xCA8918", VA = "0xCA8918")]
		public UnityRelayQosIceAgent()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	public abstract class UtpUdpIceAgent : IceAgent
	{
		[Token(Token = "0x20006FA")]
		protected class CandidateTestStatus
		{
			[Token(Token = "0x20006FB")]
			public enum TestsStatus
			{
				[Token(Token = "0x40026D2")]
				None,
				[Token(Token = "0x40026D3")]
				Testing,
				[Token(Token = "0x40026D4")]
				Success,
				[Token(Token = "0x40026D5")]
				Fail
			}

			[Token(Token = "0x40026CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IPEndPoint local;

			[Token(Token = "0x40026CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPEndPoint remote;

			[Token(Token = "0x40026CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TestsStatus status;

			[Token(Token = "0x40026D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NodeAnalyzeReport analyzeReport;

			[Token(Token = "0x17000695")]
			public bool IsClientTest
			{
				[Token(Token = "0x6002888")]
				[Address(RVA = "0xCABF10", Offset = "0xCABF10", VA = "0xCABF10")]
				[CompilerGenerated]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002889")]
				[Address(RVA = "0xCABF18", Offset = "0xCABF18", VA = "0xCABF18")]
				[CompilerGenerated]
				private set
				{
				}
			}

			[Token(Token = "0x17000696")]
			public bool Done
			{
				[Token(Token = "0x600288A")]
				[Address(RVA = "0xCABF24", Offset = "0xCABF24", VA = "0xCABF24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600288B")]
			[Address(RVA = "0xCAA8D0", Offset = "0xCAA8D0", VA = "0xCAA8D0")]
			public static CandidateTestStatus NewTestingStatus(IPEndPoint local, IPEndPoint remote, bool isClientTest)
			{
				return null;
			}

			[Token(Token = "0x600288C")]
			[Address(RVA = "0xCABF40", Offset = "0xCABF40", VA = "0xCABF40", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x600288D")]
			[Address(RVA = "0xCABF38", Offset = "0xCABF38", VA = "0xCABF38")]
			public CandidateTestStatus()
			{
			}
		}

		[Token(Token = "0x20006FC")]
		public class UtpUdpEstablishData : EstablishData
		{
			[Token(Token = "0x40026D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string local;

			[Token(Token = "0x40026D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string remote;

			[Token(Token = "0x40026D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool clientIsHost;

			[Token(Token = "0x600288E")]
			[Address(RVA = "0xCAC0BC", Offset = "0xCAC0BC", VA = "0xCAC0BC")]
			public UtpUdpEstablishData()
			{
			}
		}

		[Token(Token = "0x20006FD")]
		protected class UtpUdpTestResultData
		{
			[Token(Token = "0x40026D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public UtpUdpEstablishData establishData;

			[Token(Token = "0x40026DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NodeAnalyzeReport analyzeReport;

			[Token(Token = "0x600288F")]
			[Address(RVA = "0xCAC0C4", Offset = "0xCAC0C4", VA = "0xCAC0C4")]
			public UtpUdpTestResultData()
			{
			}
		}

		[Token(Token = "0x2000700")]
		[CompilerGenerated]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x40026E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int addressesResponses;

			[Token(Token = "0x40026E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ReflexiveAddress> addresses;

			[Token(Token = "0x40026E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UtpUdpIceAgent <>4__this;

			[Token(Token = "0x600289C")]
			[Address(RVA = "0xCAC410", Offset = "0xCAC410", VA = "0xCAC410")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0xCAC428", Offset = "0xCAC428", VA = "0xCAC428")]
			internal bool <DetectReflexiveAddressesCo>b__1()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000702")]
		[CompilerGenerated]
		private sealed class <DetectReflexiveAddressesCo>d__20 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40026EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UtpUdpIceAgent <>4__this;

			[Token(Token = "0x40026ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass20_0 <>8__1;

			[Token(Token = "0x17000697")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60028A5")]
				[Address(RVA = "0xCACB9C", Offset = "0xCACB9C", VA = "0xCACB9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000698")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028A7")]
				[Address(RVA = "0xCACBE4", Offset = "0xCACBE4", VA = "0xCACBE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0xCAB810", Offset = "0xCAB810", VA = "0xCAB810")]
			[DebuggerHidden]
			public <DetectReflexiveAddressesCo>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xCAC5E8", Offset = "0xCAC5E8", VA = "0xCAC5E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xCAC5EC", Offset = "0xCAC5EC", VA = "0xCAC5EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xCACBA4", Offset = "0xCACBA4", VA = "0xCACBA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026C8")]
		protected const float IP_COOLDOWN = 1f;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly List<IceCandidate> _candidates;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected readonly HashSet<CandidateTestStatus> _candidateTestStatus;

		[Token(Token = "0x40026CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CoroutineHandle _detectReflexiveAddressesCo;

		[Token(Token = "0x17000693")]
		public override Type EstablishType
		{
			[Token(Token = "0x6002879")]
			[Address(RVA = "0xCAAD30", Offset = "0xCAAD30", VA = "0xCAAD30", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000694")]
		public override Type TestData
		{
			[Token(Token = "0x600287A")]
			[Address(RVA = "0xCAAD9C", Offset = "0xCAAD9C", VA = "0xCAAD9C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002873")]
		[Address(RVA = "0xCAA848", Offset = "0xCAA848", VA = "0xCAA848")]
		private CandidateTestStatus AddNewCandidateStatus(IPEndPoint local, IPEndPoint remote, bool isClientsTest)
		{
			return null;
		}

		[Token(Token = "0x6002874")]
		[Address(RVA = "0xCAA970", Offset = "0xCAA970", VA = "0xCAA970")]
		protected CandidateTestStatus AddNewCandidateStatusHost(IPEndPoint local, IPEndPoint remote)
		{
			return null;
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0xCAA978", Offset = "0xCAA978", VA = "0xCAA978")]
		protected CandidateTestStatus AddNewCandidateStatusClient(IPEndPoint local, IPEndPoint remote)
		{
			return null;
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0xCAA980", Offset = "0xCAA980", VA = "0xCAA980")]
		protected CandidateTestStatus StatusOfPair((IPEndPoint host, IPEndPoint remote) pair)
		{
			return null;
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0xCAAA74", Offset = "0xCAAA74", VA = "0xCAAA74", Slot = "23")]
		protected virtual bool AllTestsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0xCAAB78", Offset = "0xCAAB78", VA = "0xCAAB78")]
		protected void CleanupUnusedCandidates()
		{
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0xCAAE08", Offset = "0xCAAE08", VA = "0xCAAE08", Slot = "13")]
		public override void EstablishConnection()
		{
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0xCAB2FC", Offset = "0xCAB2FC", VA = "0xCAB2FC")]
		private static IEnumerable<IPAddress> GetHostAddresses()
		{
			return null;
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0xCAAE84", Offset = "0xCAAE84", VA = "0xCAAE84")]
		private bool CreateUdpCandidates()
		{
			return default(bool);
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0xCAB79C", Offset = "0xCAB79C", VA = "0xCAB79C")]
		[IteratorStateMachine(typeof(<DetectReflexiveAddressesCo>d__20))]
		private IEnumerator<float> DetectReflexiveAddressesCo()
		{
			return null;
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0xCAB838", Offset = "0xCAB838", VA = "0xCAB838")]
		protected IPEndPoint GetCandidateHostAddress(IPEndPoint address)
		{
			return null;
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0xCAB054", Offset = "0xCAB054", VA = "0xCAB054")]
		private void SendHostIpAddresses()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0xCABA08", Offset = "0xCABA08", VA = "0xCABA08", Slot = "21")]
		public override void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0xCABAA4", Offset = "0xCABAA4", VA = "0xCABAA4")]
		private bool RemoteHostAddressMatchesOwn(IPEndPoint remoteHostAddress)
		{
			return default(bool);
		}

		[Token(Token = "0x6002883")]
		protected abstract void AddRemoteHostAddress(IPEndPoint hostAddress);

		[Token(Token = "0x6002884")]
		[Address(RVA = "0xCABB90", Offset = "0xCABB90", VA = "0xCABB90", Slot = "20")]
		public override void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002885")]
		protected abstract void AddRemoteReflexiveAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress);

		[Token(Token = "0x6002886")]
		[Address(RVA = "0xCABC34", Offset = "0xCABC34", VA = "0xCABC34", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0xCABE38", Offset = "0xCABE38", VA = "0xCABE38")]
		protected UtpUdpIceAgent()
		{
		}
	}
	[Token(Token = "0x2000704")]
	[IceAgentClient(AgentType.UtpUdp)]
	public class UtpUdpIceAgentClient : UtpUdpIceAgent
	{
		[Token(Token = "0x2000707")]
		[CompilerGenerated]
		private sealed class <OnBestStatusClientCo>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UtpUdpIceAgentClient <>4__this;

			[Token(Token = "0x40026FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPEndPoint local;

			[Token(Token = "0x40026FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IPEndPoint remote;

			[Token(Token = "0x17000699")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028C0")]
				[Address(RVA = "0xCADC78", Offset = "0xCADC78", VA = "0xCADC78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C2")]
				[Address(RVA = "0xCADCC0", Offset = "0xCADCC0", VA = "0xCADCC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xCAD9F0", Offset = "0xCAD9F0", VA = "0xCAD9F0")]
			[DebuggerHidden]
			public <OnBestStatusClientCo>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xCADB60", Offset = "0xCADB60", VA = "0xCADB60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xCADB64", Offset = "0xCADB64", VA = "0xCADB64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xCADC80", Offset = "0xCADC80", VA = "0xCADC80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000708")]
		[CompilerGenerated]
		private sealed class <OnBestStatusHostCo>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40026FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40026FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40026FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UtpUdpIceAgentClient <>4__this;

			[Token(Token = "0x40026FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPEndPoint local;

			[Token(Token = "0x1700069B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60028C6")]
				[Address(RVA = "0xCADF78", Offset = "0xCADF78", VA = "0xCADF78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700069C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028C8")]
				[Address(RVA = "0xCADFC0", Offset = "0xCADFC0", VA = "0xCADFC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xCADA18", Offset = "0xCADA18", VA = "0xCADA18")]
			[DebuggerHidden]
			public <OnBestStatusHostCo>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xCADCC8", Offset = "0xCADCC8", VA = "0xCADCC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xCADCCC", Offset = "0xCADCCC", VA = "0xCADCCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028C7")]
			[Address(RVA = "0xCADF80", Offset = "0xCADF80", VA = "0xCADF80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40026EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UdpUtpBase _udpUtpNode;

		[Token(Token = "0x40026F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _reflexiveAddressMessageArrived;

		[Token(Token = "0x40026F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _concludeDoneTestsCount;

		[Token(Token = "0x40026F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _utpConnected;

		[Token(Token = "0x60028AA")]
		[Address(RVA = "0xCACC64", Offset = "0xCACC64", VA = "0xCACC64", Slot = "24")]
		protected override void AddRemoteHostAddress(IPEndPoint hostAddress)
		{
		}

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0xCACEC8", Offset = "0xCACEC8", VA = "0xCACEC8", Slot = "20")]
		public override void OnRxReflexiveAddress(ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x60028AC")]
		[Address(RVA = "0xCACED4", Offset = "0xCACED4", VA = "0xCACED4", Slot = "25")]
		protected override void AddRemoteReflexiveAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress)
		{
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0xCAD138", Offset = "0xCAD138", VA = "0xCAD138")]
		private void OnTestConnectivityResult(CandidateTestStatus stat, NodeAnalyzeReport report, bool success)
		{
		}

		[Token(Token = "0x60028AE")]
		[Address(RVA = "0xCAD4C4", Offset = "0xCAD4C4", VA = "0xCAD4C4", Slot = "23")]
		protected override bool AllTestsDone()
		{
			return default(bool);
		}

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0xCAD300", Offset = "0xCAD300", VA = "0xCAD300")]
		private void ConcludeDoneTests()
		{
		}

		[Token(Token = "0x60028B0")]
		[Address(RVA = "0xCAD4F0", Offset = "0xCAD4F0", VA = "0xCAD4F0", Slot = "15")]
		public override void OnUdpUtpChosenAddress(object data)
		{
		}

		[Token(Token = "0x60028B1")]
		[Address(RVA = "0xCAD94C", Offset = "0xCAD94C", VA = "0xCAD94C")]
		[IteratorStateMachine(typeof(<OnBestStatusClientCo>d__10))]
		private IEnumerator OnBestStatusClientCo(IPEndPoint local, IPEndPoint remote)
		{
			return null;
		}

		[Token(Token = "0x60028B2")]
		[Address(RVA = "0xCAD8BC", Offset = "0xCAD8BC", VA = "0xCAD8BC")]
		[IteratorStateMachine(typeof(<OnBestStatusHostCo>d__11))]
		private IEnumerator OnBestStatusHostCo(IPEndPoint local)
		{
			return null;
		}

		[Token(Token = "0x60028B3")]
		[Address(RVA = "0xCADA40", Offset = "0xCADA40", VA = "0xCADA40")]
		private void OnUtpNodeDisconnected()
		{
		}

		[Token(Token = "0x60028B4")]
		[Address(RVA = "0xCADA50", Offset = "0xCADA50", VA = "0xCADA50")]
		private void OnUtpNodeConnected()
		{
		}

		[Token(Token = "0x60028B5")]
		[Address(RVA = "0xCADA5C", Offset = "0xCADA5C", VA = "0xCADA5C", Slot = "16")]
		public override void OnEstablished(object data)
		{
		}

		[Token(Token = "0x60028B6")]
		[Address(RVA = "0xCADAD4", Offset = "0xCADAD4", VA = "0xCADAD4", Slot = "17")]
		public override void OnEndIce(object data)
		{
		}

		[Token(Token = "0x60028B7")]
		[Address(RVA = "0xCADAEC", Offset = "0xCADAEC", VA = "0xCADAEC", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60028B8")]
		[Address(RVA = "0xCADB0C", Offset = "0xCADB0C", VA = "0xCADB0C")]
		public UtpUdpIceAgentClient()
		{
		}
	}
	[Token(Token = "0x2000709")]
	[IceAgentHost(AgentType.UtpUdp)]
	public class UtpUdpIceAgentHost : UtpUdpIceAgent
	{
		[Token(Token = "0x200070D")]
		[CompilerGenerated]
		private sealed class <OnBestStatusClientCo>d__14 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400270C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400270D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x400270E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UtpUdpIceAgentHost <>4__this;

			[Token(Token = "0x400270F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPEndPoint localHostAddress;

			[Token(Token = "0x4002710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public IPEndPoint remoteReflexiveAddress;

			[Token(Token = "0x1700069D")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60028E4")]
				[Address(RVA = "0xCAF800", Offset = "0xCAF800", VA = "0xCAF800", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x1700069E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028E6")]
				[Address(RVA = "0xCAF848", Offset = "0xCAF848", VA = "0xCAF848", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028E1")]
			[Address(RVA = "0xCAF408", Offset = "0xCAF408", VA = "0xCAF408")]
			[DebuggerHidden]
			public <OnBestStatusClientCo>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x60028E2")]
			[Address(RVA = "0xCAF62C", Offset = "0xCAF62C", VA = "0xCAF62C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028E3")]
			[Address(RVA = "0xCAF630", Offset = "0xCAF630", VA = "0xCAF630", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028E5")]
			[Address(RVA = "0xCAF808", Offset = "0xCAF808", VA = "0xCAF808", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200070E")]
		[CompilerGenerated]
		private sealed class <OnBestStatusHostCo>d__16 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002711")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002712")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4002713")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UtpUdpIceAgentHost <>4__this;

			[Token(Token = "0x4002714")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IPEndPoint localHostAddress;

			[Token(Token = "0x4002715")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UtpUdpEstablishData data;

			[Token(Token = "0x1700069F")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x60028EA")]
				[Address(RVA = "0xCAFB20", Offset = "0xCAFB20", VA = "0xCAFB20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170006A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60028EC")]
				[Address(RVA = "0xCAFB68", Offset = "0xCAFB68", VA = "0xCAFB68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60028E7")]
			[Address(RVA = "0xCAF430", Offset = "0xCAF430", VA = "0xCAF430")]
			[DebuggerHidden]
			public <OnBestStatusHostCo>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xCAF8A4", Offset = "0xCAF8A4", VA = "0xCAF8A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60028E9")]
			[Address(RVA = "0xCAF8A8", Offset = "0xCAF8A8", VA = "0xCAF8A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60028EB")]
			[Address(RVA = "0xCAFB28", Offset = "0xCAFB28", VA = "0xCAFB28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private UdpUtpBase _udpUtpNode;

		[Token(Token = "0x4002701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool _clientTestsDone;

		[Token(Token = "0x4002702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool _clientAsUtpHostReady;

		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private CoroutineHandle _onBestStatusClientCo;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CoroutineHandle _onBestStatusHostCo;

		[Token(Token = "0x60028C9")]
		[Address(RVA = "0xCADFC8", Offset = "0xCADFC8", VA = "0xCADFC8", Slot = "14")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0xCAE040", Offset = "0xCAE040", VA = "0xCAE040", Slot = "21")]
		public override void OnRxHostAddresses(string[] addresses)
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0xCAE070", Offset = "0xCAE070", VA = "0xCAE070", Slot = "24")]
		protected override void AddRemoteHostAddress(IPEndPoint hostAddress)
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0xCAE2D4", Offset = "0xCAE2D4", VA = "0xCAE2D4", Slot = "25")]
		protected override void AddRemoteReflexiveAddress(IPEndPoint hostAddress, IPEndPoint reflexiveAddress)
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0xCAE550", Offset = "0xCAE550", VA = "0xCAE550")]
		private void OnTestConnectivityResult(CandidateTestStatus stat, bool success, NodeAnalyzeReport report)
		{
		}

		[Token(Token = "0x60028CE")]
		[Address(RVA = "0xCAE9A0", Offset = "0xCAE9A0", VA = "0xCAE9A0", Slot = "18")]
		public override void OnRxSuccessfulTest(object data)
		{
		}

		[Token(Token = "0x60028CF")]
		[Address(RVA = "0xCAEAE8", Offset = "0xCAEAE8", VA = "0xCAEAE8", Slot = "19")]
		public override void OnRxTestsDone()
		{
		}

		[Token(Token = "0x60028D0")]
		[Address(RVA = "0xCAE5A8", Offset = "0xCAE5A8", VA = "0xCAE5A8")]
		private void ConcludeTestsDone()
		{
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0xCAEC3C", Offset = "0xCAEC3C", VA = "0xCAEC3C")]
		private void OnBestStatus(CandidateTestStatus bestStatus)
		{
		}

		[Token(Token = "0x60028D2")]
		[Address(RVA = "0xCAF3FC", Offset = "0xCAF3FC", VA = "0xCAF3FC", Slot = "15")]
		public override void OnUdpUtpChosenAddress(object data)
		{
		}

		[Token(Token = "0x60028D3")]
		[Address(RVA = "0xCAF2B4", Offset = "0xCAF2B4", VA = "0xCAF2B4")]
		[IteratorStateMachine(typeof(<OnBestStatusClientCo>d__14))]
		private IEnumerator<float> OnBestStatusClientCo(IPEndPoint localHostAddress, IPEndPoint remoteReflexiveAddress)
		{
			return null;
		}

		[Token(Token = "0x60028D4")]
		[Address(RVA = "0xCAF358", Offset = "0xCAF358", VA = "0xCAF358")]
		[IteratorStateMachine(typeof(<OnBestStatusHostCo>d__16))]
		private IEnumerator<float> OnBestStatusHostCo(IPEndPoint localHostAddress, UtpUdpEstablishData data)
		{
			return null;
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0xCAF1CC", Offset = "0xCAF1CC", VA = "0xCAF1CC")]
		private void OnUtpNodeDisconnected()
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0xCAF458", Offset = "0xCAF458", VA = "0xCAF458")]
		private void OnUtpNodeConnected()
		{
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0xCAF514", Offset = "0xCAF514", VA = "0xCAF514")]
		public UtpUdpIceAgentHost()
		{
		}
	}
}
namespace Multiplayer.Tests
{
	[Token(Token = "0x200070F")]
	[AddComponentMenu("Multiplayer/Tests/AcceptanceInviteEachOtherTest")]
	public class AcceptanceInviteEachOtherTest : LobbyistTest
	{
		[Token(Token = "0x170006A1")]
		public override string title
		{
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xCAFBC4", Offset = "0xCAFBC4", VA = "0xCAFBC4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A2")]
		public override float timeout
		{
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xCAFC04", Offset = "0xCAFC04", VA = "0xCAFC04", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60028EF")]
		[Address(RVA = "0xCAFC0C", Offset = "0xCAFC0C", VA = "0xCAFC0C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60028F0")]
		[Address(RVA = "0xCAFC9C", Offset = "0xCAFC9C", VA = "0xCAFC9C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0xCAFD74", Offset = "0xCAFD74", VA = "0xCAFD74", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0xCAFE18", Offset = "0xCAFE18", VA = "0xCAFE18", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0xCAFEB4", Offset = "0xCAFEB4", VA = "0xCAFEB4")]
		public AcceptanceInviteEachOtherTest()
		{
		}
	}
	[Token(Token = "0x2000710")]
	[AddComponentMenu("Multiplayer/Tests/AcceptanceInviteTest")]
	public class AcceptanceInviteTest : LobbyistTest
	{
		[Token(Token = "0x170006A3")]
		public override string title
		{
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0xCAFED4", Offset = "0xCAFED4", VA = "0xCAFED4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A4")]
		public override float timeout
		{
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xCAFF14", Offset = "0xCAFF14", VA = "0xCAFF14", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60028F6")]
		[Address(RVA = "0xCAFF1C", Offset = "0xCAFF1C", VA = "0xCAFF1C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60028F7")]
		[Address(RVA = "0xCAFF58", Offset = "0xCAFF58", VA = "0xCAFF58", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0xCAFFE4", Offset = "0xCAFFE4", VA = "0xCAFFE4", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60028F9")]
		[Address(RVA = "0xCB0088", Offset = "0xCB0088", VA = "0xCB0088", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60028FA")]
		[Address(RVA = "0xCB0124", Offset = "0xCB0124", VA = "0xCB0124")]
		public AcceptanceInviteTest()
		{
		}
	}
	[Token(Token = "0x2000711")]
	[AddComponentMenu("Multiplayer/Tests/AcceptancePINTest")]
	public class AcceptancePINTest : LobbyistTest
	{
		[Token(Token = "0x170006A5")]
		public override string title
		{
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xCB0134", Offset = "0xCB0134", VA = "0xCB0134", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A6")]
		public override float timeout
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0xCB0174", Offset = "0xCB0174", VA = "0xCB0174", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60028FD")]
		[Address(RVA = "0xCB017C", Offset = "0xCB017C", VA = "0xCB017C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60028FE")]
		[Address(RVA = "0xCB01B8", Offset = "0xCB01B8", VA = "0xCB01B8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0xCB025C", Offset = "0xCB025C", VA = "0xCB025C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0xCB0300", Offset = "0xCB0300", VA = "0xCB0300", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0xCB039C", Offset = "0xCB039C", VA = "0xCB039C")]
		public AcceptancePINTest()
		{
		}
	}
	[Token(Token = "0x2000712")]
	[AddComponentMenu("Multiplayer/Tests/AcceptanceRankedTest")]
	public class AcceptanceRankedTest : LobbyistTest
	{
		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _clientConnected;

		[Token(Token = "0x170006A7")]
		public override string title
		{
			[Token(Token = "0x6002902")]
			[Address(RVA = "0xCB03AC", Offset = "0xCB03AC", VA = "0xCB03AC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006A8")]
		public override float timeout
		{
			[Token(Token = "0x6002903")]
			[Address(RVA = "0xCB03EC", Offset = "0xCB03EC", VA = "0xCB03EC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0xCB03F4", Offset = "0xCB03F4", VA = "0xCB03F4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0xCB0430", Offset = "0xCB0430", VA = "0xCB0430", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0xCB04E0", Offset = "0xCB04E0", VA = "0xCB04E0", Slot = "26")]
		protected override void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0xCB04E4", Offset = "0xCB04E4", VA = "0xCB04E4", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0xCB0588", Offset = "0xCB0588", VA = "0xCB0588", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0xCB0624", Offset = "0xCB0624", VA = "0xCB0624")]
		public AcceptanceRankedTest()
		{
		}
	}
	[Token(Token = "0x2000713")]
	[AddComponentMenu("Multiplayer/Tests/ShouldNotConnectSecondTimeBlackListedTest")]
	public class ShouldNotConnectSecondTimeBlackListedTest : LobbyistTest
	{
		[Token(Token = "0x2000714")]
		[CompilerGenerated]
		private sealed class <ClearBlackList>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400271F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShouldNotConnectSecondTimeBlackListedTest <>4__this;

			[Token(Token = "0x170006AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002916")]
				[Address(RVA = "0xCB0F30", Offset = "0xCB0F30", VA = "0xCB0F30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002918")]
				[Address(RVA = "0xCB0F78", Offset = "0xCB0F78", VA = "0xCB0F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0xCB09D4", Offset = "0xCB09D4", VA = "0xCB09D4")]
			[DebuggerHidden]
			public <ClearBlackList>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002914")]
			[Address(RVA = "0xCB0DC8", Offset = "0xCB0DC8", VA = "0xCB0DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002915")]
			[Address(RVA = "0xCB0DCC", Offset = "0xCB0DCC", VA = "0xCB0DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002917")]
			[Address(RVA = "0xCB0F38", Offset = "0xCB0F38", VA = "0xCB0F38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002717")]
		private const float MAX_ICE_DURATION = 5f;

		[Token(Token = "0x4002718")]
		private const float CLEAR_BLACKLIST_AFTER = 5f;

		[Token(Token = "0x4002719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _simulateNoConnectivity;

		[Token(Token = "0x400271A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDuration;

		[Token(Token = "0x400271B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _client1Connecting;

		[Token(Token = "0x400271C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _client2Connecting;

		[Token(Token = "0x400271D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool _secondQueue;

		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		private bool _shouldBeBlackList;

		[Token(Token = "0x170006A9")]
		public override string title
		{
			[Token(Token = "0x600290A")]
			[Address(RVA = "0xCB0634", Offset = "0xCB0634", VA = "0xCB0634", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AA")]
		public override float timeout
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0xCB0674", Offset = "0xCB0674", VA = "0xCB0674", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0xCB067C", Offset = "0xCB067C", VA = "0xCB067C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0xCB074C", Offset = "0xCB074C", VA = "0xCB074C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0xCB07FC", Offset = "0xCB07FC", VA = "0xCB07FC", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0xCB0960", Offset = "0xCB0960", VA = "0xCB0960")]
		[IteratorStateMachine(typeof(<ClearBlackList>d__15))]
		private IEnumerator ClearBlackList()
		{
			return null;
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0xCB09FC", Offset = "0xCB09FC", VA = "0xCB09FC", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0xCB0A7C", Offset = "0xCB0A7C", VA = "0xCB0A7C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0xCB0DB8", Offset = "0xCB0DB8", VA = "0xCB0DB8")]
		public ShouldNotConnectSecondTimeBlackListedTest()
		{
		}
	}
	[Token(Token = "0x2000715")]
	[AddComponentMenu("Multiplayer/Tests/CancelInviteTest")]
	public class CancelInviteTest : LobbyistTest
	{
		[Token(Token = "0x170006AD")]
		public override string title
		{
			[Token(Token = "0x6002919")]
			[Address(RVA = "0xCB0F80", Offset = "0xCB0F80", VA = "0xCB0F80", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0xCB0FC0", Offset = "0xCB0FC0", VA = "0xCB0FC0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0xCB0FFC", Offset = "0xCB0FFC", VA = "0xCB0FFC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0xCB10A8", Offset = "0xCB10A8", VA = "0xCB10A8", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x600291D")]
		[Address(RVA = "0xCB115C", Offset = "0xCB115C", VA = "0xCB115C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x600291E")]
		[Address(RVA = "0xCB1184", Offset = "0xCB1184", VA = "0xCB1184")]
		public CancelInviteTest()
		{
		}
	}
	[Token(Token = "0x2000716")]
	[AddComponentMenu("Multiplayer/Tests/CancelPINTest")]
	public class CancelPINTest : LobbyistTest
	{
		[Token(Token = "0x170006AE")]
		public override string title
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0xCB1194", Offset = "0xCB1194", VA = "0xCB1194", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006AF")]
		public override float timeout
		{
			[Token(Token = "0x6002922")]
			[Address(RVA = "0xCB12E0", Offset = "0xCB12E0", VA = "0xCB12E0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002920")]
		[Address(RVA = "0xCB11D4", Offset = "0xCB11D4", VA = "0xCB11D4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0xCB1210", Offset = "0xCB1210", VA = "0xCB1210", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002923")]
		[Address(RVA = "0xCB12E8", Offset = "0xCB12E8", VA = "0xCB12E8", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002924")]
		[Address(RVA = "0xCB139C", Offset = "0xCB139C", VA = "0xCB139C", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002925")]
		[Address(RVA = "0xCB1440", Offset = "0xCB1440", VA = "0xCB1440")]
		public CancelPINTest()
		{
		}
	}
	[Token(Token = "0x2000717")]
	[AddComponentMenu("Multiplayer/Tests/CancelRankedLateTest")]
	public class CancelRankedLateTest : LobbyistTest
	{
		[Token(Token = "0x170006B0")]
		public override string title
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0xCB1450", Offset = "0xCB1450", VA = "0xCB1450", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0xCB1490", Offset = "0xCB1490", VA = "0xCB1490", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0xCB14CC", Offset = "0xCB14CC", VA = "0xCB14CC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002929")]
		[Address(RVA = "0xCB1588", Offset = "0xCB1588", VA = "0xCB1588", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0xCB1658", Offset = "0xCB1658", VA = "0xCB1658", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0xCB1664", Offset = "0xCB1664", VA = "0xCB1664", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0xCB16E0", Offset = "0xCB16E0", VA = "0xCB16E0")]
		public CancelRankedLateTest()
		{
		}
	}
	[Token(Token = "0x2000718")]
	[AddComponentMenu("Multiplayer/Tests/CancelRankedTest")]
	public class CancelRankedTest : LobbyistTest
	{
		[Token(Token = "0x170006B1")]
		public override string title
		{
			[Token(Token = "0x600292D")]
			[Address(RVA = "0xCB16F0", Offset = "0xCB16F0", VA = "0xCB16F0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B2")]
		public override float timeout
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0xCB1848", Offset = "0xCB1848", VA = "0xCB1848", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600292E")]
		[Address(RVA = "0xCB1730", Offset = "0xCB1730", VA = "0xCB1730", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600292F")]
		[Address(RVA = "0xCB176C", Offset = "0xCB176C", VA = "0xCB176C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002931")]
		[Address(RVA = "0xCB1850", Offset = "0xCB1850", VA = "0xCB1850", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002932")]
		[Address(RVA = "0xCB1A58", Offset = "0xCB1A58", VA = "0xCB1A58", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002933")]
		[Address(RVA = "0xCB1B0C", Offset = "0xCB1B0C", VA = "0xCB1B0C", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002934")]
		[Address(RVA = "0xCB1B8C", Offset = "0xCB1B8C", VA = "0xCB1B8C")]
		public CancelRankedTest()
		{
		}
	}
	[Token(Token = "0x2000719")]
	[AddComponentMenu("Multiplayer/Tests/DeclineRankedAfterAcceptTest")]
	public class DeclineRankedAfterAcceptTest : LobbyistTest
	{
		[Token(Token = "0x170006B3")]
		public override string title
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0xCB1B9C", Offset = "0xCB1B9C", VA = "0xCB1B9C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002936")]
		[Address(RVA = "0xCB1BDC", Offset = "0xCB1BDC", VA = "0xCB1BDC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0xCB1C18", Offset = "0xCB1C18", VA = "0xCB1C18", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0xCB1CC8", Offset = "0xCB1CC8", VA = "0xCB1CC8", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002939")]
		[Address(RVA = "0xCB1D7C", Offset = "0xCB1D7C", VA = "0xCB1D7C", Slot = "26")]
		protected override void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x600293A")]
		[Address(RVA = "0xCB1D94", Offset = "0xCB1D94", VA = "0xCB1D94", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0xCB1DA0", Offset = "0xCB1DA0", VA = "0xCB1DA0", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x600293C")]
		[Address(RVA = "0xCB1E1C", Offset = "0xCB1E1C", VA = "0xCB1E1C")]
		public DeclineRankedAfterAcceptTest()
		{
		}
	}
	[Token(Token = "0x200071A")]
	[AddComponentMenu("Multiplayer/Tests/DeclineRankedBeforeAcceptTest")]
	public class DeclineRankedBeforeAcceptTest : LobbyistTest
	{
		[Token(Token = "0x170006B4")]
		public override string title
		{
			[Token(Token = "0x600293D")]
			[Address(RVA = "0xCB1E2C", Offset = "0xCB1E2C", VA = "0xCB1E2C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0xCB1E6C", Offset = "0xCB1E6C", VA = "0xCB1E6C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600293F")]
		[Address(RVA = "0xCB1EA8", Offset = "0xCB1EA8", VA = "0xCB1EA8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002940")]
		[Address(RVA = "0xCB1F58", Offset = "0xCB1F58", VA = "0xCB1F58", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0xCB200C", Offset = "0xCB200C", VA = "0xCB200C", Slot = "26")]
		protected override void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002942")]
		[Address(RVA = "0xCB2018", Offset = "0xCB2018", VA = "0xCB2018", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002943")]
		[Address(RVA = "0xCB2024", Offset = "0xCB2024", VA = "0xCB2024", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0xCB20A0", Offset = "0xCB20A0", VA = "0xCB20A0")]
		public DeclineRankedBeforeAcceptTest()
		{
		}
	}
	[Token(Token = "0x200071B")]
	[AddComponentMenu("Multiplayer/Tests/DisconnectedTest")]
	public class DisconnectedTest : LobbyistTest
	{
		[Token(Token = "0x170006B5")]
		public override string title
		{
			[Token(Token = "0x6002945")]
			[Address(RVA = "0xCB20B0", Offset = "0xCB20B0", VA = "0xCB20B0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B6")]
		public override float timeout
		{
			[Token(Token = "0x6002946")]
			[Address(RVA = "0xCB20F0", Offset = "0xCB20F0", VA = "0xCB20F0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0xCB20F8", Offset = "0xCB20F8", VA = "0xCB20F8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002948")]
		[Address(RVA = "0xCB2134", Offset = "0xCB2134", VA = "0xCB2134", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002949")]
		[Address(RVA = "0xCB21E4", Offset = "0xCB21E4", VA = "0xCB21E4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0xCB2268", Offset = "0xCB2268", VA = "0xCB2268", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0xCB242C", Offset = "0xCB242C", VA = "0xCB242C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x600294C")]
		[Address(RVA = "0xCB2454", Offset = "0xCB2454", VA = "0xCB2454")]
		public DisconnectedTest()
		{
		}
	}
	[Token(Token = "0x200071C")]
	[AddComponentMenu("Multiplayer/Tests/DisconnectTest")]
	public class DisconnectTest : LobbyistTest
	{
		[Token(Token = "0x170006B7")]
		public override string title
		{
			[Token(Token = "0x600294D")]
			[Address(RVA = "0xCB2464", Offset = "0xCB2464", VA = "0xCB2464", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006B8")]
		public override float timeout
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0xCB24A4", Offset = "0xCB24A4", VA = "0xCB24A4", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0xCB24AC", Offset = "0xCB24AC", VA = "0xCB24AC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0xCB24E8", Offset = "0xCB24E8", VA = "0xCB24E8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0xCB2598", Offset = "0xCB2598", VA = "0xCB2598", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0xCB259C", Offset = "0xCB259C", VA = "0xCB259C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0xCB2650", Offset = "0xCB2650", VA = "0xCB2650", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0xCB2678", Offset = "0xCB2678", VA = "0xCB2678")]
		public DisconnectTest()
		{
		}
	}
	[Token(Token = "0x200071D")]
	[AddComponentMenu("Multiplayer/Tests/ICEEndOnNoConnectivityPINTest")]
	public class ICEEndOnNoConnectivityPINTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006B9")]
		public override string title
		{
			[Token(Token = "0x6002955")]
			[Address(RVA = "0xCB2688", Offset = "0xCB2688", VA = "0xCB2688", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0xCB26C8", Offset = "0xCB26C8", VA = "0xCB26C8", Slot = "25")]
		protected override void IceEnd(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0xCB27AC", Offset = "0xCB27AC", VA = "0xCB27AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0xCB28E0", Offset = "0xCB28E0", VA = "0xCB28E0", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0xCB28E4", Offset = "0xCB28E4", VA = "0xCB28E4")]
		public ICEEndOnNoConnectivityPINTest()
		{
		}
	}
	[Token(Token = "0x200071E")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnNoConnectivityInviteTest")]
	public class ICEShouldFailOnNoConnectivityInviteTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006BA")]
		public override string title
		{
			[Token(Token = "0x600295A")]
			[Address(RVA = "0xCB2904", Offset = "0xCB2904", VA = "0xCB2904", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600295B")]
		[Address(RVA = "0xCB2944", Offset = "0xCB2944", VA = "0xCB2944", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x600295C")]
		[Address(RVA = "0xCB29D8", Offset = "0xCB29D8", VA = "0xCB29D8")]
		public ICEShouldFailOnNoConnectivityInviteTest()
		{
		}
	}
	[Token(Token = "0x200071F")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnNoConnectivityPINTest")]
	public class ICEShouldFailOnNoConnectivityPINTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006BB")]
		public override string title
		{
			[Token(Token = "0x600295D")]
			[Address(RVA = "0xCB29E8", Offset = "0xCB29E8", VA = "0xCB29E8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600295E")]
		[Address(RVA = "0xCB2A28", Offset = "0xCB2A28", VA = "0xCB2A28", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x600295F")]
		[Address(RVA = "0xCB2AD4", Offset = "0xCB2AD4", VA = "0xCB2AD4")]
		public ICEShouldFailOnNoConnectivityPINTest()
		{
		}
	}
	[Token(Token = "0x2000720")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnNoConnectivityRankedTest")]
	public class ICEShouldFailOnNoConnectivityRankedTest : LobbyistTestICEShouldFailOnNoConnectivity
	{
		[Token(Token = "0x170006BC")]
		public override string title
		{
			[Token(Token = "0x6002960")]
			[Address(RVA = "0xCB2AE4", Offset = "0xCB2AE4", VA = "0xCB2AE4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0xCB2B24", Offset = "0xCB2B24", VA = "0xCB2B24", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0xCB2BDC", Offset = "0xCB2BDC", VA = "0xCB2BDC")]
		public ICEShouldFailOnNoConnectivityRankedTest()
		{
		}
	}
	[Token(Token = "0x2000721")]
	public abstract class LobbyistTestICEShouldFailOnNoConnectivity : LobbyistTest
	{
		[Token(Token = "0x4002722")]
		private const float MAX_ICE_DURATION = 12f;

		[Token(Token = "0x4002723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _simulateNoConnectivity;

		[Token(Token = "0x4002724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDuration;

		[Token(Token = "0x4002725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _firstClientConnected;

		[Token(Token = "0x170006BD")]
		public override float timeout
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0xCB2BEC", Offset = "0xCB2BEC", VA = "0xCB2BEC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002964")]
		[Address(RVA = "0xCB2BF4", Offset = "0xCB2BF4", VA = "0xCB2BF4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0xCB2858", Offset = "0xCB2858", VA = "0xCB2858", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002966")]
		[Address(RVA = "0xCB2CC0", Offset = "0xCB2CC0", VA = "0xCB2CC0", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002967")]
		[Address(RVA = "0xCB2D08", Offset = "0xCB2D08", VA = "0xCB2D08", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002968")]
		[Address(RVA = "0xCB2D34", Offset = "0xCB2D34", VA = "0xCB2D34", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0xCB28F4", Offset = "0xCB28F4", VA = "0xCB28F4")]
		protected LobbyistTestICEShouldFailOnNoConnectivity()
		{
		}
	}
	[Token(Token = "0x2000722")]
	[AddComponentMenu("Multiplayer/Tests/ICEBetterConnectionTest")]
	public class ICEBetterConnectionTest : LobbyistTest
	{
		[Token(Token = "0x4002726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _anyNewConnectionIsBetterBefore;

		[Token(Token = "0x4002727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _firstClientConnected;

		[Token(Token = "0x170006BE")]
		public override string title
		{
			[Token(Token = "0x600296A")]
			[Address(RVA = "0xCB2DBC", Offset = "0xCB2DBC", VA = "0xCB2DBC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006BF")]
		public override float timeout
		{
			[Token(Token = "0x600296B")]
			[Address(RVA = "0xCB2DFC", Offset = "0xCB2DFC", VA = "0xCB2DFC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600296C")]
		[Address(RVA = "0xCB2E58", Offset = "0xCB2E58", VA = "0xCB2E58", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0xCB2F04", Offset = "0xCB2F04", VA = "0xCB2F04", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x600296E")]
		[Address(RVA = "0xCB2FA8", Offset = "0xCB2FA8", VA = "0xCB2FA8", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x600296F")]
		[Address(RVA = "0xCB3008", Offset = "0xCB3008", VA = "0xCB3008", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002970")]
		[Address(RVA = "0xCB304C", Offset = "0xCB304C", VA = "0xCB304C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002971")]
		[Address(RVA = "0xCB30C4", Offset = "0xCB30C4", VA = "0xCB30C4")]
		public ICEBetterConnectionTest()
		{
		}
	}
	[Token(Token = "0x2000723")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientShouldSendAtleastOneSuccessfulTestTest")]
	public class ICEClientShouldSendAtleastOneSuccessfulTestTest : LobbyistTest
	{
		[Token(Token = "0x170006C0")]
		public override string title
		{
			[Token(Token = "0x6002972")]
			[Address(RVA = "0xCB30D4", Offset = "0xCB30D4", VA = "0xCB30D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C1")]
		public override float timeout
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0xCB3114", Offset = "0xCB3114", VA = "0xCB3114", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002974")]
		[Address(RVA = "0xCB3170", Offset = "0xCB3170", VA = "0xCB3170", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002975")]
		[Address(RVA = "0xCB31AC", Offset = "0xCB31AC", VA = "0xCB31AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0xCB325C", Offset = "0xCB325C", VA = "0xCB325C", Slot = "23")]
		protected override void OnRxSuccessfulTest(LobbyistClient client, ICEProcess ice, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0xCB3268", Offset = "0xCB3268", VA = "0xCB3268", Slot = "24")]
		protected override void OnRxTestsDone(LobbyistClient client, ICEProcess ice, AgentType type)
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0xCB3274", Offset = "0xCB3274", VA = "0xCB3274", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0xCB3280", Offset = "0xCB3280", VA = "0xCB3280", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0xCB328C", Offset = "0xCB328C", VA = "0xCB328C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0xCB3298", Offset = "0xCB3298", VA = "0xCB3298")]
		public ICEClientShouldSendAtleastOneSuccessfulTestTest()
		{
		}
	}
	[Token(Token = "0x2000724")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientShouldSendTestsDoneTest")]
	public class ICEClientShouldSendTestsDoneTest : LobbyistTest
	{
		[Token(Token = "0x170006C2")]
		public override string title
		{
			[Token(Token = "0x600297C")]
			[Address(RVA = "0xCB32A8", Offset = "0xCB32A8", VA = "0xCB32A8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C3")]
		public override float timeout
		{
			[Token(Token = "0x600297D")]
			[Address(RVA = "0xCB32E8", Offset = "0xCB32E8", VA = "0xCB32E8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600297E")]
		[Address(RVA = "0xCB3344", Offset = "0xCB3344", VA = "0xCB3344", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0xCB3380", Offset = "0xCB3380", VA = "0xCB3380", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002980")]
		[Address(RVA = "0xCB3430", Offset = "0xCB3430", VA = "0xCB3430", Slot = "24")]
		protected override void OnRxTestsDone(LobbyistClient client, ICEProcess ice, AgentType type)
		{
		}

		[Token(Token = "0x6002981")]
		[Address(RVA = "0xCB343C", Offset = "0xCB343C", VA = "0xCB343C", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002982")]
		[Address(RVA = "0xCB3448", Offset = "0xCB3448", VA = "0xCB3448", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002983")]
		[Address(RVA = "0xCB3454", Offset = "0xCB3454", VA = "0xCB3454", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0xCB3460", Offset = "0xCB3460", VA = "0xCB3460", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0xCB346C", Offset = "0xCB346C", VA = "0xCB346C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002986")]
		[Address(RVA = "0xCB3478", Offset = "0xCB3478", VA = "0xCB3478")]
		public ICEClientShouldSendTestsDoneTest()
		{
		}
	}
	[Token(Token = "0x2000725")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientUtpUdpGameClientAsClientTest")]
	public class ICEClientUtpUdpGameClientAsClientTest : LobbyistTest
	{
		[Token(Token = "0x4002728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceUtpHost;

		[Token(Token = "0x4002729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x400272A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly bool[] _clientsConnected;

		[Token(Token = "0x170006C4")]
		public override string title
		{
			[Token(Token = "0x6002987")]
			[Address(RVA = "0xCB3488", Offset = "0xCB3488", VA = "0xCB3488", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C5")]
		public override float timeout
		{
			[Token(Token = "0x6002988")]
			[Address(RVA = "0xCB34C8", Offset = "0xCB34C8", VA = "0xCB34C8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002989")]
		[Address(RVA = "0xCB3524", Offset = "0xCB3524", VA = "0xCB3524", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600298A")]
		[Address(RVA = "0xCB35EC", Offset = "0xCB35EC", VA = "0xCB35EC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x600298B")]
		[Address(RVA = "0xCB3690", Offset = "0xCB3690", VA = "0xCB3690", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x600298C")]
		[Address(RVA = "0xCB3784", Offset = "0xCB3784", VA = "0xCB3784", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0xCB380C", Offset = "0xCB380C", VA = "0xCB380C")]
		public ICEClientUtpUdpGameClientAsClientTest()
		{
		}
	}
	[Token(Token = "0x2000726")]
	[AddComponentMenu("Multiplayer/Tests/ICEClientUtpUdpGameClientAsHostTest")]
	public class ICEClientUtpUdpGameClientAsHostTest : LobbyistTest
	{
		[Token(Token = "0x400272B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceUtpHost;

		[Token(Token = "0x400272C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x170006C6")]
		public override string title
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0xCB3878", Offset = "0xCB3878", VA = "0xCB3878", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C7")]
		public override float timeout
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0xCB38B8", Offset = "0xCB38B8", VA = "0xCB38B8", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002990")]
		[Address(RVA = "0xCB3914", Offset = "0xCB3914", VA = "0xCB3914", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002991")]
		[Address(RVA = "0xCB39DC", Offset = "0xCB39DC", VA = "0xCB39DC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002992")]
		[Address(RVA = "0xCB3A80", Offset = "0xCB3A80", VA = "0xCB3A80", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002993")]
		[Address(RVA = "0xCB3A8C", Offset = "0xCB3A8C", VA = "0xCB3A8C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002994")]
		[Address(RVA = "0xCB3B14", Offset = "0xCB3B14", VA = "0xCB3B14")]
		public ICEClientUtpUdpGameClientAsHostTest()
		{
		}
	}
	[Token(Token = "0x2000727")]
	[AddComponentMenu("Multiplayer/Tests/ICEEndIceTest")]
	public class ICEEndIceTest : LobbyistTest
	{
		[Token(Token = "0x400272D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _iceEnded;

		[Token(Token = "0x170006C8")]
		public override string title
		{
			[Token(Token = "0x6002995")]
			[Address(RVA = "0xCB3B24", Offset = "0xCB3B24", VA = "0xCB3B24", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C9")]
		public override float timeout
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0xCB3B64", Offset = "0xCB3B64", VA = "0xCB3B64", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0xCB3BC0", Offset = "0xCB3BC0", VA = "0xCB3BC0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0xCB3BFC", Offset = "0xCB3BFC", VA = "0xCB3BFC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0xCB3CAC", Offset = "0xCB3CAC", VA = "0xCB3CAC", Slot = "25")]
		protected override void IceEnd(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0xCB3CF8", Offset = "0xCB3CF8", VA = "0xCB3CF8", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0xCB3D2C", Offset = "0xCB3D2C", VA = "0xCB3D2C")]
		public ICEEndIceTest()
		{
		}
	}
	[Token(Token = "0x2000728")]
	[AddComponentMenu("Multiplayer/Tests/ICEHostSkipEstablish")]
	public class ICEHostSkipEstablish : LobbyistTest
	{
		[Token(Token = "0x400272E")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x400272F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x4002730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _clientExtraTimeBefore;

		[Token(Token = "0x170006CA")]
		public override string title
		{
			[Token(Token = "0x600299C")]
			[Address(RVA = "0xCB3D3C", Offset = "0xCB3D3C", VA = "0xCB3D3C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006CB")]
		public override float timeout
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0xCB3D7C", Offset = "0xCB3D7C", VA = "0xCB3D7C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0xCB3D84", Offset = "0xCB3D84", VA = "0xCB3D84", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0xCB3E38", Offset = "0xCB3E38", VA = "0xCB3E38", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0xCB3EE8", Offset = "0xCB3EE8", VA = "0xCB3EE8", Slot = "19")]
		protected override void OnQueue(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0xCB41CC", Offset = "0xCB41CC", VA = "0xCB41CC", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0xCB424C", Offset = "0xCB424C", VA = "0xCB424C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0xCB4258", Offset = "0xCB4258", VA = "0xCB4258", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0xCB4278", Offset = "0xCB4278", VA = "0xCB4278", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x60029A5")]
		[Address(RVA = "0xCB42F8", Offset = "0xCB42F8", VA = "0xCB42F8")]
		public ICEHostSkipEstablish()
		{
		}
	}
	[Token(Token = "0x2000729")]
	[AddComponentMenu("Multiplayer/Tests/ICEHostStopRespondingTest")]
	public class ICEHostStopRespondingTest : LobbyistTest
	{
		[Token(Token = "0x200072A")]
		[CompilerGenerated]
		private sealed class <DisposeIceOfHostAfterCo>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002735")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002736")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002737")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float s;

			[Token(Token = "0x4002738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ICEHostStopRespondingTest <>4__this;

			[Token(Token = "0x4002739")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x170006CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029B4")]
				[Address(RVA = "0xCB492C", Offset = "0xCB492C", VA = "0xCB492C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029B6")]
				[Address(RVA = "0xCB4974", Offset = "0xCB4974", VA = "0xCB4974", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029B1")]
			[Address(RVA = "0xCB45E4", Offset = "0xCB45E4", VA = "0xCB45E4")]
			[DebuggerHidden]
			public <DisposeIceOfHostAfterCo>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60029B2")]
			[Address(RVA = "0xCB46D0", Offset = "0xCB46D0", VA = "0xCB46D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029B3")]
			[Address(RVA = "0xCB46D4", Offset = "0xCB46D4", VA = "0xCB46D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B5")]
			[Address(RVA = "0xCB4934", Offset = "0xCB4934", VA = "0xCB4934", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002731")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x4002732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x4002733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _clientExtraIceDurationBefore;

		[Token(Token = "0x4002734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _matchConnecting;

		[Token(Token = "0x170006CC")]
		public override string title
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0xCB4308", Offset = "0xCB4308", VA = "0xCB4308", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006CD")]
		public override float timeout
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0xCB4348", Offset = "0xCB4348", VA = "0xCB4348", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029A8")]
		[Address(RVA = "0xCB4350", Offset = "0xCB4350", VA = "0xCB4350", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029A9")]
		[Address(RVA = "0xCB4408", Offset = "0xCB4408", VA = "0xCB4408", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029AA")]
		[Address(RVA = "0xCB4558", Offset = "0xCB4558", VA = "0xCB4558", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0xCB44D4", Offset = "0xCB44D4", VA = "0xCB44D4")]
		[IteratorStateMachine(typeof(<DisposeIceOfHostAfterCo>d__11))]
		private IEnumerator DisposeIceOfHostAfterCo(float s)
		{
			return null;
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0xCB460C", Offset = "0xCB460C", VA = "0xCB460C", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0xCB4618", Offset = "0xCB4618", VA = "0xCB4618", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0xCB4638", Offset = "0xCB4638", VA = "0xCB4638", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0xCB46B8", Offset = "0xCB46B8", VA = "0xCB46B8")]
		public ICEHostStopRespondingTest()
		{
		}
	}
	[Token(Token = "0x200072B")]
	[AddComponentMenu("Multiplayer/Tests/ICEInviteTest")]
	public class ICEInviteTest : LobbyistTest
	{
		[Token(Token = "0x170006D0")]
		public override string title
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0xCB497C", Offset = "0xCB497C", VA = "0xCB497C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D1")]
		public override float timeout
		{
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0xCB49BC", Offset = "0xCB49BC", VA = "0xCB49BC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0xCB49C4", Offset = "0xCB49C4", VA = "0xCB49C4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0xCB4A00", Offset = "0xCB4A00", VA = "0xCB4A00", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0xCB4A8C", Offset = "0xCB4A8C", VA = "0xCB4A8C", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0xCB4B80", Offset = "0xCB4B80", VA = "0xCB4B80", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0xCB4C1C", Offset = "0xCB4C1C", VA = "0xCB4C1C")]
		public ICEInviteTest()
		{
		}
	}
	[Token(Token = "0x200072C")]
	[AddComponentMenu("Multiplayer/Tests/ICEPINTest")]
	public class ICEPINTest : LobbyistTest
	{
		[Token(Token = "0x170006D2")]
		public override string title
		{
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0xCB4C2C", Offset = "0xCB4C2C", VA = "0xCB4C2C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D3")]
		public override float timeout
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0xCB4C6C", Offset = "0xCB4C6C", VA = "0xCB4C6C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0xCB4C74", Offset = "0xCB4C74", VA = "0xCB4C74", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0xCB4CB0", Offset = "0xCB4CB0", VA = "0xCB4CB0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0xCB4D60", Offset = "0xCB4D60", VA = "0xCB4D60", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0xCB4E14", Offset = "0xCB4E14", VA = "0xCB4E14", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0xCB4E3C", Offset = "0xCB4E3C", VA = "0xCB4E3C")]
		public ICEPINTest()
		{
		}
	}
	[Token(Token = "0x200072D")]
	[AddComponentMenu("Multiplayer/Tests/ICERankedTest")]
	public class ICERankedTest : LobbyistTest
	{
		[Token(Token = "0x170006D4")]
		public override string title
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0xCB4E4C", Offset = "0xCB4E4C", VA = "0xCB4E4C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D5")]
		public override float timeout
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0xCB4E8C", Offset = "0xCB4E8C", VA = "0xCB4E8C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0xCB4E94", Offset = "0xCB4E94", VA = "0xCB4E94", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0xCB4ED0", Offset = "0xCB4ED0", VA = "0xCB4ED0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0xCB4F80", Offset = "0xCB4F80", VA = "0xCB4F80", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0xCB5074", Offset = "0xCB5074", VA = "0xCB5074", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0xCB5110", Offset = "0xCB5110", VA = "0xCB5110")]
		public ICERankedTest()
		{
		}
	}
	[Token(Token = "0x200072E")]
	[AddComponentMenu("Multiplayer/Tests/ICERankedWhenBackToQueueTest")]
	public class ICERankedWhenBackToQueueTest : LobbyistTest
	{
		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _firstConnection;

		[Token(Token = "0x170006D6")]
		public override string title
		{
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0xCB5120", Offset = "0xCB5120", VA = "0xCB5120", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D7")]
		public override float timeout
		{
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0xCB5160", Offset = "0xCB5160", VA = "0xCB5160", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0xCB5168", Offset = "0xCB5168", VA = "0xCB5168", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0xCB51A4", Offset = "0xCB51A4", VA = "0xCB51A4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0xCB5254", Offset = "0xCB5254", VA = "0xCB5254", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0xCB5384", Offset = "0xCB5384", VA = "0xCB5384", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0xCB5388", Offset = "0xCB5388", VA = "0xCB5388", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0xCB54E0", Offset = "0xCB54E0", VA = "0xCB54E0", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0xCB557C", Offset = "0xCB557C", VA = "0xCB557C")]
		public ICERankedWhenBackToQueueTest()
		{
		}
	}
	[Token(Token = "0x200072F")]
	[AddComponentMenu("Multiplayer/Tests/ICERelayQosClientAsHostTest")]
	public class ICERelayQosClientAsHostTest : LobbyistTest
	{
		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceRelayHost;

		[Token(Token = "0x170006D8")]
		public override string title
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0xCB558C", Offset = "0xCB558C", VA = "0xCB558C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D9")]
		public override float timeout
		{
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0xCB55CC", Offset = "0xCB55CC", VA = "0xCB55CC", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0xCB5628", Offset = "0xCB5628", VA = "0xCB5628", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0xCB56F0", Offset = "0xCB56F0", VA = "0xCB56F0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029D9")]
		[Address(RVA = "0xCB5794", Offset = "0xCB5794", VA = "0xCB5794", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029DA")]
		[Address(RVA = "0xCB57A0", Offset = "0xCB57A0", VA = "0xCB57A0", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029DB")]
		[Address(RVA = "0xCB57AC", Offset = "0xCB57AC", VA = "0xCB57AC", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x60029DC")]
		[Address(RVA = "0xCB57B8", Offset = "0xCB57B8", VA = "0xCB57B8", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0xCB5840", Offset = "0xCB5840", VA = "0xCB5840")]
		public ICERelayQosClientAsHostTest()
		{
		}
	}
	[Token(Token = "0x2000730")]
	[AddComponentMenu("Multiplayer/Tests/ICERelayQosHostAsHostTest")]
	public class ICERelayQosHostAsHostTest : LobbyistTest
	{
		[Token(Token = "0x400273D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x400273E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ICESettings.ICEDebugSettings.WhoIsHost _forceRelayHost;

		[Token(Token = "0x170006DA")]
		public override string title
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xCB5850", Offset = "0xCB5850", VA = "0xCB5850", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DB")]
		public override float timeout
		{
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0xCB5890", Offset = "0xCB5890", VA = "0xCB5890", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0xCB58EC", Offset = "0xCB58EC", VA = "0xCB58EC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0xCB59B4", Offset = "0xCB59B4", VA = "0xCB59B4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0xCB5A58", Offset = "0xCB5A58", VA = "0xCB5A58", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0xCB5A64", Offset = "0xCB5A64", VA = "0xCB5A64", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0xCB5A70", Offset = "0xCB5A70", VA = "0xCB5A70", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0xCB5A7C", Offset = "0xCB5A7C", VA = "0xCB5A7C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0xCB5B04", Offset = "0xCB5B04", VA = "0xCB5B04")]
		public ICERelayQosHostAsHostTest()
		{
		}
	}
	[Token(Token = "0x2000731")]
	[AddComponentMenu("Multiplayer/Tests/ICERelayQosTest")]
	public class ICERelayQosTest : LobbyistTest
	{
		[Token(Token = "0x400273F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x170006DC")]
		public override string title
		{
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0xCB5B14", Offset = "0xCB5B14", VA = "0xCB5B14", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DD")]
		public override float timeout
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0xCB5B54", Offset = "0xCB5B54", VA = "0xCB5B54", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0xCB5BB0", Offset = "0xCB5BB0", VA = "0xCB5BB0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029EA")]
		[Address(RVA = "0xCB5C48", Offset = "0xCB5C48", VA = "0xCB5C48", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029EB")]
		[Address(RVA = "0xCB5CEC", Offset = "0xCB5CEC", VA = "0xCB5CEC", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029EC")]
		[Address(RVA = "0xCB5CF8", Offset = "0xCB5CF8", VA = "0xCB5CF8", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029ED")]
		[Address(RVA = "0xCB5D04", Offset = "0xCB5D04", VA = "0xCB5D04", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x60029EE")]
		[Address(RVA = "0xCB5D10", Offset = "0xCB5D10", VA = "0xCB5D10", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x60029EF")]
		[Address(RVA = "0xCB5D80", Offset = "0xCB5D80", VA = "0xCB5D80")]
		public ICERelayQosTest()
		{
		}
	}
	[Token(Token = "0x2000732")]
	[AddComponentMenu("Multiplayer/Tests/ICEShouldFailOnFastTimeoutTest")]
	public class ICEShouldFailOnFastTimeoutTest : LobbyistTest
	{
		[Token(Token = "0x4002740")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x4002741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x4002742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _simulateNoConnectivityBefore;

		[Token(Token = "0x4002743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool _firstClientUIceFail;

		[Token(Token = "0x170006DE")]
		public override string title
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xCB5D90", Offset = "0xCB5D90", VA = "0xCB5D90", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DF")]
		public override float timeout
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xCB5DD0", Offset = "0xCB5DD0", VA = "0xCB5DD0", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0xCB5DD8", Offset = "0xCB5DD8", VA = "0xCB5DD8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0xCB5EA8", Offset = "0xCB5EA8", VA = "0xCB5EA8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0xCB5F4C", Offset = "0xCB5F4C", VA = "0xCB5F4C", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0xCB5F84", Offset = "0xCB5F84", VA = "0xCB5F84", Slot = "21")]
		protected override void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0xCB5F90", Offset = "0xCB5F90", VA = "0xCB5F90", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0xCB6018", Offset = "0xCB6018", VA = "0xCB6018")]
		public ICEShouldFailOnFastTimeoutTest()
		{
		}
	}
	[Token(Token = "0x2000733")]
	[AddComponentMenu("Multiplayer/Tests/ICETransportTest")]
	public class ICETransportTest : LobbyistTest
	{
		[Token(Token = "0x170006E0")]
		public override string title
		{
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xCB6028", Offset = "0xCB6028", VA = "0xCB6028", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E1")]
		public override float timeout
		{
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0xCB6068", Offset = "0xCB6068", VA = "0xCB6068", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0xCB6070", Offset = "0xCB6070", VA = "0xCB6070", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0xCB60AC", Offset = "0xCB60AC", VA = "0xCB60AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0xCB6138", Offset = "0xCB6138", VA = "0xCB6138", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0xCB6424", Offset = "0xCB6424", VA = "0xCB6424", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0xCB64C0", Offset = "0xCB64C0", VA = "0xCB64C0")]
		public ICETransportTest()
		{
		}
	}
	[Token(Token = "0x2000734")]
	[AddComponentMenu("Multiplayer/Tests/ICEUtpUdpWithoutReflexiveTest")]
	public class ICEUtpUdpWithoutReflexiveTest : LobbyistTest
	{
		[Token(Token = "0x4002744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private ICESettings.ICEDebugSettings.UdpAddressesToUse _udpAddressesToUse;

		[Token(Token = "0x4002745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ConnectionsType _connectionsType;

		[Token(Token = "0x170006E2")]
		public override string title
		{
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0xCB651C", Offset = "0xCB651C", VA = "0xCB651C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0xCB655C", Offset = "0xCB655C", VA = "0xCB655C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A02")]
		[Address(RVA = "0xCB6624", Offset = "0xCB6624", VA = "0xCB6624", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0xCB66D4", Offset = "0xCB66D4", VA = "0xCB66D4", Slot = "27")]
		protected override void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A04")]
		[Address(RVA = "0xCB6798", Offset = "0xCB6798", VA = "0xCB6798", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A05")]
		[Address(RVA = "0xCB6820", Offset = "0xCB6820", VA = "0xCB6820")]
		public ICEUtpUdpWithoutReflexiveTest()
		{
		}
	}
	[Token(Token = "0x2000735")]
	public abstract class LobbyistTest : Test
	{
		[Token(Token = "0x2000737")]
		[CompilerGenerated]
		private sealed class <DefferFrame>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400274D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400274E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400274F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action action;

			[Token(Token = "0x170006E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A39")]
				[Address(RVA = "0xCB8A7C", Offset = "0xCB8A7C", VA = "0xCB8A7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170006E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A3B")]
				[Address(RVA = "0xCB8AC4", Offset = "0xCB8AC4", VA = "0xCB8AC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xCB7448", Offset = "0xCB7448", VA = "0xCB7448")]
			[DebuggerHidden]
			public <DefferFrame>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A37")]
			[Address(RVA = "0xCB8A0C", Offset = "0xCB8A0C", VA = "0xCB8A0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xCB8A10", Offset = "0xCB8A10", VA = "0xCB8A10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0xCB8A84", Offset = "0xCB8A84", VA = "0xCB8A84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool _initialized;

		[Token(Token = "0x4002747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<LobbyistClient> _clients;

		[Token(Token = "0x4002748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Dictionary<LobbyistClient, ICEProcess> _iceProcesses;

		[Token(Token = "0x4002749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Dictionary<LobbyistClient, P2PNode> _p2pNodes;

		[Token(Token = "0x400274A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _allConnected;

		[Token(Token = "0x170006E3")]
		protected LobbyistTestsConfig config
		{
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0xCB6830", Offset = "0xCB6830", VA = "0xCB6830")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006E4")]
		public override float timeout
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0xCB6878", Offset = "0xCB6878", VA = "0xCB6878", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A08")]
		[Address(RVA = "0xCB6880", Offset = "0xCB6880", VA = "0xCB6880")]
		private void Init()
		{
		}

		[Token(Token = "0x6002A09")]
		[Address(RVA = "0xCAFC48", Offset = "0xCAFC48", VA = "0xCAFC48")]
		protected void AllocateClients(int numClients, bool createNew = false)
		{
		}

		[Token(Token = "0x6002A0A")]
		[Address(RVA = "0xCB69B0", Offset = "0xCB69B0", VA = "0xCB69B0")]
		protected void AllocateClient(int index, [Optional] string multiplayer_version, bool createNew = false)
		{
		}

		[Token(Token = "0x6002A0B")]
		[Address(RVA = "0xCB6A5C", Offset = "0xCB6A5C", VA = "0xCB6A5C")]
		protected void AllocateClient(string host, int port, string playerID, [Optional] string multiplayer_version, bool createNew = false)
		{
		}

		[Token(Token = "0x6002A0C")]
		[Address(RVA = "0xCB7420", Offset = "0xCB7420", VA = "0xCB7420", Slot = "11")]
		protected virtual void ClientConnect(LobbyistClient client, string host, int port, string playerID, string multiplayer_version)
		{
		}

		[Token(Token = "0x6002A0D")]
		[Address(RVA = "0xCB73AC", Offset = "0xCB73AC", VA = "0xCB73AC")]
		[IteratorStateMachine(typeof(<DefferFrame>d__14))]
		private IEnumerator DefferFrame(Action action)
		{
			return null;
		}

		[Token(Token = "0x6002A0E")]
		[Address(RVA = "0xCB7470", Offset = "0xCB7470", VA = "0xCB7470")]
		private void UnhookClient(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A0F")]
		[Address(RVA = "0xCB7938", Offset = "0xCB7938", VA = "0xCB7938", Slot = "12")]
		protected virtual void RecycleClients()
		{
		}

		[Token(Token = "0x6002A10")]
		[Address(RVA = "0xCB7B24", Offset = "0xCB7B24", VA = "0xCB7B24")]
		protected void RecycleClient(int i)
		{
		}

		[Token(Token = "0x6002A11")]
		[Address(RVA = "0xCB2308", Offset = "0xCB2308", VA = "0xCB2308")]
		protected void DestroyClient(int i)
		{
		}

		[Token(Token = "0x6002A12")]
		[Address(RVA = "0xCB7F44", Offset = "0xCB7F44", VA = "0xCB7F44", Slot = "13")]
		protected virtual void onConnectionToServerFailed(LobbyistClient client, string reason)
		{
		}

		[Token(Token = "0x6002A13")]
		[Address(RVA = "0xCB7F50", Offset = "0xCB7F50", VA = "0xCB7F50", Slot = "14")]
		protected virtual void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0xCB80D0", Offset = "0xCB80D0", VA = "0xCB80D0", Slot = "15")]
		protected virtual void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0xCB8138", Offset = "0xCB8138", VA = "0xCB8138", Slot = "16")]
		protected virtual void OnDisconnectedFromServer(LobbyistClient client, string reason)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0xCB8144", Offset = "0xCB8144", VA = "0xCB8144", Slot = "17")]
		protected virtual void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0xCB4574", Offset = "0xCB4574", VA = "0xCB4574", Slot = "18")]
		protected virtual void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0xCB8150", Offset = "0xCB8150", VA = "0xCB8150", Slot = "19")]
		protected virtual void OnQueue(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0xCB3F98", Offset = "0xCB3F98", VA = "0xCB3F98")]
		protected void SetupICE(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0xCB21E8", Offset = "0xCB21E8", VA = "0xCB21E8")]
		protected void EstablishICE(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0xCB1854", Offset = "0xCB1854", VA = "0xCB1854")]
		protected void CleanICE(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0xCB7C64", Offset = "0xCB7C64", VA = "0xCB7C64")]
		protected void CleanUdpUtp(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0xCB8154", Offset = "0xCB8154", VA = "0xCB8154")]
		private LobbyistClient FindClientByIce(ICEProcess ice)
		{
			return null;
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0xCB83C4", Offset = "0xCB83C4", VA = "0xCB83C4")]
		private void OnICEConnectionFailed(ICEProcess ice)
		{
		}

		[Token(Token = "0x6002A1F")]
		[Address(RVA = "0xCB2FE8", Offset = "0xCB2FE8", VA = "0xCB2FE8", Slot = "20")]
		protected virtual void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A20")]
		[Address(RVA = "0xCB83EC", Offset = "0xCB83EC", VA = "0xCB83EC")]
		private void OnFirstIceConnected(ICEProcess ice, NodeStatus status)
		{
		}

		[Token(Token = "0x6002A21")]
		[Address(RVA = "0xCB8484", Offset = "0xCB8484", VA = "0xCB8484")]
		private void OnICEBetterConnected(ICEProcess ice, NodeStatus status)
		{
		}

		[Token(Token = "0x6002A22")]
		[Address(RVA = "0xCB2D30", Offset = "0xCB2D30", VA = "0xCB2D30", Slot = "21")]
		protected virtual void OnICEBetterConnected(LobbyistClient client, IceAgent agent, P2PNode node)
		{
		}

		[Token(Token = "0x6002A23")]
		[Address(RVA = "0xCB84C4", Offset = "0xCB84C4", VA = "0xCB84C4", Slot = "22")]
		protected virtual void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002A24")]
		[Address(RVA = "0xCB8528", Offset = "0xCB8528", VA = "0xCB8528")]
		private void OnRxHostAddresses(LobbyistClient client, string[] addresses)
		{
		}

		[Token(Token = "0x6002A25")]
		[Address(RVA = "0xCB85B0", Offset = "0xCB85B0", VA = "0xCB85B0")]
		private void OnRxReflexiveAddress(LobbyistClient client, ReflexiveAddress[] addresses)
		{
		}

		[Token(Token = "0x6002A26")]
		[Address(RVA = "0xCB8638", Offset = "0xCB8638", VA = "0xCB8638")]
		private void OnRxRelayedAddresses(LobbyistClient client, string[] addresses)
		{
		}

		[Token(Token = "0x6002A27")]
		[Address(RVA = "0xCB86C0", Offset = "0xCB86C0", VA = "0xCB86C0")]
		private void OnRxSuccessfulTest(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A28")]
		[Address(RVA = "0xCB87A0", Offset = "0xCB87A0", VA = "0xCB87A0", Slot = "23")]
		protected virtual void OnRxSuccessfulTest(LobbyistClient client, ICEProcess ice, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A29")]
		[Address(RVA = "0xCB87A4", Offset = "0xCB87A4", VA = "0xCB87A4")]
		private void OnRxTestsDone(LobbyistClient client, AgentType type)
		{
		}

		[Token(Token = "0x6002A2A")]
		[Address(RVA = "0xCB884C", Offset = "0xCB884C", VA = "0xCB884C", Slot = "24")]
		protected virtual void OnRxTestsDone(LobbyistClient client, ICEProcess ice, AgentType type)
		{
		}

		[Token(Token = "0x6002A2B")]
		[Address(RVA = "0xCB8850", Offset = "0xCB8850", VA = "0xCB8850")]
		private void OnUdpUtpChosenAddress(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A2C")]
		[Address(RVA = "0xCB88E8", Offset = "0xCB88E8", VA = "0xCB88E8")]
		private void OnEstablished(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A2D")]
		[Address(RVA = "0xCB8980", Offset = "0xCB8980", VA = "0xCB8980")]
		private void OnEndIce(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A2E")]
		[Address(RVA = "0xCB2714", Offset = "0xCB2714", VA = "0xCB2714", Slot = "25")]
		protected virtual void IceEnd(LobbyistClient client, AgentType type, object data)
		{
		}

		[Token(Token = "0x6002A2F")]
		[Address(RVA = "0xCB89D8", Offset = "0xCB89D8", VA = "0xCB89D8", Slot = "26")]
		protected virtual void OnMatchAccepted(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A30")]
		[Address(RVA = "0xCB89DC", Offset = "0xCB89DC", VA = "0xCB89DC", Slot = "27")]
		protected virtual void OnMatchConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A31")]
		[Address(RVA = "0xCB5434", Offset = "0xCB5434", VA = "0xCB5434", Slot = "28")]
		protected virtual void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A32")]
		[Address(RVA = "0xCB0BC4", Offset = "0xCB0BC4", VA = "0xCB0BC4", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002A33")]
		[Address(RVA = "0xCAFEC4", Offset = "0xCAFEC4", VA = "0xCAFEC4")]
		protected LobbyistTest()
		{
		}
	}
	[Token(Token = "0x200073A")]
	public class LobbyistTestsPool : MonoBehaviour
	{
		[Token(Token = "0x4002753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool reuseClients;

		[Token(Token = "0x4002754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float chanceOfNoReuse;

		[Token(Token = "0x4002755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LobbyistTestsPool inst;

		[Token(Token = "0x4002756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, LobbyistClient> _recycledClientsByPlayerID;

		[Token(Token = "0x4002757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _container;

		[Token(Token = "0x4002758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int _clientId;

		[Token(Token = "0x6002A41")]
		[Address(RVA = "0xCB8BF8", Offset = "0xCB8BF8", VA = "0xCB8BF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002A42")]
		[Address(RVA = "0xCB71D4", Offset = "0xCB71D4", VA = "0xCB71D4")]
		public LobbyistClient AllocateClient(string playerID, bool createNew)
		{
			return null;
		}

		[Token(Token = "0x6002A43")]
		[Address(RVA = "0xCB7D60", Offset = "0xCB7D60", VA = "0xCB7D60")]
		public void RecycleClient(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A44")]
		[Address(RVA = "0xCB7EA4", Offset = "0xCB7EA4", VA = "0xCB7EA4")]
		public void DestroyClient(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A45")]
		[Address(RVA = "0xCB8CC8", Offset = "0xCB8CC8", VA = "0xCB8CC8")]
		public void OnTestingDone()
		{
		}

		[Token(Token = "0x6002A46")]
		[Address(RVA = "0xCB8E8C", Offset = "0xCB8E8C", VA = "0xCB8E8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002A47")]
		[Address(RVA = "0xCB8ED4", Offset = "0xCB8ED4", VA = "0xCB8ED4")]
		public LobbyistTestsPool()
		{
		}
	}
	[Token(Token = "0x200073B")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingAnyWhenOnlyCoOpTest")]
	public class MatchMakingAnyWhenOnlyCoOpTest : LobbyistTest
	{
		[Token(Token = "0x170006E7")]
		public override string title
		{
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xCB8EF0", Offset = "0xCB8EF0", VA = "0xCB8EF0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A49")]
		[Address(RVA = "0xCB8F30", Offset = "0xCB8F30", VA = "0xCB8F30", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A4A")]
		[Address(RVA = "0xCB8F6C", Offset = "0xCB8F6C", VA = "0xCB8F6C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A4B")]
		[Address(RVA = "0xCB9010", Offset = "0xCB9010", VA = "0xCB9010", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A4C")]
		[Address(RVA = "0xCB90B4", Offset = "0xCB90B4", VA = "0xCB90B4", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A4D")]
		[Address(RVA = "0xCB9150", Offset = "0xCB9150", VA = "0xCB9150")]
		public MatchMakingAnyWhenOnlyCoOpTest()
		{
		}
	}
	[Token(Token = "0x200073C")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingAnyWhenVersusIsFairTest")]
	public class MatchMakingAnyWhenVersusIsFairTest : LobbyistTest
	{
		[Token(Token = "0x170006E8")]
		public override string title
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xCB9160", Offset = "0xCB9160", VA = "0xCB9160", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A4F")]
		[Address(RVA = "0xCB91A0", Offset = "0xCB91A0", VA = "0xCB91A0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A50")]
		[Address(RVA = "0xCB91DC", Offset = "0xCB91DC", VA = "0xCB91DC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A51")]
		[Address(RVA = "0xCB92C0", Offset = "0xCB92C0", VA = "0xCB92C0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0xCB9364", Offset = "0xCB9364", VA = "0xCB9364", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0xCB9420", Offset = "0xCB9420", VA = "0xCB9420")]
		public MatchMakingAnyWhenVersusIsFairTest()
		{
		}
	}
	[Token(Token = "0x200073D")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingAnyWhenVersusIsUnfairTest")]
	public class MatchMakingAnyWhenVersusIsUnfairTest : LobbyistTest
	{
		[Token(Token = "0x170006E9")]
		public override string title
		{
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xCB9430", Offset = "0xCB9430", VA = "0xCB9430", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0xCB9470", Offset = "0xCB9470", VA = "0xCB9470", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0xCB94AC", Offset = "0xCB94AC", VA = "0xCB94AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0xCB9590", Offset = "0xCB9590", VA = "0xCB9590", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0xCB9634", Offset = "0xCB9634", VA = "0xCB9634", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0xCB96F0", Offset = "0xCB96F0", VA = "0xCB96F0")]
		public MatchMakingAnyWhenVersusIsUnfairTest()
		{
		}
	}
	[Token(Token = "0x200073E")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingBarelyFairTest")]
	public class MatchMakingBarelyFairTest : LobbyistTest
	{
		[Token(Token = "0x170006EA")]
		public override string title
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0xCB9700", Offset = "0xCB9700", VA = "0xCB9700", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A5B")]
		[Address(RVA = "0xCB9740", Offset = "0xCB9740", VA = "0xCB9740", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A5C")]
		[Address(RVA = "0xCB977C", Offset = "0xCB977C", VA = "0xCB977C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A5D")]
		[Address(RVA = "0xCB9824", Offset = "0xCB9824", VA = "0xCB9824", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A5E")]
		[Address(RVA = "0xCB98C8", Offset = "0xCB98C8", VA = "0xCB98C8", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0xCB9964", Offset = "0xCB9964", VA = "0xCB9964")]
		public MatchMakingBarelyFairTest()
		{
		}
	}
	[Token(Token = "0x200073F")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingPickFiftyPercentWinProbabilityTest")]
	public class MatchMakingPickFiftyPercentWinProbabilityTest : LobbyistTest
	{
		[Token(Token = "0x170006EB")]
		public override string title
		{
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0xCB9974", Offset = "0xCB9974", VA = "0xCB9974", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EC")]
		public override float timeout
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0xCB9B08", Offset = "0xCB9B08", VA = "0xCB9B08", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A61")]
		[Address(RVA = "0xCB99B4", Offset = "0xCB99B4", VA = "0xCB99B4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A62")]
		[Address(RVA = "0xCB99F0", Offset = "0xCB99F0", VA = "0xCB99F0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A64")]
		[Address(RVA = "0xCB9B10", Offset = "0xCB9B10", VA = "0xCB9B10", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0xCB9BB4", Offset = "0xCB9BB4", VA = "0xCB9BB4", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0xCB9C90", Offset = "0xCB9C90", VA = "0xCB9C90")]
		public MatchMakingPickFiftyPercentWinProbabilityTest()
		{
		}
	}
	[Token(Token = "0x2000740")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingSeniorityTest")]
	public class MatchMakingSeniorityTest : LobbyistTest
	{
		[Token(Token = "0x170006ED")]
		public override string title
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0xCB9CA0", Offset = "0xCB9CA0", VA = "0xCB9CA0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A68")]
		[Address(RVA = "0xCB9CE0", Offset = "0xCB9CE0", VA = "0xCB9CE0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0xCB9D1C", Offset = "0xCB9D1C", VA = "0xCB9D1C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A6A")]
		[Address(RVA = "0xCB9E1C", Offset = "0xCB9E1C", VA = "0xCB9E1C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0xCB9FD8", Offset = "0xCB9FD8", VA = "0xCB9FD8", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0xCBA05C", Offset = "0xCBA05C", VA = "0xCBA05C", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0xCBA118", Offset = "0xCBA118", VA = "0xCBA118")]
		public MatchMakingSeniorityTest()
		{
		}
	}
	[Token(Token = "0x2000741")]
	[AddComponentMenu("Multiplayer/Tests/MatchMakingUnfairTest")]
	public class MatchMakingUnfairTest : LobbyistTest
	{
		[Token(Token = "0x170006EE")]
		public override string title
		{
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0xCBA128", Offset = "0xCBA128", VA = "0xCBA128", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006EF")]
		public override float timeout
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xCBA24C", Offset = "0xCBA24C", VA = "0xCBA24C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0xCBA168", Offset = "0xCBA168", VA = "0xCBA168", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A70")]
		[Address(RVA = "0xCBA1A4", Offset = "0xCBA1A4", VA = "0xCBA1A4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A72")]
		[Address(RVA = "0xCBA254", Offset = "0xCBA254", VA = "0xCBA254", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0xCBA260", Offset = "0xCBA260", VA = "0xCBA260", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0xCBA300", Offset = "0xCBA300", VA = "0xCBA300")]
		public MatchMakingUnfairTest()
		{
		}
	}
	[Token(Token = "0x2000742")]
	[AddComponentMenu("Multiplayer/Tests/NativePlatformIsTheSameOnConnectingTest")]
	public class NativePlatformIsTheSameOnConnectingTest : LobbyistTest
	{
		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _oneClientAlreadyConnected;

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0xCBA310", Offset = "0xCBA310", VA = "0xCBA310", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A76")]
		[Address(RVA = "0xCBA350", Offset = "0xCBA350", VA = "0xCBA350", Slot = "11")]
		protected override void ClientConnect(LobbyistClient client, string host, int port, string playerID, string multiplayer_version)
		{
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0xCBA518", Offset = "0xCBA518", VA = "0xCBA518", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A78")]
		[Address(RVA = "0xCBA5BC", Offset = "0xCBA5BC", VA = "0xCBA5BC", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0xCBA6BC", Offset = "0xCBA6BC", VA = "0xCBA6BC")]
		public NativePlatformIsTheSameOnConnectingTest()
		{
		}
	}
	[Token(Token = "0x2000743")]
	[AddComponentMenu("Multiplayer/Tests/BusyWhenInvitedTest")]
	public class BusyWhenInvitedTest : LobbyistTest
	{
		[Token(Token = "0x170006F0")]
		public override string title
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0xCBA6CC", Offset = "0xCBA6CC", VA = "0xCBA6CC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0xCBA70C", Offset = "0xCBA70C", VA = "0xCBA70C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0xCBA748", Offset = "0xCBA748", VA = "0xCBA748", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0xCBA82C", Offset = "0xCBA82C", VA = "0xCBA82C", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0xCBA8E0", Offset = "0xCBA8E0", VA = "0xCBA8E0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0xCBA994", Offset = "0xCBA994", VA = "0xCBA994", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0xCBAA30", Offset = "0xCBAA30", VA = "0xCBAA30")]
		public BusyWhenInvitedTest()
		{
		}
	}
	[Token(Token = "0x2000744")]
	[AddComponentMenu("Multiplayer/Tests/BusyWhenInvitingTest")]
	public class BusyWhenInvitingTest : LobbyistTest
	{
		[Token(Token = "0x170006F1")]
		public override string title
		{
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xCBAA40", Offset = "0xCBAA40", VA = "0xCBAA40", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0xCBAA80", Offset = "0xCBAA80", VA = "0xCBAA80", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0xCBAABC", Offset = "0xCBAABC", VA = "0xCBAABC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0xCBABA0", Offset = "0xCBABA0", VA = "0xCBABA0", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0xCBAC54", Offset = "0xCBAC54", VA = "0xCBAC54", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0xCBAD08", Offset = "0xCBAD08", VA = "0xCBAD08", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0xCBADA4", Offset = "0xCBADA4", VA = "0xCBADA4")]
		public BusyWhenInvitingTest()
		{
		}
	}
	[Token(Token = "0x2000745")]
	[AddComponentMenu("Multiplayer/Tests/InviteCoOpTest")]
	public class InviteCoOpTest : LobbyistTest
	{
		[Token(Token = "0x170006F2")]
		public override string title
		{
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0xCBADB4", Offset = "0xCBADB4", VA = "0xCBADB4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A89")]
		[Address(RVA = "0xCBADF4", Offset = "0xCBADF4", VA = "0xCBADF4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0xCBAE30", Offset = "0xCBAE30", VA = "0xCBAE30", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A8B")]
		[Address(RVA = "0xCBAEBC", Offset = "0xCBAEBC", VA = "0xCBAEBC", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0xCBAF60", Offset = "0xCBAF60", VA = "0xCBAF60", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0xCBAFFC", Offset = "0xCBAFFC", VA = "0xCBAFFC")]
		public InviteCoOpTest()
		{
		}
	}
	[Token(Token = "0x2000746")]
	[AddComponentMenu("Multiplayer/Tests/InviteEachOtherDifferentTest")]
	public class InviteEachOtherDifferentTest : LobbyistTest
	{
		[Token(Token = "0x170006F3")]
		public override string title
		{
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0xCBB00C", Offset = "0xCBB00C", VA = "0xCBB00C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A8F")]
		[Address(RVA = "0xCBB04C", Offset = "0xCBB04C", VA = "0xCBB04C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0xCBB088", Offset = "0xCBB088", VA = "0xCBB088", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A91")]
		[Address(RVA = "0xCBB16C", Offset = "0xCBB16C", VA = "0xCBB16C", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A92")]
		[Address(RVA = "0xCBB220", Offset = "0xCBB220", VA = "0xCBB220", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A93")]
		[Address(RVA = "0xCBB2C4", Offset = "0xCBB2C4", VA = "0xCBB2C4", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A94")]
		[Address(RVA = "0xCBB360", Offset = "0xCBB360", VA = "0xCBB360")]
		public InviteEachOtherDifferentTest()
		{
		}
	}
	[Token(Token = "0x2000747")]
	[AddComponentMenu("Multiplayer/Tests/InviteEachOtherSameTest")]
	public class InviteEachOtherSameTest : LobbyistTest
	{
		[Token(Token = "0x170006F4")]
		public override string title
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0xCBB370", Offset = "0xCBB370", VA = "0xCBB370", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A96")]
		[Address(RVA = "0xCBB3B0", Offset = "0xCBB3B0", VA = "0xCBB3B0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0xCBB3EC", Offset = "0xCBB3EC", VA = "0xCBB3EC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0xCBB4C4", Offset = "0xCBB4C4", VA = "0xCBB4C4", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A99")]
		[Address(RVA = "0xCBB568", Offset = "0xCBB568", VA = "0xCBB568", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002A9A")]
		[Address(RVA = "0xCBB604", Offset = "0xCBB604", VA = "0xCBB604")]
		public InviteEachOtherSameTest()
		{
		}
	}
	[Token(Token = "0x2000748")]
	[AddComponentMenu("Multiplayer/Tests/InviteVersusTest")]
	public class InviteVersusTest : LobbyistTest
	{
		[Token(Token = "0x170006F5")]
		public override string title
		{
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0xCBB614", Offset = "0xCBB614", VA = "0xCBB614", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A9C")]
		[Address(RVA = "0xCBB654", Offset = "0xCBB654", VA = "0xCBB654", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002A9D")]
		[Address(RVA = "0xCBB690", Offset = "0xCBB690", VA = "0xCBB690", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002A9E")]
		[Address(RVA = "0xCBB71C", Offset = "0xCBB71C", VA = "0xCBB71C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002A9F")]
		[Address(RVA = "0xCBB7C0", Offset = "0xCBB7C0", VA = "0xCBB7C0", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0xCBB85C", Offset = "0xCBB85C", VA = "0xCBB85C")]
		public InviteVersusTest()
		{
		}
	}
	[Token(Token = "0x2000749")]
	[AddComponentMenu("Multiplayer/Tests/BusyInPINQueueTest")]
	public class BusyInPINQueueTest : LobbyistTest
	{
		[Token(Token = "0x170006F6")]
		public override string title
		{
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0xCBB86C", Offset = "0xCBB86C", VA = "0xCBB86C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0xCBB8AC", Offset = "0xCBB8AC", VA = "0xCBB8AC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0xCBB8E8", Offset = "0xCBB8E8", VA = "0xCBB8E8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0xCBB9BC", Offset = "0xCBB9BC", VA = "0xCBB9BC", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0xCBBA70", Offset = "0xCBBA70", VA = "0xCBBA70", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AA6")]
		[Address(RVA = "0xCBBA7C", Offset = "0xCBBA7C", VA = "0xCBBA7C", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AA7")]
		[Address(RVA = "0xCBBAF8", Offset = "0xCBBAF8", VA = "0xCBBAF8")]
		public BusyInPINQueueTest()
		{
		}
	}
	[Token(Token = "0x200074A")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINCoOpTest")]
	public class QueuePINCoOpTest : LobbyistTest
	{
		[Token(Token = "0x170006F7")]
		public override string title
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0xCBBB08", Offset = "0xCBBB08", VA = "0xCBBB08", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0xCBBB48", Offset = "0xCBBB48", VA = "0xCBBB48", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0xCBBB84", Offset = "0xCBBB84", VA = "0xCBBB84", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AAB")]
		[Address(RVA = "0xCBBC28", Offset = "0xCBBC28", VA = "0xCBBC28", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0xCBBCCC", Offset = "0xCBBCCC", VA = "0xCBBCCC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AAD")]
		[Address(RVA = "0xCBBD68", Offset = "0xCBBD68", VA = "0xCBBD68")]
		public QueuePINCoOpTest()
		{
		}
	}
	[Token(Token = "0x200074B")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINDifferentCoModeTest")]
	public class QueuePINDifferentCoModeTest : LobbyistTest
	{
		[Token(Token = "0x170006F8")]
		public override string title
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0xCBBD78", Offset = "0xCBBD78", VA = "0xCBBD78", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006F9")]
		public override float timeout
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0xCBBE98", Offset = "0xCBBE98", VA = "0xCBBE98", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0xCBBDB8", Offset = "0xCBBDB8", VA = "0xCBBDB8", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0xCBBDF4", Offset = "0xCBBDF4", VA = "0xCBBDF4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0xCBBEA0", Offset = "0xCBBEA0", VA = "0xCBBEA0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0xCBBEAC", Offset = "0xCBBEAC", VA = "0xCBBEAC", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0xCBBF4C", Offset = "0xCBBF4C", VA = "0xCBBF4C")]
		public QueuePINDifferentCoModeTest()
		{
		}
	}
	[Token(Token = "0x200074C")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINDifferentPINTest")]
	public class QueuePINDifferentPINTest : LobbyistTest
	{
		[Token(Token = "0x170006FA")]
		public override string title
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0xCBBF5C", Offset = "0xCBBF5C", VA = "0xCBBF5C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006FB")]
		public override float timeout
		{
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0xCBC090", Offset = "0xCBC090", VA = "0xCBC090", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0xCBBF9C", Offset = "0xCBBF9C", VA = "0xCBBF9C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0xCBBFD8", Offset = "0xCBBFD8", VA = "0xCBBFD8", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0xCBC098", Offset = "0xCBC098", VA = "0xCBC098", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0xCBC0A4", Offset = "0xCBC0A4", VA = "0xCBC0A4", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0xCBC144", Offset = "0xCBC144", VA = "0xCBC144")]
		public QueuePINDifferentPINTest()
		{
		}
	}
	[Token(Token = "0x200074D")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINVersusTest")]
	public class QueuePINVersusTest : LobbyistTest
	{
		[Token(Token = "0x170006FC")]
		public override string title
		{
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0xCBC154", Offset = "0xCBC154", VA = "0xCBC154", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0xCBC194", Offset = "0xCBC194", VA = "0xCBC194", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0xCBC1A4", Offset = "0xCBC1A4", VA = "0xCBC1A4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0xCBC248", Offset = "0xCBC248", VA = "0xCBC248", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0xCBC2EC", Offset = "0xCBC2EC", VA = "0xCBC2EC", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0xCBC388", Offset = "0xCBC388", VA = "0xCBC388")]
		public QueuePINVersusTest()
		{
		}
	}
	[Token(Token = "0x200074E")]
	[AddComponentMenu("Multiplayer/Tests/QueuePINWhenInvitedTest")]
	public class QueuePINWhenInvitedTest : LobbyistTest
	{
		[Token(Token = "0x170006FD")]
		public override string title
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0xCBC390", Offset = "0xCBC390", VA = "0xCBC390", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0xCBC3D0", Offset = "0xCBC3D0", VA = "0xCBC3D0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AC4")]
		[Address(RVA = "0xCBC3E0", Offset = "0xCBC3E0", VA = "0xCBC3E0", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0xCBC4B4", Offset = "0xCBC4B4", VA = "0xCBC4B4", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AC6")]
		[Address(RVA = "0xCBC568", Offset = "0xCBC568", VA = "0xCBC568", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0xCBC60C", Offset = "0xCBC60C", VA = "0xCBC60C", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0xCBC6A8", Offset = "0xCBC6A8", VA = "0xCBC6A8")]
		public QueuePINWhenInvitedTest()
		{
		}
	}
	[Token(Token = "0x200074F")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedAnyTest")]
	public class QueueRankedAnyTest : LobbyistTest
	{
		[Token(Token = "0x170006FE")]
		public override string title
		{
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0xCBC6B0", Offset = "0xCBC6B0", VA = "0xCBC6B0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ACA")]
		[Address(RVA = "0xCBC6F0", Offset = "0xCBC6F0", VA = "0xCBC6F0", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002ACB")]
		[Address(RVA = "0xCBC700", Offset = "0xCBC700", VA = "0xCBC700", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002ACC")]
		[Address(RVA = "0xCBC7B0", Offset = "0xCBC7B0", VA = "0xCBC7B0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002ACD")]
		[Address(RVA = "0xCBC854", Offset = "0xCBC854", VA = "0xCBC854", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002ACE")]
		[Address(RVA = "0xCBC8F0", Offset = "0xCBC8F0", VA = "0xCBC8F0")]
		public QueueRankedAnyTest()
		{
		}
	}
	[Token(Token = "0x2000750")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedBackToQueueAfterIceTimeout")]
	public class QueueRankedBackToQueueAfterIceTimeout : LobbyistTest
	{
		[Token(Token = "0x400275A")]
		private const float MAX_DURATION = 2f;

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _maxIceDurationBefore;

		[Token(Token = "0x400275C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _simulateNoConnectivityBefore;

		[Token(Token = "0x170006FF")]
		public override string title
		{
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0xCBC8F8", Offset = "0xCBC8F8", VA = "0xCBC8F8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000700")]
		public override float timeout
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0xCBC938", Offset = "0xCBC938", VA = "0xCBC938", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0xCBC940", Offset = "0xCBC940", VA = "0xCBC940", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0xCBC9F4", Offset = "0xCBC9F4", VA = "0xCBC9F4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0xCBCAA4", Offset = "0xCBCAA4", VA = "0xCBCAA4", Slot = "20")]
		protected override void OnICEConnectionFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AD4")]
		[Address(RVA = "0xCBCB48", Offset = "0xCBCB48", VA = "0xCBCB48", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0xCBCB6C", Offset = "0xCBCB6C", VA = "0xCBCB6C", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AD6")]
		[Address(RVA = "0xCBCCC8", Offset = "0xCBCCC8", VA = "0xCBCCC8")]
		public QueueRankedBackToQueueAfterIceTimeout()
		{
		}
	}
	[Token(Token = "0x2000751")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedCoOpTest")]
	public class QueueRankedCoOpTest : LobbyistTest
	{
		[Token(Token = "0x17000701")]
		public override string title
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0xCBCCD0", Offset = "0xCBCCD0", VA = "0xCBCCD0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0xCBCD10", Offset = "0xCBCD10", VA = "0xCBCD10", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0xCBCD20", Offset = "0xCBCD20", VA = "0xCBCD20", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0xCBCDD0", Offset = "0xCBCDD0", VA = "0xCBCDD0", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0xCBCE74", Offset = "0xCBCE74", VA = "0xCBCE74", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0xCBCF10", Offset = "0xCBCF10", VA = "0xCBCF10")]
		public QueueRankedCoOpTest()
		{
		}
	}
	[Token(Token = "0x2000752")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedLateSuspendTest")]
	public class QueueRankedLateSuspendTest : LobbyistTest
	{
		[Token(Token = "0x17000702")]
		public override string title
		{
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0xCBCF18", Offset = "0xCBCF18", VA = "0xCBCF18", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000703")]
		public override float timeout
		{
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xCBCF58", Offset = "0xCBCF58", VA = "0xCBCF58", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0xCBCF60", Offset = "0xCBCF60", VA = "0xCBCF60", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0xCBCF70", Offset = "0xCBCF70", VA = "0xCBCF70", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0xCBD078", Offset = "0xCBD078", VA = "0xCBD078", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0xCBD12C", Offset = "0xCBD12C", VA = "0xCBD12C", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0xCBD194", Offset = "0xCBD194", VA = "0xCBD194", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0xCBD33C", Offset = "0xCBD33C", VA = "0xCBD33C", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0xCBD274", Offset = "0xCBD274", VA = "0xCBD274")]
		private void CheckIfDone()
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0xCBD340", Offset = "0xCBD340", VA = "0xCBD340", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0xCBD3DC", Offset = "0xCBD3DC", VA = "0xCBD3DC")]
		public QueueRankedLateSuspendTest()
		{
		}
	}
	[Token(Token = "0x2000753")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedSuspendTest")]
	public class QueueRankedSuspendTest : LobbyistTest
	{
		[Token(Token = "0x17000704")]
		public override string title
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0xCBD3E4", Offset = "0xCBD3E4", VA = "0xCBD3E4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000705")]
		public override float timeout
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0xCBD424", Offset = "0xCBD424", VA = "0xCBD424", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0xCBD42C", Offset = "0xCBD42C", VA = "0xCBD42C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0xCBD43C", Offset = "0xCBD43C", VA = "0xCBD43C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0xCBD550", Offset = "0xCBD550", VA = "0xCBD550", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AED")]
		[Address(RVA = "0xCBD604", Offset = "0xCBD604", VA = "0xCBD604", Slot = "22")]
		protected override void OnICEConnected(LobbyistClient client, P2PNode p2p)
		{
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0xCBD66C", Offset = "0xCBD66C", VA = "0xCBD66C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AEF")]
		[Address(RVA = "0xCBD814", Offset = "0xCBD814", VA = "0xCBD814", Slot = "28")]
		protected override void OnMatchDisconnected(LobbyistClient client, FailConnectionReason reason)
		{
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0xCBD74C", Offset = "0xCBD74C", VA = "0xCBD74C")]
		private void CheckIfDone()
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0xCBD818", Offset = "0xCBD818", VA = "0xCBD818", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0xCBD8B4", Offset = "0xCBD8B4", VA = "0xCBD8B4")]
		public QueueRankedSuspendTest()
		{
		}
	}
	[Token(Token = "0x2000754")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedVersionTest")]
	public class QueueRankedVersionTest : LobbyistTest
	{
		[Token(Token = "0x17000706")]
		public override string title
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0xCBD8BC", Offset = "0xCBD8BC", VA = "0xCBD8BC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000707")]
		public override float timeout
		{
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xCBDA5C", Offset = "0xCBDA5C", VA = "0xCBDA5C", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0xCBD8FC", Offset = "0xCBD8FC", VA = "0xCBD8FC", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0xCBD9AC", Offset = "0xCBD9AC", VA = "0xCBD9AC", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0xCBDA64", Offset = "0xCBDA64", VA = "0xCBDA64", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0xCBDA70", Offset = "0xCBDA70", VA = "0xCBDA70", Slot = "10")]
		public override void OnTestTimeout()
		{
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0xCBDB00", Offset = "0xCBDB00", VA = "0xCBDB00", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0xCBDB44", Offset = "0xCBDB44", VA = "0xCBDB44")]
		public QueueRankedVersionTest()
		{
		}
	}
	[Token(Token = "0x2000755")]
	[AddComponentMenu("Multiplayer/Tests/QueueRankedVersusTest")]
	public class QueueRankedVersusTest : LobbyistTest
	{
		[Token(Token = "0x17000708")]
		public override string title
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0xCBDB4C", Offset = "0xCBDB4C", VA = "0xCBDB4C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0xCBDB8C", Offset = "0xCBDB8C", VA = "0xCBDB8C", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0xCBDB9C", Offset = "0xCBDB9C", VA = "0xCBDB9C", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0xCBDC4C", Offset = "0xCBDC4C", VA = "0xCBDC4C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0xCBDCF0", Offset = "0xCBDCF0", VA = "0xCBDCF0", Slot = "8")]
		protected override void OnTestSuccess()
		{
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0xCBDD8C", Offset = "0xCBDD8C", VA = "0xCBDD8C")]
		public QueueRankedVersusTest()
		{
		}
	}
	[Token(Token = "0x2000756")]
	[AddComponentMenu("Multiplayer/Tests/CanSignInWithTheSameId")]
	public class CanSignInWithTheSameId : LobbyistTest
	{
		[Token(Token = "0x17000709")]
		public override string title
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0xCBDD94", Offset = "0xCBDD94", VA = "0xCBDD94", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0xCBDDD4", Offset = "0xCBDDD4", VA = "0xCBDDD4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0xCBDDE8", Offset = "0xCBDDE8", VA = "0xCBDDE8", Slot = "14")]
		protected override void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0xCBDF74", Offset = "0xCBDF74", VA = "0xCBDF74")]
		private void CheckIfDone()
		{
		}

		[Token(Token = "0x6002B05")]
		[Address(RVA = "0xCBE018", Offset = "0xCBE018", VA = "0xCBE018", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0xCBE05C", Offset = "0xCBE05C", VA = "0xCBE05C")]
		public CanSignInWithTheSameId()
		{
		}
	}
	[Token(Token = "0x2000757")]
	[AddComponentMenu("Multiplayer/Tests/QueueForPinSameId")]
	public class QueueForPinSameId : LobbyistTest
	{
		[Token(Token = "0x1700070A")]
		public override string title
		{
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0xCBE064", Offset = "0xCBE064", VA = "0xCBE064", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0xCBE0A4", Offset = "0xCBE0A4", VA = "0xCBE0A4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0xCBE1A0", Offset = "0xCBE1A0", VA = "0xCBE1A0", Slot = "14")]
		protected override void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0xCBE1F8", Offset = "0xCBE1F8", VA = "0xCBE1F8", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B0B")]
		[Address(RVA = "0xCBE204", Offset = "0xCBE204", VA = "0xCBE204", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0xCBE248", Offset = "0xCBE248", VA = "0xCBE248")]
		public QueueForPinSameId()
		{
		}
	}
	[Token(Token = "0x2000758")]
	[AddComponentMenu("Multiplayer/Tests/RankedQueueFailForOlderPlayerWithSameId")]
	public class RankedQueueFailForOlderPlayerWithSameId : LobbyistTest
	{
		[Token(Token = "0x1700070B")]
		public override string title
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0xCBE250", Offset = "0xCBE250", VA = "0xCBE250", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B0E")]
		[Address(RVA = "0xCBE290", Offset = "0xCBE290", VA = "0xCBE290", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B0F")]
		[Address(RVA = "0xCBE324", Offset = "0xCBE324", VA = "0xCBE324", Slot = "14")]
		protected override void OnClientConnected(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B10")]
		[Address(RVA = "0xCBE4DC", Offset = "0xCBE4DC", VA = "0xCBE4DC", Slot = "17")]
		protected override void OnQueueFailed(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B11")]
		[Address(RVA = "0xCBE54C", Offset = "0xCBE54C", VA = "0xCBE54C", Slot = "18")]
		protected override void OnMatchConnecting(LobbyistClient client)
		{
		}

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0xCBE558", Offset = "0xCBE558", VA = "0xCBE558", Slot = "7")]
		public override void Cleanup(bool success)
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0xCBE59C", Offset = "0xCBE59C", VA = "0xCBE59C")]
		public RankedQueueFailForOlderPlayerWithSameId()
		{
		}
	}
	[Token(Token = "0x2000759")]
	[AddComponentMenu("Multiplayer/Tests/SignInTest")]
	public class SignInTest : LobbyistTest
	{
		[Token(Token = "0x1700070C")]
		public override string title
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xCBE5A4", Offset = "0xCBE5A4", VA = "0xCBE5A4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0xCBE5E4", Offset = "0xCBE5E4", VA = "0xCBE5E4", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0xCBE5F4", Offset = "0xCBE5F4", VA = "0xCBE5F4", Slot = "15")]
		protected override void OnAllClientsConnectedToServer()
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0xCBE61C", Offset = "0xCBE61C", VA = "0xCBE61C")]
		public SignInTest()
		{
		}
	}
	[Token(Token = "0x200075A")]
	[AddComponentMenu("Multiplayer/Tests/WrongVersionTest")]
	public class WrongVersionTest : LobbyistTest
	{
		[Token(Token = "0x1700070D")]
		public override string title
		{
			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xCBE624", Offset = "0xCBE624", VA = "0xCBE624", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0xCBE664", Offset = "0xCBE664", VA = "0xCBE664", Slot = "5")]
		public override void Run()
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0xCBE840", Offset = "0xCBE840", VA = "0xCBE840")]
		public WrongVersionTest()
		{
		}
	}
}
namespace Multiplayer.Data
{
	[Serializable]
	[Token(Token = "0x200075C")]
	public struct Address
	{
		[Token(Token = "0x400275F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string host;

		[Token(Token = "0x4002760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int port;
	}
	[Token(Token = "0x200075D")]
	public enum CoMode
	{
		[Token(Token = "0x4002762")]
		Undefined,
		[Token(Token = "0x4002763")]
		Versus,
		[Token(Token = "0x4002764")]
		CoOp
	}
	[Token(Token = "0x200075E")]
	public enum CoModes
	{
		[Token(Token = "0x4002766")]
		Undefined,
		[Token(Token = "0x4002767")]
		Versus,
		[Token(Token = "0x4002768")]
		CoOp,
		[Token(Token = "0x4002769")]
		VersusOrCoOp
	}
	[Token(Token = "0x200075F")]
	public class CoModesHelper
	{
		[Token(Token = "0x400276A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<CoModes, string> _coModesNames;

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0xCBE9A8", Offset = "0xCBE9A8", VA = "0xCBE9A8")]
		public static CoModes CombineBools(bool versus, bool coOp)
		{
			return default(CoModes);
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0xCBE9C8", Offset = "0xCBE9C8", VA = "0xCBE9C8")]
		public static CoModes Pluralize(CoMode coMode)
		{
			return default(CoModes);
		}

		[Token(Token = "0x6002B21")]
		[Address(RVA = "0xCBEA94", Offset = "0xCBEA94", VA = "0xCBEA94")]
		public static CoMode Singularize(CoModes coModes)
		{
			return default(CoMode);
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0xCBEBC4", Offset = "0xCBEBC4", VA = "0xCBEBC4")]
		public static string SerializeCoModes(CoModes coModes)
		{
			return null;
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0xCBEC44", Offset = "0xCBEC44", VA = "0xCBEC44")]
		public static CoModes DeserializeCoModes(string coModesString)
		{
			return default(CoModes);
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0xCBEE4C", Offset = "0xCBEE4C", VA = "0xCBEE4C")]
		public static string SerializeCoMode(CoMode coMode)
		{
			return null;
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0xCBEEA4", Offset = "0xCBEEA4", VA = "0xCBEEA4")]
		public static CoMode DeserializeCoMode(string coModeString)
		{
			return default(CoMode);
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0xCBEEFC", Offset = "0xCBEEFC", VA = "0xCBEEFC")]
		public static bool DoCoModesMatch(CoModes coModes1, CoModes coModes2, out CoModes commonCoModes)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0xCBEF38", Offset = "0xCBEF38", VA = "0xCBEF38")]
		public CoModesHelper()
		{
		}
	}
	[Token(Token = "0x2000761")]
	public enum GameResolution
	{
		[Token(Token = "0x400276D")]
		Undefined,
		[Token(Token = "0x400276E")]
		Victory,
		[Token(Token = "0x400276F")]
		Defeat,
		[Token(Token = "0x4002770")]
		Draw
	}
	[Token(Token = "0x2000762")]
	public enum PlayerID : byte
	{
		[Token(Token = "0x4002772")]
		Unknown,
		[Token(Token = "0x4002773")]
		Player1,
		[Token(Token = "0x4002774")]
		Player2
	}
}
namespace Level_Editor.UI
{
	[Token(Token = "0x2000763")]
	public class BrushTypeDataHolder : MonoBehaviour
	{
		[Token(Token = "0x4002775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BrushType brushType;

		[Token(Token = "0x6002B2B")]
		[Address(RVA = "0xCBF0BC", Offset = "0xCBF0BC", VA = "0xCBF0BC")]
		public BrushTypeDataHolder()
		{
		}
	}
}
namespace WaveSetPackages
{
	[Token(Token = "0x2000764")]
	internal struct PackedWaveSet
	{
		[Token(Token = "0x4002776")]
		public const string waveSetFilename = "waveset.json";

		[Token(Token = "0x4002777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string id;

		[Token(Token = "0x4002778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;
	}
	[Token(Token = "0x2000765")]
	internal struct PackedWave
	{
		[Serializable]
		[Token(Token = "0x2000766")]
		public struct ArcadePlacement
		{
			[Token(Token = "0x4002785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool exclusiveAtThisDifficulty;

			[Token(Token = "0x4002786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int minDifficulty;

			[Token(Token = "0x4002787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int maxDifficulty;

			[Token(Token = "0x4002788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string setWithEquivalentDifficulty;
		}

		[Serializable]
		[Token(Token = "0x2000767")]
		public struct ArenaAlignment
		{
			[Token(Token = "0x4002789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public WaveHandcrafted.Positioning positioning;

			[Token(Token = "0x400278A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int customShift;

			[Token(Token = "0x400278B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool alignWithGutter;

			[Token(Token = "0x400278C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool allowHorizontalMirror;

			[Token(Token = "0x400278D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool allowVerticalMirror;
		}

		[Serializable]
		[Token(Token = "0x2000768")]
		public struct TargetsDamage
		{
			[Token(Token = "0x400278E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int defaultTargetsHitPoints;

			[Token(Token = "0x400278F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int[] staticTargetHitPointses;
		}

		[Token(Token = "0x4002779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Func<int, string> waveFilename;

		[Token(Token = "0x400277A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<int, string> levelFilename;

		[Token(Token = "0x400277B")]
		public const string levelFilenameFormat = "";

		[Token(Token = "0x400277C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string name;

		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool walledBorders;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string borderWallType;

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeFactor;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArcadePlacement arcadePlacement;

		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArenaAlignment arenaAlignment;

		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TargetsDamage targetsDamage;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SerializablePowerupType[] powerups;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SerializablePowerupType[] excludedPowerupTypes;
	}
	[Token(Token = "0x200076A")]
	internal struct PackedLevel
	{
		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<BrickType, string> nonTargetTypeStrings;

		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<BrickType, char> targetTypeChars;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Dictionary<HexTrudeManager.WallType, char> wallTypeChars;

		[Token(Token = "0x4002794")]
		public const string FORCE_FIELD = "#";
	}
}
namespace RNX
{
	[Token(Token = "0x200076B")]
	[CreateAssetMenu(menuName = "Data/Audio Settings")]
	public class AudioSettings : UpdatableData
	{
		[Token(Token = "0x200076C")]
		public enum Spatializer
		{
			[Token(Token = "0x400279A")]
			Nx,
			[Token(Token = "0x400279B")]
			Oculus,
			[Token(Token = "0x400279C")]
			Pico,
			[Token(Token = "0x400279D")]
			None
		}

		[Serializable]
		[Token(Token = "0x200076D")]
		public class DecibelConversion
		{
			[Token(Token = "0x400279E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float logBase;

			[Token(Token = "0x400279F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("The dB for 50% volume")]
			public float halfVolumeDecibels;

			[Token(Token = "0x1700070F")]
			public float factor
			{
				[Token(Token = "0x6002B35")]
				[Address(RVA = "0xCBF668", Offset = "0xCBF668", VA = "0xCBF668")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xCBF6D0", Offset = "0xCBF6D0", VA = "0xCBF6D0")]
			public DecibelConversion()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200076E")]
		public class Keys
		{
			[Token(Token = "0x40027A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string musicVolume;

			[Token(Token = "0x40027A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string soundEffectsVolume;

			[Token(Token = "0x40027A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string voiceChatVolume;

			[Token(Token = "0x40027A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string mikeOn;

			[Token(Token = "0x40027A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string announcerOn;

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xCBF6E4", Offset = "0xCBF6E4", VA = "0xCBF6E4")]
			public Keys()
			{
			}
		}

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Spatializer _spatialized;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float picoGainDbCompensation;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DecibelConversion decibelConversion;

		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Keys keys;

		[Token(Token = "0x1700070E")]
		public Spatializer spatializer
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xCBF650", Offset = "0xCBF650", VA = "0xCBF650")]
			get
			{
				return default(Spatializer);
			}
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0xCBF658", Offset = "0xCBF658", VA = "0xCBF658")]
		public void SetSpatializer(Spatializer value)
		{
		}

		[Token(Token = "0x6002B34")]
		[Address(RVA = "0xCBF660", Offset = "0xCBF660", VA = "0xCBF660")]
		public AudioSettings()
		{
		}
	}
}
namespace RacketNx.AsyncUtils
{
	[Token(Token = "0x200076F")]
	public static class TaskExtensions
	{
		[StructLayout(3)]
		[Token(Token = "0x2000770")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__0<TResult> : IAsyncStateMachine
		{
			[Token(Token = "0x40027A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TResult> <>t__builder;

			[Token(Token = "0x40027A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float timeout;

			[Token(Token = "0x40027A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public System.Threading.Tasks.Task<TResult> task;

			[Token(Token = "0x40027A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TResult> <>u__1;

			[Token(Token = "0x6002B3C")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002B3D")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000771")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__1 : IAsyncStateMachine
		{
			[Token(Token = "0x40027AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40027AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float timeout;

			[Token(Token = "0x40027AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Threading.Tasks.Task task;

			[Token(Token = "0x40027AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TaskAwaiter <>u__1;

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xCBF9D4", Offset = "0xCBF9D4", VA = "0xCBF9D4", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xCBFBA0", Offset = "0xCBFBA0", VA = "0xCBFBA0", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000772")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__2<TResult> : IAsyncStateMachine
		{
			[Token(Token = "0x40027AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AsyncTaskMethodBuilder<TResult> <>t__builder;

			[Token(Token = "0x40027B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public System.Threading.Tasks.Task<TResult> task;

			[Token(Token = "0x40027B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TimeSpan timeout;

			[Token(Token = "0x40027B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private CancellationTokenSource <timeoutCancellationTokenSource>5__2;

			[Token(Token = "0x40027B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<System.Threading.Tasks.Task> <>u__1;

			[Token(Token = "0x40027B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private TaskAwaiter<TResult> <>u__2;

			[Token(Token = "0x6002B40")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002B41")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[StructLayout(3)]
		[Token(Token = "0x2000773")]
		[CompilerGenerated]
		private struct <TimeoutAfter>d__3 : IAsyncStateMachine
		{
			[Token(Token = "0x40027B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int <>1__state;

			[Token(Token = "0x40027B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AsyncTaskMethodBuilder <>t__builder;

			[Token(Token = "0x40027B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public System.Threading.Tasks.Task task;

			[Token(Token = "0x40027B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TimeSpan timeout;

			[Token(Token = "0x40027BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CancellationTokenSource <timeoutCancellationTokenSource>5__2;

			[Token(Token = "0x40027BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TaskAwaiter<System.Threading.Tasks.Task> <>u__1;

			[Token(Token = "0x40027BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TaskAwaiter <>u__2;

			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xCBFBAC", Offset = "0xCBFBAC", VA = "0xCBFBAC", Slot = "4")]
			private void MoveNext()
			{
			}

			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xCC01BC", Offset = "0xCC01BC", VA = "0xCC01BC", Slot = "5")]
			[DebuggerHidden]
			private void SetStateMachine(IAsyncStateMachine stateMachine)
			{
			}
		}

		[Token(Token = "0x6002B38")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__0<>))]
		public static System.Threading.Tasks.Task<TResult> TimeoutAfter<TResult>(this System.Threading.Tasks.Task<TResult> task, float timeout)
		{
			return null;
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0xCBF7DC", Offset = "0xCBF7DC", VA = "0xCBF7DC")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__1))]
		public static System.Threading.Tasks.Task TimeoutAfter(this System.Threading.Tasks.Task task, float timeout)
		{
			return null;
		}

		[Token(Token = "0x6002B3A")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__2<>))]
		public static System.Threading.Tasks.Task<TResult> TimeoutAfter<TResult>(this System.Threading.Tasks.Task<TResult> task, TimeSpan timeout)
		{
			return null;
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0xCBF8DC", Offset = "0xCBF8DC", VA = "0xCBF8DC")]
		[AsyncStateMachine(typeof(<TimeoutAfter>d__3))]
		public static System.Threading.Tasks.Task TimeoutAfter(this System.Threading.Tasks.Task task, TimeSpan timeout)
		{
			return null;
		}
	}
}
namespace RacketNx.Logger
{
	[Token(Token = "0x2000774")]
	public class RemoteLogger : MonoBehaviour
	{
		[Token(Token = "0x40027BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RemoteLogger inst;

		[Token(Token = "0x40027BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly HashSet<string> reservedKeywords;

		[Token(Token = "0x40027BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private JsonPacker _jsonPacker;

		[Token(Token = "0x40027C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _messagesFilePath;

		[Token(Token = "0x40027C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QueueEx<string> _messagesToSend;

		[Token(Token = "0x40027C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<string> _messagesBeingSent;

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0xCC01C8", Offset = "0xCC01C8", VA = "0xCC01C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002B45")]
		[Address(RVA = "0xCC04B4", Offset = "0xCC04B4", VA = "0xCC04B4")]
		private void LoadQueueFromFile()
		{
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0xCC09CC", Offset = "0xCC09CC", VA = "0xCC09CC")]
		private void SaveQueueToFile()
		{
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0xCC09D0", Offset = "0xCC09D0", VA = "0xCC09D0")]
		public static void Log(string msg, params string[] args)
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0xCC1004", Offset = "0xCC1004", VA = "0xCC1004")]
		public static void LogWarning(string msg, params string[] args)
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0xCC1138", Offset = "0xCC1138", VA = "0xCC1138")]
		public static void LogError(string msg, params string[] args)
		{
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0xCC0B04", Offset = "0xCC0B04", VA = "0xCC0B04")]
		private void LogInternal(string msg, string logLevel, string[] args)
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0xCC0530", Offset = "0xCC0530", VA = "0xCC0530")]
		private void SendQueue()
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0xCC1440", Offset = "0xCC1440", VA = "0xCC1440")]
		private void SendMessage(string message)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0xCC1814", Offset = "0xCC1814", VA = "0xCC1814")]
		public RemoteLogger()
		{
		}
	}
}
namespace RacketNx.AnalyticsNetwork
{
	[Token(Token = "0x2000776")]
	internal class JsonPacker
	{
		[Token(Token = "0x2000777")]
		private enum State
		{
			[Token(Token = "0x40027C9")]
			Initialized,
			[Token(Token = "0x40027CA")]
			Updated,
			[Token(Token = "0x40027CB")]
			Terminated
		}

		[Token(Token = "0x40027C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private StringBuilder _stringBuilder;

		[Token(Token = "0x40027C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private State _state;

		[Token(Token = "0x6002B51")]
		[Address(RVA = "0xCC0438", Offset = "0xCC0438", VA = "0xCC0438")]
		public JsonPacker()
		{
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0xCC126C", Offset = "0xCC126C", VA = "0xCC126C")]
		public void Init()
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0xCC12DC", Offset = "0xCC12DC", VA = "0xCC12DC")]
		public void Update(string key, string value)
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0xCC1CD8", Offset = "0xCC1CD8", VA = "0xCC1CD8")]
		public void Terminate()
		{
		}

		[Token(Token = "0x6002B55")]
		[Address(RVA = "0xCC1D90", Offset = "0xCC1D90", VA = "0xCC1D90", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000778")]
	public static class Utils
	{
		[Token(Token = "0x2000779")]
		public delegate void RequestDoneHandler(string error, byte[] responseData);

		[Token(Token = "0x200077A")]
		[CompilerGenerated]
		private sealed class <sendRequestCo>d__4 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40027CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40027CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x40027CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityWebRequest www;

			[Token(Token = "0x40027CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RequestDoneHandler callback;

			[Token(Token = "0x40027D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public long expectedResponseCode;

			[Token(Token = "0x17000710")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x6002B61")]
				[Address(RVA = "0xCC2590", Offset = "0xCC2590", VA = "0xCC2590", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000711")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B63")]
				[Address(RVA = "0xCC25D8", Offset = "0xCC25D8", VA = "0xCC25D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xCC1FDC", Offset = "0xCC1FDC", VA = "0xCC1FDC")]
			[DebuggerHidden]
			public <sendRequestCo>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xCC204C", Offset = "0xCC204C", VA = "0xCC204C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B60")]
			[Address(RVA = "0xCC2050", Offset = "0xCC2050", VA = "0xCC2050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xCC2598", Offset = "0xCC2598", VA = "0xCC2598", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0xCC1DC8", Offset = "0xCC1DC8", VA = "0xCC1DC8")]
		public static UnityWebRequest createPostRequest(string url, byte[] body)
		{
			return null;
		}

		[Token(Token = "0x6002B57")]
		[Address(RVA = "0xCC1664", Offset = "0xCC1664", VA = "0xCC1664")]
		public static UnityWebRequest createPostRequest(string url, string bodyString)
		{
			return null;
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0xCC1794", Offset = "0xCC1794", VA = "0xCC1794")]
		public static void sendRequest(MonoBehaviour surrogate, UnityWebRequest www, long expectedResponseCode, RequestDoneHandler callback)
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0xCC1F44", Offset = "0xCC1F44", VA = "0xCC1F44")]
		[IteratorStateMachine(typeof(<sendRequestCo>d__4))]
		private static IEnumerator<float> sendRequestCo(UnityWebRequest www, long expectedResponseCode, RequestDoneHandler callback)
		{
			return null;
		}
	}
}
namespace POpusCodec
{
	[Token(Token = "0x200077B")]
	public class OpusDecoder : IDisposable
	{
		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr _handle;

		[Token(Token = "0x40027D2")]
		private const int MaxFrameSize = 5760;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _previousPacketInvalid;

		[Token(Token = "0x40027D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _channelCount;

		[Token(Token = "0x40027D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bandwidth? _previousPacketBandwidth;

		[Token(Token = "0x17000712")]
		public Bandwidth? PreviousPacketBandwidth
		{
			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xCC2634", Offset = "0xCC2634", VA = "0xCC2634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0xCC263C", Offset = "0xCC263C", VA = "0xCC263C")]
		public OpusDecoder(SamplingRate outputSamplingRateHz, Channels numChannels)
		{
		}

		[Token(Token = "0x6002B66")]
		[Address(RVA = "0xCC29BC", Offset = "0xCC29BC", VA = "0xCC29BC")]
		public int DecodePacketLost(short[] decodedData, int decodedDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0xCC2B30", Offset = "0xCC2B30", VA = "0xCC2B30")]
		public int DecodePacketLostFloat(float[] decodedData, int decodedDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0xCC2CA4", Offset = "0xCC2CA4", VA = "0xCC2CA4")]
		public int DecodePacket(short[] decodedData, int decodedDataSize, byte[] packetData, int packetDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002B69")]
		[Address(RVA = "0xCC2E04", Offset = "0xCC2E04", VA = "0xCC2E04")]
		public int DecodePacketFloat(float[] decodedData, int decodedDataSize, byte[] packetData, int packetDataSize)
		{
			return default(int);
		}

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0xCC2EE0", Offset = "0xCC2EE0", VA = "0xCC2EE0", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200077C")]
	public class OpusEncoder : IDisposable
	{
		[Token(Token = "0x40027D6")]
		public const int BitrateMax = -1;

		[Token(Token = "0x40027D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr _handle;

		[Token(Token = "0x40027D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _frameSizePerChannel;

		[Token(Token = "0x40027D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SamplingRate _inputSamplingRate;

		[Token(Token = "0x40027DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Channels _inputChannels;

		[Token(Token = "0x40027DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Delay _encoderDelay;

		[Token(Token = "0x17000713")]
		public SamplingRate InputSamplingRate
		{
			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xCC2FAC", Offset = "0xCC2FAC", VA = "0xCC2FAC")]
			get
			{
				return default(SamplingRate);
			}
		}

		[Token(Token = "0x17000714")]
		public Channels InputChannels
		{
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xCC2FB4", Offset = "0xCC2FB4", VA = "0xCC2FB4")]
			get
			{
				return default(Channels);
			}
		}

		[Token(Token = "0x17000715")]
		public Delay EncoderDelay
		{
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xCC30D0", Offset = "0xCC30D0", VA = "0xCC30D0")]
			get
			{
				return default(Delay);
			}
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xCC2FBC", Offset = "0xCC2FBC", VA = "0xCC2FBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000716")]
		public int FrameSizePerChannel
		{
			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xCC30D8", Offset = "0xCC30D8", VA = "0xCC30D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000717")]
		public int Bitrate
		{
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xCC30E0", Offset = "0xCC30E0", VA = "0xCC30E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xCC31C0", Offset = "0xCC31C0", VA = "0xCC31C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000718")]
		public Bandwidth MaxBandwidth
		{
			[Token(Token = "0x6002B72")]
			[Address(RVA = "0xCC3298", Offset = "0xCC3298", VA = "0xCC3298")]
			get
			{
				return default(Bandwidth);
			}
			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xCC32A4", Offset = "0xCC32A4", VA = "0xCC32A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000719")]
		public Complexity Complexity
		{
			[Token(Token = "0x6002B74")]
			[Address(RVA = "0xCC32B4", Offset = "0xCC32B4", VA = "0xCC32B4")]
			get
			{
				return default(Complexity);
			}
			[Token(Token = "0x6002B75")]
			[Address(RVA = "0xCC32C0", Offset = "0xCC32C0", VA = "0xCC32C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700071A")]
		public int ExpectedPacketLossPercentage
		{
			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xCC32D0", Offset = "0xCC32D0", VA = "0xCC32D0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xCC32DC", Offset = "0xCC32DC", VA = "0xCC32DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700071B")]
		public SignalHint SignalHint
		{
			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xCC32EC", Offset = "0xCC32EC", VA = "0xCC32EC")]
			get
			{
				return default(SignalHint);
			}
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xCC32F8", Offset = "0xCC32F8", VA = "0xCC32F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700071C")]
		public ForceChannels ForceChannels
		{
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xCC3308", Offset = "0xCC3308", VA = "0xCC3308")]
			get
			{
				return default(ForceChannels);
			}
			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0xCC3314", Offset = "0xCC3314", VA = "0xCC3314")]
			set
			{
			}
		}

		[Token(Token = "0x1700071D")]
		public bool UseInbandFEC
		{
			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xCC3324", Offset = "0xCC3324", VA = "0xCC3324")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xCC3344", Offset = "0xCC3344", VA = "0xCC3344")]
			set
			{
			}
		}

		[Token(Token = "0x1700071E")]
		public bool UseUnconstrainedVBR
		{
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xCC3354", Offset = "0xCC3354", VA = "0xCC3354")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xCC3374", Offset = "0xCC3374", VA = "0xCC3374")]
			set
			{
			}
		}

		[Token(Token = "0x1700071F")]
		public bool DtxEnabled
		{
			[Token(Token = "0x6002B80")]
			[Address(RVA = "0xCC3388", Offset = "0xCC3388", VA = "0xCC3388")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002B81")]
			[Address(RVA = "0xCC33A8", Offset = "0xCC33A8", VA = "0xCC33A8")]
			set
			{
			}
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0xCC33B8", Offset = "0xCC33B8", VA = "0xCC33B8")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels)
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0xCC3678", Offset = "0xCC3678", VA = "0xCC3678")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate)
		{
		}

		[Token(Token = "0x6002B84")]
		[Address(RVA = "0xCC3684", Offset = "0xCC3684", VA = "0xCC3684")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate, OpusApplicationType applicationType)
		{
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0xCC33CC", Offset = "0xCC33CC", VA = "0xCC33CC")]
		public OpusEncoder(SamplingRate inputSamplingRateHz, Channels numChannels, int bitrate, OpusApplicationType applicationType, Delay encoderDelay)
		{
		}

		[Token(Token = "0x6002B86")]
		[Address(RVA = "0xCC37E4", Offset = "0xCC37E4", VA = "0xCC37E4")]
		public int Encode(byte[] encodedData, short[] pcmSamples)
		{
			return default(int);
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0xCC3914", Offset = "0xCC3914", VA = "0xCC3914")]
		public int Encode(byte[] encodedData, float[] pcmSamples)
		{
			return default(int);
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0xCC3A44", Offset = "0xCC3A44", VA = "0xCC3A44", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200077D")]
	public class OpusException : Exception
	{
		[Token(Token = "0x40027DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private OpusStatusCode _statusCode;

		[Token(Token = "0x17000720")]
		public OpusStatusCode StatusCode
		{
			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xCC3B10", Offset = "0xCC3B10", VA = "0xCC3B10")]
			get
			{
				return default(OpusStatusCode);
			}
		}

		[Token(Token = "0x6002B8A")]
		[Address(RVA = "0xCC2948", Offset = "0xCC2948", VA = "0xCC2948")]
		public OpusException(OpusStatusCode statusCode, string message)
		{
		}
	}
	[Token(Token = "0x200077E")]
	internal class Wrapper
	{
		[PreserveSig]
		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0xCC3B18", Offset = "0xCC3B18", VA = "0xCC3B18")]
		private static extern int opus_encoder_get_size(Channels channels);

		[PreserveSig]
		[Token(Token = "0x6002B8C")]
		[Address(RVA = "0xCC3B90", Offset = "0xCC3B90", VA = "0xCC3B90")]
		private static extern OpusStatusCode opus_encoder_init(IntPtr st, SamplingRate Fs, Channels channels, OpusApplicationType application);

		[PreserveSig]
		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0xCC3C2C", Offset = "0xCC3C2C", VA = "0xCC3C2C")]
		public static extern string opus_get_version_string();

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0xCC368C", Offset = "0xCC368C", VA = "0xCC368C")]
		public static IntPtr opus_encoder_create(SamplingRate Fs, Channels channels, OpusApplicationType application)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0xCC3DB4", Offset = "0xCC3DB4", VA = "0xCC3DB4")]
		private static extern int opus_encode(IntPtr st, short[] pcm, int frame_size, byte[] data, int max_data_bytes);

		[Token(Token = "0x6002B90")]
		[Address(RVA = "0xCC381C", Offset = "0xCC381C", VA = "0xCC381C")]
		public static int opusEncode(IntPtr st, short[] pcm, int frame_size, byte[] data, int max_data_bytes)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002B91")]
		[Address(RVA = "0xCC3E70", Offset = "0xCC3E70", VA = "0xCC3E70")]
		private static extern int opus_encode_float(IntPtr st, float[] pcm, int frame_size, byte[] data, int max_data_bytes);

		[Token(Token = "0x6002B92")]
		[Address(RVA = "0xCC394C", Offset = "0xCC394C", VA = "0xCC394C")]
		public static int opusEncode(IntPtr st, float[] pcm, int frame_size, byte[] data, int max_data_bytes)
		{
			return default(int);
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0xCC3AB8", Offset = "0xCC3AB8", VA = "0xCC3AB8")]
		public static void opus_encoder_destroy(IntPtr st)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002B94")]
		[Address(RVA = "0xCC3F2C", Offset = "0xCC3F2C", VA = "0xCC3F2C")]
		private static extern int opus_encoder_ctl(IntPtr st, OpusCtlSetRequest request, int value);

		[PreserveSig]
		[Token(Token = "0x6002B95")]
		[Address(RVA = "0xCC3FBC", Offset = "0xCC3FBC", VA = "0xCC3FBC")]
		private static extern int opus_encoder_ctl(IntPtr st, OpusCtlGetRequest request, ref int value);

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0xCC30EC", Offset = "0xCC30EC", VA = "0xCC30EC")]
		public static int get_opus_encoder_ctl(IntPtr st, OpusCtlGetRequest request)
		{
			return default(int);
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0xCC31D0", Offset = "0xCC31D0", VA = "0xCC31D0")]
		public static void set_opus_encoder_ctl(IntPtr st, OpusCtlSetRequest request, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002B98")]
		[Address(RVA = "0xCC4050", Offset = "0xCC4050", VA = "0xCC4050")]
		private static extern int opus_decoder_get_size(Channels channels);

		[PreserveSig]
		[Token(Token = "0x6002B99")]
		[Address(RVA = "0xCC40C8", Offset = "0xCC40C8", VA = "0xCC40C8")]
		private static extern OpusStatusCode opus_decoder_init(IntPtr st, SamplingRate Fs, Channels channels);

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0xCC27F8", Offset = "0xCC27F8", VA = "0xCC27F8")]
		public static IntPtr opus_decoder_create(SamplingRate Fs, Channels channels)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0xCC2F54", Offset = "0xCC2F54", VA = "0xCC2F54")]
		public static void opus_decoder_destroy(IntPtr st)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6002B9C")]
		[Address(RVA = "0xCC415C", Offset = "0xCC415C", VA = "0xCC415C")]
		private static extern int opus_decode(IntPtr st, byte[] data, int len, short[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0xCC4220", Offset = "0xCC4220", VA = "0xCC4220")]
		private static extern int opus_decode_float(IntPtr st, byte[] data, int len, float[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x6002B9E")]
		[Address(RVA = "0xCC42E4", Offset = "0xCC42E4", VA = "0xCC42E4")]
		private static extern int opus_decode(IntPtr st, IntPtr data, int len, short[] pcm, int frame_size, int decode_fec);

		[PreserveSig]
		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0xCC43A0", Offset = "0xCC43A0", VA = "0xCC43A0")]
		private static extern int opus_decode_float(IntPtr st, IntPtr data, int len, float[] pcm, int frame_size, int decode_fec);

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0xCC29E8", Offset = "0xCC29E8", VA = "0xCC29E8")]
		public static int opusDecode(IntPtr st, byte[] data, int len, short[] pcm, int frame_size, int decode_fec, int channels)
		{
			return default(int);
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0xCC2B5C", Offset = "0xCC2B5C", VA = "0xCC2B5C")]
		public static int opusDecode(IntPtr st, byte[] data, int len, float[] pcm, int frame_size, int decode_fec, int channels)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002BA2")]
		[Address(RVA = "0xCC2D80", Offset = "0xCC2D80", VA = "0xCC2D80")]
		public static extern int opus_packet_get_bandwidth(byte[] data);

		[PreserveSig]
		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0xCC445C", Offset = "0xCC445C", VA = "0xCC445C")]
		public static extern int opus_packet_get_nb_channels(byte[] data);

		[PreserveSig]
		[Token(Token = "0x6002BA4")]
		[Address(RVA = "0xCC44E0", Offset = "0xCC44E0", VA = "0xCC44E0")]
		private static extern string opus_strerror(OpusStatusCode error);

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0xCC3CB0", Offset = "0xCC3CB0", VA = "0xCC3CB0")]
		private static void HandleStatusCode(OpusStatusCode statusCode)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0xCC4570", Offset = "0xCC4570", VA = "0xCC4570")]
		public Wrapper()
		{
		}
	}
}
namespace POpusCodec.Enums
{
	[Token(Token = "0x200077F")]
	public enum Bandwidth
	{
		[Token(Token = "0x40027DE")]
		Narrowband = 1101,
		[Token(Token = "0x40027DF")]
		Mediumband,
		[Token(Token = "0x40027E0")]
		Wideband,
		[Token(Token = "0x40027E1")]
		SuperWideband,
		[Token(Token = "0x40027E2")]
		Fullband
	}
	[Token(Token = "0x2000780")]
	public enum Channels
	{
		[Token(Token = "0x40027E4")]
		Mono = 1,
		[Token(Token = "0x40027E5")]
		Stereo
	}
	[Token(Token = "0x2000781")]
	public enum Complexity
	{
		[Token(Token = "0x40027E7")]
		Complexity0,
		[Token(Token = "0x40027E8")]
		Complexity1,
		[Token(Token = "0x40027E9")]
		Complexity2,
		[Token(Token = "0x40027EA")]
		Complexity3,
		[Token(Token = "0x40027EB")]
		Complexity4,
		[Token(Token = "0x40027EC")]
		Complexity5,
		[Token(Token = "0x40027ED")]
		Complexity6,
		[Token(Token = "0x40027EE")]
		Complexity7,
		[Token(Token = "0x40027EF")]
		Complexity8,
		[Token(Token = "0x40027F0")]
		Complexity9,
		[Token(Token = "0x40027F1")]
		Complexity10
	}
	[Token(Token = "0x2000782")]
	public enum Delay
	{
		[Token(Token = "0x40027F3")]
		Delay2dot5ms = 5,
		[Token(Token = "0x40027F4")]
		Delay5ms = 10,
		[Token(Token = "0x40027F5")]
		Delay10ms = 20,
		[Token(Token = "0x40027F6")]
		Delay20ms = 40,
		[Token(Token = "0x40027F7")]
		Delay40ms = 80,
		[Token(Token = "0x40027F8")]
		Delay60ms = 120
	}
	[Token(Token = "0x2000783")]
	public enum ForceChannels
	{
		[Token(Token = "0x40027FA")]
		NoForce = -1000,
		[Token(Token = "0x40027FB")]
		Mono = 1,
		[Token(Token = "0x40027FC")]
		Stereo = 2
	}
	[Token(Token = "0x2000784")]
	public enum OpusApplicationType
	{
		[Token(Token = "0x40027FE")]
		Voip = 2048,
		[Token(Token = "0x40027FF")]
		Audio = 2049,
		[Token(Token = "0x4002800")]
		RestrictedLowDelay = 2051
	}
	[Token(Token = "0x2000785")]
	internal enum OpusCtlGetRequest
	{
		[Token(Token = "0x4002802")]
		Application = 4001,
		[Token(Token = "0x4002803")]
		Bitrate = 4003,
		[Token(Token = "0x4002804")]
		MaxBandwidth = 4005,
		[Token(Token = "0x4002805")]
		VBR = 4007,
		[Token(Token = "0x4002806")]
		Bandwidth = 4009,
		[Token(Token = "0x4002807")]
		Complexity = 4011,
		[Token(Token = "0x4002808")]
		InbandFec = 4013,
		[Token(Token = "0x4002809")]
		PacketLossPercentage = 4015,
		[Token(Token = "0x400280A")]
		Dtx = 4017,
		[Token(Token = "0x400280B")]
		VBRConstraint = 4021,
		[Token(Token = "0x400280C")]
		ForceChannels = 4023,
		[Token(Token = "0x400280D")]
		Signal = 4025,
		[Token(Token = "0x400280E")]
		LookAhead = 4027,
		[Token(Token = "0x400280F")]
		SampleRate = 4029,
		[Token(Token = "0x4002810")]
		FinalRange = 4031,
		[Token(Token = "0x4002811")]
		Pitch = 4033,
		[Token(Token = "0x4002812")]
		Gain = 4035,
		[Token(Token = "0x4002813")]
		LsbDepth = 4037
	}
	[Token(Token = "0x2000786")]
	internal enum OpusCtlSetRequest
	{
		[Token(Token = "0x4002815")]
		Application = 4000,
		[Token(Token = "0x4002816")]
		Bitrate = 4002,
		[Token(Token = "0x4002817")]
		MaxBandwidth = 4004,
		[Token(Token = "0x4002818")]
		VBR = 4006,
		[Token(Token = "0x4002819")]
		Bandwidth = 4008,
		[Token(Token = "0x400281A")]
		Complexity = 4010,
		[Token(Token = "0x400281B")]
		InbandFec = 4012,
		[Token(Token = "0x400281C")]
		PacketLossPercentage = 4014,
		[Token(Token = "0x400281D")]
		Dtx = 4016,
		[Token(Token = "0x400281E")]
		VBRConstraint = 4020,
		[Token(Token = "0x400281F")]
		ForceChannels = 4022,
		[Token(Token = "0x4002820")]
		Signal = 4024,
		[Token(Token = "0x4002821")]
		Gain = 4034,
		[Token(Token = "0x4002822")]
		LsbDepth = 4036
	}
	[Token(Token = "0x2000787")]
	public enum OpusStatusCode
	{
		[Token(Token = "0x4002824")]
		OK = 0,
		[Token(Token = "0x4002825")]
		BadArguments = -1,
		[Token(Token = "0x4002826")]
		BufferTooSmall = -2,
		[Token(Token = "0x4002827")]
		InternalError = -3,
		[Token(Token = "0x4002828")]
		InvalidPacket = -4,
		[Token(Token = "0x4002829")]
		Unimplemented = -5,
		[Token(Token = "0x400282A")]
		InvalidState = -6,
		[Token(Token = "0x400282B")]
		AllocFail = -7
	}
	[Token(Token = "0x2000788")]
	public enum SamplingRate
	{
		[Token(Token = "0x400282D")]
		Sampling08000 = 8000,
		[Token(Token = "0x400282E")]
		Sampling12000 = 12000,
		[Token(Token = "0x400282F")]
		Sampling16000 = 16000,
		[Token(Token = "0x4002830")]
		Sampling24000 = 24000,
		[Token(Token = "0x4002831")]
		Sampling48000 = 48000
	}
	[Token(Token = "0x2000789")]
	public enum SignalHint
	{
		[Token(Token = "0x4002833")]
		Auto = -1000,
		[Token(Token = "0x4002834")]
		Voice = 3001,
		[Token(Token = "0x4002835")]
		Music = 3002
	}
}
namespace I2.Loc
{
	[Token(Token = "0x200078A")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0xCC4578", Offset = "0xCC4578", VA = "0xCC4578")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6002BA8")]
		[Address(RVA = "0xCC4688", Offset = "0xCC4688", VA = "0xCC4688")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x200078B")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0xCC4690", Offset = "0xCC4690", VA = "0xCC4690")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6002BAA")]
		[Address(RVA = "0xCC4760", Offset = "0xCC4760", VA = "0xCC4760")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6002BAB")]
		[Address(RVA = "0xCC47A0", Offset = "0xCC47A0", VA = "0xCC47A0")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6002BAC")]
		[Address(RVA = "0xCC46D0", Offset = "0xCC46D0", VA = "0xCC46D0")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6002BAD")]
		[Address(RVA = "0xCC47E0", Offset = "0xCC47E0", VA = "0xCC47E0")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x200078C")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x4002836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x4002837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x4002838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[TermsPopup("")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6002BAE")]
		[Address(RVA = "0xCC47E8", Offset = "0xCC47E8", VA = "0xCC47E8")]
		public void Start()
		{
		}

		[Token(Token = "0x6002BAF")]
		[Address(RVA = "0xCC4B10", Offset = "0xCC4B10", VA = "0xCC4B10")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x200078D")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6002BB0")]
		[Address(RVA = "0xCC4B18", Offset = "0xCC4B18", VA = "0xCC4B18", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002BB1")]
		[Address(RVA = "0xCC4BD8", Offset = "0xCC4BD8", VA = "0xCC4BD8")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x200078E")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x4002839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x400283A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x400283B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6002BB2")]
		[Address(RVA = "0xCC4BE0", Offset = "0xCC4BE0", VA = "0xCC4BE0")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6002BB3")]
		[Address(RVA = "0xCC5120", Offset = "0xCC5120", VA = "0xCC5120")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6002BB4")]
		[Address(RVA = "0xCC53C8", Offset = "0xCC53C8", VA = "0xCC53C8")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6002BB5")]
		[Address(RVA = "0xCC5454", Offset = "0xCC5454", VA = "0xCC5454")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6002BB6")]
		[Address(RVA = "0xCC51F4", Offset = "0xCC51F4", VA = "0xCC51F4")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0xCC56C8", Offset = "0xCC56C8", VA = "0xCC56C8")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0xCC5940", Offset = "0xCC5940", VA = "0xCC5940")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0xCC5948", Offset = "0xCC5948", VA = "0xCC5948")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0xCC5950", Offset = "0xCC5950", VA = "0xCC5950")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0xCC5958", Offset = "0xCC5958", VA = "0xCC5958")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x200078F")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0xCC59E4", Offset = "0xCC59E4", VA = "0xCC59E4")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0xCC5AE0", Offset = "0xCC5AE0", VA = "0xCC5AE0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0xCC5B40", Offset = "0xCC5B40", VA = "0xCC5B40", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0xCC5B48", Offset = "0xCC5B48", VA = "0xCC5B48")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x2000790")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0xCC5B50", Offset = "0xCC5B50", VA = "0xCC5B50")]
		private void Start()
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0xCC5BA0", Offset = "0xCC5BA0", VA = "0xCC5BA0")]
		private void test()
		{
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0xCC5C64", Offset = "0xCC5C64", VA = "0xCC5C64")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x2000791")]
	public static class PersistentStorage
	{
		[Token(Token = "0x2000792")]
		public enum eFileType
		{
			[Token(Token = "0x400283E")]
			Raw,
			[Token(Token = "0x400283F")]
			Persistent,
			[Token(Token = "0x4002840")]
			Temporal,
			[Token(Token = "0x4002841")]
			Streaming
		}

		[Token(Token = "0x400283C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0xCC5C6C", Offset = "0xCC5C6C", VA = "0xCC5C6C")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0xCC5D3C", Offset = "0xCC5D3C", VA = "0xCC5D3C")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0xCC5E04", Offset = "0xCC5E04", VA = "0xCC5E04")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0xCC5EBC", Offset = "0xCC5EBC", VA = "0xCC5EBC")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0xCC5F74", Offset = "0xCC5F74", VA = "0xCC5F74")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0xCC6024", Offset = "0xCC6024", VA = "0xCC6024")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0xCC60D4", Offset = "0xCC60D4", VA = "0xCC60D4")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0xCC61B4", Offset = "0xCC61B4", VA = "0xCC61B4")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0xCC6284", Offset = "0xCC6284", VA = "0xCC6284")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0xCC6354", Offset = "0xCC6354", VA = "0xCC6354")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000793")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0xCC6428", Offset = "0xCC6428", VA = "0xCC6428", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0xCC66C4", Offset = "0xCC66C4", VA = "0xCC66C4", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6002BCF")]
		[Address(RVA = "0xCC6900", Offset = "0xCC6900", VA = "0xCC6900", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0xCC6B00", Offset = "0xCC6B00", VA = "0xCC6B00", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6002BD1")]
		[Address(RVA = "0xCC6B08", Offset = "0xCC6B08", VA = "0xCC6B08", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0xCC6B14", Offset = "0xCC6B14", VA = "0xCC6B14", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0xCC6B1C", Offset = "0xCC6B1C", VA = "0xCC6B1C")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0xCC6BB4", Offset = "0xCC6BB4", VA = "0xCC6BB4", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0xCC6D48", Offset = "0xCC6D48", VA = "0xCC6D48", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0xCC6ED0", Offset = "0xCC6ED0", VA = "0xCC6ED0", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0xCC704C", Offset = "0xCC704C", VA = "0xCC704C", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0xCC71C8", Offset = "0xCC71C8", VA = "0xCC71C8")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000794")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0xCC5D34", Offset = "0xCC5D34", VA = "0xCC5D34")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000795")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0xCC71D0", Offset = "0xCC71D0", VA = "0xCC71D0", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0xCC77BC", Offset = "0xCC77BC", VA = "0xCC77BC", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0xCC7818", Offset = "0xCC7818", VA = "0xCC7818", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0xCC78C0", Offset = "0xCC78C0", VA = "0xCC78C0")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000796")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0xCC78C8", Offset = "0xCC78C8", VA = "0xCC78C8")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0xCC78EC", Offset = "0xCC78EC", VA = "0xCC78EC")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0xCC7AD8", Offset = "0xCC7AD8", VA = "0xCC7AD8")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0xCC7DF8", Offset = "0xCC7DF8", VA = "0xCC7DF8")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0xCC7BF8", Offset = "0xCC7BF8", VA = "0xCC7BF8")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0xCC8210", Offset = "0xCC8210", VA = "0xCC8210")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000797")]
	public class EventCallback
	{
		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0xCC84C4", Offset = "0xCC84C4", VA = "0xCC84C4")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0xCC8528", Offset = "0xCC8528", VA = "0xCC8528")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0xCC85AC", Offset = "0xCC85AC", VA = "0xCC85AC")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000798")]
	public enum ePluralType
	{
		[Token(Token = "0x4002848")]
		Zero,
		[Token(Token = "0x4002849")]
		One,
		[Token(Token = "0x400284A")]
		Two,
		[Token(Token = "0x400284B")]
		Few,
		[Token(Token = "0x400284C")]
		Many,
		[Token(Token = "0x400284D")]
		Plural
	}
	[Token(Token = "0x2000799")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x200079A")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x400284F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4002850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x4002851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x4002852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0xCC860C", Offset = "0xCC860C", VA = "0xCC860C")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0xCC8A08", Offset = "0xCC8A08", VA = "0xCC8A08")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0xCC88C0", Offset = "0xCC88C0", VA = "0xCC88C0")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0xCC8F94", Offset = "0xCC8F94", VA = "0xCC8F94")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0xCC90DC", Offset = "0xCC90DC", VA = "0xCC90DC")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0xCC91AC", Offset = "0xCC91AC", VA = "0xCC91AC")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0xCC9330", Offset = "0xCC9330", VA = "0xCC9330")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0xCC952C", Offset = "0xCC952C", VA = "0xCC952C")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0xCC9828", Offset = "0xCC9828", VA = "0xCC9828")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0xCC9A54", Offset = "0xCC9A54", VA = "0xCC9A54")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0xCC9C14", Offset = "0xCC9C14", VA = "0xCC9C14")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0xCC9DF4", Offset = "0xCC9DF4", VA = "0xCC9DF4")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0xCC9FA4", Offset = "0xCC9FA4", VA = "0xCC9FA4")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0xCCA644", Offset = "0xCCA644", VA = "0xCCA644")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6002BF6")]
		[Address(RVA = "0xCCA62C", Offset = "0xCCA62C", VA = "0xCCA62C")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200079B")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x200079C")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x200079D")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x200079F")]
		[CompilerGenerated]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400285A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000721")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C21")]
				[Address(RVA = "0xCD53BC", Offset = "0xCD53BC", VA = "0xCD53BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000722")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C23")]
				[Address(RVA = "0xCD5404", Offset = "0xCD5404", VA = "0xCD5404", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xCD311C", Offset = "0xCD311C", VA = "0xCD311C")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xCD5228", Offset = "0xCD5228", VA = "0xCD5228", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xCD522C", Offset = "0xCD522C", VA = "0xCD522C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xCD53C4", Offset = "0xCD53C4", VA = "0xCD53C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0xCD1938", Offset = "0xCD1938", VA = "0xCD1938")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0xCD1B70", Offset = "0xCD1B70", VA = "0xCD1B70")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0xCD22C8", Offset = "0xCD22C8", VA = "0xCD22C8")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002BFB")]
		[Address(RVA = "0xCD2234", Offset = "0xCD2234", VA = "0xCD2234")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0xCD2A14", Offset = "0xCD2A14", VA = "0xCD2A14")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0xCD2A90", Offset = "0xCD2A90", VA = "0xCD2A90")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0xCD28F4", Offset = "0xCD28F4", VA = "0xCD28F4")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0xCD30BC", Offset = "0xCD30BC", VA = "0xCD30BC")]
		[IteratorStateMachine(typeof(<WaitForTranslations>d__11))]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0xCD3144", Offset = "0xCD3144", VA = "0xCD3144")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0xCD38B0", Offset = "0xCD38B0", VA = "0xCD38B0")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0xCD3964", Offset = "0xCD3964", VA = "0xCD3964")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0xCD1EE4", Offset = "0xCD1EE4", VA = "0xCD1EE4")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0xCD3B6C", Offset = "0xCD3B6C", VA = "0xCD3B6C")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0xCD241C", Offset = "0xCD241C", VA = "0xCD241C")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0xCD460C", Offset = "0xCD460C", VA = "0xCD460C")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0xCD3630", Offset = "0xCD3630", VA = "0xCD3630")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0xCD3DBC", Offset = "0xCD3DBC", VA = "0xCD3DBC")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0xCD3F78", Offset = "0xCD3F78", VA = "0xCD3F78")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6002C0A")]
		[Address(RVA = "0xCD3E50", Offset = "0xCD3E50", VA = "0xCD3E50")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0xCD470C", Offset = "0xCD470C", VA = "0xCD470C")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0xCD3800", Offset = "0xCD3800", VA = "0xCD3800")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6002C0D")]
		[Address(RVA = "0xCD405C", Offset = "0xCD405C", VA = "0xCD405C")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0xCD27DC", Offset = "0xCD27DC", VA = "0xCD27DC")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0xCD47D0", Offset = "0xCD47D0", VA = "0xCD47D0")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0xCD4A84", Offset = "0xCD4A84", VA = "0xCD4A84")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0xCD4DEC", Offset = "0xCD4DEC", VA = "0xCD4DEC")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0xCD3008", Offset = "0xCD3008", VA = "0xCD3008")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x20007A0")]
	public struct TranslationQuery
	{
		[Token(Token = "0x400285B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x400285C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x400285D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x400285E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x400285F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x4002860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x20007A1")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x20007A2")]
		public enum eJobState
		{
			[Token(Token = "0x4002863")]
			Running,
			[Token(Token = "0x4002864")]
			Succeeded,
			[Token(Token = "0x4002865")]
			Failed
		}

		[Token(Token = "0x4002861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0xCD540C", Offset = "0xCD540C", VA = "0xCD540C", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002C25")]
		[Address(RVA = "0xCD5414", Offset = "0xCD5414", VA = "0xCD5414", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0xCD5418", Offset = "0xCD5418", VA = "0xCD5418")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x20007A3")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4002866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0xCD5420", Offset = "0xCD5420", VA = "0xCD5420", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0xCD544C", Offset = "0xCD544C", VA = "0xCD544C")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x20007A4")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4002867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x400286A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0xCD5454", Offset = "0xCD5454", VA = "0xCD5454")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0xCD5508", Offset = "0xCD5508", VA = "0xCD5508")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6002C2B")]
		[Address(RVA = "0xCD5640", Offset = "0xCD5640", VA = "0xCD5640", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002C2C")]
		[Address(RVA = "0xCD56EC", Offset = "0xCD56EC", VA = "0xCD56EC")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20007A5")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x400286B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x400286C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x400286D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x400286E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400286F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x6002C2D")]
		[Address(RVA = "0xCD2734", Offset = "0xCD2734", VA = "0xCD2734")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002C2E")]
		[Address(RVA = "0xCD59B0", Offset = "0xCD59B0", VA = "0xCD59B0", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002C2F")]
		[Address(RVA = "0xCD5BC4", Offset = "0xCD5BC4", VA = "0xCD5BC4", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20007A6")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x4002871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6002C30")]
		[Address(RVA = "0xCD5804", Offset = "0xCD5804", VA = "0xCD5804")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002C31")]
		[Address(RVA = "0xCD5C24", Offset = "0xCD5C24", VA = "0xCD5C24", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0xCD5CC0", Offset = "0xCD5CC0", VA = "0xCD5CC0")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x20007A7")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Token(Token = "0x4002873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mErrorMessage;

		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x4002877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x4002878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x4002879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0xCD5DA8", Offset = "0xCD5DA8", VA = "0xCD5DA8")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0xCD5DFC", Offset = "0xCD5DFC", VA = "0xCD5DFC")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0xCD61E0", Offset = "0xCD61E0", VA = "0xCD61E0")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0xCD65B4", Offset = "0xCD65B4", VA = "0xCD65B4", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0xCD6660", Offset = "0xCD6660", VA = "0xCD6660")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6002C38")]
		[Address(RVA = "0xCD6794", Offset = "0xCD6794", VA = "0xCD6794")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x20007A9")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x400287F")]
		DISABLED = 1,
		[Token(Token = "0x4002880")]
		KEEP_LOADED = 2,
		[Token(Token = "0x4002881")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x20007AA")]
	public class LanguageData
	{
		[Token(Token = "0x4002882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4002883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4002884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4002885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x6002C3E")]
		[Address(RVA = "0xCD6E80", Offset = "0xCD6E80", VA = "0xCD6E80")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C3F")]
		[Address(RVA = "0xCD6E90", Offset = "0xCD6E90", VA = "0xCD6E90")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6002C40")]
		[Address(RVA = "0xCD6EAC", Offset = "0xCD6EAC", VA = "0xCD6EAC")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C41")]
		[Address(RVA = "0xCD6EBC", Offset = "0xCD6EBC", VA = "0xCD6EBC")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C42")]
		[Address(RVA = "0xCD6ECC", Offset = "0xCD6ECC", VA = "0xCD6ECC")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6002C43")]
		[Address(RVA = "0xCD6EE8", Offset = "0xCD6EE8", VA = "0xCD6EE8")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0xCD6F04", Offset = "0xCD6F04", VA = "0xCD6F04")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x20007AB")]
	[ExecuteInEditMode]
	[AddComponentMenu("I2/Localization/Source")]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x20007AC")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4002886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4002887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4002888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4002889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x400288A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400288B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x400288C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x400288D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x400288E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x17000723")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xCD6F0C", Offset = "0xCD6F0C", VA = "0xCD6F0C", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0xCD6F14", Offset = "0xCD6F14", VA = "0xCD6F14", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1400008B")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002C47")]
			[Address(RVA = "0xCD6F1C", Offset = "0xCD6F1C", VA = "0xCD6F1C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C48")]
			[Address(RVA = "0xCD6FB8", Offset = "0xCD6FB8", VA = "0xCD6FB8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0xCD7054", Offset = "0xCD7054", VA = "0xCD7054")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0xCD70F4", Offset = "0xCD70F4", VA = "0xCD70F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0xCD7168", Offset = "0xCD7168", VA = "0xCD7168")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0xCD7258", Offset = "0xCD7258", VA = "0xCD7258", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0xCD7264", Offset = "0xCD7264", VA = "0xCD7264", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0xCD79E8", Offset = "0xCD79E8", VA = "0xCD79E8")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x20007AD")]
	[CreateAssetMenu(fileName = "I2Languages", menuName = "I2 Localization/LanguageSource", order = 1)]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x17000724")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xCD7D74", Offset = "0xCD7D74", VA = "0xCD7D74", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xCD7D7C", Offset = "0xCD7D7C", VA = "0xCD7D7C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0xCD7D84", Offset = "0xCD7D84", VA = "0xCD7D84")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x20007AE")]
	public interface ILanguageSource
	{
		[Token(Token = "0x17000725")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6002C56")]
			get;
			[Token(Token = "0x6002C57")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20007AF")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x20007B0")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x40028B8")]
			Empty,
			[Token(Token = "0x40028B9")]
			Fallback,
			[Token(Token = "0x40028BA")]
			ShowWarning,
			[Token(Token = "0x40028BB")]
			ShowTerm
		}

		[Token(Token = "0x20007B1")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x40028BD")]
			Never,
			[Token(Token = "0x40028BE")]
			OnlyInDevice,
			[Token(Token = "0x40028BF")]
			EditorAndDevice
		}

		[Token(Token = "0x20007B2")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x40028C1")]
			Always,
			[Token(Token = "0x40028C2")]
			Never,
			[Token(Token = "0x40028C3")]
			Daily,
			[Token(Token = "0x40028C4")]
			Weekly,
			[Token(Token = "0x40028C5")]
			Monthly,
			[Token(Token = "0x40028C6")]
			OnlyOnce,
			[Token(Token = "0x40028C7")]
			EveryOtherDay
		}

		[Token(Token = "0x20007B3")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x40028C9")]
			Manual,
			[Token(Token = "0x40028CA")]
			OnSceneLoaded,
			[Token(Token = "0x40028CB")]
			AsSoonAsDownloaded
		}

		[Token(Token = "0x20007B5")]
		[CompilerGenerated]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40028D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40028D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40028D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x40028D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x40028D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000727")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002CB2")]
				[Address(RVA = "0xCE084C", Offset = "0xCE084C", VA = "0xCE084C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000728")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002CB4")]
				[Address(RVA = "0xCE0894", Offset = "0xCE0894", VA = "0xCE0894", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xCDDE50", Offset = "0xCDDE50", VA = "0xCDDE50")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xCE055C", Offset = "0xCE055C", VA = "0xCE055C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0xCE0560", Offset = "0xCE0560", VA = "0xCE0560", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xCE0854", Offset = "0xCE0854", VA = "0xCE0854", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x17000726")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xCD7DF4", Offset = "0xCD7DF4", VA = "0xCD7DF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008C")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xCD794C", Offset = "0xCD794C", VA = "0xCD794C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xCD7E70", Offset = "0xCD7E70", VA = "0xCD7E70")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002C5B")]
		[Address(RVA = "0xCD7084", Offset = "0xCD7084", VA = "0xCD7084")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002C5C")]
		[Address(RVA = "0xCD7114", Offset = "0xCD7114", VA = "0xCD7114")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0xCD8924", Offset = "0xCD8924", VA = "0xCD8924")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0xCD8E8C", Offset = "0xCD8E8C", VA = "0xCD8E8C")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0xCD8F94", Offset = "0xCD8F94", VA = "0xCD8F94")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0xCD9078", Offset = "0xCD9078", VA = "0xCD9078")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0xCD9080", Offset = "0xCD9080", VA = "0xCD9080")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0xCD8470", Offset = "0xCD8470", VA = "0xCD8470")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0xCD9084", Offset = "0xCD9084", VA = "0xCD9084")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0xCD9158", Offset = "0xCD9158", VA = "0xCD9158")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0xCD91B0", Offset = "0xCD91B0", VA = "0xCD91B0")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0xCD929C", Offset = "0xCD929C", VA = "0xCD929C")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0xCD99C8", Offset = "0xCD99C8", VA = "0xCD99C8")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0xCD9C24", Offset = "0xCD9C24", VA = "0xCD9C24")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0xCD9CF0", Offset = "0xCD9CF0", VA = "0xCD9CF0")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0xCDA228", Offset = "0xCDA228", VA = "0xCDA228")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0xCDAB74", Offset = "0xCDAB74", VA = "0xCDAB74")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0xCDAA10", Offset = "0xCDAA10", VA = "0xCDAA10")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0xCDADD4", Offset = "0xCDADD4", VA = "0xCDADD4")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0xCDAF50", Offset = "0xCDAF50", VA = "0xCDAF50")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0xCDB114", Offset = "0xCDB114", VA = "0xCDB114")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0xCDB5F0", Offset = "0xCDB5F0", VA = "0xCDB5F0")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0xCDC408", Offset = "0xCDC408", VA = "0xCDC408")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0xCDB754", Offset = "0xCDB754", VA = "0xCDB754")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0xCDC68C", Offset = "0xCDC68C", VA = "0xCDC68C")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0xCDCA34", Offset = "0xCDCA34", VA = "0xCDCA34")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0xCDCC7C", Offset = "0xCDCC7C", VA = "0xCDCC7C")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0xCDCEA8", Offset = "0xCDCEA8", VA = "0xCDCEA8")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0xCDD068", Offset = "0xCDD068", VA = "0xCDD068")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0xCDD49C", Offset = "0xCDD49C", VA = "0xCDD49C")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0xCDDB58", Offset = "0xCDDB58", VA = "0xCDDB58")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0xCDD2DC", Offset = "0xCDD2DC", VA = "0xCDD2DC")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0xCDDDC8", Offset = "0xCDDDC8", VA = "0xCDDDC8")]
		[IteratorStateMachine(typeof(<Import_Google_Coroutine>d__65))]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0xCDDE78", Offset = "0xCDDE78", VA = "0xCDDE78")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0xCDDF24", Offset = "0xCDDF24", VA = "0xCDDF24")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0xCDE084", Offset = "0xCDE084", VA = "0xCDE084")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0xCDE1F8", Offset = "0xCDE1F8", VA = "0xCDE1F8")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0xCDD52C", Offset = "0xCDD52C", VA = "0xCDD52C")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0xCD8A84", Offset = "0xCD8A84", VA = "0xCD8A84")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0xCDE44C", Offset = "0xCDE44C", VA = "0xCDE44C")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0xCDE4DC", Offset = "0xCDE4DC", VA = "0xCDE4DC")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0xCDC71C", Offset = "0xCDC71C", VA = "0xCDC71C")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0xCDE290", Offset = "0xCDE290", VA = "0xCDE290")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0xCDE580", Offset = "0xCDE580", VA = "0xCDE580")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C87")]
		[Address(RVA = "0xCDE60C", Offset = "0xCDE60C", VA = "0xCDE60C")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0xCDE6A4", Offset = "0xCDE6A4", VA = "0xCDE6A4")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0xCDE71C", Offset = "0xCDE71C", VA = "0xCDE71C")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0xCDE918", Offset = "0xCDE918", VA = "0xCDE918")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0xCDEBE8", Offset = "0xCDEBE8", VA = "0xCDEBE8")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0xCDED60", Offset = "0xCDED60", VA = "0xCDED60")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0xCDEF58", Offset = "0xCDEF58", VA = "0xCDEF58")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0xCDEFE4", Offset = "0xCDEFE4", VA = "0xCDEFE4")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0xCDF080", Offset = "0xCDF080", VA = "0xCDF080")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0xCDF090", Offset = "0xCDF090", VA = "0xCDF090")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0xCDF2D8", Offset = "0xCDF2D8", VA = "0xCDF2D8")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6002C92")]
		[Address(RVA = "0xCDF6A4", Offset = "0xCDF6A4", VA = "0xCDF6A4")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0xCDF43C", Offset = "0xCDF43C", VA = "0xCDF43C")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0xCDCB64", Offset = "0xCDCB64", VA = "0xCDCB64")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0xCDCACC", Offset = "0xCDCACC", VA = "0xCDCACC")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C96")]
		[Address(RVA = "0xCDB328", Offset = "0xCDB328", VA = "0xCDB328")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0xCDF7F0", Offset = "0xCDF7F0", VA = "0xCDF7F0")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0xCDF728", Offset = "0xCDF728", VA = "0xCDF728")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0xCDF89C", Offset = "0xCDF89C", VA = "0xCDF89C")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0xCD8168", Offset = "0xCD8168", VA = "0xCD8168")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0xCDF9B4", Offset = "0xCDF9B4", VA = "0xCDF9B4")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0xCDFA58", Offset = "0xCDFA58", VA = "0xCDFA58")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9D")]
		[Address(RVA = "0xCD9FA4", Offset = "0xCD9FA4", VA = "0xCD9FA4")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0xCDFCB0", Offset = "0xCDFCB0", VA = "0xCDFCB0")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0xCD8C34", Offset = "0xCD8C34", VA = "0xCD8C34")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0xCDFF0C", Offset = "0xCDFF0C", VA = "0xCDFF0C")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0xCDFF28", Offset = "0xCDFF28", VA = "0xCDFF28")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0xCDFCBC", Offset = "0xCDFCBC", VA = "0xCDFCBC")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0xCE0178", Offset = "0xCE0178", VA = "0xCE0178")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0xCDC890", Offset = "0xCDC890", VA = "0xCDC890")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0xCD76AC", Offset = "0xCD76AC", VA = "0xCD76AC")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x20007B6")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x40028D9")]
		None,
		[Token(Token = "0x40028DA")]
		Replace,
		[Token(Token = "0x40028DB")]
		Merge,
		[Token(Token = "0x40028DC")]
		AddNewTerms
	}
	[Token(Token = "0x20007B7")]
	public class LocalizationReader
	{
		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0xCE089C", Offset = "0xCE089C", VA = "0xCE089C")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0xCE0B08", Offset = "0xCE0B08", VA = "0xCE0B08")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0xCE0F90", Offset = "0xCE0F90", VA = "0xCE0F90")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0xCDB62C", Offset = "0xCDB62C", VA = "0xCDB62C")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0xCE11B0", Offset = "0xCE11B0", VA = "0xCE11B0")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0xCE139C", Offset = "0xCE139C", VA = "0xCE139C")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0xCDC440", Offset = "0xCDC440", VA = "0xCDC440")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0xCE0EE8", Offset = "0xCE0EE8", VA = "0xCE0EE8")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0xCE1528", Offset = "0xCE1528", VA = "0xCE1528")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6002CBE")]
		[Address(RVA = "0xCE0E40", Offset = "0xCE0E40", VA = "0xCE0E40")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6002CBF")]
		[Address(RVA = "0xCE1620", Offset = "0xCE1620", VA = "0xCE1620")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x20007B8")]
	[AddComponentMenu("I2/Localization/I2 Localize")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x20007B9")]
		public enum TermModification
		{
			[Token(Token = "0x40028FD")]
			DontModify,
			[Token(Token = "0x40028FE")]
			ToUpper,
			[Token(Token = "0x40028FF")]
			ToLower,
			[Token(Token = "0x4002900")]
			ToUpperFirst,
			[Token(Token = "0x4002901")]
			ToTitle
		}

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x40028FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x40028FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x17000729")]
		public string Term
		{
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xCE1628", Offset = "0xCE1628", VA = "0xCE1628")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xCE1630", Offset = "0xCE1630", VA = "0xCE1630")]
			set
			{
			}
		}

		[Token(Token = "0x1700072A")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xCE1688", Offset = "0xCE1688", VA = "0xCE1688")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0xCE1690", Offset = "0xCE1690", VA = "0xCE1690")]
			set
			{
			}
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0xCE1714", Offset = "0xCE1714", VA = "0xCE1714")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0xCE2834", Offset = "0xCE2834", VA = "0xCE2834")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0xCE283C", Offset = "0xCE283C", VA = "0xCE283C")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0xCE1F60", Offset = "0xCE1F60", VA = "0xCE1F60")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0xCE1AB0", Offset = "0xCE1AB0", VA = "0xCE1AB0")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0xCE2884", Offset = "0xCE2884", VA = "0xCE2884")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0xCE308C", Offset = "0xCE308C", VA = "0xCE308C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0xCE3154", Offset = "0xCE3154", VA = "0xCE3154")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6002CCC")]
		[Address(RVA = "0xCE1634", Offset = "0xCE1634", VA = "0xCE1634")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6002CCD")]
		[Address(RVA = "0xCE169C", Offset = "0xCE169C", VA = "0xCE169C")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6002CCE")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002CCF")]
		[Address(RVA = "0xCE1748", Offset = "0xCE1748", VA = "0xCE1748")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6002CD0")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002CD1")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0xCE31A4", Offset = "0xCE31A4", VA = "0xCE31A4")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6002CD3")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0xCE32B4", Offset = "0xCE32B4", VA = "0xCE32B4")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0xCE3338", Offset = "0xCE3338", VA = "0xCE3338")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0xCE3424", Offset = "0xCE3424", VA = "0xCE3424")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6002CD7")]
		[Address(RVA = "0xCE3548", Offset = "0xCE3548", VA = "0xCE3548")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x20007BB")]
	[AddComponentMenu("I2/Localization/Localize Dropdown")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4002907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0xCE3938", Offset = "0xCE3938", VA = "0xCE3938")]
		public void Start()
		{
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0xCE3C70", Offset = "0xCE3C70", VA = "0xCE3C70")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0xCE3DE8", Offset = "0xCE3DE8", VA = "0xCE3DE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0xCE3B84", Offset = "0xCE3B84", VA = "0xCE3B84")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0xCE3E40", Offset = "0xCE3E40", VA = "0xCE3E40")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0xCE40A4", Offset = "0xCE40A4", VA = "0xCE40A4")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0xCE461C", Offset = "0xCE461C", VA = "0xCE461C")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0xCE43D0", Offset = "0xCE43D0", VA = "0xCE43D0")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0xCE493C", Offset = "0xCE493C", VA = "0xCE493C")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x20007BC")]
	public static class LocalizationManager
	{
		[Token(Token = "0x20007BD")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x20007BE")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x20007C4")]
		[CompilerGenerated]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002920")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002921")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002922")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002923")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x4002924")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x17000730")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D41")]
				[Address(RVA = "0xCEA260", Offset = "0xCEA260", VA = "0xCEA260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000731")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D43")]
				[Address(RVA = "0xCEA2A8", Offset = "0xCEA2A8", VA = "0xCEA2A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0xCE7E80", Offset = "0xCE7E80", VA = "0xCE7E80")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xCEA19C", Offset = "0xCEA19C", VA = "0xCEA19C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xCEA1A0", Offset = "0xCEA1A0", VA = "0xCEA1A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D42")]
			[Address(RVA = "0xCEA268", Offset = "0xCEA268", VA = "0xCEA268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20007C6")]
		[CompilerGenerated]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002926")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002927")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x17000732")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002D49")]
				[Address(RVA = "0xCEA3A0", Offset = "0xCEA3A0", VA = "0xCEA3A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000733")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002D4B")]
				[Address(RVA = "0xCEA3E8", Offset = "0xCEA3E8", VA = "0xCEA3E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002D46")]
			[Address(RVA = "0xCE9060", Offset = "0xCE9060", VA = "0xCE9060")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6002D47")]
			[Address(RVA = "0xCEA2D8", Offset = "0xCEA2D8", VA = "0xCEA2D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002D48")]
			[Address(RVA = "0xCEA2DC", Offset = "0xCEA2DC", VA = "0xCEA2DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xCEA3A8", Offset = "0xCEA3A8", VA = "0xCEA3A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4002909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x400290A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x400290B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x400290C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x400290D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x400290E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x400290F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4002910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x4002911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x1700072B")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0xCDD00C", Offset = "0xCDD00C", VA = "0xCDD00C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xCE3478", Offset = "0xCE3478", VA = "0xCE3478")]
			set
			{
			}
		}

		[Token(Token = "0x1700072C")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6002CED")]
			[Address(RVA = "0xCE574C", Offset = "0xCE574C", VA = "0xCE574C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xCE57A8", Offset = "0xCE57A8", VA = "0xCE57A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700072D")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0xCE5A38", Offset = "0xCE5A38", VA = "0xCE5A38")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0xCE5BAC", Offset = "0xCE5BAC", VA = "0xCE5BAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700072E")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0xCE5D6C", Offset = "0xCE5D6C", VA = "0xCE5D6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xCE5E3C", Offset = "0xCE5E3C", VA = "0xCE5E3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700072F")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0xCE5F40", Offset = "0xCE5F40", VA = "0xCE5F40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400008D")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xCE3AA8", Offset = "0xCE3AA8", VA = "0xCE3AA8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0xCE3D0C", Offset = "0xCE3D0C", VA = "0xCE3D0C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0xCD1E20", Offset = "0xCD1E20", VA = "0xCD1E20")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0xCE4FFC", Offset = "0xCE4FFC", VA = "0xCE4FFC")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0xCDE288", Offset = "0xCDE288", VA = "0xCDE288")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0xCD19DC", Offset = "0xCD19DC", VA = "0xCD19DC")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0xCE5550", Offset = "0xCE5550", VA = "0xCE5550")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0xCE5F98", Offset = "0xCE5F98", VA = "0xCE5F98")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0xCE6188", Offset = "0xCE6188", VA = "0xCE6188")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0xCE608C", Offset = "0xCE608C", VA = "0xCE608C")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0xCE4C28", Offset = "0xCE4C28", VA = "0xCE4C28")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0xCE62B8", Offset = "0xCE62B8", VA = "0xCE62B8")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0xCE503C", Offset = "0xCE503C", VA = "0xCE503C")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0xCE5398", Offset = "0xCE5398", VA = "0xCE5398")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0xCE5870", Offset = "0xCE5870", VA = "0xCE5870")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0xCE6470", Offset = "0xCE6470", VA = "0xCE6470")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0xCE66F0", Offset = "0xCE66F0", VA = "0xCE66F0")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0xCE6944", Offset = "0xCE6944", VA = "0xCE6944")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0xCE6A38", Offset = "0xCE6A38", VA = "0xCE6A38")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0xCE6B60", Offset = "0xCE6B60", VA = "0xCE6B60")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0xCE49C4", Offset = "0xCE49C4", VA = "0xCE49C4")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0xCE6C58", Offset = "0xCE6C58", VA = "0xCE6C58")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0xCE2AD4", Offset = "0xCE2AD4", VA = "0xCE2AD4")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0xCE726C", Offset = "0xCE726C", VA = "0xCE726C")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0xCE6E4C", Offset = "0xCE6E4C", VA = "0xCE6E4C")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0xCE74BC", Offset = "0xCE74BC", VA = "0xCE74BC")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0xCE774C", Offset = "0xCE774C", VA = "0xCE774C")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6002D09")]
		[Address(RVA = "0xCE3030", Offset = "0xCE3030", VA = "0xCE3030")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0xCE2BC4", Offset = "0xCE2BC4", VA = "0xCE2BC4")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6002D0B")]
		[Address(RVA = "0xCE7910", Offset = "0xCE7910", VA = "0xCE7910")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6002D0C")]
		[Address(RVA = "0xCE6104", Offset = "0xCE6104", VA = "0xCE6104")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0D")]
		[Address(RVA = "0xCE4BA4", Offset = "0xCE4BA4", VA = "0xCE4BA4")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0E")]
		[Address(RVA = "0xCE79AC", Offset = "0xCE79AC", VA = "0xCE79AC")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6002D0F")]
		[Address(RVA = "0xCE7C54", Offset = "0xCE7C54", VA = "0xCE7C54")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0xCE7AB4", Offset = "0xCE7AB4", VA = "0xCE7AB4")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0xCD7F0C", Offset = "0xCD7F0C", VA = "0xCD7F0C")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0xCE7DE8", Offset = "0xCE7DE8", VA = "0xCE7DE8")]
		[IteratorStateMachine(typeof(<Delayed_Import_Google>d__59))]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0xCD88A4", Offset = "0xCD88A4", VA = "0xCD88A4")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0xCE7EA8", Offset = "0xCE7EA8", VA = "0xCE7EA8")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0xCE7F2C", Offset = "0xCE7F2C", VA = "0xCE7F2C")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0xCE80D0", Offset = "0xCE80D0", VA = "0xCE80D0")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0xCE8200", Offset = "0xCE8200", VA = "0xCE8200")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0xCE621C", Offset = "0xCE621C", VA = "0xCE621C")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0xCE82DC", Offset = "0xCE82DC", VA = "0xCE82DC")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0xCE875C", Offset = "0xCE875C", VA = "0xCE875C")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0xCE2A20", Offset = "0xCE2A20", VA = "0xCE2A20")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0xCE8BFC", Offset = "0xCE8BFC", VA = "0xCE8BFC")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6002D1F")]
		[Address(RVA = "0xCE8A14", Offset = "0xCE8A14", VA = "0xCE8A14")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D20")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002D21")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0xCE8C98", Offset = "0xCE8C98", VA = "0xCE8C98")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0xCD87D8", Offset = "0xCD87D8", VA = "0xCD87D8")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6002D24")]
		[Address(RVA = "0xCE9000", Offset = "0xCE9000", VA = "0xCE9000")]
		[IteratorStateMachine(typeof(<Coroutine_LocalizeAll>d__84))]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0xCE8E88", Offset = "0xCE8E88", VA = "0xCE8E88")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0xCE9088", Offset = "0xCE9088", VA = "0xCE9088")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0xCE91B0", Offset = "0xCE91B0", VA = "0xCE91B0")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0xCE93F4", Offset = "0xCE93F4", VA = "0xCE93F4")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0xCE7364", Offset = "0xCE7364", VA = "0xCE7364")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x20007C7")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6002D4C")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6002D4D")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6002D4E")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6002D4F")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6002D50")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6002D51")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6002D52")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6002D53")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0xCEB3F0", Offset = "0xCEB3F0", VA = "0xCEB3F0")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20007C8")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4002928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6002D55")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D56")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x20007C9")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4002929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x400292A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x6002D57")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6002D58")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6002D59")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6002D5A")]
		[Address(RVA = "0xCEB3F8", Offset = "0xCEB3F8", VA = "0xCEB3F8")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x20007CA")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6002D5B")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6002D5C")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6002D5D")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x20007CB")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6002D5E")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D5F")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6002D60")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x20007CC")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x400292B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x400292C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x400292D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400292E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0xCEB400", Offset = "0xCEB400", VA = "0xCEB400")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0xCEB404", Offset = "0xCEB404", VA = "0xCEB404")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0xCEB4CC", Offset = "0xCEB4CC", VA = "0xCEB4CC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0xCEB4D4", Offset = "0xCEB4D4", VA = "0xCEB4D4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0xCEB4DC", Offset = "0xCEB4DC", VA = "0xCEB4DC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D66")]
		[Address(RVA = "0xCEB4E4", Offset = "0xCEB4E4", VA = "0xCEB4E4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D67")]
		[Address(RVA = "0xCEB4EC", Offset = "0xCEB4EC", VA = "0xCEB4EC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0xCEB4F4", Offset = "0xCEB4F4", VA = "0xCEB4F4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002D69")]
		[Address(RVA = "0xCEB610", Offset = "0xCEB610", VA = "0xCEB610", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0xCEBBA4", Offset = "0xCEBBA4", VA = "0xCEBBA4")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0xCEBE0C", Offset = "0xCEBE0C", VA = "0xCEBE0C")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0xCEBAC4", Offset = "0xCEBAC4", VA = "0xCEBAC4")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0xCEBD0C", Offset = "0xCEBD0C", VA = "0xCEBD0C")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0xCEC0B0", Offset = "0xCEC0B0", VA = "0xCEC0B0")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x20007CD")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x400292F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0xCEC10C", Offset = "0xCEC10C", VA = "0xCEC10C")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6002D70")]
		[Address(RVA = "0xCEC110", Offset = "0xCEC110", VA = "0xCEC110")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002D71")]
		[Address(RVA = "0xCEC1D8", Offset = "0xCEC1D8", VA = "0xCEC1D8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D72")]
		[Address(RVA = "0xCEC1E0", Offset = "0xCEC1E0", VA = "0xCEC1E0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D73")]
		[Address(RVA = "0xCEC1E8", Offset = "0xCEC1E8", VA = "0xCEC1E8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0xCEC1F0", Offset = "0xCEC1F0", VA = "0xCEC1F0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0xCEC1F8", Offset = "0xCEC1F8", VA = "0xCEC1F8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0xCEC200", Offset = "0xCEC200", VA = "0xCEC200", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0xCEC31C", Offset = "0xCEC31C", VA = "0xCEC31C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0xCEC7D0", Offset = "0xCEC7D0", VA = "0xCEC7D0")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x20007CE")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6002D79")]
		[Address(RVA = "0xCEC82C", Offset = "0xCEC82C", VA = "0xCEC82C")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6002D7A")]
		[Address(RVA = "0xCEC830", Offset = "0xCEC830", VA = "0xCEC830")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002D7B")]
		[Address(RVA = "0xCEC8F8", Offset = "0xCEC8F8", VA = "0xCEC8F8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D7C")]
		[Address(RVA = "0xCEC900", Offset = "0xCEC900", VA = "0xCEC900", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D7D")]
		[Address(RVA = "0xCEC908", Offset = "0xCEC908", VA = "0xCEC908", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0xCEC910", Offset = "0xCEC910", VA = "0xCEC910", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0xCEC918", Offset = "0xCEC918", VA = "0xCEC918", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0xCEC920", Offset = "0xCEC920", VA = "0xCEC920", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0xCECA08", Offset = "0xCECA08", VA = "0xCECA08", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0xCECB78", Offset = "0xCECB78", VA = "0xCECB78")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x20007CF")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6002D83")]
		[Address(RVA = "0xCECBC0", Offset = "0xCECBC0", VA = "0xCECBC0", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D84")]
		[Address(RVA = "0xCECBF4", Offset = "0xCECBF4", VA = "0xCECBF4")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x20007D0")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002D85")]
		[Address(RVA = "0xCECC3C", Offset = "0xCECC3C", VA = "0xCECC3C")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6002D86")]
		[Address(RVA = "0xCECC40", Offset = "0xCECC40", VA = "0xCECC40")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002D87")]
		[Address(RVA = "0xCECCF0", Offset = "0xCECCF0", VA = "0xCECCF0", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0xCECD24", Offset = "0xCECD24", VA = "0xCECD24", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0xCECD2C", Offset = "0xCECD2C", VA = "0xCECD2C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0xCECD34", Offset = "0xCECD34", VA = "0xCECD34", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0xCECD3C", Offset = "0xCECD3C", VA = "0xCECD3C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0xCECD44", Offset = "0xCECD44", VA = "0xCECD44", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0xCECD4C", Offset = "0xCECD4C", VA = "0xCECD4C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002D8E")]
		[Address(RVA = "0xCECD98", Offset = "0xCECD98", VA = "0xCECD98", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002D8F")]
		[Address(RVA = "0xCECED8", Offset = "0xCECED8", VA = "0xCECED8")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x20007D1")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6002D90")]
		[Address(RVA = "0xCECF20", Offset = "0xCECF20", VA = "0xCECF20")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6002D91")]
		[Address(RVA = "0xCECF24", Offset = "0xCECF24", VA = "0xCECF24")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002D92")]
		[Address(RVA = "0xCECFEC", Offset = "0xCECFEC", VA = "0xCECFEC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0xCECFF4", Offset = "0xCECFF4", VA = "0xCECFF4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0xCECFFC", Offset = "0xCECFFC", VA = "0xCECFFC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0xCED004", Offset = "0xCED004", VA = "0xCED004", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0xCED00C", Offset = "0xCED00C", VA = "0xCED00C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0xCED014", Offset = "0xCED014", VA = "0xCED014", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002D98")]
		[Address(RVA = "0xCED20C", Offset = "0xCED20C", VA = "0xCED20C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0xCED3D8", Offset = "0xCED3D8", VA = "0xCED3D8")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x20007D2")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0xCED420", Offset = "0xCED420", VA = "0xCED420", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0xCED428", Offset = "0xCED428", VA = "0xCED428")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x20007D3")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0xCED470", Offset = "0xCED470", VA = "0xCED470")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0xCED474", Offset = "0xCED474", VA = "0xCED474")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0xCED524", Offset = "0xCED524", VA = "0xCED524", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0xCED52C", Offset = "0xCED52C", VA = "0xCED52C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0xCED534", Offset = "0xCED534", VA = "0xCED534", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0xCED53C", Offset = "0xCED53C", VA = "0xCED53C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0xCED544", Offset = "0xCED544", VA = "0xCED544", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0xCED54C", Offset = "0xCED54C", VA = "0xCED54C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0xCED554", Offset = "0xCED554", VA = "0xCED554", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DA5")]
		[Address(RVA = "0xCED5A0", Offset = "0xCED5A0", VA = "0xCED5A0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002DA6")]
		[Address(RVA = "0xCED7A4", Offset = "0xCED7A4", VA = "0xCED7A4")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6002DA7")]
		[Address(RVA = "0xCED958", Offset = "0xCED958", VA = "0xCED958")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x20007D4")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6002DA8")]
		[Address(RVA = "0xCED9A0", Offset = "0xCED9A0", VA = "0xCED9A0")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6002DA9")]
		[Address(RVA = "0xCED9A4", Offset = "0xCED9A4", VA = "0xCED9A4")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002DAA")]
		[Address(RVA = "0xCEDA6C", Offset = "0xCEDA6C", VA = "0xCEDA6C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DAB")]
		[Address(RVA = "0xCEDA74", Offset = "0xCEDA74", VA = "0xCEDA74", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0xCEDA7C", Offset = "0xCEDA7C", VA = "0xCEDA7C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAD")]
		[Address(RVA = "0xCEDA84", Offset = "0xCEDA84", VA = "0xCEDA84", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0xCEDA8C", Offset = "0xCEDA8C", VA = "0xCEDA8C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DAF")]
		[Address(RVA = "0xCEDA94", Offset = "0xCEDA94", VA = "0xCEDA94", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0xCEDB80", Offset = "0xCEDB80", VA = "0xCEDB80", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002DB1")]
		[Address(RVA = "0xCEDC7C", Offset = "0xCEDC7C", VA = "0xCEDC7C")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x20007D5")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002DB2")]
		[Address(RVA = "0xCEDCC4", Offset = "0xCEDCC4", VA = "0xCEDCC4")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6002DB3")]
		[Address(RVA = "0xCEDCC8", Offset = "0xCEDCC8", VA = "0xCEDCC8")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0xCEDD90", Offset = "0xCEDD90", VA = "0xCEDD90", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0xCEDD98", Offset = "0xCEDD98", VA = "0xCEDD98", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0xCEDDA0", Offset = "0xCEDDA0", VA = "0xCEDDA0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB7")]
		[Address(RVA = "0xCEDDA8", Offset = "0xCEDDA8", VA = "0xCEDDA8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0xCEDDB0", Offset = "0xCEDDB0", VA = "0xCEDDB0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0xCEDDB8", Offset = "0xCEDDB8", VA = "0xCEDDB8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DBA")]
		[Address(RVA = "0xCEDEDC", Offset = "0xCEDEDC", VA = "0xCEDEDC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0xCEE138", Offset = "0xCEE138", VA = "0xCEE138")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x20007D6")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0xCEE190", Offset = "0xCEE190", VA = "0xCEE190")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0xCEE194", Offset = "0xCEE194", VA = "0xCEE194")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0xCEE25C", Offset = "0xCEE25C", VA = "0xCEE25C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0xCEE264", Offset = "0xCEE264", VA = "0xCEE264", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0xCEE26C", Offset = "0xCEE26C", VA = "0xCEE26C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0xCEE274", Offset = "0xCEE274", VA = "0xCEE274", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0xCEE2F4", Offset = "0xCEE2F4", VA = "0xCEE2F4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DC3")]
		[Address(RVA = "0xCEE2FC", Offset = "0xCEE2FC", VA = "0xCEE2FC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DC4")]
		[Address(RVA = "0xCEE498", Offset = "0xCEE498", VA = "0xCEE498", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002DC5")]
		[Address(RVA = "0xCEE588", Offset = "0xCEE588", VA = "0xCEE588")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x20007D7")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6002DC6")]
		[Address(RVA = "0xCEE5D0", Offset = "0xCEE5D0", VA = "0xCEE5D0")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6002DC7")]
		[Address(RVA = "0xCEE5D4", Offset = "0xCEE5D4", VA = "0xCEE5D4")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002DC8")]
		[Address(RVA = "0xCEE69C", Offset = "0xCEE69C", VA = "0xCEE69C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DC9")]
		[Address(RVA = "0xCEE6A4", Offset = "0xCEE6A4", VA = "0xCEE6A4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DCA")]
		[Address(RVA = "0xCEE6AC", Offset = "0xCEE6AC", VA = "0xCEE6AC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCB")]
		[Address(RVA = "0xCEE6B4", Offset = "0xCEE6B4", VA = "0xCEE6B4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCC")]
		[Address(RVA = "0xCEE6BC", Offset = "0xCEE6BC", VA = "0xCEE6BC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DCD")]
		[Address(RVA = "0xCEE6C4", Offset = "0xCEE6C4", VA = "0xCEE6C4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DCE")]
		[Address(RVA = "0xCEE7B4", Offset = "0xCEE7B4", VA = "0xCEE7B4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002DCF")]
		[Address(RVA = "0xCEE8A4", Offset = "0xCEE8A4", VA = "0xCEE8A4")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x20007D8")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0xCEE8EC", Offset = "0xCEE8EC", VA = "0xCEE8EC")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0xCEE8F0", Offset = "0xCEE8F0", VA = "0xCEE8F0")]
		[RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0xCEE9B8", Offset = "0xCEE9B8", VA = "0xCEE9B8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0xCEE9C0", Offset = "0xCEE9C0", VA = "0xCEE9C0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6002DD4")]
		[Address(RVA = "0xCEE9C8", Offset = "0xCEE9C8", VA = "0xCEE9C8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD5")]
		[Address(RVA = "0xCEE9D0", Offset = "0xCEE9D0", VA = "0xCEE9D0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD6")]
		[Address(RVA = "0xCEE9D8", Offset = "0xCEE9D8", VA = "0xCEE9D8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DD7")]
		[Address(RVA = "0xCEE9E0", Offset = "0xCEE9E0", VA = "0xCEE9E0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0xCEEB0C", Offset = "0xCEEB0C", VA = "0xCEEB0C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0xCEEDB4", Offset = "0xCEEDB4", VA = "0xCEEDB4")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6002DDA")]
		[Address(RVA = "0xCEEE6C", Offset = "0xCEEE6C", VA = "0xCEEE6C")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x20007D9")]
	public enum eTermType
	{
		[Token(Token = "0x400293C")]
		Text,
		[Token(Token = "0x400293D")]
		Font,
		[Token(Token = "0x400293E")]
		Texture,
		[Token(Token = "0x400293F")]
		AudioClip,
		[Token(Token = "0x4002940")]
		GameObject,
		[Token(Token = "0x4002941")]
		Sprite,
		[Token(Token = "0x4002942")]
		Material,
		[Token(Token = "0x4002943")]
		Child,
		[Token(Token = "0x4002944")]
		Mesh,
		[Token(Token = "0x4002945")]
		TextMeshPFont,
		[Token(Token = "0x4002946")]
		Object
	}
	[Token(Token = "0x20007DA")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4002948")]
		Normal = 1,
		[Token(Token = "0x4002949")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x20007DB")]
	public class TermData
	{
		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x400294B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x400294C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x400294D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x400294E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0xCEEEC4", Offset = "0xCEEEC4", VA = "0xCEEEC4")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0xCEEFD8", Offset = "0xCEEFD8", VA = "0xCEEFD8")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0xCEF0BC", Offset = "0xCEF0BC", VA = "0xCEF0BC")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0xCEF110", Offset = "0xCEF110", VA = "0xCEF110")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6002DDF")]
		[Address(RVA = "0xCEF2B0", Offset = "0xCEF2B0", VA = "0xCEF2B0")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE0")]
		[Address(RVA = "0xCEF2E4", Offset = "0xCEF2E4", VA = "0xCEF2E4")]
		public void Validate()
		{
		}

		[Token(Token = "0x6002DE1")]
		[Address(RVA = "0xCEF4E0", Offset = "0xCEF4E0", VA = "0xCEF4E0")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE2")]
		[Address(RVA = "0xCEF568", Offset = "0xCEF568", VA = "0xCEF568")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0xCEF630", Offset = "0xCEF630", VA = "0xCEF630")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6002DE4")]
		[Address(RVA = "0xCEF718", Offset = "0xCEF718", VA = "0xCEF718")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x20007DC")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x17000734")]
		public string Filter
		{
			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0xCEF810", Offset = "0xCEF810", VA = "0xCEF810")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0xCEF818", Offset = "0xCEF818", VA = "0xCEF818")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6002DE5")]
		[Address(RVA = "0xCEF7E0", Offset = "0xCEF7E0", VA = "0xCEF7E0")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20007DD")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0xCEF820", Offset = "0xCEF820", VA = "0xCEF820")]
		public void Start()
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0xCEF874", Offset = "0xCEF874", VA = "0xCEF874")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20007DE")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x17000735")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6002DEA")]
			[Address(RVA = "0xCEF87C", Offset = "0xCEF87C", VA = "0xCEF87C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0xCEF9CC", Offset = "0xCEF9CC", VA = "0xCEF9CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0xCEFA50", Offset = "0xCEFA50", VA = "0xCEFA50")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0xCEFA74", Offset = "0xCEFA74", VA = "0xCEFA74")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20007DF")]
	[AddComponentMenu("I2/Localization/I2 Localize Callback")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6002DEE")]
		[Address(RVA = "0xCEFA7C", Offset = "0xCEFA7C", VA = "0xCEFA7C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6002DEF")]
		[Address(RVA = "0xCEFB54", Offset = "0xCEFB54", VA = "0xCEFB54")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0xCEFBF8", Offset = "0xCEFBF8", VA = "0xCEFBF8")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0xCEFC14", Offset = "0xCEFC14", VA = "0xCEFC14")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20007E0")]
	public class HindiFixer
	{
		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0xCEFC88", Offset = "0xCEFC88", VA = "0xCEFC88")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0xCF0094", Offset = "0xCF0094", VA = "0xCF0094")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20007E2")]
	public static class I2Utils
	{
		[Token(Token = "0x4002955")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x4002956")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x4002957")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0xCEBFF4", Offset = "0xCEBFF4", VA = "0xCEBFF4")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0xCF0120", Offset = "0xCF0120", VA = "0xCF0120")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0xCF0348", Offset = "0xCF0348", VA = "0xCF0348")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0xCF03F0", Offset = "0xCF03F0", VA = "0xCF03F0")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0xCF0694", Offset = "0xCF0694", VA = "0xCF0694")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0xCF0368", Offset = "0xCF0368", VA = "0xCF0368")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0xCF0818", Offset = "0xCF0818", VA = "0xCF0818")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0xCF0AAC", Offset = "0xCF0AAC", VA = "0xCF0AAC")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0xCF0AB4", Offset = "0xCF0AB4", VA = "0xCF0AB4")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6002E00")]
		[Address(RVA = "0xCF0B84", Offset = "0xCF0B84", VA = "0xCF0B84")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0xCF0BE4", Offset = "0xCF0BE4", VA = "0xCF0BE4")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0xCF0D20", Offset = "0xCF0D20", VA = "0xCF0D20")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6002E03")]
		public static H FindInParents<H>(Transform tr) where H : Component
		{
			return null;
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0xCF0E44", Offset = "0xCF0E44", VA = "0xCF0E44")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0xCF0EF0", Offset = "0xCF0EF0", VA = "0xCF0EF0")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20007E4")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6002E09")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20007E5")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x20007E6")]
		public struct ParamValue
		{
			[Token(Token = "0x400295C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x400295D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x400295A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x400295B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0xCF0F88", Offset = "0xCF0F88", VA = "0xCF0F88", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0xCF104C", Offset = "0xCF104C", VA = "0xCF104C")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0xCF122C", Offset = "0xCF122C", VA = "0xCF122C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0xCF12E4", Offset = "0xCF12E4", VA = "0xCF12E4", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0xCF12F4", Offset = "0xCF12F4", VA = "0xCF12F4")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0xCF1424", Offset = "0xCF1424", VA = "0xCF1424")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0xCF14A4", Offset = "0xCF14A4", VA = "0xCF14A4")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20007E7")]
	public struct LocalizedString
	{
		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0xCF152C", Offset = "0xCF152C", VA = "0xCF152C")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0xCF15F0", Offset = "0xCF15F0", VA = "0xCF15F0")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6002E13")]
		[Address(RVA = "0xCF162C", Offset = "0xCF162C", VA = "0xCF162C")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6002E14")]
		[Address(RVA = "0xCF1530", Offset = "0xCF1530", VA = "0xCF1530", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20007E8")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6002E15")]
		[Address(RVA = "0xCF1680", Offset = "0xCF1680", VA = "0xCF1680", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0xCF17B0", Offset = "0xCF17B0", VA = "0xCF17B0", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0xCF1830", Offset = "0xCF1830", VA = "0xCF1830", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0xCF1838", Offset = "0xCF1838", VA = "0xCF1838")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x20007E9")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6002E19")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x20007EA")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x17000736")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0xCF1840", Offset = "0xCF1840", VA = "0xCF1840")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E1B")]
		[Address(RVA = "0xCF1C1C", Offset = "0xCF1C1C", VA = "0xCF1C1C")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6002E1C")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E1D")]
		[Address(RVA = "0xCF1CD8", Offset = "0xCF1CD8", VA = "0xCF1CD8")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6002E1E")]
		[Address(RVA = "0xCF1DFC", Offset = "0xCF1DFC", VA = "0xCF1DFC")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E1F")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E20")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6002E21")]
		[Address(RVA = "0xCF1C74", Offset = "0xCF1C74", VA = "0xCF1C74")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6002E22")]
		[Address(RVA = "0xCF1E5C", Offset = "0xCF1E5C", VA = "0xCF1E5C")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20007EB")]
	public class RTLFixer
	{
		[Token(Token = "0x6002E23")]
		[Address(RVA = "0xCF1F98", Offset = "0xCF1F98", VA = "0xCF1F98")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6002E24")]
		[Address(RVA = "0xCF2220", Offset = "0xCF2220", VA = "0xCF2220")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6002E25")]
		[Address(RVA = "0xCF1FA4", Offset = "0xCF1FA4", VA = "0xCF1FA4")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6002E26")]
		[Address(RVA = "0xCF3428", Offset = "0xCF3428", VA = "0xCF3428")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x20007EC")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x4002968")]
		Hamza = 65152,
		[Token(Token = "0x4002969")]
		Alef = 65165,
		[Token(Token = "0x400296A")]
		AlefHamza = 65155,
		[Token(Token = "0x400296B")]
		WawHamza = 65157,
		[Token(Token = "0x400296C")]
		AlefMaksoor = 65159,
		[Token(Token = "0x400296D")]
		AlefMaksora = 64508,
		[Token(Token = "0x400296E")]
		HamzaNabera = 65161,
		[Token(Token = "0x400296F")]
		Ba = 65167,
		[Token(Token = "0x4002970")]
		Ta = 65173,
		[Token(Token = "0x4002971")]
		Tha2 = 65177,
		[Token(Token = "0x4002972")]
		Jeem = 65181,
		[Token(Token = "0x4002973")]
		H7aa = 65185,
		[Token(Token = "0x4002974")]
		Khaa2 = 65189,
		[Token(Token = "0x4002975")]
		Dal = 65193,
		[Token(Token = "0x4002976")]
		Thal = 65195,
		[Token(Token = "0x4002977")]
		Ra2 = 65197,
		[Token(Token = "0x4002978")]
		Zeen = 65199,
		[Token(Token = "0x4002979")]
		Seen = 65201,
		[Token(Token = "0x400297A")]
		Sheen = 65205,
		[Token(Token = "0x400297B")]
		S9a = 65209,
		[Token(Token = "0x400297C")]
		Dha = 65213,
		[Token(Token = "0x400297D")]
		T6a = 65217,
		[Token(Token = "0x400297E")]
		T6ha = 65221,
		[Token(Token = "0x400297F")]
		Ain = 65225,
		[Token(Token = "0x4002980")]
		Gain = 65229,
		[Token(Token = "0x4002981")]
		Fa = 65233,
		[Token(Token = "0x4002982")]
		Gaf = 65237,
		[Token(Token = "0x4002983")]
		Kaf = 65241,
		[Token(Token = "0x4002984")]
		Lam = 65245,
		[Token(Token = "0x4002985")]
		Meem = 65249,
		[Token(Token = "0x4002986")]
		Noon = 65253,
		[Token(Token = "0x4002987")]
		Ha = 65257,
		[Token(Token = "0x4002988")]
		Waw = 65261,
		[Token(Token = "0x4002989")]
		Ya = 65265,
		[Token(Token = "0x400298A")]
		AlefMad = 65153,
		[Token(Token = "0x400298B")]
		TaMarboota = 65171,
		[Token(Token = "0x400298C")]
		PersianPe = 64342,
		[Token(Token = "0x400298D")]
		PersianChe = 64378,
		[Token(Token = "0x400298E")]
		PersianZe = 64394,
		[Token(Token = "0x400298F")]
		PersianGaf = 64402,
		[Token(Token = "0x4002990")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20007ED")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x4002992")]
		Hamza = 1569,
		[Token(Token = "0x4002993")]
		Alef = 1575,
		[Token(Token = "0x4002994")]
		AlefHamza = 1571,
		[Token(Token = "0x4002995")]
		WawHamza = 1572,
		[Token(Token = "0x4002996")]
		AlefMaksoor = 1573,
		[Token(Token = "0x4002997")]
		AlefMagsora = 1609,
		[Token(Token = "0x4002998")]
		HamzaNabera = 1574,
		[Token(Token = "0x4002999")]
		Ba = 1576,
		[Token(Token = "0x400299A")]
		Ta = 1578,
		[Token(Token = "0x400299B")]
		Tha2 = 1579,
		[Token(Token = "0x400299C")]
		Jeem = 1580,
		[Token(Token = "0x400299D")]
		H7aa = 1581,
		[Token(Token = "0x400299E")]
		Khaa2 = 1582,
		[Token(Token = "0x400299F")]
		Dal = 1583,
		[Token(Token = "0x40029A0")]
		Thal = 1584,
		[Token(Token = "0x40029A1")]
		Ra2 = 1585,
		[Token(Token = "0x40029A2")]
		Zeen = 1586,
		[Token(Token = "0x40029A3")]
		Seen = 1587,
		[Token(Token = "0x40029A4")]
		Sheen = 1588,
		[Token(Token = "0x40029A5")]
		S9a = 1589,
		[Token(Token = "0x40029A6")]
		Dha = 1590,
		[Token(Token = "0x40029A7")]
		T6a = 1591,
		[Token(Token = "0x40029A8")]
		T6ha = 1592,
		[Token(Token = "0x40029A9")]
		Ain = 1593,
		[Token(Token = "0x40029AA")]
		Gain = 1594,
		[Token(Token = "0x40029AB")]
		Fa = 1601,
		[Token(Token = "0x40029AC")]
		Gaf = 1602,
		[Token(Token = "0x40029AD")]
		Kaf = 1603,
		[Token(Token = "0x40029AE")]
		Lam = 1604,
		[Token(Token = "0x40029AF")]
		Meem = 1605,
		[Token(Token = "0x40029B0")]
		Noon = 1606,
		[Token(Token = "0x40029B1")]
		Ha = 1607,
		[Token(Token = "0x40029B2")]
		Waw = 1608,
		[Token(Token = "0x40029B3")]
		Ya = 1610,
		[Token(Token = "0x40029B4")]
		AlefMad = 1570,
		[Token(Token = "0x40029B5")]
		TaMarboota = 1577,
		[Token(Token = "0x40029B6")]
		PersianPe = 1662,
		[Token(Token = "0x40029B7")]
		PersianChe = 1670,
		[Token(Token = "0x40029B8")]
		PersianZe = 1688,
		[Token(Token = "0x40029B9")]
		PersianGaf = 1711,
		[Token(Token = "0x40029BA")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x20007EE")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6002E27")]
		[Address(RVA = "0xCF3430", Offset = "0xCF3430", VA = "0xCF3430")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x20007EF")]
	internal class ArabicTable
	{
		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x40029BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x17000737")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xCF4CF0", Offset = "0xCF4CF0", VA = "0xCF4CF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0xCF345C", Offset = "0xCF345C", VA = "0xCF345C")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0xCF4D74", Offset = "0xCF4D74", VA = "0xCF4D74")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20007F0")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x40029BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x40029C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0xCF4F08", Offset = "0xCF4F08", VA = "0xCF4F08")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20007F1")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x40029C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x40029C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0xCF4F38", Offset = "0xCF4F38", VA = "0xCF4F38")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0xCF5468", Offset = "0xCF5468", VA = "0xCF5468")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0xCF2420", Offset = "0xCF2420", VA = "0xCF2420")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0xCF5690", Offset = "0xCF5690", VA = "0xCF5690")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0xCF5C60", Offset = "0xCF5C60", VA = "0xCF5C60")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0xCF5B1C", Offset = "0xCF5B1C", VA = "0xCF5B1C")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0xCF57EC", Offset = "0xCF57EC", VA = "0xCF57EC")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0xCF5F4C", Offset = "0xCF5F4C", VA = "0xCF5F4C")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x20007F2")]
	[AddComponentMenu("I2/Localization/SetLanguage Button")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x40029C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0xCF5FA0", Offset = "0xCF5FA0", VA = "0xCF5FA0")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0xCF5FA4", Offset = "0xCF5FA4", VA = "0xCF5FA4")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0xCF603C", Offset = "0xCF603C", VA = "0xCF603C")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x20007F3")]
	[AddComponentMenu("I2/Localization/SetLanguage Dropdown")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6002E38")]
		[Address(RVA = "0xCF6044", Offset = "0xCF6044", VA = "0xCF6044")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0xCF629C", Offset = "0xCF629C", VA = "0xCF629C")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0xCF6388", Offset = "0xCF6388", VA = "0xCF6388")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x20007F4")]
	public class StringObfucator
	{
		[Token(Token = "0x40029C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0xCF6390", Offset = "0xCF6390", VA = "0xCF6390")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0xCF6684", Offset = "0xCF6684", VA = "0xCF6684")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0xCF6600", Offset = "0xCF6600", VA = "0xCF6600")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0xCF675C", Offset = "0xCF675C", VA = "0xCF675C")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0xCF6468", Offset = "0xCF6468", VA = "0xCF6468")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0xCF67E8", Offset = "0xCF67E8", VA = "0xCF67E8")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x20007F5")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x40029C6")]
		Array = 1,
		[Token(Token = "0x40029C7")]
		Class,
		[Token(Token = "0x40029C8")]
		Value,
		[Token(Token = "0x40029C9")]
		IntValue,
		[Token(Token = "0x40029CA")]
		DoubleValue,
		[Token(Token = "0x40029CB")]
		BoolValue,
		[Token(Token = "0x40029CC")]
		FloatValue
	}
	[Token(Token = "0x20007F6")]
	public class JSONNode
	{
		[Token(Token = "0x20007F7")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40029CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000744")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002E76")]
				[Address(RVA = "0xCF8928", Offset = "0xCF8928", VA = "0xCF8928", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000745")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E78")]
				[Address(RVA = "0xCF8970", Offset = "0xCF8970", VA = "0xCF8970", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E73")]
			[Address(RVA = "0xCF69BC", Offset = "0xCF69BC", VA = "0xCF69BC")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002E74")]
			[Address(RVA = "0xCF890C", Offset = "0xCF890C", VA = "0xCF890C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E75")]
			[Address(RVA = "0xCF8910", Offset = "0xCF8910", VA = "0xCF8910", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E77")]
			[Address(RVA = "0xCF8930", Offset = "0xCF8930", VA = "0xCF8930", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002E79")]
			[Address(RVA = "0xCF8978", Offset = "0xCF8978", VA = "0xCF8978", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0xCF8A10", Offset = "0xCF8A10", VA = "0xCF8A10", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007F8")]
		[CompilerGenerated]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40029D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40029D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x40029D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x40029D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000746")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002E80")]
				[Address(RVA = "0xCF907C", Offset = "0xCF907C", VA = "0xCF907C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000747")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E82")]
				[Address(RVA = "0xCF90C4", Offset = "0xCF90C4", VA = "0xCF90C4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xCF6A74", Offset = "0xCF6A74", VA = "0xCF6A74")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0xCF8A14", Offset = "0xCF8A14", VA = "0xCF8A14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xCF8ACC", Offset = "0xCF8ACC", VA = "0xCF8ACC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0xCF8FCC", Offset = "0xCF8FCC", VA = "0xCF8FCC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0xCF8F1C", Offset = "0xCF8F1C", VA = "0xCF8F1C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002E81")]
			[Address(RVA = "0xCF9084", Offset = "0xCF9084", VA = "0xCF9084", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002E83")]
			[Address(RVA = "0xCF90CC", Offset = "0xCF90CC", VA = "0xCF90CC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002E84")]
			[Address(RVA = "0xCF9178", Offset = "0xCF9178", VA = "0xCF9178", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000738")]
		public virtual JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xCF6870", Offset = "0xCF6870", VA = "0xCF6870", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xCF6878", Offset = "0xCF6878", VA = "0xCF6878", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000739")]
		public virtual JSONNode this[string aKey]
		{
			[Token(Token = "0x6002E45")]
			[Address(RVA = "0xCF687C", Offset = "0xCF687C", VA = "0xCF687C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xCF6884", Offset = "0xCF6884", VA = "0xCF6884", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700073A")]
		public virtual string Value
		{
			[Token(Token = "0x6002E47")]
			[Address(RVA = "0xCF6888", Offset = "0xCF6888", VA = "0xCF6888", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E48")]
			[Address(RVA = "0xCF68C8", Offset = "0xCF68C8", VA = "0xCF68C8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700073B")]
		public virtual int Count
		{
			[Token(Token = "0x6002E49")]
			[Address(RVA = "0xCF68CC", Offset = "0xCF68CC", VA = "0xCF68CC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700073C")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0xCF694C", Offset = "0xCF694C", VA = "0xCF694C", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__17))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073D")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0xCF69F0", Offset = "0xCF69F0", VA = "0xCF69F0")]
			[IteratorStateMachine(typeof(<get_DeepChilds>d__19))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073E")]
		public virtual int AsInt
		{
			[Token(Token = "0x6002E52")]
			[Address(RVA = "0xCF6B28", Offset = "0xCF6B28", VA = "0xCF6B28", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xCF6B5C", Offset = "0xCF6B5C", VA = "0xCF6B5C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700073F")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xCF6B98", Offset = "0xCF6B98", VA = "0xCF6B98", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xCF6BD0", Offset = "0xCF6BD0", VA = "0xCF6BD0", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000740")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xCF6C0C", Offset = "0xCF6C0C", VA = "0xCF6C0C", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xCF6C44", Offset = "0xCF6C44", VA = "0xCF6C44", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000741")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xCF6C80", Offset = "0xCF6C80", VA = "0xCF6C80", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xCF6D38", Offset = "0xCF6D38", VA = "0xCF6D38", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000742")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xCF6DB0", Offset = "0xCF6DB0", VA = "0xCF6DB0", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000743")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xCF6E28", Offset = "0xCF6E28", VA = "0xCF6E28", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0xCF686C", Offset = "0xCF686C", VA = "0xCF686C", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002E4A")]
		[Address(RVA = "0xCF68D4", Offset = "0xCF68D4", VA = "0xCF68D4", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0xCF6934", Offset = "0xCF6934", VA = "0xCF6934", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002E4C")]
		[Address(RVA = "0xCF693C", Offset = "0xCF693C", VA = "0xCF693C", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0xCF6944", Offset = "0xCF6944", VA = "0xCF6944", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0xCF6AA8", Offset = "0xCF6AA8", VA = "0xCF6AA8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0xCF6AE8", Offset = "0xCF6AE8", VA = "0xCF6AE8", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002E5C")]
		[Address(RVA = "0xCF6EA0", Offset = "0xCF6EA0", VA = "0xCF6EA0")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6002E5D")]
		[Address(RVA = "0xCF6F40", Offset = "0xCF6F40", VA = "0xCF6F40")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6002E5E")]
		[Address(RVA = "0xCF6F7C", Offset = "0xCF6F7C", VA = "0xCF6F7C")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E5F")]
		[Address(RVA = "0xCF7004", Offset = "0xCF7004", VA = "0xCF7004")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E60")]
		[Address(RVA = "0xCF701C", Offset = "0xCF701C", VA = "0xCF701C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E61")]
		[Address(RVA = "0xCF7028", Offset = "0xCF7028", VA = "0xCF7028", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002E62")]
		[Address(RVA = "0xCF7030", Offset = "0xCF7030", VA = "0xCF7030")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6002E63")]
		[Address(RVA = "0xCF71FC", Offset = "0xCF71FC", VA = "0xCF71FC")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6002E64")]
		[Address(RVA = "0xCF7A94", Offset = "0xCF7A94", VA = "0xCF7A94", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002E65")]
		[Address(RVA = "0xCF7A98", Offset = "0xCF7A98", VA = "0xCF7A98")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6002E66")]
		[Address(RVA = "0xCF7B18", Offset = "0xCF7B18", VA = "0xCF7B18")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6002E67")]
		[Address(RVA = "0xCF7B68", Offset = "0xCF7B68", VA = "0xCF7B68")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6002E68")]
		[Address(RVA = "0xCF7BB8", Offset = "0xCF7BB8", VA = "0xCF7BB8")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6002E69")]
		[Address(RVA = "0xCF7C08", Offset = "0xCF7C08", VA = "0xCF7C08")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6002E6A")]
		[Address(RVA = "0xCF7DD8", Offset = "0xCF7DD8", VA = "0xCF7DD8")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6002E6B")]
		[Address(RVA = "0xCF7FD8", Offset = "0xCF7FD8", VA = "0xCF7FD8")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6002E6C")]
		[Address(RVA = "0xCF8450", Offset = "0xCF8450", VA = "0xCF8450")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002E6D")]
		[Address(RVA = "0xCF84A0", Offset = "0xCF84A0", VA = "0xCF84A0")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6002E6E")]
		[Address(RVA = "0xCF84F0", Offset = "0xCF84F0", VA = "0xCF84F0")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002E6F")]
		[Address(RVA = "0xCF8540", Offset = "0xCF8540", VA = "0xCF8540")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6002E70")]
		[Address(RVA = "0xCF86D4", Offset = "0xCF86D4", VA = "0xCF86D4")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6002E71")]
		[Address(RVA = "0xCF8850", Offset = "0xCF8850", VA = "0xCF8850")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6002E72")]
		[Address(RVA = "0xCF8904", Offset = "0xCF8904", VA = "0xCF8904")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x20007F9")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x20007FA")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40029D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40029DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x40029DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700074C")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002E97")]
				[Address(RVA = "0xCF9F74", Offset = "0xCF9F74", VA = "0xCF9F74", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E99")]
				[Address(RVA = "0xCF9FBC", Offset = "0xCF9FBC", VA = "0xCF9FBC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E93")]
			[Address(RVA = "0xCF971C", Offset = "0xCF971C", VA = "0xCF971C")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002E94")]
			[Address(RVA = "0xCF9D60", Offset = "0xCF9D60", VA = "0xCF9D60", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E95")]
			[Address(RVA = "0xCF9D7C", Offset = "0xCF9D7C", VA = "0xCF9D7C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E96")]
			[Address(RVA = "0xCF9F24", Offset = "0xCF9F24", VA = "0xCF9F24")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002E98")]
			[Address(RVA = "0xCF9F7C", Offset = "0xCF9F7C", VA = "0xCF9F7C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0xCF9FC4", Offset = "0xCF9FC4", VA = "0xCF9FC4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0xCFA070", Offset = "0xCFA070", VA = "0xCFA070", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007FB")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x40029DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700074E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EA0")]
				[Address(RVA = "0xCFA288", Offset = "0xCFA288", VA = "0xCFA288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EA2")]
				[Address(RVA = "0xCFA2D0", Offset = "0xCFA2D0", VA = "0xCFA2D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E9C")]
			[Address(RVA = "0xCF97C4", Offset = "0xCF97C4", VA = "0xCF97C4")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002E9D")]
			[Address(RVA = "0xCFA074", Offset = "0xCFA074", VA = "0xCFA074", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E9E")]
			[Address(RVA = "0xCFA090", Offset = "0xCFA090", VA = "0xCFA090", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0xCFA238", Offset = "0xCFA238", VA = "0xCFA238")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0xCFA290", Offset = "0xCFA290", VA = "0xCFA290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x17000748")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002E85")]
			[Address(RVA = "0xCF917C", Offset = "0xCF917C", VA = "0xCF917C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E86")]
			[Address(RVA = "0xCF926C", Offset = "0xCF926C", VA = "0xCF926C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000749")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6002E87")]
			[Address(RVA = "0xCF937C", Offset = "0xCF937C", VA = "0xCF937C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002E88")]
			[Address(RVA = "0xCF93DC", Offset = "0xCF93DC", VA = "0xCF93DC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700074A")]
		public override int Count
		{
			[Token(Token = "0x6002E89")]
			[Address(RVA = "0xCF948C", Offset = "0xCF948C", VA = "0xCF948C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700074B")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0xCF9698", Offset = "0xCF9698", VA = "0xCF9698", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0xCF94D4", Offset = "0xCF94D4", VA = "0xCF94D4", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0xCF9584", Offset = "0xCF9584", VA = "0xCF9584", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0xCF9638", Offset = "0xCF9638", VA = "0xCF9638", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0xCF9750", Offset = "0xCF9750", VA = "0xCF9750", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__14))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0xCF97EC", Offset = "0xCF97EC", VA = "0xCF97EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0xCF9A04", Offset = "0xCF9A04", VA = "0xCF9A04", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0xCF9C84", Offset = "0xCF9C84", VA = "0xCF9C84", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0xCF7A0C", Offset = "0xCF7A0C", VA = "0xCF7A0C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20007FC")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x20007FE")]
		[CompilerGenerated]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x40029E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40029E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x40029E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000754")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002EB8")]
				[Address(RVA = "0xCFB9EC", Offset = "0xCFB9EC", VA = "0xCFB9EC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000755")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EBA")]
				[Address(RVA = "0xCFBA34", Offset = "0xCFBA34", VA = "0xCFBA34", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0xCFAB88", Offset = "0xCFAB88", VA = "0xCFAB88")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xCFB7C4", Offset = "0xCFB7C4", VA = "0xCFB7C4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0xCFB7E0", Offset = "0xCFB7E0", VA = "0xCFB7E0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xCFB99C", Offset = "0xCFB99C", VA = "0xCFB99C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xCFB9F4", Offset = "0xCFB9F4", VA = "0xCFB9F4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xCFBA3C", Offset = "0xCFBA3C", VA = "0xCFBA3C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0xCFBAE8", Offset = "0xCFBAE8", VA = "0xCFBAE8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20007FF")]
		[CompilerGenerated]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40029E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40029E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40029E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x40029EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000756")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002EC1")]
				[Address(RVA = "0xCFBD3C", Offset = "0xCFBD3C", VA = "0xCFBD3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000757")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002EC3")]
				[Address(RVA = "0xCFBD84", Offset = "0xCFBD84", VA = "0xCFBD84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xCFAC30", Offset = "0xCFAC30", VA = "0xCFAC30")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0xCFBAEC", Offset = "0xCFBAEC", VA = "0xCFBAEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0xCFBB08", Offset = "0xCFBB08", VA = "0xCFBB08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002EC0")]
			[Address(RVA = "0xCFBCEC", Offset = "0xCFBCEC", VA = "0xCFBCEC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002EC2")]
			[Address(RVA = "0xCFBD44", Offset = "0xCFBD44", VA = "0xCFBD44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40029E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000750")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0xCFA2D8", Offset = "0xCFA2D8", VA = "0xCFA2D8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0xCFA3E0", Offset = "0xCFA3E0", VA = "0xCFA3E0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000751")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0xCFA4AC", Offset = "0xCFA4AC", VA = "0xCFA4AC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0xCFA54C", Offset = "0xCFA54C", VA = "0xCFA54C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000752")]
		public override int Count
		{
			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0xCFA628", Offset = "0xCFA628", VA = "0xCFA628", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000753")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0xCFAB04", Offset = "0xCFAB04", VA = "0xCFAB04", Slot = "16")]
			[IteratorStateMachine(typeof(<get_Childs>d__14))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EA8")]
		[Address(RVA = "0xCFA678", Offset = "0xCFA678", VA = "0xCFA678", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002EA9")]
		[Address(RVA = "0xCFA78C", Offset = "0xCFA78C", VA = "0xCFA78C", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6002EAA")]
		[Address(RVA = "0xCFA850", Offset = "0xCFA850", VA = "0xCFA850", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0xCFA92C", Offset = "0xCFA92C", VA = "0xCFA92C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0xCFABBC", Offset = "0xCFABBC", VA = "0xCFABBC", Slot = "29")]
		[IteratorStateMachine(typeof(<GetEnumerator>d__15))]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0xCFAC58", Offset = "0xCFAC58", VA = "0xCFAC58", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0xCFB09C", Offset = "0xCFB09C", VA = "0xCFB09C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002EB0")]
		[Address(RVA = "0xCFB560", Offset = "0xCFB560", VA = "0xCFB560", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6002EB1")]
		[Address(RVA = "0xCF7918", Offset = "0xCF7918", VA = "0xCF7918")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000800")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000758")]
		public override string Value
		{
			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0xCFBD8C", Offset = "0xCFBD8C", VA = "0xCFBD8C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xCFBD94", Offset = "0xCFBD94", VA = "0xCFBD94", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6002EC6")]
		[Address(RVA = "0xCF6F10", Offset = "0xCF6F10", VA = "0xCF6F10")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6002EC7")]
		[Address(RVA = "0xCF8418", Offset = "0xCF8418", VA = "0xCF8418")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6002EC8")]
		[Address(RVA = "0xCF83A8", Offset = "0xCF83A8", VA = "0xCF83A8")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6002EC9")]
		[Address(RVA = "0xCF83E0", Offset = "0xCF83E0", VA = "0xCF83E0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6002ECA")]
		[Address(RVA = "0xCF8370", Offset = "0xCF8370", VA = "0xCF8370")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6002ECB")]
		[Address(RVA = "0xCFBD9C", Offset = "0xCFBD9C", VA = "0xCFBD9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002ECC")]
		[Address(RVA = "0xCFBDF4", Offset = "0xCFBDF4", VA = "0xCFBDF4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6002ECD")]
		[Address(RVA = "0xCFBE4C", Offset = "0xCFBE4C", VA = "0xCFBE4C", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000801")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x17000759")]
		public override JSONNode this[int aIndex]
		{
			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0xCFC17C", Offset = "0xCFC17C", VA = "0xCFC17C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0xCFC1DC", Offset = "0xCFC1DC", VA = "0xCFC1DC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700075A")]
		public override JSONNode this[string aKey]
		{
			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0xCFC25C", Offset = "0xCFC25C", VA = "0xCFC25C", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0xCFC2CC", Offset = "0xCFC2CC", VA = "0xCFC2CC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700075B")]
		public override int AsInt
		{
			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0xCFC52C", Offset = "0xCFC52C", VA = "0xCFC52C", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0xCFC5B0", Offset = "0xCFC5B0", VA = "0xCFC5B0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700075C")]
		public override float AsFloat
		{
			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0xCFC638", Offset = "0xCFC638", VA = "0xCFC638", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0xCFC6BC", Offset = "0xCFC6BC", VA = "0xCFC6BC", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700075D")]
		public override double AsDouble
		{
			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0xCFC744", Offset = "0xCFC744", VA = "0xCFC744", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0xCFC7C8", Offset = "0xCFC7C8", VA = "0xCFC7C8", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700075E")]
		public override bool AsBool
		{
			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0xCFC850", Offset = "0xCFC850", VA = "0xCFC850", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0xCFC8D4", Offset = "0xCFC8D4", VA = "0xCFC8D4", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700075F")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0xCFC95C", Offset = "0xCFC95C", VA = "0xCFC95C", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000760")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0xCFC9C4", Offset = "0xCFC9C4", VA = "0xCFC9C4", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ECE")]
		[Address(RVA = "0xCF922C", Offset = "0xCF922C", VA = "0xCF922C")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6002ECF")]
		[Address(RVA = "0xCFA39C", Offset = "0xCFA39C", VA = "0xCFA39C")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6002ED0")]
		[Address(RVA = "0xCFC11C", Offset = "0xCFC11C", VA = "0xCFC11C")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0xCFC354", Offset = "0xCFC354", VA = "0xCFC354", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0xCFC3D4", Offset = "0xCFC3D4", VA = "0xCFC3D4", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0xCFC45C", Offset = "0xCFC45C", VA = "0xCFC45C")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0xCFC474", Offset = "0xCFC474", VA = "0xCFC474")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ED9")]
		[Address(RVA = "0xCFC48C", Offset = "0xCFC48C", VA = "0xCFC48C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EDA")]
		[Address(RVA = "0xCFC4A4", Offset = "0xCFC4A4", VA = "0xCFC4A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002EDB")]
		[Address(RVA = "0xCFC4AC", Offset = "0xCFC4AC", VA = "0xCFC4AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002EDC")]
		[Address(RVA = "0xCFC4EC", Offset = "0xCFC4EC", VA = "0xCFC4EC", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000802")]
	public static class JSON
	{
		[Token(Token = "0x6002EE7")]
		[Address(RVA = "0xCFCA2C", Offset = "0xCFCA2C", VA = "0xCFCA2C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
